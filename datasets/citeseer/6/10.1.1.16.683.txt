tracing large scale peer peer system hour life gnutella evangelos markatos institute computer science ics foundation research technology forth box crete gr greece ics forth gr markatos csi forth gr technical report ics forth appears ccgrid second ieee international symposium cluster computing grid peer peer computing networking new model communication computation started gain significant acceptance 
model enables clients take active role information dissemination process may significantly increase performance reliability system eliminating traditional notion server single point failure potential bottleneck 
peer peer systems enjoy significant continually increasing popularity clear understanding magnitude traffic patterns potential performance bottlenecks peer peer networks 
study traffic patterns gnutella popular largescale peer peer system show traffic patterns bursty time scales 
especially focus types queries submitted gnutella peers associated replies 
show queries submitted exhibit significant amounts locality queries frequently repeatedly submitted 
propose simple gnutella caching mechanisms cache query responses 
trace driven simulation evaluate effectiveness gnutella caching show improves performance factor 
new model communication computation called peer peer networking started gain significant acceptance 
contrary traditional client server model peer peer computing enables clients act servers servers act clients 
way clients take active role information dissemination process may significantly increase performance reliability system eliminating traditional notion server single point failure bottleneck system 
widely known peer peer system napster file sharing utility enabled hundreds thousands users efficiently share files including mp encoded songs internet 
capitalizing success napster peer peer file sharing systems developed 
include gnutella kazaa technical details systems vary significantly share peer peer philosophy enabling peers store deliver content peers 
file sharing peer peer systems www napster com efficient execution highly parallel distributed applications capitalizing availability idle cycles home computers 
applications range systems search extra terrestrial intelligence systems search cure aids 
peer peer systems appeared relatively popularity increased rapidly couple years 
example network traffic measurements university wisconsin suggest period april traffic represented total network traffic time web related traffic accounted 
napster traffic reduced percentage peer peer traffic increased 
example measurement university wisconsin suggest october peer peer traffic reached total traffic time web related traffic little 
measurements suggests traffic demands peer peer systems represent significant continually increasing percentage network traffic clear understanding magnitude traffic patterns potential performance bottlenecks peer peer networks 
study traffic patterns gnutella popular large scale peer peer system 
especially focus types queries submitted gnutella peers associated replies 
identify locality patterns exist gnutella queries propose simple effective caching mechanisms exploit 
accurately contributions ffl modified open source gnutella client produced detailed traces queries received forwarded client 
ffl installed clients different continents concurrently gathered traces gnutella queries 
ffl studied traffic due gnutella query requests query responses traffic bursty continues remain bursty time scales 
ffl studied gnutella query traces showed net wisc edu show significant amount temporal locality gnutella queries submitted duration tracing study 
average gnutella query submitted times 
ffl proposed studied simple caching policy caches gnutella query results limited amount time 
simulation results show simple policy significantly reduce network traffic generated gnutella client factor needing small amount main memory 
rest organized follows section ii presents gather gnutella traces 
section iii compares approach previous places appropriate context 
section iv presents traffic characteristics gnutella network 
section presents evaluates caching approach 
section vi concludes 
ii 
methodology gnutella architecture gnutella overlay network superimposed top internet 
gnutella peers connect neighbors pointto point connections 
order locate file peer sends query request neighbors 
peer receives query request searches local files match query returns query response potential match 
addition peer forwards query request neighbors received query request 
avoid query requests flooding network query ttl time live field usually initialized 
node receives query request positive ttl decrements ttl field forwarding 
queries ttl forwarded 
queries may travel hops network gnutella network free queries 
gnutella query circle gnutella network forever possible visit node hops life 
sure node serve query twice query request identified unique identification called guid 
node receives query guid encountered past drops query forwarded query 
network monitors order gather monitor gnutella network gather trace information modifications open source client gnutella modified gather report various statistics gnutella traffic including queries query replies time live fields ttls installed tracing probes greece crete norway bergen usa rochester ny 
started tracing tools simultaneously thursday oct am est 
tracing lasted hour 
probe recorded queries replies received 
received queries probe removed duplicates queries www com linux unix guid seen forwarded past 
iii 
previous study large scale peer peer systems general gnutella particular new topic 
adar huberman studied gnutella traffic hour period :10.1.1.12.6173
close users shared files responses returned hosts 
findings independently confirmed saroiu significant heterogeneity lack cooperation peers participating gnutella 
saroiu findings suggests small percentage clients appeared server characteristics connected network served significant number files 
disparity clients characteristics may significantly limit scalability reliability performance gnutella network peer peer systems general 
anderson observed traffic gnutella hour period reported results including distribution ttl values distribution hops queries distribution hops packets jovanovic studied gnutella connection graphs identified significant performance problems including effect limits reachability nodes gnutella network 
short circuiting effect attributed highly variable network latencies described example follows suppose node connected node path hops long path hops long 
typical gnutella operation query reach hops long path forwarded neighbors eventually reach nodes reachable hops 
point time query reach hops long path time correctly drop query forward neighbors 
possible network latencies query reaches hops long path hops long path 
case forward query neighbors query eventually reach nodes reachable hop 
time query reaches hops long path drop query 
case called short circuit effect query reached nodes 
jovanovic experiments suggest due short circuiting typical gnutella peer reaches peers typically reach 
studied gnutella traffic proposed caching improve performance 
exist differences 
collect gnutella traces simultaneously different points globe order sure approach specific geographic region 
second definition caching fundamentally different 
example caches query results independently node query return result delivering incomplete query responses 
furthermore perfor host query requests sec avg 
rochester crete norway table queries second average 
mance metrics completely differ 
uses traditional performance metric hit rate show gnutella query result caching hit rate defined alternative performance metrics need considered 
gnutella query caching viewed extension web document caching search engine query caching :10.1.1.160.3726
gnutella query caching significant differences previous caching approaches including different temporal locality characteristics ii different performance benefits iii different staleness properties 
example search engine query result safely cached hours days 
contrary gnutella query results may easily stale minutes 
iv 
measurements gnutella traffic characteristics gnutella query requests experiment report number gnutella query requests observed client 
table shows average number queries received second clients 
immediately notice clients received similar amount query requests ranging requests second 
surprising notice geographic location client direct effect number queries receives 
example client rochester received query requests second client southern europe crete 
probably topology gnutella network necessarily follow underlying geographical network clients geographically away united states may receive large amount traffic 
shows actual number queries received second clients function time 
immediately see load client varies rapidly time 
example query requests second received client norway 
client load varied orders magnitude 
similarly load clients varied orders magnitude 
see burstiness traffic holds time scales plot number queries submitted time interval function time interval 
intervals second seconds minute minutes 
shows small intervals seconds traffic bursty varies orders magnitude 
interest space show results client crete 
results clients similar 
number queries second time seconds crete number queries second time seconds norway number queries second time seconds rochester fig 

queries second 
traffic remains bursty larger intervals minute minutes long burstiness exceed order magnitude 
gnutella query responses experiment investigate traffic patterns result responses gnutella queries 
table ii shows average number responses second passed clients 
see client crete handled responses second client rochester handled responses second client norway handled responses second 
plots actual number responses seen second clients 
immediately see traffic due responses bursty 
number queries time interval time slots second norway number queries time interval time slots seconds norway number queries time interval time slots minute norway number queries time interval time slots minutes norway fig 

query requests time interval 
host replies sec avg 
rochester crete norway table ii query responses second average 
probe location ttl ttl crete rochester norway table iii percentage queries ttl hit 
example cases clients received query responses second 
responses queries matched lot files 
example popular queries encountered measurements query game matched files including computers games songs images happened game titles 
interestingly query matched misspelled song titles theme games bond golden eye mp 
queries produce large number responses queries produce responses 
table iii second column shows percentage queries produced response hit 
see percentage clients 
low percentages probably due fact clients installed measuring gnutella traffic share files generate reply query 
query requests terminate clients ttl equal forwarded neighbors generate responses 
factor effects clients measured number replies percentage queries ttl greater 
queries ttl greater terminated clients forwarded clients 
removed queries ttl equal calculations measured responses queries ttl greater 
resulting percentage shown third column table iii 
see queries ttl greater replies 
percentage higher measured queries low roughly speaking queries generate response 
see burstiness query responses holds time scales plot number query responses received time interval function time interval 
intervals second seconds minute minutes 
see small intervals seconds traffic bursty varies orders magnitude 
see traffic remains bursty larger intervals minute minute intervals 
example minimum maximum number responses registered minute interval respectively 
difference close orders magnitude 
observation indication traffic due gnutella replies may self similar web traffic ethernet traffic 
experimentation needed due space limitations show results client crete 
results clients similar 
number replies time seconds crete number replies time seconds norway number replies time seconds rochester fig 

query responses second 
able reach final 
ttls life queries experiment measure distribution ttls various queries 
plots number queries ttl 
see number queries decreases exponentially increasing ttl 
example client crete sees queries ttl equal queries times ttl equal queries times ttl equal queries times ttl equal queries queries ttls lower probably result erroneous clients 
queries ttls larger generate excessive amounts traffic usually forwarded gnutella clients 
replies time interval time slots second replies time interval time slots seconds replies time interval time slots minute replies time interval time slots minutes fig 

query replies time interval 
probe location ttl ttl crete rochester norway table iv average number time query submitted 
times ttl equal queries times ttl equal queries times ttl equal 
see cases number queries ttl equal times larger number queries ttl equal 
exponential behavior probably due broadcast approach followed gnutella protocol gnutella peer forwards query neighbors turn forward query neighbors 
number gnutella query messages increases roughly exponentially query propagated network 
recall time query request forwarded ttl decremented 
query requests small ttls exponentially query requests large ttls 
locality measurements far shown traffic patterns gnutella query requests associated responses 
established query requests query responses exhibit high degree burstiness 
query responses exhibit indications self similarity 
turn attention locality patterns may exist gnutella queries 
table iv shows average number times query submitted 
second column shows average queries third column shows average queries ttl greater 
queries forwarded clients 
see average number submissions query queries queries ttl greater 
shows percentage queries submitted percentage queries twice 
number queries ttl crete number queries ttl norway number queries ttl rochester fig 

ttl distribution ttls 
see cases queries submitted submitted 
queries submitted twice queries submitted times 
interesting see identical clients 
query caching table iv established gnutella query requests exhibit significant amount locality 
experiments explore locality exploited order reduce network traffic 
locality usually exploited ways caching frequently accessed data 
example web caching content delivery systems store copies frequently accessed data proxies caches located percentage submitted times submissions crete percentage submitted times submissions norway percentage submitted times submissions rochester fig 

query popularity 
close clients request 
caching query results peer peer systems gnutella significantly different caching query results documents web caching systems 
main difference gnutella caching web caching traditional web caching content cached proxies provided defined web servers 
contrary gnutella content basically sum responses query request provided defined single server computed composing results content provided peers 
peer originally issued query peer complete knowledge content query response 
illustrate difference web caching peer query coverage query coverage fig 

query caching coverage responses gnutella 
peer caching example shown suppose gnutella peer receives query request cnn neighbor ttl equal forwards query neighbors receives query responses forwards responses collected represent files matched cnn reachable hops neighbors suppose point time receives query request cnn neighbor ttl equal case just give results query request include files match cnn reachable furthermore ttl queries different responses query correspond different coverage gnutella network 
just response query satisfy query query requests textually match 
gnutella peer may see query request times requests necessarily produce results especially originate different neighbors different ttls 
gnutella caching systems need take account text query request query ttl neighbor issued request general factors define coverage query response 
gnutella caching different web caching employed order improve performance 
proposed approach gnutella caching follows client receives query neighbor checks cache see query text ttl seen past 
query query sent past neighbor returns responses exist cache query 
hand finds query cache query sent neighbor forwards query receives results combines locally cached results query forwards combined result cache design cache size traditional caching systems reserve predefined amount space cache store useful data 
best possible limited size cache web caching systems give preference small documents order fill cache documents possible 
believe gnutella caching behave differently mainly due fact gnutella query responses time sensitive 
gnutella network highly dynamic gnutella peers join leave network frequently 
responses query request may date small time period 
query responses gnutella cached kept cache small amount time ranges seconds minutes 
objective gnutella caching keep limited size cache full possible keep data cache time period long improve performance short avoid sending stale responses 
evaluating gnutella query caching traditionally performance metric evaluate caching approaches cache hit rate 
cache hit rate percentage requests cache measured period time 
explained gnutella queries may find entire set responses cache queries may find portion responses cache 
type queries clearly categorized cache hits second type queries treated cache hits cache misses 
queries second type clearly characterized hits misses definitely participate caching system improve performance retrieving potentially large portion responses gnutella cache 
queries help reduce network traffic gnutella cache systems forward neighbor neighbors 
evaluate effectiveness gnutella query caching measure hit rate measure network traffic reduction achieved caching precisely percentage reduction query requests sent network 
network traffic reduction designed build trace driven simulator takes input produced gnutella query traces simulates caching approach proposed measures performance improvement system 
plots reduction query request packets sent network function caching interval 
see caching query results low minute reduces note forward list combined results remove cached results received past 
query requests reduction caching interval minutes norway crete rochester fig 

reduction query request packets sent network 
memory size needed kbytes caching interval minutes norway crete rochester fig 

cache size needed 
query request packets 
caching minutes results reduction 
caching half hour results close network traffic reduction 
effectively caching query results minutes reduces number query requests half 
results agree query popularity patterns observed table iv 
example table iv suggests query ttl submitted average close times 
ideal caching algorithm cache queries indefinitely take account sender query achieve hit rate associated query request packets reduction 
simulations suggest ideal caching approach caching gnutella query response half hour results query request packets reduction close close ideal 
cache size requirements caching reduces network traffic significantly requires peer contributes amount local memory store cached query responses 
size local memory called cache size turns large limiting factor deployment caching 
cache size includes memory needed store query responses metadata need organize responses appropriate efficient data structures 
reader notice cache size may vary time proposed gnutella caching approach keeps responses time interval shown number responses may vary 
busy time interval cache size larger low traffic time interval 
plots average cache size function caching interval 
immediately see memory demands low 
example caching query responses associated metadata minute required kbytes 
caching query responses long minutes required mbyte memory 
caching long minutes required mbytes memory 
memory needs gnutella caching considered small 
gnutella peers easily invest kbytes mbytes memory order improve performance reduce network traffic 
vi 
studied traffic gnutella large peerto peer application 
installed gnutella clients countries different continents 
identified locality patterns exist gnutella query requests proposed simple caching policy caches query responses short amount time 
traced driven simulation studied performance policy 
measurements experimental evaluation conclude ffl peer peer systems gnutella bursty traffic pattern 
query requests query responses bursty traffic patterns observed time scales 
ffl queries submitted gnutella show significant amount locality 
measurements suggest average query submitted times hour period 
ffl caching gnutella queries small amount time may result significant performance improvements 
simulations suggest caching gnutella query responses minutes may reduce query requests sent network factor 
ffl caching gnutella queries requires small amount memory 
experiments suggest gnutella query caching cases required mbytes memory 
believe peer peer caching systems beneficial today increasingly important near larger number join peer peer networks 
david clark face face peer peer networking computer vol 
pp 
jan 
eric dan david anderson jeff cobb matt seti home massively distributed computing seti computing science vol 
pp 

home www org dave plonka uw madison napster traffic measurement net doit wisc edu data napster 
dave plonka analysis napster ip flow sizes network analysis times april nlanr net april pdf 
josh pieper robert manual www com linux unix doc html 
adar huberman free riding gnutella monday vol :10.1.1.12.6173

saroiu gummadi gribble measurement study peerto peer file sharing systems proceedings multimedia computing networking mmcn 
anderson analysis traffic gnutella network www cse ucsd edu classes wi cse projects reports pdf 
jovanovic modeling scale peer peer networks case study gnutella thesis university cincinnati 
sripanidkulchai popularity gnutella queries implications scaling 
jia wang survey web caching schemes internet acm computer communication review vol 
pp 

evangelos markatos caching search engine query results computer communications vol 
pp 

luo naughton form proxy caching web sites proceedings vldb 
crovella bestavros self similarity world wide web trac evidence possible causes ieee acm transactions 
networking vol 
pp 

leland taqqu willinger wilson self similar nature ethernet traffic ieee acm transactions networking vol 
pp 

markatos main memory caching web documents computer networks isdn systems vol 
pp 

