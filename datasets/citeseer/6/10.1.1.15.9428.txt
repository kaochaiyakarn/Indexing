phoneme grapheme conversion vocabulary words speech recognition bart walter daelemans language technology group university antwerp mail uia ua ac nd october report show vocabulary items oovs recognized phoneme recognition reasonably reliably transcribed orthographically machine learning techniques 
specifically show baseline performance machine learning approach phoneme grapheme conversion different levels artificial noise added simulating phoneme recognizer errors ii provide results real phoneme recognition data iii provide detailed error analysis 
problems speech understanding reliable recognition words speech recognizer vocabulary vocabulary items oovs 
current speech recognition technology information sources restricted pronunciation lexicon typically words produce word graphs lattices possible sequences words detected input sequence chosen 
approach handle words restricted lexicon 
possible solution problem detect oovs way confidence scores provided speech recognizer produce phoneme string phoneme recognizer phoneme grapheme converter find orthographic transcription oov 
report concentrates final step proposed solution phoneme conversion 
phoneme grapheme converter takes input string phonemes generated phoneme recognizer gives output string graphemes spelling word 
phoneme strings generated speech recognizer free errors typical error rate phoneme recognizer 
motivation experiments reported hypothesis machine learning techniques adapt peculiarities errors phoneme recognizer provide necessary robustness accuracy phoneme grapheme conversion task provided sufficient training data pairs words corresponding output phoneme recognizer 
research funded iwt programme project automatic transcription normalisation speech 
research consortium consists ccl esat leuven antwerpen gent 
project aims generic basic research speech recognition normalization unrestricted speech automatic speech case study 
project partners esat cooperation reported 
colleagues erik tjong kim sang help 
section introduce machine learning method report report results applying lexical database pronunciation lexicon varying levels artificially generated noise 
section report experiments dataset words text corresponding output esat phoneme recognizer sections provides thorough error analysis 
section sums assesses feasibility approach practice 
baseline experiments experiments described carried find accuracy phoneme grapheme conversion ideal case errors phoneme transcription find controlled setting performance decreases error rate phoneme strings increases 
celex baayen van rijn lexicon containing dutch words graphemes pronunciation taken dataset timbl daelemans memory learner developed university tilburg university antwerp carry task phoneme conversion 
subsections machine learning method introduced design experiments method artificial noise generation described 
results error analysis provided 
machine learning method experiments reported timbl memory machine learner 
memory learning hypothesis domains language processing relatively regularities compete sub regularities exceptions lazy form learning keeping memory examples similarity reasoning examples classification time superior eager learning approach extracting rules abstractions examples handle new cases daelemans van den bosch zavrel 
furthermore results research similar task grapheme phoneme conversion daelemans van den bosch daelemans van den bosch daelemans van den bosch daelemans van den bosch daelemans suggest memory learning may suited similar task phoneme grapheme conversion 
timbl software package memory learning implementing wide range algorithms weighting metrics parameters 
take input patterns instances feature values corresponding class symbol supervised example learning 
learning phase timbl stores instances memory collects statistical data instances 
evaluate performance timbl task test set containing previously unseen instances timbl predicts class new instances comparing instances training set 
new instance gets label similar instance training set 
describe algorithms experiments full description implementation available algorithms metrics refer daelemans 
phoneme recognizer mentioned separate component esat speech recognizer phoneme recognition esat uses speech recognizer vocabulary phonemes large vocabulary words 
context dependent acoustic modelling statistical model phoneme sequences gram estimated dataset containing hours speech read aloud different dataset phoneme grapheme conversion experiments 
basic similarity instances computed overlap metric 
case symbolic nominal data phonemes features means similarity patterns number features patterns value 
obviously general give bad results features equally relevant solving particular task 
information theoretic approach information gain form normalized number values feature gain ratio see quinlan weigh relevance different features 
call algorithm ib ig introduced daelemans van den bosch 
factor importance memory learning number neighbors taken account extrapolate parameter 
experiments algorithm daelemans van den bosch weijters decision treebased heuristic approximation memory learning efficient ib ig 
data preprocessing machine learning set chose phoneme word represented surrounding context instance pattern classified grapheme corresponding phoneme patterns classified phonemes 
implies properly grapheme phoneme strings word equal length 
phonemic representations rarely long corresponding representation aligned 
string graphemes shorter string phonemes null symbol inserted 
example alignment dutch word taxi phoneme string taxi inserted null symbols expectation maximization em algorithm implemented version em called van den bosch daelemans revised starts randomly inserting null symbols grapheme strings shorter phoneme string uses initial alignment computing probabilities phoneme grapheme pair aligned strings expectation step 
probabilities plausible alignment maximization step 
procedure repeated long total probability new alignment increases daelemans van den bosch 
reverse case shorter grapheme string compound graphemes 
example dutch word sleep pronunciation replaced graphemes aa compound grapheme amount context experiments set phonemes left right phoneme focus position 
dutch word represented instances left context focus right context class symbol pattern class output indicates representation phoneme focus occurs fourth position positions represent phonemes context focus phoneme symbol indicating word boundary 

compute phoneme nearest phonemes terms value difference 

set threshold 
phoneme representation word phoneme phoneme representation generate random number 
random number threshold replace phoneme randomly chosen phoneme set nearest phonemes original phoneme 
algorithm add noise dataset avoid possible influence alphabetic ordering celex data results order words randomized word level patterns created 
adding artificial noise data order find performance machine learner decreases amount noise data increases words robust adaptive machine learner algorithm add percentage artificial noise data 
noise added celex word level creating patterns restricted experiment substitutions phonemes similar nearest phonemes ignoring kinds errors phoneme recognizers insertions deletions 
compute nearest phonemes particular phoneme modified value difference metric cost salzberg 
metric compute pair values particular feature specific distance similarity occurrence distributions different possible output classes 
computing focus phoneme feature dataset easily derive phonemes confusable phoneme doing phoneme conversion 
table presents list containing nearest phonemes phonemes occurring celex data 
method noise generation simulate type confusion sounds phoneme recognizer may 
experimental results error analysis ib ig levels generated noise ranging steps 
performance timbl parameter setting phoneme nearest phonemes value table phonemes celex confusable phonemes level noise obtained doing fold cross validation cv dataset partitioned pieces part test set remaining parts serving training set averages test sets computed 
experiment generalization accuracy unseen data kept grapheme level number graphemes correctly predicted word level number words graphemes correctly predicted 
results experiments tables show timbl accuracy number correct classifications divided total number classifications word level table grapheme level table 
results ordered amount noise data timbl algorithm parameters 
percentages tables averages results obtained doing cv 
remarkable deviations averages detected cv runs standard deviations parentheses tables 
best performing timbl algorithm ib ig difference ib ig large 
noise efficient version ib ig comes close sensitive noisy input 
see reliable input phoneme grapheme conversion easy task graphemes words correct 
errors noise case mainly due ambiguous phonemes 
types ambiguous phonemes 
frequent type contains phonemes different possible spelling forms spelling form belonging particular word conventional contextual cues decide spelling form needed 
examples type listed table 
ambiguous phonemic timbl correct phoneme representation prediction conversion fil file au ou ei ij words assimilation processes may introduce ambiguity phonemes ambiguous 
phoneme example usually converted grapheme follows possible necessary convert cases contextual evidence timbl decide alternatives 
examples second type ambiguous phonemes 
kind phonemic timbl correct assimilation representation prediction conversion st word word lop lop lob st parameter settings timbl noise ib ig ib ig ib ig table artificial noise experiments accuracy word level percentages parameter settings timbl noise ib ig ib ig ib ig table artificial noise experiments accuracy grapheme level percentages words parts words pronunciation different spelling result incorrect predictions 
timbl predicts spelling phoneme string celex contains lot words lady 
goes string lid rs timbl converted leaders leader pronounced way lid 
errors kind frequent 
ambiguous words phonemes classified correctly including previous phonemes context timbl needs syntactic cues resolve ambiguity 
typical example dutch verb worden pronounced second third person singular tense spelled differently word person wordt second third person 
syntactic cues timbl find correct spelling 
examples timbl output listed 
phonemic timbl correct representation prediction conversion ond ond timbl incorrect predictions due ambiguity errors occur words spelled way typically dutch mainly words come language added dutch vocabulary adapting dutch spelling conventions phonemic timbl correct representation prediction conversion pep typical speech recognizer error rate 
results indicate phoneme grapheme conversion data containing noise carried accuracy grapheme level accuracy word level 
presupposes course errors phoneme recognizer correspond method artificial noise 
phoneme recognizer errors context dependent case artificial noise 
context dependency may task easier 
hand artificial noise contains substitution errors data phoneme recognizer contain insertion deletion errors making task harder 
section investigate phoneme grapheme conversion problem training data real phoneme recognizer 
type match cost phoneme exact match grapheme exactly matches compound grapheme represents oo 
phoneme exact match grapheme con phonemes see table exactly matching phoneme may confused aligned phoneme exact match confusable phonemes grapheme phoneme grapheme vowels consonants deletion grapheme aligned insertion phoneme aligned 
grapheme vowel consonant phoneme consonant vowel 
table costs dp algorithm grapheme phoneme pair alignment experiments phoneme recognizer dataset experiments real data consisted dutch text words resulting graphemes 
text transcription recording part corpus spoken dutch corpus person reading aloud story 
esat phoneme recognizer recording produce phonemic representation text 
reporting results giving detailed error analysis describe prepared corpus experiments 
data preprocessing artificial noise experiments grapheme strings shorter corresponding phoneme string aligned inserting null symbol grapheme strings longer shortened compound graphemes 
due frequent occurrence deletions phoneme strings corpus able em algorithm see section implementation requires grapheme string shorter long phoneme string 
shortened grapheme strings compound phonemes considerable number longer grapheme strings due deletions phoneme strings 
example word transcribed esat phoneme recognizer phoneme deleted 
introducing compound grapheme word possible way align word phoneme string inserting null symbol phoneme string resulting saf 
algorithm handles deletions effectively dynamic programming dp algorithm known dynamic time warping wagner fischer 
strings aligned algorithm computes alignment cost pair symbols strings stores cost matrix 
cost pair computed algorithm searches expensive way matrix 
implementation algorithm costs listed table 
running dp algorithm example grapheme string dan een phoneme string lov results alignment compound graphemes representing respectively ee ch ij sponsored dutch nwo flemish iwt see lands kun nl cgn htm 
phoneme strings null symbols example useful training material know previously unseen data deletions 
reason decided run experiments training set phoneme strings deletions corresponding words removed 
check deleting words lead decrease performance experiment set training set graphemes aligned null symbol deleted 
phoneme string example appear training set experimental setup second experimental set string resulted training instances phonemes null symbol 
different training material set ups conducted experiments results detailed error analysis reported section 
experiments test material words deletions removed test data 
experimental results error analysis deleted words deleted instances main experiments resulting total set ups find information spelling previous word leads accurate predictions ran experiments included information instances experiments information included 
spelling included replacing word boundary symbols instances second second grapheme previous word 
graphemes instances preceded set apart phonemes 
including spelling context example instances results instances left context focus right context class set ups ran timbl cv dataset parameter settings experiments celex data ib ig 
performance timbl word grapheme level experiment parameter setting shown table word level table grapheme level 
percentages tables averages results cv experiment 
encountered striking deviations averages standard deviations listed parentheses tables 
best scoring algorithm real data default timbl algorithm experiments timbl ib ig gives best results word level parameter settings timbl experiment ib ig ib ig ib ig spelling words deletions spelling words deletions spelling instances deletions spelling instances deletions table real data experiments accuracy word level percentages parameter settings timbl dataset ib ig ib ig ib ig spelling words deletions spelling words deletions spelling instances deletions spelling instances deletions table real data experiments accuracy grapheme level percentages difference ib ig large 
grapheme level best scoring algorithm ib ig 
word level results come close predicted artificial noise experiments expectation score best result 
grapheme level best result lies far expectations artificial noise experiments predicted score best result 
results tables indicate leaving words deletions entirely deleting graphemes aligned deletions lead decrease performance instances contain spelling previous word best results word level obtained training material words deletions removed 
including spelling previous word result better performance results experiments training material spelling included considerably lower certainly word level results experiments dataset spelling cues 
tables give general idea timbl performance find bad timbl predicts particular grapheme computed precision items class correct recall items class scores equation class dataset graphemes compound graphemes null symbol 
precision recall precision recall analyzing output experiment best results word level timbl ib ig dataset words deletions spelling cues average score timbl prediction large standard deviation sd 
table lists classes mean score minus sd mean score minus sd mean score mean score mean score plus sd mean score plus sd 
classes score undefined means predictions class wrong class predicted 
classes score undefined lower influence performance timbl infrequent dataset classes undefined score occur times classes occur times 
table clear compound graphemes major source errors nearly score average 
possible abandon concept compound graphemes explained earlier 
conclude section give example timbl best output column contains timbl output second column correct version part dataset 
obviously word example oov undefined bp zz fv zs pb rr th au bb dd dt eu ff gg kk mm nn ou pp sz tt td aa ee ei ij ll ng oo oe ss uu ui ch table scores timbl output correct version cafe zag en wild cathy zag hen wild haar zijn dan haar zijn hij wilde hij wilde het jog het wel haar ik aan haar het aan example timbl best output large vocabulary speech recognizer combination phoneme grapheme converter words interest oovs 
interesting look performance timbl oovs section deal 
analyzing vocabulary items dataset words marked oovs 
experimental set parameter setting picked oovs timbl output computed accuracy scores word table grapheme level table 
best scoring algorithm word level ib ig 
timbl performance lower oovs complete dataset performance grapheme level decreases performance word level takes enormous drop 
reasons poor performance word level deletions phoneme strings collection oovs contains words recognized deletions 
correspondence phoneme grapheme strings dataset timbl convert phoneme string deletions completely correct word timbl able convert recognized phonemes parameter settings timbl experiment ib ig ib ig ib ig spelling words deletions spelling words deletions spelling instances deletions spelling instances deletions table real data experiments accuracy word level oovs percentages parameter settings timbl dataset ib ig ib ig ib ig spelling words deletions spelling words deletions spelling instances deletions spelling instances deletions table real data experiments accuracy grapheme level oovs percentages correctly performance word level higher 
low accuracy word level mean timbl output useless 
underlined words phrases examples oovs converted timbl ib ig 
words transcribed correctly take effort readers correct version misspelled words 
obviously count misspelled word hardly resembles correct version bmw 
errors timbl equally distributed oovs compares expected number errors word length timbl average percentage errors grapheme level observed average number errors words length 
bars depict frequency words length see curves totally equal short oovs contain errors expected long oovs fewer errors 
words length observed number errors equal expected number 
bars illustrate shorter words higher expected number errors frequent longer words 
possibly useful post processing step integrate spelling correction phoneme grapheme converter 
priori spelling correction lead substantial increase accuracy word level incorrectly converted oovs containing errors just difficult spelling converter find alternatives 
shows oovs quite numerous output files experiment counted oovs certain amount errors word put averages graph 
numerous oovs incorrectly predicted graphemes word oovs oovs errors word frequent oovs 
get oovs mistakes word oovs right spelling correction lead increase word level accuracy 
timbl output correct version het wel jog het wel het aan het aan haar haar cathy zag de cathy zag de bmw cathy hem aan cathy hem aan example timbl best output oovs errors average errors frequency predicted errors average errors real data experiments average errors word report investigated feasibility phoneme grapheme conversion outof vocabulary items speech recognition ability machine learning methods task adapt errors produced phoneme recognizer 
discussed results experiments timbl memory learner task 
saw carry task perfectly clean dataset perfect phoneme recognition 
case correctly transcribed words feasible errors mainly related conventional lexical aspects dutch spelling 
adding artificial noise dataset substituting phonemes similar phonemes results drop accuracy word level 
dataset phoneme strings generated phoneme recognizer contains noise achieved similar result word level entire dataset 
performance oovs dataset especially interested word level graphemes correctly predicted 
low level accuracy may useful orthographically transcribed words recognized easily 
important problem real phoneme recognizer introduces lot deletions phonemes situation impossible handle current architecture system 
phoneme grapheme conversion oovs concentrate timbl task exhaustively optimise parameter settings information sources task trying solve problem deletions phoneme strings possibilities tune recognizer fewer deletions adapt learning regime account possible deletions spelling correction large vocabulary post processing module evaluating phoneme grapheme converter combination confidence measures average number words errors word average number words errors word real data experiments number words errors word oovs developed esat 
level error analysis try see far learning method succeeds adapting errors phoneme recognizer 
baayen van rijn 

celex lexical data base cd rom 
linguistic data consortium philadelphia pa daelemans van den bosch 

machine learning word pronunciation case abstraction 
proceedings sixth european conference speech communication technology eurospeech pages budapest hungary september 
cost salzberg 

weighted nearest neighbour algorithm learning symbolic features 
machine learning 
daelemans van den bosch 

neural network hyphenation 
aleksander taylor editors artificial neural networks proceedings international conference artificial neural networks pages amsterdam 
elsevier 
daelemans van den bosch 

language independent data oriented grapheme phoneme conversion 
van santen sproat olive hirschberg editors progress speech processing 
springer verlag berlin pages 
daelemans van den bosch weijters 

trees compression classification lazy learning algorithms 
artificial intelligence review 
daelemans van den bosch zavrel 

forgetting exceptions harmful language learning 
machine learning special issue natural language learning 
daelemans zavrel van der van den bosch 

timbl tilburg memory learner version guide 
ilk technical report tilburg university 
available ilk nl 

extracting modelling combining information speech recognition 
ph thesis leuven esat february 
van 

fast accurate acoustic modelling semi continuous hmm 
speech communication april 
van 

efficient search space representation large vocabulary continuous speech recognition 
speech communication january 

hmm acoustic modelling large vocabulary speech recognition 
ph thesis leuven esat november 
daelemans tjong kim sang 

meta learning phonemic annotation corpora 
van den bosch editors proceedings twelfth belgium netherlands artificial intelligence conference pages 
extended icml 
daelemans 

machine learning modeling dutch pronunciation variation 
editor computational linguistics netherlands 
selected papers tenth clin meeting pages 

alignment phonetic sequences 
technical report university toronto 
available www cs toronto edu 

new algorithm alignment phonetic sequences 
proceedings meeting north american chapter association computational linguistics pages seattle 
naacl 
quinlan 
programs machine learning 
morgan kaufmann san mateo ca 
van den bosch daelemans 

data oriented methods grapheme conversion 
proceedings th conference eacl pages 
van den bosch daelemans 
revised 

software tool automatic alignment developed university tilburg 
van den bosch daelemans 

forget full memory memorybased learning word pronunciation 
powers editor proceedings lap conll pages sydney australia 
wagner fischer 

string string correction problem 
journal association computing machinery 

