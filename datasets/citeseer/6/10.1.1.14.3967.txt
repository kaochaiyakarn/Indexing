recognising monitoring high level behaviours complex spatial environments nam nguyen hung bui venkatesh geoff west school computing university technology geoff cs edu au recognition activities sensory data important advanced surveillance systems enable prediction high level goals intentions target surveillance 
problem complicated sensory noise complex activity spanning large spatial temporal extents 
presents system recognising high level human activities multi camera video data complex spatial environments 
hidden markov memory model ahmem deal noise scalability 
ahmem extension hidden markov model ahmm allows represent richer class state dependent context free behaviours 
model supports integration low level sensory models efficient probabilistic inference 
experimental results showing ability system perform real time monitoring recognition complex behaviours people observing trajectories real complex indoor environment 
surveillance systems monitoring behaviour people focus research 
worked human motion recognition context gait recognition simple activity detection limited known spaces 
large area surveillance systems include vsam restricted complexity behaviours recognised 
challenges develop scalable systems recognition high level people behaviours large complex environments possibly extended time intervals 
review modeling recognising people behaviours especially highly structured behaviours aggarwal cai 
simple approach problem uses templates sensitive variance different patterns activity noise observations 
finite state machine fsm model high level activities account uncertainty model 
alternatively hidden markov models hmms widely tackling simple behaviours gestures gait recognition :10.1.1.131.2084
extensions basic hmm coupled hidden markov models chmms modeling human behaviours interactions variable length markov models vlmms locally optimise size behaviour models 
approaches employ flat model activities 
develop scalable systems high level behaviour recognition need framework utilizes inherent hierarchical structure 
recognizing high level semantically rich behaviours traditionally focus plan recognition 
sophisticated stochastic models representing high level behaviours dynamic bayesian networks dbn hidden markov models ahmm stochastic grammars including stochastic context free grammar scfg state dependent extension probabilistic state dependent grammars psdg :10.1.1.11.9133
area exception ahmm limited inference high level issue dealing low level noisy sensory models addressed 
attempts integrate high level structured behaviour models low level sensory models appeared 
oliver proposed layered hidden markov model classification results low layer inputs higher layer 
ivanov bobick proposed stage strategy low level basic hmms detect simple patterns behaviours high level outputs produced hmms interpreted parsed scfg model high level behaviours 
alternatively nguyen proposed fully integrated model representing high low level behaviours hidden markov model ahmm 
approaches shortcomings 
oliver separates task behaviour classification layer layer influence inference low level high level 
ivanov bobick framework restricted context free constraint underlying grammar 
complex behaviours especially goal directed behaviours state dependent evolution depends current state world non context free 
furthermore stage recognition strategy support online seamless probabilistic inference way low level sensory data high level behaviours 
nguyen framework restrictions limited expressive power ahmm 
context free ahmm entirely state dependent sense current behaviour dependent current environment state behaviours taken place previously 
system architecture recognition high level behaviours people large complex indoor environments 
novelty hidden markov memory model ahmem 
model expressive grammar models model state dependent behaviours time support online scalable efficient probabilistic inference high level behaviours low level data 
hierarchical nature model suitable natural hierarchy existing spatial regions making scalable larger complex environments 
organized follows 
overview surveillance system provided section 
ahmem framework behaviour modelling described section 
section presents experimental results implemented system real office type environment 
overview surveillance system surveillance system major components distributed tracking module behaviour recognition module see fig 

distributed tracking module extracts people trajectories multiple static cameras 
module implements architecture tracking algorithms described 
central module cm coordinate operations cameras maintain trajectories people scene 
camera processing module cpm camera tracks bounding box person camera fields view kalman filter 
outputs kalman filters sent cm time slice form trajectories objects scene 
trajectories passed behaviour recognition module infer behaviours higher levels 
camera fields view overlap person overlapping area may viewed cameras time 
case cm choose suitable camera track person 
usually cm assigns tracking person nearest camera person 
occlusion person assigned nearest camera offer clear non occluded view 
lost objects recovered matching procedure central module 
output distributed tracking module sequence coordinates object scene 
fig 
shows examples typical trajectories returned module 
behaviour recognition behaviour recognition module takes sequence observed coordinates returned tracking module de top level behaviours bottom level behaviours states observations time behaviour recognition distributed tracking cm ahmem coordinates lan cpm cpm cpm cpm camera camera camera camera 
system architecture 
rives probable high level behaviour matches observed sequence 
example tracked person approaches computer followed printer system predict activity performed person printing 
reality problem complicated factors 
firstly observations noisy due camera noise object occlusion 
secondly signature single activity may vary signatures different activities may look similar 
means simple pattern matching approach behaviour recognition perform poorly 
solution bayesian formulation involving issues 
firstly need model high level activity lead possible sequences observations 
words need model specifying conditional distribution denotes activity denotes sequence observations 
secondly need effi cient inference procedure compute probabilities different activities observed sequence 
give full distribution set possible behaviours 
behaviour computed desired 
employ hidden markov memory model ahmem underlying framework representational computational tasks 
hidden markov memory model hidden markov memory model ahmem extension ahmm probabilistic framework representing recognising complex behaviours uncertainty :10.1.1.11.9133
behaviour refined sequence simple behaviours lower levels 
rules refinement non deterministic stochastic desired 
language ahmm behaviour represented policy analogous policy markov decision processes mdp 
policy mdp simply selects action execution state policy allowed select policies recur sive manner 
policy selection function set applicable states set policies lower level select probability selects policy state addition policy terminating probability state representing chance terminating execution state hierarchy policies considered top level policy select policy execution terminates state new policy selected state 
policy bottom level select policies modelled markov chain termination state space state hidden hidden markov models considering set observations observation model policy hierarchy ahmm viewed stochastic grammar policies correspond set non terminal symbols selection probabilities policies correspond set stochastic production rules :10.1.1.131.2084
ahmm framework extension refinement rule dependent special state variable representing state environment 
ahmm language non context free type probabilistic state dependent grammar psdg 
due state dependency ahmm advantage scfg evolution complex especially goal directed behaviours depends current state environment relationship goal states 
ahmm restricted way policy selects lower level policy depends current state policies selected past 
prevents ahmm representing policies evolve number stages 
example behaviour printing specified stages going computer followed going printer followed exiting environment 
ahmm represent behaviour way remembering current stage execution 
ahmem removes restriction allowing policy internal memory domain policy uses memory variable remember current stage execution 
general form policy commences state memory variable initialised initial distribution time lower level policy terminates returns state memory variable updated transition probability importantly selection termination model policy dependent current state current memory probability selects current state probability current memory terminates state current memory original ahmm simply ahmem policies domain memory values singleton 
psdg reduced ahmem linear memory memory variable policy simply increased time updated 
ahmem expressiveness comparable models 
state dependent handle noisy observation state 
ideal language behaviour modelling surveillance domain 
describe example ahmem modelling behaviour hierarchy real office type environment 
example behaviour hierarchy store working table staff room camera library book cases camera camera left entrance corridor right entrance computer computer working table vision lab camera printer camera 
complex spatial environment 
environment consider consists regions corridor staff room vision lab see fig 
fig 

people enter exit scene left right entrance 
landmarks represent locations important objects environment computers printer book cases library store 
environment modeled grid cells 
cell coordinate person position represented state variable observation state coordinate returned distributed tracking component 
assume observation camera camera camera camera camera 
scene viewed cameras 
level level level go computer go printer go go library print library unclassified task policies environment access library walk exit policies corridor policies staff room policies vision lab enter staff room enter vision lab exit corridor left exit corridor right go computer go go library access library walk staff room exit staff room go computer go printer walk vision lab exit vision lab 
behaviour hierarchy 
neighbourhood true state 
camera observation model defined matrix specifying observation likelihood neighbourhood state 
fig 
shows level behaviour hierarchy defined environment 
level policies represent behaviours constrained single region 
example go landmark level policy takes person level policy specified transition model camera obser vation model parameters form hmm 
current state state observation neighbourhood parameters hmm tied 
conditional probability neighbourhood needs estimated 
learn parameters set training video se quences expectation maximization em algorithm hmm tied parameters 
stage go computer stage go printer stage stage go go printer stage go computer stage exit stage go library stage access library stage exit terminate terminate 
transition diagrams memory variable behaviours print library level policies represent movement person entire environment going particular landmark position environment 
go computer example policy takes user nearest computer 
modelled level policy ahmem selects level policy execution depending current state representing current position person 
inside staff room person go computer conditional distribution peak value go computer similarly person vision lab person computer conditional distribution peak value go computer note level policy defined way state dependent memoryless selection probabilities depend value memory variable level policies represent different tasks person perform entire interval person stays environment printing document accessing library simply walking 
example print represented level policy ahmem 
memoryless policies defined level policy internal memory variable transition diagram shown fig 

printing behaviour involves going computer followed going printer 
printer run person go fetch come back printer 
note memory transition probability depend current state addition memory variable fig 
immediately determines policy level selected 
example go go definition third level policy memory state independent similar set scfg production rules 
entire policy hierarchy context free due level 
parameters level intuitive values manually chosen fig 

easily learned labelled training data estimating frequency landmark current landmark 
inferring behaviours observations ahmem parameters define conditional distribution observation sequences policy recognising behaviour person scene sequence observations probability represents policy current time need compute executed level time provides distribution possible behaviours currently executed level hierarchy 
computation needs done time instance new observation arrives 
problem termed policy recognition equivalent line inference filtering problem ahmem :10.1.1.11.9133:10.1.1.11.9133
exact solutions problem tial complexity number levels policy hierarchy scale domains larger sizes 
fortunately efficient approximate inference algorithm rao blackwellised particle filter rbpf computing probabilities 
rbpf algorithm gains efficiency exploiting special probabilistic independence structure ahmem due special mechanism selecting policies lower levels 
inference algorithm supports queries involving current variables ahmem 
example assuming current policy level current stage execution determined probability current memory vari able level current state position person determined computing ahmem inference engine gets observation due temporary occlusion scene engine carries inference step rolling forward belief state updating observation 
experiments results store staff room computer computer library left entrance right entrance store staff room computer computer library vision lab vision lab printer left entrance right entrance printer store staff room computer computer library left entrance right entrance store staff room computer vision lab computer library printer left entrance right entrance vision lab 
person trajectory scenario goes computer printer store printer exits 
person trajectory scenario goes computer printer computer printer store printer third time exits 
person trajectory scenario walks staff room walks vision lab exits 
person trajectory scenario goes library uses library exits 
ahmem rbpf inference algorithm printer probability go comp 
go printer print library unclassified task go time seconds go printer exit 
querying top level behaviours person scenario 
progress executing behaviour print person scenario 
go comp 
go printer go time seconds stage stage stage stage stage stage go printer implementing behaviour recognition module surveillance system 
surveillance system shown fig 
static cameras 
fig 
shows scene viewed cameras 
behaviour hierarchy outlined section 
examine system tracks top level behaviours level print library unclassified task consider scenarios 
scenario person enters scene left entrance visits staff room vision lab goes scene right entrance 
trajectory person detected multiple cameras shown fig 

fig 
shows probabilities person executing behaviours print library unclassified task probabilities denoted print lib unc respectively 
unc highest unclassified task highest prior 
print starts increase person approaches computer leaves computer approaches printer print higher unc remains high person goes store returns printer exits environment 
fig 
shows probability current memory behaviour print time 
seen person executes stages consecutively 
means sequence level behaviours executed person go computer go printer go exit go printer scenario people scene 
trajectories people shown fig 
fig 

fig 
shows results querying top level behaviours person system recognises print winning behaviour person consistent fact person goes computer printer computer printer store printer third time exits 
system recognises correctly unclassified task winning behaviour person see fig 

fig 
shows trajectory person scenario 
system correctly finds library winning top level behaviour see fig 

results querying stage transition behaviour library shown fig 
exit probability probability print library unclassified task time seconds time seconds 
querying top level behaviours person person scenario 
go lib 
print library unclassified task time seconds lib 
exit print library unclassified task 
querying top level behaviours person scenario 
progress executing behaviour library person scenario 
go lib 
time seconds stage stage stage corresponds stages behaviour shown fig 

results scenarios obtained rbpf algorithm samples 
average processing time observation approximately sec amd athlon tm xp machine 
results show system able correctly recognise activities modelled monitor progress activities real time 
developed surveillance system recognising monitoring high level human behaviours multicamera surveillance data 
ahmem underlying framework system query high level behaviours executed person time detect period time person executes sub behaviour 
preliminary results demonstrate ability system provide real time monitoring high level behaviours complex spatial environments 
aggarwal cai 
human motion analysis review 
computer vision image understanding 
lib 
exit albrecht zukerman nicholson 
bayesian models keyhole plan recognition adventure game 
user modelling user adapted interaction 
ayers shah 
monitoring human behavior video taken office environment 
image vision computing october 
bui 
efficient approximate inference online probabilistic plan recognition 
aaai fall symposium intent inference users teams adversaries 
bui venkatesh west :10.1.1.11.9133
policy recognition hidden markov model 
journal intelligence research 
charniak goldman 
bayesian model plan recognition 
artificial intelligence pages 
doucet de freitas murphy russell 
rao blackwellised particle filtering dynamic bayesian networks 
proceedings sixteenth annual conference uncertainty artificial intelligence 
aaai press 
johnson hogg 
learning variable length markov models behaviour 
int 
journal comp 
vision image understanding 
grimson 
vsam 
url www ai mit edu projects darpa vsam 
ivanov bobick 
recognition visual activities interactions stochastic parsing 
ieee transactions pattern recognition machine intelligence august 
kautz allen 
generalized plan recognition 
proceedings fifth national conference artificial intelligence pages 
nguyen venkatesh west bui 
coordination multiple cameras track multiple people 
asian conference computer vision pages 
nguyen venkatesh west bui 
hierarchical monitoring people behaviors complex environments multiple cameras 
international conference pattern recognition quebec city qc august 
oliver horvitz garg 
layered representations human activity recognition 
fourth ieee int 
conf 
multimodal interfaces pages 
oliver rosario pentland 
bayesian computer vision system modeling human interactions 
ieee transactions pattern analysis machine intelligence 
pynadath 
probabilistic grammars plan recognition 
phd thesis university michigan 
pynadath wellman 
generalized queries probabilistic context free grammars 
ieee trans 
pattern analysis machine intelligence 
pynadath wellman 
probabilistic grammars plan recognition 
uncertainty artificial intelligence proceedings sixteenth conference uai pages san francisco ca 
rabiner :10.1.1.131.2084
tutorial hidden markov models selected applications speech recognition 
proceedings ieee 
starner pentland 
visual recognition american sign language hidden markov models 
international workshop automatic face gesture recognition pages 
yamato ohya ishii 
recognizing human action time sequential images hidden markov model 
ieee conf 
computer vision pattern recognition pages 
