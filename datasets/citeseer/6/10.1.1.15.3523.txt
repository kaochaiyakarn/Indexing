journal graph algorithms applications jgaa info vol 
pp 
fast multi scale method drawing large graphs david harel yehuda koren dept computer science applied mathematics weizmann institute science rehovot israel www wisdom weizmann ac il harel wisdom weizmann ac il yehuda wisdom weizmann ac il multi scale layout algorithm aesthetic drawing undirected graphs straight line edges 
algorithm extremely fast capable drawing graphs substantially larger encountered prior 
example contains drawing graph vertices 
achieve nice drawings vertex graphs second 
proposed algorithm embodies new multi scale scheme drawing graphs motivated earlier multi scale algorithm harel hh 
principle significantly improve speed essentially force directed method regardless method ability drawing weighted graphs continuity cost function 
communicated michael kaufmann submitted february revised december june 
harel koren fast drawing large graphs jgaa graph structure model relation entities 
graph drawing conventional tool visualization relational information usefulness depends readability capability conveying meaning diagram quickly clearly 
years algorithms drawing graphs automatically proposed state art surveyed comprehensively di kw 
concentrate problem drawing undirected graph edges 
case problem reduces positioning vertices determining mapping popular generic approach problem force directed technique introduces heuristic cost function energy mapping hopefully achieves minimum layout nice 
variants approach differ definition energy optimization method finds minimum 
known algorithms ea kk dh fr 
major advantages methods relatively simple implementation flexibility heuristic improvements easily added problems 
severe problem difficulty minimizing energy function dealing large graphs 
methods focus graphs vertices 
larger graphs convergence minimum possible slow 
propose new method drawing graphs principle improve speed force directed method 
build algorithm kamada kawai method resulting algorithm extremely fast capable drawing graphs substantially larger encountered prior subsequent developments reviewed section 
algorithm motivated earlier multi scale algorithm harel hh works producing sequence improved approximations final layout 
approximation allows vertices deviate final place extent limited decreasing constant result layout computed increasingly coarse representations graph closely drawn vertices collapsed single vertex 
layout sequence generated rapidly performing local beautification previously generated layout 
force directed graph drawing force directed approach apparently prevalent attitude drawing general graphs 
algorithms approach consist components 
force energy model quantifies quality drawing 
second optimization algorithm computing drawing locally optimal respect model 
resulting final layout brings system equilibrium total force vertex zero equivalently potential energy locally minimal respect vertex positions 
regard harel koren fast drawing large graphs jgaa ing drawing standard force directed methods draw edges straight line segments issue reduces problem positioning vertices 
section outline notable force directed graph drawing 
spring embedder method spring embedder method earliest viable algorithm drawing general graphs 
proposed eades ea refined fruchterman reingold fr 
method graph mechanical collection electrical charged rings vertices connecting springs edges 
vertices reject repulsive force adjacent vertices connected edge pulled attractive force 
method seeks equilibrium conflicting constraints 
spring methods successful small sized graphs vertices 
regarding optimization algorithm describe method fr 
predetermined number sweeps performed 
sweep vertex moved direction total force exerted 
extent movement determined global cooling schedule restricts distance vertex move decreasing function sweep number 
frick fr suggested improvements scheme notable local cooling schedule resulting different extent movement vertex temperature 
show graphs size 
tu suggested refinements optimization method 
approximate effect distant repulsive forces exerted single vertex quad tree spirit barnes hut method bh 
improvement conjugate gradient method decreasing energy 
dealt vertex graphs drawn minutes 
kamada kawai method kamada kawai kk modelled graph system springs act accordance hooke law vertices connected spring rest length proportional graph theoretic distance endpoints stiffness inversely proportional square rest length 
optimization procedure tries minimize total energy system uv length spring length single edge graph theoretic distance kamada kawai method treats aesthetic criteria method addresses produces drawings similar quality 
advantage method applied straightforwardly drawing edge weighted graphs assuming edge lengths reflect weights 
harel koren fast drawing large graphs jgaa harel multi scale algorithm multi scale approach proposed harel hh improvement force directed technique facilitates drawing larger graphs 
main idea method consider series abstractions graph called coarse graphs combinatorial structure significantly simplified important topological features preserved 
energy minimization divided coarse graphs way globally related properties optimized coarser graphs locally related properties optimized finer graphs 
result energy minimization process considers small neighborhoods yielding quick running time 
scheme algorithm recursive repetition 
perform fine scale relocations vertices yield locally organized configuration 

perform coarse scale relocations local relocations coarse representations correcting global disorders stage 

perform fine scale relocations correct local disorders introduced stage 
actual local relocations carried hh minimizing energy defined kk simple gradient descent 
coarsening step done pre processing stage contracting edges minimize convex combination objectives greedy fashion cluster number number original vertices forming new vertex 
degree number degree vertices forming new vertex current abstraction graph 
homotopic number number vertices coarse graph adjacent vertices forming edge 
algorithm produces results large graphs containing hundreds vertices reasonable time 
continue multi scale approach harel hh introduce simpler faster algorithm produces better drawings 
multi scale graph drawing intuition hh beauty graph layout graph nice scales 
words drawing nice micro level macro level 
relying intuition formalize notion scale relevant graph drawing problem 
crucial observation harel koren fast drawing large graphs jgaa global aesthetics refer phenomena related large areas picture disregarding micro structure minor impact global issue beauty 
hand local aesthetics refer phenomena limited small areas drawing 
line thinking construct coarse scale drawing shrinking nodes drawn close single node obtaining new drawing eliminates local details preserves global structure original drawing 
alternative view notion coarsening approximation nice layout 
approximation allows vertices deviate final position amount limited constant consequence unify vertices final location lies circle radius obtain coarse scale representation 
presentation drawing scheme preceded definitions definition layout graph mapping vertices euclidean space lg omit subscript simplicity assume single optimal layout respect fixed set aesthetic criteria accepted force directed algorithms 
term layout nice 
nice layout denoted definition locally nice layout respect intersection circle radius induces nice layout appropriate subgraph definition globally nice layout respect max definition locality preserving clustering lpc short respect weighted graph vk vk vi vj vi vj vi vj vi vi vj vj vi vj vi vj vi vj vi vj shortest distance max vi vertices cluster drawn relatively close nice layout 
call vertices lpc clusters 
harel koren fast drawing large graphs jgaa glance definition little practical value refers unknown nice layout discuss important point section 
definition multi scale representation graph sequence graphs 
kl kl ki locality preserving ki clustering respect ri rl 
naturally assume nice layout edge weighted graph lengths edges reflect weights 
method relies ease drawing graphs small number vertices assumptions formalize think amenability multi scale aesthetics independence global local aesthetics 
assumption gr lpc graph respect andlet globally nice layout gr respect globally nice layout respect 
ing vi vi 
corollary nice layout lpc graph respect globally nice layout respect intuition assumption global aesthetics independent micro structure graph differences layouts gr bounded assumption locally globally nice layout graph respect nice layout multi scale drawing scheme draws graph producing sequence improved approximations final layout 
harel koren fast drawing large graphs jgaa multi scale drawing scheme 
place vertices randomly drawing area 

choose adequate decreasing sequence rl 
choose appropriate value ki construct ki lpc ri 
place vertex weighted location vertices constitute 
locally local neighborhoods place vertex location cluster vertex 

viability scheme stems observations 
iteration step nice layout guarantee value large resulting small easily drawn nicely 

step yield locally nice layout ki ri 
guarantee choose large neighborhood 

iteration globally nice layout ki ri 
assumption step nice layout ki layout globally nice layout ki ri assumption 
choice multi scale representation decreasing sequence rl described increasing sequence kl done implementation 
definition added weights edges lpc order retain size proportions necessary making assumption valid 
practice conjecture scheme works weighting edges lpc variants method ea fr local method 
reason methods benefit significantly better initialization capturing final size graph solves large scale conflicts correctly 
harel koren fast drawing large graphs jgaa new algorithm order implement multi scale graph drawing algorithm scheme section elaborate points find multi scale representation graph line scheme devise locally nice layout line scheme 
finding multi scale representation order construct multi scale representation graph find lpc vertices drawn close nice layout grouped 
important question know vertices close final picture know final picture looks 
luckily heuristic help decide vertices drawn closely 
key decision rapidly major reason fast running time algorithm 
heuristic observation nice layout graph convey visually relational information graph represents vertices closely related graph graph theoretic distance small drawn close 
heuristic conservative force directed drawing algorithms heavily 
employing heuristic approximate lpc algorithm known clustering problem 
problem wish partition clusters longest graph theoretic distance vertices cluster minimized 
reality identify vertex cluster single vertex approximates barycenter cluster 
solution closely related center problem want choose vertices longest distance centers minimized 
fundamental problems arise areas widely investigated papers see go hs 
unfortunately problems np hard shown go hs np exist approximation algorithm fixed 
various fast simple approximation algorithms problems 
approximate lpc solution center problem adopting approximation method mentioned ho needed sufficient necessary condition vertices close 
approximation algorithm delivers approximate solution guaranteed constant factor optimal solution 
harel koren fast drawing large graphs jgaa centers goal find set size maxv mins dsv minimized 
arbitrary tok 
find vertex farthest away mins dus mins dws 
return complexity line carried time done faster shall see pairs shortest path length apsp hands needed local beautification 
utilizing fact memorizing current distance vertex implement line time yielding total time complexity apsp computation 
local beautification chosen variant kamada kawai method kk local drawing method 
appropriate relates pair vertices constructing new coarse representation graph define pairs vertices connected edge 
notice property kamada kawai method price forces waste memory graph sparse 
advantage kamada kawai method deal directly weighted graphs convenient case multi scale representation graph contains weighted graphs 
energy function consider graph vertex mapped layout point plane coordinates xv yv 
distance defined length shortest path define neighborhood 
order find layout aesthetically pleasing neighborhoods energy function relates graph theoretic distance vertices graph euclidean distance drawing defined follows ek kuv length single edge euclidean distance andl kuv weighting constant uv energy represents normalized mean squared error euclidean distance vertices picture graph theoretic distance 
pairs neighborhood considered 
harel koren fast drawing large graphs jgaa local minimization energy purpose find layout brings energy ek local minimum 
necessary condition local minimum follows ek xv ek yv achieve condition iteratively choose vertex largest value defined ek xv ek yv move vertex amount 
computation carried viewing ek function xv yv dimensional newton raphson method 
result unknowns solving pair linear equations ek ek xv yv ek xv ek yv xv ek ek yv interested reader find details kk 
algorithms locally nice layout algorithm lsd mentioned br modification kk 
algorithm computes nice layout neighborhood graph dv iterations goal find locally nice layout neighborhoods dv pairs shortest path length initialized layout radius neighborhoods 
choose vertex maximal 
compute solving mentioned equations 
typical value parameter iterations 
complexity efficient implementation line storing derivatives ek binary heap sorted values 
harel koren fast drawing large graphs jgaa movement vertex derivatives vertices updated 
computation time line log 
computation time line constant bounded degree graph 
computations carried iterations times time complexity bounded degree graph log 
algorithm differs kamada kawai kk single loop structure predefined number iterations basing termination value results faster termination dealing large graphs 
recommend improvement stand sense kamada kawai method 
tested far superior larger graphs 
recommended value running algorithm stand part multi scale algorithm 
performance improved executing iterations ones choosing vertex largest value iterating vertices order 
multi scale drawing algorithm describe full algorithm goal find nice layout constants rad determines radius local neighborhoods iterations determines number iterations local beautification ratio ratio number vertices consecutive levels minsize size coarsest graph compute pairs shortest path length dv set random layout minsize centers centers radius maxv centers minu centers rad centers centers radius iterations center rand ratio return comments inside loop call center returns center closest add small random noise rand local beautification algorithm performs badly vertices initialized point 
try improve global aesthetics iteratively repeating body loop fixed number times decreases times 
harel koren fast drawing large graphs jgaa complexity asymptotical complexity determined computation pairs shortest path length apsp line implemented initiating bfs vertex 
takes time 
experimental running times table 
space complexity memorize pairs shortest path length matrix 
examples section contains examples results algorithm 
implementation runs pentium iii ghz pc 
table gives actual running times algorithm graphs 
mention implementation far efficient optimized version probably better 
executions default parameters iterations ratio minsize 
regarding rad default value sufficient achieving reasonable results graphs full binary tree 
graphs get smoother results increasing rad 
graphs give results rad indicated table 
seen table running time dedicated computing pairs shortest path length apsp performing local beautification 
layouts shown figures demonstrate applying algorithm regular graphs 
particularly happy graphs figures correct grid torus appearance retained despite partiality information available algorithms 
drawing full binary trees harder 
force directed methods behave better bi connected graphs forces ways directions 
perform quite badly trees 
method succeeded finding nice layout trees considered entire graph local beautification stages 
problem local beautification scheme neighborhoods graph theoretic sense deep kinds trees leaves show close far apart graph theoretic sense 
mention laying full binary trees method advantages compared kamada kawai method kk 
running time faster sec vertex tree compared sec kamada kawai method implemented efficiently discussed section account relatively beautification iterations 
second resulting picture planar global distortions contrast kamada kawai method trapped local minima result edge crossings see 
grid horizontal edges removed illustrates similar problem 
set things local beautification procedure considered larger regular neighborhoods way take account vertices consecutive lines resulting picture planar 
hand harel koren fast drawing large graphs jgaa graph name rad apsp beautification time time time grid grid grid grid folded grid torus torus sierpinski depth random sparse grid random sparse torus full binary tree partial grid elt crack elt table running time seconds non optimized various components algorithm harel koren fast drawing large graphs jgaa vertex square grid vertex square grid opposite corners connected local beautification procedure considered neighborhoods small get overlapping 
figures real life graphs taken francois pellegrini graph collection www labri bordeaux fr member graph 
beautiful crack graph taken collection jordi petit www lsi upc es experiments 
related multi scale approach graph drawing proposed hh described section 
major technical improvement approach hh intuitive easier implement coarsening step source better running time 
method eliminates entire costly pre processing step hh exception computation dv part local beautification process 
practically coarsening overhead algorithm carried negligible fraction execution time 
advantage algorithm hh simpler schematic structure 
starts coarsest scale representation proceeds improving finer scale representations reaching original graph 
harel method starts original graph continues reaches coarsest level proceeds back original graph 
harel koren fast drawing large graphs jgaa vertex vertex depth sierpinski vertices harel koren fast drawing large graphs jgaa vertex grid edges omitted random edges omitted random vertex grid vertex torus edges omitted random harel koren fast drawing large graphs jgaa full binary trees vertices depth beautification considered graph neighborhoods radius considered result kamada kawai algorithm 
notice algorithm kamada kawai results bad global edge crossings near root 
harel koren fast drawing large graphs jgaa vertex partial grid beautification considered larger normal neighborhoods radius beautification considered usual neighborhoods radius graph elt collection harel koren fast drawing large graphs jgaa graph elt collection graph crack harel koren fast drawing large graphs jgaa eliminating results improvement beautification time making half local beautification steps 
addition beautification process hh directly change layout performs relative change layout vertex located anew relative previous location 
imposes strong inter dependency multi scale representations graph 
result introduce weights edges order possible link layouts different scales 
contrast scheme direct change graph layout level beautification process 
consequence dependencies various representations weaker multi scale representation unweighted edges capturing final size graph solves large scale conflicts correctly 
result potentially utilize force directed methods local beautification procedure fact possibly yield additional benefits 
appearance technical report hk multiscale multi level methods graph drawing conference claiming certain advantages 
describe important characteristics 
method introduces changes algorithm 
notable graph theoretic distances vertices stored table computed dynamically needed 
improves storage requirements algorithm making suitable dealing larger graphs 
attributes drawing higher dimensions optimizing energy gradient descent extent movement limited local temperature fr 
reports drawings vertex graphs seconds 
method walshaw wa multi level extension fruchterman reingold spring embedder algorithm fr 
advantage working forces fr compared energy kamada kawai method fr require computation storage pairs shortest path length 
result walshaw wa deal huge graphs vertices minutes impressive 
method drawing large graphs quigley eades qe 
method improvement spring embedder algorithm 
multi scale approach consider graph 
order accelerate computation nodes clustered quad tree structure reflects actual spatial proximity 
repulsive forces vertex cluster distant vertices approximated single force significantly lessens number forces system 
connection tu mentioned section 
conducted tests compare running time multi scale approach qe 
multi scale approach optimizes different energies levels apparently capturing various scales beauty 
multi scale method may faster robust sensitive initial placement derived harel koren fast drawing large graphs jgaa coarser scales 
developed new methods hk drawing huge graphs 
draw vertex graphs seconds vertex graphs minute appear significantly faster previously known methods 
method draws graph quickly calculating eigenvectors laplacian matrix associated special algebraic multigrid technique accurate variant multi scale paradigm 
method hk somewhat novel phases embed graph high dimension say project plane principal components analysis 
high dimensional embedding done rapidly simple algorithm utilizes freedom dimensions 
method possesses useful inherent capability exhibit graph various dimensions effective means interactive exploration large graphs 
new multi scale approach drawing graphs nicely suggested useful formulation desired properties coarse graphs 
algorithm able deal extremely extremely fast certain classes large graphs 
algorithm designed speed simplicity require explicit representations coarse graphs 
powerful general implementations multi scale drawing scheme overcome limitations algorithm 
improve time space complexity algorithm discarding pairs shortest path length computation 
enable algorithm deal larger graphs 
improvement lies construction coarse scale representation simple heuristic 
graphs heuristic fine graphs may 
example consider graphs tiny diameter graph diameter 
heuristic totally fail graph distances pair vertices roughly unable differentiate different clusters 
algorithm uses heuristic kamada kawai kk punish edge crossings explicitly 
may interesting see explicit consideration crossings done dh reflected results multi scale method 
particular importance drawing regular looking random looking graphs 
harel koren fast drawing large graphs jgaa result fruchterman reingold result method bad example graph degenerate diameter referees helpful comments 
bh barnes hut hierarchical log force calculation algorithm nature 
br brandenburg himsolt rohrer experimental comparison force directed randomized graph drawing algorithms proceedings graph drawing lecture notes computer science vol 
pp 
springer verlag 
di di battista eades tamassia tollis algorithms visualization graphs prentice hall 
dh davidson harel drawing graphs nicely simulated annealing acm trans 
graphics 
preliminary version technical report weizmann institute science 
ea eades heuristic graph drawing congressus numerantium 
fr frick ludwig fast adaptive layout algorithm undirected graphs proceedings graph drawing lecture notes computer science vol 
pp 
springer verlag 
harel koren fast drawing large graphs jgaa fr fruchterman reingold graph drawing force directed placement software practice experience 
goodrich kobourov multi dimensional approach force directed layouts large graphs proceedings graph drawing lecture notes computer science vol 
pp 
springer verlag 
go gonzalez clustering minimize maximum inter cluster distance theoretical computer science 
hh harel multi scale method drawing graphs nicely discrete applied mathematics 
proc 
th inter 
workshop graph theoretic concepts computer science wg lecture notes computer science vol 
pp 
springer verlag 
hk harel koren fast multi scale method drawing large graphs technical report mcs faculty mathematics computer science weizmann institute science 
hk harel koren multi dimensional approach force directed layouts large graphs appear proceedings graph drawing lecture notes computer science springer verlag 
ho hochbaum ed approximation algorithms np hard problems pws publishing 
hs hochbaum shmoys unified approach approximation algorithms bottleneck problems assoc 
comput 
mach 

kk kamada kawai algorithm drawing general undirected graphs information processing letters 
kw kaufmann wagner eds drawing graphs methods models lecture notes computer science vol 
springer verlag 
koren carmel harel ace fast multiscale eigenvectors computation drawing huge graphs technical report mcs weizmann institute science 
available www wisdom weizmann ac il reports html 
ieee symposium information visualization infovis 
lsd lsd library available graphlet website www fmi uni passau de graphlet download html harel koren fast drawing large graphs jgaa qe quigley eades fade drawing clustering visual abstraction proceedings graph drawing lecture notes computer science vol 
pp 
springer verlag 
tu numerical optimization approach general graph drawing ph thesis carnegie mellon university 
wa walshaw multilevel algorithm force directed graph drawing proceedings graph drawing lecture notes computer science vol 
pp 
springer verlag 
