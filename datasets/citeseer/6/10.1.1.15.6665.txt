deriving consensus multiagent systems ephrati computer science department university pittsburgh pittsburgh pa cs pitt edu jeffrey rosenschein institute computer science hebrew university jerusalem israel jeff cs huji ac il consider designers multiagent environment charged establishing rules agents encounter interact 
rules encounter determined builder agent free design machine way wants 
rules established certainly affect choices building agent 
article suggest economic decision process derive multiagent consensus clarke tax mechanism 
consensus reached process voting agent expresses preferences group choice mechanism select result 
clarke tax mechanisms provide set attractive alternatives designers multiagent environments particularly environments consist individually motivated heterogeneous agents 
clarke tax mechanism desirable properties non individual rationality maximization agents global utility 
theoretically attractive clarke tax presents number difficulties attempts practical implementations 
article examines clarke tax effective consensus mechanism domains consisting automated agents 
particular consider agents come consensus needing reveal full information preferences needing generate alternatives prior voting process 
multiagent systems emerged important new focus research artificial intelligence ai 
factors distributed computer systems norm advances miniaturization networking technology effect kinds sophisticated autonomous systems designers build 
domain suitable designers compelling reasons consider distributed ai solutions 
suitability domain involve natural geographic distribution sources incoming data example research focused distributed systems sensors carrying cooperative data fusion natural functional distribution best addressed modular problem solvers example modules pilot associate project 
cooperative problem solvers arises designers try effective way dealing difficult domains 
centralized solutions possible require prohibitive amount communication overhead require coordination diverse group designers 
kinds problems distribution simply tool designing problem solving system innate feature system 
internet example provides extreme example real world distributed environment 
systems agents operating effectively environment cope appropriately distribution 
great deal research years common language heterogeneous computer systems communicate efforts kif knowledge interchange format fall category 
research assumes kind common language exists 
questions ask revolve language 
agents share language able communicate choose interact 
consider designers multiagent environment charged establishing rules agents encounter interact 
rules encounter determined builder agent free design machine way wants 
rules established certainly affect choices building agent environment design issues examined example 
article concerned interaction mechanisms ensure agreements reached individually motivated agents process agreements reached display certain desirable properties 
need heterogeneous agents reach agreement increasingly part real world distributed systems 
techniques explore provide tools building environments capable inducing beneficial coordination 
examples applications consider world current telecommunication network infrastructure 
various physical pieces network controlled different companies organizations 
management pieces basically automated computers decide routing messages data points 
times messages may efficiently routed resources communication lines short long term storage networks exploited 
machines decision share resources route packets effectively getting jobs done better machines cooperate individual machines able carry tasks help resource controlling machine 
decentralization machines fact heterogeneous distinct problem solvers interacting artificial design decision imposed 
intrinsic part system unavoidable consequence fact resources machines control belong different individuals companies 
example involve automated method choosing carrier telephone calls 
system customer lifts handset dials call microprocessor phone automatically collects bids various carriers 
computer simultaneously declares price minute willing carry call 
phone microprocessor collects bids decides wins 
exact method carrier chosen paid drastically affect appropriate bidding strategy telephone computers 
designers environment induce certain kinds behavior part heterogeneous computers establishing particular rules interaction 
example consider meeting scheduling software 
problem solving software carries done isolation nature task performs involves interaction machines 
distribution arises natural aspect requirement environment 
person uses software able specify preferences regarding alternative schedules 
interaction scheduling agents encounter sensitive strategies 
example conceal certain time slots force meeting ones convenient time 
mechanisms establish programs set meetings fundamentally alter strategies users outcome interaction 
techniques explored article directly applied solving problems discussed 
example approach design meeting scheduling system induces users reveal true scheduling preferences efficiently establishing optimal global schedule 
distributed artificial intelligence multiagent activity obviously facilitated requires agreement agents act world 
reaching consensus major concern research distributed artificial intelligence dai various alternative methods achieving consensus groups autonomous agents suggested dai literature 
field dai distinction paradigms distributed problem solving dps multiagent systems mas 
paradigm agents assumed created designer group designers solve common goals 
economic terms agents common preference profile yields identical utility function 
common goal terms falling multiagent systems encompassing term multiagent research 
distinction research emphases discussed article remains 
ll continue terms absence superior alternatives 
may decomposed subgoals allocated different agents group 
coordination needed allow efficient distributed activity achievement global goal 
pursuing tasks agents may communicate share knowledge help 
second paradigm multiagent systems agents may private goals act achievement goals 
agent may private profile preferences distinct individual utility function 
assumption agents help best interests 
distinction distributed problem solving multiagent systems really seen distinction research agendas running systems 
certainly obvious outside observer distributed system falls paradigm 
single designer may built agents act competitively believing improves system efficiency 
similarly individually motivated agents seen sharing information helping determined best interests act way 
research questions asked researcher dps may distinct asked mas researcher despite deal overlap research agendas 
particular dps researcher show acting particular way system impose behavior agents system design time 
mas researcher alternative unavailable 
best able design aspects environment motivate selfish agents act certain way 
need indirect incentives element distinguishes mas research dps research 
research reported article area multiagent systems 
consider multiagent societies consist heterogeneous agents manufactured different designers 
take point view agent acts best interests designer agent acts rationally maximize subjective expected utility sense savage simultaneously axiomatized utility subjective behavior 
keeping large growing body artificial intelligence attributes rationality explores consequences attributing rationality autonomous agents 
see example 
overview article article method reaching consensus clarke tax mechanism ctm consider mechanism rational automated agents 
parts appeared previously 
section model interaction article addresses followed illustrative example initial definitions 
section introduces ctm 
section suggests ways agents assess worth alternative states necessary ingredient establishing preferences alternatives 
ctm major drawbacks want practical implementation 
subsequent sections article suggest solution issues 
set final candidates agents vote assumed determined advance vote obvious set generated especially non expensive way full knowledge individual agents goals 

agents required calculate reveal exact entire profile preferences entire set candidates consequence desired original inventor ctm designers autonomous agents prefer conceal information regarding preferences 
ctm purposes reaching consensus want preferences agents reveal true designers mechanism prefer agents reveal preferences original ctm inventor want reveal preferences 
exact calculation entire set preferences may computationally expensive circumstances extremely difficult 

agents equal influence decision procedure desirable human scenarios fact acceptable designers agents involved 

mechanism sensitive possible coalition formation groups agents may collude order bend groups decision favor 
rational behavior may distort outcome cause inefficient global local perspective 
generation candidate states central planner issue discussed section 
determining set final candidates may quite expensive computationally requires full revelation individual goals 
section address problems 
new approach deriving multiagent plans employing variation ctm eliminates need generate candidates ahead time alternative approach issue 
addition method maintains agents privacy effectively issue agents reach consensus clarke tax voting procedure having reveal full preferences goals necessary consensus reached 
agents iteratively converge plan brings group state maximizing social welfare 
section shows relax assumption original decision procedure agents equal influence issue 
section suggest heuristic refinement plan aggregation process 
section considers situation final candidates exist interested method protecting agents privacy saving agents burden calculating full preferences alternatives necessary reach consensus 
direct treatment issue need deal candidate generation 
section considers fragility ctm respect possible coalition formation issue 
conclude brief review related section 
appendix describes greater detail desirable solution properties looking followed useful background material voting theory economics game theory 
clarke tax ctm originally economics literature way solve socalled free rider problem 
problem considered unsolvable prior ctm 
original economic scenario concerned way central agency government project manager choose possible projects public goods individual preferences members society 
decision reached member society required contribute money realization preferences member stated 
soon realized rational individuals tend declare preferences able pay decision reached true preferences 
members pay getting free ride 
behavior may circumstances yield inefficient global decision 
phenomenon rational falsely preferences overcome clarke tax mechanism 
reason called preference revelation process 
concerned somewhat different scenarios ctm desirable decision procedure deriving consensus coordination multiagent environments 
scenario imagine group agents possibly created different designers operating world currently state facing decision 
way formulating problem consider agents trying agree member set possible states current world transformed 
agent private goal 
goal gives rise worth utility associates state 
turn worth induces preference relation states plans 
agent true worth state denoted 
preferences declared agent differ true preferences 
decision procedure chooses state function agents declared preferences member set mg general family mechanisms related clarke tax independently introduced groves received wider recognition 
underlying idea family mechanisms relies discovered vickrey context public auction 
maps agents declared preferences group decision world transformed 
looking efficient decision procedure enable agents reach consensus agree final state 
example consider simple scenario slotted blocks world 
slots blocks world described relations obj obj obj stacked obj clear obj object obj obj slot obj located slot 
function loc obj returns location slot obj 
agents operating world 
start state shown far left 
represented agents respectively goals fat fon fon slots function stationary objects block slot described 
available operator move obj obj place obj obj operator characterized strips lists prec clear obj clear obj obj obj del obj obj clear obj obj loc obj add obj obj obj loc obj 
assume single agent performs move operation cost agents move object operation costs total 
problem find plan carried agents bring world compromise state consensus 
preferably state maximizes group utility definition group utility 
blocks world inappropriate studying real world issues robotics remains broadly suitable study goal interactions 
basic definitions article assumptions definitions ffl exists kind monetary system multiagent environment allows side payments agents 
words agent pay compensate doing action accepting result assume existence explicit currency agents trade promised actions example 
important point agreements facilitated side payments utility transferred agent 
agent goal set predicates 
worth utility agent assigns state equal worth associates goal 
agents utility functions additively separable 
agent indifferent establishing state assesses worth establishing state assesses worth agent case receiving side payment gamma 
ffl plan sequence op gamma op gamma gamma op gammak length plan starts ends ffl denotes minimal cost take single agent state bring state satisfies 
denotes set plans bring minimal cost 
minimal cost needed move world combination multi agent actions 
plan share plan 
clarke bidding mechanism ctm shot voting bid mechanisms invented fields voting theory economics 
mechanisms ctm basic idea clarke mechanism sure voter dominant strategy telling truth 
phenomenon established slightly changing classic sealed bid mechanism simply collecting bid winning bidder agent fined tax 
tax equals portion bid difference outcome 
example shows calculate tax 
row table shows pieces information regarding agent 
preferences state listed 
total score state gotten agent voted listed 
asterisk marks winning choice situation 
sealed bid mechanism agents bid submitting secret offer agent highest bid wins 
shown mechanism manipulable agents benefit submitting false bids 
example agents voted state chosen 
voted chosen 
score situation gamma beaten 
agent affected outcome vote affected magnitude fined 
agents fined vote separately chosen 
scheme revealing true preferences dominant strategy 
agent state win risks having pay tax larger true preferences warrant 
similarly way pay tax change outcome agent change outcome save tax come saved tax compensate lost utility 
note distinction private preferences public behavior 
relatively easy monitor enforce public behavior example publically known agent owes tax paying tax enforced 
private preferences agent entirely different 
way observe private preferences agent directly know stated preferences match private preferences 
need indirect mechanism ctm 
mechanism place assume corresponding public behavior tax paying ensured 
attributes ctm clarke tax decision mechanism appealing satisfies desirable properties social decision mechanisms wide ranging discussion common solution concepts social decision processes see appendix 
manipulable individuals declaration preferences dominated declaring truth 
saves agent computational complexity guessing preferences strategies negotiation set manipulated 
simplicity strategy highly desirable design automated agents 
agents tell truth self interest need assume agents act design 
process answers simplicity stability criteria see appendix 
formal proof revealing true preferences dominant strategy consider proof appendix second advantage technique satisfies desirable criteria including condorcet winner choice beaten choice pair wise votes guaranteed chosen mechanism monotonicity giving alternative higher value agent undermine alternative selection independence irrelevant alternatives removal alternative set alternatives change outcome individual rationality agent may gain utility part process anonymity neutrality identity voter name alternative influence outcome expressiveness preferences expressed actual cardinal utilities relatively simple process designed preserve privacy actual choice function uses total sum preferences 
third advantage alternative chosen clarke tax mechanism answers social welfare criterion similar summation criterion mentioned appendix 
fact clarke mechanism just member family groves mechanisms 
proven economics decision mechanism chooses state properties ctm telling truth dominant strategy belongs family 
ctm requires amount tax paid members decision mechanism family 
guarantees best minimal utility level participants mechanism family free rider problem agent tempted avoid process hoping benefit decision risk paying tax 
calculation preferences telling truth dominant strategy clarke tax agent interest compute true preferences potential alternative states 
preference profile worth agent assigns alternative state 
way true worth associated states obviously crucial influence outcome group decision 
section suggest conceptually different approaches agent determine worth state 
example consider scenario blocks world described 
sake simplicity assume move action costs 
case 
assume agents state faced choosing alternative states shown discuss alternatives generated 
assessment single state worth worth state meaningful function initial state state agent goal similar argument see 
easier social consensus procedure find compromise consensus states agents worth functions binary agents partially satisfied states see example 
approach agent assigns full value goal state satisfies zero 
example chosen causing pay tax 
general case state satisfies single valuable private goal chosen state fully satisfies goal 
approach suffers fact agent assign relative weights alternatives mutual compromise achieved 
flexible approach partial satisfaction agent give state worth represents portion agent goal state satisfies predicates agent composite goal satisfied state 
assume agents goal predicates contributes equally worth associated state 
example chosen pays tax 
approach superior sense compromise achieved state partially satisfies group different goals 
addition preventing agent ranking bad alternatives negative valuations method misleading 
consider example evaluation fact satisfies attempt achieve subgoal require violation predicate 
third approach cost evaluate state consideration cost agent eventually achieving full goal state gamma 
consider calculating worth achieve goal move operations assumption goal value 
need move operations move move move move move 
worse gives worth gamma 
example yields true agent gamma gamma move operation distant agents goals chosen tax collected 
second third approaches allow greater compromise yielding states guaranteed greater social welfare 
may improve outcome individual agents prefer operate rigid approach 
sense method guarantees fair consensus agents approximately equally distant ultimate goals 
important agent goal fully satisfied coin tossed determine agents continue fulfill complete goal 
distribution labor utility agent scheme may greater lottery select agent agent bring goal 
valuation state closeness desired final state obviously domain dependent 
situations may really exist possibility arriving final state time situations value state may really related proximity desired final state final state achieved chip manufacturer increasingly pleased fewer faults appear chips reach ultimate desired situation faults 
clearly inappropriate technique domains intermediate states viewed final unrelated distance goal 
progressive worth functions consider slightly sophisticated way evaluating worth arbitrary states 
agent may contribute social effort reaching particular intermediate state sense take account share initial decrease evaluation worth appropriately 
straightforward worth function arbitrary state built follows take worth goal state assumed available subtract cost single agent plan get goal subtract agent share cost multiagent plan get start state gives worth gamma gamma 
note equation worth agent simply worth goal minus cost agent plan reach goal scenario true state 
evaluation function capture notion progress plan rational agent motivation carry plan 
ways refine worth function solve problem 
way making cost gamma sensitive progress plan weighted states far away goal assigned proportionately worth 
simple approach take consideration fraction goal see example similar scenario 
agents agree cooperate intermediate state satisfies flip coin see continues goal 
cooperation brought negotiation voting 
reminiscent little planning paradox agent solves problem deriving suitable plan need carry identifies solves problem 
worth reflects amount done achieve theta 
way give greater weight cost operators located plan gamma theta op 
assuming operator probability pr op associated success pr op theta gammac 
evaluations may refined having costs probability success associated constraints enable plan see richer probabilistic approaches 
important restriction place class worth functions agents 
section introducing pruning method allows multiple agents cut search optimal states group global utility function decreases search 
require local minima global utility function maximal depth minima known advance 
formally definitions ffl set worth functions called strictly progressive states exists state 
ffl similarly ffi maximal gap bound local maximum local minimum follows set worth functions 
say set ffi progressive 
conditions worth functions strictly progressive 
example cost technique sufficient assume ic 
decision procedure propose section suitable progressive worth functions 
centralized generation alternatives selection candidate states agents vote plays crucial role voting process 
group agents fixed goals choosing different candidates result wildly different outcomes 
question arises candidate states generated 
desirable generation process function agents goals 
section describe heuristic approach generate alternative consensus states candidate states central planner agents goals 
section introduce iterative multiagent agent planning algorithm derive states way requires agents reveal minimal necessary information private goals 
generation candidate states aspire choosing states maximal respect satisfaction agents goals 
set predicates appearing agents goals 
usually specify real world state agents vote possible states large number states voting process intractable 
general case contradictory predicates different agents goals state guaranteed chosen 
want case set candidate states satisfies definition fp consistent maximal feasible subset fixed point respect predicates consistency 
check consistency assume set axioms domain predicates inconsistency discovered 
example obj obj obj obj obj obj obj obj alse establish inconsistency set fat note process generation features 
procedure guarantees existence second agent motivated hand generator true goal 
declaring oe prevent generation compromise states benefit cause generation states preferable agents resulting selection worse alternative chosen 
declaring ae may prevent generation satisfies preventing generation states preferred chosen 
case hope improve utility 
note phase candidate generation completely distinct clarke tax voting phase follows 
agent declare goals generating candidates vote ways contradict declared desires 
note technique assumes collection information regarding agents goals central location 
course may undesirable distributed system bottlenecks communication overhead 
section suggest techniques distributing generation alternatives agents 
additional criteria candidate generation candidate state generation refined consideration additional criteria avoid dominated states 
additional criteria related approach agents evaluate worth candidate states 
generator exclude states 
words generator exclude candidate state course clear axioms generated 
case axioms check consistency produces np hard problem database consists horn clauses 
reasonable consider consistency axioms idealized mechanism realistic system heuristic approximations 
contrasts cases agent benefit goals 
key difference agents eventually engage non manipulable voting process clarke tax mechanism eliminates possibility useful deception candidate generation phase 
equivalent value easier reach 
example test causes elimination state fat favor agents going evaluate candidate states partial satisfaction criterion generator exclude ae 
words generator exclude candidate specifies states superset candidate states 
example exclude favor agents going evaluate candidate states cost criterion generator eliminate states 
words generator exclude candidate agents expensive candidate 
example test eliminate state favor suppose known ahead time candidate states going evaluated clarke tax voting phase redundant 
extension elimination procedures generator just compute optimal state 
instance cost criterion directly generate minimizes partial satisfaction criterion directly choose maximal respect number predicates consistent subset extensions generation method desirable 
state generator uses agents motivated declare false goals 
example declares goal fat predicates superset original goal dominant states generator uses global extensions considered 
automatically chosen achieves higher utility lying 
phase method propose candidates generated agents vote clarke tax mechanism eliminates undesirable effects 
dynamic search alternatives multiagent planning central generation alternative consensus states suffers significant drawbacks 
entire set alternative states calculated prior voting procedure agents reveal goals vote takes place 
second participating agents expected declare exact entire set utilities preferences set alternatives 
original economic scenario objective mechanism planner know complete set preferences 
designers automated agents interest reaching right decision ensuring agents privacy possible time agents generate alternatives consensus reasons equally expensive agents expensive 
efficiency 
accomplish aims repetitive votes employ clarke tax mechanism converge consensus decision 
sections novel iterative voting procedure original clarke tax mechanism enables agents reach decision maximal social utility partial information 
employ dynamic search group agents states maximize social utility 
step agents vote ctm joint action taken state group 
technique desirable properties agents need fully reveal preferences set alternative final states need generated advance vote 
effect voting procedure gives rise new multiagent planning technique 
process group constraint aggregation agents iteratively converge plan brings group state maximizing social welfare 
advantage process lower complexity original centralized process previous section 
notation definitions description planning procedure embedded stepwise ctm ffl step process additional alternative states generated 
denotes set states generated th iteration process 
ffl function ir returns true normalized worth state iv gamma 
function returns declared worth state agent step denotes vector hd agent declared worth alternatives 
ffl profile preferences declared agents step denoted denotes set excluding preferences 
ffl choice function returns state maximizer element ffl tax imposed step gamma value positive 
zero 
utility agent respect chosen alternative gamma 
ffl set absolutely necessary constraints needed plan succeed 
accordance partial order constraints divide subsets constraints temporally ordered sets domain predicates associated appropriate limitations codesignation 
strips planning system constraints preconditions required operators 
constraints 
subset comprises constraints satisfied optimal steps necessary subsequent step denote components includes constraints satisfied jth step plan necessary step define goal achieved ffl constraint said temporary plan constraint denies alse 
say set apparently conflicting constraints semi consistent tmp alse removal temporary constraints consistent see section example 
virtual state state specified semi consistent set predicates 
state predicates may exist 
virtual state define set real states maps maximally consistent subsets predicates note real state ffl denotes set cheapest grounded plans chapman calls complete plans temporally ordered set constraints plan results certain real virtual state 
signify set states states induced concerned cheapest states satisfy words fs gc min kj 
defined set constraints satisfied invoking operator state fi op op 
general overview search algorithm section allows group agents find state maximizes social welfare 
underlying idea dynamic generation alternatives locate desirable state society 
step agents reveal additional information private goals 
current set candidate states expanded possibly pruned comprise new set candidate states 
process continues new states generated higher social utility 
entire process illustrated 
represented gray arrows upper part agent private set constraints 
initial state incrementally satisfying set private goal achieved 
private sets constraints aggregated iteratively 
step agent may try impose private constraints group decision 
done declaring alternative feasible private extensions live sets aggregated constraints 
search global plan space states 
partial plan queue alternative plans identified states induces 
specific initial state agents go loop derive plans reach states maximal social welfare 
maximal social welfare states 
identify promising successor states reached path queue 
successor state represents feasible set constraints propositions satisfied path 
relevant sets determined aggregating sets constraints agent may declare individual plan 

determine fraction global multiagent plan achieves successor state 

individual plans actual path leads successor determine heuristic value newly formed path 

add new successors queue heuristic values 
search procedure proceed correctly needs accurate value social utility candidate state search space alternatives pruned dynamically social welfare criterion 
provide value agents vote set candidates step 
clarke tax mechanism procedure ensure agents votes honest 
search method effect parallel search 
example value state social utility taken sum individual estimates distance goal state component actual cost achieving component 
parallel searches carried simultaneously promising direction social utility decrease 
search encounters direction social utility decreases search terminated path pruned 
method illustrated lower part set aggregated constraints corresponding real virtual states induces 
starting initial state step process live descendents considered 
possible successors generated 
state reduces social utility ffi comparison parent pruned 
agents participating intermediate votes 
intermediate vote subset candidates possibility agent shift vote constant keeping single round preferences accurate inter vote comparisons 
example agent voting give value second value 
agent subsequently voted assign second voted alternatives shifted giving votes candidates 
clarke tax levied procedure requires artificial shifting occur 
require votes relative benchmark include set alternatives step require agent give worth state 
agent gives true preferences states relative score state vote exactly 
algorithm section describes algorithm detail running example 
step procedure agents try impose private constraints group aggregated set sets constraints 
agents want maximize utility impose constraints step 
example assume simple scenario slotted blocks world described operators predicates described section 
blocks agents 
initial state fon agent goals respectively fon fon set unpruned sets constraints step denoted constituent sets denoted simply index sets 
denotes set pruned 
exact procedure defined follows initialize step agent finds temporally ordered sets constraints imposed optimal skeleton plan achieves goal virtual reminiscent sussman anomaly single agent planning scenario plan achieve sub goal plan achieves 
final state satisfies agents goals example costs reach relatively expensive state meets social welfare criterion 
set alternatives initialized empty set induced set states initialized fs 
example ordered set induces plan hm inducing plan hm 
note temporary denied induced plan 

loop step step agent may declare fully declared declaration feasible possible reach state satisfies constraints 
allowed try impose elements private subset constraints group decision relevant previous constraints accepted group 
notice best interest give true declaration bringing useless establishing 
declarations easily tracked agents declared constraint subsequently 
step agent declare example 
second step declares example equal 
similarly declares 
contains subset 
third step declares declares final goal appears 

set possible extensions live sets set union agents declarations step set necessarily consistent 
set constraints generate maximally consistent semi consistent extensions elements fg fi tmp alse gg 
denotes union extensions 
step aggregated set constraints fc second step declarations may coexist consistently successor previous set constraints fc third step aggregated set fo satisfies agents goals 
letter denote full operator predicate denote location excluding 
typewriter font denote temporary constraints 

stage extensions evaluated enable pruning sets reduce social utility bound ffi 
evaluation done evaluating states extension induces set newly formed alternative states respect new sets constraints fs ns 
set 
agent gives vote state fs worth real state simply sum individual state 
worth virtual state computed follows 
state set real states maps 
agent virtual state real state maximal worth 
worth virtual state taken sum maximal worth states agents max 
normalized social utility state subtracting cost worth 
utility set constraints defined highest utility states induces max 

set sets constraints pruned contain sets decrease ffi social utility respect set formed 
formally fg gamma ffi set aggregated constraints satisfied initial state induces null plan cost zero 
value set value agents assign initial state 
second set achieved plan hm cost 
order set pruned case agents value set gamma ffi initial set 
third set set satisfies social welfare criterion stated definition higher value previous steps pruned 

loop termination test process ends 
votes agent state combined ctm determine set states maximizes social utility fs 
states randomly chosen agent fined clarke tax respect choice 
realize true social utility state agent reveal true preferences vote step 
clarke tax behavior dominant preferable behavior 
described step procedure order choose final consensus state votes gathered clarke tax vote 
state chosen real virtual state virtual states may included final vote intermediate votes determine 
example agent find incentives manipulate vote virtual state knowing vote subject clarke tax 
reason virtual states treated special way step 
note included agent give bid true preferences step bounded reflect worth states comparison see section 
reason agents determine worth newly formed states step procedure 
considerations lemma proves honesty dominant strategy 
theorem follows states desirable attributes procedure 
lemma step procedure best strategy vote alternatives step true normalized preferences subtracting 
proof proofs lemmas theorems article appear appendix lemma demonstrates subtle consequence independence irrelevant alternatives property original ctm 
agent change winning alternative simply causing alternatives pruned 
directly causing alternative win alternative rightful winner expose agent clarke tax 
theorem set ffi progressive individual worth functions corresponding ffi mechanism finds states satisfy social welfare criterion 
consensus reached max sw steps order length plan derives distant state answers social welfare criterion initial state 
note search intended find states satisfy social welfare criterion 
interrupt search state necessarily shortest path state search admissible respect length path 
comparison classic ctm procedure advantages agents required submit minimally conflict sufficient information preferences alternatives maintaining certain amount privacy preferences calculated submitted feasible alternatives preferences infeasible alternatives need revealed alternatives generated entire voting group dynamically making procedure distributed computationally tractable 
search process superior central generation alternatives additional reasons conflicts positive interactions addressed unified framework branching factor search space strictly constrained individual plans constraints kind cone shown upper part type algorithm uses relatively heuristic function derived bottom plans agents generated simply artificial function generation successors search tree split agents doing part search successor 
specification aggregation constraints important aspects requirements procedure ffl procedure success depends agent identifying declaring absolutely necessary constraints needed individual plan succeed 
ffl necessary temporary conflicts agents plans cause deadlocks temporal order resolve 
phenomenon achieved procedure allowing existence semi consistent sets constraints voting virtual states induce 
ffl generation consensus sets constraints aggregation individual sets constraints 
trivial 
shows simple scenarios slotted blocks world illustrate issues 
examples agents achieve consensus state fully satisfies agent goals 
slots blocks world 
move operator available costs 
specification constraints important requirement success procedure agent identify declare absolutely necessary constraints needed individual plan succeed 
example consider scenario 
agents want achieve goals fa fo goals coexist shown final goal state 
achieve goal need take action 
hand follow hm way second step plan completed stacking block block block 
operations final goal including alternatives constraints encounter opposition preventing goal achieved 
realizing purpose second move operator just achieve danger conflict may avoided 
declares set constraints conflict arises 
step declaration equals full goal description 
third step procedure aggregated set constraints fully satisfied state fa state step distant goal state 
described goal state generated step 
note plan achieves step required progress included set constraints 
conflict avoided duration temporary conflict agents plans short resolved invoking operator 
aggregation temporary constraints unfortunately case 
second scenario goal goal fo previous example way achieve goal trying temporarily violate goal 
contrast example way specify constraints way hide conflict 
example temporary crucial plan success 
process consider sets constraints relevant long consistent process steps avoiding goal state considered 
necessary temporary conflicts agents plans cause deadlocks temporal order resolve 
phenomenon achieved allowing existence semi consistent sets constraints allowing voting virtual states induce 
reason agents recognize temporary constraints terms violated actions 
identifying temporary constraints plan set constraints 
seen specification constraints contradict goal temporary 
plan violates goal mutual goal letter denotes full operator predicate denotes location excluding 
remember typewriter style denote temporary constraints 
state reachable 
sets combined constraints steps semi consistent taken account voted 
addition induced virtual states increasing value satisfied goal violated gets closer goal sets pruned 
process continues leading ninth step real mutual goal state 
aggregation functional constraints generation consensus sets constraints aggregation individual sets constraints 
third example shows trivial 
ceiling impossible blocks stacked 
time goal 
assume function fs returns available free space number blocks left slot scenario satisfies agents 
second step plans agents temporary constraints fs block wants move slot constraints enable agent move block slot removing block 
aggregation constraints requires careful analysis 
recognized aggregated constraints identical terms fs fs simply fs 
block located block initial state example solution appropriate 
scenario yield aggregated set constraints second step fs 
induced states set cost move operators actual plan achieves mutual goal costs 
problem constraints temporary agent needs free space block momentarily 
case aggregated free space stay leading state move steps distant initial state 
unfortunately clear general subtle analysis done see discussion difficulty handling functional constraints 
worth evaluation sets constraints process counts fact agents worth functions increase monotonically number satisfied constraints maximal gap bound ffi 
requirement yields non decreasing value extended set constraints 
pruning unpromising states enabled 
fact individual worth functions monotonically increase may lead counter intuitive results 
consider example 
agent achieve goal move steps achieve goals takes 
long cost multiagent move single agent move optimal state social welfare criterion 
fs fs 
note nature free space constraint temporary precondition action violates 
procedure example follow iterative clarke tax procedure solve problem section 
assume cost reaching state divided equally agents side payments necessary agent uses strictly progressive worth function gamma 
agents individual plans get constraints 
letter denotes full predicate denotes location excluding temporary constraints written typewriter style 
presents induced states step example generated states real 
step agent declares set includes possible consensus sets constraints member member agents vote state receives score example goal worth achieve agent perform hm cost values 
normalized value definition 
second step agent hands 
constraints coexist consistently 
set induces single state described 
note states satisfy set constraints minimal cost 
state achieved move state costs 
subtracting cost normalized worth values agent case agents state scores 
score greater preceding state process continues 
third step new added constraints generate possible maximally consistent extensions inducing inducing plan move operation may invoked constraint satisfied 
constraint satisfied included needed operator satisfied included operator establishes constraint necessary times plan succeed included set constraints 
inducing induced states respectively score decreases social utility pruned 
fourth step remaining extensions extended hands fa hands fo fc 
constraints yield different extensions induce states new states score respectively gamma 
sets induce extended induce fully satisfies goal scores process ends 
shows entire search tree 
intermediate votes gathered final vote employs clarke mechanism described table 
format table follows section 
row table shows pieces information regarding agent 
preferences state listed 
total score state received agent voted listed 
asterisk marks winning choice situation 
seen table maximize social welfare utility operation distant agents goals 

improves utility utility improved respect 
group social utility improved 
power influence heterogeneous agents assumed agents equal capabilities identical evaluation function 
typical real world situation 
assume example older model agent harder carry block operator move obj obj cost 
worth assessment entire set normalized preferences changed gamma gamma gamma gamma 
vote causes chosen state score 
pays tax state values utility improved gamma original scenario utility improved 
hand improve utilities respectively original scenario utilities improved respectively 
interestingly social utility increases case achieving goal leave utility gains group activity 
notice gain profit pretending disabled true preferences stay 
changed outcome voting paying tax state really values 
phenomenon may caused totally different reason 
goal worth 
relatively high worth expressed worth assessment functions assumed agents functions normalized 
evaluation function gammac theta 
function vote changed gamma gamma gamma gamma yielding outcome 
fact worth assessment function spreads worth goal progress achievement higher agent influences group 
fortunately influence agent social decision may easily controlled losing power mechanism effective preference course assigning weights agents lose possibility anonymity 
control may achieved giving influence weight ir agent normalized preferences divided choice function invoked 
order keep truth dominant strategy calculated tax weighted votes multiplied lemma due influence weights agent preferences agent best strategy step procedure vote alternatives step true normalized preferences subtracting 
example consider vote table 
desired influence voting process times greater relative original vote get gamma score states yields selection fully satisfies goal 
apparent tax 
pay tax tax social utility decrease 
setting serve solve problem described example section wish perturb influence agents decision procedure capabilities costs associate actions different 
heuristic pruning search superior centralized process dynamic search process section complex 
primary concern finding states may consensus complexity finding 
relax demand satisfied state states close actual consensus states complexity process may reduced significantly 
way guide search actual algorithm 
approach evaluation alternative state 
iterative step extension algorithm step choose extension promising state evaluation function 
note heuristic evaluation accurate consensus state max sw steps step set aggregated constraints extended 
subplans tend interfere positive ways overlapping constraints negative ways conflicting constraints similar called positive negative threats planning search overcome heuristic function satisfied state reached may sub optimal 
computationally expensive component step generation actual optimal plan derives intermediate state 
may relax demand optimality consider plan induced aggregated set optimal 
approach example shown section cost deriving final consensus state move operators just 
way reducing complexity determining optimal plan intermediate state exploit computational power participating agents 
approach agent assigned subgoal corresponds contribution state question 
agents follow variant main algorithm derive plan generates state 
example division subgoals final state fa fa fa note case need consider semi consistent sets aggregated constraints corresponding virtual states subgoals coherent 
reason heuristic evaluation accurate 
approach actual multiagent plan may constructed process 
construction may step algorithm 
agent bids action extension implies 
bid sequence previous actions extended set 
minimal cost sequence may determined ensure honest bidding possible employ vickrey mechanism 
way prune search process define dominance relation alternative extensions step ignore dominated extensions 
example prefer extension satisfies full declaration agent partially satisfies different declarations 
aggregated set may prefer extension induces grounded constraint extension induces grounded constraint lse appears agent final goal intuitively way avoid directions constraints added merely stumbling blocks 
heuristic example states considered dominated states respectively 
cases preferable 
example contain fon fon premature removal block avoided 
partial revelation preferences significant drawback ctm mentioned fact participating agents expected calculate declare exact entire set utilities preferences set alternatives 
interests reach right decision ensure agents privacy possible 
introduce iterative variations clarke mechanism allow agents reach consensus calculating revealing partial information preferences 
example example consider group scheduling agents attempting establish schedule meetings owners 
individuals interests agents represent varying preferences regarding possible schedules 
example individuals want meet supervisor individual meeting 
prefer preference remain private 
shown possible alternative schedules 
agents preferences alternatives 
example prefers schedule finds relatively choice strongly decision taken clarke tax agent best interest declare true preferences 
table shows clarke tax settle schedule agent paying tax 
mechanism publically uncovered agents preferences 
may case agents controlling owners wish conceal true evaluations various schedules 
doesn want schedule example doesn mean wants publically admit fact 
section presents iterative dynamic variation original mechanism 
basic idea shot voting procedure vote takes place sequence steps 
step voter change group vote favor alternative fixed amount ffi opt process 
method manages preserve agents privacy regard preferences possible 
addition group come quick consensus agents fully explore preferences alternatives 
longer decision takes refined calculation needed 
notation summarize notation procedure specification 
parallels notation embedded stepwise clarke tax mechanism section 
ffl function ir returns true worth alternative min worth state values 
ffl value adds state round total sum far alternative denotes vector hd denote vector created replacing kth element vector ffl set preferences declared agents round denoted denotes set excluding preferences 
ffl sigma total score step ffl denotes choice round maximizer sigma 
ffl tax imposed round gamma 
ffl gamma utility gets choice round tax imposed respect round 
partial revelation voting procedure imagine voter asked help choose outcomes true preferences represented vector 
voting procedure going protect secrecy preferences possible 
prior round agent stated preferences initialized 
step agent specify positive increase elements vector subject restriction attempt change current group choice outcome amount ffi parallel increase outcomes wishes 
alternatively agent remain silent true preferences won change group outcome reveal preferences opt steps 
example say certain step group choice appears agent stated preference far previous rounds assume ffi 
round agent specify increase try change outcome favor alternative 
agents votes combined linear sum new choice step results 
formally partial revelation voting procedure defined follows 
step preferences agents assumed equal zero 
choice arbitrarily defined 
step agents simultaneously vote 
agent vote consists vector specifies positive increase preferences 
agent keep silent increase vote outcome different current choice way change outcome ffi voter 
agent opts attempt change group vote particular outcome ffi allowed increase vote alternatives parallel agent true preferences apparently change group outcome may choose take part subsequent steps voting procedure may may choose reveal entire set preferences wishes 

new choice taken gets highest score round choice function returns fs maximizer sigma 

change vote step process stops chosen 

times agent alternative declared worth zero effectively normalizes preferences 

process agent fined clarke tax calculated respect agents preferences reached step 
final round tax paid round gamma prove certain properties iterated voting procedure 
state useful lemma agent best strategy voting procedure consistently maintain balanced distance vote true preferences outcome possible 
example true preferences increasing vote sum vote parallel increased sum 
lemma oe denote declared preferences round constant property alternative state true worth state differs oe constant 
dominant strategy voting iterative procedure choose oe maintains constant relationship agent true preferences 
observations optimal voting strategy denote alternative maximizes utility delta sigma gamma sigma ffi amount needed change social choice current choice agent choice 
effect maximizer delta 
evident proof lemma requirement procedure vote alternative exceed gamma min 
combined constraint agent increase vote outcome delta requirement procedure yields best response round keep silent current choice maximizes utility gamma min delta gamma min gamma reaches ceiling preferences opt delta ffi change vote favor limitations voting procedure 
note agent get free ride keeping silent going carry job tax decrease zero case 
delta gamma gamma max update vote adequately reflect true preferences respect limitations imposed voting procedure 
state certain properties iterated voting procedure theorem partial revelation voting procedure properties 
chosen alternative identical chosen regular ctm ffi choices differ ffi wrong may chosen 
average agents reveal information original setting indifferent alternatives reveal preferences assign greatly different values alternatives 
addition amount information needed inversely proportional identity preferences held agents closer agents preferences needs revealed 

agent maximum spread alternatives highest lowest worth 
call largest spread group voters process ffi rounds 
running procedure example table shows process works scheduling agents described section 
round choice set arbitrarily tax paid agent agent gets utility 
keeps silent agents prefer pay ffi order change group vote favorite choice 
prefer wins highest score choice round 
motivated bring change 
change outcome vote score competing alternative reach 
increases vote 
hand vote opts reveals entire normalized set preferences 
round choice state values 
third round increase votes gamma group choice turns agent improve utility changing vote prefers outcome seen doesn prefer change group vote process ends round everybody keeps silent 
notice indifferent ended revealing round entire normalized set preferences 
agents maintained privacy 
example know significantly preferred determining ffi vote give accurate result ffi small allow agent express preferences ffi equal minimal difference agent preferences ffi min gamma way determining ffi step gamma voting commences agent declares ffi prefers minimal value chosen 
agent reason lie small ffi wastes time big destroys influence 
convergence solution efficient value ffi determined dynamically 
step agent opting determine ffi system wide ffi minimal agents ffi 
process agent best suggestion round ffi min gamma minimizer fd round ffi equal gap preferred choice second preferred 
example get ffi ffi ffi ffi ffi 
coalitions voting procedures original ctm sensitive coalitions 
words attributes mechanism important fact telling truth dominant strategy maintained agents enter agreements vote taken 
subset agents collude exploit process getting outcome want having pay 
example consider agents alternative chosen accomplish agents worth declaration sufficient chosen alternative 
way assuming agents know sufficient value facing coalition chosen agents having pay tax agent caused chosen condition tax levied 
general case larger distortion forcing preferred social decision risk accept assumptions votes proves erroneous 
specifically consider vote described 
caused favorable state chosen fined tax 
agree vote declare instance gamma gamma gamma chosen agents avoid tax payment 
worse consider possible coalition form 
prefer chosen come pre vote agreement declare gamma gamma gamma guarantee group choice paying tax 
crafty schemes may easily dealt formation coalitions known priori treating coalition single agent truth telling remains coalition dominant strategy 
formation coalitions may occur secretly danger process manipulated coalitions exists clarke tax mechanisms 
unfortunately proven exists successful preference revelation mechanism truth telling agent dominant strategy ultimate choice group maximizes social welfare immune coalitions 
size possible coalitions limited equal fixed mechanism exists 
hand fixed coalition expected gain cheating compared telling truth decreases number agents population 
population taken random sample fixed distribution probability cheating coalition size gain fixed positive utility approaches zero sample size grows 
sensitivity mechanism coalitions handled loss optimality 
way limit magnitude bids allowable agent exceed predefined limit 
risk limitation course force agent true preferences 
times reasonable set limit agent declared goal example setting limit 
agent declare expensive goal tracked observing actual bids 
way charge tax winners agents desired outcomes chosen group regular ctm pay tax cause deviation optimal equilibrium 
aw denote set agents highest bid chosen ended having pay tax 
agent group calculate tax profile dw vote members aw 
additional tax mechanism agents form coalitions reduce tax coalitions alter chosen state 
telling truth member group guaranteed pay utility gains chosen state possible reduce tax proportion portion members aw voting society example multiplying tax gamma aw 
coalitions partial revelation voting procedure original ctm iterative voting procedure sensitive coalitions agents act coordinated way pay tax 
certain ways iterated procedure exploited coalitions easily original clarke tax built mechanism coordinating moves partner keep cooperatively altering outcome choice tax original clarke tax agents need set coordination prior voting second guess votes non coalition members 
alter simultaneous iterative procedure done sequentially agent voting rules 
case procedure immune coalitions agent causing change outcome agents simultaneously 
agent changes outcome pay tax 
problem procedure recurrent free rider problem mentioned 
agent may tempted vote honestly won pay tax hope agent cause original agent preferred outcome chosen 
agent counts changing outcome doesn happen incorrect non optimal choice may group 
possibility incorrect outcome occurs agents act possibly incorrect beliefs restrict acting definite knowledge agents correct outcome result voting procedure agents get free rides 
sequential iterative procedure guarantees long agent operates relative definite knowledge agents correct outcome chosen coalition manipulate 
related research considered related issues clarke tax mechanism automated systems 
explored distribute voting mechanism longer requires central vote counter 
considered issue tax collected benefit voters distribute workload global plan agents 
analyzed standard cryptographic techniques means maintain privacy regarding agent preferences 
fundamental voting theory economic mechanisms 
survey relevant issues 
economic voting mechanisms derive consensus multiagent systems novel artificial intelligence issues reaching consensus broader sense coordination multiagent environments main concern researchers distributed artificial intelligence 
section briefly review relevant field 
dai solving problems coordination carried researchers area distributed problem solving dps 
common approach central coordinator 
approach includes centralized planning central agent generates global plan hands pieces plan performed participating agents 
centralized approach falls category synchronization pre existing plans 
assumption individual plans created submitted central planner responsible coordination 
fast probabilistic approach solving kind coordination suggested 
methods relaxing centralized solutions coordination 
common way hierarchy coordinating agents agent responsible coordination hierarchy 
coordination done communication process 
approach uses hierarchical technique partial global plans 
framework group activity modeled network distinction hierarchical types plans information nodes 
climbing hierarchy node global long term perspective multiagent activity 
approaches allow hierarchy dynamically changed 
underlying working assumption dps paradigm agents inhabiting multiagent environment centrally designed gave rise frameworks impose coordination integral part environment 
notable member class artificial social systems inspired multi entity model 
uses society metaphor design robots operate loosely coupled fashion 
formal definition basic semantics artificial social systems 
model augmented set restrictions agents actions define actions agent may legally perform 
concept gave rise term social laws introduced 
set social laws meant enable efficient interaction agents adhere 
usefulness social traffic laws domain mobile robots illustrated 
main research assumed social laws generated line prior actual interaction participating agents obey laws 
idea dynamic emergence laws discussed 
note difference social laws mechanism design exploring article 
research social laws concerns public behavior agents private preferences held agents 
assumed desired public behavior directly imposed agents 
approach taken establish cooperation formalization agents intentions 
agents take beliefs intentions consideration collaboratively plan 
collaborative agents build full plans partial plans alter dynamically time 
closer approach frameworks explicitly address need agents reach agreement consensus 
typically consensus reached process goal revelation information exchange loosely categorized label negotiation 
example persuader system uses negotiation find compromise acceptable agents conflict 
goals totally satisfied final agreement 
negotiation process seen search dynamic space consisting agents beliefs agents beliefs 
space changes dynamically agents proposals revealed 
example multi phoenix system 
planning actions needed assess contain fires performed spatially distributed agents 
system addresses sophisticated negotiation protocol dynamic allocation resources 
done dai subject reaching consensus context multiagent systems mas 
approach negotiation sense game theory specifically bargaining theory 
approach solve problem direct manner negotiation 
time interval agents vote possible relevant distributions step algorithm time interval 
individual utilities accurate distribution resources chosen maximizes social utility minimizes damage group perspective 
addition need assume agents benevolent 
game theoretic method coordinating activities autonomous agents mas recursive modeling method 
agent models agents recursive manner acquires probabilistic knowledge expected utility values agents preferences abilities world 
agent looks action maximize individual utility estimating expected utility values 
uncertainties represented probabilistic distributions 
alternative game theoretic model time taken consideration appears 
general agents common goal achieve 
wants little possible help carry goal 
agents assumed full information rational commit agreements reached 
set possible agreements assumed exist include pairs sharing satisfy goal 
approach handling negotiation mas explored 
framework agents converge single choice called negotiation set 
negotiation set group agreements exhibit properties positive utility agents pareto optimality 
disadvantage classic approaches negotiation compared approach place large computational burden negotiating agents 
agents compute elements negotiation set computation may non trivial 
agents sufficient information preferences order compute negotiation set 
agents need consider opponents possible strategies determine best response 
negotiation treated agent consensus 
agents preferences optimality criterion determining optimal choice matter direct computation substantive role negotiation process reveal preferences 
method uncovering true preferences agents away need kind negotiation 
way bypassing negotiation quite similar approach market mechanisms 
attempts inside artificial intelligence outside consider market mechanisms way revealing agents true preferences efficiently allocate resources 
notable ai smith contract net malone enterprise system miller drexler open systems wellman walras system 
contract net high level communication protocol distributed problem solving system 
aim facilitate distribution tasks processors nodes operate system 
collection nodes contract net 
contract nodes established tasks executed 
node net act manager contractor 
task assigned node net decomposed contractor 
agent manager task execute task contractor simultaneously 
contract established bidding scheme includes announcement potential manager bids sent potential contractors 
formalization bidding awarding decision process originally described informally appears formalization marginal cost calculation local agent criteria 
enterprise system built variation protocol 
protocol schedule tasks different processors connected local area network 
personal workstations dedicated owners idle serve general purpose machines 
distributed scheduling protocol locate best available machine perform task 
protocol similar contract net 
main difference defined assignment criteria 
enterprise contractors select tasks announced managers task priority managers select contractors time completion estimates contractors 
concept contracts 
agent contract wants tasks done 
case agent perform task better 
reward method monetary system convince agents accept contracts 
mechanism sub contracting evaluated simplicity pareto optimality stability criteria 
system takes economic approach solve problem distributed agents price mechanism proposed wellman 
types agents consumers producers buy sell goods 
producers may transform kind goods production function 
type agent initial allocation goods 
types try maximize utility consumers try consume producers maximize profit 
distinct auction associated 
agents get submitting bids auction 
bids specify correspondence prices quantities agent wants demand supply 
market equilibrium respect commodity current price commodity clearing regarding current bids 
price clearing quantity demanded balanced quantity supplied 
system walras computes market equilibrium price 
article clarke tax mechanism ctm plausible tool deriving consensus multiagent systems 
clarke tax voting procedure highly desirable characteristics automated agents encourages truth telling results choice exhibits maximal social utility 
addressed fundamental implementation problems arise considering employment mechanism practical real world systems 
problems included generation alternatives assessment alternatives worth power influence participating agents formation coalitions 
major issue treated potential desire agents keep preferences private far possible 
original mechanism requires revealing full preferences developed method maintains agent privacy preserving positive attributes ctm 
introduced novel voting procedure enables group agents construct joint plan results final state maximizes social welfare group 
conflicts agents incrementally dealt agents iteratively search final state maximizes entire group utility incrementally constructing plan achieve state 
introduced alternative simultaneous iterative voting procedure enables agents reach decision highest social utility partial information optimal strategy voting procedure proved desirable properties procedure 
introduced sequential version voting procedure discouraged coalitions remains general problem clarke tax mechanism 
systems comprised individually motivated automated agents increasingly common 
agents need resolve conflict reach consensus carry tasks effectively 
techniques ones explored provide powerful tools coordination multiagent activity 
approaching question multiagent environment design formally able construct alternative protocols precisely characterize properties 
acknowledgments perry ed durfee useful discussions material 
especially helpful suggesting privacy distribution issues clarke tax mechanism particularly important dai community 
research partially supported israeli ministry science technology israel science foundation air force office scientific research contract rome laboratory rl air force material command defense advanced research projects agency contract nsf young investigator award iri prof martha pollack 
adami perry 
joint project commitment 
review economic studies 
arrow 
social choice individual values 
john wiley new york 
bennet conn group incentive properties mechanisms provision public goods 
public choice 
ken binmore 
fun games text game theory 
heath lexington massachusetts 
chapman 
planning conjunctive goals 
artificial intelligence july 
clarke 
multipart pricing public goods 
public choice fall 
clarke 
multipart pricing public goods example 
editor public prices public products 
urban inst washington 
meyer lesser 
multistage negotiation distributed planning 
alan bond les gasser editors readings distributed artificial intelligence pages 
morgan kaufmann san mateo california 
corkill 
hierarchical planning distributed environment 
proceedings sixth international joint conference artificial intelligence pages tokyo august 
corkill 
framework organizational self design distributed problem solving networks 
phd thesis university massachusetts amherst ma december 
doyle wellman 
impediments universal preference default theories 
artificial intelligence 
jon doyle 
rationality role reasoning 
computational intelligence may 
durfee lesser 
negotiating task decomposition allocation partial global planning 
les gasser michael huhns editors distributed artificial intelligence vol 
ii pages 
morgan kaufmann san mateo california 
edmund durfee 
coordination distributed problem solvers 
kluwer academic publishers boston 
edmund durfee jeffrey rosenschein 
distributed problem solving multiagent systems comparisons examples 
proceedings thirteenth international workshop distributed artificial intelligence pages olympic washington july 
elgot miller perlis 
frame problems 
proceedings workshop frame problem artificial intelligence pages lawrence kansas april 
ephrati 
planning consensus autonomous agents 
phd thesis hebrew university jerusalem jerusalem israel october 
ephrati rosenschein 
clarke tax consensus mechanism automated agents 
proceedings ninth national conference artificial intelligence pages anaheim california july 
ephrati rosenschein 
multi agent planning search consensus maximizes social welfare 
pre proceedings fourth european workshop modeling autonomous agents multi agent world rome italy july 
ephrati rosenschein 
reaching agreement partial revelation preferences 
proceedings tenth european conference artificial intelligence pages vienna austria august 
john wiley sons 
ephrati rosenschein 
distributed consensus mechanisms self interested heterogeneous agents 
proceedings international conference intelligent cooperative information systems pages rotterdam netherlands may 
ieee computer society press 
ephrati rosenschein 
multi agent planning dynamic search social consensus 
proceedings thirteenth international joint conference artificial intelligence pages chambery france august 
ephrati zlotkin rosenschein 
meet destiny non manipulable scheduler 
proceedings acm conference computer supported cooperative pages chapel hill north carolina october 
etzioni 
embedding decision analytic control learning architecture 
artificial intelligence 
jerome feldman robert sproull 
decision theory artificial intelligence ii hungry monkey 
cognitive science april 
fishburn 
condorcet social choice functions 
siam journal applied mathematics 
drew fudenberg jean tirole 
game theory 
mit press cambridge massachusetts 
genesereth fikes 
knowledge interchange format version manual 
technical note logic stanford university logic group 
georgeff 
communication interaction multi agent planning 
proceedings national conference artificial intelligence pages washington august 
georgeff 
theory action multi agent planning 
proceedings national conference artificial intelligence pages austin texas august 

manipulation voting schemes general result 
econometrica 
matthew ginsberg david smith 
reasoning action possible worlds approach 
proceedings workshop frame problem artificial intelligence pages lawrence kansas april 
matthew ginsberg david smith 
reasoning action ii qualification problem 
proceedings workshop frame problem artificial intelligence pages lawrence kansas april 
piotr gmytrasiewicz edmund durfee david 
decision theoretic approach coordinating multiagent interactions 
proceedings twelfth international joint conference artificial intelligence pages august 

justice voting demand revelation 
public choice 
green 
partial equilibrium approach free rider problem 
journal public economics 
green 
coalition incentive compatibility 
review economic studies 
grosz sarit kraus 
collaborative plans group activities 
proceedings thirteenth international joint conference artificial intelligence pages chambery france 
grosz sidner 
plans discourse 
cohen morgan pollack editors intentions communication 
mit press 
groves 
incentives teams 
econometrica 
groves 
theories incentive compatible choice compensation 
werner editor advances economic theory pages 
cambridge university press cambridge 
peter haddawy steven hanks 
issues decision theoretic planning symbolic goals numeric utilities 
proceedings darpa workshop innovative approaches planning scheduling control pages november 
john 
approaches bargaining problem theory games critical discussion hick nash theories 
econometrica 
john 
utilitarian morality world half altruists 
walter heller ross starr david editors social choice public decision making chapter pages 
cambridge university press cambridge london 

informationally decentralized systems 
editors decision organization 
north holland 
jacobs kiefer 
robot decisions maximizing utility 
proceedings third international joint conference artificial intelligence pages august 
kanazawa dean 
model projection action 
proceedings eleventh international joint conference artificial intelligence pages 
matthew katz rosenschein 
verifying plans multiple agents 
journal experimental theoretical artificial intelligence 
andrew 
fast cut protocol agent coordination 
proceedings eleventh national conference artificial intelligence pages washington dc july 
kraus 
agents contracting tasks non collaborative environments 
proceedings eleventh national conference artificial intelligence pages 
kraus zlotkin 
multiagent negotiation time constraints 
computer science technical report series cs tr university maryland college park maryland october 
sarit kraus ephrati daniel lehmann 
negotiation non cooperative environment 
journal experimental theoretical artificial intelligence october december 
sarit kraus jonathan gilad zlotkin 
multiagent negotiation time constraints 
artificial intelligence june 

theory incentives overview 
werner editor advances economic theory chapter pages 
cambridge university press cambridge 
duncan luce howard raiffa 
games decisions 
john wiley sons new york 
thomas malone richard fikes howard 
enterprise market task scheduler distributed computing environments 
huberman editor ecology computation pages 
north holland publishing amsterdam 
david mcallester david rosenblitt 
systematic nonlinear planning 
proceedings ninth national conference artificial intelligence pages anaheim california july 
mcdermott 
planning acting 
cognitive science 
miller drexler 
markets computation open systems 
huberman editor ecology computation pages 
north holland publishing amsterdam 
lesser 
cooperative planning decentralized negotiation multi phoenix 
proceedings workshop innovative approaches planning scheduling control pages san diego california november 
moses tennenholtz 
cooperation multi entity model 
proceedings eleventh international joint conference artificial intelligence pages detroit michigan august 
moses tennenholtz 
computational aspects artificial social systems 
proceedings th international workshop distributed artificial intelligence pages glen arbor michigan february 
moulin 
characterization pivotal mechanism 
journal public economics 
walker 
identifying free rider problem 
editor aggregation revelation preferences chapter pages 
north holland 
nash 
bargaining problem 
econometrica 
nash 
person cooperative games 
econometrica 
richard 
formal approach planning concurrent actions external events 
technical report tr university rochester 
peleg 
game theoretic analysis voting committees 
cambridge university press cambridge 
rosenschein 
synchronization multi agent plans 
proceedings national conference artificial intelligence pages pittsburgh pennsylvania august 
rosenschein genesereth 
deals rational agents 
proceedings ninth international joint conference artificial intelligence pages los angeles august 
rosenschein zlotkin 
rules encounter designing conventions automated negotiation computers 
mit press cambridge massachusetts 
rosenschein zlotkin 
agents designing conventions automated negotiation 
ai magazine fall 
alvin roth 
axiomatic models bargaining 
springer verlag berlin 
ariel rubinstein 
perfect equilibrium bargaining model 
econometrica 
sandholm 
implementation contract net protocol marginal calculations 
proceedings eleventh national conference artificial intelligence pages 
satterthwaite 
strategy arrow conditions existence social welfare functions 
journal economic theory 
savage 
foundations statistics 
john wiley new york 
shoham tennenholtz 
synthesis social laws artificial agent societies 
proceedings tenth national conference artificial intelligence pages san jose california july 
yoav shoham moshe tennenholtz 
emergent conventions multi agent systems initial experimental results observations preliminary report 
principles knowledge representation reasoning proceedings third international conference cambridge massachusetts october 
smith 
plan coordination support expert systems integration 
proceedings darpa knowledge planning workshop pages december 
smith 
aggregation preferences variable 
econometrica 
reid smith 
framework problem solving distributed processing environment 
phd thesis stanford university 
reid smith 
contract net protocol high level communication control distributed problem solver 
ieee transactions computers december 
philip jr topics theory voting 
expository monograph series 
birkhauser boston 
sussman 
computational model skill acquisition 
american elsevier new york 
katia sycara 
resolving goal conflicts negotiation 
proceedings seventh national conference artificial intelligence pages st paul minnesota august 
katia sycara 
argumentation planning agents plans 
proceedings eleventh international joint conference artificial intelligence pages detroit michigan august 

new superior process making social choice 
journal political economy 

demand revealing process welfare indicator 
public choice 
vickrey 
counterspeculation auctions competitive sealed tenders 
journal finance 
michael wellman 
market oriented programming environment application distributed multicommodity flow problems 
journal artificial intelligence research 
frederik 
problems monopoly economic 
routledge sons london 
zlotkin rosenschein 
negotiation conflict resolution non cooperative domains 
proceedings national conference artificial intelligence pages boston massachusetts august 
zlotkin rosenschein 
negotiation goal relaxation 
demazeau muller editors decentralized proceedings second european workshop modeling autonomous agents multi agent world pages 
elsevier science publishers north holland 
proofs proofs theorems lemmas appear article 
proof lemma show declaring dominant strategy show agent utility declaring greater declaration gamma expanding utilities worth minus tax get gamma gammaw expanding tax components get gamma gammaw gamma eliminating equivalent plus minus terms adding subtracting get gammaw gamma gammaw definition gamma state maximizes state maximizes 
definition choice function get gamma definition max gamma proof theorem general idea set aggregated constraints extended search process limit consistency maximal consistent set aggregated constraints eventually reached 
case state answers social welfare criterion induced maximal set consistent constraints 
search process reach sets constraints induce social welfare states 
simplicity assume set individual worth functions strictly progressive 
generalization proof ffi progressive worth functions straightforward 
sw step 
need prove final set states step algorithm 
set constraints induces length plan results prove stronger claim imposed procedure finds states answers social welfare criterion regard additional constraint 
se denote states distant sw se definition sw state se 
member member sufficient prove belongs step procedure sufficient prove generated stage procedure exists stage set constraints induces generated 
procedure notation 
proof induction 

procedure follows obviously 
effect definition true 
achieved operator 
case preferred agents member holds 
win higher worth state satisfy constraints individual plans assume progressive worth functions 
set additional constraints denoted follows enables agents want maximize utility impose constraints step 
required 
assume claim holds gamma denote sets proceed sets constraints ae gamma 
state induced sets holds 
case satisfies constraints denote set additional constraints 
monotonicity worth functions regard satisfied constraints follows state real virtual member sw se 
superior state satisfies way additional constraints satisfied invoking operators restriction plans exceed length maximizer social welfare 
hand sw se follows induction assumption procedure step sw se reduce social utility preceding states pruned kth step 
group agents prefer member 
case strictly progressive worth functions enables definition 
number steps search bounded max sw 
step procedure set constraints pruned extended 
extension constraint belongs 
eventually furthest state maximal social welfare 
extensions set constraints induces state pruned step 
process proceed longer number constraints needed achieve state 
proof lemma show declaring oe dominant strategy show utility agent declaring greater declaration oe gamma expanding utilities worth minus tax get oe gamma oe gammaw expanding tax components get oe gamma oe gammaw gamma eliminating equivalent plus minus terms get oe oe gamma addition subtraction get oe gamma oe gamma gamma oe definition oe gamma get oe oe oe gamma oe maximizer oe oe maximizer 
definition choice function get oe gamma oe definition max oe gamma oe proof theorem assume contrary voting procedure stops round choice clarke tax mechanism 
case exists gamma gamma gamma gamma 
case round vote different optimal behavior contradict behavior utility maximizer 
sufficient consider extreme cases agents best alternative arbitrary choice vote round information revealed case prefer alternative vote ends second round choice scoring theta ffi 
gap max gamma min indifferent agent relatively close zero agent lose influence small number rounds opt revealing entire set preferences 
bigger spread longer agent participate 
require analysis show precise correlation disagreement information revelation 
stopping condition follows directly fact influence group choice exceed gamma min gamma ffi extreme influence vote follows procedure round excluding rounds score winning alternative round increases ffi long voting process continues 
cost changing vote increases ffi round 
extreme case gamma min ffi rounds vote reaches gamma min opt 
vote max gamma min ffi 
notice evident argument closer agents preferences sooner process 
proof lemma show declaring dominant strategy show utility agent declaring greater declaration gamma expanding utilities worth minus tax get gamma theta gammaw theta expanding tax components get gamma theta theta gammaw theta gamma theta eliminating equivalent plus minus terms adding subtracting get gamma theta lemma originally proven case analysis proof original 
gamma gamma theta definition gamma theta gamma theta factoring get theta gamma maximizer maximizer 
definition choice function get theta gamma definition necessarily maximizing theta max gamma basic concepts solution social decision processes common requirement decision function optimal sense 
different kinds desirable attributes decision functions characterize optimality suggested game theory economics voting theory 
typically attributes concerned influence individual agent outcome impact outcome individual 
common criteria include pareto optimality fairness individual rationality 
section briefly summarize common criteria 
general optimality decision process may viewed respect main aspects categories 
mention common criteria addressed literature 
attributes resulting decision global optimality chosen alternative optimal global sense 
common requirement decision pareto optimal meaning impossible change decision way agents better making agents worse 
attribute called unanimity denote alternative preferred alternative agents issues solution criteria discussed context combining various default theories 
chosen 
pareto frontier pareto optimal decisions additional criteria optimality social welfare theory 
discuss issue section 
condorcet winner chosen alternative beat alternative pairwise contest 
weaker versions demand condorcet loser criterion alternative lose pairwise contests alternative chosen 
generalized condorcet criterion demands alternatives partitioned sets alternative beats alternative pairwise contest process choosing alternative note generalization implies previous criteria 
majority criterion majority agents alternative choice decision process choose stronger version states preferred majority agents ultimate choice group 
nash independence irrelevant alternatives set alternatives chosen alternative removed set chosen 
words choice remain unchanged group subset original group includes original choice 
weaker version arrow independence irrelevant alternatives demands choice independent potential alternative included current set alternatives collective preferences pair depend individual preferences pair 
monotonicity chosen process agents change preferences favor changing order preferences alternatives remain choice 
issue monotonicity requires utility choice taken entire set alternatives lower utility choice subset entire set 

attributes process individual rationality agent may gain utility part process compared participating 
simplicity process simple respects computational complexity determining choice individual computational complexity determining agent behavior strategy light rules process 
stability behavior participants converge equilibrium point remain insensitive minor perturbations strategy players section describe main notion equilibrium game theory 
privacy preserving information decentralization behavior individual depend little information possible regarding preferences behavior choice function depend global view possible contrast account interactions individual preferences 
example considered preferable behavior determined aggregated behavior having take account individual behavior member 
decentralization degree distribution affects likelihood bottleneck fragility process need central decision maker 
expressiveness decision mechanisms consider ordinal preferences agents 
magnitude alternative preferred expressed 
mechanisms allow powerful rating preferences rating alternatives points assignment actual cardinal utilities preferences 
expressive rating informed choice 
symmetry possible permutations agents roles process outcome remain regardless permutations 
strongest kind symmetry anonymity says process answers possible symmetries identity agent absolutely influence outcome 
neutrality name alternatives matter exchange candidates ordering agent outcome process change accordingly 
general results social welfare theory large body voting theory social welfare theory considers groups decisions transferable utility money extracted paid agents 
social welfare theory exists distinction social welfare function swf social choice function scf 
assigns social ordering entire set alternatives individual preference profiles second chooses alternative set alternatives 
classic arrow introduced appealing swf attributes proved simultaneously satisfied 
case interested scfs 
scfs reach pareto optimal decision suffer major drawback manipulable means agent benefit declaring preference true preference 
rational agent tend manipulate process 
stability choice mechanism essential case 
assume agents rational self interested concerned preferences manipulate group decisions 
unfortunately theorem due satterthwaite states non manipulable scf ranges alternatives 
means choice function corresponding strictly agents preferences motivates participating agents reveal true desires 
result pertains interactions transferable utility 
clarke tax mechanism depends precisely transfer utility 
optimality social welfare consider designers multiagent environment charged establishing rules agents encounter interact 
rules determined builder agent free design machine way wants 
rules established certainly affect choices building agent 
circumstances designers multiagent environments able formalize notion global utility want agents activity maximize global utility 
point view may universally accepted example designers may unable come agreement definition global utility provides useful starting point design considerations 
research interested consensus states maximize welfare entire society 
ways measure global utility obvious environment designers decide 
considerations pure utility values income fairness need taken account 
example desirable scenarios look state maximizes median utilities weighted sum utilities egalitarian approach want maximize minimal utility maxmin minimize differences utility gain minmax gamma 
simple common approach due nash choose outcome maximizes product individual utilities 
approach guarantees relatively fair distribution mutually earned utility narrows space feasible consensus states 
assumes positive utility gain participating agent 
negotiation protocol autonomous agents follows approach may 
approach contrary agents share cost achieving consensus state may negative utility 
agents rationale participation possibly reduce loss 
global perspective agents activity ignores issue individual fairness section discusses problem 
research follow pure utilitarian approach prefer consensus states maximize sum individual agents utilities minus cost final state achievement 
contrast approach maximizes product example state gives agents utility respectively state gives utility 
prefer state gives total utility costs achieve state total utility cost 
discussion approach may 
assuming agent assigns worth alternative see section define criteria global maximization utility ffl set worth functions fw agents decision group define social welfare utility state summation members society minus cost achieving state gammac 
normalize worth functions agent iw define normalized global utility state sum normalized worth functions 
ffl say voting procedure satisfies social welfare criterion ends choosing nonempty set states sw sw max sw contains states maximal social utility 
notice states maximal pareto optimal benefit losing true state maximal 
game theoretic concepts solution general kind interaction consider may viewed game 
agent chooses strategy computer course strategy simply program controlling computer choices 
strategy tells action declaration preferences case choose instant interaction 
combination strategies played entire group gammai determines outcome interaction particular determines resulting payoff agent 
game theory addressed interactions similar considered 
interactions analyzed determine agent chosen strategies rules interaction 
aim complementary design rules induce agents adopt specific strategy consider desirable similar spirit mechanism design called implementation problem game theory 
possible developments interaction may represented game tree 
node represents decision choice player different choice represented different branch 
history interaction agent able distinguish set possible nodes actual node 
set called information set particular point 
path tree describes possible interaction 
nodes tree describe agent resulting payoff path 
motivated adopt particular strategy rational selfish agent convinced strategy superior sense alternative strategies 
common solution game theory derives cooperation best response agents cooperative behavior definition strategy combination nash equilibrium agent incentive deviate strategy agents deviate 
formally gammai gammai concept solution example distributed artificial intelligence literature 
concept equilibrium satisfying cases suffers drawbacks 
embeds implicit assumption agent monitor verify cooperated 
assumption especially problematic society computationally bounded artificial agents considered 
second general multiple equilibrium points game difficult group users converge specific equilibrium point 
third desirability strategy considered player viewpoint interaction consideration possible paths game causing equilibrium point sensitive dynamics interaction 
stronger concept solution second hierarchy solutions derives desired strategy cooperation case unique equilibrium development path interaction 
definition subgame game consisting information set singleton player information partition node successors payoffs associated nodes information sets include node successors include node successor nodes 
strategy combination subgame perfect nash equilibrium nash equilibrium entire game relevant action rules nash equilibrium subgame 
approach taken example 
strongest concept solution hierarchy motivate agent follow desirable behavior regardless 
motivation achieved strategy proven rules encounter best strategy agents 
definition strategy dominant strategy agent strictly best response strategies players pick sense strategies pick payoff highest formally gammai gammai dominant strategy equilibrium strategy combination player dominant strategy 
scenario attractive solution particular behavior certain desirable properties agent dominant strategy 
having mechanism induces equilibrium point result dominant strategy hand single equilibrium point equivalent ones specified agreed ahead time agent designers 
allows engineers machines converge solution 
desirable simplifies reasoning required agent 
fact importance agents behavior away need reason agents strategies knowledge computational capabilities 
behavior agent depends solely characteristics economics attribute known informational decentralization 
comparison approaches individual complexity decision making reduced significantly 
concept solution 
article focused design rules encounter induce solution dominant strategy equilibrium 
blocks world example individual goals true worth sum tax state state gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma sum gamma gamma calculating clarke tax alternative final states overview process simpler blocks world example scenarios slotted blocks world induced states steps entire search tree worth state score state tax gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma sum gamma cumulative voting clarke tax mechanism true worth sum tax utility schedule schedule gamma gamma gamma gamma gamma gamma sum standard clarke tax mechanism sigma gamma sigma gamma sum sum sum sum iterative steps consensus 
