byzantine agreements secure communication wagner department mathematics st john college university queensland byzantine agreements formally proposed lamport finding faulty processors computer networks :10.1.1.12.1697
article process finding faults uncover traitors secure communications networks 
maintaining reliability trusted networks important application byzantine agreements 
introducing fundamentals byzantine generals problem generalized agreement protocol establish game theoretic solution cryptographic problem secure communications networks 
keywords secure communication byzantine agreement byzantine generals problem distributed system fault message authentication conference topics 
game theory 
networks 
telecommunications uncover traitor network agents messages measure loyalty 
question raised times communications time gone unanswered 
wish explore notion faulttolerant means communication 
reliable communications system able cope failure components 
include users communications system classified components system 
failed component may exhibit different types behaviour may include sending conflicting spurious clearly false information 
sort problem expressed abstractly lamport byzantine generals problem bgp :10.1.1.12.1697
best way conceptualise bgp example byzantine army poised attack 
army comprised divisions commanded general 
having sent observers general decide course action 
collective decision available facts played division unison 
cases may traitor 
note model location commanding general matter traitors need taken account 
broadcasting guarantees recipient message received 
guarantee may longer exist setting communication peer peer people network traitors 
type setting byzantine agreement offers best thing broadcast 
email maths uq edu au ba secure communication byzantine agreement problem collection general problems fault tolerance 
section apply linial ben goldreich attempt case applying byzantine agreements secure communication fault detection 
traitor tolerance secure communication need assumptions behaviour traitors 
types bad player model curious malicious 
curious players try extract information fringes operation possible exchanges players 
raises problem information leaks trying prevent curious players advantage source information 
malicious players players byzantine agreement problems 
models players hide information information theoretic secure communication channels exist agents 
third party gain information eavesdropping messages sent channel 
example sort protection man middle attack quantum cryptography fibre optic cables 
literature postulates alternative approach bounded computational resources cryptographic set assumed models participants restricted computational power 
secure message passing case interest insecure channels bounds computational power allow simulating secure communication channel 
function players single input bit need compute logical bits 
secure channels help problem task performed cryptographic set 
problem protocol allows players find integers bigger finding information vice versa 
interesting commonly known upper bound 
game playing grand designer show players may safely play noncooperative game absence grand designer players trying cheat 
linial outlines result strengthened condition hold players deviate rules game 
secure voting consider voters casts vote issue 
voting round may ask tally known players 
observation taken account making formal definition information leaks allowed 
follow linial lead investigate main models bad players behaviour 
model traitors store messages seen duration protocol 
traitors extract information possible records run 
behaviour players conforming model said curious 
impose information leak clause model information collected traitors group stored undermine network 
model demanding model assumes regard behaviour traitors byzantine agreement problem 
behaviour described malicious 
situation correctness computation 
compute 
xn player refuses reveal xi known 
compute quantity depending xi tell outcome players intentionally sends incorrect value hoping able detect xi known 
possible relax requirement information leak correctness principle achieved commitment mechanism player places value xi envelop containing envelopes publicly opened 
evaluate 
xn xi valid draw set 
zn valid response 
perform tasks physical envelopes 
appropriate means concealing information upper bound number faults possible compute correctly leaking information 
categorize problem type protocols may applied classed follows specification task performed 
upper bound number unreliable players total assumed nature traitors curious malicious countermeasures available secure communication lines bound players computational power 
main result section number traitors properly bounded modes deceit curious malicious guarantees safety secure lines restricted computational power enable correct leak free computation 
state results applies problem linial 
fn variables players 
pn communicate secure channels pi holds input xi known 
protocol leak free proper minority curious players 

step set messages pj computed xj fj 
xn trying compute 
xn way guarantee traitors supply correct input values 
best hoped commit certain input values chosen independent inputs players 
commitment stage computation proceeds correctly leaking information 
case traitors refusal supply input result default value 
protocol computes value 
yn yi xi yj chosen independent values xi 
results hold functions fj replaced probability distributions computing functions need sample distributions 
restate bounds theorem tight 
assume way trapdoor permutations exist 
modify situation follows channels secure agents probabilistic polynomial time turing machines 
similar hold bound replaced respectively 
bounds tight results hold sampling distributions evaluation functions 
protocols secure collective communication set players additional trusted party may referred grand designer 
various goals achieved terms correct reliable leak free communication 
fact need relay input values party compute functions inputs communicate player data desired 
broad terms mission provide protocol parties achieve tasks absence trusted party 
important instances general plane privacy consider protocol computing functions 
fn variables parties originally party holds xi value ith variable protocol knows fi 
xn 
protocol private quantity computable information viewed protocol run coalition players computable inputs outputs 
fault tolerance resilient coalition parties protocol computes value 
yn yi xi yj chosen independent value xi 
shall express results hold assumption traitors computationally restricted 
theorem goldreich 
assuming existence non uniform trapdoor oneway functions function variables computed probabilistic polynomial time turing machines private resilient protocol 
quantities best possible 
information theoretic equivalent results theorem 
function variables computed agents communicate secure channels private way 
similarly protocol exists private resilient 
bounds tight 
protocols describe model cryptographic information theoretic bad players assumed curious malicious 
protocols follow general pattern explained 
review solution case reasonable detail indicate modified deal solutions 
problem structured dealing general function discussion focuses circuit computes loss generality circuits simulate turing machines 
goldreich idea players collectively follow computation carried circuit moving gate partial values computed circuit values carried circuits wires encoded secret shared players 
implement idea needs able assign input values variables shared way 
perform elementary field operations values kept shared secrets 
outcome kept shared secret 
computation player possess certain value computed shares secret handed players 
linial nd item investigated greater depth shall follow reasoning 
reconsider information theoretic curious part carry investigation manner 
secrets shared digital signature need able add multiply field elements kept secrets shared players 
goes describe importance dealing degree high needs reduced achieved truncating high order terms letting polynomial obtained deleting terms secret degree exceeding number players 
respectively vector ith coordinate respectively matrix depending ac 
degree reduction may performed shared way follows 
pj knows fo need compute ci jg inform pi 
pj computes ci jg deals shared secret players 
sums shares ci jg obtaining share ci jg shared secret 
recall linial sv secrets share sv held player share sv player passes pi share pi reconstruct actual 
free term free term kept shared secret needed 
establishes privacy part previous theorem 
condition implicit 
linial states curious players tolerated protocol follows chor result impossible compute logical function players 
having dealt curious players shall simply refer reader linial treatment malicious players 
state important results linial directly related secure communication theme report 
corruption shares possibility bad players supposed share information fail 
difficulty countered verifiable secret sharing scheme 
secondly malicious case states dealt way 
follows byzantine agreement protocol section 
players restricted communicate secure party line broadcast messages fact increase resiliency 
ba insecure communication channels insecure communications channels provide challenges trying achieve agreement group players 
shall modified version bgp find agreement set players reliable may encounter faulty interfaces 
analogous faulty insecure communication channels 
section assume faulty channel relied secure 
consider types faults message corruption message loss spurious message generation 
spurious message set circumstances regarded traitor generating alternate set messages distribute network 
shall dasgupta variant byzantine generals problem agents represent traitors fully operation 
agents interfaces communication network may faulty causing send erroneous messages network 
model briefly described agent communication devices available 
order send message source agent passes message appropriate communications device 
channel receives message agent delivers second agent 
devices may faulty 
agents reliable 
agent faulty devices called traitor 
conventions outlined categorize types faults possible model follows fault device message communicates different message agent 
fault device message loses message 
fault device generates spurious message loses 
protocols analyze byzantine agreement presence faults 
report assumption inter agent communication 
assume types faults possible agreement problem reduces byzantine generals problem thirds participants required loyal 
note faults possible agreement problem trivial 
protocol agreement round 
furthermore shows spurious messages causes main difficulty reaching sort agreement 
possible faults asserts agreement possible irrespective number traitors network 
protocol outlined proof argue types faults require interactive consistency 
agreement faults agreement faults seen faults possible agreement logically equivalent bgp 
follow examine ways agent may fault original bgp demonstrate possible equivalent situations model 
traitor message communicates message 
equivalent fault 

traitor message transmits 
fault 
traitor message transmits spurious 
fault having observed easy see agreements faults difficult original bgp 
note reverse easier see original model asserts agent faulty 
shall conclude aspect proposing short theorem easy proof 
theorem 
faults possible agreement possible rounds agents 
proof follows equivalence original byzantine agreement problem 
agreement reached rounds unforgeable oral message protocol lamport 
importance faults protocol model 
general decides attack retreat decision retreat general remains silent decision attack general sends message lieutenant 
member network general message round decides attack decides retreat theorem 
protocol model achieves agreement round 
proof shall outline slightly different approach dasgupta separate cases formal way 
case suppose commanding general decides retreat 
general lieutenant correct general attempt send message 
problems ruled members message general lieutenant retreat 
case ii assume general decides attack entire network correct 
general attempts send message member forces 
faults ruled lieutenant receive message may may complete general decide attack 
result shows lieutenant correct main difficulty achieving agreement presence faults 
observe absence faults generals faulty interfaces reach consensus 
agreement faults section consider communication system scenario allow consider case special interest 
network interfaces faulty attempt send messages 
algorithm outlined achieves agreement rounds number generals faulty interfaces 
protocol decision retreat modeled silence attack communicated sending single message participant 
protocol generals recursively described 
algorithm 

commanding general communicates message general decided attack 
remains silent 

generals gi acts follows 
gi decided ignores messages 
gi decided decides attack receives message commander decides retreat 
algorithm 
commanding general communicates message general decided attack 
remains quite 

generals gi act follows 
gi decided ignore messages 
gi decided decides attack message commanding general remains undecided 
general gi acts commander algorithm generals 
seen lamport algorithm dasgupta protocol starts general takes decision attack retreat protocol acting commander algorithm :10.1.1.12.1697
results establish presence faults algorithm achieves byzantine agreement cluster agents agents may faulty interfaces 
byzantine agreement possible model irrespective th number agents faulty interface 
lemma 
instigator algorithm decides retreat processors agree retreat 
proof instigator decides sends message 
faults ruled agents message send return 
round initiated agents including faulty interface decide retreat 
proposed algorithm dasgupta agents instigator agent sends messages receives message previous round 
messages sent instigator message sent agent preceded causally receipt message agent 
definition 
agent sends message receiving message refered casually preceded relation denoted furthermore say casual precedence transitive 
messages causally precede message ancestors refer set agents constituting sender sender ancestors sender set lemma 
agent reliable interfaces reaches decision attack decision round round agents reliable interfaces agree attack 
proof agent reliable interfaces receives message decides attack round communicates messages agents member sender set agent reliable interfaces receive message decides attack 
agents sender set reliable interfaces 
round sends messages agents reliable interfaces agent decides individually attack 
lemma 
agent reliable interfaces reaches decision attack agent reliable interfaces decide retreat round 
proof dasgupta shows agents reliable interfaces receive message decide attack round agents receive message round decide retreat 
sender set message round agents reliable interfaces 
agent receive message round contradiction information agents reliable interfaces received message round theorem 
faults possible possible reach byzantine agreement cluster agents faulty irrespective ratio agreement reached rounds 
proof dasgupta proof show algorithm achieves agreement 
proof self 
consider case instigator decides retreat 
lemma agents agree retreat round 
shall consider cases instigator decides attack 
look possible cases depend interfaces instigator correct 
shall follow dasgupta treat cases separately 
case instigator reliable 
interfaces instigator reliable instigator decides attack successfully sends message agents round 
case instigator faulty interfaces 
instigator ore faulty interfaces instigator decides attack may succeed sending messages 
case need follow dasgupta prove round agents reliable interfaces reach common decision 
lemma agent reliable interfaces message round round agents reliable interfaces reach common decision attack 
hand lemma agent reliable interfaces receive message round agents reliable interfaces reach common decision retreat 
instigator faulty interfaces agents reliable interfaces reach common decision 
results byzantine agreements widely method fault tolerance distributed systems 
outlined original literature lamport pease explore area greater depth 
formalised version bgp investigated section developments pease lamport 
furthermore adapt approximate solution infinite message case weak byzantine generals problem lamport 
go develop byzantine agreements secure communication environment 
linial provides wide ranging insight ba establish protocols secure communication 
define current cryptographic methods terms ba examine methods compare information theoretic protocols 
move ba insecure environment channels faulty 
dasgupta agreement faulty interfaces develops analogy close channels unreliable 
investigation leads formal design secure communications networks able deal secure insecure channels 
maintaining resiliency secure network secret sharing scheme ability broadcast part secure lines 
improvement treatment faults security insecure communication channel improved 
condition insecure networks improvement secure channels new design paradigm applied networks agents 
needs done refining methods obtaining byzantine agreements 
investigations ba concentrate correlation median voter theorem social choice setting ba ba cluster networks 
ba establishing communication protocols peers available 
wandering problem furedi mental poker players information control pp 
ben wigderson completeness theorems non cryptographic fault tolerant distributed computation proceedings th annual acm symposium theory computing pp 
chor kushilevitz zero law boolean privacy siam journal discrete mathematics vol pp dasgupta agreement faulty interfaces information processing letters pp dodis halevi rabin cryptographic solution game theoretic problem crypto lecture notes computer science vol 
pp donovan interesting constructions secret sharing schemes journal combinatorics vol pp goldreich micali wigderson play mental game completeness theorem protocols honest proc 
th acm symp 
theory computing pp lamport shostak pease byzantine generals problem acm transactions progamming languages vol 
pp july lamport weak byzantine generals problem journal association computing vol pp linial chapter game theoretic aspects computing handbook game theory economic applications vol 
hart elsevier lynch distributed algorithms morgan kaufmann menezes van oorschot vanstone handbook applied cryptography crc press rubenstein course game theory mit press pease shostak lamport reaching agreement presence faults journal acm vol pp rasmusen readings games information blackwell publishers rushby comparison bus architectures safety critical embedded systems sri international csl technical report september share secret communications acm vol 
pp 
