ontology merging federated ontologies semantic web gerd stumme alexander maedche institute applied informatics formal description methods aifb university karlsruhe karlsruhe germany www aifb uni karlsruhe de wbs gst fzi research center information technologies und neu karlsruhe germany www fzi de wim 
core challenges semantic web aspect decentralization 
local structures modeled ontologies 
order support global communication knowledge exchange mechanisms developed integrating local systems 
adopt database approach autonomous federated database systems consider architecture federated ontologies semantic web starting point 
identify need merging speci ontologies developing federated autonomous web systems 
method fca merge merging ontologies bottom approach ers structural description merging process 
method guided application speci instances source ontologies merged 
apply techniques natural language processing formal concept analysis derive lattice concepts structural result fca merge 
generated result explored transformed merged ontology human interaction 
current www great success respect amount stored documents number users 
main reasons success current www principle decentralization 
currently semantic web developed www established standards syntax xml semantics rdf daml oil 
ontologies established knowledge sharing widely means conceptually structuring domains interest 
core challenges semantic web aspect decentralization 
local structures modeled ontologies 
order support global communication knowledge exchange mechanisms developed integrating local systems 
cf 
www org designissues principles html number proposals available database community developing multi database systems speci federated database systems resemble decentralized structures required semantic web 
adopt database approach federated databases consider architecture federated ontologies semantic web motivation starting point 
bottleneck federated ontologies semantic web process integrating merging speci ontologies 
process ontology merging takes input source ontologies returns merged ontology source ontologies 
manual ontology merging conventional editing tools support dicult labor intensive error prone 
systems frameworks supporting knowledge engineer ontology merging task proposed ho ch nm 
approaches rely syntactic semantic matching heuristics derived behavior ontology engineers confronted task merging ontologies human behaviour simulated 
locally di erent kinds logics comparisons approaches er structural description global merging process 
propose new method fca merge merging ontologies bottom approach ers global structural description merging process 
source ontologies extracts instances set domain speci text documents applying natural language processing techniques 
extracted instances apply mathematically founded techniques taken formal concept analysis wi gw derive lattice concepts structural result fca merge 
produced result explored transformed merged ontology ontology engineer 
extraction instances text documents circumvents problem applications objects simultaneously instances source ontologies basis identifying similar concepts 
remainder follows 
start introducing generic architecture ontologies semantic web section 
identify need merging speci ontologies developing federated autonomous systems 
brie introduce basic de nitions concentrating formal de nition ontology recall basics formal concept analysis section 
sections method fca merge merging ontologies bottom approach ers global structural description merging process 
generic method ontology merging section 
section provides detailed description fca merge 
section gives overview related section summarizes concludes outlook 
architecture federated ontologies semantic web depicts layer architecture federated ontologies semantic web 
adopts approach sl federated databases 
app app export ontology export ontology ontology metadata repository merged ontology local ontology local ontology normalized ontology normalized ontology ontology metadata repository fig 

architecture federated ontologies architecture extends standardized layer schema architecture ansi sparc additional layers 
adopted architecture mainly consists 
local ontologies conceptual models autonomous systems speci underlying ontology metadata repository database 
normalized ontologies transformation local ontologies common data model 
export ontologies view normalized ontology describes relevant parts ontology federation 
merged ontology global ontology derived combination export schemas 
di erent applications upper layer external schema layer merged ontology speci views 
go details organizational architectural structure 
mentioned sections rest dedicated task generating merged ontology export ontologies autonomous web systems 
ontologies formal concept analysis section brie introduce basic de nitions 
concentrate formal de nition ontology recall basics formal concept analysis 
ontologies common formal de nition ontology approaches share core items concepts hierarchical relation relations 
sake generality discuss speci features constraints functions axioms 
formalize core way 
de nition core ontology tuple set elements called concepts partial order binary relation re exive transitive anti symmetric set elements called relation names relations short function assigns relation name arity 
said de nition considers core elements languages ontology representation 
possible map de nition types ontology representation languages 
implementation instance frame logic klw 
frame logic founded semantics refer 
formal concept analysis recall basics formal concept analysis fca far needed 
extensive overview gw 
allow mathematical description concepts composed extensions intensions fca starts formal context de ned triple set objects set attributes binary relation 
read object attribute 
de nition de ne fm ig de ne fg ig 
linguistic processing new lattice exploration linguistic processing fig 

ontology merging method formal concept formal context de ned pair sets called extent intent formal concept 
subconcept superconcept relation formalized set formal concepts context partial order complete lattice called concept lattice denoted 
possible confusion arise double word concept fca ontologies 
comes fact fca ontologies models concept concept arose independently 
order distinguish notions refer fca concepts formal concepts 
concepts ontologies referred just concepts ontology concepts 
direct counter part formal concepts ontologies 
ontology concepts best compared fca attributes considered unary predicates set objects 
bottom ontology merging said propose bottom approach ontology merging 
mechanism application speci instances ontologies merged 
process merging ontologies depicted consists steps instance extraction computing formal contexts ii fca merge core algorithm derives common context computes concept lattice iii generation nal merged ontology concept lattice 
method takes input data ontologies set natural language documents 
documents relevant ontologies set formal concepts greatest common subconcept common superconcept 
approach easily extended merging ontologies simultaneously 
documents described concepts contained ontology 
documents may taken target application requires nal merged ontology 
documents extract instances 
mechanism instance extraction described subsection 
automatic knowledge acquisition step returns ontology formal context indicating ontology concepts appear documents 
extraction instances documents necessary usually instances classi ed ontologies 
situation skip rst step classi cation instances directly input formal contexts 
second step ontology merging approach comprises fca merge core algorithm 
core algorithm merges contexts computes concept lattice merged context fca techniques 
precisely computes pruned concept lattice degree detail source ontologies 
techniques applied generating pruned concept lattice described subsection detail 
instance extraction fca merge core algorithm fully automatic 
nal step deriving merged ontology concept lattice requires human interaction 
pruned concept lattice sets relation names ontology engineer creates concepts relations target ontology 
er graphical means ontology engineering environment ontoedit supporting process 
obtaining results assumptions met input data firstly documents relevant source ontologies 
document instance extracted source ontology neglected task 
secondly documents cover concepts source ontologies 
concepts covered treated manually merging procedure set documents expanded documents separate concepts 
concepts considered di erent appear documents fca merge map concept target ontology decision overruled knowledge engineer 
situation appears knowledge engineer want add documents separate concepts 
fca merge method section discuss steps fca merge detail 
illustrate fca merge small example taken tourism domain built speci ontology information systems 
general experiments tourism ontologies modeled ontology engineering seminar 
di erent ontologies modeled text corpus web provided www provider tourist information 
corpus describes actual objects locations url www com tions administrative information cultural events 
scenario described selected ontologies rst ontology contains concepts relations second ontology contains concepts relations 
underlying text corpus consists natural language documents taken www provider described 
demonstration purposes restrict rst small subsets ontologies described documents 
examples translated english 
subsection provide examples merging larger ontologies 
linguistic analysis context generation aim rst step generate ontology formal context 
set documents taken object set set concepts taken attribute set 
sets come free dicult step generating binary relation relation shall hold document contains instance computation uses linguistic techniques described sequel 
conceive information extraction approach ontology extraction implemented top smes saarbr message extraction system shallow text processor german cf 

architecture smes comprises tokenizer regular expressions lexical analysis component including word domain lexicon chunk parser 
tokenizer scans text order identify boundaries words complex expressions mecklenburg expand abbreviations 
lexicon contains stem entries subcategorization frames describing information lexical analysis chunk parsing 
furthermore domain speci part lexicon contains lexical entries express natural language representations concepts relations 
lexical entries may refer concepts relations concept relation may referred lexical entries 
lexical analysis uses lexicon perform morphological analysis identi cation canonical common stem set related word forms analysis compounds recognition named entities part ofspeech tagging retrieval domain speci information 
steps viewed standard information extraction approaches step speci interest instance extraction mechanism 
step associates single words complex expressions concept ontology corresponding entry domain speci part lexicon exists 
instance expression hotel schwarzer adler associated concept hotel 
concept hotel ontology document contains expression hotel schwarzer adler relation hotel holds 
region north east germany vacation hotel event concert root doc doc doc doc doc doc doc doc doc doc doc doc doc doc hotel accommodation musical root doc doc doc doc doc doc doc doc doc doc doc doc doc doc fig 

contexts result rst step transitivity relation compiled formal context 
mis implies means hotel holds hotel accommodation document describes instance concept accommodation accommodation depicts contexts generated documents small example ontologies 
document doc contains instances concepts event concert root ontology musical root ontology documents contain information hotels contain instances concept hotel generating pruned concept lattice second step takes input formal contexts generated step returns pruned concept lattice see input step 
merge formal contexts new formal context derive pruned concept lattice 
merging formal contexts disambiguate attribute sets may contain concepts 
indexation concepts allows possibility concept exists ontologies treated di erently 
instance may hotel hotel accommodation root root vacation event concert musical fig 

pruned concept lattice considered accommodation rst ontology second 
merged formal context obtained compute concept lattice provide speci concepts 
restrict computation formal concepts formal concept generated ontology concept source ontologies 
assures remain range speci city source ontologies 
precisely pruned concept lattice fmg fmg 
de ned section 
example pruned concept lattice shown 
consists formal concepts 
formal concepts total concept lattice pruned speci compared source ontologies 
diagram formal concept represented node 
empty nodes pruned concepts usually hidden user 
concept subconcept reached descending path 
intent formal concept consists attributes application ontology concepts attached formal concept superconcepts 
interested document names extents contexts visualized diagram 
computation pruned concept lattice done algorithm titanic stb 
modi ed allow pruning 
modi ed algorithm described 
compared algorithms computing concept lattices titanic purpose advantage computes formal concepts key sets minimal generators 
key set minimal description formal concept de nition 
key set formal concept application key sets serve purposes 
firstly indicate generated formal concept gives rise new concept target ontology 
concept new key sets cardinality 
secondly key sets cardinality generic names new concepts indicate arity new relations 
titanic algorithm 
recall algorithm titanic discuss modi ed compute pruned concept lattice 
composed function 
closure operator extensive monotonous idempotent 
related closure system set exactly set intents concepts context 
structure concept lattice determined closure system 
restrict computation concept intents sequel 
computation extensive support function de nition 
support de ned jx jgj follow pruning strategy 
originally strategy heuristic determining frequent sets sets supports user de ned threshold 
algorithm traverses powerset level wise manner 
kth iteration subsets cardinality called sets considered know advance key sets 
pseudo code modi ed titanic algorithm algorithm 
list notations provided table 
table 
notations titanic counter indicates current iteration 
kth iteration key sets determined 
kk contains kth iteration key sets weight closure closure 
stores candidate sets counter stores minimum weights subsets counter step prune non key sets 
words generates formal concept 
algorithm titanic forall fmg mg loop count kk fx closure forall kk closure closure kk exit loop titanic gen kk loop return fx closure algorithm starts stating empty set key set support equal steps 
sets candidate sets de nition steps 
iterations candidate sets determined function titanic gen step algorithm step equivalent generating function apriori 
result step step algorithm pruning non key sets 
candidate sets determined function count called compute support stored variable step 
step algorithm second condition prunes candidate sets range source ontologies 
implements condition de nition pruned concept lattice 
additional condition di erence algorithm stb 
rst condition step prunes candidate sets key sets proposition 
proposition stb 
key set fmg 
remaining sets known key sets closures computed step 
closure function algorithm straight forward implementation proposition additional optimization step 
proposition stb 

fm fmg 
key set xg set key sets 
algorithm terminates key sets left step 
iteration begins steps 
algorithm titanic gen assume total order input kk set key sets support output set candidate sets values fmg cg 
variables assigned sets fp pkg generated step initialized fp pkg 
ffp pkg fp pk pk fp pk pkg kk forall forall subsets kk fxg exit forall min return algorithm closure forall fmg closure forall fmg fmg minfk fmg return generating new ontology concept lattice previous steps instance extraction context derivation context merging titanic fully automatic derivation merged ontology concept lattice requires human interaction heavily relies background knowledge domain expert 
result step pruned concept lattice 
derive target ontology 
formal concepts pruned concept lattice candidate concept relation new subsumption target ontology 
number queries may focus relevant parts pruned concept lattice 
discuss queries description general strategy follows 
course technical details hidden user 
documents needed generation target ontology restrict attention intents formal concepts sets ontology concepts source ontologies 
formal concept pruned concept lattice analyze related key sets 
formal concept cases distinguished 
exactly key set cardinality 
key sets cardinality 
key sets cardinality 
empty set key set 
generation target ontology starts concepts rst situations 
rst case easiest formal concept generated exactly ontology concept source ontologies 
included target ontology interaction knowledge engineer 
example formal concepts labeled vacation event 
second case concepts source ontologies generate formal concept 
indicates concepts merged concept target ontology 
user asked names retain 
example case formal concepts key sets generate formal concept suggested merged key sets generate formal concept 
case interesting includes concepts ontology 
means set documents provide details separate concepts 
knowledge engineer decides merge concepts instance observes distinction importance target application adds separate concepts target ontology 
suggestions merge concepts distinguished indication set documents large 
case user want re launch fca merge larger set documents 
formal concepts rst cases dealt concepts source ontologies included target ontology 
relations source ontologies copied target ontology 
possible con icts duplicates resolved ontology engineer 
step deal formal concepts covered third case 
generated concepts source ontologies candidates new ontology concepts relations target ontology 
decision add concept relation target ontology discard suggestion modeling decision left user 
key sets provide suggestions name new concept concepts linked new relation 
key sets implies de nition key sets formal concept key set 
froot froot key sets subset empty set generating formal concept 
holds suggested subsumptions 
instance case concept vacation mentioned documents hotel mentioned suggested subconcept 
minimal cardinality considered provide shortest names new concepts minimal arities new relations resp 
instance formal concept middle event event event key sets 
user decide create new concept default name situation create new relation arity hotel event relation 
key sets cardinality serve purpose fm key set implies am am currently hold 
user key set cardinality generating new concept relation check reasonable add subsumptions target ontology 
case show small example 
example large ontologies section 
exactly formal concept fourth case empty set key set 
formal concept gives rise new largest concept target ontology root concept 
knowledge engineer accept reject concept 
ontology tools require existence largest concept 
example formal concept labeled root root 
order concepts target ontology derived automatically pruned concept lattice concepts derived formal concepts resp explicitly modeled user key set cardinality 
querying pruned concept lattice 
order support knowledge engineer di erent steps number queries focusing attention signi cant parts pruned concept lattice 
queries support handling second case di erent ontology concepts generate formal concept 
rst list pairs fm fm indicates concepts di erent source ontologies merged 
small example list contains instance pair concert musical 
larger application german language pairs zoo zoo listed 
decided merge zoo engl zoo zoo zoo garden 
second query returns ontology list pairs fm fn helps checking concepts single ontology subject merge 
user conclude concept pairs merged di erentiation necessary target application decide set documents extended di erentiate concepts 
small example list contains pair hotel accommodation 
larger application additionally pairs auto 
target application merged spatial thing region auto car means travel 
number suggestions provided third situation quite high 
queries signi cant formal concepts pruned concepts 
queries combined 
firstly upper bound cardinality key sets 
lower bound fewer new concepts 
typical value allows retain concepts source ontologies generated key sets cardinality discover new binary relations concepts di erent source ontologies relations higher arity 
interested having exactly old concepts relations target ontology suggestions new concepts relations upper bound key set size set 
secondly minimum support 
prunes formal concepts cardinality extent low compared number documents 
algorithm achieved adding condition 
step 
default pruning minimum support 
possible di erent minimum supports di erent cardinalities key sets 
typical case set minimum support key sets cardinality higher percentage key sets higher cardinality 
way retain concepts source ontologies generate new concepts relations certain statistical signi cance 
thirdly consider key sets cardinality concepts come ontology 
way formal concepts give rise concepts relations linking source ontologies 
restriction useful quality source ontology se known high need extend source ontologies 
small example key sets cardinality higher 
key sets cardinality support 
larger application xed upper bound cardinality key sets 
obtained key sets telefon telephone public institution support unter accommodation means travel castle building zimmer room library 
rst gave rise new concept public phone second new binary relation third new subsumption fourth discarded meaningless 
related rst approach supporting merging ontologies described ho 
heuristics described identifying corresponding concepts di erent ontologies comparing names natural language de nitions concepts checking closeness concepts concept hierarchy 
ontomorph system ch ers kinds mechanisms translating merging ontologies syntactic rewriting supports translation di erent knowledge representation languages semantic rewriting ers means inference transformations 
explicitly allows violate preservation semantics trade exible transformation mechanism 
chimaera system described 
provides support merging ontological terms di erent sources checking coverage correctness ontologies maintaining ontologies time 
chimaera ers broad collection functions underlying assumptions structural properties ontologies hand explicit 
prompt nm algorithm ontology merging alignment embedded 
starts identi cation matching class names 
initial step iterative approach carried performing automatic updates nding resulting con icts making suggestions remove con icts 
tools described er extensive merging functionalities syntactic semantic matching heuristics derived behaviour ontology engineers confronted task merging ontologies 
ontomorph description logics approach uences merging process locally checking subsumption relationships terms 
approaches ers structural description global merging process 
fca merge regarded complementary existing ering structural description merging process underlying mathematical framework 
related database community especially area federated database systems 
closest approach described ss 
apply formal concept analysis related problem database schema integration 
approach knowledge engineer interpret results order modeling decisions 
technique di ers points need knowledge acquisition domain expert preprocessing phase additionally suggests new concepts relations target ontology 
motivated issue decentralization main challenges semantic web 
adopted database point view consider architecture ontologies semantic web motivation 
discussed especially process integrating merging speci ontologies bottleneck federated ontologies semantic web 
fca merge bottom technique merging ontologies set documents 
described steps technique linguistic analysis texts returns formal contexts merging contexts computation pruned concept lattice semi automatic ontology creation phase supports user modeling target ontology 
described underlying assumptions discussed methodology 
includes closer integration fca merge method ontology engineering environment ontoedit 
particular er views pruned concept lattice queries described subsection 
planned re ne information extraction mechanism extracting instances 
re nement goes hand hand improvements concerning connection ontologies natural language cf 
mss 
evaluation ontology merging open issue nm 
plan fca merge generate independently set merged ontologies source ontologies 
comparing merged ontologies standard information retrieval measures proposed nm allow evaluate performance fca merge 
theoretical side interesting open question extension formalism features speci ontology languages instance functions axioms 
question exploited merging process ii new functions axioms describing interplay source ontologies generated target ontology 
includes implementation framework federated ontologies introduced section 
refer interested reader started eu ist funded project development management federated web systems consisting multiple ontologies associated knowledge bases studied implemented 
research partially supported dfg bmbf 
agrawal srikant 
fast algorithms mining association rules 
proc 
vldb conf expanded version ibm report rj ch chalupsky ontomorph translation system symbolic knowledge 
proc 
th intl 
conf 
principles knowledge representation reasoning kr breckenridge colorado usa april conrad konzepte der 
informatik springer berlin heidelberg www com gw ganter wille formal concept analysis mathematical foundations 
springer berlin heidelberg berners lee weaving web 
harper berlin heidelberg ho hovy combining standardizing large scale practical ontologies machine translation uses 
proc 
st intl 
conf 
language resources evaluation granada spain may 
klw kifer lausen wu logical foundations object oriented languages 
journal acm mss maedche staab stojanovic studer sure seal framework developing semantic web portals 
brian read ed advances databases proc 
th british national conference databases lncs springer heidelberg mcguinness fikes rice wilder environment merging testing large 
proc 
th intl 
conf 
principles knowledge representation reasoning kr breckenridge colorado usa april 
neumann baur becker braun information extraction core system real world german text processing 
proc 
anlp washington usa nm fridman noy musen prompt algorithm tool automated ontology merging alignment 
proc 
th natl 
conf 
arti cial intelligence aaai austin tx july august ss schmitt saake merging inheritance hierarchies database integration 
proc 
rd int 
conf 
cooperative information systems coopis ieee computer science press 
stb stumme taouil bastide pasquier lakhal fast computation concept lattices data mining techniques 
proc 
krdb proc 
ceur ws org vol 
sl sheth larsen federated database systems managing distributed heterogeneous autonomous databases 
acm computing surveys wi wille restructuring lattice theory approach hierarchies concepts 
rival ed ordered sets 
reidel dordrecht boston 
