compacting penn treebank grammar alexander mark hepple robert gaizauskas yorick wilks department computer science sheffield university portobello street sheffield dp uk hepple yorick dcs shef ac uk treebanks penn treebank ptb offer simple approach obtaining broad coverage grammar simply read grammar parse trees treebank 
grammar easy obtain square root rate growth rule set corpus size suggests derived grammar far complete tree text required obtain com plete grammar exists limit 
offer alternative explanation terms underspecification structures treebank 
hypothesis ex applying algorithm compact derived grammar eliminating ant rules rules right hand sides parsed rules 
size result ing compacted grammar significantly full treebank grammar shown approach limit 
compacted grammar yield performance figures 
version tion algorithm rule probabilities ac count proposed argued linguistically motivated 
combined simple thresholding method give reduction grammar size signi change parsing performance produce reduction gain re call loss precision 
penn treebank ptb marcus simple approach deriving large grammars automatically grammar rules simply read parse trees corpus local subtree providing left right hand sides rule 
charniak charniak reports precision recall figures parser employing grammar 
show huge size tree bank grammar see reduced size appreciable loss performance fact improvement recall achieved 
approach generalised terms data oriented parsing dop methods see tree depth 
number trees produced general dop method large resort restrict ing tree depth domain specific corpus atis parsing short sentences average length words 
compaction algorithm easily exten ded dop framework huge size derived grammar see chose simplest pcfg framework experiments 
concerned nature rule set extracted improved regard linguistic criteria processing efficiency 
follows report worry ing observation growth rule set continues square root rate pro cessing entire treebank suggesting rule set far complete 
results similar reported 
discuss alternative pos sible source rule growth phenomenon partial suggest alleviated compaction rules redundant sense defined ated grammar 
experiments compacting ptb tree complete investigation grammar ex penn treebank ii see gaizauskas percentage corpus rule set growth penn treebank ii bank grammar resulted major findings grammar compacted original size rule num ber growth compacted grammar stops point 
reduction achieved loss parsing perform ance reduction yields gain recall loss precision 
believe gives support utility treebank grammars compaction method 
example compaction methods applied dop frame reduce number trees 
partially rule extraction process frequent words part speech tags may able achieve parsing performance similar best results field obtained collins 
growth rule set investigate fi nite grammar account text class related texts domain oriented sub grammar english 
number extracted rules approach limit sentences processed rule number approaches size underlying finite grammar 
hoped approach limit seen ptb ii marcus larger consistent ptb shown rule number growth continues un part speech tokens processed 
rule growth partial set rules continue grow way 
putting aside possibility nat ural languages finite rule sets think possible answers 
may full underlying grammar larger rule set far produced requiring larger tree corpus available extrac tion 
true outlook achieving near complete grammars treebanks resource demands producing hand parsed text 
rad ical incompleteness grammar implies incompatible promising parsing results charniak reports charniak 
second answer suggested presence extracted grammar rules 
rule suspicious linguistic point view expect text extracted prop analysed rules coordination simpler nps 
np dt nn cc dt nn np np cc np gp dt nn suspicion example reflects widespread phenomenon partial ptb 
partial arise hand parsing texts hu man parsers adding brackets confident string forms con leaving brackets confident constituent struc ture text 
mean rules extracted corpus flat ter corresponding prop result sev eral grammar rules showing top node leaf nodes unspecified tree structure leaf nodes category sym may nonterminal 
ex ample tree structure prop received ptb pos tags dt determiner cc coordinating conjunction nn noun partial analysis flatter partial structure rule 
np np cc np dt nn dt nn ii 
np dt nn cc dt nn grammar compaction idea partiality structure treebanks grammars suggests route treebank grammars may reduced size compacted shall call elimination partial structure rules 
rule may eliminable partial structure rule parsed familiar sense context free parsing rules grammar 
example rule parsed ing rules structure demon 
note partial structure rule parsable rules follow rule parsable partial structure rule ated 
may defensible rules parsed 
topic re turn sec 

follows take simpler path assuming rule necessary sufficient elimination 
rules parsed rules grammar redundant sense eliminating rule ef fect making sentence previously parsed 
algorithm compacting gram mar straightforward 
loop followed rule grammar ad dressed turn 
parsed rules eliminated deleted grammar parsing rules 
sentence parse em parsable rule parse just replaced complex substructure parse 
kept grammar 
rules remain rules checked constitute compacted grammar 
interesting question result compaction independent order rules addressed 
general case shown rules parse whichever addressed eliminated whilst remain 
order independence shown hold grammars contain unary epsilon empty rules rules righthand sides zero elements 
grammar extracted ptb ii compaction experiments reported section excludes rules 
discussion proof order independence see 
unary sister rules collapsed sister nodes structure np null vp vb np qp produce fol lowing rules vp vp vb qp 
experiments conducted number compaction exper iments complete grammar parsed described section 
results ex expectations set rules reduced rules better reduction 
investigate detail com grammar grows conducted third experiment involving staged compaction grammar 
firstly corpus split chunks number files rule sets extracted 
staged compaction proceeded follows rule set compacted rules see gaizauskas discussion 
experiments parsers cke boogie stolcke sekine apple pie parser sekine grishman 
percentage corpus compacted grammar size added resulting set com rules ad ded 
results experiment shown 
corpus processed com grammar size exceeds level reaches gram mar size starts go 
reflects fact new rules re old rules redundant compacted grammar size approach limit 
retaining linguistically valid rules parsable rules redundant sense defined follow removed 
particular times flatter structure allowed rule may lin correct simple case partial 
consider example linguistically plausible rules 
rules parse eliminated cases flatter structure allows lin correct 
vp vb np pp vp vb np np np pp vp ii 
vp vb np vb np pp ii np pp believe solution problem exploiting date provided corpus 
frequency occurrence data rules collected cor pus assign probabilities rules structures allow produce probabilistic context free grammar rules 
parsable rule correct merely partially expect fact reflected rule parse probabilities reflecting occurrence data corpus decide rule may eliminated ated 
particular rule eliminated complex structure allowed rules probable simpler structure rule allows 
developed linguistic compaction gorithm employing ideas just described 
due space limitations 
preliminary results experiments table 
simple thresholding removing rules occur achieve maximum compaction ratio 
labelled evaluation resulting parse trees evalb software satoshi sekine 
see complete presentation methodology results 
see fully compacted grammar yields poor recall precision figures 
collapsing rules pro duces substructure lower pre cision figures longer rules fact encode valid linguistic information 
linguistic compaction combined simple thresholding achieves reduction loss performance re duction yields higher recall 
see principal results result showing continued square root growth rule set extracted ptb ii analysis source continued growth terms partial justification provides tion rule parsing result compacted rule set approach limit point dur recall precision recall precision grammar size reduction full full simply thresholded fully compacted linguistically compacted grammar grammar labelled evaluation unlabelled evaluation table preliminary results evaluating grammar compaction method ing staged rule extraction compaction sufficient amount input processed fully compacted grammar produces lower parsing performance extracted grammar reduction loss achieved ing linguistic compaction reduc tion yields gain recall loss precision 
result particular provides support possible utility compaction algorithm 
method similar shirai shirai principal differences follows 
algorithm employ full context free parsing determining redundancy rules considering direct composi tion rules parses depth addressed 
proved result compaction independent order rules grammar parsed cases involving mutual discussed section shirai algorithm ate rules coverage lost 
secondly clear compaction way english japanese 
bod scha 

dop model semantic interpretation 
proceedings european chapter acl pages 
eugene charniak 

tree bank grammars 
proceedings thirteenth national confer ence artificial intelligence aaai pages 
mit press august 
michael collins 

new statistical parser bigram lexical dependencies 
proceed ings th annual meeting acl 
robert gaizauskas 

investigations grammar underlying penn treebank ii 
re search memorandum cs university sheffield 
alexander robert gaizauskas yorick wilks 

acquiring stochastic context free grammar penn treebank 
proceedings third conference cognitive science natural language processing pages dub lin 
alexander 

notes compacting penn treebank grammar 
technical memo department computer science university sheffield 
marcus kim marcinkiewicz macintyre ferguson katz 

penn tree bank annotating predicate argument structure 
proceedings arpa speech natural language workshop 
satoshi sekine ralph grishman 

corpus probabilistic grammar non terminals 
proceedings fourth interna tional workshop parsing technologies 
shirai tokunaga tanaka 

automatic extraction japanese grammar bracketed corpus 
proceedings natural language processing pacific rim sym korea december 
andreas stolcke 

efficient probabilistic context free parsing algorithm computes prefix probabilities 
computational linguistics 
