measuring ip tcp behavior edge node lo dipartimento di elettronica politecnico di torino mail net presents new tool collection statistical analysis tcp ip traffic able infer tcp connection status trace data 
discussing performance figures obtained insight figures give tcp ip protocols internet 
field measures starting point networks planning dimensioning statistical analysis simple traffic volume estimation common 
main reasons enormous amount possible performance figures devised tcp ip networks 
automatically derives different performance indices ip tcp level allowing deep insight network performance 
standard performance measure flow dimensions traffic distribution remain base traffic evaluation sophisticated indices outof order probability gap dimension tcp connections obtained data correlation incoming outgoing traffic give reliable estimates network performance user perspective 
indices discussed traffic measures performed months access link institution 
traffic measures internet planning dimensioning tlc networks traffic measures estimates models built appropriate mathematical tools 
process proved reasonably simple traditional circuit switched telephone networks harder packet switched data networks specially internet tcp ip client server communication paradigm inherently introduces correlation traffic relation space time 
large part difficulty lies failure traditional modeling paradigms key points solved performing measures organizing enormous amount data collected measures 
client server communication paradigm implies traffic behavior meaning supported italian ministry university scientific research planet ip project 
forward backward traffic jointly analyzed half story goes unwritten hardly inferred 
problem measuring inherently difficult solved measures taken network edge outgoing incoming flows necessarily coupled prove impossible backbone peering contracts providers disjoint forward backward routes 
second data traffic characterized higher level detail voice traffic characteristics sources nature packet switching require collections data session flow packet level circuit switched traffic characterized connection level 
due source model traffic characterized relatively simple case voice traffic complex variable case data networks different application models coexist interact 
notice absence cac connection admission control functions presence connectionless services notion connection quite fuzzy internet 
complexity layered structure tcp ip protocol suite requires analysis traffic different layers ip tcp udp application order picture traffic clear allow interpretation data 
starting pioneering danzig floyd authors characterized traffic internet measures increasing interest data collection measure analysis characterize network protocol users behavior 
birth web lots effort devoted study caching content delivery architecture intrinsically deep knowledge traffic user behavior 
works analyze traces application levels typically log files web servers proxy servers 
helpful understand user behavior interesting network point view 
projects real traffic traces captured form large campus networks authors characterize protocol large traces collected university campus berkeley 
similarly authors data collected large olympic server useful findings helpful understand tcp behavior loss recovery efficiency ack compression 
authors analyzed millions connections derived model connection interarrival time 
authors analyze derive models web traffic starting tcp ip header analysis 
works characterize traffic network level rebuilding status single tcp connections independently application level 
tools available derive network measure 
interested passive tools analyze traces active tools derive performance indices injecting traffic network example classic ping traceroute utilities 
passive tools libpcap library developed tcpdump tool allow different protocol level analysis 
example tool automatically analyzing tcp implementation behavior inspecting packet traces tcp activity 
interesting tool able rebuild tcp connection status traces matching data segments acks 
connection keeps track elapsed time bytes segments sent received retransmissions round trip times window advertisements throughput ip level able collect statistics enabling users track relevant network activities including traffic characterization network utilization network protocol usage 
tools able derive statistical data collection post elaboration 
best knowledge presents different contributions field internet traffic measures 
new tool briefly described sect 
ii gathering elaborating internet measurements developed available community 
description interesting results traffic analysis performed tool discussing implication network possible evolution ip level sec 
iv tcp level sec 
remaining assume reader familiar internet terminology example 
ii 
tool lack automatic tools able produce statistical data collected network traces major motivation develop new tool called starting standard software libraries able offer network managers researchers important information classic novel performance indices statistical data internet traffic 
started evolution able analyze traces real time common pc hardware start previously recorded traces various dump formats supported libpcap library 
software assumes receive input trace collected edge node data segments ack segments analyzed 
common ip statistics derived analysis ip header able rebuild tcp connection status looking tcp header forward backward packet flows 
connection opening closing observed flow marked complete flow analyzed 
free memory related status tcp flows inactive timer minutes garbage collector 
tcp segments belong flows opening recorded started early declared closed garbage procedure discarded marked trash 
tcp flow analysis allows derivation novel statistics example congestion window size sequence segments duplicated segments data analysis described deeper details sects 
iii measurement campaign conducted campus network 
statistic collected distinguishing clients servers host actively open connection host replays connection request identifying internal external hosts hosts located inside outside edge node measure point 
incoming outgoing packets flows identified 
dumping single measured data measured quantity builds histogram collecting distribution quantity 
minutes produces dump histograms collected 
set companion tools available produce time plot aggregated plot different time span 
web interface available allows user travel collected data select desired quantity directly produce graphs retrieve raw data analysis 
total different histogram types available comprising ip tcp statistics 
range classic measures directly available packet headers percentage tcp udp packets packet length distribution tcp port distribution 
advanced measures related tcp average congestion window rtt estimates sequence data duplicated data 
complete log keeps track tcp flow ana period pkts protocol share flows trash udp tcp jun jan table summary analyzed traces useful post processing purposes 
detailed user manual description tool tiresome context refer reader tool described length line available traffic traces learning 
iii 
trace analysis performed trace elaboration data collected internet access link politecnico di torino border router politecnico access router italian european research network 
data collected files storing hours long traces avoid limitation file system total gbytes compressed data 
politecnico campus lan approximately access points clients servers regularly accessed outside institutions 
data collected different time periods network topology evolved 
selected earlier 
period june bandwidth access link mbit link corresponding peering mbit period january bandwidth access link mbit link corresponding peering mbit periods characterized significant upgrade network capacity 
particular link bottleneck june january 
data collections freely available web interface 
time observed non negligible difference measures different periods report 
report 
table summarizes traces analyzed sections 
shows surprisingly larger part traffic transported tcp protocol udp traffic percentage protocols mon tue wed thu fri sat sun time tcp udp fig 

ip payload traffic balance period practically negligible 
number complete tcp flows larger millions periods tcp packets discarded flow analysis majority belonging trace 
fig 
plots ip payload type evolution normalized versus link capacity week period 
clearly visible alternating effects days nights working days weekend days 
periodic behavior allows define busy period selected am pm monday friday 
remaining report results averaged busy periods 
iv 
ip level measures measurements campaigns data networks concentrated traffic volumes packet interarrival times similar measures 
avoid reporting similar results differ previously published ones think data elaboration tool interesting performance figures derived allows deeper insight internet 
report interesting statistics gathered looking ip protocol header referring reader analyze figures interested 
fig 
plots distribution hit count incoming traffic relative number times ip addresses seen ip level top plot tcp flow level bottom plot 
log log scale plot inside box draw distribution larger linear scale plot magnifies positions distribution 
different hosts contacted top sending packets flows 
interesting note distribution traffic similar different periods looking top ip addresses little correlation position jun jan position jun jan fig 

distribution incoming traffic versus source ip address upper plot refers percentage packets bottom refers percentage flows ttl fig 

distribution ttl field value outgoing incoming packets period contacted hosts different relative quantity traffic send surprisingly 
confirms difficulties predicting traffic pattern internet 
interesting feature similarity tcp flow ip packet distribution 
reason lies probably dominance short web browsing flows traffic 
looking distance number hops client server fig 
reports distri packet len bytes fig 

packet size distribution incoming outgoing packets period bution time live ttl distinguishing incoming outgoing packets 
outgoing traffic ttl distribution concentrated initial values set different operating systems win nt linux sunos win digital osf common 
incoming traffic see similar distribution left peak reflecting number routers traversed packets arriving measurement point 
zoomed plot box shows supposing outside hosts set ttl number hops traversed packets hops fig 
reports packets size distribution averaged week period 
confirms packets small pure control packets large ethernet full size mtu small percentage bytes long standard mtu 
majority large packets incoming majority outgoing packets smaller classifies politecnico network client network expected 
tcp level measures concentrate tcp traffic represent vast majority traffic collected packets 
think offers interesting novel performance figures level 
interesting distribution interested tcp options negotiated way handshake 
table ii reports finding showing percentage clients requested option client column server positively replies option successfully negotiated accounted succ column 
unset percentage counts connection option minimum intrinsically due topological position politecnico gateway 
option succ 
client server unset june sack timestamp january sack timestamp table ii tcp options negotiated offered client offered server mss mss table iii mss distribution period side 
server column reports percentage servers receive option request sent option acknowledge 
example looking sack option see clients declared sack capabilities accepted servers june january 
note strange behavior servers replies contain positive acknowledgment client request option 
general state tcp options rarely sack option increasingly window scale timestamp options constant decreasing 
note servers positively reply practically timestamp option requests clients 
table iii reports common mss negotiation confirms results fig 
common derived ethernet mtu bytes followed default option connections 
tcp flow level analysis consider flow level figures require correlate flow directions derivation 
true relatively popular measures flow size dimension reported fig 
dimension payload transported half con flow length bytes flow length bytes fig 

incoming outgoing flows size distribution tail distribution log log scale lower plot zoom linear log log scale portion near origin upper plots period 
correlation needed properly decide opening closing tcp connections identify appropriate sequence numbers 
fig 
reports plots 
lower shows tail distribution log log scale showing clear linear trend typical heavy tailed distributions 
linear plot upper large shows magnification near origin characteristic peak short connections typically segments 
insert log log scale shows portion distribution mass concentrated linear decay begins 
particular incoming flows shorter kbytes total analyzed flows outgoing flows shorter kbytes 
notice dimension incoming flows consistently larger outgoing flows close origin 
tcp port number distribution directly translates traffic generated popular applications reported table iv sorted decreasing percentage 
results reported application percentage flows segments including signalling control ones bytes considering payload 
application average flow size directions tcp flows reported table measures take dif service port flow segm 
bytes smtp https pop auth ftp control gnutella ftp data ssl telnet dns table iv percentage tcp traffic flows generated common applications number flows segments transferred bytes period average service client server server client segment byte segment byte smtp https pop auth ftp control gnutella ftp data ssl telnet dns table average data sent bidirectional tcp flow segments bytes period ferent look problem largest portion internet traffic web browsing news ftp amounts roughly byte traffic tough number ftp flows marginal known 
different amount data transferred applications client server server client directions known surprising 
asymmetry evident expressed bytes segments hinting large number control segments acknowledgments sent data piggyback 
example client sends server kbyte data receives kbytes replay 
segments going client server segments server client requested transport data 
fig 
confirms intuition table reports index asymmetry connections obtained fig 

asymmetry distribution connections expressed bytes upper plot segments lower plot period ratio client server server client plus client server amount transferred data data data data measured net payload upper plot segment wise bottom plot includes signalling control segments 
upper plot shows clear trend asymmetric connections bytes transferred server client 
consider number segments connections perfectly symmetrical highlighted insert magnifying central portion distribution connections perfectly symmetrical effect observed due delayed ack implementation 
observation marginal effects design routers regardless asymmetry information bytes flowing direction route switch equal number packets majority control segments 
note flows exhibits contrary total asymmetry client direction index 
due ftp data connection data sent host opens connection client terminology fig 

distribution connections completion time period 
fig 
reports distribution connections completion time time elapsed segment way handshake segment closes connection directions 
obviously measure depends application data size path characteristics network congestion possible packet drops characteristic features plot 
connections complete just seconds second second connections terminated histogram collects remaining flows 
completion time tends heavy tailed related heavy tails flow dimensions 
spikes plot due application level timeouts seconds correspond timer auth protocol seconds caches web servers timers generally considered traffic analysis 
interestingly insert possible observe retransmission timeout suffered tcp flows segment dropped set default seconds 
close part distribution close zero part seconds apart absolute value 
inferring tcp dynamics measured data section discussing measures show sophisticated elaborations raw measured data obtain insight tcp behavior dynamics 
fig 
plots advertised receiver window rwnd observed directly looking tcp header 
initial value averaged flow duration values reported time periods 
looking values segments acknowledging new data 
jun avg kbytes jun ini jan avg kbytes jan ini fig 

distribution rwnd advertised handshake lower plot averaged connection bytes jun jan fig 

tcp congestion window estimated tcp header initial rwnd period note clients advertise rwnd kbytes segments considering common mtu kbytes connections uses kbytes initial rwnd 
values obtained summing bins 
period observe general increase initial rwnd respective percentages 
small percentage uses rwnd kbytes 
note kbytes rwnd strong limitation maximum throughput connection reach ms round trip time correspond kbytes looking average rwnd advertised connection see distribution values changes little meaning receiver rarely imposing flow control sender words applications represent bottleneck 
order complete picture fig 
plot estimated flight data outgoing flows bytes bytes jun jan bytes jun jan fig 

bursts sequence data observed incoming upper outgoing connections bottom sent source inside lan ack received evaluated looking sequence number opposite directions 
measures collected close sender rwnd constraints estimate sender congestion window 
discrete result clearly shows effect segmentation tcp 
flow length limited see fig 
flight size concentrated small values samples counted flight sizes smaller kbytes note increased network capacity period apparently affect flight data congestion windows observed 
suggests current internet scenario flows short main limitation performance receiver buffer dynamic sliding window implementation tcp rarely comes play 
effect tcp performance delaying data transfer way handshake unnecessary long timeouts packet flow dropped event due traffic fluctuations congestion induced short flow 
sequence burst size outb length missing data received sequence received stream similarly duplicated data burst size byte wise length contiguous duplicated data received interesting performance figures related tcp internet 
particular outb observed packet reordering performed network packets dropped path flow length larger segment 
observed packet replicated network packet drop recovery phase performed sender covers received segments 
table vi reports probability observing outb events evaluated respect number segments flows observed ratio total outb events recorded number packets flows observed period time 
starting outb see practically outb events recorded outgoing flows simple lan topology mbit switched ethernet rarely drop packets recall access link capacity mbit mbit 
contrary probability observing outb large incoming data packets received sequence period corresponding probability related flow 
looking measure referring period observe halved chance outb respectively 
mainly due increased capacity access peering links reduced dropping probability loss probability remains high specially thinking average values working day 
looking probabilities recalling internal lan considered sequential drop free environment duplicated burst recorded outgoing data charge dropping events recovered servers 
measure dropping probability derived 
contrary incoming events due retransmission external hosts received data probability packet recorded trace dropped lan negligible 
give reader details data involved events figs 
plot distribution size outb events respectively 
spikes due segmentation effect introduced tcp packet size distribution concentrate measure multiples common msss 
example looking size outb incoming data see gap distribution equal mss corresponding total measured events 
assuming outb event consequence packet drop strong indication period vs pkt vs flow jun jan period vs pkt vs flow jun jan table vi outb events rate computed respect number packets flows bytes jun jan bytes jun jan fig 

bursts duplicated data observed incoming upper outgoing connections bottom packet dropped time 
outb accounting consecutive drops drops longer bursts negligible 
outgoing distribution interesting smaller absolute chance observing outgoing outb event behavior observed lower plot 
similar inferred fig 

particular incoming size concentrated bytes mss 
contrary outgoing size due retransmission segments lost external network larger weight smaller values 
due fact majority outgoing flows really small see fig 
payload size tcp segments equal mss 
case clearly see spikes due longer bursts lost packets 
inserts plots figs 
draw distribution log log scale order able appreciate tail behavior distribution trend spikes due consecutive losses linear just flow dimension completion times 
explanation apart congestion periods internet show heavy tail behavior assertion surely requires investigation 
vi 
evolution novel tool internet traffic data collection statistical elaboration offers roughly different types plots measurement figures ranging simple amount observed traffic complex reconstructions flow evolution 
major novelty tool capability correlating outgoing incoming flow single edge router inferring performance behavior single flow observed measurement period 
exploiting capability discussed statistical analysis performed data collected ingress router institution 
results offer deep insight behavior ip tcp protocol highlighting characteristics traffic best knowledge observed normal traffic generated injecting ad hoc flows internet observed running simulations 
plan improve tool enlarging number possible statistical elaborations done data plan analyze data collected different edge routers order collect statistics support internet modeling efforts 
lo web page www tlc networks 
paxson floyd wide area traffic failure poisson modeling ieee acm transactions networking vol 
pp 
june 
crovella bestavros self similarity world wide web traffic evidence possible causes ieee acm transactions networking vol 
pp 

paxson routing behavior internet ieee acm transactions networking vol 
pp 

caceres danzig jamin mitzel characteristics wide area tcp ip conversations acm sigcomm 
danzig jamin tcplib library tcp internetwork traffic characteristics usc technical report 
danzig jamin caceres mitzel empirical workload model driving wide area tcp ip network simulations internetworking research experience vol 
pp 

empirically derived analytic models wide area tcp connections ieee acm transactions networking vol 
pp 
august 
feeley measured access characteristics world wide web client proxy caches usenix symposium internet technologies systems pp 
december 
fan cao almeida broder summary cache scalable wide area web cache sharing protocol acm sigcomm pp 

feldmann caceres douglis glass rabinovich performance web proxy caching heterogeneous bandwidth environments ieee infocom pp 

mah empirical model network traffic ieee infocom april 
balakrishnan stemm seshan padmanabhan katz tcp behavior busy internet server analysis solutions ieee infocom pp 
march 
cleveland lind sun ip packet generation statistical models tcp start times connection rate superposition acm sigmetrics pp 
june 
smith hernandez jeffay ott tcp ip protocol headers tell web acm sigmetrics pp 
june 
mccanne leres jacobson libpcap www tcpdump org 
mccanne leres jacobson tcpdump www tcpdump org 
ostermann version 
deri effective traffic measurement ieee communications magazine vol 
pp 
may 
postel rfc internet protocol sept 
postel rfc transmission control protocol sept 
allman paxson stevens rfc tcp congestion control 
italian academic research network www home engl shtml 
jacobson braden borman rfc tcp extensions high performance may 
mathis floyd romanow rfc testing tools tcp implementors october 
