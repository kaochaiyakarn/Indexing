evolutionary sentence building chatterbots dana computer information sciences ave south bend usa email cs edu chatterbots computer programs simulate intelligent conversation 
various techniques pattern matching indexing sentence reconstruction natural language processing 
approach chatterbots mixes pattern matching indexing query matching methods inspired information retrieval 
propose model new sentences produced existing ones evolutionary algorithm adapted structure natural language 
chatterbots computer programs simulate intelligent conversation 
typical execution program involves input user natural language program provides answer sound reasonable possibly intelligent response original sentence 
process repeated human keeps conversation going 
rst chatterbot named eliza written weizenbaum simulated 
idea simple consisted pattern matching algorithm sentence reconstruction templates indepth knowledge processing natural language 
program proved amazingly ecient sustaining people attention conversation success original program uenced development 
similar ideas colby stanford ai lab developed parry paranoid 
parry opposite eliza intended study nature capable expressing beliefs fears 
famous chatterbots mention chamberlain attributed authorship book policeman beard half constructed basically story teller 
authenticity book questioned afterward 
chatterbot worth mentioning arti cial linguistic internet computer entity development language called arti cial intelligence markup language earned prize turing test 
development called virtual agents enhance content web page help guiding customer 
agents incorporate knowledge owning competent answering business related questions 
goal chatterbots implemented simulate particular personalities real taken literature lm television shows 
start idea dispose database sentences attributed personality simulated example text book lines script 
rst prototypes online 
basic model build answer human input probabilistic choice pattern matching sentence building templates similar eliza query matching set sentences indexed keywords inspired information retrieval 
model keeps track short term history sure answer twice row human keeps repeating input 
introduce additional component system employ evolutionary approach enhance diversity chatterbot answers 
model start retrieving set sentences potential answers human input combine produce new sentences method similar genetic algorithms 
tness function similarity generated sentences original human sentence 
sentence chosen probabilistic function user 
way hope generate new sentences follow conversation style original character attributed 
structured way 
section gives details general techniques implemented chatterbots 
section introduces general algorithm virtual character techniques 
section introduces evolutionary algorithm generate new sentences ones existing database 
ends 
chatterbot techniques section brie introduce main techniques chatterbots pattern matching indexing 
pattern matching templates pattern matching technique consists nding patterns match sentence entered user 
pattern generally de ned sentence natural language certain parts replaced wild cards matched group words matching sentence 
pattern de ned database corresponding template utilized generate answer sentence 
parts original sentence identi ed wild cards rst subjected person transformation words mine way 
example pattern original eliza program expressed want character replaced sequence words 
corresponding template generate answer expressed mean got replaced sequence words matched wild card pattern 
application pattern dialog user want know works 
eliza mean got know works 
dialog pattern example necessity person transformation user want talk adviser 
eliza mean got talk adviser 
list patterns original eliza program contained list sentences answer sentences matched patterns suggest please go 
virtual character patterns built database character lines book script 
lines character precedes character developing dialog 
response templates generated character answer original dialog 
moment patterns chosen manually intend implement automatic pattern template generator 
ideas original eliza chatterbots contain list random sentences answered type question type input user 
information retrieval chatterbots discussion applying information retrieval ir techniques chatterbots similarities applications goals di erent 
classical ir approach collection documents ascii text natural language query expressed human natural language 
task system nd documents collection closest match query 
extend problem chatterbot vir tual character applications considering document consists sentences associated character original script 
approach regard sentence entered human participant dialog query 
input sentence expressed negative interrogative form 
case want nd particular document sentence seen answer query 
initial ideas similar di erences approaches implying modify ir automatic indexing retrieval techniques applying chatterbots 
ir goal provide user reasonable number documents order corresponding relevance query 
virtual character model goal provide user just eventually documents sentences collection interpreted user coherent answer input 
second ir hope terms query retrieved documents de nition coherent answer chatterbots general subjective 
response may satisfactory point view human participant doesn contain terms input sentence query 
assume presence terms returned phrase increase human perception intelligent answer 
common ground models suggests methods developed ir improve system automatic indexing query matching classi cation retrieved documents relevance query 
techniques especially useful dispose large number sentences associated character intend simulate 
example start character taken book movie television show initial collection sentences transcript parts book script constitute character lines contribution dialog 
rst ir method apply chatterbots indexing documents sentences keywords represent signi cant words guring text documents 
current implementation chatterbots manual indexing automatic development 
automatic indexing starts removing common words document 
part adapted chatterbot approach sense words considered insigni cant ir meaningful dialog automatic indexing system developing utilizes lists words de ne semantics sentence taken consideration particular way simply ignored 
second step automatic indexing remove unnecessary suxes plural ing continuous form verbs step insures words family drive driving driver indexed single keyword 
third step system creates index collection documents resulting terms 
general term assigned weight frequency document entire collection 
known vector space model 
reduced length documents boolean indexing appropriate 
words record presence absence term indexed sentence assumption importance 
model documents sentences indexed terms occurring synonyms 
words appear text sentence processed signi cant indexing takes account context document 
second technique ir apply virtual character automatic document query matching document retrieval 
consider sentence entered user query 
classical ir approach query processed way documents meaning common words removed suxes remaining terms indexed frequency 
model take account stops lists phase 
retrieval process system selects documents sentences contain terms query user input rank number terms common query 
special case cosine formula document query matching introduced salton applied case indexing boolean 
ir system return documents matching query order similarity query 
case select matching sentences probabilistic function 
approach increases eciency chatterbot organizes knowledge included program way extended applications 
limitation system generate sentences exist original database reduces potential diversity answers 
collection sentences recorded initial form 
collection big may sucient time conversation recurrent user system may nd repetitive 
sentences added collection point necessary sentence indexed change 
person knowing initial character get impression virtual character repeating word word sentences original script 
combination technique pattern matching template answers partial solution problem actual state online chatterbots 
approach introduce add third technique dynamically generate new sentences eventually add database evolutionary computation model section 
virtual character chatterbot algorithm generally described pseudocode true read input output answer input write output answer function processes sentence user generates answer rules starts looking pattern probability example 
patterns match input selects randomly generates answer template associated 
previous step unsuccessful looks sentence indexed terms input sentence 
probability associated second step 
answer generated previous steps selects list random answers 
case input sentence formulated question treated separately step 
short term memory requirement seemingly intelligent conversation chatterbot include implementation short term memory prevents repeating saying human keeps feeding input sentence 
current model chatterbot keeps track latest sentence generated keeps calling answer function new sentence di erent 
intend extend memory include latest pattern simply resulting sentence go steps back 
short term memory chatterbot serve create certain coherence conversation 
intend keep track general context conversation containing number terms dialog include search new answer 
way chatterbot conversing current topic topics mentioned sentences back 
feedback evaluate virtual character verify constraints ful lled 
user asked provide feedback answer input sentence decide answer syntactically semantically correct sentence sentence consistent simulated character interesting reply input sentence 
initial experiments online chatterbots shown answers syntactically correct character considered answers 
evolutionary algorithm sentence generation section introduce evolutionary algorithm allows generate new sentences ones retrieved database enhance diversity response chatterbot 
evolutionary computation common method natural language processing 
application genetic algorithms eld include adaptive word segmentation grammar learning linguistic classi cation information retrieval 
model combination previous methods may generate interesting diverse conversations human opponent 
system able learn new sentences conversation possibly grow database feedback user 
idea form genetic algorithms gas build new sentences ones database 
gas start usually random initial population potential solutions problem individuals attempt build better ones recombination mutation operators 
individual evaluated estimate tness problem solved 
chances particular individual chosen reproduction depend evaluation 
case initial population consists sentences retrieved system potential answers input sentence user 
tness function computed number terms sentence common query input 
crossover operator generate new individuals exclusively leaving mutation operation 
dicult part algorithm representing sentence expressed natural language genetic individual de ning genes building blocks choosing crossover form 
challenge recombine sentences create new ones making sense relatively simple algorithm requiring complex natural language parser 
idea call largest common pattern convert sentences genetic representation apply crossover operator 
de nition 
sentences natural language 
largest common pattern denoted lcp longest sequence words groups words lcp pn sentences expressed pn pn de nition consider word string composed alphabetic characters delimited spaces punctuation characters commas semicolons 
looking longest pattern terms largest number characters union pn largest possible substrings eventually empty 
determine largest common pattern sequences words algorithm similar method determining distance strings replace character word 
rst words sentences de ne lcp recursively way lcp lcp sns tnt max lcp sns lcp tnt lcp sns tnt formula denoted sns tnt sentences obtain removing rst word respectively 
meaning rst line formula lcp sentences starting word contains word plus largest common pattern remaining sentences 
second line means rst words di erent lcp computed maximum largest common pattern obtained ignoring rst word rst sentence second sentence 
lines mean recursive algorithm stops sentences empty 
soon determined lcp sentences de ne genetic representation complement vector lcp sentence 
denote ind ind individuals representing sentences de ne ind ind genes individuals represent words groups words di erent sentences situated common words groups words composing lcp note genetic representation sentence depends second sentence compared changes crossover operation 
model sentences number genes apply classical crossover operators 
chosen uniform crossover 
operator exchanges corresponding genes individuals position independently swap probability case 
particular case pair genes independently swapped 
swapping step child sentences generated words group words lcp resulting individuals places initial sentences 
model crossover applied sentences nal punctuation mark 
question combined question rule applies sentences 
model genetic representation sentences created disassembled crossover operation time consuming classical gas representation particular solution problem unique 
hand application doesn require generating large number new individuals 
entire operation genetic evolution limited time user willing wait fort system reply 
entire process generating new sentences particular query follows evolutionary algorithm new sentences added existing ones process continues population size 
chosen model limited number individuals available coherence sentences may decreases number generations original individuals useful 
number new individuals generated chosen random process favoring sentences high tness user answer 
phase experimentation hasn included online chatterbots 
example better understanding algorithm suppose sentences want recombine lcp crossover 
don information 
situation requires resources 
rst step compute lcp sentences lcp individuals ind ou don information ind situation requires resources individuals contains genes 
uniform crossover operator choose swap independently probability 
supposing decision swap rst fourth gene obtain individuals child resources child ou don situation requires information merging individuals lcp original sentences obtain new sentences resources 
don situation requires information 
see sentences correct syntactic point view similar original ones attributed author character 
recombination sentences turns coherent english phrases 
example possible recombination sentences walked 
think 
result questions syntactically correct think 
walked 
part de ne general rules deciding sentences combined structure 
example question recombined question restrictions deeper 
moment generated sentences considered syntactically semantically correct 
evolutionary algorithm utilized enhance diversity response chatterbot virtual character 
algorithm experimental phase early prototype chatterbot program functional online 
genetic recombination capable generating new sentences enhancing diversity chatterbot keeping general style original character simulated 
side recombination doesn result coherent sentences constraints necessary improve success rate system 
thinking computer 
freeman new york 

policeman beard largely 
journal computer game design 
belz 
pcfg learning nonterminal partition search 
van editors grammatical inference algorithms applications 
proceedings th international colloquium grammatical inference pages 
springer 
chamberlain 
policeman beard half constructed 
warner books 
chen 
machine learning information retrieval neural networks symbolic learning genetic algorithms 
journal american society information science 

dialogues colorful personalities early ai 
stanford humanities review 
holland 
adaptation natural arti cial systems 
university michigan press ann arbor 
kazakov manandhar 
unsupervised learning word segmentation rules genetic algorithms inductive logic programming 
machine learning 
arti cial intelligence foundation 
www org 
communications web self service 
www com 
salton editor 
smart retrieval system experiments automatic document processing 
prentice hall englewood cli nj 
salton fox wu 
extended boolean information retrieval 
communications acm 
siegel mckeown 
learning methods combine linguistic indicators improving aspectual classi cation revealing linguistic insights 
computational linguistics 
syswerda 
uniform crossover genetic algorithms 
scha er editor proceedings international conference genetic algorithms san mateo ca 
morgan kaufmann publishers 
turing 
computing machinery intelligence 
mind 

chatterbots web page 
www cs edu chatterbots 

crossover improvement genetic algorithm information retrieval 
information processing management 
weizenbaum 
eliza computer program study natural language communication man machine 
communications acm 
