snopt sqp algorithm large scale constrained optimization philip gill department mathematics university california san diego la jolla ca walter murray michael saunders department stanford university stanford ca arne consulting development denmark erwin gams development washington dc contents 
problem types 
selecting snopt solver 
description method 
objective function reconstruction 
constraints slack variables 
major iterations 
minor iterations 
merit function 
treatment constraint infeasibilities 
starting points advanced bases 
starting points 
advanced basis 
options 
gams options 
model suffices 
snopt options 
snopt log 
exit conditions 
listing file messages 
section describes gams interface general purpose nlp solver snopt sparse nonlinear optimizer implements sequential quadratic programming sqp method solving constrained optimization problems smooth nonlinear functions objective constraints 
optimization problem assumed snopt sqp algorithm large scale constrained optimization stated form np minimize subject maximize gx linear nonlinear smooth objective function constant lower upper bounds set nonlinear constraint functions sparse matrix vector relational operators right hand side constants 
nonlinear constraints model gx form linear constraints 
gradients fi automatically provided gams automatic differentiation engine 
bounds may include special values inf inf indicate lj uj appropriate free variables bounds infinite fixed variables lj uj 
problem types nonlinear functions absent problem linear program lp snopt applies primal simplex method 
sparse basis factors maintained minos 
objective nonlinear problem linearly constrained lc tends solve easily general case nonlinear constraints nc 
note gams models objective variable objective function 
gams snopt link try substitute objective variable reformulate model snopt see true objective function 
linearly nonlinearly constrained problems snopt applies sparse sequential quadratic programming sqp method limited memory quasi newton approximations hessian lagrangian :10.1.1.14.6996
merit function control augmented lagrangian dense sqp solver 
general snopt requires matrix computation fewer evaluations functions nonlinear algorithms minos 
suitable nonlinear problems thousands constraints variables thousands degrees freedom 
large problems constraints bounds active solution 
selecting snopt solver gams system instructed snopt solver incorporating option gams model option nlp snopt model contains non smooth functions abs max try get solved snopt option snopt models discontinuous derivatives snopt designed solving models 
discontinuities gradients tolerated close optimum 
possible specify nlp snopt snopt command line chem gams chem nlp snopt snopt sqp algorithm large scale constrained optimization description method briefly describe main features sqp algorithm snopt introduce terminology 
sqp algorithm fully described :10.1.1.14.6996
objective function reconstruction step gams snopt performs try reconstruct objective function 
gams optimization models minimize maximize objective variable 
snopt works objective function 
way dealing add dummy linear function just objective variable 
consider gams fragment obj 
sum sqr resid model solve nlp minimizing cast form saying minimize subject resid constraints model 
simple approach preferable 
especially constraints linear important minimize resid directly 
achieved simple reformulation substituted 
substitution mechanism carries formulation conditions hold objective variable free continuous variable bounds defined appears linearly objective function objective function formulated equality constraint objective function constraints 
models important nonlinear objective function snopt 
instance model chem gms model library solves iterations 
add bound energy lo objective variable energy preventing substituted snopt able find feasible point starting point 
reformulation mechanism extended substitutions diagonal 
example gams model variables equations sqr model option nlp snopt solve nlp minimizing reformulated unconstrained optimization problem minimize additional reformulations turned statement option reform see 
snopt sqp algorithm large scale constrained optimization constraints slack variables general constraints problem formed gx 
snopt add general constraint slack variable si appropriate bounds 
problem defined rewritten equivalent form minimize subject gx maximization problem cast minimization multiplying objective function 
linear nonlinear general constraints equalities form sn gx sl sl sn known linear nonlinear slacks 
major iterations basic structure snopt solution algorithm involves major minor iterations 
major iterations generate sequence iterates xk satisfy linear constraints converge point satisfies order conditions optimality 
iterate xk qp subproblem generate search direction iterate xk 
constraints subproblem formed linear constraints gx sl nonlinear constraint linearization xk xk xk sn xk denotes jacobian matrix rows derivatives evaluated xk 
qp constraints comprise linear constraints xk sn xk xk xk gx sl bounded 
matrix vector defined xk xk xk xk qp subproblem written minimize subject ax quadratic approximation modified lagrangian function :10.1.1.14.6996
minor iterations solving qp subproblem iterative procedure minor iterations sqp method iterations qp method 
minor iteration constraints ax conceptually partitioned form bxb nxn basis matrix square nonsingular 
elements xb xs xn called basic nonbasic variables respectively permutation elements qp solution basic variables lie bounds nonbasic variables equal upper lower bounds 
iteration xs regarded set independent variables free move desired direction improve value qp objective sum infeasibilities 
basic variables adjusted order ensure continues satisfy snopt sqp algorithm large scale constrained optimization ax number variables ns say indicates number degrees freedom remaining constraints satisfied 
broad terms ns measure nonlinear problem particular ns zero solution lp problems 
appears improvement current definition nonbasic variable selected added process repeated value ns increased 
stages basic variable encounters bounds variable nonbasic value ns decreased 
associated equality constraints ax dual variables similarly variable associated reduced gradient dj 
reduced gradients variables quantities gradient qp objective reduced gradients slacks dual variables 
qp subproblem optimal dj nonbasic variables lower bounds dj nonbasic variables upper bounds dj variables including 
practice approximate qp solution relaxing conditions dj see minor optimality tolerance 
merit function qp subproblem solved new estimates np solution computed linesearch augmented lagrangian merit function sn sn sn diagonal matrix penalty parameters 
xk sk denotes current solution estimate xk sk denotes optimal qp solution linesearch determines step new point xk sk xk sk xk xk sk sk gives sufficient decrease merit function 
necessary penalties increased perturbation ensures descent 
sn adjusted minimize merit function function prior solution qp subproblem 
details see 
treatment constraint infeasibilities snopt explicit allowance infeasible constraints 
infeasible linear constraints detected solving problem form flp minimize subject gx vector ones 
equivalent minimizing sum general linear constraint violations subject simple bounds 
linear programming literature approach called elastic programming 
describe minimizing norm infeasibilities 
linear constraints infeasible snopt terminates computing nonlinear functions 
linear constraints feasible subsequent iterates satisfy linear constraints 
strategy allows linear constraints define region functions safely evaluated 
snopt proceeds solve np search directions obtained sequence quadratic programming subproblems 
qp subproblem proves infeasible unbounded dual variables nonlinear constraints snopt sqp algorithm large scale constrained optimization large snopt enters elastic mode solves problem np minimize subject gx nonnegative parameter elastic weight called composite objective 
sufficiently large equivalent minimizing sum nonlinear constraint violations subject linear constraints bounds 
similar formulation np fundamental qp algorithm fletcher 
see conn 
starting points advanced bases starting point may essential solving nonlinear models 
show starting point specified gams environment snopt information 
related issue restart information case number related models solved row 
starting optimal point previous solve statement situations beneficial 
gams environment means reusing primal dual information stored fields variables equations 
starting points specify starting point snopt level values gams 
example set variables xi 
default values level values zero 
setting starting point crucial getting results 
artificial example consider problem want find smallest circle contains number points xi yi example minimize problem modeled gams follows 
set points parameters coordinates coordinates fill random data uniform uniform variables coordinate center circle coordinate center circle radius equations points inside circle subject xi yi 
snopt sqp algorithm large scale constrained optimization 
sqr sqr sqr lo model option nlp snopt solve nlp minimizing help snopt able find optimal solution 
problem declared infeasible 
case providing starting point easy 
define estimates include model parameters xmin ymin xmax ymax xmin smin ymin smin xmax smax ymax smax xmin min xi ymin min yi xmax max xi ymax max yi xmin xmax ymin ymax set starting point xmin xmax ymin ymax sqrt sqr xmin sqr ymin model solves easily 
xmin ymin level values set implicitly result assigning bounds 
variable bounded away zero instance statement lo solve statement override default level zero variable order feasible 
note way formulate model minimize allows snopt solve problem default starting point 
advanced basis gams automatically passes level values basis information solve 
solve statements row just changes snopt typically need iterations find optimal solution second solve 
instance add second solve chem gms model model library model mixer chemical mix solve mixer minimizing energy nlp solve mixer minimizing energy nlp snopt sqp algorithm large scale constrained optimization observe log erwin hamilton gams chem nlp snopt gams copyright gams development 
rights reserved hamilton cp gams development starting compilation chem gms mb starting execution chem gms mb generating model mixer chem gms mb rows columns non zeroes 
executing snopt gams snopt linux version gill uc san diego murray saunders stanford university space allocated mb major minor step nobj objective optimal ns pd tf tf tf tf tf tf tf tf tf tf tf major minor step nobj objective optimal ns pd tf tf tf tf tf tt exit optimal solution 
restarting execution chem gms mb reading solution model mixer chem gms mb generating model mixer chem gms mb rows columns non zeroes 
executing snopt gams snopt linux version gill uc san diego murray saunders stanford university snopt sqp algorithm large scale constrained optimization space allocated mb major minor step nobj objective optimal ns pd tt exit optimal solution 
restarting execution chem gms mb reading solution model mixer chem gms mb status normal completion erwin hamilton solve takes iterations second solve needs exactly zero iterations 
basis information passed marginals variables equations 
general rule basic nonbasic level value bound marginal value eps means numerical value marginal zero status nonbasic 
user specify basis assigning zero nonzero values values 
noted values zero basis rejected 
happens instance subsequent models different 
decision value option see 
options cases nlp models solved gams snopt solver options 
special situations possible specify non standard values options 
gams options gams options affect behavior snopt 
nlp option selects nlp solver 
example option nlp snopt 
see 
selects solver models discontinuous non differentiable functions 
example option snopt 
see 
selects relaxed non linear mixed integer solver 
relaxing integer conditions model effectively nlp 
example option snopt 
see 
sets minor iteration limit 
example option 
default 
snopt soon number minor iterations exceeds iteration limit 
case current solution reported 
sets time limit resource limit 
depending architecture wall clock time cpu time 
snopt soon seconds elapsed snopt started 
current solution reported case 
example option 
default seconds 
snopt sqp algorithm large scale constrained optimization sets domain violation limit 
domain errors evaluation errors nonlinear functions 
example domain error trying evaluate 
examples include logs negative numbers evaluating evaluated exp log 
situation occurs number domain errors increased snopt number exceeds limit 
limit reached reasonable number returned case zero passed back snopt asked continue 
cases snopt able recover domain errors especially happen intermediate point 
best add appropriate bounds linear constraints ensure domain errors don occur 
example expression log model add statement lo 
example option 
default value 
basis acceptance test 
models solved row gams automatically passes dual information snopt reconstruct advanced basis 
new variables constraints enter model may better existing basis information crash new basis 
determines quickly existing basis discarded 
value discard basis value retain basis 
example option 
default 
debug listing 
turned extra information printed snopt added listing file 
example option 
default 
option sets amount memory snopt 
default estimate model statistics number nonlinear equations number nonlinear variables number nonlinear 
cases sufficient solve model 
extreme cases snopt may need memory user specify option 
historical reasons specified double words byte quantities 
example option ask mb megabyte defined bytes 
reform option instruct reformulation mechanism described substitute equality equations 
default value cause procedure try substitutions diagonal objective variable removed 
value prohibit diagonal procedure 
example option reform 
default reform 
model suffices model identifier gams suffices assign values 
small gams fragment illustrates model solve minimizing nlp options set assigning model identifier override global options 
example model option solve minimizing nlp iteration limit solve 
snopt sqp algorithm large scale constrained optimization sets iteration limit 
overrides global iteration limit 
example default 
see 
sets resource time limit 
overrides global resource limit 
example default seconds 
see 
sets basis acceptance test parameter 
overrides global setting 
example default 
see 
scale model user supplied scale factors 
user provide scale factors scale variable equation suffix 
example scale assign scale factor xi variables 
variables snopt see scaled factor variable scale modeler scale factors represent order magnitude variable 
case snopt see variables scaled 
similarly equation scales assigned equations scaled factor equation scale 
example turn scaling 
default scaling default scale factors 
automatic scaling provided snopt option scale option 
sets solver option file 
solver specific snopt options specified file called snopt opt see 
tell snopt file add statement option 
default option file 
workspace workspace option sets amount memory snopt 
default estimate model statistics number nonlinear equations number nonlinear variables number nonlinear 
cases sufficient solve model 
extreme cases snopt may need memory user specify option 
amount memory specified mb 
example workspace 
snopt options snopt options specified file called snopt opt reside working directory project directory running models ide 
tell snopt read file statement model see 
example valid snopt opt hessian full memory hessian frequency users familiar snopt distribution stanford university notice keywords missing 
markers optional gams snopt ignored 
option file accepted hessian full memory hessian frequency options case insensitive 
line comment line starts asterisk column 
follows description snopt options possibly useful gams environment snopt sqp algorithm large scale constrained optimization check frequency ith minor iteration basis factorization numerical test see current solution satisfies general linear constraints including linearized nonlinear constraints 
constraints form ax set slack variables 
perform numerical test residual vector ax computed 
largest component judged large current basis basic variables recomputed satisfy general constraints accurately 
check frequency useful debugging purposes option needed 
default check frequency 
crash option restarts crash procedure select initial basis certain rows columns constraint matrix 
crash option determines rows columns eligible initially times crash called 
columns pad basis necessary 
crash option initial basis contains slack variables crash option crash called looking triangular basis rows columns matrix crash option crash called twice nonlinear constraints 
call looks triangular basis linear rows iteration proceeds simplex iterations linear constraints satisfied 
jacobian evaluated major iteration crash called find triangular basis nonlinear rows retaining current basis linear rows 
crash option crash called times nonlinear constraints 
calls treat linear equalities linear inequalities separately 
call treats nonlinear rows major iteration 
certain slacks inequality rows selected basis 
numerical values exclude slacks close bound 
crash passes columns searching basis matrix essentially triangular 
column assigned pivot particular row column contains suitably large element row assigned 
pivot elements ultimately form diagonals triangular basis 
remaining unassigned rows slack variables inserted complete basis 
default crash option linearly constrained problems crash option problems nonlinear constraints 
crash tolerance crash tolerance allows starting procedure crash ignore certain small nonzeros column amax largest element column nonzeros aij column ignored aij amax 
meaningful range 
basis obtained crash may strictly triangular nonsingular triangular 
intention obtain starting basis containing columns fewer arbitrary slacks 
feasible solution may reached sooner problems 
example suppose columns matrix shown lu factor tolerance tridiagonal matrix entries 
help crash choose columns initial basis specify crash tolerance value 
default crash tolerance elastic weight parameter denoted determines initial weight associated problem np 
major iteration elastic mode started qp subproblem infeasible qp dual variables larger magnitude xk objective gradient 
case qp re solved elastic mode xk 
increased subject maximum allowable value point optimal problem np feasible np 
rth increase xk xk iterate needed 
default elastic weight snopt sqp algorithm large scale constrained optimization expand frequency option part expand anti cycling procedure designed progress highly degenerate problems 
linear models strategy force positive step iteration expense violating bounds variables small amount 
suppose minor feasibility tolerance 
period iterations tolerance snopt increases steps 
nonlinear models procedure iterations variable 
cycling occur current solution vertex feasible region 
zero steps allowed variable positive steps enforced 
increasing expand frequency helps reduce number slightly infeasible nonbasic basic variables eliminated resetting procedure 
diminishes freedom choose large pivot element see pivot tolerance 
default expand frequency factorization frequency basis changes occur factorizations basis matrix 
linear programs basis factors usually updated iteration 
default reasonable typical problems 
smaller values say may efficient problems dense poorly scaled 
problem nonlinear fewer basis updates occur optimum approached 
number iterations basis factorizations increase 
iterations test regularly check frequency ensure general constraints satisfied 
necessary basis limit updates reached 
default factorization frequency linear programs factorization frequency nonlinear models 
feasibility tolerance see minor feasibility tolerance 
default feasibility tolerance feasible point options means ignore objective function finding feasible point linear nonlinear constraints 
check nonlinear constraints feasible 
default turned 
feasible exit snopt terminate nonlinear constraint violations option feasible exit requests effort satisfy nonlinear constraints ignoring objective function 
default turned 
hessian full memory option selects full storage method storing updating approximate hessian 
snopt uses quasi newton approximation hessian lagrangian 
bfgs update applied major iteration 
hessian full memory specified approximate hessian treated dense matrix bfgs updates applied explicitly 
option efficient number nonlinear variables large say 
case storage requirement fixed expect step superlinear convergence solution 
default turned number nonlinear variables 
hessian limited memory option selects limited memory storage method storing updating approximate hessian 
snopt uses quasi newton approximation hessian lagrangian 
bfgs update applied major iteration 
hessian limited memory problems number nonlinear variables large 
case limited memory procedure update diagonal hessian approximation hr limited number times 
updates accumulated list vector pairs 
discarded regular snopt sqp algorithm large scale constrained optimization intervals hr reset diagonal 
default turned number nonlinear variables 
hessian frequency hessian full selected bfgs updates carried hessian approximation reset identity matrix 
certain problems occasional resets may improve convergence general necessary 
hessian full memory hessian frequency similar effect hessian limited memory hessian updates retains current diagonal resets 
default hessian frequency 
hessian updates hessian limited memory selected bfgs updates carried diagonal elements accumulated updates discarded updating process starts 
broadly speaking updates stored better quality approximate hessian 
vectors stored greater cost qp iteration 
default value give robust algorithm significant expense faster convergence obtained significantly fewer updates 
default hessian updates limited memory storage model 
infeasible exit ok snopt terminate nonlinear constraint violations companion option feasible exit requests effort satisfy nonlinear constraints ignoring objective function 
infeasible exit ok extra effort 
default turned 
iterations limit maximum number minor iterations allowed iterations simplex method qp algorithm summed major iterations 
option overrides gams options 
default specified gams 
linesearch tolerance controls accuracy located direction search iteration 
start linesearch target directional derivative merit function identified 
parameter determines accuracy target value approximated 
real value range 
default value requests just moderate accuracy linesearch 
nonlinear functions cheap evaluate usually case gams models accurate search may appropriate try 
number major iterations decrease 
nonlinear functions expensive evaluate accurate search may appropriate 
case running gams gradients known try 
number major iterations increase total number function evaluations may decrease compensate 
default linesearch tolerance 
log frequency see print frequency 
default log frequency lu factor tolerance lu update tolerance tolerances affect stability sparsity basis factorization lu updating respectively 
satisfy 
matrix product matrices form multipliers satisfy ri 
smaller values ri favor stability larger values favor sparsity 
snopt sqp algorithm large scale constrained optimization large relatively dense problems say may give useful improvement stability impairing sparsity serious degree 
certain regular structures band matrices may necessary reduce order achieve stability 
example columns include submatrix form 


range ri 
defaults linear models lu factor tolerance lu update tolerance 
defaults nonlinear models lu factor tolerance lu update tolerance 
lu density tolerance density tolerance lu factorization basis matrix 
columns rows formed time remaining rows columns basis altered appropriately 
stage density remaining matrix exceeds markowitz strategy choosing pivots terminated 
remaining matrix factored dense lu procedure 
raising density tolerance may give slightly sparser lu factors slight increase factorization time 
default lu density tolerance lu singularity tolerance singularity tolerance helps guard ill conditioned basis matrices 
basis diagonal elements tested follows maxi uij jth column basis replaced corresponding slack variable 
occur restart start major iteration 
cases jacobian may converge values basis exactly singular 
example row jacobian zero optimal solution 
exact singularity occurs basis ill conditioned optimization progress slowly 
setting larger tolerance say may help cause judicious change basis 
default lu singularity tolerance machines 
value corresponds relative machine precision 
major feasibility tolerance specifies accurately nonlinear constraints satisfied 
default value appropriate linear nonlinear constraints contain data accuracy 
maximum nonlinear constraint violation normalized size solution 
required satisfy max violation ith nonlinear constraint number nonlinear constraints 
gams snopt iteration log appears quantity labeled 
problem functions known low accuracy larger major feasibility tolerance may appropriate 
default major feasibility tolerance 
major optimality tolerance specifies final accuracy dual variables 
successful termination snopt computed solution max snopt sqp algorithm large scale constrained optimization estimate complementarity gap variable 
gaps computed final qp solution reduced gradients dj gj aj gj jth component objective gradient aj associated column constraint matrix set qp dual variables dj min xj lj dj min uj xj dj dj 
gams snopt iteration log appears quantity labeled optimal 
default major optimality tolerance 
major iterations limit maximum number major iterations allowed 
intended guard excessive number linearizations constraints 
default major iterations limit max max 
major print level controls amount output gams listing file major iteration 
output visible option turned see 
major print level gives normal output linear nonlinear problems major print level gives additional details jacobian factorization commences major iteration 
general value specified may thought binary number form major print level letter stands digit follows single line gives summary major iteration 
entry strictly binary summary line printed 
basis statistics information relating basis matrix 
output provided 
xk nonlinear variables involved objective function constraints 
dual variables nonlinear constraints 
xk values nonlinear constraint functions 
xk jacobian 
obtain output items set corresponding digit 
jacobian output column wise start major iteration 
column preceded value corresponding variable xj key indicate variable basic nonbasic 
reason specify objective contains nonlinear variables jacobian 
typical line output bs mean basic value third column jacobian elements rows 
major print level suppresses output error messages 
default major print level major step limit parameter limits change linesearch 
applies nonlinear problems feasible solution feasible subproblem 

linesearch determines step range nonlinear constraints step nearest upper lower bound constraints linear 
normally tried min 
snopt sqp algorithm large scale constrained optimization 
cases ae bx ax moderate change components lead floating point overflow 
parameter define limit search direction evaluation potentially smaller min 

possible upper lower bounds prevent evaluation nonlinear functions meaningless points 
major step limit provides additional safeguard 
default value affect progress behaved problems setting may helpful rapidly varying functions 
starting point may required 
important application class nonlinear squares problems 

cases local optima exist specifying small value may help locate optimum near starting point 
default major step limit 
minor iterations limit maximum number minor iterations allowed qp subproblem sqp algorithm 
current experience major iterations converge reliably qp subproblems allowed solve accurately 
large value 
major iteration log line indicates corresponding qp terminated limit note snopt option iterations limit gams option defines independent limit total number minor iterations summed qp subproblems 
default minor iterations limit max max minor feasibility tolerance snopt tries ensure variables eventually satisfy upper lower bounds tolerance includes slack variables 
general linear constraints satisfied feasibility respect nonlinear constraints judged major feasibility tolerance 
bounds linear constraints satisfied problem declared infeasible 
corresponding sum infeasibilities 
quite small may appropriate raise factor 
error data suspected 
nonlinear functions evaluated points satisfy bounds linear constraints 
regions function undefined attempt eliminate regions problem 
example log essential place lower bounds variables 
bounds appropriate 
log singularity serious 
general keep far away singularities possible 
scale option feasibility defined terms scaled problem meaningful 
reality snopt uses feasibility tolerance satisfying bounds qp subproblem 
sum infeasibilities reduced zero qp subproblem declared infeasible 
snopt elastic mode linearized nonlinear constraints defined elastic 
see elastic options 
default minor tolerance 
minor optimality tolerance judge optimality qp subproblem 
qp reduced gradients dj gj aj gj jth component qp gradient aj associated column qp constraint matrix set qp dual variables 
construction reduced gradients basic variables zero 
qp subproblem declared optimal reduced gradients nonbasic variables lower upper bounds satisfy dj dj respectively dj variables 
snopt sqp algorithm large scale constrained optimization tests measure size dual variables 
included tests independent large scale factor objective function 
quantity defined max 
objective scaled small optimality test reduces comparing dj default minor optimality tolerance 
minor print level controls amount output gams listing file solution qp subproblems 
option useful option turned see 
value effect minor iteration output error messages 
single line output minor iteration controlled print frequency 
basis factorization statistics generated periodic basis see factorization frequency 
statistics factorization major iteration controlled major print level 
default minor print level 
optimality tolerance see minor optimality tolerance 
default optimality tolerance 
partial price parameter recommended large problems significantly variables constraints 
reduces required pricing operation nonbasic variable selected 
columns constraint matrix searched 
partitioned give roughly equal segments aj ij 
previous pricing search successful aj ij search begins segments aj ij 
subscripts modulo 
reduced gradient larger dynamic tolerance variable largest reduced gradient appropriate sign selected 
search continues segments aj ij 
partial price may appropriate time stage models having time periods 
default partial price linear models partial price nonlinear models 
pivot tolerance solution qp subproblems pivot tolerance prevent columns entering basis cause basis singular 
changes search direction ratio test determine component reaches upper lower bound 
corresponding element called pivot element 
elements ignored pivot elements smaller pivot tolerance common variables reach bound essentially time 
cases minor feasibility tolerance say provides freedom maximize pivot element improve numerical stability 
excessively small values specified 
lesser extent expand frequency say provides freedom maximize pivot element 
excessively large values specified 
default pivot tolerance machines 
corresponds machine precision 
snopt sqp algorithm large scale constrained optimization print frequency turned see minor print level line qp iteration log printed listing file kth minor iteration 
default print frequency 
scale option scale options available follows scale option scaling 
recommended known constraint matrix jacobian large elements say larger 
scale option linear constraints variables scaled iterative procedure attempts matrix coefficients close possible see 
improve performance solution procedures 
scale option constraints variables scaled iterative procedure 
additional scaling performed takes account columns fixed positive lower bounds negative upper bounds 
nonlinear constraints scales depend jacobian point satisfies linear constraints 
scale option starting point provided problem highly nonlinear 
default scale option linear models scale option nlp scale tolerance parameter affects passes needed constraint matrix 
pass scaling procedure computes ratio largest smallest nonzero coefficients column max aij min aij aij 
maxj times previous value scaling pass performed adjust row column scales 
raising say usually increases number scaling passes passes 
default scale tolerance 
scale print option causes row scales column scales printed 
scaled matrix coefficients ij scaled bounds variables slacks lj lj uj listing file show values option turned see 
default turned 
solution option causes snopt solution file printed gams listing file 
visible option turned see 
default turned 
limit places limit storage allocated variables 
ideally set slightly larger number degrees freedom expected optimal solution 
linear programs optimum normally basic solution degrees freedom 
number variables lying strictly bounds number general constraints 
default value 
nonlinear problems number degrees freedom called number independent variables 
normally need greater number nonlinear variables 
problems may considerably smaller 
save storage large 
unbounded objective value fmax unbounded step size max parameters intended detect unboundedness nonlinear problems 
may achieve snopt sqp algorithm large scale constrained optimization purpose 
line search evaluated points form fixed varies 
exceeds fmax exceeds max iterations terminated exit message problem unbounded badly scaled 
gams environment floating point overflow errors occur singularities evaluation test 
defaults unbounded objective value unbounded step size 
violation limit keyword defines absolute limit magnitude maximum constraint violation line search 
completion line search new iterate xk satisfies condition vi xk max vi point nonlinear constraints evaluated vi ith nonlinear constraint violation vi max li fi fi ui 
effect violation limit restrict iterates lie expanded feasible region size depends magnitude 
possible keep iterates region objective expected defined bounded 
objective bounded values variables may large positive value 
default violation limit 
snopt log gams snopt solves linearly constrained problem log visible screen erwin hamilton chem model chem gms retrieved erwin hamilton gams chem nlp snopt gams copyright gams development 
rights reserved hamilton cp gams development starting compilation chem gms mb starting execution chem gms mb generating model mixer chem gms mb rows columns non zeroes 
executing snopt gams snopt linux version gill uc san diego murray saunders stanford university space allocated mb major minor step nobj objective optimal ns pd tf tf tf tf tf tf tf tf snopt sqp algorithm large scale constrained optimization tf tf tf major minor step nobj objective optimal ns pd tf tf tf tf tf tt exit optimal solution 
restarting execution chem gms mb reading solution model mixer chem gms mb status normal completion erwin hamilton nonlinearly constrained problem log somewhat different erwin hamilton model gms retrieved erwin hamilton gams nlp snopt gams copyright gams development 
rights reserved hamilton cp gams development starting compilation gms mb starting execution gms mb generating model gms mb rows columns non zeroes 
executing snopt gams snopt linux version gill uc san diego murray saunders stanford university space allocated mb major minor step ncon merit optimal ns penalty pd ff ff ff ff ff ff ff ff ff ff ff snopt sqp algorithm large scale constrained optimization major minor step ncon merit optimal ns penalty pd ff ff ff ff ff ff ff ff ff ff ff major minor step ncon merit optimal ns penalty pd ff ff ff ff ff ff ff ff ff ff ff major minor step ncon merit optimal ns penalty pd ff tt exit optimal solution 
restarting execution gms mb reading solution model gms mb status normal completion erwin hamilton gams prints number equations variables non zero elements model generated 
gives indication size model 
snopt says memory allocated solve model estimate 
user specified different amount option workspace model suffix message space requested user mb space requested solver mb snopt log shows columns major current major iteration number 
minor number iterations required feasibility optimality phases qp subproblem 
generally minor iterations theoretical analysis predicts correct active set identified near solution see 
snopt sqp algorithm large scale constrained optimization step step length taken current search direction variables just changed reasonably behaved problems unit step taken solution approached 
nobj number times nonlinear objective function evaluated 
nobj printed guide amount required linesearch 
ncon number times snopt evaluated nonlinear constraint functions 
merit value augmented lagrangian merit function 
function decrease iteration necessary increase penalty parameters see 
solution approached merit converge value objective solution 
elastic mode merit function composite function involving constraint violations weighted elastic weight 
constraints linear item labeled objective value objective function 
decrease monotonically optimal value 
value maximum component scaled nonlinear constraint residual 
solution regarded acceptably feasible major feasibility tolerance 
constraints linear iterates feasible entry printed 
optimal value maximum complementarity gap 
estimate degree reduced costs 
optimal small neighborhood solution 
ns current number variables 
penalty euclidean norm vector penalty parameters augmented lagrangian merit function printed constraints linear 
pd letter indication status convergence tests involving primal dual feasibility iterates see description major feasibility tolerance major optimality tolerance 
letter test satisfied 
indicators snopt terminates exit optimal solution user check solution carefully 
summary line may include additional code characters indicate happened course iteration 
central differences compute unknown components objective constraint gradients 
happen gams environment 
linesearch necessary decrease step order obtain maximum constraint violation conforming value violation limit 
norm wise change variables limited value major step limit 
output occurs repeatedly iterations may worthwhile increasing value major step limit 
snopt elastic mode signifies qp subproblem infeasible 
event triggers start nonlinear elastic mode remains effect subsequent iterations 
elastic mode qp subproblems associated elastic problem np 
snopt elastic mode indicates minimizer elastic subproblem satisfy linearized constraints 
case feasible point usual qp subproblem may may exist 
extra evaluation problem functions needed define acceptable positive definite quasi newton update lagrangian hessian 
modification done nonlinear constraints 
necessary modify update include augmented lagrangian term 
snopt sqp algorithm large scale constrained optimization approximate hessian reset discarding diagonal elements 
reset forced periodically hessian frequency hessian updates keywords 
may necessary reset ill conditioned hessian time time 
approximate hessian reset consecutive major iterations bfgs update 
diagonals approximate hessian retained update done reset 
approximate hessian reset identity matrix 
self scaled bfgs update performed 
update hessian approximation diagonal follows hessian reset 
necessary modify self scaled update maintain positive definiteness 
positive definite bfgs update 
approximate hessian unchanged previous iteration 
minor iterations terminated minor iteration limit 
qp subproblem unbounded 
weak solution qp subproblem 
snopt prints exit message 
see 
exit conditions solution procedure terminates exit message printed summarize final result 
describe message suggest possible courses action 
exit optimal solution message hope see 
certainly preferable message naturally want believe says surely situation computer knows best 
cases distinct level caution order wait morning 
example objective value better expected may obtained optimal solution wrong problem 
item data effect wrong value 
verifying problem defined correctly difficult tasks model builder 
nonlinearities exist ask question local optimum 
constraints linear objective known convex sum squares minimizing objective local minimum global minimum sense point lower function value 
points objective value particularly objective largely linear 
conversely maximizing convex function local maximum expected global sufficient constraints confine feasible region 
similar statements nonlinear constraints defining convex concave regions 
functions problem convex concave 
advice specify starting point estimate possible include reasonable upper lower bounds variables order confine solution specific region interest 
expect modelers know problem knowledge know best 
caution optimal solution variables slacks may lie outside bounds desired especially scaling requested 
max primal refers largest bound infeasibility variable involved 
large consider restarting smaller minor feasibility tolerance say times smaller scale option 
similarly max dual indicates variable non optimal value 
broadly speaking max dual norm pi snopt sqp algorithm large scale constrained optimization objective function probably change dth significant digit optimization continued 
large consider restarting smaller major minor optimality tolerances 
nonlinear constraint shows maximum infeasibility nonlinear rows 
large consider restarting smaller major feasibility tolerance 
exit problem infeasible constraints linear message probably trusted 
feasibility measured respect upper lower bounds variables slacks 
points satisfying general constraints ax apparently point satisfies bounds violations small minor feasibility tolerance ignored component violates bound tolerance 
nonlinear constraints infeasibility harder recognize correctly 
feasible solution exists current linearization constraints may contain feasible point 
attempt deal situation solving qp subproblem snopt prepared relax bounds slacks associated nonlinear rows 
qp subproblem proves infeasible unbounded lagrange multiplier estimates nonlinear constraints large snopt enters called nonlinear elastic mode 
subproblem includes original qp objective sum infeasibilities suitably weighted elastic weight parameter 
elastic mode nonlinear rows elastic allowed violate specified bounds 
variables subject elastic bounds known elastic variables 
elastic variable free violate original upper lower bounds 
original problem feasible solution elastic weight sufficiently large feasible point eventually obtained perturbed constraints optimization continue subproblem 
nonlinear problem feasible solution snopt tend determine infeasible point elastic weight sufficiently large 
elastic weight infinite snopt locally minimize nonlinear constraint violations subject linear constraints bounds 
unfortunately snopt locally minimizes nonlinear constraint violations may exist regions nonlinear constraints satisfied 
possible nonlinear constraints defined way feasible points known exist constraints linearized 
exit problem unbounded badly scaled exit violation limit exceeded problem may unbounded linear problems unboundedness detected simplex method nonbasic variable apparently increased decreased arbitrary amount causing basic variable violate bound 
message prior exit message give index nonbasic variable 
consider adding upper lower bound variable 
examine constraints nonzeros associated column see formulated intended 
rarely scaling problem poor numerical error give erroneous indication unboundedness 
consider scale option 
nonlinear problems snopt monitors size current objective function size change variables step 
large judged unbounded parameters see problem terminated declared unbounded 
avoid large function values may necessary impose bounds variables order keep away singularities nonlinear functions 
second message indicates abnormal termination enforcing limit constraint violations 
exit implies objective bounded feasible region defined expanding bounds value violation limit 
exit major iteration limit exceeded exit minor iteration limit exceeded exit iterations snopt sqp algorithm large scale constrained optimization iterations limit major iterations limit exceeded required solution 
check iteration log sure progress 
repeat run higher limits 
consider specifying new initial values nonlinear variables 
exit requested accuracy achieved feasible solution requested accuracy dual infeasibilities achieved 
abnormal termination occurred snopt satisfying major optimality tolerance 
check major optimality tolerance small 
exit limit small nnn problem appears nonlinear anticipated 
current set basic variables optimized possible price operation necessary continue nnn room 
general raise limit reasonable amount bearing mind storage needed reduced hessian double words 
exit constraint objective values calculated exit occur gams environment 
exit subroutine giving incorrect gradients exit occur gams environment 
exit subroutine giving incorrect gradients exit occur gams environment 
exit current point improved algorithm find better solution optimality achieved optimality tolerance 
possibly scaling lead better function values derivatives 
raising optimality tolerance probably message go away 
exit satisfy general constraints lu factorization basis just obtained recompute basic variables xb values nonbasic variables 
step iterative refinement applied increase accuracy xb 
row check revealed resulting solution satisfy current constraints ax sufficiently 
probably means current basis ill conditioned 
try scale option scaling linear constraints variables 
certain highly structured basis matrices notably band structure systematic growth may occur factor try setting lu factor tolerance possibly smaller 
exit terminated subroutine user message appears resource limit reached see solver interrupted ctrl keyboard signal 
snopt sqp algorithm large scale constrained optimization exit integer real storage basis factors increase workspace option workspace model suffix 
exit error basis package preceding message describe error detail 
error happen easily gams environment 
exit singular basis nnn factorization attempts exit highly occur 
factorization attempt basis structurally numerically singular 
diagonals triangular matrix respectively zero smaller certain tolerance 
associated variables replaced slacks modified basis singularity persists 
mean problem badly scaled lu factor tolerance larger 
exit basis file dimensions match problem exit occur gams environment 
exit basis file state vector match problem exit occur gams environment 
exit system error 
wrong 
basic variables nnn exit happen may indicate configuration problem gams snopt version 
exit character storage start solving problem increase workspace option workspace model suffix 
exit integer storage start solving problem increase space option workspace model suffix 
exit real storage start solving problem increase space option workspace model suffix 
exit function evaluation error limit exceeded function evaluation error limit reached 
evaluating non linear function objective constraints evaluation error occurred allowed number errors exceeded 
increase option see preferably add bounds linear constraints errors happen 
errors caused declaring free variable model contains functions log 
overflows exponentiation common cause exit 
inspect listing file messages error equation instances undefined log operation returned equation name mentioned message gives indication look model 
snopt sqp algorithm large scale constrained optimization listing file messages listing file lst file contains feedback snopt solver performed particular model 
chem gms model solve summary looks model mixer objective energy type nlp direction minimize solver snopt line solver status normal completion model status locally optimal objective value resource usage limit iteration count limit evaluation errors gams snopt linux version gill uc san diego murray saunders stanford university space allocated mb exit optimal solution 
major minor iterations calls aggregations interpreter usage space solver mb solver completed normally local possibly global optimum 
complete list possible solver status model status values tables 
resource usage time iteration count evaluation errors nonlinear function gradient evaluation limits 
limits increased option see 
possible exit messages listed 
statistics exit message follows 
major minor iterations 
number major minor iterations optimization task 
note number minor iterations reported iteration count 
calls 
number times snopt evaluated objective function constraint functions fi gradients 
linearly constrained problem number calls zero 

number variables reported solution 
see 
aggregations 
number equations removed model objective function recovery algorithm see 
snopt sqp algorithm large scale constrained optimization model status remarks optimal applies linear models 
locally optimal local optimum nlp 
may may global optimum 
unbounded lp message reliable 
badly scaled nlp cause message appear 
infeasible applies lp model infeasible 
locally infeasible applies nlp starting point feasible solution feasible points may exist 
intermediate infeasible search stopped iteration time limit current point violates constraints bounds 
intermediate nonoptimal search stopped iteration time limit current point feasible violates optimality conditions 
integer solution apply snopt 
intermediate non integer apply snopt 
integer infeasible apply snopt 
error check listing file error messages 
error solution check listing file error messages 
table model status values solver status remarks normal completion snopt completed optimization task 
iteration interrupt iteration limit hit 
increase option see 
resource interrupt time limit hit 
increase option see 
terminated solver check listing file 
evaluation error limit error limit exceeded 
see 
unknown error check listing file error messages 
error setup failure id error solver failure id error internal solver failure id error system failure id table solver status values snopt sqp algorithm large scale constrained optimization interpreter usage 
line refers time spent evaluating functions gradients 
due low resolution clock small size model concluded time spent inside routines function gradient evaluations 
larger models numbers accurate 
snopt conn constrained optimization nondifferentiable penalty function siam numer 
anal pp 

dantzig linear programming extensions princeton university press princeton new jersey 
large scale sequential quadratic programming algorithms phd thesis department operations research stanford university stanford ca 
fletcher penalty method nonlinear constraints numerical optimization boggs byrd schnabel eds philadelphia siam pp 

solving staircase linear programs simplex method 
inversion math 
prog pp 

gill murray saunders snopt sqp algorithm large scale constrained optimization numerical analysis report department mathematics university california san diego la jolla ca :10.1.1.14.6996
gill murray saunders wright user guide version fortran package nonlinear programming report sol department operations research stanford university stanford ca 
practical anti cycling procedure linearly constrained optimization math 
prog pp 

theoretical properties augmented lagrangian merit function advances optimization parallel computing pardalos ed north holland north holland pp 

sparse matrix methods optimization siam scientific statistical computing pp 

maintaining lu factors general sparse matrix linear algebra applications pp 

murtagh saunders large scale linearly constrained optimization math 
prog pp 

projected lagrangian algorithm implementation sparse nonlinear constraints math 
prog 
study pp 

minos user guide report sol department operations research stanford university stanford ca revised 
