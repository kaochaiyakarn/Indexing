heterogeneity aware peer peer multicast robbert van renesse ken birman adrian dan singh werner vogels dept computer science cornell university ken vogels cs cornell edu system able tolerate possible leverage heterogeneity 
reasons may functional example order deal network address translation simply improve performance robustness 
position show selectcast application level multicast protocol leverages information provided astrolabe system mines hosts information resources 
years shown development called peer peer protocols pp allow large set users pool personal computers share resources 
advantages standard client server technology known pp offer resources client server architecture typically server resources shared importantly allows control resources users ultimately resources owned users contribute system 
early pps consider participating hosts equal regardless compute storage capacity regardless connected hosts 
policy keeps pp protocols simple ensures users remain equal system 
negative side policy lead substantial scalability problems documented 
practice hosts large system far equal 
vastly different cpu storage sony cornell edu capacities latency bandwidth different pairs hosts vary orders magnitude 
availability varies widely hosts appear disappear network regular basis connected continuously 
type connectivity differs hosts firewalls nat boxes hosted isps allow unsolicited incoming traffic 
protocols fasttrack recognize differences called supernodes regular user nodes 
compared original gnutella protocol performance significantly improved appeals true pps lost process supernodes effectively act servers user nodes 
pps exploit host proximity order optimize message routing resorting dedicated servers pastry 
pps pings order determine latency bandwidth connections base routing decisions measurements 
high latency low bandwidth links avoided 
pps suffer host churn rapid changes membership variance cpu storage resources 
comes mind systems heterogeneity advantage 
position describe design selectcast peer peer publish subscribe routing service built astrolabe peer peer domain aggregation service 
selectcast astrolabe heterogeneity aware cost increased management overhead compared pp protocols 
services rely special purpose servers leverage asymmetries hosts network connections 
application level multicast ip level multicast routing badly supported today internet isps improve situation 
multicast routing important candidate peerto peer solutions require cooperation isps 
application level multicast routing protocols designed tree routing order get logarithmic scaling behavior respect number receivers assuming tree bounded maximum branching factor reasonably balanced 
protocols put uneven load hosts networks hosts receive messages hosts call routers forward copies message set peers 
capable filtering routers may analyse content messages order decide links forward messages 
satisfactory performance robustness scale important select provisioned dependable hosts routers 
efficiency path followed message sender receiver follows path point point message followed 
simple way accomplish just sender send point receiver 
degenerate level tree scale load sender grows linear number receivers 
order achieve scalability branching factor large routers receive high load small paths followed messages take application level hops 
addition routers lie approximately point point paths sender receivers 
factors example latency bandwidth important influence tree 
narada earliest proposed 
narada achieve performance competitive ip multicast 
narada maintains mesh hosts runs protocol similar conventional accomplish multicast routing hosts 
narada subsequent designs best understood protocols layered top protocol maintains mesh hosts multicast routing protocol top mesh 
examples organization bayeux tapestry scribe pastry multicast facility 
selectcast astrolabe fit description selectcast routing protocol astrolabe maintains mesh 
sections follow describe astrolabe selectcast services investigate ways astrolabe selectcast information heterogeneity order improve scalability robustness security performance 
astrolabe astrolabe service best understood peer peer implementation dns 
hosts organized domain hierarchy hosts form leaf domains 
domain set attributes resource records dns terminology 
main difference dns attributes get updated 
attributes leaf domains writable corresponding hosts request hosts course 
strikingly attributes internal domain directly writable generated continuously aggregating attributes child domains 
aggregation specified sql aggregation queries associated domain 
sql queries dynamically deployed updated 
host maintains relational table internal domain 
domain table row child domain column attribute 
columns id identifies child domain parent 
specifying path name ids domain named 
domain table column maintains version row importantly column named contacts contacts attribute leaf domain set addresses corresponding host attribute internal domain contains small subset addresses hosts domain 
generate subset sql aggregation query just attribute 
effect sql query elects hosts represent domain 
contacts domain table gossip behalf domain ancestor domains tables keep tables approximately consistent contacts 
domain runs separate gossip protocol updates received contacts domain spread hosts domain 
host needs get going ignore astrolabe security mechanisms leaf domain path name existing astrolabe host start gossiping 
typically configured manually self configuring option exist described manually configured automatically discovered broadcast multicast searches 
selectcast selectcast trees communication links built reflect astrolabe hierarchy 
domain small set multicast routers selected sql aggregation query way astrolabe chooses contacts different selection considerations 
broadcast message simply sent routers root domain 
router turn forwards message routers child domain 
technique fault tolerant new routers automatically selected current routers fail astrolabe continuous aggregation facilities 
order provide better real time fault masking messages may forwarded routers child domains just done 
case significant amount redundant traffic generated duplicates filtered carefully order avoid exponential explosion messages 
forwarding strategy possible better available resources 
simplicity assume exactly routers selected non leaf domain 
messages disseminated router domain odd messages disseminated second routers 
theory throughput doubled significant amount re ordering required 
simply dividing traffic disjoint sets erasure codes may fault masking expense increased bandwidth cpu overhead 
selectcast able publish subscribe style filtering attaching sql condition domain attributes message 
routers forward message child domains condition holds 
results conditions cached short periods time order reduce computational head significantly 
topic subscriptions space efficient adding bloom filter attribute domain filters aggregated essentially ing bit masks 
trivial implemented content subscriptions supported framework 
addition topic content filtering possibilities exist 
example selectcast supports sending message machines load 
domains load attribute aggregated minimum 
message forwarded domains minimum load 
usefully security notification patch may sent say xp machines installed sp 
point point messaging expressed simple condition 
heterogeneity awareness performance robustness selectcast astrolabe significantly influenced contacts routers elected domains 
choices determine difference system working working 
contact router record set attributes id astrolabe path name host addrs current list addresses issued time host joined 
applications add new attributes example connectivity machine type operating system load storage capacity 
set multicast routers domain generated extended sql query select best union routers connectivity routers query specifies hosts best connectivity routers 
set gossip contacts domain may select union contacts issued contacts query specifies contacts domain contacts child domains operational longest 
selection sense system node churn high 
hosts occasionally join system contacts create little disturbance 
different domains different queries wish sql queries changed run time 
sophisticated queries specify different additional preferences 
example practitioner may prefer operating system theoretician may want chose contacts run different operating systems order increase failure independence 
preferences improve performance robustness selectcast astrolabe 
performance studies emulab published forthcoming show selectcast performance lans similar yoid complicated topologies performance selectcast significantly stable yoid selectcast balances load routers better higher levels hierarchy 
yoid uses combination mesh tree 
may strictly functional reasons prefer router contact 
example messages selectcast disseminated root leaf nodes 
certain domains may separated rest system firewalls nat boxes routers domains contacted routers parent domains 
order solve situation selectcast supports reverse connections router pulls messages parent router requests possibly web proxy 
astrolabe provides information necessary selectcast routers recognize reverse connections necessary see 
service level agreements may source limitations connections may set routers 
restrictions astrolabe hosts contacts 
example secure version astrolabe hosts domain signing key domain hosts contacts domain 
addresses firewalls nat boxes exported queries ones filtered 
router contact may address 
host multiple interface cards supports multiple protocols utilizes applicationlevel gateway messaging firewalls 
host maintains peer host gossips statistics addresses peer host 
initially selects ad dresses random statistics collected host weighs addresses latencies starts low latency addresses occasionally checking addresses 
similarly selectcast hosts maintain connection statistics router addresses order optimize metrics throughput latency jitter 
queries give applications considerable flexibility choice routers restricted shape astrolabe hierarchy 
limitation design may able construct optimal tree routers forwarding messages 
restriction due limited expressiveness sql aggregation queries led times extend language example support bloom filters nested records 
spite limitations find amount flexibility usually sufficient practice overwhelming 
considering design implement dynamic hierarchies astrolabe 
related dozens projects numerous mention take heterogeneity account ones dhts bayeux scribe multicast protocol take heterogeneity account 
attempting optimize bandwidth latency 
flexibility choosing routers astrolabe offers 
closest architecture selectcast hierarchy dynamic single router domain elected minimal maximum distance hosts domain 
bgp level dht routing hierarchy built tapestry levels 
greatly improves routing distance single level tapestry cost extra configuration 
selectcast sense generalization idea multiple levels multicast 
past cfs file services suggest notion virtual nodes problem storage heterogeneity 
basically host lots disk space poses multiple smaller nodes unfortunately highly correlated failure characteristics 
pps hash function assign identifiers nodes claim way nearby nodes id space diverse independent failures 
unfortunately applied objects replicated assumptions independence hold substantial number objects 
suggests technique find independent sets nodes 
techniques easily exploited selectcast astrolabe select failure independent routers contacts 
system aware heterogeneity network 
reasons may functional example order deal security requirements network address translation simply improve performance robustness 
order able adapt heterogeneity information available resources needs gathered 
astrolabe service provides functionality shown selectcast astrolabe order optimize runtime operation 
believe generalize applications 
banerjee bhattacharjee 
scalable application layer multicast 
proceedings acm sigcomm pittsburgh pa august 
castro druschel kermarrec rowstron 
scribe large scale decentralized application level multicast infrastructure 
ieee journal selected areas communications jsac 
chu rao zhang 
case system multicast 
proceedings acm sigmetrics pages santa clara ca june 
dabek kaashoek karger morris stoica 
wide area cooperative storage cfs 
sosp pages 
fasttrack 
www fasttrack nu 
francis ratnasamy govindan alaettinoglu 
yoid project 
www icir org yoid 
proc 
international workshop peer peer systems iptps cambridge ma march 
johansen johansen 
improving object search hints gossip supernodes 
srds 
ratnasamy handley karp shenker 
application level multicast content addressable networks 
proceedings ngc november 
ratnasamy shenker stoica 
routing algorithms dhts open questions 
iptps 
ritter 
gnutella scale 
really 
www com jpr doc gnutella html february 
rowstron druschel 
storage management caching past large scale persistent peer peer storage utility 
sosp pages 
saroiu gummadi gribble 
measurement study peer peer file sharing systems 
proc 
multimedia conferencing networking san jose ca january 
snoeren gifford 
mesh content routing xml 
sosp pages 
proc 
th acm symp 
operating systems principles sosp banff canada october 
proc 
st ieee symposium reliable distributed systems srds osaka japan october 
van renesse birman vogels 
scalable management data mining astrolabe 
iptps 
van 
collaborative networking uncooperative internet 
srds 
weatherspoon kubiatowicz 
introspective failure analysis avoiding correlated failures peer peer systems 
srds 
zhang jamin zhang 
host multicast framework delivering multicast users 
proc 
ieee infocom new york ny june 
zhao duan huang joseph kubiatowicz 
landmark routing overlay networks 
iptps 
zhuang zhao joseph katz kubiatowicz 
bayeux architecture scalable faulttolerant wide area data dissemination 
proceedings eleventh international workshop network operating system support digital audio video nossdav port jefferson ny june 
