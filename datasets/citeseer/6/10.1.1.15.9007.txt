topology discovery large ethernet networks bruce lowekamp computer science dept college william mary williamsburg va lowekamp cs wm edu david hallaron school computer science dept electrical computer engineering carnegie mellon university pittsburgh pa cs cmu edu thomas gross computer science dept eth zurich zurich switzerland trg inf ethz ch accurate network topology information important network management application performance prediction 
topology discovery research focused wide area networks examined topology ip router level ignoring need lan topology information 
demonstrated bridged ethernet topology determined standard snmp mibs algorithms require bridge learn bridges network 
approach ethernet topology discovery determine connection pair bridges share forwarding entries hosts 
minimal knowledge requirement significantly expands size network discovered 
implemented new algorithm accurately determined topology different networks variety hardware network configurations 
implementation requires access endpoint perform queries needed topology discovery 

network management performance analysis benefit network topology knowledge 
network managers responsible maintaining network inevitable mistakes actions people may leave true picture network topology 
access automatically derived topology network network managers better able react prevent problems 
observe exact location problem trace back source analyze network normal operations 
knowledge allows anticipate problems plan services impacted 
planning parallel applications topology knowledge allows effects link sharing application performance predicted advance nodes selected appropriate network connections match application needs 
bottlenecks lans generally severe wans reliance commodity components emergence grid computing increased need permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
sigcomm august san diego california usa 
copyright acm 
network aware applications determine network support available 
network topology information especially lan level important management networks difficult obtain information 
majority network management tools rely ip level discovery routers require network manager enter level devices ethernet switches manually providing facilities topology discovery 
cisco intel hardware providers designed proprietary topology discovery protocols little heterogeneous environment 
ietf acknowledged importance lan topology designating snmp mib describe topology failed define protocol obtaining topology 
software claims support automatic topology discovery proprietary technology access evaluate effectiveness variety network environments 
complexity performing ethernet topology discovery arises inherent transparency ethernet bridge hardware 
endpoints unaware presence bridges network 
bridges communicate neighbors limited exchanges spanning tree protocol environments 
state maintained bridges forwarding database direct incoming traffic appropriate destination port 
fortunately information sufficient topology discovery available standard snmp mib portable enable automatic topology discovery ethernet bridges 
bertsekas described algorithm performing topology discovery information available ethernet bridges 
algorithm obtains accuracy requires bridge forwarding entry bridges network 
bridges normally communicate obtaining complete information forwarding databases challenging process requirement difficult obtain sufficient information derive topology requires greater access machines network number bridges grows 
describe new algorithm perform automatic topology discovery requiring complete knowledge 
fact algorithm requires forwarding entries machines shared pair bridges machines appropriately placed 
approach derived topology ethernet networks nodes bridges machine send queries pings 
algorithm requirement complete formation determine topology large networks typically difficult obtain complete information 
describing related topology discovery 
section describes remos system topology discovery algorithm originally developed 
section describes direct approach completeness requirement applied networks shortcomings 
section describes new approach derives topology minimal knowledge forwarding databases 
section includes general discussion formal proofs theorem minimum knowledge requirement 
section describes details related implementing topology discovery algorithm 
section describes challenges implementing topology discovery algorithm real networks 
section describes results obtained implementation different networks 

related internet focus topology discovery 
forms bottleneck nearly wide area applications server selection placement generally internet topology discovery performance measurement interesting rewarding problem 
common technique determining wan topology benchmarks measure bandwidth topology 
topology early project measurements build minimal spanning tree view network 
current idmaps project rothermel build network distance maps flexible representation network topology 
projects studied best types benchmarks placement sites running benchmarks accurate topology determination 
lower level approach hop hop feedback provided tools traceroute 
mercator project explored technique group ip addresses network topology produce internet map 
modern routers longer respond traceroute packets achieved results modern internet 
skitter developed caida combine traceroute benchmark analysis 
octopus combined snmp routing information traceroute measurements heuristics determine network topology 
significant amount research studying importance topology task placement lans automatic determination lan topology wan topology 
number projects looked discovering topology ip routers interesting portions lan topology generally formed level devices projects unable address majority lan topology issues 
eco demonstrated benchmarks discover lan topology older shared ethernet networks techniques little value modern switched networks 
shao berman wolski focused benchmark measurements determine functional differences central server collection machines network refer effective network views 
experimenting different combinations machines technique groups machines clusters accuracy 
purposes parallel computing network management view network structure insufficient 
sample bridged ethernet network 
bridges 
hosts 
router 
port numbers bridges indicated respective links 
hub shown connected non snmp enabled switch shared segment 
remos topology discovery algorithm originally developed part remos system providing resource monitoring information network aware applications 
framework algorithm implement bridge collector responsible discovering topology ethernet lan 
topology snmp collector responsible monitoring network utilization determining routed level topology 
resulting network topology measurements available applications remos api 
remos provides different collectors wans lans simple predictors network utilization incorporates software host load prediction 

topology discovery direct connections goal design algorithm determines physical topology ethernet network connect set hosts 
accomplish goal chose derive network topology information obtained bridges snmp 
bridged network containing nodes divided set bridges endpoints shows sample network 
shown 
may contain hosts routers identical hosts purpose ethernet bridging algorithm 
modern ethernet networks generally built switches essentially bridges ports term interchangeably bridges 
bridged ethernet networks may include hubs serve connect machines port bridge shared ethernet shown connected shared segments shown connected dumb switches speak snmp shown connected bridges connect ethernet segments acyclic network 
cycles physical connections bridges ethernet spanning tree algorithm select acyclic subset connections 
topology selected bridges learn location machines network monitoring traffic ports 
new node sends message appears port bridge adds list nodes port 
bridge receives message bound node knows forward message port 
database maps addresses ports known forwarding database fdb 
bridge denote forwarding set port 
set changes new addresses learned old addresses expire machines physically moved part network connected different port 
said complete contains forwarding entry member port 
example complete 
step discovering network topology determining pair bridges connected 
nodes referred directly connected nodes 
particular packets bridge sends port received port bridge going device bridges directly connected ports respectively 
directly connected ports ports 
furthermore bridges simply connected ports find ports may nodes 
simply connected ports 
directly connected nodes simply connected ports 
high level algorithm begins determining entries fdbs ensuring complete 
selects single bridge determines bridges directly connected port 
ethernet topology filled traversal 
heart algorithm direct connection theorem determine bridges directly connected 
theorem direct connection theorem 
assume complete 
bridges directly connected link connected port port proof omitted 
interested readers referred breitbart proof similar theorem 
shared segments simple switched ethernet theorem sufficient networks direct connections connect nodes 
example shared segments commonly leaves networks hub attached shared segment attached typical uses shared segments cause problems theorem 
possible create shared segments internal topology bridged ethernet bridges topology 
interior shared segments cause problems generally occur situations 
hub connect bridges hosts bridges 
hubs participate bridging algorithm creates shared network segment bridges 
reality properly designed network contain hub real world guarantee networks properly designed 
encountered shared segment deliberately placed switches facilitate traffic monitoring external network connection 

bridge exists network program obtain forwarding database 
situation occur program informed bridge existence snmp access denied bridge 
snmp protection generally consists simple allowed denied list ip addresses situation easily occur fact occur number occasions development topology discovery system 
cases cause problems form networks direct connections bridges 
consider replaced hub snmp access unavailable case direct connection established theorem detects direct connections bridges connected shared segments new rule required 
develop rule port bridge address 
set bridges connected shared segment 
note 
endpoints attached shared segment 
entire shared segment denoted theorem shared segment theorem 
consists shared segment bridges forwarding databases complete 
words shared segment bridges find members shared segment port 
theorem defines shared segment verify set nodes forms shared segment 
proof assume members connected shared segment 
shared exists switch elements different ports definition shared segment 
formally applying completeness requirement 
contradicts original assumption 
bridges connected shared segment 
assume members connected shared segment containing definition shared segment bridges may elements different ports acyclicity requirement segment switched shared 
member members port 
stated formally bridges connected shared segment 
limitations direct connection theorem significant shortcoming direct connection theorem completeness requirement 
requiring entries nearly machines ethernet infeasible moderately sized network 
bridges connected network band ports participate main network second network administration especially helpful primary network 
bridges may participate topology network forming 
secondly generate entries forwarding databases machines involved topology generating traffic seen bridges network 
occur naturally difficult automatically accounts machine network 
network grows larger problem obtaining complete forwarding sets challenging 
large network hundreds thousands machines machines unresponsive time due hardware failure software failure rebooted problems associated maintaining large network 
capturing complete consistent picture real world dynamic network environment network grows 
situations sufficient traffic generated challenges 
bridges supply forwarding databases snmp interface appears direct link dynamic data structure bridges encountered 
data structure changed traversal ordering entries changed resulting duplicate entries received times skipping large portions fdb 
databases require attempts obtain entries addresses network 
direct connection approach usable appropriate modifications heuristic assumptions difficulties applying real world large ethernet networks motivated development new approach require complete information 
related algorithm described section closely related previously published breitbart lucent 
significant differences approaches worth discussing 
researchers lucent focused ethernet networks multiple ip subnets 
extending algorithm information available non standard vendor mibs algorithm handle topology discovery networks 
hand algorithms address problems shared segments appearing bridges experience academic research networks required support shared segments algorithm 
number practical challenges algorithm deal support ethernet lans cmu apparently problem networks lucent 
unusual network configurations encountered group lucent group generally correspond nonstandard aspects networks sought support 
significant difference approaches lucent group focused forwarding sets containing addresses bridges routers network approach uses addresses endpoints network 
tradeoff hosts harder obtain complete databases penalty missing single entry severe entries 
forwarding entries bridges reduces number entries needed complete sets experienced difficulties obtaining complete sets 
developed approaches improve completeness fdbs 
technique spoofed icmp echo packets force bridges communicate 
network approximately half bridges replied packets putting requested ip return address reply packet sending packet ethernet mac address machine originally sent mac belonging spoofed return address defeating purpose exercise 
experiments traffic creating endpoints 
lucent group second approach relax completeness requirement requiring user defined fraction entries forwarding databases called complete 
approach works situations majority entries small number entries missing machine 
lucent group techniques addressing completeness requirement resolved difficulties network sought develop algorithm avoids bridge port forwarding entries sets example bridges contradictions determine connections 
challenges obtaining complete information efficient incomplete information typically available bridges 

topology discovery incomplete knowledge difficulties associated obtaining complete forwarding databases entire ethernet lans decided pursue alternative approach topology discovery 
proceeding goal prove nodes directly connected consider approach proving bridge simply connected port denoted proof contradiction single counterexample needed demonstrate contradiction 
remainder word connection usually refer simple connection direct connection 
distinction necessary clear direct connection discussed 
shows example contradictions determine bridges connected 
motivating concept hypothesize bridges simply connected particular pair ports 
remember may nodes direct connection 
entries forwarding database consistent connection may exist 
entry inconsistent connection impossible 
considering connect bridges consider hypothetical examples valid invalid connections shown 
situation contradiction making connection bridges forwarding entry address ports connecting ports 
words claim machine different places network 
rule excludes second fourth examples bridges forward address opposite directions 
anytime directly conflicting forwarding entries connection may valid 
note third example node bridges rule establishes simple connection direct connection perfectly valid 
connection valid examples valid invalid connections bridges different forwarding entries bridge case forwarding entries examined see edges form valid simple connection 
note cases conflicts occur bridges map address opposite directions 
ports mapping conflict contradictions eliminate impossible connections bridges 
shows contradictions determine valid connection bridges 
possible connections bridges shown 
connections contradiction bridges forwarding address opposite directions 
valid connection left 
important observation application simple rule requirement complete knowledge 
requiring complete knowledge merely minimal requirement having information rule possible connection 
define prove minimum knowledge requirement 
example entries addresses meet minimum knowledge requirement 
may nodes network may entries nodes bridges long minimum information captured example correct connection determined 
simplify presentation algorithm introduce additional notation 
sets indicated contain addresses forwarded port words addresses ports bridge forward packets 
sets port sense complement denoted determining sets port simple apply information determine ports connect bridges 
see ports bridges connected calculate addresses common ports connected single node different directions ethernet required acyclic 
intersection empty connected 
simple iteration possible map bridge port appears bridge 
applying technique bridge allows complete topology network determined 
approach advantages algorithm direct connection theorem relying information port information ports combined mapping question 
especially helpful ports machines connected allows data aggregated requiring complete 
incomplete information tolerated easily 
shared segments naturally determined primary theorem relying special case resolve conflicts direct connection theorem fails 
approach offers positive rejection insufficient information available perform mapping error detectable distinguishable case mapping performed incomplete sufficient data 
rigorous presentation theorem simple connection theorem 
suppose exists exactly pair ports 
connected 
furthermore connected 
note connected imply pair words network consists bridges hosts labeled 
connection bridges determined insufficient information 
observe bridges placed position indistinguishable forwarding databases 
indeterminate solutions insufficient information 
see example 
proof assume connected 
partition network partitions partition partition containing partition containing partitioning 
connected 
assume pair connected 
belong connected ethernet connected pair ports 
true ports connecting bridges 
half proof 
contradicts assumption intersection empty pair ports 
contradiction connected pair requirement theorem intersection empty pair minimum knowledge requirement 
serves prevent trivial solutions exist forwarding databases insufficient information network topology structurally indeterminate 
consider network shown 
bridges arranged order knowledge give insufficient determine ordering forwarding entries hosts shown 
minimum knowledge requirement met pair bridges meet rule lemma minimum knowledge requirement 
ports connect bridges uniquely determined conditions met 
bridge entry address fdb including band ports 
bridge entry 
forwarding entries nodes shared divided ports ports bridge 
included ports 
formally 
proof condition trivial bridge entry fdbs entries directly indicate ports connect bridges contradiction generated wrong pair ports considered connection 
option available met 
second condition port uniquely determined port connected explicit fdb entry 
port uniquely determined entry shared port connection tried port entries cause contradiction examples required shared entries rule minimum knowledge requirement 
illustrates shared entry insufficient determine 
adds shared entry determines note equal 
illustrates shared entry needed determine determined 
note pointing different directions entry 
important condition required 
proving second half rule formally assume 
sets 
uniquely defined 
assume uniquely defined 
connected 
definition sets 
combined initial assumption 
definition sets 
contradicts assumption uniquely defined 
uniquely defined 
third fully general condition extension logic condition intersections unique determination ports third case requires members ports denoted condition sufficient uniquely determine see entry shared ports condition shared entry port required consider case entry shared port port entries shared port situation illustrated 
case connected port creating conflict 
connected port creating conflict forwarded connected port single shared entry uniquely define consider added requirement additional entry shared illustrated 
case connected connection valid 
port connection conflict created 
connected port create conflict forwarded opposite directions 
likewise conflict created connected port forwarded opposite directions 
port forwarding sets sets sets forwarding sets network graphs shown forwarding sets indicated 
network provide sufficient information meet minimum knowledge requirement 
network additional host meets requirement 
connected port conflicts 
see shared entries uniquely determine port connect determined port connected generating conflict 
uniquely determined determined rule condition 
illustrates rule 
shared entry forces port connected conflict creating mapping opposite directions 
consider example indeterminate network shown 
network unique solution mapping problem 
bridges share entries symmetric placed order 
network resolves 
adding second machine bridges shared bridges fdbs network uniquely determined 
second machine gives shared entries ports 
longer possible reorder bridges port left bridge connected right entries 
connection cause contradiction 
formal proof condition begins proving uniquely determines assume 
implies accordingly 
uniquely determined 
assume uniquely determined 
words 
consider cases set 
know 
combining 
common members contradicts initial assumption uniquely determined 
second case exists 
note network meets condition indeterminate 
example contradiction 
uniquely determined 
uniquely determined proof rule proves uniquely determined 
shown lemma represents minimum knowledge required theorem determine simple connection bridges network 
practicality question asked lemma realistic expectation bridged ethernet networks meet 
motivation pursuing technique easier satisfy minimum knowledge requirement require fdbs complete 
consider snapshots bridges shown 
imagine real position bridges bridge internal topology bridge positioned leaf bridge connecting bridge remainder ports connected endpoints 
host entry shared bridges 
mapping obviously indeterminate 
new node correspond querying node sending pings node probing fdbs 
reasons mapping indeterminate 
suppose node communicated host network instance nameserver 
node port upper bridge port forwarding set mapping determinate 
cases possible force machine contact nameserver connecting ftp daemon instance 
cases networks aren designed endpoint connected bridge 
reason purchase bridge case 
bridges ports connections machines 
bridge just ports connecting machines network satisfy lemma 
consider 
entries fdbs endpoints different ports bridge querying machine sending pings 
networks minimal examples single machine bridge talked snapshots bridges network demonstrate different examples indeterminate determinate fdbs 
dashed line physical connection algorithm attempting determine 
forwarding sets shown port 
give examples indeterminate networks 
determinate different reasons 
machine host server router bridge connected machines 
practically part ethernet meet criteria 
bridges generally installed network means machines divided ports components provide information minimal requirements 
specialization traversal important specialization lemma cases 
network topology determined traversal designated root mapping step resolves ports forming simple connections bridge root bridge 
sense step divides bridges sets set containing bridges ports root bridge 
identifies port child bridges forms simple connection root bridge 
point algorithm root port bridge fixed 
knowledge exploited algorithm 
fact able fix root port bridge satisfies half rule lemma 
reduces requirement subsequent mappings entry shared connecting port port child bridge 
specialization easy exploit 
root picked maximize chances meets minimum knowledge requirement 
complexity traversal bridge tested see hop traversal essentially trying find bridge directly connected port current root 
determining bridge hop easy performing mapping incorrect bridge indicate bridges root bridge bridges connected incorrect choice root port cause conflict bridge connected port root port indicating isn true topology 
summary minimum knowledge requirement easy satisfy 
bridge installed connect machine network meet requirement 
furthermore topology little information root port determined entry needed meet requirement 

implementation algorithm implemented remos bridge collector tested variety networks 
implementation begins set bridges network downloads entire fdb bridge 
actual topology derivation done traversal designated root bridge 
obtaining fdbs root bridge selected goal maximizing distribution nodes different ports 
core operation algorithm determining port root bridge connected 
simple connection theorem applied pair bridges determine port root connected port child bridge connected root child placed set connected port 
algorithm called recursively set bridges attached port root 
bridge directly connected previous root bridge mapping begins 
shared segments discussed section 
bridge topology derived endpoints network mapped location network 
information forwarding databases general endpoint location easily determined 
situations incomplete databases difficult determine endpoint exact location pinging endpoints located fdbs obtained earlier querying bridges information needed provided required information locate functioning endpoint 
virtual switches section described situations direct connection established bridges complete network 
principal challenge situations creation shared ethernet segment modern point point connections 
situations 
hub connect bridges hosts bridges 
hubs participate bridging algorithm creates shared network segment bridges 

bridge exists algorithm informed snmp access denied 
snmp security generally consists simple list allowed denied ip addresses situation easily occur 
direct connection theorem required special case handle possibilities 
simple connection theorem special case required 
theorem map bridges port connected finding direct connections 
course traversal step algorithm selects bridge tree 
ideal case hop bridges root port directly connected previous root 
virtual switch corresponding conditions inserted single bridge hop 
bridges map bridge host root ports causing conflicts indicate previous root choice incorrect 
determine bridges connected directly virtual switch children take intersection nodes bridge maps root port 
node appears set indicates bridge believes node root bridge 
way situation occur shared segment exist connects multiple nodes root bridge broadcast medium 
nodes appear intersection set side bridges connected shared segment traversal continued bridges connected shared segment resolve topology connecting remaining nodes 
elegance solution appealing aspects technique 
requiring special case virtual switches naturally determined base algorithm 
fact intersection set calculated algorithm searches bridge directly connected bridge nodes involved shared segment determined 

real world experience practical experience shown algorithms expected bridged ethernet bridges properly support bridge mib 
standards covers large percentage deployed networks number networks require somewhat modified approaches 
administrative access administrative complication primarily accessibility 
typically snmp access allowed machines local network usually impossible snmp queries network components isp network 
security privacy primary reasons 
security technical concern original designers snmp unable agree workable security protocol little security implementations minimal security level achieved restricting access local hosts 
isp generally concerned privacy wishing divulge information congestion levels services 
furthermore snmp queries expensive wants open network excessive load denial service attacks snmp 
remos combines network data benchmark data provide performance predictions environments direct network queries available portions network 
snmp compatibility rfcs describe behavior snmp implementations standards implementations resulted different manufacturers providing consistent interfaces 
instance forwarding databases ethernet bridges particularly troublesome 
allow queries forwarding port specific address 
implementations designed traversal requiring query reformulated query subsequent entry numerically preceding address 
furthermore bridges remove forwarding database queries rapidly apparently security measure 
additionally snmp implementations non compliant 
bridges failed correctly implement port interface table providing numbers incorrect 
patch easily applied bridge collector allowed table replaced configuration file discovering incompatibilities takes time thorough understanding interpret data mib 
theory somewhat trivial manage treated separate bridged ethernet 
remos framework connection addressed components bridge collector 
practice differences expressed snmp mibs topology discovery challenging bridge collector 
constructed cisco switches required number appended community name obtain forwarding information particular 
constructed switches result observable change mib bridge mib compared network constructed single ip network 
unclear switch report links network links running multiple ip subnets bridged ethernet raise issue addressing relationship physical logical topology 
remos currently address 
bridge collector determine topology single bridged ethernet multiple ip subnets ip subnets affect bridging protocol making information network management resource prediction purposes requires 
lucent group addressed challenging aspects problem 
hubs dumb switches ideally ethernet networks constructed desktop connected high switch connected backbone gigabit bandwidth 
reality financial constraints legacy hardware typically provide lower capacity network 
hubs shared segments frequently connect machines single switched port typically deployed office multiple desktops 
hubs shared segments manner problems topology discovery algorithm 
typically limited physical space office network management difficulties 
performance measurement perspective easily dealt virtue broadcast medium bridge port connected shared segment receives data transmitted segment provides simple measurement utilization 
dumb switches ethernet switches speak snmp different set problems 
similarly speak snmp ip address 
hubs form shared broadcast medium utilization measurement difficult closest snmp enabled switch sees traffic hosts rest network 
truly utilization measurements needed necessary measurement obtained hosts snmp enabled 
network management perspective dumb switches necessarily difficult hubs 
increasing availability cheap port dumb switches may result number hierarchical networks dumb switches presenting significant problems network management utilization measurement 
presence hub dumb switch intelligent switch snmp access obtained internal portion network snmp enabled switches may serious challenge 
fortunately single switch missed links successfully monitored 
adjacent switches missed absence significant 
general presence shared segment interior network regarded suspicion 
dynamic networks topology ethernet nearly regarded static machines rarely moved location 
size network grows bridge collector left running longer machines moving network accounted 
wireless networks wavelan dynamic topology updates essential mobile hosts may change location corresponding base station quite rapidly 
fortunately verifying location host simple checking leaf bridge verifying presence 
event node moves sending ping tracing new location minimal cost 
frequency nodes locations verified adjusted frequency nodes move accuracy desired 
logical extension identify mobile hosts verify location higher rate wired hosts 
rearrangement bridges somewhat harder detect requiring verification entries 
changes bridge topology expected extremely rarely slight added expense verifying location significant 
bridge added deleted moves topology discovery algorithm simply rerun 
movement host discovery phase bridges forwarding databases downloaded cause conflicts prevent topology discovered 
current approach simply rerun discovery phase conflict 
environment mobile nodes may necessary improve discovery phase verifying entries particular node bridges forwarding databases ensure node move discovery 

results topology discovery algorithm implemented tested variety networks 
largest network cmu cs department network contains hosts bridges 
tested departmental networks bbn eth zurich william mary testbed networks cmu william mary tdc labs part hiper project 
hardware implement networks included bridges cisco intel com 
testbeds different types technology testbed utilized atm lan emulation 
cases algorithm implementation able correctly determine topology ethernet lan 
correctness topology important criterion judging performance algorithm time performance may important applications 
majority execution time spent downloading fdbs bridges 
partially due slow speed snmp significantly due desire swamp bridges queries 
java implementations improved time determine topology large networks dropped significantly 
shows time required calculate topologies network varying numbers hosts bridges included 
topology bridged networks changes slowly performance quite acceptable 
furthermore detecting changes topology updating location endpoints may seconds number nodes time calculate topology seconds number bridges time calculate topology performance topology discovery algorithm running mhz pentium iii 
number hosts bridges varied removing entries hosts bridges previously collected data file 
move bridges done recomputing entire topology 
shows bridge topology discovered cmu cs department network 
topology verified extent possible correct departmental network manager 
actual record hosts attached network discovered errors placement machines verified 
practical considerations research demonstrated snmp supported current networking infrastructure sufficient obtaining information needed determine topology predict performance directly commonly networks today 
ideal interface purpose allows network approach performance prediction explored utilized existing networks 
demonstrating value approach real systems applications result development appropriate interfaces network components 
administrative technical considerations addressed provide better interface performance prediction purposes 
motivations lack standardization various bridge vendors support topology discovery 
cisco intel major bridge vendors support topology discovery incompatible proprietary techniques doing 
september ietf adopted physical topology mib standard mib 
encouraging devel es weh es weh cl es weh cl es weh cl es weh cl es weh cl es cl es fmr cle es es weh mra es hbh cl es weh cl es weh cle es dh cl es cle es weh cl es weh cl es weh cl es weh cl ges cl es weh cle ges hbh cl es weh cle es weh ges hbh cl es weh mra es weh mra ges weh mra ges dh cl ges cle ges weh ges weh cl ges weg cl ges weh cl ges weh cl ges weh cl ges weh mra ges weh cl ges cl ges cl es weh mra es weh mra es weh mra es weh cl topology cmu cs department primary bridged ethernet may 
endpoints located topology omitted clarity 
opment earlier components rfc specified protocol topology discovery removed rfc current rfc impose internet standard discovery protocol merely reserves portion mib space 
shortcomings automatic topology discovery soon portable standard commodity components 

described algorithm derive topology bridged ethernet network information available standard snmp mibs performing queries single machine 
primary contribution algorithms described ability perform accurate topology discovery knowledge endpoints previously knowledge entire network required bridges 
minimum knowledge requirement allows topology discovery performed large networks bridges 
combined challenges forcing bridges learn forwarding information bridges obtaining information bridges unreliable implementations bridge mib previously major impediment performing automatic discovery ethernet topology 
information obtained topology discovery useful network managers developers users parallel applications 
implementation algorithm currently easiest way network manager locate machines inappropriately moved network 
information obtained program step obtaining link level performance prediction scheduling applications distributed environments 
hope usefulness topology information encourage development true standard protocol topology discovery 
implementation available download part remos system available www cs cmu edu remos 
special nancy miller mark remos team help development software andrej bauer providing comments formal proofs 
shawn singh collected performance data 
effort sponsored part advanced research projects agency rome laboratory air force materiel command usaf agreement number 
government authorized reproduce distribute reprints governmental purposes notwithstanding copyright annotation thereon 
views contained authors interpreted necessarily representing official policies endorsements expressed implied advanced research projects agency rome laboratory government 

ahmad kwok wu 
analysis evaluation comparison algorithms scheduling task graphs parallel processors 
proceedings second international symposium parallel architectures algorithms networks pages june 
bierman jones 
physical topology mib 
rfc september 
breitbart garofalakis martin rastogi seshadri silberschatz 
topology discovery heterogeneous ip networks 
proceedings infocom march 
caida 
skitter 
www caida org tools measurement skitter 
crandall quinn 
partitioning advisory system networked data parallel processing 
concurrency practice experience august 
dinda hallaron 
evaluation linear models host load prediction 
proceedings th ieee international symposium high performance distributed computing hpdc august 
berman 
modeling effects contention performance heterogeneous applications 
proceedings fifth ieee international symposium high performance distributed computing hpdc pages syracuse ny august 
govindan tangmunarunkit 
heuristics internet map discovery 
ieee infocom tel aviv israel march 
jamin jin jin raz shavitt zhang 
placement internet instrumentation 
ieee infocom tel aviv israel march 
loh hsu 
network topology affects dynamic load balancing 
ieee parallel distributed technology pages fall 
lowekamp beguelin 
eco efficient collective operations communication heterogeneous networks 
proceedings th international parallel processing symposium ipps pages 
ieee april 
lowekamp miller sutherland gross steenkiste 
resource query interface network aware applications 
cluster computing 
lowekamp hallaron gross 
direct queries discovering network resource properties distributed environment 
proceedings th ieee international symposium high performance distributed computing hpdc pages 
ieee computer society august 
miller steenkiste 
collecting network status information network aware applications 
ieee infocom tel aviv israel march 
obraczka 
performance service network aware applications 
proceedings acm sigmetrics 
shao berman wolski 
effective network views promote distributed application performance 
proceedings international conference parallel distributed processing techniques applications pdpta 
sharma keshav 
discovering internet topology 
www cs cornell edu papers discovery pdf july 
rothermel 
dynamic distance maps internet 
ieee infocom tel aviv israel march 
