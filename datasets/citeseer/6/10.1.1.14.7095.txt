restriction extend parsing algorithms complex feature formalisms stuart shieber artificial intelligence center sri international center study language information stanford university grammar formalisms encoding grammatical information complex valued feature systems enjoy currency linguistics natural language processing research 
formalisms thought analogy context free grammars generalizing notion non terminal symbol finite domain atomic elements possibly infinite domain directed graph structures nf certain sort 
unfortunately moving infinite nonterminal domain standard methods parsing may longer applicable formalism 
typically prob lem manifests gross inefficiency ew icm alg rit hms 
discuss solution problem extending parsing algorithms formalisms possibly infinite nonterminal domains solution general technique call restriction 
particular example extension complete cor rect terminating extension earley algorithm uses restriction perform top filtering 
implementa tion algorithm demonstrates drastic elimination chart edges achieved technique 
fi describe uses technique including parsing grammar formalisms including definite clause grammars extending parsing algorithms including lr methods syntactic preference modeling algorithms anti efficient indexing 
research possible part gift sys terns development 
supported defense research projects agency naval electronics systems ckm mand 
views ms contained interpreted representative official expressed implied fen research projects agency united states govern mont author indebted fernando pereira ray perrault comments ea drafts 
grammar formalisms ba sed ical information complex valued systems enjoy currency linguistics natural language processing research 
formalisms thought analogy context free grammars generalizing tion symbol finite domain atomic elements possibly infinite domain directed graph structures certain sort 
tile sm fa bast grammatical formalisms explicitly pr ul linguistics characterized way 
xi functional grammar hr rlt ur 
grammar gpsg categorial systems tague grammar steedman grammar ill grammar formalisms natural language processing research definite clause grammar dcg patr ii 
unfortunately moving infinite de main standard methods parsing may ap formalism 
instance application techniques preprocessing gain efficiency may fail terminate left rner lr algorithms 
algorithms performing top dc wn prediction top backtrack parsing earley algorithm may terminate parse time 
implementing backtracking useful instance generating parses particular order say order syntactic preference general difficult lr style top backtrack techniques eliminated 
discuss ion pr ex tending parsing algorithms formalisms possibly nite nonterminal domains solution operation call restriction 
section summarize traditional proposals solutions problems inherent propose alternative approach solution tion 
section technical background including brief description patr ii formalism formalism interpreted pars ing algorithms formal definition restriction patr ii nonterminal domain 
section develop correct complete terminating extension earley algorithm patr ii formalism restriction notion 
readers technical details extensions may want skip sections refer ring section informal overview algorithms 
section discuss applications particular algorithm restriction technique general 
traditional solutions approach problems efficiently parsing formalisms potentially infinite nonterminal domains manifested different ways 
traditional solutions involved limiting way class grammars parsed 
limiting formalism limitations applied formalism stance adding context free backbone 
require context free implicit grammar parsing rest grammar az filter parsing 
solu tion recommended functional unification gram mars fi martin kay legacy seen context free skeleton lfg hewlett packard gpsg system cat feature requirement patr described 
problems solution man dating context free backbone 
move context free complex feature formalisms wan mo desire structure notion nonterminal 
analyses take advantage eliminating men tion major category information particular rules structuring major category say binary features plus bar level feature theo ries 
primacy atomicity major category defeats part purpose structured category systems 
sec critically cer tain ff information rule guide parse say major category information information filter spurious hypotheses top filtering 
note problem occurs filtering rule information eliminate earliest possible time constituents partial constituents proposed pars ing case patr ii implementation se 
instance coordination gpsg nested vp analysis patr ll grammars categorial analyse general roles com bination play role specific se roles 
earley algorithm cf 
xerox lfg system 
information subcategorization left category information context free skeleton eliminate prediction edges 
example find verb noun phrase grammar rules allow nps pps ss vps forth parser way eliminate build ing edges corresponding categories 
edges attempt join inconsistency 
similarly information filler gap depen kept extrinsic category information slash category gpsg lfg annotation concern ing matching constituent specification way keep hypothesizing gaps vertex 
gap proliferation problem plagued attempts building parsers grammar formalisms style 
fact making stringent requirements information guide parsing certain extent thrown baby 
formalisms intended free tyranny atomic nonterminal symbols performance forced analyses putting informa tion atomic category feature 
example phe seen author lr syntactic preference parsing 
lalr table building algorithm general terminate complex feature grammar formalisms grammar simple context free grammar subcategorization gap information placed atomic nonterminal sym bol 
limiting grammars parsers hand grammar formalism left un changed particular grammars dew happen problems parsing problem formalism 
solution mentioned placing information category symbol falls class 
unpublished kent robin cooper attempted solve gap pro problem special grammars 
building general tool grammar testing debug ging commit little possible particular grammar style grammar furthermore grammar designer held building analysis limitations algorithms 
solution requiring careful grammars inadequate 
specialized parsing alg designed information tr gram mar parsed eliminate spurious edges ses 
general parsing algorithm see thi matter 
limited formalism ford bresnan kaplan chose specialized algorithm working grammars full lfg formalism model syntactic preferences 
current hewlett packard parsing variants gpsg take line 
feel separation burden ate attack especially grammar development context 
coupling grammar design parser design problems way leads linguistic ical problems inherently mixed magnifying difficulty writing adequate grammar parser system 
alternative restriction parsing algorithm placed restraints grammars handle long expressed intended formalism 
algorithm take advantage part arbi large amount information complex feature structures significant guiding parsing particular grammar 
aforementioned solutions require grammar writer put signifi cant information special atomic symbol mandate context free backbone 
feature structure information method shall see leads nonterminating algorithms 
compromise parameterize parsing algorithm small amount grammar dependent information tells algorithm information feature structures significant guiding parse 
parameter determines split infinite nal domain finite set equivalence classes parsing 
doing optimal mise part feature structure significant distinguish equivalence classes setting pa rameter appropriately information parsing 
finite number equivalence parsing algorithms guided way terminate 
technique form equivalence classes re involves quotient domain respect 
serves sole repository grammar dependent information algorithm 
tuning set equivalence classes engendered changed making algorithm efficient guiding parse 
independent algorithm correct doing parsing finite domain nonterminals elements restricted domain 
idea applied solve problems en infinite nonterminal domains allowing cessing grammars required lr lc algorithms allowing top filtering prediction earley top backtrack parsing guaranteeing termination technical preliminaries discussing restriction parsing algorithms technical details including brief tion patr ii grammar formalism serve grammatical formalism algorithms interpret 
patr ii simple grammar formalism serve common denominator complex feature unification formalisms prevalent linguistics computational linguistics 
provides testbed describing algorithms complex feature formalisms 
patr ii nonterminal domain patr ii nonterminal domain lattice directed acyclic graph structures dags 
dags thought similar reentrant structures lfg functional structures fug bracketed notation associated formalisms 
example 
dag notation indicated boxes hl dags come varieties atomic dags example 
con plex dags viewed partial functions labels dag values notation denote value associated label dag spirit 
refer domain dag 
dag empty domain called empty dag variable 
path dag sequence label names notated 
pick particular subpart dag repeated application case 
dag hi 
extend notation obvious way include picked path occasionally square brackets dag function di expression denoting dag denote dag feature value subsumption unification natural lattice structure dags subsumption ordering cm lag rre pon compatibility relative specificity rmation reader referred earlier works detailed dis dag structures 
contained dags 
intuitively viewed dag subsumes dag notated contains subset formation general variables subsume dags atomic complex trivial case contain information 
complex dag subsumes complex dag de lf paths 
atomic dag subsumes subsumed different atomic dag 
instance subsumption relations hold field el el dags unification dags general dag lf notate 
examples illustrate notion unification tb lb cl cl unification dags defined 
unification exists said fail 
example pair dags fail unify fail restriction patr ii domain 
consider notion restriction dag term technical sense restricting domain function 
viewing dags partial functions la dag values envision process restricting function set labels 
extend ing process recursively level dag restriction 
finite ati called allowable domain node dag define functional yields dag restricted 
formally define restriction follows 
relation paths labels dag define specific dag lf path undefined atomic dom pol 
path restricted dag undefined atomic specifically allowed 
restriction process viewed putting dags equivalence classes equivalence class largest set dags restricted dag call canonical member 
follows definition general disallow infinite relations allow values infinite number distinct paths remainder discussion guaranteed finite number equivalence classes 
sequel particularly simple subclass sets paths 
set paths define poi prefix understood throwing away values lying paths 
subclass sut cient applications 
tile algorithms apply general class 
previous example consider gen erated set paths 
pool listed paths pre fixes 
previous dag restriction thrown away direct values 
note values paths thrown away 
patr ii grammar rules patr ll rules describe combine sequence con 

form constituent stating mu tual constraints dags associated tile con unifications various parts dags 
instance rule xo xt rat cat agreement agreement 
notational convention eliminate unifications special feature cat atomic major category feature recording information implicitly name constituent np vp np agreement vp agreement 
require notational convention doing guaranteeing constituent atomic major category associated mandated context free backbone grammar standard context free parsing algorithms parse sentences relative grammars formalism 
limiting context free patr ii solution previous implementations incorporated 
proceeding describe parsing context free patr ii purely notational change 
associating grammar rule set unifications associate dag incorporates unifications implicitly rule associated dug unifications form rule 

similarly unifications form atomic require rule mentioned dug cat xl agreement eat agreement rule thought ordered pair production form xi 
dug top level features xo atomic values eat feature top level 
notational conventions sets unifications dags putting eat feature information im names constituents allow write rules compact familiar format final cumbersome way presupposed algo rithm 
restriction extend ear ley algorithm patr ii develop concrete example restriction parsing extending earley algorithm parse gram mars patr formalism just 
overview algorithms earley algorithm ia bottom parsing algorithm uses top prediction hypothesize starting points possible constituents 
typically prediction step de categories constituent start point sentence 
information atomic category symbol prediction rela tively useless types constituents predicted involved completed parse 
standard earley algorithm section 
extending algorithm prediction step determines dags start point information features precise predictions eliminate hypotheses 

cause potentially infinite number feature structures prediction step may terminate 
extended earley algorithm section 
compromise having prediction step determine restricted dags start point 
re chosen appropriately constraining predicting basis feature structure prediction guaranteed terminate domain restricted feature structures finite 
final extension earley algorithm section 
parsing context free patr ii start earley algorithm context free patr ii algorithms 
algorithm described chart parsing incarnation vertices numbered word sentence tl wn 
item form designates edge chart vertex dotted rule dag chart initialized edge di rule cat vertex steps items added predictor step item form xo xj rule ff form xo cat xi cat add edge form edge subsumed edge 
informally involves predicting top left hand side matches constituent looked 
completer step item form item form 
xo yj add item ly eu ix unification succeeds edge subsumed edge 
note unification fail xo eat cat edge added subphrase appropriate category phrase built 
edge subsumes edge fit elements edges identical fourth element edge subsumes second edge 
informally involves forming nsw partial phrase category constituent needed partial phrase matches category completed phrase dug associated completed phrase unified appropriately 
scanner step items xo add item xo oa 
informally involves items partial phrases 
notice predictor step particular assumes availability eat feature top prediction 
con algorithm applies patr ii context free base 
removing context free base inadequate extension attempt extending algorithm just single atomic valued cat feature feature mandated change predictor step checking predicted rule left hand side matches cat feature predicting require left hand side unifies subphrase predicted 
formally predictor step item form ih 
xo xj di rule form xo 

add edge form ell xj ii unification succeeds edge subsumed edge 
step predicts top rules left hand side matches dag constituent looked 
completer step 
scanner step 

extension preserve termination 
grammar records dag numb terminals string 
problems occur natural language grammars keeping lists say constituents 
initially rule yield edge xo xt oo turn causes prediction step give xo xi yielding turn forth ad infinitum 
eat eat xt feat cat xo eat cat removing context free base adequate extension needed way forgetting structure top prediction 
just restriction gives restricted dag subsumes original 
strictly information 
advantage properly change ri step restrict top bef re unif rule dag 
predictor step item rm ih di rule form add edge form ft 
xi unification succeeds subsumed edge 
step predicts top flit rules ha side restricted lag ott ing looked 
completer step 
se er step 
algorithm previous grammar allows cat feature dag operates predicts time general edge xo cat iti cat round prediction yields edge process terminates immediately duck predicted edge general subsumes infinite edges replaced predicted nonterminating extension preserves completeness 
hand 
predicted edge general rule permits constituents violate constraints rule preserves correctness 
restriction finite range prediction step occur finite number times building edge identical built preserves ter 
applications examples gorithm alg just described rp rat patr ii exp syst sri lal 
gr tt ting fi li ll 
table gives data ive el feet parsing shows total active passive edges added hart sent eleven words different re 
allowed category information ist generating th eh wi un xte 
su tle illf lili lh ry hl gap tp pr lif pr wa ved 
lin tor ad lo rb form shows edges final tor 
prediction sentence eat gap form elim 
facts kept mind data 
sentences wh movement rel ative clauses gaps predicted 
words top filtering sense maximal re spect gap hypothesis 
second subcategorization formation top filtering removed hypotheses constituents directly 
grammar contained constructs cause nontermination unrestricted extension ear ley algorithm 
applications restriction technique restriction complex feature structures finite set equivalence cla ses wide variety purposes 

parsing mg tile mod ified grain nat tr ll 
particular definite clause grammars amenable technique anti extend earley tion pereira warren pereira similar technique improve bi bottom ft corner parser dcc 
psc parsers top 
tl ot ight mill th tl ll il 
llt ri 

rod 
rt ll ti ll ill 
ig ex le tilt ancillary ll sure 
ihe alg rithm du feature information fails terminate modified way ea rh re step significant feature inf lr parsing techniques par dn conll fe ture lmn 
ly 

lin yi hl hl fi mld fl cn iw lll tl restriction ill oth top prediction 
parsing schemes edges indexed categ ry sym bol retrieval 
case earley 
active edges indexed bv category dot dotted rule 
forces primacy atomicity major category formation 
restriction solve problem 
indexing restriction dag associated need efficient retrieval tuned particular grammar affect completeness correctness algorithm 
indexing done discrimination nets specialized hashing functions akin partial match retrieval techniques designed prolog implementations 
general technique restriction applications area manipulating complex feature grammar formalisms 
particular exam ple complete correct terminating exten sion earley algorithm uses restriction perform top filtering 
implementation demonstrates drastic elimination chart edges achieved technique 
described uses technique including parsing grammar formalisms cluding definite clause grammars extending parsing algorithms including lr methods syntactic preference modeling algorithms efficient indexing 
feel restriction technique great potential increasingly powerful grammar formalisms compu feasible 
steedman 
words 
linguistics philosophy 
ford bresnan kaplan 
competence theory syntactic closure 
bresnan editor mental representation grammatical relations mit press cambridge massachusetts 
king lamping paulson sag 
processing english generalized phrase structure grammar 
oth annual meet ing association computational linguistics pages university toronto 
toronto ontario canada june 
gazdar klein sag 
generalized phrase structure grammar 
blackwell publishing oxford england harvard university press cambridge 
kaplan bresnan 
lexical functional gram mar formal system grammatical representation 
bresnan editor mental representation grammatical relations mit press cambridge mas 
kay algorithm compiling parsing tables grammar 

xerox pale alto research center 
pale alto california 
matsumoto tanaka kawa 
ii 


bottom parser embed dad prolog 
new generation computing 
montague proper treatment quantification ordinary english 
thomason 
editor 
formal philosophy pages yale university press 
new haven connecticut 
pereira logic natural language anal 
technical note artificial intelligence center sri international menlo park california 
pereira shieber 
semantics grammar formalisms seen computer languages 
proceedings tenth international conference computational linguistics stanford university stan ford california july pereira warren 
parsing deduction 
annual meet inff association computational linguistics 
pages massachusetts institute technology 
cambridge massachusetts june 
shieber criteria designing computer facilities linguistic analysis 
appear linguistics 
shieber design computer language linguistic information 
proceedings tenth international conference computational ties stanford university stanford 
california 
july 
shieber sentence disambiguation shift reduce parsing technique 
annual martin association computational linguistics pages massachusetts institute technology cambridge massachusetts june 
shieber pereira robinson tyson 
formalism im plementation patr ii 
re earth interactive acquisition knowledge sri international 
park california 
wise 
indexing prol clauses superimposed code words encoded words 

international svm 
posture logic pages ieee computer society press atlantic city new jersey february 
