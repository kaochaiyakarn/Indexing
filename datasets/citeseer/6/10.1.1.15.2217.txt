estimating available bandwidth packet pair probing hu peter steenkiste september cmu cs school computer science carnegie mellon university pittsburgh pa packet pair mechanism shown reliable method measure bottleneck link bandwidth network path 
packet pairs measure available bandwidth mixed results 
study packet pairs packet trains estimate available bandwidth network path 
starting point study construct gap model simple model captures relationship competing traffic input output packet pair gap single hop network 
validate model measurements testbed 
gap model shows initial probing gap critical parameter packet pairs estimate available bandwidth 
insight propose new technique measure available bandwidth initial gap increasing igi algorithm experimentally determines best initial gap measuring available bandwidth 
experiments show measurements take round trip times allow estimate available bandwidth 
research sponsored part defense advanced research project agency contracts monitored afrl rome ny monitored rome laboratory air force materiel command usaf 
views contained document authors interpreted representing official policies expressed implied darpa government 
keywords network measurements available bandwidth packet pair probing characterizing network throughput users expect problem intellectually intriguing practical importance 
scale internet traffic volume diversity technologies challenging task 
furthermore regular internet users access network internals adding complexity understanding characterizing modeling performance internet 
problems characterizing latency bottleneck link capacity received lot attention path property probably interest applications throughput application expect path network 
focus measuring available bandwidth define difference link capacity competing traffic volume link limits throughput 
techniques estimating available bandwidth classified categories passive measurement active probing 
passive measurement tools trace history existing data transfers 
potentially efficient accurate scope limited network paths carried user traffic 
active probing hand explore entire network 
active probing techniques packet pair techniques proven successful 
basic idea sender injects pair packets network destination interest destination host sends echo packet 
measuring changes spacing packets sender estimate bandwidth properties network path 
packet pair mechanism shown reliable method measure bottleneck link capacity path network packet pairs measure available bandwidth mixed results 
define terms available bandwidth bottleneck link tight link precisely 
assume path includes links capacities traffic loads links define bottleneck link tight link unused bandwidth tight link available bandwidth path 
part assume tight link bottleneck link consider case different section 
note applications may able fully utilize available path bandwidth factors application tcp mis configuration 
limit throughput 
contributions 
develop gap model captures relationship competing traffic bottleneck link change gap packet pair probe single hop network 
gap model identify conditions changes packet pair gap accurately characterize competing traffic bottleneck link 
develop new packet pair technique called initial gap increasing igi algorithm characterize available bandwidth path network 
done experimentally determining input packet pair gap gives high correlation changes packet gap competing traffic bottleneck link 
evaluate igi algorithm simulations experiments 
organized follows 
sections introduce gap model single hop networks 
measurements controlled local testbed validate analysis 
igi algorithm introduced section evaluated section 
section study non bottleneck links affect gap 
discuss related 
related problem characterizing bottleneck link bandwidth active probing reasonably understood 
classifies tools single packet methods packet pair methods probing packets sent 
single packet methods measure link capacity measuring time difference round trip time link 
requires large numbers probing packets filter effect factors affect delay queueing delay 
tools technique include pathchar clink pchar 
idea packet pair techniques send groups back back packets packet pairs server back sender 
pointed earlier research tcp dynamics spacing packet pairs determined bottleneck link preserved higher bandwidth links 
example tools include probes packet pairs bprobe nettimer 
tools statistical methods estimate bandwidth assumption common value packet pair gap captures bottleneck link transmission delay 
practice interactions packet pair network traffic different links complex appropriate common packet pair gap value 
pathrate addresses problems explicitly analyzing multi model nature packet gap distribution 
characterizing available bandwidth difficult dynamic property 
means available bandwidth averaged reasonable time interval packet pair techniques packet trains longer sequences packets 
typical example active measurement tool available bandwidth pbm packet bunch mode 
extends packet pair technique different sized groups back back packets 
routers network implement fair queueing bandwidth indicated back back packet probes accurate estimate fair share bottleneck link bandwidth 
example cprobe sends short sequence echo packets hosts 
assuming fair queueing occurs short packet sequence cprobe provides estimate available bandwidth path hosts 
treno uses flow control congestion control algorithms similar tcp estimate available bandwidth 
mentions technique estimating available bandwidth asymptotic dispersion rate adr 
part related adr share view adr effect competing sources transmission path 
identify initial input probing packet gap critical parameter need dynamically determined probing 
pathload tool proposes characterize relationship probing speed available bandwidth measuring way delay probing packets 
trying different probing speeds reasonable estimate available bandwidth 
closest topp method 
method provides theoretical model relationship available bandwidth probing packet spacing points 
simulation results validate method 
methods analyze relationship probing trains available bandwidth analysis capture fine grain interactions probes competing bandwidth useful example understand limitations techniques 
gi bc router gb go interleaving competing traffic probing packets 
input gap probing packet length output link gap interleaving competing traffic competing traffic throughput 
single hop gap model idea packet pairs measure available bandwidth probing host send pair packets quick succession measure gap packets changes result traversing network 
packets travel network packets belonging competing traffic inserted increase gap 
result gap value destination host function competing traffic rate making possible estimate amount competing traffic 
unfortunately competing traffic affects gap packet pair complex description suggests 
remainder section describe evaluate simple model captures relationship gap value competing traffic throughput single hop network 
dqr bo bo single hop gap model 
output gap changes different ways region affected region proportional bc single hop gap model gap model models value output gap time bit bit leave router 
shows value function output queue size packet arrives router competing traffic time interval arrival packets 
gap value enter router call input gap 
note includes transmission delay input link 
transmission delay probing packet output link 
gap value back back probing packets bottleneck link call bottleneck gap 
note link capacity probing packet length fixed defined constant 
model assumes fifo queueing probing packets size 
assumes competing traffic constant arrival packets input value order msec reasonable assumption 
observe model regions 
show regions correspond cases packets fall queueing period 
queueing period defined time segment queue empty different queue periods separated period queue empty 
reason call regions disjoint queuing region dqr joint queuing region 
dqr region find empty queue directly result fact separate queueing periods assumption competing traffic constant period 
situation output gap input gap minus queueing delay experienced condition queue empty arrives 
happen router needs complete tasks arrives process queue process process competing traffic arrives probing packets 
router time complete operations condition operating region dqr triangular region labeled dqr 
region output gap depend competing traffic throughput conditions arrives router queue empty queueing period 
corresponds region output gap consists time segments time process time process competing traffic arrives probing packets 
region output gap region output gap function competing traffic throughput model directly points problem packet pairs estimating competing traffic rates 
packet pair happens operate dqr region bottleneck router output bear relationship competing traffic user equation user know region applies yield arbitrary result 
furthermore estimate competing traffic obtained single packet pair provide average transmission delay defined time packet placed link sender 
ps mbps mbps mbps mbps cs cd mbps testbed configuration single hop network experiment 
competing traffic short period 
competing traffic fluctuate want average results multiple samples corresponding independent packet pairs increases chance samples fall dqr region 
note apply packet train methods pairs packet train independent 
discuss section 
testbed experiment illustrate gap model ran experiments isolated testbed 
testbed topology shown 
ps pd probing source destination cs cd generate competing tcp traffic 
freebsd routers run tcpdump relevant interfaces record packet timestamp information 
send probing train consisting series evenly spaced packets consecutive pair packets train serve probing pair 
competing traffic generated iperf allows simulate typical user traffic ftp traffic 
control competing traffic throughput adjusting tcp window size useful illustrating features gap model 
effect capturing competing traffic experiment probing packets input gap set competing load mbps 
typical set experimental results shown top graph shows output gap measured bottom graph shows corresponding output gaps measured 
increase gap value router caused competing traffic bottleneck link 
increased gap values top graph fall clusters pd time transmit tcp competing packet mbps link probing pairs interleaved exactly competing packets 
fact packets inserted probing gap surprise input gap note input links times faster bottleneck link 
increased gap values decreased gaps 
transmission delay probing packet mbps bottleneck link 
bottom graph shows increased gap values maintained router higher output rate input rate 
large number order get large probing period sure cause packet drops affect competing flow throughput 
gap value gap value input gap output gap probing packet sequence number input gap output gap probing packet sequence number effect 
input output gap routers top bottom 
input output competing packets input output interface 
transmission delay competing packets input link transmission delay output link interval time packets finish transmission time second packets arrive 
observed changes gap values result burstiness competing traffic 
cases shown source cs sends packets back back period 
builds queue router queue drain period period competing traffic arrives 
packet pair overlaps period see increased gap corresponding competing packets 
packet pair falls period see gap reduced packet pairs straddle periods case gap values reduce values 
effect corresponds dqr region experiment common 
gap value input gap output gap probing packet sequence number effect dqr 
output gaps measured router 
effect dqr losing competing traffic change competing traffic setting source tcp window size destination tcp window size 
forces competing source send packet round trip time competing traffic low bandwidth cbr load 
results show increased gap values longer cluster small set discrete values 
output gap values take set values fairly evenly distributed msec 
explain show detailed snapshot starting time competing packets probing packets input output interfaces router 
lines show transmission delays packets nature competing traffic probing packets encounter empty short queue 
cases see gap increase delayed gap pair increases 
cases delayed region dqr pair 
delays experience correspond transmission time partial packet take value 
discussion single hop gap model experiments show challenges associated packet pairs estimate competing traffic bottleneck link 
degree measured gap destination reflects competing traffic load depends region bottleneck router operating 
news operating right region proportional relationship output gap competing traffic 
section relationship develop new method measuring competing traffic 
bad news time stamp recorded tcpdump time bit packet passes network interface segments right points raw trace data 
left points calculated packet length corresponding interface transmission rate 
small overlap packets possible probably due timing error tcpdump 
time stamp input interface time stamp ouput interface snapshot interleaving competing packets probing packets 
top trace input interfaces bottom output interface 
dqr region introduce errors important design bandwidth probing experiments avoid dqr region 
estimating available bandwidth introduce new method estimating competing traffic bottleneck link 
igi formula experiments section suggest way estimating competing throughput packet trains individual packet pairs 
note dqr effect small experiment correlation increased gap values amount competing traffic 
compute competing traffic throughput follows 
assume probing gaps increased values gaps unchanged represented gaps decrease denoted denote link capacity bottleneck link 
amount competing traffic arrive probing period 
result estimate competing bandwidth bottleneck link method computing competing traffic load igi algorithm section call igi formula 
formula denominator general length entire packet train 
case order packets 
order packet gap involving order packet valid excluded reducing denominator 
experiments section igi formula estimates competing traffic throughput mbps 
compares throughput mbps reported iperf 
igi formula works region 
apply igi formula experiments section obtain throughput mbps higher real throughput mbps 
methodology second part method control measurements region 
parameters control 
probing packet size 
experiments small probing packets sensitive interference 
points significant post bottleneck effects small probing packet size 
argues sending fairly large probing packets 

number probing packets 
known internet traffic bursty short snapshot tell average traffic load 
argues sending fairly large number probing packets 
note sending packets cause queue overflow packet loss increases network load 

initial probing gap 
single hop gap model shows increasing input gap increase dqr area output gap independent competing traffic 
fact dqr area exist 
argues small input gaps 
flooding bottleneck link may cause packet loss disrupt traffic 
experiments show results sensitive probing packet size packet number fairly large range values parameters 
example packet size packets train internet 
determine value initial probing gap difficult 
clarify trade offs imagine experiment send sequence packet trains increasing initial probing gaps 
small initial probing gaps smaller transmission time bottleneck link clearly flooding network measurements provide information available bandwidth 
initial probing gap reaches dqr region appears gap model 
note network idle flooding bottleneck link 
far average final output gap destination larger initial input gap 
continue increase initial probing gap point average probing rate packet train equal available bandwidth bottleneck link 
point final output gap equal initial input gap 
continue case continue increase initial probing gap packets average experience delay 
believe initial input gap value average final output gap equal initial input gap right value estimating available bandwidth 
smallest initial input gap value flooding bottleneck link expect get accurate measurements 
igi algorithm observation 
igi algorithm igi algorithm sends sequence packet trains increasing initial packet gap 
monitor difference average output gap input gap train train equal 
point called turning point 
point igi formula compute competing bandwidth 
available bandwidth obtained subtracting estimated competing traffic bandwidth estimate bottleneck link bandwidth 
pseudo code algorithm listed call initial gap increasing igi algorithm 
algorithm bottleneck bandwidth measured example bprobe nettimer pathrate 
note errors bottleneck link capacity measurement affect accuracy available bandwidth estimate 
see example section 
key step igi algorithm automatic selection turning point 
procedure gap equal 
tests source gap equals destination gap equality defined experiments set 
experiment analysis implemented versions igi tool accommodate different network hosts access kernel version hosts change operating system user level version run host 
kernel version sends raw tcp packets probing packets timestamp measured kernel help libpcap 
user level version uses udp packets probing packets timestamp time probing application destination host receives udp packets 
kernel version higher accuracy user level version get accurate timestamps 
specifically mentioned measurements carried kernel version 
testbed experiment experiments section study behavior igi algorithm 
testbed topology 
algorithm igi equal gap send probing packets gaps get dst gaps get increased igi algorithm 
send probing packets sends probing packets size input gap get dst gaps gets destination gap values adds get increased gaps returns summary gaps larger bottleneck gap denote competing traffic bandwidth bottleneck link capacity available bandwidth 
shows probing results iperf udp competing flow mbps 
shows average gap difference averaged destination gap minus averaged source gap competing traffic throughput computed igi formula 
turning point initial input gap value estimated competing traffic throughput mbps matches real value quite 
competing traffic consists www traffic generated surge configured client processes user equivalent threads 
input gap turning point estimated competing traffic throughput igi formula mbps close measured value mbps 
scenarios figures repeated experiments changing configuration competing traffic generation results shown 
iperf cbr udp competing traffic igi works cases measurement error standard deviation small 
exception appears competing traffic load mbps error partly due probing packet loss 
measurement accuracy surge competing traffic 
believe reason surge competing traffic bursty instantaneous competing traffic throughput measured surge different competing traffic loads created changing number client threads 
thread counts experiments 
average gap difference gap difference competing traffic initial gap igi testbed experiment iperf 
probing number probing packet competing traffic throughput mbps 
arrows point measurements turning point 
average gap difference gap difference competing traffic initial gap igi testbed experiment surge 
probing number probing packet competing traffic throughput mbps 
arrows point measurements turning point 
igi match long term average throughput reported surge 
internet experiments section study performance igi internet traffic 
internet path give detailed analysis igi performance 
results day long experiment internet paths different characteristics 
set internet experiments carried linux machine cmu competing traffic bsp competing traffic bsp competing throughput mbps competing throughput mbps real competing throughput measured competing throughput sequence experiment cbr udp traffic real competing throughput measured competing throughput sequence experiment surge traffic igi measurement accuracy testbed 
igi measurements different competing traffic loads 
competing traffic top cbr udp traffic generated iperf bottom shows results competing traffic generated surge 
connected mbps ethernet home machine columbus ohio uses cable modem test shows capacity mbps 
networks connected regular internet 
hours january continuously sent probing trains different initial input gaps average values 
input gap different probing packet sizes probing train includes probing packets 
experiment sleeps seconds consecutive probing trains 
shows typical set results 
top graph shows average gap difference different packet sizes 
probing packets clear turning points marked arrows corresponding computed competing traffic throughput bottom graph similar mbps mbps give available bandwidths mbps mbps 
probing packets differences input output gaps small 
estimated competing load igi method higher probes 
problem probably caused measurement errors small probing packet sizes turning point gap small hard measure accurately 
probing packets turning point high estimated competing traffic mbps lower obtained probing packets 
think result fact larger probing packet size corresponds aggressive flow grabs network bandwidth 
average gap difference competing throughput bps initial gap initial gap internet experiment cmu ohio 
experiments input gap values axis probing train includes probing packets 
src dst path capacity rtt nwu cmu mbps ms cmu mbps ms slc cmu mbps ms table internet paths internet measurements paths different characteristics path information shown table 
user level implementation igi root privileges remote test machines 
accuracy user level sensitive host load experiments carried machines idle 
cmu side destination output gaps measured destination host 
probing packet size fixed 
shows hour trace competing traffic throughput measured igi nwu northwest university cmu 
shows clear correlation time day amount competing traffic 
agrees known day time network traffic day time traffic higher night traffic lowest traffic appears early morning 
occasionally measured available bandwidth directly seconds mbps udp flow nwu cmu day time 
measured throughput mbps agrees measurement 
udp flow measure available bandwidth continuously competing throughput bps time sun apr cdt mon apr cdt nwu cmu 
day long trace competing throughput measurements 
high load places network 
competing bandwidth bps time sun apr cst mon apr cst cmu 
day long trace competing throughput measurements 
igi estimates competing traffic bottleneck link national tung university taiwan cmu 
measurements show bottleneck link capacity path mbps sampling udp stream showed available bandwidth mbps validate results 
data nwu cmu competing traffic show clear changes match day time versus night time pattern 
think due time difference hours taiwan hard say time considered day time 
competing bandwidth bps time thu apr gmt fri apr gmt slc cmu 
day long trace competing throughput measurement 
shows similar results experiments slc host salt lake city ut cmu 
measurements accurate see outliers mbps course impossible mbps bottleneck link capacity 
analysis error cases shows caused bad estimates bottleneck link capacity 
cdf cdf cdf cdf running time probing count cdf cdf bottleneck bandwidth bps competing bandwidth bps effect probing packet number nwu cmu path 
running time probing count cdf cdf bottleneck bandwidth bps competing bandwidth bps effect probing packet number cmu path 
probing time number probing packets section answer question relevant application long take get reasonable bandwidth estimate 
extra network overhead probing cdf cdf running time probing count cdf cdf bottleneck bandwidth bps competing bandwidth bps effect probing packet number slc cmu path 
introduce 
words total probing time number packets sent 
note cost igi algorithm depends length packet trains number phases needed converge best input gap size turning point path 
minimize number probing phases optimized source gap adjustment algorithm 
idea reduce number probing phases carefully selecting values igi algorithm 
bottleneck link capacity help doing probing small possible 
set optimized algorithm experiment 
second question length packet train mentioned section packets works 
experimentally evaluate reduce number affecting accuracy significantly 
quantify effect parameters ran set experiments different parameter configurations 
available bandwidth internet paths typically fairly stable ran experiments hour intervals 
internet paths table measurements carried user level tool 
results paths figures 
graphs cumulative distribution probing time left top number probing phases left bottom measured bottleneck bandwidth right top measured competing bandwidth right bottom 
graph curves corresponding results packet trains different lengths 
graphs show need phases converge final input gap value translates probing time round trip times 
probing probing packets nwu cmu cmu paths probing packet number higher achieve fairly stable results paths 
see cases probing finish phases competing traffic measurement cluster range smaller bottleneck link capacity 
note packet train length needed different paths 
need short trains slc cmu paths longer trains cmu path 
analysis output gap distributions shows reason burstiness traffic competing traffic cmu path slc cmu path 
multi hop networks sections evaluated igi method estimating available network bandwidth path 
method gap model section 
gap model simple single hop network model account factors may affect igi method practice 
briefly look factors 
non bottleneck link effects igi method assumes bottleneck link changes gap 
practice upstream downstream routers affect gap introducing errors 
example downstream routers may interleave packet pairs competing traffic increasing gap 
introducing measurement error may exacerbate effect dqr region 

thick bottleneck link method implicitly assumes bottleneck link tight link link smallest residual bandwidth network path 
practice may true 

accuracy different traffic conditions model show accuracy igi method affected traffic conditions 
understanding relationship important may allow example tune parameters better 
complex questions research needed resolve satisfactory way 
section step understanding effects 
introduce simple multi hop gap model 
controlled experiment simulation quantify effect factors listed 
multi hop gap model simplify single hop gap model model shown 
probing packet pair passes router gaps increased probability average weight output gap stay probability remaining gaps decreased probability average output gap weight 
consider router network shown 
final output gap cascaded effect routers 
combined effect routers result cases output gap values measured shown table 
note input gap increased final gap shown increase input gap may reflect effect dqr know similarly probing gap increased decreased final gap router pa pb pc wa pa wa pb pc pa wa pb pc wc wc wc simplified single hop gap model 
gap pair probing packets increased unchanged decreased 
simplified gap model routers 
final value probing packet gap cascade effect routers change 
gap values table cases gap value passing routers 
indicate effect increase decrease router gap 
assume bottleneck link 
notations show see appendix heavy competing traffic outgoing link router increase average output gap 
news light competing traffic outgoing link change average output gap may explain igi gives results 
mbps mbps mbps mbps mbps ps pd mbps mbps mbps testbed configuration multi hop experiment 
ps pd probing source destination source destination nodes competing traffic bottleneck link nodes create competing traffic 
testbed experiment section worst case scenario explore non bottleneck routers affect accuracy igi method 
experimental setup shown 
link bottleneck link 
carries competing flow consisting iperf stream source destination tcp window sizes set kb resulting competing traffic flow kbps 
flow link source destination tcp window sizes set kb kb resulting higher competing throughput non bottleneck link mbps 
analysis previous section challenging case 
competing flows stable sent probing packets input gap probing packet size 
destination host pd get probing gap measurements 
tcpdump results show gaps increased gaps result flow increased gaps measured destination 
measurements competing traffic throughput igi formula mbps mbps pd reason big error light competing traffic bottleneck link increases relatively gap values increases caused big impact 
competing traffic heavier impact smaller 
example change competing traffic mbps mbps respectively measured competing traffic throughput mbps mbps pd worthwhile explore accuracy low low competing traffic 
reasons 
light competing traffic increases small number probing gaps timing measurement error significant 
second reason specific testbed setup 
stream probing packets pc testbed router delays processing tcp ack packets slows source competing tcp flow 
result probing packets interleaved expected fewer probing gaps increased 
realistic setting parallel tcp flows problem occur 
short time intervals cross traffic busy internet link viewed udp traffic 
reason primarily udp flows competing traffic testbed experiments 
mbps mbps mbps mbps mbps ps pd mbps mbps mbps simulation configuration 
ps pd hosts probing competing traffic generation 
numbers links denote link capacity 
competing traffic flow traffic want measure 
competing flow competing traffic non bottleneck link 
simulation non bottleneck effects due difficulty setting different scenarios testbed implemented igi algorithm ns 
result sequence experiments topology shown 
changing values link capacities competing loads move tight link bottleneck link path 
set router queue buffer size big packet loss occurred simulation 
results competing traffic consisting cbr udp flow 
ran simulations tcp competing traffic obtained similar results measured competing throughput bps competing throughput mbps accurate measurement competing traffic 
set mbps mbps mbps 
set simulations set mbps mbps mbps 
competing load set mbps change competing load range mbps 
shows igi accurately measures competing load bottleneck link results affected traffic links 
confirms earlier experimental results 
measured comp 
bw bps competing throughput mbps big error competing traffic measurement 
set mbps mbps mbps 
difference needed probing packets capture competing traffic 
set mbps mbps mbps 
set mbps changes mbps 
procedure tight link changes graph shows igi measurement competing traffic increases monotonically 
result obtained assuming mbps tight link incorrect mbps range measurement predict available bandwidth result fairly accurate encouraging 
currently explain result gap model 
measured competing throughput bps competing throughput pre bottleneck link mbps pre bottleneck link significantly change measurement 
set mbps mbps mbps 
explore effectiveness igi reorder bottleneck tight link 
network topology set mbps mbps mbps force bottleneck link 
bandwidth competing flow changes mbps competing bandwidth bottleneck link set mbps 
data graph shows traffic pre bottleneck link impact final measurements long traffic volume mbps 
traffic volume increases mbps link tight link see igi estimates increase competing traffic bandwidth 
competing traffic measured igi accurate estimate competing traffic tight link 
subtract estimated competing traffic bottleneck link capacity get accurate estimate available bandwidth network path 
discuss problem estimating available bandwidth measurements competing traffic packet pair probing 
idea measure increases gap value assumption increases gap value reflect amount competing traffic tight link 
developed single hop gap model help understand relationship router queue size competing traffic throughput input gap output gap 
model clearly shows important role input gap plays measuring competing traffic 
contrast bottleneck link capacity measurements available bandwidth measurements input gap dynamically tuned reach point packet pair gap values correctly reflect available bandwidth 
extend analysis deal multi hop networks provides insights non bottleneck links may introduce measurements errors 
learned gap model introduce new measurement method called initial gap increase igi algorithm 
igi uses sequence packet trains identify average input probing gap average output gap equal average input probing gap 
point called turning point measurement errors minimal accurately estimate amount competing traffic bottleneck router 
simulation testbed experiments internet experiments study properties performance models igi algorithm 
experiment igi algorithm completes probing phases competing traffic measurement cluster range smaller bottleneck link capacity 
point areas 
practical tools account problems multiple channel links bottleneck link changes 
tight link bottleneck link ambiguity igi algorithm measures 
expect cases bottleneck link tight link access link isp research needed fine tune igi cases 
libpcap 
ftp ftp ee lbl gov libpcap tar ns 
www isi edu nsnam ns 
paul barford 
modeling measurement performance world wide web transactions 
phd thesis december 
jean bolot 
loss behavior internet 
proc 
acm sigcomm san francisco ca september 
robert carter mark crovella 
dynamic server selection bandwidth probing wide area networks 
technical report boston university computer science department march 
robert carter mark crovella 
measuring bottleneck link speed packet switched networks 
technical report boston university computer science department march 
james curtis tony mcgregor 
review bandwidth estimation techniques 
proceedings new zealand computer science research students conference volume university canterbury new zealand april 
dovrolis ramanathan david moore 
packet dispersion techniques measure 
proc 
acm infocom anchorage alaska usa april 
allen downey 
clink tool estimating internet link characteristics 
rocky wellesley edu downey clink 
van jacobson 
congestion avoidance control 
proc 
acm sigcomm august 
van jacobson 
pathchar tool infer characteristics internet paths 
april msri talk 
jain dovrolis 
pathload measurement tool available bandwidth 
passive active measurements fort collins march 
srinivasan keshav 
packet pair flow control 
ieee acm transactions networking february 
kevin lai mary baker 
nettimer tool measuring bottleneck link bandwidth 
proceedings usenix symposium internet technologies systems march 
bruce mah 
pchar tool measuring internet path characteristics 
www employees org software pchar 
matthew mathis jamshid mahdavi 
diagnosing internet congestion transport layer performance tool 
proc 
inet montreal canada june 
steven mccanne van jacobson 
bsd packet filter new architecture user level packet capture 
usenix winter pages 
bob mats 
new probing analysis method estimating bandwidth bottlenecks 
ieee globecom global internet symposium san francisco november 
vern paxson 
measurements analysis internet dynamics 
phd thesis berkeley may 
srinivasan seshan stemm randy katz 
spand shared passive network performance discovery 
proc st usenix symposium internet technologies systems usits monterey ca december 
mark stemm srinivasan seshan randy katz 
network measurement architecture adaptive applications 
proceedings ieee infocom monterey ca march 
jim ferguson 
iperf 
dast nlanr net projects iperf 
appendix impact multiple hops gap claim heavy competing traffic increase output gap light competing traffic change output gap 
see section table probing gaps pass average gap value bottleneck router assume competing traffic heavy probing gaps increased decreased equation written probing gaps pass average gap formula simplified competing traffic heavy assume difference average gap light assume increase average output gap 
hand competing traffic difference average output gap average output gap change average output gap 

