keystone group key management service chung kei wong hrl laboratories llc canyon rd ca simon lam department computer sciences university texas austin austin tx major problem area securing group communications group key management 
design architecture scalable group key management system called keystone 
keystone uses novel key graph technique scalable group key management 
keystone authentication client identity offloaded registrars improve performance 
efficient reliable key updates keystone uses udp ip multicast delivery forward error correction fec reduce message loss provides efficient resynchronization mechanism clients reliably update keys case actual message loss 
prototype keystone implemented performance results reported 
emerging network applications teleconference information dissemination services group communications model 
result securing group communications critical networking issue 
internet research task force irtf formed secure multicast research group investigate problem securing group communications 
major problem area group key management concerned secure distribution refreshment keying material 
group key management system establishes maintains group keys groups clients 
group key may encryption key signing key security association ipsec describe design architecture scalable group research performed university texas austin part doctoral dissertation chung kei wong 
research sponsored part nsa university research program 
mda national science foundation 
ani 
proceedings international conference telecommunications acapulco mexico may 
key management system called keystone uses novel key graph technique scalable group key management 
section illustrate key graph technique simple example 
section describe architecture operations keystone 
section discuss efficiently reliably update keys keystone 
section 
key graph assume trusted secure key server re group access control key manage ment key server uses key graphs group key management 
key graph directed acyclic graph types nodes nodes representing members nodes representing keys 
member key directed path node node key graph 
consider group members 
assume key server uses key tree special key graph group 
group member keys kg 
key called individual key shared key server 
key group key shared member auxiliary key shared 
assume key server changes group key af ter join leave 
leave key server changes group key auxiliary key ks ks 
distribute new keys remaining members group oriented rekeying strategy key server constructs rekey message multicasts members denotes key encrypted key remaining members update keys decrypting appropriate keys rekey message 
key server may distributed replicated en reliability performance 
kl nodes kl kl nodes joins leaves leaves joins leaves joins key trees leave join 
similarly join group members key server constructs rekey message multicasts members key graph technique scalable large dynamic groups key server average com putation communication costs join leave crease linearly logarithm group size 
keystone architecture keystone ation client application application data data keystone architecture 
key server exercise access control deny request identities clients authenticated 
key server may authenticate client authentication protocol ssl generate share client individual key protect communications 
process associating client identity individual key called client registration 
client registration authentication protocol ssl computationally expensive pentium ii linux ultra solaris server server bit bit bit bit bit client bit client table server processing time ms ssl connection 
key server bottleneck client registration rate high initial group setup 
table shows server processing time authenticate client ssl publicly available implementation ssl 
client server certificates bit bit rsa mutually authenticate certificates signed directly certificate authority ca bit rsa key 
ssl connection established rsa key exchange triple des cbc mode encryption sha digest algorithm 
solve problem keystone uses registrars client registration key server 
machines running registrars added removed dynamically 
different registrars may different authentication services different sets clients time 
shows typical configuration keystone 
client control managers client registrars key server 
control manager client responsible client control functions sending requests processing rekey messages 
client data processor part keystone 
data processor uses group keys control manager perform application data functions encryption decryption signing verification 
registrar key server registrar may combined physical entity key server embedded registrar 
balance client mean client control manager stated 
authenticates identities clients distributes authenticated client individual key client key server 
key server processes requests clients changes keys distributes new keys clients rekey messages 
currently keystone deliver rekey messages clients unicast multicast see section 
operations keystone described detail 
concrete descriptions assume ssl entities mutually authenticate establish secure communication channel 
authentication protocols 
registrar setup key server initialized registrars setup handle client registration 
registrar tcp connection key server mutually establish secure communication channel tcp channel ssl 
key server generates secret key ks sends secret key client list registrar secure channel 
secure channel terminated 
tcp channel kept connected 
shows registrar setup process 
notation represent mutual authentication establishment secure channel notation denote sending message secure channel 
rs registrar key ks client list registrar setup 
secret key ks called registrar key encrypt decrypt communications registrar key server tcp channel 
client list contains identities id numbers clients contain access control information 
client registration cr rc idc kc client registration 
new client register registrar client tcp connection registrar mutually authenticate establish secure communication channel tcp connec tion ssl 
registrar generates client individual key kc sends client individual key id number secure channel 
registrar encrypts client individual key id number registrar key ks sends key server 
secure chan nel tcp connection client registrar terminated 
shows client registration process 
notation denote sending message reliable channel 
request reply having registered client may send requests key server client new tcp connection key server existing tcp connection 
client encrypts request individual key sends encrypted request key server tcp channel 
request may contain operations group multiple groups 
types operations join leave re synchronize 
request may join leave operations re synchronize operations 
client uses resynchronize operations get keys currently joined groups losing rekey messages see section 
request ack ind rekey request reply 
decrypting processing request key server encrypts reply client individual key sends encrypted reply client tcp channel 
reply consists acknowledgment individual rekey message 
acknowledgment contains result granted denied operation requested information 
individual rekey message consists keys added deleted updated request ing client 
see 
tcp chan nel terminated key server tcp channel send rekey messages client see section tcp channel kept connected key server send rekey messages communications client key server protected modification replay attack mac sequence number 
number original units table message loss probability pm 
number original units rs rs table number repair units repair schemes rsl rs 
client 
note key server constructs sends rekey messages clients 
key updates changing keys key graph key server distributes new keys clients rekey messages 
reliable key updates key server may reliable delivery mechanism tcp reliable multicast protocol send rekey messages clients 
keystone tcp deliver rekey messages keeping tcp connection current member 
approach clearly scalable large groups 
hand efficient reliable multicast protocols available large scale 
provide efficient reliable key updates keystone uses udp ip multicast efficient rekey message delivery forward error correction fec technique message loss reduction 
keystone provides efficient re synchronization mechanism clients reliably update keys case actual rekey message loss 
fec udp ip multicast key server efficiently send rekey message large number clients udp ip multicast 
udp unreliable may packet losses 
rekey message larger maximum transmission unit mtu ip fragmentation occurs message broken ip packets 
increases message loss probability receiver needs get ip packets order reconstruct message 
reduce message loss probability keystone uses forward error correction fec technique 
rekey message partitioned octet units 
number repair units called parity units computed original units 
unit sent udp ip multicast 
number repair units function number original units function called repair scheme 
receiver re construct rekey message original repair units rekey message lost 
assume udp packet losses independent probability receiver udp packets mbone 
message loss probability pm receiver equation 
pm pi table shows pm repair scheme different values 
repair packet larger rekey message partitioned units message loss probability increases 
probability pm decreases increases repair units 
bound message loss probability computing number repair units needed pm equation 
notations rs rs denote repair schemes pm respec tively 
see table 
table shows average server processing time join leave request different repair schemes ultra machine 
implementation uses path mtus large octets ip host machine required receive octet ip datagram 
table probability denoted probability zero 
software erasure coder rizzo generate re pair units 
measured average server processing time group oriented rekeying des cbc encryption md message digest bit rsa digital signature 
rekey message signing time ms observe group size upto fec increases processing time ms total processing time 
words fec substantially decreases message loss probability slight increase processing time 
group size rs rs table average server processing time ms join leave request 
re synchronization fec provide reliability rekey messages may lost 
straight forward way deal lost rekey messages client request lost rekey messages re transmitted 
approach inefficient especially number lost rekey messages large long loss burst lasts seconds minutes 
key server repair entity needs store rekey messages 
second recovered rekey messages contain old auxiliary keys longer needed client 
message retransmission keystone provides efficient re synchronization mechanism clients reliably update keys case message loss 
client detected rekey message losses sends re synchronize request key server 
receiving re synchronize request key server encrypts current group auxiliary keys possibly previous group keys needed requested group client individual key sends encrypted keys back client 
expensive digital signature needed server processing time resynchronize request ms ms ultra group size des cbc encryption 
designed implemented group key management system called keystone consists components client control manager registrar key server 
expensive client registration process offloaded key server registrars 
client registration rate increased machines run registrars 
different registrars provide different authentication services different sets clients time 
key server distribute new keys large group clients udp ip multicast efficient reliable loss probability mbone 
decrease message loss probability keystone uses forward error correction fec 
fec substantially reduces orders magnitude loss probability rekey messages slightly increase server processing time 
keystone provides efficient re synchronization mechanism clients reliably update keys case actual message loss 
sally floyd van jacobson ching gung liu steven mccanne lixia zhang 
reliable multicast framework light weight sessions application level framing 
proceedings acm sigcomm 
alan freier philip paul kocher 
ssl protocol version 
progress netscape communications november 
hugh holbrook sandeep singhal david cheriton 
log receiver reliable mul distributed interactive simulation 
pro ceedings acm sigcomm 
internet research task force irtf 
secure multicast research group 
www corn community 
ernst biersack don towsley 
parity loss recovery reliable multicast transmission 
proceedings cm sigcomm 
sanjoy paul john lin bhattacharyya 
reliable multicast transport protocol rmtp 
ieee journal selected areas communications april 
luigi rizzo 
effective erasure codes reli able computer communication protocols 
computer communication review april 
chung kei wong mohamed gouda simon lam 
secure group communications key graphs 
proceedings acm sigcomm vancouver september 
maya yajnik jim kurose don towsley 
packet loss correlation mbone multicast network 
ieee global internet conference 
