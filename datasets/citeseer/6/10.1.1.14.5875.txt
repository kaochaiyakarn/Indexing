stable solutions dynamic constraint satisfaction problems richard wallace eugene freuder university new hampshire durham nh 
important extension constraint technology involves problems undergo changes may invalidate current solution 
previous dynamic problems sought methods efficiently finding new solutions 
take proactive approach exploring methods finding solutions remain valid changes temporarily alter set valid assignments stable solutions 
examine strategies tracking changes problem incorporating information guide search solutions stable 
search carried min conflicts hill climbing procedure information change bias value selection distorting objective function imposing criteria selection 
study methods track value losses constraint additions incorporate information relative frequency change search 
experiments show methods generally effective finding stable solutions cases handle tradeoff solution stability search efficiency quite 
addition identify condition methods markedly reduce effort find stable solution 
constraint satisfaction problems csps involve assigning values variables order satisfy constraints subsets variables 
dynamic constraint satisfaction problems csps change intermittently time loss gain values variables constraints 
change may current solution invalid value lost number acceptable tuples constraint reduced new constraint added 
potentially important distinction temporary permanent changes problem 
earlier research oriented case :10.1.1.54.4384
dcsp construed sequence csps solved may reflected assumption changes permanent 
sequential model proposed assumption explicitly 
situations current conditions machine breakdown employee absence preclude certain possibilities may verlag supported national science foundation 
iri 
realized conditions longer hold 
research emphasize case temporary change introduce methods specifically suited 
call problems recurrent distinguish changes permanent 
problem alterations temporary changes may occur repeatedly different changes may occur different frequencies 
case possible go corrective strategies studied earlier proactive strategies 
re solving problem solution lost avoid losing solution place 
way extra search undesirable aspects solution failure downtime frustration 
done find solutions stable face change remain valid altered problem 
criteria evaluating performance suggested earlier carried efficiency finding new solution ii solution similarity consistency finding new solution shares values possible old :10.1.1.54.4384
add third criterion iii solution stability face problem alteration 
term stability criterion ii :10.1.1.54.4384
similarity transparent term feature appropriate stability third criterion 
earlier mentions proactive methods dynamic csps probabilistic model constraint inclusion 
critical differences specific context model intended situation treated discussed 
section describes methods find stable solutions 
section describes experimental testbed basic methods testing strategies finding stable solutions 
section gives basic results empirical tests stability methods value loss constraint addition 
section gives results pertaining number stable solutions available rate information gain 
section gives 
methods finding stable solutions hill climbing recurrent considering changes problem unpredictable occur search solution replace lost original change 
circumstances heuristic repair techniques natural choice general 
methods problem alteration search incorporated gracefully 
unassigned variable may need relabeled resulting assignment may conflicts 
hill climbing proceed usual trying find better assignment heuristic repair adjustments points alteration may possible obtain new solution minimum revision 
complete methods face daunting problems situation value partial assignment lost partial solution retracted back point change proceeding ii values added deleted algorithm start certain finding existing solution pointed clancey 
conditions chief deficiency hill climbing determine solution optimal may overshadowed difficulty finding solution 
procedure min conflicts augmented random walk strategy random assignment certain probability variable conflict regardless new assignment better worse previous 
gets min conflicts local minima augmented procedure effective finding global minima random csps 
successive variable choose value minimizes conflicts previous values chosen repeat 
randomly select variable conflicts 
probability choose value random domain probability gamma find min conflicts values domain choose value random min conflicts set 
assign cutoff time reached complete solution fig 

basic hill climbing procedure min conflicts augmented random walk feature 
equals 
methods collecting information relevant stability described section require local search procedures 
suited approach indicated 
strategies finding stable solutions having chosen search procedure consider extend purpose finding stable solutions 
extension necessarily involves steps collecting information change incorporating information search process elaborations procedure 
collecting information change recurrent properties ffl values tuples may lost constraints added temporarily 
ffl differences likelihood change different elements type 
ffl differences known priori 
basic goal avoid choosing values assignment solution invalid 
accomplish specified conditions collect information changes occur decide value assign variable subsequent search 
data collection proceed ways track changes directly recording values lost ii track solution loss resulting problem change relate values participate solutions varying stability 
examine methods tracking change 
ways straightforward intuitive strategies resulting distributed information change mesh local search 
alternative includes bayesian methods discussed 
changes consider value losses constraint additions 
simplest collection strategy flag element changes 
case discriminate elements subject different rates change 
better method tally number changes element type time 
sophisticated measures envisaged time constraint value unavailable number steps required find new solution change occurred 
stick counting changes 
fact simply counting number times element changes strategy worth examining detail 
counts related relative frequencies parent probabilities accordance bernoulli theorem 
differences rates failure considered probabilistically simple counts may best representation differences 
means purposes function counts improve identity function 
hand don wish probabilistic interpretation tallies 
essential feature provide total ordering elements type elements compared basis 
clear section need information hill climbing search 
way limit assumptions required information 
specify information combined free variety ways guide search stable solutions 
tradeoffs approach versus allows combine local information define global concepts goodness subject 
incorporating information search consider case value loss counts type penalties directly related elements considered decision making min conflicts procedure 
context evaluate methods incorporating penalties local search 
method point compare conflicts values domain add penalty value current conflicts 
call penalty adding probability gamma find values domain minimum conflicts scaled penalty choose value random biased min conflicts set penalty selection probability gamma find min conflicts values domain repeat select remove value random min conflicts set penalty cutoff values penalty cutoff choose assignment assign value chosen random original min conflicts set fig 

adjustments min conflicts procedure incorporate information value loss penalties 
penalty adding 
min conflicts set biased value conflicts 
certainly bias search heavily favor stable values penalties tallies original form conflicts diminishing influence eventually undermine hill climbing 
ameliorate problem original penalties scaled commensurate range conflicts 
rescaled current range largest penalty range degree variable currently considered repair 
second method termed penalty selection set min conflicts values usual 
value chosen random set chosen assignment penalty criterion cutoff 
process repeated acceptable value values tested case revert usual selection procedure 
tests described cutoff selection current average penalty 
method retain efficiency original hill climbing procedure 
time evident method better finding stable solutions 
cases selection cutoff method random walk 
procedure decides choose value random values chosen successively random remaining untested subdomain meets selection criterion 
value walk gives 
constraint penalties tallies constraint addition incorporated hill climbing checking value selection avoid values violate potential constraints high penalties 
case value chosen min conflicts set tested potential constraints part current problem 
constraints violated violated constraints penalties cutoff value value ac selection constraint penalties probability gamma find min conflicts values domain repeat select remove value random min conflicts set potential constraint currently value incompatible value constraint constraint penalty cutoff reject value exit loop rejected values rejected choose assignment assign value chosen random original min conflicts set fig 

adjustments min conflicts procedure incorporate information constraint additions 

value chosen 
acceptable value random selection min conflicts set 
corresponding procedure selection walk condition 
penalties accrue different elements hill climbing may constrained point difficult find complete solution 
interesting important problem requires study 
relaxed selection criterion bit time hill climbing solution seconds 
experimental described high rarely necessary employ feature needed ensure hill climbing find solution 
evaluating penalty strategies testbed evaluation examine effectiveness strategies described section experimentally tested procedures simulated recurrent dcsp 
simulation occurs steps ffl setup phase probability change assigned element ffl runtime phase succession changes occurs combination repeated periods search setup phase turns csp recurrent dcsp guided information user 
date tiered distribution probabilities user supplied values value representing expected fixed proportion elements associated events value loss constraint addition ii iii values higher lower probabilities change 
element domain value non fixed constraint number generated pseudo random generator value element assigned high probability number ii assigned low probability number iii 
constraint additions user supplies value expected proportion constraints original problem fixed 
runtime phase changes periodically scanning entire set relevant elements element deciding change respect original problem 
entire scan called occasion change 
domain value decision deleted non fixed constraint decision added 
done solution solution format changes occur time hill climbing finds new solution ii fixed time format changes occur fixed intervals regardless state search 
cases occasion change altered problem accepted complete solution 
changes may repeatedly procedure just described criterion met 
allows stopping points hill climbing experimental evaluation straightforward 
hill climbing procedure course knows underlying probabilities associated problem elements 
simply tries find solution current problem 
addition penalty condition specified see uses current counts number changes element described section avoid assigning values violating constraints higher penalties 
overview experiments date tiered scheme represent small proportion elements lost added avoided case domain values satisfied case constraints enhance stability 
remaining elements small non zero probability change 
fully stable solutions 
addition solution solution format 
experiments problem tested twice hill climbing penalty information incorporated search 
order testing random 
problems design insures higher degree experimental control design sets problems 
tests coloring problems connection scheduling resource allocation 
cases random csps tested 
observed differences results types problem restrict account 
performance measured terms quality solutions obtained hill climbing penalty non penalty conditions efficiency finding solution 
experiments value loss simplest quality measure number high probability bad values solution 
global measure solution stability ratio solutions occasions change 
low values measure indicate solutions remained valid occasions stability relative high 
statistics measures solutions 
efficiency measured total search time entire run occasions change 
setup times run connection new set changes excluded 
testbed hill climbing procedures coded common lisp 
experiments run dec alpha dec lx compiled code 
experimental tests penalty strategies experiment tests value loss set tests changes limited value loss 
experiment sided purpose assess strategies combining local failure information hill climbing ii see effects techniques detectable bad values chosen regard problem structure 
conditions impossible improve solution quality case cases bad values may part solution impossible replace easily replaced ordinary hill climbing 
positive result mean methods generality application 
experimentation easier set carefully contrived situations see effects 
methods random color problems variables tests 
presence complete solutions guaranteed repeatedly generating problems complete solution 
density constraint graph terms edges added spanning tree constant experiment 
mentioned density edge critical complexity region 
tests problems generated testing 
higher value deletion probability lower value 
gave large difference likelihood loss high low probability values making extreme low values rarely deleted 
probability domain value associated higher deletion probability expected number bad values 
runtime phase occasions change value deletion penalty non penalty conditions 
penalty condition tallies kept domain value number times deleted subsequent hill climbing described section 
time deletion deleted values compared current instantiation associated variables assignment losses noted 
losses deleted values returned domains deletion occasion began immediately 
assignment lost deletion occasion hill climbing 
separate tests penalty adding penalty selection 
addition solution reuse restart condition tested penalty strategy 
reuse condition assignment lost hill climbing started remaining assignments 
lost assignments replaced valid values min conflicts criterion conflicts hill climbing continued look better solution 
restart condition assignment loss hill climbing began preprocessing variable ordering 
condition included evaluate solution reuse se 
lower constraint graph densities penalty discounting occurred seconds hill climbing density occurred seconds 
penalty addition effective penalty halved time 
penalty selection random walk strategy cutoff originally average penalty value doubled 
results values penalized deletion penalty strategies guided hill climbing solutions appreciably fewer bad values 
noted means entire run time penalties increasing zero 
indicated attempt select bad values replaced conversely formed part solution 
intentional indifference conditions success suggests strategies useful practice comparable problems distributions failure 
penalty penalty hi prob values solution reuse restart reuse restart density reuse restart reuse restart density add select add select add select density reuse restart reuse restart fig 

number bad high probability deletion values solution 
columns means test means problem 
column pair separate experiment tandem runs penalty non penalty conditions 
solution reuse restart penalty adding penalty selection conditions described text 
adding penalties number conflicts somewhat effective avoiding high probability values selecting true min conflicts basis penalties 
penalty adding costly terms run time problems density search faster non penalty condition problems incorporating penalties slowed hill climbing appreciably 
contrast penalty selection strategy consistent differences penalty conditions problems occasional large differences run time favored penalty condition control 
tests penalty strategies effected small decrease mean value ratio solutions deletion occasions measure solution stability 
noted large difference expected high probability deletion values chosen random 
addition experiments assignments lost deletion low probability values assignment included third possible values 
subsidiary tests carried way experiment showed increasing decreasing led larger reductions ratio solutions deletion occasions individual problems larger differences run time 
sel add penalty penalty sel add sel add sel add sel add sel add runtime problem deletions means medians fig 

mean median run times problem strategy control 
tests solution reuse procedure 
note log scale ordinate 
average similarity successive solutions run high experiments solution reuse identical penalty conditions problem density regardless particular strategy 
density solution similarity cases density density 
comparison restarting assignment loss solution reuse successful avoiding bad values solutions 
average similarity successive solutions lower restart successively higher densities strategies hill climbing began initial assignment variable value ordering 
experiment tests constraint addition methods random color problems variables density 
attempt insure original problem solutions density 
test problems generated 
setting probability fixed constraints 
non fixed constraints probability constraint associated higher probability addition 
sets low probability values 
conditions crossed give tests 
combinations probability values give expected constraint graph densities 
runtime phase occasions change constraint addition penalty non penalty conditions 
occasion non fixed constraints considered addition probabilities 
experiment existing solution remained valid procedure occasion began immediately done variable assignment invalid point hill climbing 
penalty condition tallies kept constraint number times added problem 
time constraints solution reuse condition tested 
penalty discounting carried penalty selection procedure lost values time interval seconds 
measure solution quality ratio solutions occasions change 
results probability combinations penalties improved general measure solution quality 
average degree improvement somewhat better value deletion problems comparable density 
tests mean run time times greater penalty conditions 
solution similarity high penalty non penalty conditions average differing case 
solutions changes ratio probability constraint having high addition high low addition probabilities penalty penalty fig 

ratio solutions occasions change various probabilities constraint addition means test means 
discussion experiments strategies tracking changes frequency tallies improve stability 
experiments show improvements occur frequently respect techniques may generality application 
course tests need types problems 
value loss penalty selection strategy incorporating information search handled tradeoff solution quality stability efficiency 
particular difficult problems density essential difference summary measure 
unfortunately constraint addition type strategy incur sizeable cost improving solution stability set problems 
effects cost value loss number bad values higher 
experience greater range problems conditions necessary better determine efficiency markedly impaired 
experiment showed penalty information solution reuse marked effect stability reflected comparisons restart condition 
expected efficient 
preliminary analysis suggests aspects procedure improve solution stability 
avoidance tabu effect holds restart dcsp procedure 
time value unavailable purposes finding solution 
high probability deletion values tabu list reduces likelihood showing successive solutions 
effect evaluated running variation restart condition lost values put back search resumed 
conditions problems density number bad values solution increased 
second factor conservation stable values reuse procedure 
example consider simple situation high low probability value assigned variable 
probability values experiment transition probabilities deletion occasions low high low high obviously system low probability value assigned tend stable assignment 
values form part complete assignments low probability values assumptions stability slightly greater 
experiment instances high probability values character transition matrices average transitions value probabilities 
variables low probability assignments probability loss deletion 
state probability shifting high probability value gamma 
simple model take account transitions due hill climbing shows ceteris paribus solution reuse result fair degree solution stability 
experiments tracking change finding stable solutions solution cover high experiments show techniques tracking change effect general albeit modest improvement solution stability 
important question situations improvement substantial 
possibility amenable experimentation case small proportion solutions relatively stable 
special strategies finding solutions hill climbing may encounter 
independent variable called cover solution set set deletion values 
purposes experimentation simplify situation setting zero coverage defined proportion solutions include value subject deletion 
methods experiments previous section experiments tandem runs penalty non penalty procedures identical problems deletion conditions 
differences high probabilityof deletion values values non zero probability deletion fixed deletion set ii run ended fully stable solution assignments deletion set 
historical reasons tests date run penalty adding strategy 
coloring problems variables colors generated tested experiment 
problems density maximum number solutions 
specifications solutions counted repeatedly generating deletion sets specified degrees cover 
double run deletion set size chosen random coverage calculated procedure repeated coverage specified range 
hill climbing carried set experiments 
solution value deletion set selected random deleted domain associated variable 
current solution invalid deletion hill climbing continued new solution 
value deleted replaced value selected set 
forth solution include values deletion set 
ranges coverage tested 
problems generated test 
coverage cases deletion set giving degree coverage tries 
result statistics problems case 
measure quality stability experiment number complete solutions finding fully stable solution 
solutions solutions means penalty penalty cover cover cover cover cover cover fig 

number solutions finding fully stable 
medians left graph means right graph penalty non penalty conditions function degree cover deletion set 
note log scale ordinate graph right 
results discussion results show average penalties allows hill climbing find stable solution efficiently fewer solutions need finding completely stable 
effect fairly wide range cover 
high coverage considerable divergence penalty non penalty conditions mean number solutions finding stable 
difference largely due cases hill climbing penalties large number solutions 
cases formed minority means rare tests ratio solutions non penalty penalty conditions respectively 
indicates penalty function effective just cases posed greatest problems hill climbing 
effects carried run times condition differences medians means favor hill climbing penalties 
tests efficiency information collection priori information relative rates change elements important know number changes required intelligent decisions stability 
particular necessary penalties converge basic rates probabilities change useful 
addition basic likelihood loss changing may want information know little information need track changes conditions 
information questions obtained empirically procedure experiment penalties incremented deletion occasions 
occasions occasions penalties remained constant 

experiments done penalty selection solution reuse problems density tested value penalties deletion occasions results experiment penalties accrued sets deletions 
average number bad values solution basic hill climbing procedure penalties 
penalties deletion sets corresponding averages sets 
conclude tracking value loss efficient way gather information finding stable solutions 
effective assumptions convergence underlying probabilities clearly violated 
tests sets deletions expected penalty high probability value expected number low probability values penalties 
high low probability values penalties equal wrong direction probabilities differ factor 
despite poor quality estimates case penalties served bias local search direction stable solutions 
introduce concept solution stability csps consider important application recurrent 
addition describe set methods successful finding stable solutions cases dealing tradeoff solution quality search efficiency 
identified new concepts solution cover considered basic issues efficiency gaining information change 
issues raised include complete vs incomplete search recurrent tracking solution loss vs problem change optimization respect solution stability 

bessi ere 
arc consistency dynamic constraint satisfaction problems 
proceedings aaai pp 


dechter dechter 
belief maintenance dynamic constraint networks 
proceedings aaai pp 


drummond bresina swanson 
just case scheduling 
proceedings aaai pp 


fargier lang 
uncertainty constraint satisfaction problems probabilistic approach 
clarke kruse moral editors symbolic quantitative approaches reasoning uncertainty ecsqaru lncs vol 
pp 

springer verlag berlin 

hays 
statistics social sciences nd edit 
holt rinehart winston new york ny 

verfaillie schiex 
solution reuse dynamic constraint satisfaction problems 
proceedings aaai pp 


wallace 
analysis heuristic methods partial constraint satisfaction problems 
freuder editor principles practice constraint programming cp lncs vol 
pp 

springer berlin 

wallace freuder 
stable solutions dynamic constraint satisfaction problems 
cp workshop theory practice dynamic constraint satisfaction pp 

article processed macro package llncs style 
