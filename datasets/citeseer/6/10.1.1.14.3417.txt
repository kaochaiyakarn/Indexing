unsupervised temporal rule mining genetic programming specialized hardware rule mining practice discovering interesting unexpected rules large data sets 
depending exact problem formulation may complicated problem 
existing methods typically strong simplifying assumptions form rules limit measure rule quality simple properties confidence 
confidence indicator interesting rule user mined rules typically sorted secondary interestingness measure 
rule mining method genetic programming 
specialized pattern matching hardware evaluate rule method supports wide range rule formats reasonable fitness measure 
develop fitness measure suited method give empirical results applying method synthetic real world data sets 
index terms data mining rule discovery time series genetic programming pattern matching hardware 
temporal sequence data ubiquitous fields lately increase interest methods extract useful information large sequence databases 
specific problem rule mining extracting interesting unexpected regularities rules data 
rule mining problem consists finding patterns satisfy certain criteria sequence database 
patterns rules may form encounter element encounter element time units antecedent consequent 
quality rules may measured frequently occur support predictive power confidence measures interesting described numerically called interestingness measures 
general approach taken authors example scan sequential data count occurrence legal rule occurrences legal antecedent consequent :10.1.1.40.9892
counting possible calculate frequencies confidences rule 
approach limits format rules 
moderately complex rule formats task counting occurrences unfeasible 
existing methods employed gt 
trondheim norway email com fax 
magnus lie department computer information science norwegian university science technology sem lands vei trondheim norway email idi ntnu 
magnus lie focused finding rules frequent high confidence subsequently sorted resulting rules interestingness measure meant measure true quality rule :10.1.1.42.3240
approach taken method aid specialized pattern matching hardware find sequential rules genetic programming 
task simple sequence learning prediction 
show general interestingness measures fitness functions method mine unknown rules relatively high quality 
related previous attempts solving problem mining predictive rules time series loosely partitioned types 
type supervised methods rule target known input mining algorithm 
typically specific events possibly extrinsic time series 
goal generate rules predicting events data available event occurred 
papers fall category 
form evolutionary computation uses genetic programming genetic algorithms 
second type unsupervised methods input rule mining algorithm time series 
goal automatically extract informative rules series 
cases means rules level preciseness representative data easy interpret interesting novel surprising useful human expert 
approach take 
existing attempts tackle problem rely scanning data counting occurrence legal antecedent consequent example :10.1.1.40.9892
rules ranked measure interestingness 
approach place limitations rule format order task counting occurrences feasible 
focused specific mining problems detecting unusual movements finding unusual temporal patterns market basket data 
approaches try tackle core problem directly mining interesting rules 
done defining formal interestingness measure genetic programming search rule space interesting rules 
methods interestingness measure directly mining process postprocessing ranking function 
allows flexible rule format existing method 
structure rest structured follows section ii describes preprocessing scheme discretize time series data experiments section iii describes genetic programming evolve temporal rules section iv describes detail rules evaluated section describes experiments empirical results section vi summarizes concludes 
ii 
preprocessing rule mining strategy works discrete sequences symbols 
transform time series data empirical application symbolic sequence simple method places 
extracts windows width window real valued feature calculated 
feature may example average value signal noise ratio 
experiments slope line fitted data points window linear regression 
feature sequence constructed copy sorted divided approximately equal sized intervals 
interval assigned integer limits intervals classify values original feature sequence 
procedure guaranteed symbols integers easily map characters alphabet approximately frequency 
experiments require training sets validation sets early stopping model selection test sets 
discretization process uses information classifying single point directly validation testing sets 
normal procedure training set limits classifying features validation testing sets 
note allowing windows overlap classifying positions avoid unneeded data reduction introduce spurious correlations adjacent symbols 
time series windows overlap positions quite similar feature values means assigned symbol 
deal problem described section iv 
discretization method means unique 
method described uses slope signal noise ratio segments series 
usable methods discretization include simplify time series indexing purposes 
see survey 
iii 
evolving rules evolutionary computation strategy genetic programming described 
algorithm uses subtree swapping crossover tree generating mutation reproduction genetic operators 
individuals chosen participation new generations tournament selection 
individual population program tree representing expression formal language 
experiments languages representing format rules wish discover 
expressions chosen rule languages may evaluated specialized pattern matching hardware described section iv rule fitness calculated searching time series data rule occurrences 
rule languages basic rule format simple known antecedent consequent time units 
simplest form antecedent consequent single symbols discretized alphabet constant :10.1.1.42.3240
results rule language form extensions simple language possible investigated sequential patterns :10.1.1.40.9892:10.1.1.40.9892
xn occur window width occurs time units 
xi symbols regular expressions episode rules sequence 
xn window width occurs time units 
xi 
symbol set symbols legal match symbol rules simple form regular expressions example antecedent episode rule written added requirement maximum length string matched note rule languages share basic format 
differs antecedent defined language generate antecedent 
general rules type described parameters antecedent language la consequent language lc maximum temporal distance previously investigated rule languages distinction la lc la varies complexity lc usually single character limitation noted la lc 
rule representation mining algorithm works genetic programming search space possible rules defined la lc specifically individual population syntax tree language la lc 
implemented separate branches branch la lc antecedent consequent branches internal nodes parse tree syntactical nodes necessary representing expressions corresponding languages 
example considered language regular expressions syntactical nodes needed union concatenation kleene notable exception defines rule language la lc sequences characters separated wildcards episode rules parallel episodes 
closure 
leaf nodes branches symbols antecedent consequent alphabets 
maximum distance branch defines maximum distance rule 
branch constructed arithmetic functions typically internal nodes random integer constants leaf nodes 
final distance computing result arithmetic expression rt residue rt modulo 
confidence support interestingness rule ra rc rule language la lc discretized sequence 
frequency ra antecedent number occurrences ra formalized ra ra ra hit predicate true ra occurs position false 
relative frequency ra simply ra length support rule defined ra rc ra rc number matches ra followed match rc time units 
confidence rule defined ra rc ra existing methods candidate rules high confidence support selected 
approach usually generates lot rules may particularly interesting 
aid investigating rules interestingness measures developed see survey 
measures may instance sort rules descending order interest 
measure interestingness proved robust identifying surprising rules measure 
defined ra ra ra log ra rt ra log ra ra probability ra true random location probability rc true index randomly chosen window width ra probability rc true index randomly chosen window width ra true position immediately chosen window 
measure combines bias frequently occurring rules term ra degree surprise going prior probability posterior probability ra second term known cross entropy 
alternative measure piatetsky shapiro rule interest measure ri described 
measure quantifies degree correlation antecedent consequent 
rules high correlation seen interesting 
context sequence rules rule interest function defined ri ra ra ra definitions probabilities measure 
seen ra statistically independent ri 
rc frequently true window length ra true position immediately left window ri ri 
iv 
rule evaluation consider problem mining interesting rules sequence rule language defined la lc interestingness function order genetic programming perform rule mining able compute value possible rule case ri section iii amounts estimating probabilities ra rt rt ra 
interest simplicity maximum likelihood estimates probabilities 
rule ra rc estimators amounts counting ra ra ra number occurrences ra definition ra 
number windows length rc false position probability rc false positions random window length 
number hits ra rc true time handling correlations caused discretization method discretization process described section ii introduces correlations consecutive symbols discretized sequence 
results rules low distances high confidence 
rules artifacts discretization process consider interesting 
account induced correlations number occurrences rule ra rc sequence discretized window length defined ra rc ra rc note adaptation definition function defined simple classification rules ra rc single symbols :10.1.1.42.3240
occurrences ra followed hit rc units time counted 
counting hits important feature method relative lack restrictions placed allowed rule languages 
allow flexibility perform general occurrence counting probabilities rule estimated individually course calculating fitness 
estimation requires complete pass data 
speed calculations level usable components fitness function specialized search chip hit counting 
pattern matching chip pmc able search mb handle parallel queries depending query complexity 
queries specified special purpose query language 
language supports language features regular expressions latency distance boolean combinations alpha numerical comparisons 
described section iv process evaluating rule consists counting occurrences different patterns 
pmc purpose way number occurrences ra amounts counting hits ra number windows length rc false position looping hits hc 
hn rc rc incrementing counter hi hi hi hi 
number hits ra rc true time proved difficult calculate expression directly evaluated pmc 
pmc capable finding occurrences rc true preceded hit ra maximum distance process summarized pattern operator syntax ra rc 
long length substring matched ra rc ra rc evaluated operator way construct reverse sequence ra rc counting number hits expression case ra rc match single symbol procedure 
reasons fails important reason distances distorted 
consider instance rule ra ab rc sequence 
order ra match sub sequences reversed 
evident case reverse ra ba 
searching reverse sequence result hit position rc report hit position 
distance hits note differs definition lower range defined 
limiting case single time point formula equal original frequency definition 
prototype experiments searches mb handles parallel queries 
antecedent consequent increased case trivial account distance distortion general case consider instance ra bc 
problems solved method evaluating ra rc store hit locations ra rc arrays sorted hit position trivial pmc hits reported sequentially array 
iterate antecedent array increment counter hit array hit consequent array desired distance 
done na nc time na nc number hits antecedent consequent respectively words time number symbols worst case ra matches position 
note methods evaluating modified frequency function section iv 
added requirement evaluating function symbols hits ra rc 
method solves adding wild cards symbols matching symbol start hit processing method amounts considering hits consequent distance symbols hit antecedent 
experimental results experiments rule languages single symbols 
single symbols concatenations single symbols 
sequential patterns 
regular expressions limitation skips repetitions recursive example expressions type allowed 
addition alpha numerical comparisons boolean operations example rules alpha beta matching strings alpha numerically alpha beta 
seen description rules generated evaluated method 
recall method antecedent consequent match single symbol 
system tested different synthetic datasets known rules embedded sequence 
tested data set containing ecg measurements taken ucr time series data mining archive 
results generated running genetic programming system population size maximum generations 
crossover mutation reproduction probabilities respectively tournament size 
data set genetic programming algorithm run times different rule languages interestingness measures 
addition measure rule interest function ri confidence confidence times support ra rc interestingness measures 
synthetic data synthetic data constructed repeatedly drawing symbols subset lowercase latin alphabet uniform probability 
symbol representing consequent inserted sequence predefined antecedent pattern 
different antecedent types regular expression symbols occurring order window width 
sets consisted kb sequence data occurrences antecedent type respectively 
table summarizes typical results produced measure ri function synthetic datasets 
addition table presents typical results confidence confidence times support interesting measures 
rule notation explained appendix 
note languages generating rules dataset respectively 
seen table confidence rule interest measures produce rules having high confidence minimal support 
measures particularly useful fitness function mining interesting rules spurious rare rules desired 
confidence times support fitness measure problems 
system able partially recover embedded pattern set 
unable recover pattern set combined support confidence lower random pattern detected 
serious shortcoming fitness measure may observed sets having uneven symbol distribution 
rules generated involve frequently occurring antecedent determines frequency rule rule support data shown 
modifying measure initial results generated mining different datasets measure confidence far data shown 
inspired modification fitness measure multiply measure confidence correcting function 
recall rule confidence 
monotonically increasing function close values larger limit cmin close values cmin 
function satisfies requirements sigmoid function cmin parameter regulating sharp cutoff cmin 
sections value 
modified measure fitness function system able fully recover rule embedded set 
setup system unable fully recover rule set 
approximation table ii summary results synthetic dataset modified measure 
type language rule iql operator 
table ii lists expressions generated rule languages generation process 
real world data system tested ecg dataset ucr time series data mining archive 
series split partially overlapping folds fold divided training set smaller validation test sets 
validation set early stopping model selection 
training set discretized procedure section ii window size alphabet size 
corresponding validation test set discretized limits symbols training set 
folds mined different rule languages 
results table iii 
note results listed table results produced early stopping best generation results having highest fitness applied validation set 
note modified support section iv 
seen table rules generated system highly complex accuracy close training test set 
analysis revealed rules exploited feature underlying pattern matching hardware occurring antecedent consequent match pattern hardware reports antecedent occurs bytes earlier actual case 
comparison rules generated fairly simple 
probably due highly regular pattern sequence 
circumvent problem complex invalid rules test system difficult problem system run ecg data minimum distance parameter set 
table iv lists rules generated language 
shows plot subsequence ecg set 
shows hits antecedent second rule table iv sequence 
seen system successfully generated rule identifying highly regular pattern ecg signal 
random data rule generation method tested random set embedded rules 
set characters alphabet drawn uniform probability 
patterns prevalent data 
mining set fitness measures table addition modified measure 
results table typical results produced different interesting measures synthetic datasets 
set fitness measure rule supp 
conf 
mea 
ri measure rule interest confidence conf 
supp 
measure rule interest confidence conf 
supp 
table iii early stopping results ecg data set evaluated test set 
language rule supp 
conf 
mea 
ri jc jc jc ac oc table iv results ecg set evaluated test set 
rule supp 
conf 
mea 
ri lf cnf bnf lf cnf bnf fig 

hit locations antecedent ecg sequence 
tests confirm observations runs synthetic data see section concerning different fitness measures data shown 
addition effect observed ecg data concerning hardware feature exploitation observed data set data shown 
rule languages tried 
showed certain language combinations antecedent consequent may result spurious rules fit random data including separate test set 
example language generated rule yk 
rule support confidence measure rule interest measure respectively tested random set different training set 
intuition letting antecedent consequent sufficiently general possible achieve confidence support 
general fixing consequent restricting generated prevents occurring 
vi 
summary examined novel method unsupervised mining rules time series data 
previous methods method places constraints rule representation quality measure optimized 
method works evolving rules genetic programming uses specialized hardware calculate fitness interestingness candidate rule 
experiments synthetic data discretized real world dataset ecg random data set 
ran experiments different rule languages differing complexity including support regular expressions 
knowledge existing methods accommodate similarly flexible rule formats 
method able recover approximate rules embedded synthetic sequence 
addition able produce rules recognizing periodicity ecg sequence 
method described new research done examining various rule formats interestingness measures 
primary fitness measure experiments measure robust useful ranking rules interestingness measures exist may useful fitness measures evolving rules 
appendix rule language syntax appendix describes notation rules section kleene closure operator 
signifies repeated times 
optional operator optional skipped 

xn sequential patterns 
signifies characters xn window consisting characters 
ri rj alternative operator meaning sub expression ri rj match 
expression gives match negation 
ri rj shorthand bef ore operator 
reports match rj reports match ri reported match symbols 
reports match current substring alpha numerically lexically greater equal string 
reports match current substring alpha numerically lexically equal string 
ri rj conjunction operator ri match location 
rj keogh lonardi chiu finding surprising patterns time series database linear time space proc 
kdd pp 

mannila toivonen verkamo discovery frequent episodes event sequences data mining knowledge discovery vol 
num 
pp 
jan 
agrawal srikant mining sequential patterns proc :10.1.1.40.9892
icde pp 

das lin mannila smyth rule discovery time series proc 
kdd pp 

temporal rule discovery genetic programming specialized hardware proc 
th int 
conf 
advances soft computing nottingham 
weiss hirsh learning predict rare events event sequences fourth international conference knowledge discovery data mining kdd agrawal stolorz piatetsky shapiro eds 
publisher menlo park ca aaai press pp 

nonlinear index prediction proceedings international workshop statistical finance palermo italy september physica vol 
elsevier science mantegna ed pp 

povinelli genetic algorithms find temporal patterns indicative time series events gecco workshop data mining evolutionary algorithms pp 

freitas data mining knowledge discovery evolutionary algorithms berlin spinger verlag 
finding informative rules interval sequences lecture notes computer science 
martin data mining unusual movements temporal data kdd workshop temporal data mining 
chakrabarti sarawagi dom mining surprising patterns temporal description length fourth international conference large databases vldb new york ny morgan kaufmann gupta shmueli widom eds pp 

klein kandel knowledge discovery time series databases ieee trans 
systems man cybernetics vol 
pp 
feb 
survey methods efficient retrieval similar time sequences data mining time series databases kandel bunke eds 
singapore world scientific published 
koza genetic programming programming computers means natural selection 
cambridge ma mit press 
spiliopoulou managing interesting rules sequence mining proc 
pkdd pp 

hamilton knowledge discovery interestingness measures survey department computer science university regina saskatchewan canada tech 
rep cs oct 
smyth goodman rule induction information theory knowledge discovery databases piatetsky shapiro frawley eds 
cambridge ma mit press pp 

piatetsky shapiro discovery analysis presentation strong rules knowledge discovery databases piatetsky shapiro frawley eds 
cambridge ma mit press pp 

fast search transfer asa digital processing device european patent specification ep deriving international published patent application wo 
fast search transfer asa norwegian patent filed international published patent application wo titled processing circuit search circuit 
aug 
iql language 

trondheim norway 
online 
available www com pub whitepapers iql latest pdf keogh ucr time series data mining archive online available www cs ucr edu eamonn index html riverside ca 
university california computer science engineering department 
