joint dependent local deformations hand animation object grasping nadia magnenat thalmann richard re daniel thalmann hec iro universit de montr canada algorithms methods animating hands synthetic actor 
algorithms allow move hand grasp objects compute deformations hand moves example rounding joints muscle 
mapping surfaces skeleton concept local deformation operators specific local deformation operators depending nature joints 
major problem hand covering process calculation coordinate bases 
key method find model calculating bases sophisticated simulation complex motions 
model improved additional realistic elements muscle joint 
calculation coordinate bases vertex space separated cases single segment covering fingers segment covering hand palm 
positioning hand object processes described calculation distance hand vertex object intersection calculation hand object semiautomatic calculation flexion angle distance process 
examples shown user interface introduced human factory system described 
resume des algorithmes des animation des mains synth sont pr sent es 
les algorithmes ne pas de placer la main de des objets mais aussi les formations des mains par exemple les aux articulations les des muscles 
des surfaces sur le est bas sur le concept op de formation locale pendant de articulation op 
le principal probl dans le de la main est le calcul des bases de es 
la cl de notre de un mod le de calcul des bases pour la simulation de complexes 
ce mod le am en des ments que les de muscles les aux articulations 
le calcul des bases de es un dans espace peut se faire de deux fa ons un segment pour les de segments pour la 
pour la objets trois sont crites le calcul de la distance entre un de la main objet le calcul intersection entre la main objet le calcul semi automatique de angle de flexion bas aussi sur un calcul de distance 
plusieurs sont pr sent interface dans le syst human factory est crit 
keywords synthetic actor hand animation keyframe muscle inflation object grasping 
dimensional character animation complexity motion may arbitrarily divided parts facial animation hand animation body animation 
lot attention devoted facial animation body animation scientific papers dedicated hand animation mop system designed catmull hands decomposed polygons undesired variation finger thickness may occur 
badler proposes model spline surfaces 
surface computed skeleton hand spheres linked spline surface appear image 
placement spheres 
problems important hand animation skeleton motion surface deformation 
connected problem problem grasping object 
grasp object hand joints hand move correctly 
object grasped move hand 
hand turned object turn hand 
object grasped moved new position arm essentially guides object 
grasp object flexion angles determined problem known robotics inverse kinematics problem 
algorithms methods animate hand synthetic actor 
algorithms allow move hand grasp objects compute deformations hands rounding joints muscle 

hand skeleton control animation hand mainly parametric key frame animation 
hand skeleton defined connected set segments joints 
joint intersection segments 
angle segments called joint angle 
fig shows left hand skeleton 
thumb index middle ring fig left hand skeleton motion specified giving key values joint angle 
inbetween values calculated bicubic splines animator may look parameter values keyframe interpolated frame 
may obtain wire frame view hand fig joint angles left hand rotations pivoting 
operators hand covering motion character designed hand needs covered surfaces 
try completely separate topology surfaces skeleton 
means hand may constructed method surfaces sweeping free form surfaces reconstructed surfaces obtained digitized projections 
system transforms surfaces wire frame model ensuring automatic continuity different surfaces 
mapping surfaces skeleton concept joint dependent local deformation operators specific local deformation operators depending nature joints 
operators control evolution surfaces may considered operators surfaces 
operator applicable uniquely defined part surface may called domain operator 
value operator determined function angular values specific set joints defining operator 
case hand especially complex deformations important fingers bent shape palm flexible 
segments fingers independent operators calculated unique segment dependent system 
palm operators systems segments calculate surface mapping 
order fingers realistic effects simulated rounding calculations joints muscle inflation 
hand mapping calculations normals vertex proximal joint 
normals computed cross product vector describing orientation segment associated vertex vector describing flexion axis vertex 
note flexion axis may modified animator joint 
parameters mapping calculations may modified animator order improve realism muscles joints 
parameters include 
parameter control inflation amplitude joint flexion 
parameter define portion segment round joint flexion 
parameter control inflation amplitude muscles inside hand flexion 
coordinates joint initial final positions skeleton 

initial final flexion axes joint 
initial final flexion angles joints note initial angles generally animator may define initial values 

maximum flexion angle joint 
user defined parameters characterized realism surface deformation described inflation amplitude joint portion segment joint rounding inflation amplitude internal muscles maximum inflation point internal muscles 
palm segments determine store informations joints limiting neighbor segment vertices position determined position segments normals joints located side vertices 
means axis system define position vertices space defined orientation segment surrounding orientation normals joints segments 
joint finger wrist joint pivot angles determined 
pivot angle rotation angle flexion axis segment allows lateral fingers hand wrists 
pivot angle vertical component flexion calculated component evaluating inflation amplitude lateral component 
final flexion angle mapping calculation angle projection final segment plane normal flexion axis pivot angle corresponds original flexion axis 
angle calculated segment projection flexion plane initial segment flexion 

mapping algorithm mapping algorithm works follows determine initial final normals joints segment 
calculate modified normal average initial final joint normal 
modified normal axis coordinate basis allow simulation external rounding joint flexion 
fig shows principle 
palm segments normal modified normal calculations required neighbor segments 
loop performed vertices associated segment covered vertex process look coordinates vertex digitized character calculate information localize vertex relative segment determine projection vertex segment calculate ratio distance projection proximal joint distance projection distal joint proximal joint segment nearest joint wrist distal joint joint calculate vertex thickness distance vertex projection segment 
fig 
shows principle 
segment segment segment segment segment segment fig normal calculations 
original normals initial position original normals final position flexion angle modified normals final position pr proj fig concepts projection ratio thickness vertex digitized character pr proximal segment joint di distal segment joint proj projection segment thickness distance proj distance pr proj lt distance pr di ratio lt projection determined segment final position calculating pf pf pf ratio pf final position proximal joint pf final position distal joint 
segment covered segment palm projection calculations performed relatively neighbor segment order obtain initial projection final projection segment projections simulate virtual segment see fig section linking vertex projection segment covered vertex projection neighbor segment 
projection final position point position relative segment order allow transformation initial position final position 
virtual segment allows calculation scale factor di length virtual segment initial position length virtual segment final position neighbor segment final position segment covered initial position scale factor greater pi pm pi pm fig normal interpolation inbetween area 
npo npm original modified normals area proximal joint segment cover npo npm original modified normals area proximal joint neighbor segment npi npi interpolated normals areas proximal joint ri ratio projection virtual segment interpolated normal ni ri npi ri npi 
calculation coordinate bases vertex space problem may separated cases single segment covering fingers segment covering palm 
separate processing external vertices upper side hand processing internal vertices lower side hand 
separation determined cosine angle direction vertex relative projection segment direction normal axis 
single segment covering case external vertices segment divided areas parameters animator see fig section 
different coordinate basis calculated area simulation joint rounding may different joint due type flexion 
normals joint axes coordinate bases positive direction upper part hand middle area area buffer uses interpolated normal normals areas 
proximal joint distal joint area area area fig segment areas covering external vertices 
proximity proximal joint proximity distal joint case internal vertices muscle inflated segment length 
segment covering fig 
areas segment mapping 
proximal joint segment cover distal joint segment cover proximal joint neighbor segment distal joint neighbor segment proximity parameter proximity parameter proximity parameter proximity parameter parameters determine areas segments shown fig areas 
inbetween areas calculation bases different calculated 
case internal vertices areas segment covered neighbor segment inbetween area 
internal inflation calculated 
determination bases external vertices areas joint areas fig areas fig xaxis direction segment space axis direction interpolated normal original normal modified normal interpolation carried relative position vertex projection segment inside area see fig 
axis obtained cross product axis axis 
joint ratio proximity fig 
normal interpolation area containing segment 
original normal nm modified normal interpolated normal computed ratio proximity ratio proximity nm buffer area segment area fig 
areas fig 
axis direction segment axis normal interpolated original normal proximal joint original normal distal joint 
relative position calculated position vertex projection limits buffer area shown fig 
ratio fig 
normal interpolation area np original normal proximal joint nd original normal distal joint interpolated normal computed nd np ratio inbetween areas segment covering method uses virtual segment introduced section 
virtual segment allows calculation inbetween values interpolated normals calculated areas segments shown fig 
determination bases external vertices inbetween areas method calculating bases works 
areas segments better directly interpolate modified normals joint order avoid discontinuities internal 
axis calculated shown fig axis axis calculated 
dm ratio pm fig 
normal interpolation area 
npm npm modified normals proximal distal joints interpolated normal computed ni ratio ratio npm vertex determination coordinate bases vertex initial final position step consists representing position vertex basis initial position order obtain relative position space 
obtain vertex basis represent initial basis vector obtained direction vertex space relative projection nearest segment virtual segment depending area located 

simulation muscle joint coordinates may modified order simulate muscle joints improving realism 
joint process rounding hand surface joints performed animator defined parameter external inflation greater zero 
case modify position external vertices located areas joints 
modification flexion ratio fr flexion angle joint maximal angle possible joint means greater flexion greater inflation 
modification relative position segment larger ratio inflation 
direction vertex normal determining coordinate increases 
amplitude inflation directly proportional animator defined parameter 
muscle inflation animator parameter muscle inflation greater zero modify coordinate internal vertices located segment areas 
maximum inflation directly proportional value internal inflation parameter flexion ratio 
variation defined exponential functions joined exponential functions easy modify 
value determined relative position vertex projection segment ratio join point functions animator defined parameter 
calculation value depends value ratio relative value join parameter 
calculation method shown fig 
join ratio fig exponential functions muscle value exponential function semi empirically defined order obtain curves shown fig 
means exponential functions adjusted better results 
exponential functions applied values ratio order determine new value inflation 
fig 
fig 
show appearance finger application exponential functions 
fig aspect finger application exponential functions modifications performed xyz coordinates converted final coordinate basis origin final projection extrapolated 
example animated sequence shown fig skeleton fig shaded image 
comments method major problem hand covering process calculation coordinate bases 
tried achieve accuracy flexibility 
results accurate operators allow accurate simulation joint buffer areas avoid rough changes coordinate bases generate bad deformations 
accuracy virtual segments inbetween areas avoids large variations orientations axes inbetween bases segments 
specially important case thumb index area segments palm mobile relative 
approach flexible areas processing vertices position relative segments proximal assignment performed 
avoids assigning vertices wrong segment 
key method find model calculating bases sophisticated simulation complex motions 
noted discontinuities avoided external vertices inbetween area 

object grasping approach problem hand grasping may considered semi automatic 
object manipulation consists handling list objects associated hand certain time calculating positions space allowing hand positioned objects avoiding intersection objects hand 
flexion angle segment belonging joint cross product approach object space oriented associated joint 
positioning hand object processes exist 
calculation distance hand vertex object 
consists representing hand vertex basis origin corresponding point belonging facet object selected animator 
axes basis vector facet plane normal plane cross product basis gives idea position hand vertex respect object 
coordinates indicate lateral position coordinate indicates hand object contact 
obtain information surface mapping calculated segment contains hand vertex distance object evaluated 

intersection calculation hand object 
process uses distance process vertex belonging particular segment specified user 

semi automatic calculation flexion angle distance process 
user specify contact point hand contact facet object joint flexion angle calculated 
inverse kinematic process may time consuming interactive editor dichotomous search finding angle corresponds distance dist dist dist threshold value 
hand mapping process segment containing contact point hand 
means animator get hand close correct grasp system just bend angle contact 
collision hand parts taken account 
fig show frames animation sequence synthetic actress marilyn monroe 

software environment hand animation object grasping part human factory animation system 
main purpose human factory system direction synthetic actors environment 
fourth generation system synthetic actors controlled animators designers programming knowledge 
user high level interface menus commands may add commands menus system 
human factory system structured main modules body moving human body animation editor face moving human face animation editor object modelling image synthesis system extensible director oriented animation system 
user interface object grasping may involve joints shall limit description arm control shoulder 
arm joints concerned shoulders elbows wrists 
example command shoulder controls angles shoulders flexion angle pivot angle twisting angle syntax follows shoulder left right flexion pivot twisting key key step value similarly define elbow left right flexion twisting key key step value wrist left right flexion pivot key key step value category angles defined joint flexion pivot angles command defined finger left right thumb index middle ring flexion pivot key key step value second category flexion angle defined finger left right thumb index middle ring key key step value shown previous sections types operations hand grasping object association semi automatic angle calculation 
objects command allows association object hand joint time 
command defined follows objects object identifier thumb index middle ring left right starting time stopping time example objects apple index right means time apple drawn intial position time time apple follow motion second index joint 
time apple considered located final position 
similar commands calculate key frame flexion angles required place hand vertex contact surface object 
animator specifies vertex hand facet object 
example command auto wrist calculates flexion angle wrist auto wrist keyframe number left right hand vertex number object identifier object facet number similarly commands auto auto calculates flexion angles fingers 

described algorithms animating hand grasping objects context synthetic actors 
methods proved efficient producing films 
task level issues need emphasized robotics techniques introduced allow automatic object grasping 
implies evaluation flexion angles joints current position hand current position object grasped 
problem quite similar robotics problem inverse kinematics 
animation hand dependent object shape plate grasped way glass 
type problem research focus issues 
authors marchand ross designed images denis collaboration 
research supported natural sciences engineering council canada fcar foundation 
hill dr pearce wyvill animating speech automated approach speech synthesised rules visual computer vol lewis jp parke fi automated lip synch speech synthesis character animation proc 
chi graphics interface toronto pp 
magnenat thalmann thalmann muscle action procedures human face animation visual computer springer vol waters muscle model animating dimensional facial expression proc 
siggraph vol pp 
armstrong ww green dynamics articulated rigid bodies purposes animation visual computer vol pp 
badler ni smoliar sw digital representation human movement acm computing surveys march issue pp 
badler ni jd ju gm ls positioning animating figures task oriented environment visual computer vol pp 
animating hierarchy seminar advanced computer animation siggraph 
magnenat thalmann thalmann forest integration keyframe algorithmic animation proc 
computer graphics tokyo 
magnenat thalmann thalmann forest keyframe proc 
graphics interface 
wilhelms jp barsky ba dynamic analysis animate articulated bodies humans robots computer generated images springer tokyo pp 
catmull system computed generated movies proc 
acm annual conference pp 
badler ni morris ma modelling flexible articulated objects proc 
computer graphics online conf pp 
bartels interpolating splines local tension continuity bias tension proc 
siggraph pp 
magnenat thalmann thalmann direction synthetic actors film rendez vous montr ieee computer graphics applications vol 

ju geometric investigation reach mit press magnenat thalmann thalmann modeling animation synthetic actors artificial intelligence prentice hall englewood cliffs appear 
