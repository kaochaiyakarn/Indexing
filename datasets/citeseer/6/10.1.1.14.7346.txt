artificial intelligence elsevier compositional modeling finding right model job brian falkenhainer system sciences laboratory xerox palo alto research center coyote hill road palo alto ca usa 
forbus learning sciences northwestern university maple avenue evanston il usa falkenhainer andk forbus compositional modeling finding right model artificial intelligence represent engineer require domain theories orders larger today theories describe phenomena levels granularity incorporate multiple perspectives build theories effectively requires strategies organizing domain models techniques determining subset knowledge apply task describes compositional modeling technique addresses issues compositional modeling uses explicit modeling assumptions decompose domain knowledge semi independent model fragments describing various aspects objects physical processes 
describe implemented algorithm model composition 
general domain theory structural description specific system query system behavior algorithm composes model suffices answer query minimizing extraneous detail 
illustrate utility compositional modeling outlining organization large scale multi grain multi perspective model built engineering thermodynamics showing model composition algorithm automatically select appropriate knowledge answer questions tutorial setting armed vast body knowledge ranging rules thumb precise numerical models engineers guide simplify elsevier science publishers rights reserved falkenhainer forbus analyses selective attention approximation abstraction course analysis shift different perspectives simplifying assumptions seeking views needed distinctions apparent selecting perspective level detail appropriate task crucial analyzing aspect artifact accurate models available generally prohibitive simple artifacts example answering questions throughput pump power plant requires consideration plant quantum mechanical model pump parts fluid 
systems designed automate reasoning physical world exhibit kind focused behavior complexity diversity tasks grow access multiple models ability form appropriate model analysis task crucial intelligent computer aided design diagnosis tutoring systems accomplishing requires view modeling process enables systems explicitly represent reason models underlying assumptions areas applicability describe compositional modeling strategy organizing reasoning models phenomena addresses problem artifact description query produce model artifact commensurate needs query step accomplishing access multiple alternative models differ variety raises problem represent organize models part address problem describing language expressing models physical systems assumptions constraining 
introduce explicit simplifying assumptions state model underlying commitments abstraction level approximations perspective granularity conditions appropriate 
allows determine models suitable query physical setting allows mutually inconsistent models exist domain theory second show organize domain theory semi independent modular fragments model scenario composed allows fine grained control producing parsimonious answers questions posed enables adaptation vast space different scenarios allows fragment reused variety settings query answer space models search composing model requires answering additional difficult questions collection objects considered 
level granularity 
phenomena relevant 
perspective phenomena described 
approximations allowable 
compositional modeling fig 
high level view steam powered propulsion plant 
boiler assembly takes distilled fuel produces steam steam enters turbine produces driving ship steam exhausts turbine 
cooled circulating sea water condensed liquid point pumped back boiler second part introduce implemented technique appropriate model response query recognition terms query provide significant constraint identifying appropriate set modeling assumptions associated model fragments 
example description steam propulsion plant shown fig 
consider answering question increase furnace fuel air ratio affect amount steam flowing superheater 
question provides significant clues model required furnace superheater steam flow superheater furnace fuel air ratio considered 
clues elaborated form complete model examining domain theory dependencies artifact topology composing useful model sufficient analysis scoped assumed range behavior parsimonious models necessarily produce parsimonious answers second validity underlying approximations generally limited restricted range behavior 
introduce second class modeling assumptions called operating assumptions describe kinds behavior relevant task steady state delimits approximation validity increase efficiency simulation ruling consideration possibilities 
model composition falkenhainer forbus call system situation modeled scenario model scenario model 
way construct scenario model directly create model specific situation particular purpose 
common approach engineering domains special purpose simulators built hand typically fortran program model encoded part simulator 
change device structure task requirements generally requires rewriting simulator alternatively take indirect robust route build general purpose domain theory describes class related phenomena systems domain theory consists set model fragments describing fundamental piece ofthe domain physics processes liquid flows devices transistors objects containers ideally scenario model built instantiating composing elements domain theory common approach ai engineering device centered approaches numeric spice qualitative provide catalogs devices wired build scenario models qualitative process theory organizes domain models quantified descriptions processes views automatically instantiated form scenario models qpc developed provide capability qsim approach suggests selectively focus attention scenario relevant subset objects parameters behaviors suggest alternate models process device organized automatically chosen task define problem follows scenario description includes physical structure possibly empty set statements behavior initial conditions steady state range limits domain theory th consisting set domain 
set rules constraining query scenario behavior produce useful coherent scenario mini 
answering query binding variables mi objects instance unique basic approach illustrated fig 

approach modeling process stage cycle query increase furnace 
fuel air ratio affect amount superheater add objects considered examine unresolved modeling decisions select model candidates analysis validation compositional modeling violated modeling assumptions paths fluid resistance discrete continuous valves heat resistance fig 
overview model composition process 
validation model model revision necessary 
domain theory consists set fine grained model fragments explicitly conditioned physical setting applies modeling assumptions rests model composition begins matching terms query referents domain theory suggests initial set necessary model fragments 
set elaborated domain constraints scenario topology resulting scenario model useful simplest suitable intended coherent internally consistent criteria defined section 
model validity may depend assumptions falkenhainer kd 
forbus unknown aspects system behavior 
analysis model may uncover inconsistencies system assumed derived behavior formulate appropriate model 
model formulation difficult problem 
solution operates simplifying presuppositions believe reasonable tasks including tutoring aspects design analysis verification section limitations overcome presume decomposition scenario form strict structural part hierarchy example presumes interesting boundaries scenario characterized single structural decomposition 
second presume needs analyst human mechanical expressed list requisite modeling terms generated analyst interface procedure information needed derive appropriate scenario model gleaned matching terms query terms introduced models analysis query implicit information needs third presume approximation encoded model set priori constraints behavior determine approximation valid 
constraints monitored analysis ensure error introduced approximation acceptable range domains sufficient experience limits known 
example reynolds number fluid dynamics delimit flow laminar turbulent normal conditions transition occurs re pipes examples include mach number delimit gas flow incompressible modulus delimit lumped parameter analysis state heat conduction valid problem removing presumption reasoning approximation cost accuracy tradeoffs expensive making approximation 
see initial area 
presume model fragments particular form mathematics save compositional section original motivations qualitative physics capture tacit knowledge physical laws intellectual roots lies community approach applicable quantitative qualitative representations continuous systems particular illustrate techniques classes examples ordinary differential equations qp theory representations 
simplifications compositional modeling algorithm iin treat cases separately see important problem integrating qualitative quantitative representations furnace ratio affect boiler steam production 
level 
compositional models compositional modeling affects efficiency plant 
efficiency plant affected positively rate turbine 
affected negatively energy input plant qin 
fuel air ratio peak efficiency 
increase fuel air ratio causes art increase boiler heat rate increase boiler heat rate causes increase steam boiler level container initially meters 
level container initially meters plot behavior containers levels flow rate high re assume turbulent flow qin steam cant cant boiler exhaust furnace fact air fig 
tutorial question answering steam propulsion plant answers generated implemented query system steam plant model questions formulated specialized query language explanations automatically generated program provides significant leverage able analyze hypothetical steam propulsion plant fig large multi grain multi perspective domain model engineering thermodynamics compositional modeling strategy system analyzes query automatically computes appropriate set modeling assumptions 
questions answered model currently illustrated fig 

focusing attention perspective granularity response question posed answer took minutes compute symbolics xl 
characteristics modeling framework 
desire adapt wide range scenarios tasks parsimonious manner argues finely tuned control dimensions model vary 
second desire simplify knowledge acquisition maintenance reuse argues ability succinctly state individual lot modeling concepts description apply independently possible argues fine grained modeling observation heart compositional modeling strategy 
domain theory consists model fragments assembled needed form scenario model particular set assumptions 
fragments need correspond directly complete devices processes extent individual modeling decisions stated independently friction compressibility finer level decomposition possible course modeling assumptions underlying model fragments independent assumptions sense hold sets modeling assumptions conflict far possible model fragments conditioned minimal set antecedent assumptions widely applicable possible section describes organize domain theory compositional modeling strategy begins defining notion model fragment describes language expressing domain models define means model compositional 
describe techniques organizing modeling assumptions 
examples thermodynamics model illustration forbus set isolation constitute model implicitly corresponds physical setting set assumptions approximations relevance criteria automate model formulation facilitate model reuse context explicit define model fragment quadruple set conditions defining structural configuration individuals model applies containers connected pipe possibly empty set assumptions concerning model fragment relevance questions interest consider flow pipe pi stating underlying abstractions approximations frictionless flow possibly empty set operating conditions delimiting model behavioral scope example transistor operating modes delimited ranges parameter values characterized different device model includes inequalities individuals parameters constants pressure cani pressure conditions activity model fragments active heat flow pi operating assumptions steady state set relations imposed model fragment contains assertions individuals constraints parameters constraints may qualitative qualitative quantitative ordinary differential equations logically model fragment encoded order implication compositional modeling find distinctions highlighted definition model fragment desirable reasons distinctions people tend natural writing variety theories separating notions ofa configuration objects behavior assumptions model objects applied second distinctions utilized reduce computational effort model composition algorithm described section current implementation supports simple modeling language contains basic primitives organizing modeling assumptions discussed section second ground atomic assertions form assert 
third rules defined state domain rules part generalization hierarchies interactions modeling assumptions domain facts fourth domain model fragments defined form individuals spec assumptions list assumptions list operating conditions relations list consequent relations expression variables provides term designating instantiation model spec set variables conditions potential bindings classes mathematical constraints currently allowed relations field qp theory constraints correspondence generalizes process view primitives introduced qp theory particular individuals field corresponds union qp individuals preconditions placed modeling assumptions qp individuals specification awkward efficient field generalization quantity conditions allows symbolic statements behavior steady state addition prior inequalities process activation statements relations union qp relations influences falkenhainer thermal liquid cl individuals cl conditions contained liquid cl assumptions consider thermal properties cl relations viscosity cl temperature cl absolute greater temperature cl absolute temperature boil cl absolute contained liquid geometry cl individuals conditions fluid container cl conditions contained liquid cl container cl substance cl sub assumptions consider geometric properties relations quantity level cl level cl mass cl density sub pi expt diameter pressure bottom absolute level cl density sub fig 
domain model fragments defining properties liquids 
numeric constraints algebraic ordinary differential equations important element ofthe relations field declaration quantities represent continuous parameters thing modeled 
predicate quantity state object quantity particular type quantity diameter quantities equation defined time equation stated hold quantity declarations important major link matching models task requirements generally easy extract query set quantities considered task sense 
quantities defined depends modeling assumptions force information usually provides bulk suggestions modeling assumptions appropriate example fig shows different aspects model liquids model fragment describes constraints parameters contained liquid piece stuff container thermal properties considered 
second model fragment describes quantitative relationships hold container geometric properties considered importantly statement defines model liquids fact collectively statements provide different aspects model liquids defining properties contained liquids exist stating composable models compositional modeling considering thermal properties object continuous properties heat temperature fine grained decomposition aspects model compositional modeling 
model fragment needs specify conditions model fragments need attempt enumerate inappropriate conditions allowable combinations elementary models 
modularity simplifies domain model construction improves reusability enables system respond specific needs task central component model fragment set equations specifying constraints quantities composable mathematical representation inference procedures support small set general modeling operations parameter substitution modularity reusability supported stating physical laws general form functional parameters possible forexample frictional component fluid flow head loss computed differently depending flow laminar turbulent head loss separate parameter hl general form bernoulli fluid flow equation stated different contexts shared individuals composing model artifact models components requires way component models interact typically done shared parameters individuals 
forexample lumped element models electrical circuit components typically communicate shared nodes voltage node circuit commonplace modeling operations additional powerful source comes ability partially specify equations ideally elementary models require knowledge composite environments may applied function structure equations stated computable form imply actual computation performed modular manner 
separate compilation step model formulation may increase computational efficiency 
forbus fixed artifact fixed set phenomena identified example law change container fluid equal sum flows container stated formed equation flows container known state flow liquid container portal affects amount liquid container generally applicable law independently flows may occurring specific instance allow explicit specification interactions assume general class partial constraints called 
ary functions arbitrary summation declared piecemeal membership assertions formulating aggregate function fixing value specific context requires closed world assumption elements known 
occur artifact phenomena analyzed identified currently composable functions introduced qp theory known influences 
influences change cause change equal 
net change influenced quantity computed influences known 
quantity directly influenced derivative equals direct influences qo states directly influences qo positively qo states directly influences qo negatively dvo tit qn qo qn example flow container portal stated amount fluid flow rate quasi static assumptions flow equals flow stated separately explicitly dt amount fluid ci indirect influence called qualitative proportionality qo states weaker qualitative relationship qo qualitatively proportional qt means exists function qo 
increasing monotonic dependence modeling assumptions specification domain model fragment includes modeling assumptions holds universally relevant provides control instantiation relevant device centered models relationships explicit representation computed shared nodes identified sum node quasi static assumption left implicit compositional modeling aspects situation examined models modeling assumptions contradict knowledge scenario current focus attention instantiated state modeling assumptions predicates specific phenomena systems globally entire scenario simplification introduced selectively appropriate example model flows steam plant laminar turbulent containers having finite capacity infinite mechanical parts rigid elastic 
support assume objects scenario organized systems 
system primitive object named collection constituent systems 
example container primitive object boiler assembly consists furnace boiler superheater 
relation part holds system part example boiler part ofthe boiler assembly relation limited system immediate subsystems transitive function components maps system set parts primitive object components empty set transitive closure part expressed relation sys contains system contains system part part system contained currently assume systems form strict hierarchy root system called scenario contains objects scenario conceptually modeling assumptions divided categories simplifying assumptions section operating assumptions section organization control assumptions provided assumption classes domain specific constraints discussed section 
simplifying assumptions simplifying assumptions explicit model fragment underlying approximations perspectives granularity provide majority vocabulary representing problem solver decisions model scenario require simplifying assumptions take form consider system predicate denoting specific kind assumption system subject assumption consider static friction tower cards think static friction reasoning tower falkenhainer collection consider assumptions forms groundwork particular analysis classified categories ontology assumptions basic task formulating model selecting appropriate method description coordinate system 
example analysis time position 
basic primitives analysis control volumes particles lumped elements 
distinct varieties ontologies traditional engineering example lagrangian methods description particle rigid body dynamics track identifiable elements mass hand eulerian methods description control volume analysis fluids track properties flow specific points time qualitative reasoning adopted methods description forms date ontologies contained stuff ontology eulerian view model static dynamic fluids containers similar fluid control volumes classical thermodynamics 
models contained stuff ontology predicated ontology assumptions form consider fluid cs system ontology analyze flow heat system cf energy flow diagrams molecular collection ontology lagrangian view follows movement localized unit fluid flow 
mechanics dynamic analysis mechanisms simplifying assumptions approach ontological commitments fundamental analysis global ontological assumptions applied uniformly systems phenomena consideration apply system scenario consistent multiple ontological assumptions may hold example energy flow analysis occurs mass flow analysis hand eulerian lagrangian models phenomenon mutually exclusive due coordinate systems analysis ontology may results gleaned previous analysis ontology compositional modeling grain assumptions crucial analyzing large systems fact objects system need considered analysis task objects outside current area concern simply ignored second abstractions allow collections objects considered single aggregate entity fluid path example consist valves system typically speaks path entity control objects explicitly consider analysis organized assumptions recognizing existence call grain assumptions 
consider operator state grain assumptions 
syntax consider exists system holds existence system considered placed scope current analysis means model included coherent scenario model 
example consider exists boiler forces model boiler included analysis focusing subsystem steam tubes treating entire boiler assembly black box 
constraints governing assumptions particularly objects requires considering described section approximations abstractions approximations construct simplified typically easier models cost reducing accuracy utility part function scenario operating conditions accuracy requirements task computational benefits afford approximations appear variety forms correspond ignoring influences presumably insignificant scenario consideration 
example inviscid flow approximation assumes fluid viscosity zero ignores dissipative effects fine analyses fluid systems assumption valid limited set conditions low velocity flows approximations form include incompressible fluids inelastic objects frictionless motion approximations represent structure environment example fluid models typically assume level fluid paths additionally fuel tank modeled infinite source container finite capacity limits abstractions reduce complexity ofthe modeling language usually cost reducing information available detail granularity increasing ambiguity reducing accuracy example fluid forbus valve modeled discrete switch continuous variable resistance additionally geometry compiled description reducing dimensional configuration equivalent dimensional description 
simplifying assumptions difficult categorize abstraction aspects difficult separate distinction principle important see start techniques require distinctions success depends modeler ability state domain theory simplifying assumption appropriate approximations abstractions represented consider 
ontological assumptions grain assumptions constraints approximation abstraction assumptions domain specific example wish uniformly consider containers finite infinite may worried capacity limitations parts system direct consideration 
domain specific constraints assumptions explicitly encoded rules domain model parts domain model fragments example models sense consider portals connect container fluid path willing consider geometric properties container reason thing distinguishes portal height geometric properties ignored reasoning portals provides leverage constraint enforced making consideration portals imply consideration geometric properties 
operating assumptions engineers constantly default assumptions behavior manage complexity example trying containing heat works engineers tend assume fluid hot leg hotter fluid cold leg ifthe system operating intended making assumption saves effort alternatives temperatures equal cold leg temperature higher hot leg temperature need considered system operating intended engineer predictions wrong analysis re performed consider alternatives operating assumptions roles 
focus simulation 
example simulation progresses outside assumed operating range halted reasons noted 
likewise qualitative simulation constrained ruling entire classes behavior assuming containers non empty eliminates possible combinations empty non empty containers compositional modeling second operating assumptions canbe tied approximations indicating range parameter values valid example simplifying assumption conditioned operating assumption reynolds number introductory physics textbooks analyses tractable assuming sin equals suitably small automating model formulation requires providing language assumptions explicit may reasoned operating assumptions state constraints possible parameter values directly inequalities indirectly symbolic assertions turn define set constraints 
presently general categories local restrictions quantity values consist inequalities quantities constants forexample op assumption greater temp boiler steam temp steam constrains temperature steam boiler higher temperature steam temperatures defined operating modes operating mode simply named collection local restrictions example description heat informal specification normal mode heat stated mode heat normal conjunction rules defining normal mode heat 
steam plant operating modes starting cold iron full steam subsystem modes swe op assumption form assuming inequality directly assumption defined quantities temperature boiler steam boiler empty falkenhainer kd 
steady state assumptions state derivatives forsome class zero steadystate assumptions ubiquitous engineering analyses appear forms assumption applied specific quantity instances basic primitive 
example steady state temperature boiler steam constrains derivative temperature boiler steam zero defined second statements system quantity type useful example steady state boiler assembly temperature applies steady state assumption ofthe boiler assembly components temperature defined constraint defined rule steady state system type part component system steady state type component presently general techniques mapping query appropriate set operating assumptions 
operating assumptions imposed explicit problem statement scenario description query required product selecting models want know flow steam boiler turbine question presumes steam boiler turbine conditions ensure flow 
assumption classes collections assumptions represent natural groupings reasoned alternative ways model aspect object phenomenon organize groupings mutually exclusive sets called assumption classes assumption class captures dimension modeling choice example fluid modeled having zero viscosity inviscid frictionless flow standard nonzero viscosity newtonian viscosity dimensions relevant contexts require condition state assumption class relevant choice dimension example fluid viscosity dimension relevant answering questions fluid flow assumption classes declared form stallman sussman describe techniques making behavior assumptions response ambiguity encountered problem solving compositional modeling ai condition atomic sentence containing possibly empty set free variables mutually exclusive set sentences consider statements free variables logically equivalent vv 
va ai aj say assumption class active holds 
scenario model include exactly assumption active assumption class inactive assumption classes ignored constituent assumptions included intuitively class condition holds assumptions associated class hold scenario model 
additional information conditions assumption class relevant inappropriate specified independently implications consequent current scheme order assumptions 
important assume models assumptions earlier list costly sense models assumptions list context independent cost estimate oversimplification proved quite useful extension scheme task specific cost procedure provided induce ordering assumptions straightforward specifying task dependent cost procedure difficult open research problem 
example models fluid flow include fluid viscosity assumption class controls viscosity fluid flow process modeled 
definition condition relevant fluid flow process consideration stated follows class fluid viscosity pi 
consider inviscid pi consider viscous pi consider non newtonian pi model application fluid flow pi fluid viscosity pi additional constraints placed assumptions ensure composition model fragments results coherent scenario model example question concerns head loss rule inviscid assumption 
likewise selection turbulent assumption flow regime assumption class inconsistent selection inviscid assumption fluid viscosity assumption class assumption classes discussed section falkenhainer 
model composition rich domain model variety sizes perspectives constraints drive model composition 
stated scenario model satisfy criteria coherent useful 
easiest criterion guarantee coherence 
coherent mean modeling decisions consistent physical organizing principles domain defined domain theory example violating domain physics consider fluid flow turbulent inviscid frictionless 
example violating domain specific organizing principles attempt equation concerning head model ignored geometric properties calculate head height turn requires modeling geometry degree subtle criterion maximize utility 
utility tradeoff relevant information acquired cost 
scenario model sufficient answer query model ofa ship boiler matter foundation analyzing 
hand model contain little extraneous detail possible require problem solving effort achieve desired answers instance designer calculating efficiency ofan industrial process probably benefit detailed analysis transient behaviors startup states responsible modeling strategy sufficiency dominate 
select minimal scenario model satisfies query requirements sufficiency aspects 
characterized aboutness relevance scenario model includes aspects ofthe system required perform analysis ontological commitments parameters interest example failure making inappropriate ontological commitment attempt model steam plant heat engine asked mass flows occur example failing contain parameters interest ignoring thermal properties student specifically asks thermal effects boiling 
second aspect sufficiency accuracy scenario model contain information provide answer accurate task 
example inappropriate degree accuracy qualitative numerical prediction called detailed numerical model student wants know parameters affect illustrate basic issues arise model composition start simplified example suppose structural description domain theory th shown fig 

assumption type represents modeling assumption ri acs indicate rules assumption classes scenario domain theory th metal pipe connects water water water exists ce water exists cs cf compositional modeling electrical vr quantity exists quantity jr qr nub es exists sub quantity sub quantity sub sub sub ff sub sub quantity fr sub fr fr fr quantity fr inviscid fr frv quantity fr fr metal pipe metal pipe quantity fr fluid vis acl fluid uis inviscid instantiation th water water quantity water quantity water fluid water metal pipe connects water quantity water quantity water water water metal pipe vt fig 
simplified view model composition water quantity water fr 
acl quantity fr fluid vis fir ff sub frc sub fr quantity fr pr 
respectively suppose query interested behavior water levels cans input algorithm section set ground expressions quantity declarations relationships composed model 
example query structural constraints models individuals specifications behavioral constraints operating conditions indicate behaviors falkenhainer forbus possible query indicates behaviors interest various constraints combine suggest appropriate model 
example query suggests modeled fluid container opposed heavy object object contained fluids connected pipe potential flow metal pipe behavior qua fluid path relevant 
example occurs side effect pipe connection fluid containers fluids considered models potentially apply pipe electrical conductor need considered interact models supporting query fluid levels describing basic algorithm issues examined critical identifying form ofthe algorithm search space output issue arises identify candidate models model fragments applicable scenario describe water water 
model fragment irrelevant query cause consideration irrelevant scenario follow cf appears relevant ensure requisite assumptions consistent su th search potentially relevant model fragments involves tradeoff minimizing amount exploration exhaustively checking constraints efficient manner ensure coherent scenario model scenario description principle source focus searching space fragments relevant scenario recall model fragment logically equivalent model fragment may instantiated set individuals satisfy collection say model applicable collection furthermore assumed say model applied collection example model string tension applicable analyzing steam propulsion plant model boiling applicable need applied model apply scenario imposing constraints say model active applied operating equivalent implication reflects ordering decisions relative variability individuals roughly constant analysis operating conditions change state state basis importantly instantiation remainder clause ground treated propositionally implementation compiles compositional modeling rule triggers conditions stated produce substitution body rule checks ground assumptions aa consistent creates unique token model instance creates ground horn clauses model application model application active active ra instantiation process called scenario expansion converts quantified domain theory equivalent propositional theory specific scenario search relevant models focus directly ground query terms consistency determined tractable propositional theory bottom half fig 
shows dependency structure produced instantiating applicable domain theory current example model application active nodes left simplify clear model fragment cf introduces quantities water water second issue arises concerns form algorithm output intermediate results approach explicitly reason combinations fragments ascertain consistent sufficient combinations involving irrelevant model fragments 
better alternative reason combinations modeling assumptions 
tend fewer modeling assumptions model fragments combinations assumptions provide concise representation checking consistency requires reasoning model fragments requisite assumptions anyway 
model formulation task select suitable set modeling assumptions 
call set consistent ground assumptions modeling environment final output algorithm th derives minimal sufficient scenario model 
query quantities water water modeling environment exists fluid cs exists fluid cs 
environment may incomplete ways extended example having decided fluid flow modeled decisions flow rule implies caching quantified formulae common mode interaction truth maintenance systems marks extension assumed environment represented coherent scenario model concluded model composition process stage falkenhainer kd forbus modeling environment introduces quantity fr activates assumption class ac include assumption inviscid viscous ultimately evaluation criterion applied set candidate modeling environments select useful answering query conceptual distinctions associated algorithms truth maintenance systems atms apply quite naturally model formulation task algorithm exploits atms ability easily compare manipulate sets 
briefly review statement problem solver database corresponding atms node 
mapping nodes statements refer nodes statements interchangeably dependencies nodes indicated may viewed horn clauses distinguished subset nodes called assumptions set assumptions called environment 
node said hold environment node derived environment set justifications 
set environments node holds characterized node label label set environments consistent imply contradiction minimal environment label subset node holds environment environment node label subset environment 
label information propagated dependencies algorithm described algorithm uses labels dependencies maintained atms compute minimal conjunction modeling assumptions needed produce appropriate scenario model 
scenario description fully instantiate domain theory model composition consists steps query analysis 
identify contents query set objects quantities relations interest compute collection minimal environments justify modeling terms query coherent modeling environment ofthese environments subset 
object expansion partial environment identifies set consider additional objects may need considered capture relevant interactions step uses part hierarchy find minimal extension partial environment coherent set objects considered 
candidate completion choices assumptions raise new choices turn example considering liquid flowing pipe requires decision model fluid compressible incompressible step ensures partial compositional modeling environment extended include choices assumption class entails 
candidate evaluation selection candidate modeling environment evaluated select best candidate 
section describes step detail steps performed candidate environment described perspective single environment query analysis form content queries different tasks vary widely remain task independent domain independent possible restrict basic information 
particular assume initial form query decomposed query elaboration procedure set ground expressions having referents fully instantiated domain model 
ground expressions provide input step model composition simplest query elaboration procedure find quantities objects mentioned query 
consider examples fig 

question affects efficiency plant transformed quantity efficiency steam plant simple rules suffice transform query required form example question mass flows refers set entities represent liquid flow gas flow fetching entities instantiated domain model trivial aspects query elaboration task specific example question feed pump throughput change pressure gradient ranges psi psi suggests quantitative models individuals involved qualitative quantitative models fact question concerns specific duration requires fine resolution quantitative analysis provide answer important point query elaboration identify aspects query descriptions supplied scenario model processed query expressions el 
construct partial candidate modeling environments follows take input atms dependency network fully instantiated domain theory network distinct node model term appear query 
furthermore notice term label contains minimal sets modeling assumptions holds query new atms node justify query conjunction expressions allow falkenhainer forbus atms compute label 
assumptions atms database modeling assumptions environment query label partial candidate modeling environment 
included potential simplifying assumptions instantiated domain model minimal consistent combination assumptions entail objects properties mentioned query appear environment label node query course environments may entail coherent scenario model 
steps extend coherent candidate scenario models example suppose interested question fuel air ratio affect amount steam flowing superheater 
query transformed set expressions representing quantities interest quantity amount water gas superheater quantity fa ratio furnace dependencies corresponding query node shown fig 
inspection ofthese dependencies produces single partial candidate environment consider exists furnace consider exists superheater consider fluid cs scenario environment provides initial guidance identifying simplifying assumptions enable minimal set model fragments supporting query expressions 
query mentioned aspects boiler assembly requirements reflected environment 
example stating interest boiler water level add consideration ofthe boiler geometry part ofthe environment 
asking fuel air ratio affects add consideration note environment represent coherent scenario model 
example considers existence furnace superheater fails include intervening object boiler 

object expansion initial environment forces consideration set objects ensure coherence determine additional objects required 
example ifwe thinking steam flow boiler turbine need think feed pump correctly recognize flows part closed cycle 
hand ifwe considering possible faults furnace rest ofthe steam plant ignored decisions governed constraints relevant portion shown fuel source fuel tank supplies fuel tank furnace air source atmosphere supplies furnace furnace working flu id state water gas superheater superheater th relevant portion shown quantity fa ratio compositional modeling th relevant portion shown furnace operations furnace individuals furnace conditions furnace furnace air source conditions air source air source supplies air source furnace fuel source conditions fuel source fuel source supplies fuel source furnace assumptions consider exists furnace relations quantity fa mixture furnace nm fa mixture zero quantity fa ratio furnace fa ratio furnace zero quantity heat rate furnace heat rate furnace zero contained stuff sub st individuals conditions fluid container sub conditions working fluid sub st conditions working fluid state sub st assumptions consider exists consider fluid cs relations natural quantity amount sub st objet consider volumetric properties sub st mass sub st amount sub st container sub st substance sub st sub natural quantity quantity zero superheater obj fluid container obj exists fuel tank jr fuel air source atmosphere atmosphere furnace operations furnace furnace quantity amount water gas superheater natural quantity amo water contained stuff water gas superheater active mi consider fluid cs fluid cs scenario aa plied mi exists state water gas water superheater wq fluid state water gas superheater fluid container superheater superheater fig 
tms dependency structure showing relationship terms models modeling assumptions enable query represents con junction query expressions quantity amount water gas superheater quantity fa ratio furnace imposed grain assumptions intuition arbitrarily choose set parts model isolation interest initial set parts consider system relationships involving initial set included model 
simplest case consider objects part system system components considered falkenhainer forbus consider exists consider exists part part consider components consider components part si consider exists si objects considered part different systems amore sophisticated set constraints required define covering system system contains systems interest covering systems large useful scenario example covering system define minimal covering system covering system contains smaller covering system specifically minimal covering system lowest common ancestor part hierarchy systems considered assume strict hierarchy minimal covering system unique initial set grain assumptions minimal covering system mcs determines systems exist rule mcs consider exists sys contains si sys contains si si consider exists si consider components si partial modeling environment requires single object minimal covering system object needs added 
minimal covering system path existence assumptions extended systems leading objects mentioned initial environment 
modeling environment augmented new existence assumptions resuming example recall initial environment explicitly stated need consider furnace superheater 
identify complete set required form coherent scenario model environment determine minimal covering system furnace superheater systems boiler assembly system grain assumption constraints grain assumptions required fig 
consider exists furnace consider exists superheater consider exists boiler net effect boiler added model 
note steam plant primary components turbine assemblies ignored query additional detail selected systems ignored furnace fuel pump exhaust manifold boiler assembly superheater boiler ri pump turbine fuel assembly exhaust air furnace ji ir assembly fig extending partial modeling environment consider coherent collection objects partial environment comprised furnace superheater systems minimally include boiler system note steam plant components internal structure furnace need considered 
candidate completion compositional modeling stage partial modeling environments grown include object included coherent domain model 
necessarily mean chosen exactly object associated phenomena modeled 
example query concerned difference water pressure boiler initial environment consider objects fluid cs perspective object expansion step extend include feed pump turbine paths connect paths modeled 
resistance taken account 
flows paths modeled 
pump 
extra information needed determine kinds modeling assumptions required alternatives provided assumption classes section recall assumption class considered active activity condition holds follows th active problem solver include members scenario model 
extend partial environment include assumption assumption class activity entails called candidate completion procedure 
candidate completion procedure slightly tricky example choices assumption class lead choices inconsistent obviously choices constrained leading branching growing number candidate modeling environ falkenhainer forbus class geometry obj consider geometric properties obj consider geometric properties obj fluid container consider exists geometry fig 

rules defining geometry assumption class 
ments 
choosing extend environment assumption may expand entailments include assumption classes turn searched cast dynamic constraint satisfaction problem viewing class conditions associated assumptions sets active variables associated choice sets atms algorithm described solve 
result procedure set complete candidate modeling environments scenario models represented environments coherent consider objects necessary reason queried objects include choice relevant modeling decisions 
continuing example developing modeling environment currently comprised consider exists furnace consider exists superheater consider exists boiler consider fluid cs scenario environment activates assumption class instances corresponding general assumption class types assumption class defined fig 
requires decision model geometric properties fluid container existence considered fluid containers furnace boiler superheater geometric properties assumption class instances conditioned geometry example condition boiler fluid container existence considered entails geometry boiler condition activates choice set consider boiler geometric properties second type assumption class activated concerns thermal properties ofeach existence considered 
instances class objects consideration 
applied fluid flow instances liquid input boiler gas boiler superheater gas output superheater 
activates assumption class defined section applied flow compositional modeling instance forcing decision model flow instance inviscid viscous binary assumption classes active current partial modeling environment leading consistent extensions environment assumption classes happen interact section describe metric evaluating relative desirability ofeach choice metric consulted candidate completion procedure possibilities need generated candidate evaluation selection set candidate modeling environments final step apply evaluation metric candidates select best answering query best depends details domain task example computational support available model determines form better allow user supplied evaluation metrics enable study alternate approaches describe simple scheme crude estimates model costs worked surprisingly examples examined 
set candidates pruned retaining smallest number example candidates entail candidates entail objects considering objects ignored second ordering information assumption classes estimate simplicity recall choices assumption class ordered increasing complexity consequently assign number choice corresponding place ordering candidate values summed candidate sum smallest selected case tie minimal environments selected random example assume domain model containing active assumption classes combinations consistent candidates possible score score score score score selected limitations ofthis scheme obvious 
example considered equivalent 
probably information falkenhainer required distinguish instance ascertaining relative expense bz depends specifics task domain defer attempting provide guidance 
returning running example modeling environment selected consider exists superheater consider exists furnace consider exists boiler consider fluid cs scenario consider inviscid boiler sh consider inviscid sh env consider inviscid env boiler consider thermal properties furnace consider thermal properties boiler consider thermal properties superheater consider geometric properties furnace consider geometric properties boiler consider geometric properties superheater modeling environment produces scenario model summarized pig 

describes fluids processes associated components considered interactions isolation rest ofthe steam plant theory potentially applicable model fragments algorithm allowed construct model focuses relevant aspects 
model validation prior analysis information available scenario incomplete 
result model composition procedure guarantee modeling assumptions selects valid scenario studied 
describe analysis scenario model detect inappropriate assumptions leading informed round model composition simulation quantitative principle models develop qualitative simulations carried qp theory 
quantitative simulations carried fourth order runge kutta integration algorithm adaptive step size control chapter equations simulator example env refers scenario physical environment exterior minimal covering system contained stuff water liquid boiler contained stuff water gas boiler contained stuff water gas superheater contained liquid water liquid boiler pressure bottom boiler volume water liquid boiler non thermal gas water gas boiler non thermal gas water gas superheater pressure mass fluid flow env boiler water liquid env boiler fluid flow boiler sh water gas boiler superheater fluid flow sh env water gas superheater env inviscid env boiler inviscid boiler sh flow rate pressure inviscid sh env boiling boiler water superheater process superheater compositional modeling furnace operations furnace heat rate fa mixture fa ratio fa peak efficiency 
furnace boiler connected boiler furnace heat rate boiler heat rate furnace total fa intake furnace total intake fuel intake air intake furnace fa ratio furnace fuel intake total intake furnace running lean furnace heat rate fa ratio furnace running rich furnace heat rate fa ratio fig summary scenario model composed response query furnace fuel air ratio affect amount steam flowing superheater 
gathered scenario model minor processing get form expects 
currently restrict quantitative analysis concern single operating region equations hold time restriction soon add techniques internal consistency tests long check validity assumptions course problem solving verify simulation model depends qualitative quantitative consider turn weak nature qualitative information detect internally inconsistent model 
answer simple envisionment empty model inconsistent states behavior possible example imagine string attached ceiling tied block suppose block initially held close ceiling string hanging loose released happens string taut 
string assumed inelastic forbus ds fa ratio furnace ds heat rate furnace ds heat rate boiler ds mass water gas boiler ds pressure water gas boiler ds flow rate pi fa ratio fa peak efficiency furnace superheater exhaust fu air air heat production fia fig 
furnace fuel air ratio affect amount steam flowing superheater 
block instantaneously deceleration violates continuity transition ruled 
falling block arrive reach asymptotic approach ruled qp theory entire modeling environment ruled inconsistent hand string assumed elastic block decelerate interval time come rest 
validate quantitative model checking see behavior predicts violates assumptions gather set critical inequalities represent operating assumptions model simplifying assumptions 
example incompressible flow assumption requires flow mach number ratio speed sound time simulation incompressible flow assumption mach number exceeds modeling environment deemed inconsistent inconsistency discovered process repeated new specific information inconsistent modeling assumptions cf 
dependency directed backtracking returning scenario model derived previous section fig 
produces qualitative envisionment describing various ways furnace fuel air ratio affect amount steam flowing superheater furnace heat production function fuel air query example included operating assumptions constrained envisionment amount fluid container greater zero pressure fluid env pressure boiler enabling flow pressure steam boiler pressure steam superheater steam superheater pressure steam env heat rate furnace 
ratio air low fuel high lowers combustion efficiency ideal fuel air ratio corresponds point peak heat production case furnace operating suboptimal low region fig 
shows resulting perturbation fuel air ratio increased briefly increase results increased heat production results increased steam production increased boiler steam pressure leading increased flow steam superheater model inconsistencies detected envisionment query answered model formulation stops 

tutorial question answering steam plant compositional modeling motivations building comprehensive multi perspective models support construction intelligent tutoring systems consequently focus problem appropriate model answer questions instructional setting ultimate goal develop generic tutoring system theory appropriate user interface produce reasonable explanations manner task excellent testing model composition algorithm unreasonable expect students know internals domain model simplifying assumptions reasonable 
far generic tutoring toolkit focused developing organizing principles models anda method composition rudimentary natural language explanations sections follow generated automatically queries expressed conjunction modeling terms procedures tuned specific types questions turn compute conjunction modeling terms qualitative queries extensive operating assumptions avoid expense unconstrained envisioning limitations able efficiently domain theories order magnitude larger previous ones test domain developed multi grain multi perspective domain theory subset engineering thermodynamics answer questions steam powered propulsion plant principles described crucial managing model complexity domain model predominately qualitative quantitative aspects extended represents primary areas coverage see fig 
set elementary models treat steam plant closed thermodynamic cycle 
energy flow ontology internals ofthe propulsion cycle need considered heat falkenhainer forbus volumetric properties contained pressures liquid flows fig 
differing views propulsion plant thermal properties temperatures thermal mixing pv flows system flows useful describing global properties ofa thermodynamic system efficiency second set elementary models focuses specifically boiler assembly parts furnace boiler superheater represent furnace explicitly including effects fuel air ratio heat production rate efficiency include fault models boiler furnace enabling consideration boiler full empty operating plant important keep water level certain range low boiler melt high water superheater 
steam moving superheater faster sound water cause tremendous damage largest set models describe various aspects mechanics thermodynamics fluids contained stuff ontology include fluid paths fluid heat flows pumps containers portals major claim compositional modeling facilitates creating larger domain models 
support claim requires comparing model previously developed models difficult way reduce model fragment simpler horn clauses treat horn clauses axiom equivalents measure domain model corresponded axioms contrast earlier qp models thermodynamics axioms domain models published date best known hayes naive theory theory consisted axioms complex logical forms assuming generous multiplier translate horn clauses model liquids compositional modeling sense algorithm focuses analysis gained comparing size fully instantiated steam plant model size model created query 
fully instantiating steam plant model model fragments 
introduce quantities examples show algorithm provides significant filtering 
qualitative questions domain model canbe answer variety questions qualitative models plant plant efficiency affects efficiency plant 
efficiency plant affected positively rate turbine affected negatively energy input plant quantities inequalities model fragments situations questions affects parameter viewed request qualitative model includes qualitative constrain named parameter query model composition algorithm simply parameter quantity efficiency steam plant expect simplest model includes efficiency plant explicit parameter 
plant efficiency introduced closed thermodynamic cycle model fragment conditioned assumptions consider exists plant consider energy flow plant modeling environment generated model composition algorithm simply assumptions applied steam plant produce coherent scenario model query closed thermodynamic cycle model turn forces consideration steam plant main components boiler heat source compressor heat sink turbine sink creating respective heat rates example shows importance system boundaries potentially consisted roughly axioms models molle chemical processes appear roughly size hayes model previous models 
falkenhainer forbus plant affects efficiency clearly level detail appropriate high level query 
finding mass flows 
mass flows flow water feed pump 
flow steam turbine 
flow steam boiler turbine 
flow water feed pump boiler quantities inequalities model fragments situations questions occurrences processes specific process instance set process instances transformed model composition set terms name processes satisfying input pattern union liquid flow gas flow processes sought modeling environment query considers existence steam plant main components boiler assembly turbine assembly assembly pump assembly adopting contained stuff ontology geometry thermal information ignored flows assumed inviscid exactly choices minimize amount extraneous detail demonstrating system ignore perspectives contribute answering query 
causing black smoke rise furnace 
black smoke rising furnace case fuel air ratio furnace saturation point furnace quantities inequalities model fragments situations domain model includes black smoke individual view describing possible furnace due fuel air ratio rich interesting question reasons black smoke means ship burning fuel efficiently bad economically 
second pouring black smoke thing wish seen 
questions required instance individual view hold treated questions instances processes query consists term terms designating view instance modeling environment query considers existence furnace isolation rest system contained stuff consider exhaust type furnace 
quantitative question hi compositional modeling fig oil supply connected central reservoir 
find level containers function time system released initial conditions ontology view question fact fault algorithm included additional assumption normally fault assumptions included lead extra complexity ia model 
example shows fault assumptions included automatically necessary model organized properly 
describe la quantitative analysis problem concerning hypothetical set tanks pipes oil supply drums connected central reservoir shown fig 
task determine behavior oil level cani system released initial condition current fluid flow models represent various simplifications ofthe bernoulli equation describes incompressible flow streamline gz ht dens ty fluid zi height point fluid velocity point hi head loss due frictional effects currently unsteady bernoulli equation subsumes steady unsteady flow cases falkenhainer forbus odo odo odo eve oll liquid level oil cem level oll liquid odo odo odo time moo odo odo odo odo odo odo odo od fig 
behavior predicted laminar flow model 
fluid cs scenario consider exists cani consider geometric properties consider laminar consider laminar pipe consider incompressible flow consider incompressible flow pipe re pipe re pipe odo odo odo odo time computation friction dependent flow regime laminar turbulent normally determined reynolds number re low reynolds numbers low flow rates flow laminar high reynolds numbers high flow rates flow turbulent transition occurs interval flow pipes generally taken laminar quantitative fluid flow model dependencies initial modeling environment problem object expansion step extends consider 
candidate completion procedure left final decisions 
initial conditions information flow velocity reynolds number pipe selects simplest options laminar flow friction factor inversely proportional reynolds number re behavior predicted model shown fig 

left plot shows level container function time right plot shows reynolds number flow 
point system inspects predicted behavior finds compositional modeling modeling environment violation reynolds number pipe reached violating laminar flow assumption pipe model composition procedure repeated added information producing new set flow regime assumptions laminar pipe consider turbulent pipe modeling environment models flow pipe flow pipe turbulent moody approximation compute friction factor turbulent flow new model predicts lower amplitude oscillation flow pipe due greater dissipative effects turbulent flow note reynolds number pipe exceeds laminar flow assumption pipe remains consistent demonstrates important attribute compositional modeling approach 
representing modeling assumptions predications individual objects scenario model able represent type phenomenon different ways depending individual conditions 
ability crucial analyzing large systems 
related research automatically formulating model response query relatively new 
number methods developed managing switching multiple models inspiration comes sussman slices notion results multiple perspectives combined synthesizing engineered systems 
sussman system language specifying perspectives dependent electronic circuits instantiation decisions hand techniques aim automate decision making process phenomena expressible modeling language closest graph models gom effort penberthy gom approach space possible scenario models represented explicitly graph 
node represents model system analyzed edge indicates approximations differ models connects space possible models gom observation graph models task find model predictions sufficiently close observation sufficiently close evaluated user 
search begins simplest model moves new model prediction fails match observation guided rules stating approximation qualitative effect model predicted behavior 
falkenhainer forbus ways gom addresses restricted version model formulation problem models differ approximations modeling dimensions perspective granularity currently considered second query provided graph available models assumed priori coherent relevant third approximations global applying differently different subsystems model 
hand gom introduces generalpurpose technique selecting approximations rest presupposition explicit set constraints delimit approximation valid 
domain models detail gom incurs exponential increase storage compositional modeling explicitly store consistent possible combinations assumptions places model developer identify consistent combinations assumptions advance reasoning contrast model composition algorithm constructs combinations needed task demands builder compositional domain model easily fragments model independently believe differences advantages compositional modeling gom approach important insight efficiency improved explicitly noting understood combinations domains tasks may done compositional models grain size model fragments domain modeler 
interesting aspect gom ability reason changing approximations qualitatively affects model observation discrepancies 
weld presents elegant extension specialized class approximation assumptions 
weld approach domainindependent depend presence ofan explicitly predefined graph believe easily adapted compositional models 
particular set modeling assumptions specify scenario model perturbed individually generating adjacent alternatives repeating candidate completion procedure 
davis system model diagnosis digital circuits multiple levels structural descriptions control search specifically ability rule candidates level reduce unmanageable search space moving detailed structural levels final diagnosis 
respects grain assumptions system distinctions similar able focus individual objects system easily require fixed hierarchy finer grained models general issue specifying theories having different abstractions approximations perspectives concern areas research efforts focused specifying relationship set models example different models cooperative fashion moving microscopic macroscopic ontologies changing time scales fishwick presents classification abstraction methods associated techniques mapping abstraction level 
growing area interest automatic reformulation theory equivalent simpler theory techniques aggregation compilation re representation techniques specifically aimed analyzing physical systems include aggregation discrete cyclic events continuous processes aggregation variables representing dynamic systems generating models timescales 
discussion compositional modeling capturing expertise human engineers require developing largescale multi grain multi perspective models physical domains techniques allow flexibly efficiently applied broad range tasks 
attempt computers automate engineering tasks problems effective model organization task relevant formulation paramount 
believe compositional modeling strategy described important step understanding build kinds domain models sought developing compositional domain models model fragments distinct scenarios techniques domain independent requiring modeling language rich express amodel dependence structural setting modeling assumptions operating conditions importantly showed burden developing model specific task carried simple atms algorithm pieces domain model explicit modeling assumptions relevant model task generated automatically assuming information kinds entities properties appear desired analysis believe insulation analyst details domain model model composition algorithm provides important tutoring tasks obviously necessity student knowledge domain sufficient select appropriate simplifying assumptions little need tutor believe expert engineers benefit allowing model composition algorithm share burden finding right foundation analysis engineer task simplified specify just intent clear leave rest mechanical assistant second practice falkenhainer kd finds models underlying assumptions part model conflict part automatic selection set explicit simplifying assumptions help ensure consistently analysis additional research issues view important step understanding solving model formulation problem 
progress required making strong simplifications ignoring important aspects problem 
section consider number open problems current compositional modeling framework 
decomposing scenario probably limiting simplification presupposition decomposition scenario taken single strict part hierarchy systems limitation severe example evident low levels detail structural descriptions plants chemical plants 
depth detail structural descriptions increases domain models include richer functional vocabularies problem choosing appropriate frame acute aspect problem ability automatically form control volumes see initial area dynamics concept ofp component qp theory provides definition potentially help constructing reasonable system boundaries general determining appropriate system boundaries require sophisticated representations geometry current domain models intermediate step extend current approach set possible groupings input allowing multiple tangled hierarchies consequence moving tangled hierarchy need unique minimal covering system possible existing model composition algorithm extended tangled hierarchies require technique mapping types clusterings needed answer constraints paths hierarchy ensure coherent view ofthe scenario 
improving query analysis current query analysis technique recognition terms query provide significant constraint identifying appropriate set modeling assumptions associated model fragments 
essentially syntactic approach compositional modeling important step ability reason information requirements ofthe information provided models syntactically right terms provide behavioral distinctions needed answer query 
possible determine prior model 
general case answer probably similar solving planning problems search solutions restricted classes probably possible example consider analyzing spring block oscillator asking question 
clearly model ignores dissipative sufficient estimating cost optimally answering query requires sophisticated measures utility aspect capturing accuracy requirements query information loss introduced simplifying assumptions discussed partially section aspect evaluating computational cognitive cost ofa model 
ordering scheme described section simplistic assumption assumption classes cost order magnitude order magnitude general different approximations widely different computational consequences dropping term polynomial versus enabling closed form solution know general mechanism estimating cost equational model 

reasoning approximations approximations introduce error understood approximations region validity delimited explicit constraints parameter values reynolds number modulus mach number limitations constraints known cases second constraints rules thumb typical case task requirements commonly weld general techniques selecting suitable approximations reasoning qualitative prediction observation differences 
utility focusing qualitative differences unclear particularly potential search cost 
falkenhainer shirley currently investigating alternate approach problem 
central intuitions accuracy requirements task explicit approximation selection function approximation cost savings accuracy loss expensive simply approximations seeking ways generalize successful problem solving episodes system approximations improve experience falkenhainer settings little known model accuracy range applicability experimental evaluation required model formulation blends theory formation revision methods repairing model diverges observation described important aspect modeling process ultimately integrate empirical techniques compositional modeling framework 
focused lazy instantiation current implementation fully instantiates set applicable model fragments scenario consults ground dependencies query scenario large scenario diverse domain theory result huge dependency structure alternate approach query guide instantiation instantiate little domain theory possible additional constraints explored include determining ontology objects required directly query instantiating elements consistent resulting partial modeling environment 
manner question control volumes selected set objects avoid instantiation lagrangian views entire scenario enforcing additional control rule instantiation mechanism triggering rules antecedents hold merely database rules self contained clusters relevance 
optimizing model composition human tutors rarely resort principles reasoning perspective answering student questions similarly engineer designing third distillation plant pretty idea sequence types models required achieving efficient compositional models applications need caching models acquiring knowledge common patterns usage explanation learning analogical reasoning promising ways acquire knowledge 
authors wish brian williams dan weld mark stefik mark shirley sanjay mittal johan de kleer danny bobrow productive discussions john collins provided valuable commentary technical assistance significant portions thermodynamics model developed collaboration john collins mark shirley providing runge kutta code turn obtained sacks 
research supported part national aeronautics space administration contract nasa nag office naval research contract nsf presidential young investigator award compositional modeling penberthy reasoning assumptions graphs models proceedings ijcai detroit mi penberthy graphs models artif intell 
volume weld multi level modeling populations fourth international workshop qualitative physics lugano switzerland benjamin ed change representation inductive bias kluwer dordrecht netherlands 
collins building qualitative models thermodynamic processes proceedings workshop qualitative reasoning stanford ca collins forbus reasoning fluids molecular collections proceedings aaai seattle wa crawford farquhar kuipers qpc compiler physical models qualitative differential equations proceedings aaai boston ma davis diagnostic reasoning structure behavior artif 
intell 
de kleer assumption tms artif intell 
de kleer problem solving atms intell fill de kleer brown qualitative physics artif intell 
keller mostow eds working notes automatic generation approximations abstractions workshop boston ma falkenhainer learning physical analogies study analogy explanation process ph thesis tech report uiucdcs university illinois urbana champaign il falkenhainer forbus setting large scale qualitative models proceedings aaai st paul mn fishwick role process abstraction simulation ieee trans syst 
man cybern forbus qualitative process theory artif 
intell 
forbus qualitative process engine weld de kleer eds readings qualitative reasoning physical systems morgan kaufmann san mateo ca forbus de kleer focusing atms proceedings aaai st paul mn forbus falkenhainer self explanatory simulations integration qualitative quantitative knowledge proceedings aaai boston ma forbus stevens qualitative simulation generate explanations proceedings third meeting cognitive science berkeley ca fox mcdonald fluid mechanics wiley new york rd ed falkenhainer kd forbus technology prentice hall englewood cliffs nj hamscher temporally coarse representation behavior model troubleshooting digital circuits proceedings ijcai detroit mi hayes naive physics ontology liquids hobbs moore eds formal theories ofthe commonsense world ablex norwood nj iwasaki causal ordering mixed structure st paul mn iwasaki formal basis commonsense abstraction dynamic systems proceedings aaai st paul mn simulator nonlinear networks proc 
ieee kuipers qualitative simulation artif intell 
kuipers abstraction time scale qualitative simulation proceedings aaa seattle wa kuipers incomplete quantitative knowledge qualitative reasoning st paul mn liu anda farley shifting ontological perspectives reasoning physical systems boston ma mcallester outlook truth maintenance memo mit cambridge ma mittal andb 
falkenhainer dynamic constraint satisfaction problems proceedings aaai boston ma molle qualitative simulation chemical processes tech report ai laboratory university texas austin tx murray porter controlling search consequences information knowledge integration proceedings sixth international workshop machine learning nagel spice computer program simulate semiconductor circuits tech report ucb erl electronics research laboratory university california berkeley ca press flannery teukolsky andw vetterling numerical recipes cambridge university press cambridge explanation theory revision approach problems incomplete incorrect theories ph thesis tech report eng university illinois urbana champaign il koo qualitative reasoning microscopic theories proceedings aaai boston ma reiter closed world data bases gallaire minker eds logic data bases plenum new york sacks hierarchical reasoning inequalities seattle wa shirley falkenhainer explicit reasoning accuracy approximating physical systems working notes generation abstractions workshop simmons commonsense arithmetic reasoning proceedings aaai philadelphia pa forbus qualitative quantitative reasoning thermodynamics proceedings eleventh annual conference cognitive science society ann arbor mi sleeman brown intelligent tutoring systems academic press new york stallman sussman forward reasoning dependency directed backtracking system computer aided circuit analysis artif intell 

compositional modeling sussman steele jr constraints language expressing descriptions artif intell 

sussman slices boundary analysis synthesis ai lab memo mit cambridge ma van ed change representation problem reformulation workshop informal proceedings menlo park ca 
weld aggregation causal simulation artif intell 
weld approximation reformulation proceedings aaai boston ma welty wilson fundamentals heat mass transfer wiley new york nd ed wenger artificial intelligence tutoring systems computational cognitive approaches communication morgan kaufmann los altos ca williams qualitative analysis mos circuits artif intell 
williams minima symbolic approach qualitative algebraic reasoning proceedings aaai st paul mn 
