behavioral model composition simulation design sinha student member ieee paredis member ieee pradeep khosla fellow ieee institute complex engineered systems carnegie mellon university pittsburgh pa usa department electrical computer engineering carnegie mellon university pittsburgh pa usa email cs cmu edu simulation design framework simultaneously designing modeling electromechanical systems 
instantiating component objects connecting ports designer configure complex systems 
configuration information automatically generate corresponding system level simulation model 
building block framework component object 
encapsulates design data behavioral models inter relationships 
component objects composed systems connecting ports 
converting system configuration corresponding simulation model corresponding models component objects capture physical phenomena component interfaces interactions 
obtain accurate composition interaction dynamics captured behavioral models 
introduce concept interaction model captures dynamics interaction 
ports connected intended interaction components 
composition component objects interaction model introduced pair connected behavioral models 
illustrate ideas example 

motivation realization new devices characterized shortening times market increasing customer demand improved quality 
business environment important able design test behavior products having resort expensive time consuming physical prototyping 
virtual prototype hand enables designers test design specifications met performing computer simulations experiments physical prototype 
virtual prototyping design verification faster expensive provides designer immediate feedback design decisions 
turn promises comprehensive exploration design alternatives better performing final design 
fully exploit advantages virtual prototyping simulation models easy create 
mathematical modeling virtual prototypes evolved time 
early simulation languages continuous system simulation language 
models written sequential procedures implied fixed mathematical causality 
implemented monolithic pieces software separation model solver 
subsequently object oriented principles applied systems modeling result models easier create reuse share 
causality assignment performed automatically solver independent model 
product design methodology closely coupled modeling methodology 
evolution seamless integration design simulation introducing idea component object :10.1.1.27.3748
contain configuration information behavioral models design data 
connected component objects ports shown 
framework virtual prototype created component objects interconnected 
implemented framework composition simulation design software 
connecting component objects ports sufficient create complete system level model 
behavioral models component object connected 
show subsequent sections merely making connection modeling ports result incorrect model cases 
configuration modeling component connection component interface contained behavioral model interface composition operation component objects successful generating system level virtual prototype component interaction models required 
introduce idea component interaction models connect behavioral models interconnected component objects 
interaction models capture physical dynamics interfaces components 
presents framework supports representation modeling organization interaction components 

related component port behavior port interface contained behavioral model interface related literature classified categories configuration design software engineering port reconfigurable models 

configuration design software engineering behavior port 
design process configuration components selection behavioral models components connections 
framework driven configuration components contain analysis models 
time framework incorporate optimization capabilities restrict analysis single configuration time 
configuration studied context design specification 
port composition describe hierarchical configurations complex engineering design specifications 
zeigler developed devs framework modeling simulation hybrid systems 
motta zdrahal look solving parametric design problems configuration 
gandhi robertson extend ideas incorporating analysis models configuration model 
configuration plays important role component software engineering 
components describe specific software services ports connect components 
researchers type systems enforce rules governing software component composition 
ideas software ports define feature ports components define type systems govern ports engineering design simulation 

port reconfigurable models software design methodology object oriented programming applied systems modeling benefits simplified model creation maintenance 
important principle object oriented programming information hiding encapsulation object accessed public interface independent underlying implementation 
principle applied modeling making clear distinction physical interactions object environment interface internal behavior implementation 
advantage encapsulation system modeled composing connecting interfaces sub systems independently implementations subsystems 
framework interaction models selected automatically depending ports interacting 
addition multiple interaction models relate interacting ports depending desired level abstraction 

entities framework section introduce design entities framework ports component objects behavioral models interaction models parameters 
describe interaction models important creation correct system level models 

ports port descriptor location boundary component component interacts environment 
ports represent point interactions port represents distributed interaction lumped port 
types interaction range descriptions connection semantics case ports configuration level exchange mass energy information case behavioral models :10.1.1.27.3748
port separate interaction point type port matches type exchange 
types ports framework configuration ports modeling ports 
relations particular configuration port corresponding modeling ports 
example gear widget widget 
ports component object 
configuration port related corresponding mechanical modeling port 

configuration ports 
configuration ports capture connection semantics component environment 
example dc motor component ports electrical ports shaft port stator port 
electrical ports correspond electrical connectors motor shaft port rotor stator port stator 
gear component ports teeth shaft 
gear shaft port connected motor shaft port related mechanical modeling port provides transform rotational axis gear 
gear teeth port connects gear teeth port form gear pair provides information number teeth gear pitch radius feature port 
configuration ports aggregated form complex ports 
ports aggregated higher levels abstraction 
aggregate port types component interfaces describe high level connections components 
example connection train component track component thought connection aggregate ports capture physical interactions components 

modeling ports 
connections behavioral models represented connections modeling ports 
connection imposes constraints variables modeling port 
connection simple energy mass ports mechanical electrical thermal hydraulic ports constraints equivalents kirchhoff voltage current laws electrical circuits 
signal ports constraint equates value signal connection 

port representation 
ports form basis framework 
part interfaces component objects component interactions behavioral models 
previous sections defined port discrete point interaction component environment 
definition port spatial quantum interaction framework 
specific physical location interface exactly port 
location organizing principle port 
geometry material properties location important features port 
model location cad feature material properties set defining characteristics name physical properties 
important feature intended port 
feature captures intended functions port defined designer 
energy informational domains port contained feature 
addition special compatibility constraints connections port specified 

component objects design processes target device designed predefined modular parts 
processes parts called components selected configured assembled way design specifications met 
component object modular design entity complete specification describing may connected component objects configuration 
example dc motor component shaft connect drive train bolts platform 
shaft bolts collectively form ports interface component 
shown component object instantiated design specifying instantiation parameters describe specification 
instantiated connected instantiated component objects ports 
simulating design designer selects behavioral models describe physical behavior cad models specify may manufactured visualized 
configuration created components connected interfaces 
component encapsulate configuration components allowing hierarchical description systems 
multiple configurations represent particular component bound configuration interface component 
example dc motor represented single component configuration stator rotor component 
candidate configurations equivalent specifications component choice configuration independent choices behavioral cad models 
component configuration interface instantiation parameters cad model container component connected components configuration ports 
example consider configuration dc motor component connected gear component 
dc motor component ports rotor shaft stator gear component ports gear teeth gear shaft hole 
connection established connecting rotor shaft port motor gear shaft hole port gear ports explained section representation 
configuration ports example defined terms information available semantics connection establish 
configuration ports related modeling ports modeling layer 
modeling ports interface behavioral models related component 

behavioral models configuration behavioral model container cad specification 
components may encapsulate configurations sub components 
behavioral models capture mathematical description physical informational behavior component 
scope research consider models consist differential algebraic equations continuous time phenomena discrete event systems specifications devs 
behavioral model interface default executable content interface content maps 
behavioral model container containing behavioral models 
behavioral models describe physical informational behavior component 
behavioral models composed behavioral models port modeling paradigm :10.1.1.27.3748
component object contain multiple behavioral models different levels detail 
example dc motor component contain family mechanical behavioral models 
model capture kinematic constraints rotor stator include non linear friction models 
behavioral models stored behavioral model container 
container separated parts family interfaces family implementations particular models set tuples enumerate correspondences interfaces implementations 
tuples default map determines default interface implementation behavioral model 
implementation typically mathematical description devs behavior component 
behavioral models framework represented modelica simulation language 
addition describing internal component dynamics behavioral models describe physical phenomena act components component interactions 

interaction models designer composes system components connects configuration ports components 
doing designer explicitly indicates intended interaction connected components 
connections represent physical phenomena occur component interfaces 
resistor capacitor ac source pins connected form circuit 
correspondence circuit connections connections behavioral models 
correspondence modeled kirchhoff current voltage network laws resulting correct system level model 
mechanical domains merely connecting corresponding behavioral models results rigid connection components 
shaft connected bearing 
applying kirchhoff network laws connection point results positions equal generalized forces summing zero 
implies rigid joint shaft bearing incorrect 
introducing interaction model captures dynamics interface shaft bearing solves problem 
depending type configuration ports connected candidate interaction models chosen automatically 

composition behavioral models electrical mechanical domains 
composition occurs application kirchhoff laws 
applying kirchhoff laws results incorrect rigid joint 
finite number possible interaction model interfaces represent connection configuration ports 
general candidate behavioral ports configuration ports respectively space behavioral model interfaces representing component interaction upper bound interaction model container set 
example consider gear components 
designer connection gear ports configuration level container interaction model instantiated modeling layer 
container holds possible behavioral models represent interaction 
searching library interaction models populates container 
example possible models gear interaction models 
parameters interaction inferred resistor capacitor shaft ac source bearing gear radii number teeth pressure angle gear configuration port geometric reasoning cad data component 
potentially large number behavioral models interaction model container models may closely related 
gear interaction models closely related interface slightly different dynamics 
choice particular model container depends nature simulation experiment performed 
gear interaction models gear interaction container 
simple kinematic gear interaction model mechanical ports 
complex gear interaction model kinematics frictional dynamics 
model may preliminary design highlevel simulation needed 
second model gear interaction gear interaction gear interaction mechanical modeling port 
interaction model container set reconfigurable models 
example container lists possible behavioral models interaction 
ac shaft bearing kirchhoff laws correct model kirchhoff laws rr rr rigid joint incorrect model design process detailed simulation performed 
models valid choices possible alternatives interaction model container connection 
capability allows designer encapsulate ports ports create multiple levels abstraction interaction models design 
level ports interaction models information richness sufficient current abstraction level 
allows designer create simulate virtual prototypes complex hierarchical devices selecting connecting components interfaces 

representation parameters component family completely specified parameters provided 
example consider family resistor components parameterized resistance parameter 
value resistance parameter provided resistance component instantiated configuration 
call parameters instantiation parameters 
instantiation parameters related parameters behavioral models 
particular cad features cad specification component parametric input behavioral model 
example family gear components contain parametric cad model specification gear parametric behavioral model 
cad model parametric teeth features number teeth pressure angle parameterize behavioral model 

example illustrate concepts developed previous sections example complex mech port train elec port track signal port train aggregate port track 
abstraction train track interaction 
block represents component configuration layer circle represents port component interface 
electromechanical system train system 
interest brevity focus interactions focus interaction train track 
real world train track interaction may hundreds physical informational interactions train track mechanical interactions train track electrical power flows command signals sensor signals shown 

configuration framework supports configuration components virtual prototype instantiating connecting 
step select components constitute virtual prototype 
highest level abstraction model train track interaction train component interacting track component 
select train track component 
early design cad models available designer provides parameter values mass moment inertia designer connects train component track component train track interaction aggregate port 
configuration complete component interfaces connected designer proceeds modeling layer select behavioral models 

modeling modeling layer high level train track interaction model automatically selected instantiated nature connected ports 
interaction model container behavioral model describe interaction train track 
choice behavioral model depends design stage requirements simulation 
stage early conceptual design particular behavioral model chosen simple newton euler mechanical model train track interaction port mechanical port interaction model considers mechanical translation train track bottom right 
modeling complete possible simulate virtual prototype translating behavioral models modelica evaluating commercial modelica simulator 

refinement configuration obtain realistic simulation designer decides refinement necessary train component 
requires elaborating train component train track interaction control wheel interaction model rolling friction rolling friction rolling friction rolling friction electrical positive electrical negative configuration layer selecting refined models modeling layer 
new configuration developed train component 
train instantiated cad model parameter 
track component instantiated cad model parameter 
train component configured composition sub components dc motor drive train body component control system component 

refinement modeling train track interaction translation model 
train track interaction model container captures candidate interaction models model connection train track 
developing corresponding behavioral model models chosen sub component train component track component 
stage detailed conceptual design mechanical model body train simple motor train control system drive train train body train track interaction mechanical port dc electrical port train control port track 
high level component configuration single car train interacting track 
block represents component circle represents port component interface 
lines represent non causal connections arrows represent directed connections 
translational newton euler model dc motor model added convert electrical mechanical energy drive train model increases torque output motor simple gear interaction model 
train track interaction port refined connected high level component 
ports control port mechanical port dc electrical port 
train modeled cad detailed solid object interaction model top left automatically derived geometry 
parameter extraction engine examines current cad model train track components obtains material properties wheel geometry uses look table obtain friction coefficient coulomb friction model 
provides necessary information complete system model evaluate modelica solver 

discussion example abstraction configuration modeling layer 
abstraction serves important purpose reduce amount detail designer focus high level modeling decisions dealing small details 
framework supports automatic interaction model selection instantiation 
automation allows designer focus important tasks configuration cad behavioral model parameter assignment accurately capturing intended interactions components configuration 
automation maintains consistency cad parameters behavioral representations 
separation interfaces content models behavior configuration added advantage encouraging standardization reuse models design projects 
port modeling paradigm imposes constraints types models defined 
particular interactions component objects limited discrete locations interfaces 
works energy exchange accurately modeled restricted interfaces 
framework supports type interaction model 
distributed interactions captured framework 
discrete location surface interface involved interaction 
entire surface represented aggregate configuration port 
field interactions gravity interaction involve physical location component object interacting physical location component object 
case interface extends entire mass component object 
component objects decomposed subcomponents interaction involves subcomponents 
difficult represent framework 
certain interaction phenomena mechanical collisions appear disappear dynamically course simulation 
current port modeling paradigm restricts configurations static unchanging duration experiment 
dynamic case capture possible connection component objects create maximal configuration turn connections active time step simulation possibly result large number interaction models 

summary framework designers create virtual prototypes electromechanical systems configuring components simultaneously selecting assigning cad parameters behavioral simulation models 
generate system level behavioral models component configurations behavioral models individual components need combined behavioral models interactions components 
introduced mechanism extract interaction models automatically matching component ports 
framework supports designer design process providing mechanisms abstraction automatic model selection model reuse 
acknowledgments research funded part transportation systems national science foundation cise pennsylvania infrastructure technology alliance institute complex engineered systems carnegie mellon university 
allen garlan formalizing architectural connection th international conference software engineering sorrento italy 
anderson object oriented modeling simulation hybrid systems department automatic control 
lund sweden lund institute technology 
cellier object oriented modeling means dealing system complexity th meeting systems control netherlands 
formal framework software architectures institute information technology national research council ottawa canada erb nrc december 
heinrich meyer system design reusability artificial intelligence engineering design analysis manufacturing vol 
pp 

fishwick integrating continuous discrete models object oriented physical modeling western simulation multiconference phoenix arizona 
lee xiong system level types component design university california berkeley berkeley ca erl ucb february 
elmqvist otter physical system modeling modelica control engineering practice vol 
pp 

motta zdrahal parametric design problem solving th banff knowledge acquisition knowledge systems workshop kaw banff alberta canada 
paredis diaz sinha khosla composable models simulation design engineering computers vol :10.1.1.27.3748
pp 

sinha paredis khosla integration mechanical cad behavioral modeling proceedings ieee acm international workshop behavioral modeling simulation orlando fl usa 
strauss augustin johnson sci continuous system simulation language simulation vol 
pp 

zeigler model management systems acm transactions modeling computer simulation vol 
pp 

zeigler kim praehofer song devs framework modelling simulation analysis design hybrid systems hybrid ii lecture notes cs antsaklis nerode eds 
berlin springer verlag pp 

