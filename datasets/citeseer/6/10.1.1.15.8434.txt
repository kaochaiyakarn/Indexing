pacific association computational linguistics applying machine learning high performance named entity extraction baluja mittal rahul just research henry street pittsburgh pa school computer science carnegie mellon university pittsburgh pa describes machine learning approach build efficient accurate fast name spotting system 
finding names free text important task addressing real world applications 
previous approaches carefully hand crafted modules encoding linguistic knowledge specific language document genre 
approaches drawbacks require large amounts time linguistic expertise develop easily portable new languages genres 
describes extensible system automatically combines weak evidence name extraction 
evidence gathered easily available sources part speech tagging dictionary lookups textual information capitalization punctuation 
individually piece evidence insufficient robust name detection 
combination evidence standard machine learning techniques yields system achieves performance equivalent best existing hand crafted approaches 
keywords 
information extraction machine learning 
spotting named entities text important component tasks information extraction retrieval restoration capitalization single case text avoid accidentally correcting names mistaken misspelled words 
previous research efforts building named entity systems relied carefully hand crafted rules 
impediments wide 
typical hand coded systems specific circumstances envisioned designers 
language users needs evolve time 
secondly unclear additional resources required adapt languages document genres behaved texts ones may misspelled words missing case information foreign words phrases palmer day 
desirable name spotting systems accurate facilitate easy user parameterization 
presents system named entity extraction automatically trained recognize named entities statistical evidence training set 
approach advantages eliminates need expert language specific linguistic knowledge 
automated system users need tag items interest 
users needs change system re learn new data quickly 
second system performance improved increasing amount training data requiring expert knowledge 
third new knowledge sources available easily integrated system additional evidence 
study ir legal domain improvement precision users specifically search names thompson 
pacific association computational linguistics waterloo canada 
background previous previous area largely taken place context message understanding conferences grishman sundheim 
case muc problem finding named entities broken sub problems enamex finding entity names organizations persons locations timex finding temporal expressions dates times numex finding numerical quantities monetary values percentages 
discussed palmer day palmer day tasks simpler 
analysis tasks languages nearly numex phrases identified reliably small number patterns 
enamex suggested difficult sub tasks concentrates solely name detection 
initial finding names carefully hand crafted regular expressions appelt appelt weischedel extensive specialized resources large lists geographic locations people names highly sophisticated rule linguistic approaches parsing morgan gaizauskas 
approaches rely manually coded rules large lists systems extremely expensive develop maintain 
variety name detection algorithms proposed literature mention incorporate strong machine learning component 
best known systems nymble bikel statistical system hidden markov model hmm rabiner 
nymble reported score 
nymble approach effective requires large computational resources 
system machine learning techniques similar slightly lower performance alembic relies rule sequences aberdeen 

knowledge sources determine token name system uses evidence gathered variety sources 
main consideration deciding information sources difficulty associated creating maintaining appropriate resources 
example large manually generated lists people business names tedious compile require large amounts maintenance 
second consideration learned model easily adaptable different genres writing 
example news wire documents display different characteristics business informal letters 
rapid adaptation different genres requires model easy re train extensive genre specific knowledge sources 
final pragmatic choice keep learned models extremely small 
knowledge sources broadly divided categories 
features derived knowledge sources discussed subsections 

word level features language genre specific cues exploited provide evidence name detection 
instance english names typically capital letter 
cues computationally inexpensive shown section surprisingly reliable 
word level features chosen potentially useful sources evidence 
system automatically learns features correlate strongly names machine learning named entity extraction uppercase initial caps numbers alphanumeric single char single token character single token character 
individually local word level features effective strongest individual feature caps flags tokens training set consists total tokens names 
names rest non name acronyms ceo pc yielding score precision recall 
initial caps similar flagging words names leading score precision recall 
note capitalized words names names capitalized van gogh 
problem particularly acute foreign languages chinese capitalization spanish location names capitalized german nouns capitalized 
english text capitalization conjunction reliable sentence boundary detection excellent indicator names 
unfortunately discussed reynar ratnaparkhi palmer hearst determining sentence boundaries difficult common boundaries periods question exclamation marks occur different contexts 
example punctuation marks quotations inside parentheses mark sentence 
additionally periods commonly abbreviations decimal points ellipses 
system explicitly contain rules sentence boundary analysis show learns sufficient contextual cues account sentence boundaries 

dictionary look simple heuristic determining particular token name check dictionary 
names valid english words approach help identify potential names 
dictionary study contained words words initial letters capitalized discarded names 
remaining tokens contained multiple morphological variants word decreasing number unique root forms 
number english names part regular vocabulary mark baker stone name detection evidence dictionary reliable score dictionary module training set 

part speech tagger part speech pos tags modules reason roles relative importance words tokens various contexts 
system brill tagger pos tagging brill reports approximately accuracy words wsj corpus tagger brill brill 
performance lower named entity task 
training data tagger obtained score performance name detection task typically measured score van rijsbergen combination precision recall measures ir 
score defined usually set 
studies shown average score manually finding names text approximately grishman sundheim 
comparison scores manually crafted systems gaizauskas sundheim 
dictionary system standard spelling dictionary available unix systems 
version lexical rules contextual rules trained wall street journal wsj corpus linguistic data consortium lexicon words 
waterloo canada aberdeen aberdeen report consistent results 
pos tags features machine learning component system determiner foreign word token tagger seen preposition adjective noun proper noun personal pronoun possessive pronoun verb wh pronoun unknown pos 

punctuation robust determination name name system able capture syntactic information surrounding word classified 
mentioned earlier contextual information necessary disambiguate capitalization cues occur due sentence boundaries 
context candidate token includes surrounding punctuation 
system classifier learns exploit syntactic regularities automatically training data 
section discusses effects varying size contextual window 
consider punctuation marks comma period exclamation mark question mark semi colon colon plus minus sign left parenthesis right parenthesis 

system architecture name spotting system consists components tokenizer classifier 
tokenizer converts text set features knowledge sources previous section classifier decision tree constructed training data information theory quinlan 

tokenizer tokenizer reads free form text creates tokens consisting words selected punctuation marks 
feature vector elements calculated token knowledge sources described section 
features encode binary variables initial caps set token begins capital letter 
described section experiments knowledge sources 
knowledge source features set 
classifier explicitly model syntactic patterns text decision tree learner necessarily induce large number syntactic patterns take account variations numbers tokens appear particular syntactic role 
approach dealing problem collapse adjacent syntactic tokens category single token 
learning system far fewer patterns learn potentially improve results 

decision tree classifier classifier processes evidence candidate token context 
feature sufficient robust classification 
goal classifier automatically combine evidence determine candidate token name 
discuss section tried limited version method collapsing patterns see small improvement performance 
comes expense processing speed discussed length 
machine learning named entity extraction rule comma word dict initial caps noun named entity rule unknown pos proper noun uppercase named entity rule adjective word dict initial caps verb named entity rule proper noun word dict initial caps named entity rule determiner adjective word dict proper noun word dict initial caps alphanumeric comma named entity rule proper noun proper noun initial caps named entity rule uppercase single char colon right paren named entity rule period question proper noun initial caps single named entity rule word dict initial caps named entity rule proper noun word dict numbers named entity rule word dict initial caps preposition word dict initial caps named entity 
sample rules spotting named entities generated 
context considered token left token right 
example tokens order token token token context case token token token token consideration 
illustrate rule states preceding word adjective current token dictionary initial upper case letter word verb token consideration named entity preceding rules apply 
waterloo canada simplest approach treat features inputs statistical regression machine learning procedure 
output target variable manually coded label identifying token name 
shows rules came data set 

experimental results experiments reported conducted training set reuters news articles containing tokens words rest punctuation 
training set included names distinct names 
results reported section obtained running system test set additional articles articles seen system 
test articles contained total tokens words labeled coders names 
section discussed baseline performance individual modules 
simple learning approach system construct list names encountered training set match candidate tokens list testing 
pointed palmer day significantly help name detection 
observations confirmed hypothesis test set contained names unique 
names names appeared training set system simply rely list names built training 
section experimental results system 
experimental procedure follows manually labeled data divided sets training validation testing training set inducing decision tree validation set prevent fitting data validation set error minimized training stopped results measured testing set 
ensure idiosyncrasies data set splitting affect results repeated tests required accurately estimate system performance experiment repeated times different parts data set training validation 
experiment articles training validation 
results measured performance network entirely separate testing set articles 
set experiments examined dictionary part speech word level knowledge sources perform independently 
note punctuation knowledge source experiments 
examine effect context 
line table shows performance part speech tagger part speech information word classified 
second line shows performance context information part speech information word word classified 
third fourth lines show similar context information words word classified respectively 
note context taken regard sentence boundaries 
simplicity number words examined candidate token kept requirement algorithm 
remainder table examines performance part speech tagger dictionary variables features independently 
note performs independently performance improves context increased 
token period may may indicate sentence boundary part context enables system eventually learn rules capitalizing word sentence 
machine learning named entity extraction table 
performance individual knowledge sources effects context 
averaged runs knowledge context accuracy sources words recall prec 
pos pos pos pos dict 
dict 
dict 
dict 
word lev 
word lev 
word lev 
word lev 
set experiments examined pair wise combinations knowledge sources 
note dictionary features combined word level features performs word level features combined part speech tagging 
dictionary part speech tagging perform 
suggests word level features contain information contained sources 
results summarized table 
final experiment uses knowledge sources 
seen comparing results shown tables little difference performance system uses part speech tagger word level features system uses knowledge sources addition dictionary 
better understand individual feature affects performance classifier examine weights features linear regression 
magnitude weights indicate importance input 
positive weight implies respective feature positively correlated candidate token name negative weights negatively correlated manner figures depict weight values trained perceptron context respectively 
attributes figures noticed 
context case features indicative names account capitalization 
demonstrated section pos tagging proper nouns reliable 
reflected medium weight proper noun tag classifier 
notice pos tagger label noun adjective indicative proper names system 
suggests proper name detection tagger experiments reported trained perceptron data set obtained similar results obtained decision trees 
relative weights obtained linear regression indicated trained perceptron useful gaining insight problem 
note graphs shown training runs bias unit hertz 
waterloo canada table 
performance combining knowledge sources effects context 
averaged runs knowledge context accuracy sources words recall prec 
dict 
pos dict 
pos dict 
pos dict 
pos dict 
word lev 
dict 
word lev 
dict 
word lev 
dict 
word lev 
pos word lev 
pos word lev 
pos word lev 
pos word lev 
table 
knowledge sources effects context 
averaged runs knowledge context accuracy sources words recall prec 
misses nouns adjectives labeled names 
largest features proper names word exists dictionary single character 
interesting note context developed token context case 
training articles came reuters news wire stories classifiers learned exploit domain specific idiosyncrasies 
example news articles contain token reuters reuters flagged name training set classifier learns tag candidate tokens parentheses side names 
see weights features example news article 
promising note input features system automatically ignores irrelevant features 
porting system languages genres may obvious features 
system allows add potential features relevant ones automatically selected 
mentioned earlier variability language number syntactic patterns system learn larger learned limited amount training data available 
order learn syntactic context greatest machine learning named entity extraction determiner adjective noun proper noun features context word dict uppercase 
feature weightings knowledge sources context 
positive values signal name negative values signal name 
clarity weights large magnitudes labeled 
uppercase alphanumeric single period single char 
initial caps features word context left paren 
determiner adjective noun proper noun word dict uppercase single char 
initial caps alphanumeric single word word word 
feature weightings knowledge sources word context word classified 
alphanumeric single initial caps left paren 
right paren 
waterloo canada table 
cascaded processing model give improved performance 
algorithm context pass cascaded new york reuters hotel real estate investment trust american hospitality said tuesday agreed acquire hotels hotel management cash stock transaction valued including assumption debt 
portfolio includes owned hotels resorts primarily full service facilities leases hotels management service agreements hotels 
completion deal pending acquisitions hotel resorts portfolio consist owned leased managed serviced properties rooms 
definitive agreement values share 
pay cash percent shares exchange paired shares rest 
paired shares trade jointly real estate investment trusts paired operating companies 
said expects transaction percent funds operations 
said agreement approved boards said expect deal delay closing transaction close year 

example illustrates mistakes system context difficult news stories 
underlined words indicate names successfully detected italicized words mark tokens misclassified names bold words names 
see text details 
concern surrounding placement named entities text carried preliminary experiments folding multiple named tokens single 
training sequences adjacent named entities collapsed single token 
testing adjacent tokens classified nouns pos tagger collapsed single token 
cascaded processing model resulted improved figures system performance match best reported scores machine humans 
table shows results 
emphasized preliminary looking ways syntactic patterns better compressed training usage 
preceding discussion experimental results reported tables machine learning named entity extraction identified benefits drawbacks approach 
gain insight system performance name detection task examining specific failure cases 
presents system output difficult news story 
underlined words names successfully detected italicized words mark tokens misclassified names bold words names missed 
example system failed find names misclassified word name 
noted word appear system dictionary names 
errors simply caused dictionary confusion words occur multiple times document correctly tagged instance 
insights failure feature weightings system restricted context word learns capitalized tokens names tokens appear dictionary preceded period rudimentary sentence detection 

applications browsing interface www immediate application technology implemented specialized interface reading news articles www 
name spotting technology built proxy filtered textual data documents requested browser 
addition colleagues implemented system named entity attempts find official home page entity 
application highlighted important aspect approach 
system detailed parse text fast 
important factor user acceptance fact proxy impose noticeable delays serving pages important 
screen shot news article served proxy shown 
seen named entities document correctly identified home page hyperlink page generated inserted text automatically 
believe machine learning approach described allow users interactively mark text images interest browsers automatically learn filter incoming pages highlight portions interest individual reader 

presents high performance name extraction system machine learning techniques 
achieves performance comparable best name detection systems system rely hand crafted rules large manually created databases names 
presents analysis value different knowledge sources 
different combinations knowledge sources yield widely varying results 
design larger systems address complex tasks important determine knowledge sources provide best discrimination power redundant 
hope extend system tasks 
example plan fulfill complete muc task specifications includes name spotting categorizing names people names location names organization names 
potential name similar functionality pages ahoy attempt thing 
waterloo canada identified cues exploited determine categories belongs 
additionally plan explore hybrid systems approach conjunction traditional parsing techniques 
acknowledgments authors tony initial implementation system termed name japan 
scott fahlman contributed ideas applications 
views document reflect official policies pittsburgh research center just research 
mark designed implemented official home page finder proxy combined name spotting technology home page finder implemented michele banko 

shows acknowledgments processed system 
names correctly identified 
aberdeen aberdeen burger david day lynette hirschman robinson marc vilain 
mitre description alembic system muc 
proceedings sixth message understanding conference muc pages columbia md 
nist morgan kaufmann publishers 
appelt appelt hobbs israel tyson 
fastus finite state processor information extraction real world text 
proceedings ijcai 
appelt appelt hobbs bear israel kameyama kehler martin myers tyson 
sri international fastus system muc test results analysis 
proceedings sixth message understanding conference muc columbia md 
nist morgan kaufmann publishers 
bikel bikel miller schwartz weischedel 
nymble high performance learning name finder 
proceedings fifth conference applied natural language processing pages washington 
acl 

knight ridder information value adding name finder 
variation theme fastus 
proceedings sixth message understanding conference muc columbia md 
nist morgan kaufmann publishers 
brill eric brill 
advances rule part speech tagging 
proceedings twelfth national conference artificial intelligence pages seattle wa 
aaai 
brill eric brill 
transformation error driven learning natural language processing case study part speech tagging 
computational linguistics december 
gaizauskas gaizauskas humphreys cunningham wilks 
university sheffield description lasie system muc 
proceedings sixth message understanding conference muc columbia md 
nist morgan kaufmann publishers 
grishman sundheim grishman sundheim 
design muc evaluation 
machine learning named entity extraction proceedings sixth message understanding conference muc columbia md 
nist morgan kaufmann publishers 
hertz john hertz anders krogh richard palmer 
theory neural computation 
addison wesley publishing reading massachusetts 
yoon adams 
wayne state university description uno natural language processing system muc 
proceedings sixth message understanding conference muc columbia md 
nist morgan kaufmann publishers 
morgan morgan callaghan smith cooper lolita group 
university durham description lolita system muc 
proceedings sixth message understanding conference muc columbia md 
nist morgan kaufmann publishers 
palmer day david palmer david day 
statistical profile named entity task 
proceedings fifth conference applied natural language processing pages washington 
acl 
palmer hearst david palmer marti hearst 
adaptive sentence boundary disambiguation 
proceedings conference applied natural language processing stuttgart germany october 
acl 
quinlan ross quinlan 
programs machine learning 
morgan kaufmann series machine learning 
morgan kaufmann publishers menlo park ca 
rabiner lawrence rabiner 
tutorial hidden markov models selective applications speech recognition 
alex waibel lee editors readings speech recognition 
morgan kaufmann publishers 
reynar ratnaparkhi jeffrey reynar adwait ratnaparkhi 
maximum entropy approach identifying sentence boundaries 
proceedings fifth conference applied natural language processing pages washington 
acl 
sundheim sundheim 
overview results muc evaluation 
proceedings sixth message understanding conference muc columbia md 
nist morgan kaufmann publishers 
thompson paul thompson christopher 
name searching information retrieval 
available computation language print archive xxx lanl gov abs cmp lg june 
van rijsbergen van rijsbergen 
information retrieval 
butterworths london 
weischedel ralph weischedel 
bbn description plum system muc 
proceedings sixth message understanding conference muc columbia md 
nist morgan kaufmann publishers 
waterloo canada 
screen shot browser interface built name spotting technology described implemented context window word speed 
