rediscovering workflow models event data little thumb weijters weijters tm tue nl van der aalst aalst tm tue nl department technology management eindhoven university technology box nl mb eindhoven netherlands contemporary workflow management systems driven explicit process models completely specified workflow design required order enact workflow process 
creating workflow design complicated time consuming process typically discrepancies actual workflow processes processes perceived management 
propose technique rediscovering workflow models 
technique uses workflow logs discover workflow process executed 
workflow log contains information events place 
assume events totally ordered event refers task executed single case 
information easily extracted transactional information systems enterprise resource planning systems sap baan 
rediscovering technique proposed deal noise validate workflow processes uncovering measuring discrepancies prescriptive models actual process executions 
keywords process mining workflow mining knowledge discovery petri nets 
decade workflow management concepts technology applied enterprise information systems 
workflow management systems staffware ibm mqseries cosa offer generic modeling enactment capabilities structured business processes 
making graphical process definitions models describing life cycle typical case workflow instance isolation configure systems support business processes 
pure workflow management systems software systems adopted workflow technology 
consider example erp enterprise resource planning systems sap baan oracle crm customer relationship management software example field web services 
web services composition languages bpel ws bpml xlang wsfl wsci adopted workflow concepts 
despite promise problems encountered applying workflow technology 
indicated authors workflow management systems restrictive problems dealing change 
workshops special issues journals devoted techniques workflow management flexible 
research area devoted techniques increase flexibility allowing ad hoc changes reflected workflow management systems inconcert providing mechanisms migrate cases evolve workflows 
take different perspective respect problems related flexibility 
argue problems resulting discrepancy workflow design construction predefined workflow models workflow enactment actual execution workflows 
workflow designs typically small group consultants managers specialists 
result initial design workflow incomplete subjective high level 
implementation workflow configuring workflow management system training workers involved issues cause problems devil details 
propose reverse process 
starting workflow design start gathering information workflow processes take place 
assume possible record events event refers task welldefined step workflow ii event refers case workflow instance iii events totally ordered 
information system transactional systems erp crm workflow management systems offer information form 
note assume presence workflow management system 
assumption possible construct workflow logs event data 
workflow logs construct process specification adequately models behavior registered 
term process mining method distilling structured process description set real executions 
propose new technique process mining 
remainder follows 
discuss related 
section introduces preliminaries including modeling language workflow processes definition workflow log 
new technique process mining section implementation technique workflow mining tool little thumb section 
section experimental results 
conclude summarizing main results pointing 

related idea process mining new 
cook wolf investigated similar issues context software engineering processes 
describe methods process discovery neural networks purely algorithmic approach markovian approach 
authors consider promising approaches 
purely algorithmic approach builds finite state machine states fused futures terms possible behavior steps identical 
markovian approach uses mixture algorithmic statistical methods able deal noise 
note results limited sequential behavior 
cook wolf extend concurrent processes 
propose specific metrics entropy event type counts periodicity causality metrics discover models event streams 
approach similar 
metrics quite different final goal find explicit representations broad range process models generate concrete petri net set dependency relations events 
cook wolf provide measure quantify discrepancies process model actual behavior registered event data 
idea applying process mining context workflow management introduced 
workflow graphs inspired workflow products ibm mqseries workflow known flowmark inconcert 
problems defined 
problem find workflow graph generating events appearing workflow log 
second problem find definitions edge conditions 
concrete algorithm tackling problem 
approach quite different approach 
nature workflow graphs need identify nature joins splits 
workflow graphs acyclic 
way deal iteration enumerate occurrences activity 
tool algorithms 
developed tool discover hierarchically structured workflows 
approach requires splits joins balanced 
herbst karagiannis address issue process mining context workflow management 
approach uses adonis modeling language hidden markov models models merged split order discover underlying process 
limited sequential models 
notable difference approaches activity appear multiple times workflow model 
result incorporates concurrency assumes workflow logs contain explicit causal information 
technique similar suffers drawback nature splits joins discovered 
compared existing focus workflow processes concurrent behavior detecting concurrency prime concerns 
want distinguish splits joins explicitly 
reach goal combine techniques machine learning workflow nets wf nets 
wf nets subset petri nets 
note petri nets provide graphical formal language designed modeling concurrency 
correspondence commercial workflow management systems wf nets understood 

preliminaries workflow nets event logs workflows definition case piece executed specific case 
examples cases mortgage insurance claim tax declaration order request information 
goal workflow management handle cases efficient effective possible 
workflow process designed handle similar cases 
cases handled executing tasks specific order 
workflow process model specifies tasks need executed order 
alternative terms model procedure workflow graph flow diagram routing definition 
workflow process model routing elements describe sequential conditional parallel iterative routing specifying appropriate route case 
cases handled workflow process definition 
result task executed cases 
petri nets proposed modeling workflow process definitions long term workflow management coined workflow management systems readily available 
consider example information control nets variant classical petri nets introduced late seventies 
petri nets constitute starting point solid theoretical foundation workflow management 
clearly petri net specify routing cases workflow instances 
tasks modeled transitions places arcs model causal dependencies 
working example petri net shown 
sb example workflow process modeled petri net 
transitions represent tasks places sb se represent causal dependencies 
fact place corresponds condition pre postcondition tasks 
split corresponds transition output places join corresponds transition input places 
splits joins correspond places multiple outgoing ingoing arcs 
time place contains zero tokens drawn black dots 
transitions active components petri net change state net firing rule transition said enabled input place contains token 
enabled transition may fire 
transition fires consumes token input place produces token output place se petri net models control flow dimension workflow called workflow net 
wf net source place sb sink place se case workflow instance handled procedure represented wf net created enters workflow management system deleted completely handled wf net specifies life cycle case 
additional requirement dangling tasks conditions tasks conditions contribute processing cases 
nodes workflow path source sink 
wf net focuses process perspective abstracts functional organization information operation perspectives 
perspectives added example high level petri nets nets extended color data hierarchy 
wf nets simple expressive power impressive 
restrict self called sound wf nets 
workflow net sound requirements satisfied termination guaranteed ii termination dangling tokens left iii dead tasks possible execute arbitrary task appropriate route 
soundness minimal property workflow net satisfy 
note soundness implies absence livelocks deadlocks 
sound wf nets model basic constructs identified workflow management coalition contemporary workflow management systems 
experience leading workflow management systems staffware cosa mqseries workflow show fairly straightforward express tool specific languages terms tool independent language wf nets 
wf nets reader referred 
workflow logs discover workflow models expressed terms wf nets 
workflow log sequence events 
event described case identifier task identifier 
event corresponds execution task case reasons simplicity assume just workflow process 
note limitation case identifiers split workflow log separate workflow logs process 
workflow log may contain information thousands cases 
causal dependencies events corresponding different cases project workflow log separate event sequence case loosing information 
consider workflow log set event sequences event sequence simply sequence task identifiers 
example event sequence petri net definitions wf nets event logs easily describe problem addressed workflow log want discover wf net potentially generates event sequences appearing log possible ii generates event sequences appearing log possible iii captures concurrent behavior iv simple compact possible 
technique practical applicable want able deal noise 

heuristic process mining technique section details heuristic process mining technique 
describe formal approach called algorithm proven successfully rediscover large class practically relevant wf nets 
algorithm ordering relation easily derived workflow log 
events workflow log trace line event directly followed relation called dependency relation depends directly relation called non parallel relation direct dependency parallelism relation called parallel relation indicates potential parallelism 
algorithm dependency relation connect events non parallel relation detect kinds splits joins 
formal approach presupposes perfect information log complete task follow task directly log contain example behavior ii assume noise log registered log correct 
practical situations logs rarely complete noise free 
practice difficult decide events say relation 
instance causality relation tasks holds log trace directly followed relation holds trace directly followed 
noisy situation abusive example completely mess derivation right 
reason try developed heuristic mining techniques sensitive noise incompleteness logs 
try conquer limitations algorithm short loops petri net constructs 
remainder section heuristic mining techniques 
section describe little thumb workflow mining tool rules thumb 
heuristic mining approach distinguish mining steps step construction dependency frequency table table step ii induction graph table step iii reconstruction wf net table graph 
construction dependency frequency table starting point workflow mining technique construction table 
task information abstracted workflow log frequency task notation ii frequency task directly preceded task notation iii frequency directly followed task notation iv local metric indicates strength dependency relation task task notation global metric indicates strength dependency relation notation 
metric iii clear extra explanation 
definition local metric iv follows 
definition local information relation 
effect definition instance event times directly followed event way value indicating completely sure dependency relation noise effected result 
times followed way occurs value indication pretty sure dependency relation 
times directly followed noise effected ones followed value 
metric metric global measurements direct events involved 
underlying intuition follows 
case task occurs shortly task occurs plausible task causes occurrence task hand task occurs shortly task implausible task cause task bellow define formalization intuition 
event stream task occurs task number intermediary events dependency counter incremented factor dependency fall factor 
experiments set 
effect contribution dependency metric maximal task appears directly task decreases distance increases 
process looking forward task occurrence task stops occurrence task task way task occurs task number intermediary events dependency counter decreased factor processing workflow log dependency counter divided minimum frequency task min 
table table event 
process model workflow log event sequences events generated 
example table shows defined metrics task 
notice task belongs concurrent event streams split 
seen table directly preceded ii directly followed iii dependency measurements relatively high 
section table combination relatively simple heuristic construct graph 
induction dependency frequency graphs previous section observed information table table strongly suggests task depends task dependency measurements high directly preceded frequently directly followed 
earlier approaches cf 
developed heuristic rules line observation 
illustration consider rule dependency relation depends directly introduced 
conditions demand specific values graph higher lower certain threshold value 
perfect situation know workflow log totally free noise task pattern occurrence informative instance value set zero 
clear workflow log noise free protect induction process inferences noise task threshold frequency reliable induction process 
situation parameters straightforward 
especially parameter appears sensitive parallelism workflow 
high number parameters sensitivity parameters noise clear disadvantages kind heuristic rules 
attempted machine learning techniques threshold tuning 
necessary formulate rule pair events takes decision dependency relation 
know event cause event event dependent event 
trivial information heuristic rule limit search best candidate 
best helps enormously finding dependency relations 
formulated idea implemented version heuristic rule 
definition dependency score ds event events say notation ds ds formulation heuristic rule 
suppose events dependency score ds 
temporally version mining rule 
task event ds maximal event ds maximal 
new heuristic rule contain parameter 
applying simple heuristic table table results graph 
compare graph petri net petri net generating workflow log table seen connections nodes accordance underlying workflow model connections correct missing connections 
arc dependency score ds task number event occurrences log 
extracted graph heuristic rule 
heuristic rule formulated recognize possible dependency relations 
gives overview types relations recognized complex connection structures ii recursion iii short loops 
try update discuss 
overview types dependency relations recognized version mining rule complex interconnected structures ii recursion iii short loops 
applying version mining rule type structure result missing dependency relations 
instance result applying rule gives gives gives gives dependency relation recognized 
line observations version mining rule updated 
mining rule definite version 
task suppose event ds maximal 
ds suppose event ds maximal 
ds introduced threshold value 
parameter parameter robust noise concurrent processes 
reason parameter tuning appears necessary default value appropriate 
remaining type relations covered rule recursion ii short loops iii 
recursion instance event result patterns 
recursion recognized observing high frequency combination ds value zero normally ds near zero near zero 
short loop instance result patterns 
sight short loops recognized observing high exactly equal frequency combination dependency measurements ds ds near zero 
behavior observed depend event split 
line observations heuristic rule extended simple heuristic rules recursion rule short loops rule 
details omitted 
generating wf nets graphs applying heuristic rules subsection workflow log appears relatively simple find corresponding graphs 
types splits joins represented graph 
information table ii frequency nodes graph contain useful information indicate type join split 
instance detect type split look table values split pattern pattern appear expect positive value words relation holds 
split patterns appear 
example ii look frequency nodes graph 
split incoming arcs 
split analogue 
join node little bit complex appears combination join combined join 
mining tool second observation frequency check validation induced workflow model see paragraph heuristic observation determine kinds splits joins 
events exactly possible relations holds graph know holds 
case take decision holds 
decision taken apply algorithm formal approach translate information wf net 
algorithm way able reconstruct types splits joins appearing working example reconstruct complete underlying wf net exactly wf net 
section section introduce workflow mining tool little thumb 
tool workflow mining heuristics section 
section report experimental results applying defined workflow mining heuristics workflow logs noise 

little thumb little thumb tool attempts induce workflow model workflow log 
workflow log may contain errors noise incomplete 
screenshot little reasons chose name little thumb process mining tool heuristic rules know rules thumb ii analogy tale 
tale little thumb brothers left forest parents 
fortunately little thumb left trail white pebbles find way back 
second time little thumb uses white pebbles mark way back 
unfortunately partly eaten away birds making impossible find way back 
goal tool little thumb 
example session little thumb analyze workflow log 
example log information processing complaints 
cases workflow log contain errors part event registration missing events interchanged 
left upper corner see table discussed section 
right side screenshot see tabs generate wf log ii select events iii load wf log iv analyse wf log check wf net 
generate wf log tab possible load wf net generate workflow logs noise 
experimental setting workflow logs mining material test mining performance tool 
select events tab ii concentrate mining process frequent events neglect low frequent events 
function load wf log tab iii trivial 
analyze wf log function tab iv importance 
illustrate analyse wf log function followed short illustration check wf net function tab 
thumb deal situations information log incomplete partly incorrect 
analogous finding way back home basis left birds 
screenshot little thumb 
try follow little thumb attempt analyze loaded workflow log 
steps mentioned paragraph distinguished 
step construction dependency frequency table table 
step ii induction graph table 
step iii induction information different splits joins reconstruction wf net table graph 
step executed see table screenshot 
evaluate event frequency focus 
evaluate event times followed processing required event times processing event 
easily see workflow log contains noise value counter processing event caused error log unusual order 
result step ii induction table results extra information table extra information indicates events relation 
show graph option possible display graph illustrated 
connection dependency score ds event number occurrences log 
possible show value value connection 
graph validation domain expert possible changes easily implemented changing values extended table 
register evaluate send quest processing required process complaint check processing processing process quest time resulting graph little thumb 
processing nok processing ok types splits joins represented graph 
step iii information extended table indicate type joins splits 
little thumb information induction complete wf net represented petri net 
wf net see split register send quest evaluate split 
possible evaluate mined wf net domain expert knows process try model possible changes easily implemented editing values extended table 
archive register evaluate send quest processing required processing process quest time process complaint wf net induced little thumb 
processing nok check processing processing ok shortly discuss tab called check wf net tab 
tab gives possibility validate wf net 
check traces workflow log wf net wf net checks trace parsed wf net 
position trace parsing stops shown user 
traces workflow log noise cause problems tracing 
high number traces run problems event indication problem wf net event 
second check test frequency information events accordance structure mined wf net 
instance frequency information evaluate processing required processing points split 
small differences explained noise clear differences indicate error mined wf net 
concludes little thumb 

experiments experiments test approach petri net representations different free choice workflow models 
complexity models range comparable complexity working model tasks models tasks 
models contain concurrent processes loops 
model generated random workflow logs event sequences workflow log noise ii noise iii log noise 
archive incorporate noise workflow logs define different types noise generating operations delete head event sequence ii delete tail sequence iii delete part body iv interchange random chosen events 
event third sequence deleted 
step generating workflow log noise randomly generate workflow log workflow model errors 
step random selection original event sequences applying described noise generating operations noise generation operation equal probability 
table table event wf net noise added 
comparing table table shows small differences values tables 
table table event workflow log noise 
applying method noise free workflow logs results perfect graphs connections correct missing connections exact copies underlying wf nets 
add noise workflow logs resulting graphs wf nets perfect 
second experiments second series experiments try workflow logs resemble real workflows 
observe elements strongly influence behavior wf net workflow mining process number event types tasks wf net different workflow models event types 
amount material workflow log generated logs trace lines 
amount noise generated workflow log noise noise noise noise noise 
refers relative probability enabled event fire 
consider different settings events equal probability fire probabilities vary little bit little bit probability vary strongly 
instance task split probability weight weight cases taken cases taken 
task split executed cases precedes cases precedes kind influence behavior wf net material workflow log dramatically 
generated different workflow logs varying enumerated elements 
experiments possible conclude circumstances dependency relations type splits type joins correctly 
mining technique appears especially robust number trace lines amount 
amount noise increased mining technique runs serious problems 
lower maximum number trace lines help 
quarter cases exactly right wf net 
experiments check facility little thumb errors combination indication wf net error appear 
observed errors complex interconnected structures combination short loops 
improvement heuristic rules short loops necessary 

introduced context workflow processes process mining ii preliminaries including modeling language workflow processes iii definition workflow log 
details steps process mining technique step construction table step ii induction graph table step iii reconstruction wf net table graph 
introduced little thumb workflow mining tool process mining techniques 
section describe series experiments 
experiment applied technique different workflow models tasks 
models contain concurrent processes loops 
workflow model generated random workflow logs event sequences noise ii noise iii noise 
proposed technique able reconstruct correct graphs wf nets 
experimental results workflow logs noise indicate technique robust case noise 
second experiment amount noise varied amount material log complexity wf net event types amount wf net 
experimental results indicate technique robust factors 
problems mining techniques errors complex interconnected structures combination short loops 
improvement heuristic rules short loops necessary 
notwithstanding reported results improvements lot 
experimental done especially real workflow logs 
common xml format workflow logs 
experience shows fairly simple extract information enterprise specific information systems translate xml format 
little thumb read xml format 
little thumb experimental tool mining technique stable put effort developing really interactive user friendly mining tool 
extend mining technique order enlarge set underlying wf nets successfully mined 
van der aalst 
application petri nets workflow management 
journal circuits systems computers 
van der aalst desel oberweis editors 
business process management models techniques empirical studies volume lecture notes computer science 
springer verlag berlin 
van der aalst van herbst weijters 
workflow mining survey issues approaches working 
www tm tue nl staff workflow mining 
van der aalst jablonski editors 
flexible workflow technology driving networked economy special issue international journal computer systems science engineering volume number 
van der aalst weijters 
workflow mining processes rediscovered working wp beta research school operations management logistic eindhoven technical university pp 
agrawal gunopulos leymann 
mining process models workflow logs 
proceedings sixth international conference extending database technology pages 
casati ceri pernici pozzi 
workflow evolution 
data knowledge engineering 
cook wolf 
discovering models software processes event data acm transactions software engineering methodology 
cook wolf 
event detection concurrency 
proceedings sixth international symposium foundations software engineering fse orlando fl november pages 
cook wolf software process validation quantitatively measuring correspondence process model 
acm transactions software engineering methodology 
desel esparza 
free choice petri nets volume cambridge tracts theoretical computer science 
cambridge university press cambridge uk 
ellis keddara rozenberg 
dynamic change workflow systems 
ellis editors conf 
organizational computing systems pages 
acm acm 
milpitas california 
ellis nutt 
modelling enactment workflow systems 
ajmone marsan editor application theory petri nets volume lecture notes computer science pages 
springer berlin germany 
herbst 
machine learning approach workflow management 
th european conference machine learning volume lecture notes computer science pages springer berlin germany 
herbst 
dealing concurrency workflow induction zobel european concurrent engineering conference scs europe ghent belgium 
herbst karagiannis 
inductive approach acquisition adaptation workflow models 
ibrahim editors proceedings ijcai workshop intelligent workflow process management new frontier ai business pages 
herbst karagiannis 
integrating machine learning workflow management support acquisition adaptation workflow models 
international journal intelligent systems accounting finance management 
inconcert 
inconcert process designer guide 
inconcert cambridge massachusetts 
jablonski bussler 
workflow management modeling concepts architecture implementation 
international thomson computer press 
klein dellarocas bernstein editors 
adaptive workflow systems special issue journal computer supported cooperative volume numbers 
weijters van der aalst van den bosch 
process mining discovering direct successors process logs 
proceedings th international conference discovery science discovery science volume lecture notes artificial intelligence pages 
springer verlag berlin 
leymann 
data mining von workflow zur von modellen 
proceedings ro technik und wissenschaft pages informatik springer berlin germany 
lawrence editor 
workflow handbook workflow management coalition 
john wiley sons new york 

process miner tool mining process schemes event data 
flesca editors proceedings th european conference artificial intelligence jelia volume lecture notes computer science springer verlag berlin 
weijters van der aalst 
process mining discovering workflow models event data 
kr se de rijke schreiber van someren editors proceedings th belgium netherlands conference artificial intelligence pages 
weijters van der aalst 
rediscovering ow models event data 
de pauw editors proceedings th dutch belgian conference machine learning pages 
