imperial college science technology medicine university london department computing efficient storage retrieval indexing time series data submitted partial fulfilment requirements msc degree advanced computing university london diploma imperial college science technology medicine :10.1.1.128.6559
september 
aristotle physics book iv ch :10.1.1.128.6559
die zeit ist das ge unter zu wird es allen :10.1.1.128.6559
arthur und vol 
ii ch 
sct :10.1.1.128.6559
need mechanisms support flexible efficient handling time series fundamental importance wide range applications time series :10.1.1.128.6559
apart classical statistical tools new applications time series combination difficult queries pattern matching :10.1.1.128.6559
guaranteeing flexibility efficiency challenging contradictory nature goals :10.1.1.128.6559
thesis develop novel layered system architecture flexible efficient data model storage mechanism provides necessary infrastructure high performance analysis time series supporting statistical operations indexing fast similarity search :10.1.1.128.6559
development object model storage mechanism system architecture done step step carefully examining special characteristics time series data investigating impact performance :10.1.1.128.6559
design kept extensible effectiveness demonstrated means examples :10.1.1.128.6559
pattern matching problem develop novel algorithm search time series existence subsequences varying length similar pattern :10.1.1.128.6559
search performed original sequence resolution levels :10.1.1.128.6559
proved algorithm fast experimental evaluation demonstrates high quality results produces :10.1.1.128.6559
vii acknowledgments supervisor dr guidance constant support encouragement course project :10.1.1.128.6559
patrick time spent discussing parts project :10.1.1.128.6559
financial support alexander public benefit foundation athens greece engineering physical sciences research council uk :10.1.1.128.6559
london september ix contents vii acknowledgments ix contents xi chapter :10.1.1.128.6559
objectives time series analysis motivation objectives contributions thesis structure chapter background :10.1.1.128.6559
definition time series simple data model time series queries time series summary chapter object model requirements table model time series representation time points representation single values representation time column xi xii representation data columns :10.1.1.128.6559
representation groups data columns :10.1.1.128.6559
representation collections :10.1.1.128.6559
representation time series :10.1.1.128.6559
summary 
chapter data storage requirements :10.1.1.128.6559
storing data file 
omission time points :10.1.1.128.6559
splitting columns :10.1.1.128.6559
splitting rows representation time series revisited :10.1.1.128.6559
summary 
chapter system architecture :10.1.1.128.6559
requirements :10.1.1.128.6559
overview 
buffering 
data streaming 
operations execution subsystem :10.1.1.128.6559
performance evaluation 
summary 
chapter indexing requirements :10.1.1.128.6559
index structure 
creating index searching index 
indexing subsystem :10.1.1.128.6559
performance evaluation 
summary chapter simple pattern matching 
problem outline solution pattern matching indexing performance evaluation summary chapter pattern matching time warping multiple resolutions single resolution multiple resolutions case study indexing summary chapter summary evaluation suggestions bibliography :10.1.1.128.6559
appendix operations execution api overview opening time series specifying properties input streams creating configuring operation creating configuring operation group example appendix graphical user interface xiii xiv overview :10.1.1.128.6559
executing operations :10.1.1.128.6559
creating searching index 
pattern matching 
discussion :10.1.1.128.6559
appendix integration kensington :10.1.1.128.6559
timeseries data type :10.1.1.128.6559
statistical calculations :10.1.1.128.6559
feature extraction 
similarity indexing 
discussion :10.1.1.128.6559
chapter time series arise context large number applications variety fields range science engineering business finance analysis potentially valuable resource information enterprises scientific institutions :10.1.1.128.6559
typical examples include share prices currency exchange rates successive days sales figures successive weeks air temperature relative humidity measurements successive hours representative time series obvious time series depending nature variable values record may exhibit different behaviour :10.1.1.128.6559
objectives time series analysis variety applications time series various types analysis performed :10.1.1.128.6559
main objectives classical time series analysis may classified description explanation prediction control :10.1.1.128.6559
moving averages autocorrelation interpolation spectral analysis tools extensively order achieve objectives :10.1.1.128.6559
issues defined studied algorithms :10.1.1.128.6559
new emerging applications data mining data warehousing time series may object complex queries :10.1.1.128.6559
queries may aim example discovering time series database share certain patterns behaviour similar trends :10.1.1.128.6559
general database time series data stored basic categories queries expected exact similarity queries :10.1.1.128.6559
exact queries described include forward queries queries ask value time sequences particular time point range values specified time interval inverse queries queries ask time points time sequence contains values equal greater smaller value :10.1.1.128.6559
examples exact queries :10.1.1.128.6559
air temperature yesterday :10.1.1.128.6559
forward query 
volcano strength earthquake greater richter scale :10.1.1.128.6559
inverse query jan feb mar apr may jun jul aug sep oct nov dec jan feb mar apr may jun jul aug sep oct nov dec mon tue wed thu fri sat sun mon examples time series :10.1.1.128.6559
daily average air temperature year meteorological station national technical university athens ntua greece source ntua :10.1.1.128.6559

daily effective exchange rate euro pound sterling lower line dollar upper line year source european central bank :10.1.1.128.6559

acceleration time history horizontal axis sec vertical axis sec earthquake hit athens greece source internet site european strong motion data :10.1.1.128.6559

national system demand electricity mw ireland week july source :10.1.1.128.6559
hand similarity queries ask time sequences specified time interval similar sequence :10.1.1.128.6559
exactly similar mean depends application definition similarity may vary :10.1.1.128.6559
type queries useful analysing financial scientific data example prediction clustering purposes :10.1.1.128.6559
examples queries :10.1.1.128.6559:10.1.1.128.6559
determine products similar selling patterns :10.1.1.128.6559

find stocks stock prices move similarly :10.1.1.128.6559

find cases past resemble year sales pattern certain product :10.1.1.128.6559

find portions seismic waves similar spot geological irregularities :10.1.1.128.6559
common property queries differentiates classical statistical operations general entail high computational cost order answered :10.1.1.128.6559
certain conditions performance may improved index avoiding exhaustive search data :10.1.1.128.6559
role index reduce initial search space result query response times :10.1.1.128.6559
motivation objectives complexity algorithms order analyse time series depending case may limit possibilities performing desired analysis :10.1.1.128.6559
looking intelligent techniques algorithms lower complexity critical issue :10.1.1.128.6559
saw example indexing technique answering queries :10.1.1.128.6559
directly applicable cases :10.1.1.128.6559
difficult cases investigation technique extended modified meet requirements development new techniques improve performance open problem :10.1.1.128.6559
cases important complexity algorithms part problem :10.1.1.128.6559
algorithm matter designed low time complexity significantly suffer obliged data model fails represent effectively data inefficient data storage retrieval mechanism :10.1.1.128.6559
essential combine efficient data processing techniques efficient data representation storage schemes :10.1.1.128.6559
especially crucial amount data larger :10.1.1.128.6559
inefficiency representation data retrieval aggravate difficult task data processing algorithms :10.1.1.128.6559
need techniques designed especially time series rises inability traditional data storage processing mechanisms efficiently handle :10.1.1.128.6559
inability mainly result failure exploit special nature time series data :10.1.1.128.6559
general main issues system designed analysis time series address :10.1.1.128.6559
provide data structures storage schemes maximize efficiency data representation storage retrieval :10.1.1.128.6559

provide mechanisms efficient execution various operations queries data :10.1.1.128.6559
objectives project investigate eventually search solutions problems :10.1.1.128.6559
far problem concerned aim create rich object model representation time series efficient storage mechanism guarantee fast retrieval high performance :10.1.1.128.6559
second problem goal development complete time series handling system provide necessary infrastructure efficient execution operations supporting classical time series analysis answering similarity queries :10.1.1.128.6559
having built system recognizing usefulness detecting patterns time sequence focus similarity search problem examine indexing scheme applicable interesting cases :10.1.1.128.6559
interested finding subsequences time sequence similar short pattern keeping size subsequences fixed allowing vary :10.1.1.128.6559
difficult computationally demanding problems large number subsequences compared :10.1.1.128.6559
aim develop method perform better simplest expensive approach simply compares possible subsequences pattern :10.1.1.128.6559
contributions step project designed flexible efficient semantically rich object model representing time series detailed study properties :10.1.1.128.6559
model offers support time series management allowing creation group sequences share structure :10.1.1.128.6559
subsequently developed efficient scalable storage mechanism uses simple index order provide fast data retrieval regardless amount :10.1.1.128.6559
object model storage mechanism designed implemented layered system architecture provides efficient retrieval processing time series :10.1.1.128.6559
data retrieval part supports buffering streaming data processing part allows concurrent execution operations designed extensibility mind allow easy addition new operations :10.1.1.128.6559
basic set including common operations implemented :10.1.1.128.6559
apart execution operations calculate statistics apply transformation time series integrated system support fast similarity matching indexing :10.1.1.128.6559
created general indexing mechanism allows addition similarity indices different algorithms :10.1.1.128.6559
subsequence similarity indices supported :10.1.1.128.6559
problem looking existence short patterns time series implemented simple pattern matching algorithm :10.1.1.128.6559
purpose speeding search implemented index investigated depth behaviour conditions offer performance superior simple pattern matching algorithm :10.1.1.128.6559
novel fast algorithm multiresolution pattern matching developed :10.1.1.128.6559
proved performance better na linear scanning algorithms demonstrated examples quality results produces superior :10.1.1.128.6559
system pattern matching algorithms implemented developed simple graphical user interface provides easy access functionality system offers user friendly way performing statistical similarity search operations time series :10.1.1.128.6559
investigating system may integrated third party data mining application integrated parts kensington data mining system :10.1.1.128.6559
integration gives kensington possibility data retrieval processing functionality system benefit system combination powerful data mining tool advanced analysis data may performed :10.1.1.128.6559
system algorithms implemented performed series evaluation studies proved correctness efficiency implementation :10.1.1.128.6559
thesis structure structure thesis chapter provides theoretical material time series :10.1.1.128.6559
presents formal definition time series simple object model representation :10.1.1.128.6559
greatest part devoted investigation similarity queries answered efficiently :10.1.1.128.6559
chapter presents complete flexible object model time series :10.1.1.128.6559
model intended represent raw data time series general properties level :10.1.1.128.6559
data types needed purpose developed :10.1.1.128.6559
chapter examines problem time series data stored efficiently :10.1.1.128.6559
begins examining simplest way store step step exploiting special characteristics time series data develops efficient storage schemes guarantee fast retrieval :10.1.1.128.6559
chapter material developed previous chapters presents complete extensible system architecture efficient execution operations time series :10.1.1.128.6559
architecture consists layers data storage retrieval layer data processing layer :10.1.1.128.6559
ways increasing performance guaranteeing extensibility examined :10.1.1.128.6559
chapter investigating technical issues related indexing answering similarity queries extends system previous chapter integrating general flexible indexing mechanism :10.1.1.128.6559
chapter examines indexing applied real problem related prediction financial time series :10.1.1.128.6559
approach looking past behaviour time series behaviour similar :10.1.1.128.6559
translating problem pattern matching problem issues regard performance index examined :10.1.1.128.6559
chapter examines problem searching patterns time series subsequences varying size various resolutions original sequence :10.1.1.128.6559
methods examined efficiency quality results compared :10.1.1.128.6559
outcome fast algorithm look patterns resolution time sequence :10.1.1.128.6559
chapter concludes thesis providing summary evaluation important results suggestions :10.1.1.128.6559
appendices text describe respectively application programming interface operations execution mechanism system graphical user interface developed integration kensington data mining system :10.1.1.128.6559
chapter background purpose chapter provide theoretical background needed rest thesis :10.1.1.128.6559
sections time series formally defined simple data model suitable representing :10.1.1.128.6559
largest part chapter devoted investigation problem efficiently answering similarity queries :10.1.1.128.6559
defining concept similarity basics indexing approach provides comprehensive overview important indexing techniques developed :10.1.1.128.6559
definition time series time series collection observations sequentially time :10.1.1.128.6559
called continuous observations continuously time discrete specific time points :10.1.1.128.6559
continuous time series converted discrete appropriate sampling procedure :10.1.1.128.6559
thesis interested discrete time series :10.1.1.128.6559
general discrete time series said regular time points observations equally spaced called irregular :10.1.1.128.6559
refine definition regularity :10.1.1.128.6559
formally discrete time series describing state data object time points may defined ordered time sequence value data object time point si ti vi terms time series time sequence interchangeably difference meaning :10.1.1.128.6559
usually value data object single numerical value price temperature sales necessarily case :10.1.1.128.6559
value point multi dimensional space coordinates space complex non numerical data object :10.1.1.128.6559
example possible sequences images change time time series satellite images motion detection sequences strings sequences alarm messages generated control mechanism :10.1.1.128.6559
simple data model time series definition time series object may represented ordered sequence time point value pairs :10.1.1.128.6559
representation reasons need add sequence identifier distinguish data belong different sequences :10.1.1.128.6559
id unique object identifier time series length may represented object id reason restrict time series record value data object :10.1.1.128.6559
example stock price time series may consist data objects record open close high low price stock :10.1.1.128.6559
unreasonable consider time series different ones close relation lost :10.1.1.128.6559
observation account extending definition consider time series consist data objects :10.1.1.128.6559
data objects constitute time series value data object time point general representation time series id kv representation complete restricted representation individual time points values say general properties time series :10.1.1.128.6559
properties :10.1.1.128.6559
value types data types values data objects :10.1.1.128.6559
data types system types integers real numbers complex objects jpeg images :10.1.1.128.6559

time domain granularity type time points minimum distance :10.1.1.128.6559
may ordinal representation successive time points represented successive integers calendar representation calendar time hierarchy year month day :10.1.1.128.6559

life span interval valid time points time series :10.1.1.128.6559
easiest way specify means start time time :10.1.1.128.6559
various possibilities fixed start time time fixed start time time equal current time time series updated grow constantly time equal current time fixed distance start time time series discard old data newer arrive :10.1.1.128.6559

regularity define time series value time point life span interval specified time granularity :10.1.1.128.6559
definition regular time series time series considered regular time points observations equally spaced :10.1.1.128.6559
inflexible definition consider may irregular time series known irregularities :10.1.1.128.6559
example time series stock prices definition irregular value weekend days :10.1.1.128.6559
irregularity known useful model consider time series wider sense regular :10.1.1.128.6559
properties demonstrate data model enriched capture various aspects behaviour time series :10.1.1.128.6559
richer representation offer increased functionality efficiency time series handling system :10.1.1.128.6559
queries time series seen basic types queries related time series forward inverse similarity queries :10.1.1.128.6559
simple algorithms responding queries exist general take polynomial time length sequences :10.1.1.128.6559
example perform na sequential scanning called linear scanning order find similar subsequences sequence length query sequence length need place query sequence possible offset longer sequence order perform comparison :10.1.1.128.6559
time complexity algorithm assuming large databases unacceptable :10.1.1.128.6559
simple optimisations order speed sequential scanning cases slow practical different approach needed :10.1.1.128.6559
approach called indexing achieves better performance building index data performing search raw data :10.1.1.128.6559
rest section provide overview various indexing techniques developed time series :10.1.1.128.6559
basic categories queries complicated interesting similarity queries examine case :10.1.1.128.6559
similarity queries intuitively time sequences considered similar exhibit similar behaviour large subset length :10.1.1.128.6559
definition similarity tolerance distance metric time sequences similar definition general problem similarity query formulated follows query sequence set time series sm distance threshold distance metric find set :10.1.1.128.6559
similarity queries classified categories :10.1.1.128.6559
matching queries sequences compared length :10.1.1.128.6559

subsequence matching queries length query sequence smaller look subsequences larger sequences best match query sequence :10.1.1.128.6559
obviously case requires comparing elements possible subsequences :10.1.1.128.6559
distance metrics norm widely distance metric answering similarity queries euclidian distance special case general norm family :10.1.1.128.6559
norm sequences length defined follows called manhattan city block distance gives euclidian distance :10.1.1.128.6559
special case called maximum norm reduces max main weakness norm tolerate transformations amplitude scaling shifting time scaling :10.1.1.128.6559
presence noise outliers complicates problem :10.1.1.128.6559
example pairs time sequences appear closely related comparison direct application distance metric definition fail identify similar :10.1.1.128.6559
weaker definition similarity takes account cases required :10.1.1.128.6559
similarity model accounts scaling shifting proposed time sequences normalized applying distance met ric :10.1.1.128.6559
flexible definitions similarity proposed order account example presence noise time warping :10.1.1.128.6559
general landmark similarity introduced invariant shifting uniform nonuniform amplitude scaling uniform time scaling time warping :10.1.1.128.6559
time warping transformations time sequences :10.1.1.128.6559
amplitude shifting :10.1.1.128.6559
uniform amplitude scaling :10.1.1.128.6559
non uniform time scaling :10.1.1.128.6559
time warping distance metric takes account possibility sequences similar shape may aligned time axis :10.1.1.128.6559
time warping distance metric tolerant non uniform time scaling :10.1.1.128.6559
utility time warping points sequences aligned sophisticated way takes account distortions time axis :10.1.1.128.6559
sequences length respectively time warping distance tw defined follows tw dtw tw head head min dtw tw base tw tail tw tail tail tail denotes null sequence base norm family distance metrics :10.1.1.128.6559
time warping distance metric creates optimal alignment points sequences compares repeating points necessary :10.1.1.128.6559
value distance base distance metric points aligned sequences :10.1.1.128.6559
length aligned sequences vary max time warping distance computed dynamic programming algorithm known dynamic time warping dtw :10.1.1.128.6559
complexity main disadvantage problematic large databases :10.1.1.128.6559
indexing similarity matching idea underlies approach building index order speed similarity queries time series time series length considered point dimensional space :10.1.1.128.6559
time series indexed spatial access method tree variants :10.1.1.128.6559
query speeded searching index performing linear scanning :10.1.1.128.6559
problem performance methods degrades rapidly dimensionalities greater eventually reducing sequential scanning :10.1.1.128.6559
hand time sequences real applications may contain thousands data points :10.1.1.128.6559
solution problem known dimensionality curse described perform dimensionality reduction building index extract low dimensional signature called feature sequence index signature space :10.1.1.128.6559:10.1.1.128.6559
signature extraction done applying feature extraction function :10.1.1.128.6559
properties index general indexing method answer similarity queries potentially suffer problems false alarms false dismissals :10.1.1.128.6559
false alarms occur sequences appear close index actual distant false dismissals occur qualifying sequences missed appear distant index space :10.1.1.128.6559
false alarms removed post processing stage testing sequences close search sequence impossible recover false dismissals :10.1.1.128.6559
indexing technique guarantees false dismissals said exact techniques offer guarantee called approximate :10.1.1.128.6559
various approximate techniques proposed may useful large databases especially probability false dismissal low consider exact techniques :10.1.1.128.6559
guarantee false dismissals basic properties ideal indexing method proposed :10.1.1.128.6559:10.1.1.128.6559
precisely suggested properties ideal index :10.1.1.128.6559
fast faster sequential scanning :10.1.1.128.6559

correct allow false dismissals :10.1.1.128.6559

require small space overhead :10.1.1.128.6559
dynamic :10.1.1.128.6559
easy insert delete sequences append new measurements data sequence :10.1.1.128.6559

handle data sequences queries varying length :10.1.1.128.6559
authors add properties :10.1.1.128.6559
possible build index reasonable time :10.1.1.128.6559

index able handle different distance measures appropriate :10.1.1.128.6559
important result order correctness guaranteed signature extraction function satisfy inequality signature object original sequences distance function object signatures distance function signature equation says false dismissals arise answering similarity query distance signature space underestimates distance original sequences :10.1.1.128.6559:10.1.1.128.6559
minimize false alarms signature approximate object closely possible :10.1.1.128.6559
signature extraction function defines transformation object space feature space :10.1.1.128.6559
dimensionality signature space dimensionality original object space general transformation involves loss information :10.1.1.128.6559
accurate reconstruction original objects signatures possible approximation reconstructed :10.1.1.128.6559
reconstruction error distance measured distance metric usually euclidian distance original reconstructed objects metric fidelity transformation :10.1.1.128.6559
general method dimensionality reduction may summed follows :10.1.1.128.6559
establish distance metric object domain expert euclidian distance :10.1.1.128.6559

produce dimensionality reduction technique define signature extraction function produces signatures length efficiently handled standard spatial access method :10.1.1.128.6559

produce distance measure signature defined dimensional signature space obeys condition :10.1.1.128.6559
indexing techniques sequel provide overview important indexing techniques proposed support fast answering similarity queries :10.1.1.128.6559
euclidian distance member norm family :10.1.1.128.6559
discrete fourier transform technique suggested dimensionality reduction time series introduced uses discrete fourier transform dft signature extraction function euclidian distance distance metric :10.1.1.128.6559
dft takes original data time domain transforms frequency domain :10.1.1.128.6559
point dft se quence sequence complex numbers ft te technique key observations firstly real world sequences skewed energy spectrum represented fourier coefficients secondly euclidian distance preserved frequency domain :10.1.1.128.6559
second observation implication parseval theorem :10.1.1.128.6559
addition fast algorithm compute dft coefficients time com nlog outline method plexity coefficients dft sequence database calculated multidimensional index fourier coefficients transformed sequence built :10.1.1.128.6559
sequence point dimensional space fourier coefficients complex numbers :10.1.1.128.6559
choice affect correctness method small value result large number false alarms :10.1.1.128.6559
index built spatial access method :10.1.1.128.6559
order answer similarity query obtain fourier coefficients query sequence index retrieve set sequences distance away query sequence :10.1.1.128.6559
actual answer set obtained post processing phase actual distance sequences computed time domain distance accepted :10.1.1.128.6559
empirical evaluation method demonstrates efficiency tests ran dom walks sequences skewed energy spectrum showed minimum execution time achieved small number fourier coefficients minimum flat sub optimal choice give search time sequence said random walk independent identically distributed random variables :10.1.1.128.6559
time close minimum :10.1.1.128.6559
gain comparison sequential scanning increases number length sequences database increase :10.1.1.128.6559
basic method described addresses matching problem generalized suitable answering subsequence matching queries :10.1.1.128.6559:10.1.1.128.6559
approach follows mbr mbr mbr mbr mbr mbr mbr mbr mbr mbr dividing trails sub trails grouping mbrs :10.1.1.128.6559
sliding window length placed possible position offset time series database placement signature subsequence inside window extracted dft coefficients calculated :10.1.1.128.6559
time sequence length mapped trail signature space consists points point possible placement sliding window :10.1.1.128.6559
trail divided sub trails represented rectangle mbr :10.1.1.128.6559
division mbrs proper heuristic mbrs stored spatial access method :10.1.1.128.6559
search subsequences similar query length map query point signature space index retrieve sub trails mbrs intersect stated probability dimensional mbr sides going accessed average query da :10.1.1.128.6559:10.1.1.128.6559
formula assumes address space normalized unit hyper cube da formula marginal cost mc defined probability accessing mbr divided number values mbr includes :10.1.1.128.6559
mc marginal cost mbr inclusion point mc marginal cost mbr inclusion point eventually included mbr mc mc point initiates new mbr :10.1.1.128.6559
circle centre radius :10.1.1.128.6559
matching problem obtained subsequences examined order discard false alarms :10.1.1.128.6559
search subsequences longer split query segments length search intersect results :10.1.1.128.6559
sequence closer full query window signatures close contained result sets :10.1.1.128.6559
improvement performance method proposed symmetric property dft representation exploited :10.1.1.128.6559
particular possible reduce search space accelerate search time taken account fact th dft coefficient real valued sequence duration equal complex conjugate th coefficient :10.1.1.128.6559
discrete wavelet transform dft discrete wavelet transformation dwt proposed :10.1.1.128.6559
dft transforms signals time domain frequency domain wavelet transform multi resolution transformation transforms signals time domain time frequency domain :10.1.1.128.6559
wavelet representations signals bear information dft frequencies considered :10.1.1.128.6559
wavelet haar wavelet chosen allows approximation original sequence coefficients preserves euclidian distance proves outperform wavelets precision :10.1.1.128.6559
furthermore computation easy faster dft time complexity :10.1.1.128.6559
experimental evaluation method shows outperforms index dft terms pruning power ratio number sequences examined number sequences database number page accesses complexity :10.1.1.128.6559
subsequent comprehensive comparison dft dwt methods demonstrates symmetric property dft exploited methods yield behaviour far pruning power concerned :10.1.1.128.6559
drawback wavelet transformation lengths time sequences integer power :10.1.1.128.6559
piecewise constant approximation independently simple time efficient transformation introduced order achieve dimensionality reduction :10.1.1.128.6559
transformation dividing time sequence fixed number equal sized segments :10.1.1.128.6559
sequence represented means segment :10.1.1.128.6559
means constitute signature sequence search index built signature space :10.1.1.128.6559
transformation advantage simpler faster implement addition proves perform :10.1.1.128.6559
experimental evaluation demonstrates important speedup method dwt :10.1.1.128.6559
piecewise constant approximation pca technique implemented euclidian distance distance metric :10.1.1.128.6559
hand proved technique norm :10.1.1.128.6559
result offers general framework multiple similarity models supported simultaneously :10.1.1.128.6559
modified order tolerate scaling shifting :10.1.1.128.6559
concentrates representing time sequence equally sized segments proved division time sequence segments arbitrary length indexable representation :10.1.1.128.6559
technique called adaptive piecewise constant approximation proves efficient representation offers flexibility representing high activity regions time series short segments low activity regions fewer longer segments :10.1.1.128.6559
high quality approximation time sequence created fast nlog time corresponding index offers better performance index equal length segmentation time series :10.1.1.128.6559
adjusted norm :10.1.1.128.6559
piecewise approximation time sequence :10.1.1.128.6559
principal component analysis singular value decomposition principal component analysis dimensionality reduction technique transforms set correlated random data points set uncorrelated data points retain variance original data set :10.1.1.128.6559
derived data points linear combinations original ones :10.1.1.128.6559
principal components hopefully account variance original data express reduced form :10.1.1.128.6559
set principle components set orthonormal vectors maximum possible variance second maximum possible variance orthogonal third maximum possible variance orthogonal practically means original data points scattered spread direction principal component direction second :10.1.1.128.6559
principal components sequence calculated technique called singular value decomposition svd :10.1.1.128.6559
principal component analysis technique differs important point transformations local apply transformation sequence data set independently order compute signature svd global data dependent transformation works simultaneously dataset :10.1.1.128.6559
shown svd optimal linear transformation sense minimizes reconstruction error :10.1.1.128.6559
despite advantages important drawbacks indexing scheme firstly complexity high time space complexity :10.1.1.128.6559
problem addressed various fast algorithms developed perform quite :10.1.1.128.6559
second drawback case update database entire index recomputed fact problematic dynamically updated databases :10.1.1.128.6559
svd dimensionality reduction technique examined context image databases :10.1.1.128.6559
context similarity search time series performance evaluated :10.1.1.128.6559
expected time needed construction index large pruning power general superior methods :10.1.1.128.6559
combining techniques interesting approach problem indexing time series :10.1.1.128.6559
motivation general efficiency indexing techniques depends fidelity approximation reduced dimensionality space single dimensionality reduction technique optimal datasets :10.1.1.128.6559
chosen representation may tightly approximate data provide poor approximation small section :10.1.1.128.6559
query item eventual best match poorly approximated items result long query time large amounts multidimensional index structure inspected :10.1.1.128.6559
general possible dataset dimensionality reduction techniques identical performance local level approaches different fidelity :10.1.1.128.6559
basic idea proposal exploit fact different sections dataset favour different dimensionality reduction techniques creating ensemble indexes representation committing dimensionality reduction technique :10.1.1.128.6559
actual dimensionality reduction techniques constitute ensemble index parameter method example dft dwt pca :10.1.1.128.6559
data indexed time sequence placed index represent greatest fidelity :10.1.1.128.6559
query time query transformed different representations fidelity measured :10.1.1.128.6559
information determines order indexes searched :10.1.1.128.6559
expect performance method bound performance best possible single representation index surprisingly demonstrated better :10.1.1.128.6559
drawback method time index build transformations time series belong ensemble indexes computed order reconstruction error selected :10.1.1.128.6559
summary chapter presenting definitions related description time series useful chapters concentrated investigated problem indexing time series fast answering similarity queries :10.1.1.128.6559
idea indexing techniques time series subsequence converted multidimensional point :10.1.1.128.6559
order create index set time series need convert point spatial access method order index points :10.1.1.128.6559
time series considered multidimensional point conversion due extremely high dimensionality point impossible index directly :10.1.1.128.6559
conversion procedure creates approximation original sequence needed :10.1.1.128.6559
methods examined propose different ways converting time series points :10.1.1.128.6559
efficiency index quality conversion approximation original sequence point calculated :10.1.1.128.6559
search index efficient return sequences possible matches query fewer sequences eventually linearly scanned compared :10.1.1.128.6559
due different behaviour time series different fields exhibit single indexing technique best cases :10.1.1.128.6559
fact exploited method essentially combines techniques order find offers best approximation time series individually :10.1.1.128.6559
chapter object model performance software system depends highly efficiency semantic richness flexibility data types uses order model world operates :10.1.1.128.6559
exception rule stage development time series handling system design suitable object model set data types adts :10.1.1.128.6559
choices stage delimit functionality performance :10.1.1.128.6559
chapter develop flexible object model time series :10.1.1.128.6559
aim design process various alternatives investigate effects may steps development system :10.1.1.128.6559
purposes current chapter limit strictly modelling general properties time series avoid entering discussion regards actual data ways may handled :10.1.1.128.6559
requirements time inherent relation time series data notion time way time modelled crucial importance :10.1.1.128.6559
aim model way allow system benefit properties known behaviour time series time domain :10.1.1.128.6559
existence ordinal calendar time series means time domain time series unique :10.1.1.128.6559
data structures able represent provide domain dependent facilities :10.1.1.128.6559
enhance functionality especially dealing calendar time series :10.1.1.128.6559
calendar time domain dis useful feature providing natural way grouping consecutive values monthly weekly intervals :10.1.1.128.6559

time assumed discrete granularity resolution defined :10.1.1.128.6559
resolution refers minimum distance time points perceivable system granularity refers minimum distance successive time points particular time series :10.1.1.128.6559

majority time series regular means behaviour time domain completely known priori :10.1.1.128.6559
modelling regularity enhances functionality efficiency :10.1.1.128.6559
instance system generate sequence time points time series need explicitly store :10.1.1.128.6559
values time points removed time series result raw sequences values time points associated :10.1.1.128.6559
sequence records behaviour data object :10.1.1.128.6559
identify requirements :10.1.1.128.6559
values different data types :10.1.1.128.6559
object model restricted support data types offer generic support possible type :10.1.1.128.6559
high level data type specific information important data types handled uniform way :10.1.1.128.6559

model able represent missing values value sequences :10.1.1.128.6559

time series consist data objects need robust structure capable representing individually part time series :10.1.1.128.6559
data types values data object necessarily :10.1.1.128.6559

data object part time series necessarily related data objects :10.1.1.128.6559
properties usually processed separate entity affected presence data objects :10.1.1.128.6559
model support data object oriented way processing time series :10.1.1.128.6559
going step set requirements complete representation time series design process :10.1.1.128.6559
possible proceed higher levels :10.1.1.128.6559
aim development point modelling concepts enhance functionality essential concepts :10.1.1.128.6559
example set additional requirement model mechanism managing time series :10.1.1.128.6559
especially useful number time series system handles large :10.1.1.128.6559
elementary level mechanism provide ability classify time series represent similar objects similar structure currency rates temperature measurements members collection :10.1.1.128.6559
table model time series approach adopt design data types model bottom :10.1.1.128.6559
decompose time series constituent parts lowest level get time points values :10.1.1.128.6559
time points grouped sequence values value sequences sequence data object :10.1.1.128.6559
time series arises merging time point sequence value sequences :10.1.1.128.6559
path start description adts represent single time points values go description time point value sequences complete time series :10.1.1.128.6559
entering details adts useful describe briefly final time series structure :10.1.1.128.6559
table structure representation time series object considers time series sequence pairs :10.1.1.128.6559
model takes account possibility multiple values time point :10.1.1.128.6559
complete theoretical model flexible basis computer implementation :10.1.1.128.6559
closer look reveals easily converted table structure suitable implementation computer system :10.1.1.128.6559
demonstrates time series may represented table :10.1.1.128.6559
column table contains time points rest columns corresponding values data objects :10.1.1.128.6559
column data object :10.1.1.128.6559
id time series data model seen table :10.1.1.128.6559
table structure easier implement computer system important advantage :10.1.1.128.6559
offers possibility select column perform operation interested contents columns :10.1.1.128.6559
case means easy way select time series data object analyse having worry behaviour data objects :10.1.1.128.6559
requirement model :10.1.1.128.6559
rest text term time column refer column table sequence time points term data column refer columns contain sequences values data objects :10.1.1.128.6559
term row refer row table consisting time point corresponding data object values :10.1.1.128.6559
column properties practically time series contents table just :10.1.1.128.6559
object model interested actual data aim model properties table seen structure data contains :10.1.1.128.6559
get remove data table set columns act data placeholders :10.1.1.128.6559
placeholder contains data time series data object general properties name value type known independent actual values enrich semantics column assigning properties :10.1.1.128.6559
column provide information data contains revealing :10.1.1.128.6559
information infer example operations applicable column :10.1.1.128.6559
instance data numeric calculate average value :10.1.1.128.6559
seeing columns way allow create mechanism handling processing data :10.1.1.128.6559
data columns assign properties time column time domain obvious example :10.1.1.128.6559
table associated general properties apply specific column :10.1.1.128.6559
seeing time series table flexibility associate properties columns table :10.1.1.128.6559
properties called metadata contain general information contents table properties model represent :10.1.1.128.6559
representation time points time domain time domain different domains sequence positive integers sequence calendar dates :10.1.1.128.6559
case time called ordinal second calendar :10.1.1.128.6559
different sight domains offer exactly needed time series ordered set points :10.1.1.128.6559
point case integer second date :10.1.1.128.6559
include real numbers domain set possible domains offer additional functionality :10.1.1.128.6559
need discrete continuous domain :10.1.1.128.6559
course discrete ordered set easily mapped integer domain claim calendar dates domain necessary :10.1.1.128.6559
true lot time series dates represent time order enhance functionality essential include :10.1.1.128.6559
general term time refer ordinal calendar time 
addition time point refer point ordinal calendar time 
time resolution granularity key concepts related description time resolution granularity :10.1.1.128.6559
resolution low level model system dependent property time series may different granularity associated :10.1.1.128.6559
time resolution resolution minimum distance successive time points order system able distinguish consider different :10.1.1.128.6559
ordinal time domain defines value resolution :10.1.1.128.6559
calendar time situation complicated :10.1.1.128.6559
starting years days hours go milliseconds nanoseconds increasing resolution want :10.1.1.128.6559
practice go resolutions lower second calendar time looses special properties behaves ordinal time :10.1.1.128.6559
level important measurement length time period anymore actual dates define :10.1.1.128.6559
case instance time series scientific data unusual low time resolutions :10.1.1.128.6559
ordinal time appropriate cases :10.1.1.128.6559
means calendar time resolution second reasonable choice practical cases :10.1.1.128.6559
time granularity stricter define granularity minimum possible distance successive time points time series :10.1.1.128.6559
obvious value value resolution :10.1.1.128.6559
need useful value :10.1.1.128.6559
calendar time value derived properties time domain :10.1.1.128.6559
year month day month hour minute second reasonable choices :10.1.1.128.6559
reason restrict intervals :10.1.1.128.6559
basis generate intervals multiplying computers software systems cases represent internally calendar dates long integer usually corresponding number milliseconds passed gmt :10.1.1.128.6559
integer 
calendar time granularity described parameters value basis call granule number call interval :10.1.1.128.6559
actual value granularity product parameters :10.1.1.128.6559
case ordinal time granularity take value positive integer due lack meaning defining larger dividing points sequence value granularity get sequence granularity usually assume :10.1.1.128.6559
want describe ordinal granularity pair parameters calendar time assume value interval value granularity coincides value granule :10.1.1.128.6559
timepoint adt point ready define adt representing time point :10.1.1.128.6559
additional desired feature possibility adt represent time point uniform way regardless domain :10.1.1.128.6559
case available general functionality time point having worry domain specific details :10.1.1.128.6559
exactly role timepoint adt :10.1.1.128.6559
represents specific point time instances point adt correspond point ordinal calendar time respectively :10.1.1.128.6559
timepoint operations integer compare timepoint tp void add integer granule integer interval timepoint integer granule timepoint data structure integer year month day integer hour minute second timepoint data structure integer point timepoint family adts :10.1.1.128.6559
description various adts include important operations :10.1.1.128.6559
definition adt assumes resolution calendar time second :10.1.1.128.6559
justified choice means restriction :10.1.1.128.6559
adt extended reach level calendar time granularity 
representation single values mentioned values time series data object usually numeric general belong data type far resulting time series useful sense useful operations defined values :10.1.1.128.6559
discussion follows refer data type value time series data object term value type :10.1.1.128.6559
value types value types may divided families simple complex :10.1.1.128.6559
simple value types elementary data types integers real numbers characters usually supported directly programming language operating system :10.1.1.128.6559
hand complex value types types user define associate special meaning :10.1.1.128.6559
usually correspond adts classes object oriented language :10.1.1.128.6559
mentioned requirements aim keep object model independent properties particular data type :10.1.1.128.6559
keep model flexible enabling specific implementation provide support data type desires :10.1.1.128.6559
support simple value types essential restriction :10.1.1.128.6559
null values ideally time series data object value time point time series :10.1.1.128.6559
case time series irregular missing values simply included sequence :10.1.1.128.6559
regular time series missing values possible time series forced include time points maintain regularity :10.1.1.128.6559
missing values cause various undesired complications inability perform operations data :10.1.1.128.6559
solution consider time series irregular approach lead loss benefits detection regularity :10.1.1.128.6559
consequence want maintain notion regular time series need way deal missing values :10.1.1.128.6559
database systems done defining value type special value called null value :10.1.1.128.6559
presence value sequence means data object time point value value known system point view equivalent cases :10.1.1.128.6559
solution addresses problem representing missing values eliminate problem handle presence undesired remains :10.1.1.128.6559
addressed interpolation procedure describe :10.1.1.128.6559
value adt having investigated issues related representation various value types see may keep design object model independent particular type :10.1.1.128.6559
need outlines solution need mechanism handle value types uniform way regardless special properties regardless simple complex :10.1.1.128.6559
need adt acts mediator adts model deal values data objects actual adts implement value types :10.1.1.128.6559
reason define value adt works interface collection basic methods adt wants play role value type implement :10.1.1.128.6559
system interested special properties value derive value type value adt provide necessary functionality :10.1.1.128.6559
value adt shown :10.1.1.128.6559
value specific operations provided adts implement interface :10.1.1.128.6559
value operations void void value clone value adt :10.1.1.128.6559
representation time column properties time column time column contains sequence time points time series :10.1.1.128.6559
property identify time domain time points :10.1.1.128.6559
second property time column related regularity time sequence :10.1.1.128.6559
time series irregular additional information behaviour time domain real time series regular means time points randomly distributed time domain :10.1.1.128.6559
contrast correspond regular time intervals :10.1.1.128.6559
advance complete knowledge time points time series expected value time points called valid time points take advantage knowledge :10.1.1.128.6559
case regular time series second property time column description regularity :10.1.1.128.6559
representation time regularity order represent set valid time points regular time series need identify represent rules generate :10.1.1.128.6559
fortunately rules usually complicated common property divide time intervals characteristics repeat periodic way :10.1.1.128.6559
example common intervals week month period fact examples refer calendar time coincidence :10.1.1.128.6559
usually time series calendar time exhibit periodic characteristics :10.1.1.128.6559
ordinal time series usually time points valid :10.1.1.128.6559
definition regularity pattern description periodic time interval consists basic elements length interval time points contains distance time points granularity pattern equal length length interval :10.1.1.128.6559
role pattern define explicitly time points interval valid time point :10.1.1.128.6559
refer description rule generates periodic time intervals description regularity rule regularity pattern :10.1.1.128.6559
try description regularity order generate sequences valid time points see missing :10.1.1.128.6559
rule defines pattern interval provide information regarding instantiation :10.1.1.128.6559
need specific time point valid time point interval :10.1.1.128.6559
clearly time point unique infinitely time points equivalent :10.1.1.128.6559
exceptions despite flexibility definition regularity patterns offers important problem :10.1.1.128.6559
rule regularity patterns exceptions :10.1.1.128.6559
bank holidays example :10.1.1.128.6559
means time points general generated regularity pattern invalid time series :10.1.1.128.6559
possible solution inclusion exceptions regularity pattern form fixed list time points form rule generates :10.1.1.128.6559
second thought reveals problem extraordinary bank holidays special events exception rules unable catch :10.1.1.128.6559
addition exception mechanism careful exceptions exceptions case lead loss data :10.1.1.128.6559
result support regularity description data model limited definition regularity patterns exceptions missing values represented null values :10.1.1.128.6559
adt description define adt order represent rule generates valid time points time series :10.1.1.128.6559
correspondence fields data structure adt elements define periodic time interval self explanatory combination granule interval fields gives granularity pattern valid values granule depend time domain :10.1.1.128.6559
bit pattern field array corresponding time point included set valid time points periodic interval excluded :10.1.1.128.6559
field defines valid starting point pattern :10.1.1.128.6559
data structure integer granule integer interval bit pattern timepoint operations void initialize timepoint start timepoint integer distance timepoint tp timepoint tp adt :10.1.1.128.6559
clear powerful mechanism describing custom periodic time intervals :10.1.1.128.6559
apart descriptor periodic intervals main adt produce sequences valid time points :10.1.1.128.6559
order need specify time point desired sequence :10.1.1.128.6559
examples examples clearer rules adt :10.1.1.128.6559
definition regularity pattern time series valid points working days week granule day month interval pattern monday :10.1.1.128.6559
definition regularity pattern time series data objects value months valid time point day january :10.1.1.128.6559
granule month interval pattern january adt purpose adt group properties time column :10.1.1.128.6559
instances may adt regular time series adt irregular time series :10.1.1.128.6559
shown :10.1.1.128.6559
case irregular time information granularity held :10.1.1.128.6559
case regular time series regularity described means regularity pattern :10.1.1.128.6559
data structure integer operations boolean boolean boolean equals pattern data structure pattern data structure integer granule family adts :10.1.1.128.6559
representation data columns data independent properties data columns basic element set properties data column value type :10.1.1.128.6559
provides complete knowledge operations applicable data contains :10.1.1.128.6559
basic set properties completed name column coincides name data object records :10.1.1.128.6559
possible additional information form part data column properties cases apply numeric value type columns include unit val ues degrees gbp scaling factor data stored scaled :10.1.1.128.6559
information useful determining time series comparable :10.1.1.128.6559
limited value included model :10.1.1.128.6559
adt adt holds properties data column :10.1.1.128.6559
data structure string name integer adt :10.1.1.128.6559
data dependent properties data columns properties discussed far independent actual data :10.1.1.128.6559
apart specifying value type data object name value independent information give information actual values data object minimum maximum values appear column :10.1.1.128.6559
accord requirement keep model independent actual data cases existence statistics values data column may useful :10.1.1.128.6559
model provides mechanism keeping statistical information data columns :10.1.1.128.6559
means description data column apart data independent part data dependent part :10.1.1.128.6559
adt kind statistical information may kept data column depends value type column :10.1.1.128.6559
data structure integer operations void value val adt :10.1.1.128.6559
high level design lies determine exact contents statistical information :10.1.1.128.6559
thing provide general mechanism supports feature leave concrete implementation supported value types value adt :10.1.1.128.6559
provide statistics adt instances statistics adts value type :10.1.1.128.6559
statistical information independent value type included level number null values data column includes :10.1.1.128.6559
top level statistics adt :10.1.1.128.6559
example adt keeps statistical information specific value type look provide adt integer value type :10.1.1.128.6559
data structure integer sum integer integer minimum integer maximum adt :10.1.1.128.6559
representation groups data columns seen major advantage table representation time series ability handle separately data column :10.1.1.128.6559
ignore fact data column independent rest data columns independent time column :10.1.1.128.6559
wants find time point values corresponds access time column :10.1.1.128.6559
consider time series table higher level details individual data column important get structure consisting time column group data columns :10.1.1.128.6559
means group data columns group :10.1.1.128.6559
time want access locate retrieve group :10.1.1.128.6559
adt adt shown provides functionality group data columns :10.1.1.128.6559
data structure integer adt :10.1.1.128.6559
adt case adt additional adt needed order group provide easy access statistics data columns :10.1.1.128.6559
structure called adt :10.1.1.128.6559
addition statistics columns keeps general statistic applicable columns number rows columns equivalently total length time series :10.1.1.128.6559
data structure integer integer operations void value val adt :10.1.1.128.6559
representation collections time series collections having defined properties time data columns time series table grouped data columns entity step needed able completely describe time series combine information adding extra properties apply time series :10.1.1.128.6559
considering fact time series handling system may store process large number sequences useful time series management mechanism available :10.1.1.128.6559
set requirement chapter said mechanism elementary level provide possibility define groups time series :10.1.1.128.6559
existence groups essential example comparing time series comparing time sequences describe different data objects sense :10.1.1.128.6559
classification time series groups properties time data columns :10.1.1.128.6559
time series time properties number data columns pairs corresponding data columns properties may belong group :10.1.1.128.6559
condition necessary sufficient :10.1.1.128.6559
impedes having different groups consisting time series exactly properties :10.1.1.128.6559
collection adt account discussion model option provides possibility define groups time series call collections :10.1.1.128.6559
notion collection modelled collection adt :10.1.1.128.6559
collection data structure string name collection adt :10.1.1.128.6559
representation time series goal discussion arrive stage necessary tools definition really flexible adt describing time series available :10.1.1.128.6559
consist essentially description time column time series group containing descriptions data columns :10.1.1.128.6559
time series belongs collection necessary explicitly define properties derived :10.1.1.128.6559
data structure adt completed group statistics data columns name point time series :10.1.1.128.6559
timeseries adt complete definition timeseries adt :10.1.1.128.6559
detailed discussion contents self explanatory :10.1.1.128.6559
timeseries data structure string name collection collection statistics timepoint starttime timepoint endtime operations void value value timepoint tp integer timeseries adt :10.1.1.128.6559
summary chapter complete flexible object model representing properties time series :10.1.1.128.6559
overview model :10.1.1.128.6559
order develop model followed bottom approach begun modelling single values time points continued grouping sequences able model complete time series :10.1.1.128.6559
timeseries name collection starttime endtime statistics collection name name granule overview object model :10.1.1.128.6559
ordinal granule interval pattern model considering time series structure similar table columns contain time points values data objects time sequence :10.1.1.128.6559
structure easily implemented computer system allows represent natural way lot features time series simplify handling :10.1.1.128.6559
main advantage enabled model see different data objects time series separate entities properties :10.1.1.128.6559
model represent uniform way time series different time domains time series data objects different data type :10.1.1.128.6559
order kept model high level entering data type specific details :10.1.1.128.6559
details left implementation data type :10.1.1.128.6559
order represent regular time series developed flexible mechanism representing generating sequences time points follow certain pattern :10.1.1.128.6559
mechanism various optimisations system implementation stage :10.1.1.128.6559
addition recognizing necessity management mechanism systems amount time series constitute databases large introduced simple mechanism classifies time series structure groups :10.1.1.128.6559
step complicated time series management mechanism :10.1.1.128.6559
chapter data storage main purpose data storage mechanism provide fast access retrieval stored data :10.1.1.128.6559
access stable storage media generally slow performance system regardless quality data processing algorithms uses suffer significantly storage mechanism inefficient :10.1.1.128.6559
importance storage mechanism increases amount data larger :10.1.1.128.6559
time series handling system general deal large number time sequences consisting possibly thousands time points number probably grow time :10.1.1.128.6559
amount data potentially large lot disk accesses data retrieval operations expected :10.1.1.128.6559
way data stored essential importance need optimisation crucial :10.1.1.128.6559
chapter investigate various possible storage mechanisms time series data simplest improving step step testing time effects performance :10.1.1.128.6559
chapter enhance data model previous chapter order include information time series stored :10.1.1.128.6559
requirements general requirements storage mechanism independently nature data minimization storage space fast data retrieval :10.1.1.128.6559
requirement minimum storage space amount storage space available modern machines strict requirement :10.1.1.128.6559
second important :10.1.1.128.6559
decisions regarding implementation storage mechanism aim minimizing number disk accesses needed retrieval data :10.1.1.128.6559
due fact operations slower operations main memory :10.1.1.128.6559
heavy computing involved data processing file access data retrieval times factors determine performance :10.1.1.128.6559
try concrete general requirements considering special properties time series data compile list requirements :10.1.1.128.6559
order respect atomicity time series data time series kept different files :10.1.1.128.6559
solutions storing files data time series excluded tend inflexible :10.1.1.128.6559

ordering data files reflect serial character :10.1.1.128.6559
time series essentially sequences values inherent serial character :10.1.1.128.6559
fact reflected operations performed read sequentially part time series :10.1.1.128.6559

storing data time series file lead creation long files bad performance :10.1.1.128.6559
mechanism splitting data files available :10.1.1.128.6559
order efficiently access set files compose time series indexing mechanism available indicate file requested data :10.1.1.128.6559

storage space minimized absolutely necessary data preserve time integrity information stored :10.1.1.128.6559
essentially involves non storing time points regular time series :10.1.1.128.6559
entering details data stored files decision taken exactly stored :10.1.1.128.6559
seen types data constitute time series actual data include time points values data objects metadata :10.1.1.128.6559
data different far content format far usage concerned :10.1.1.128.6559
metadata time series available system times contain information necessary performance operation :10.1.1.128.6559
hand actual data usually interested part retrieve stable storage demand :10.1.1.128.6559
reflecting different nature data parts logical approach store separate place practically speaking means separate files :10.1.1.128.6559
call files contain metadata header files files contain actual data value files :10.1.1.128.6559
header files special interest simple format chosen :10.1.1.128.6559
focus data files :10.1.1.128.6559
storing data file previous chapter development time series object model table structure :10.1.1.128.6559
keep structure needs current chapter :10.1.1.128.6559
previous chapter modelled properties table structure :10.1.1.128.6559
interested actual data contains :10.1.1.128.6559
simplest way store time series create file put data :10.1.1.128.6559
intuitive way storage consider :10.1.1.128.6559
choices store rows table store columns :10.1.1.128.6559
row wise storage case get file identify records :10.1.1.128.6559
record consists time point followed corresponding values data objects smallest entity stored retrieved :10.1.1.128.6559
consider case want retrieve values data objects time series specific time point :10.1.1.128.6559
possibilities want retrieve values data objects :10.1.1.128.6559
cases perform seek operation file order locate record corresponds desired time point read record :10.1.1.128.6559
case exactly need second case problem :10.1.1.128.6559
reading record read data wanted 
just record problem number retrieved records increases claim inefficient storage scheme leads retrieval data requested :10.1.1.128.6559
situation bad :10.1.1.128.6559
firstly time series generally expected consist data columns probable scenario want process columns time series time :10.1.1.128.6559
secondly regardless number columns want retrieve need perform seek operation file order locate record :10.1.1.128.6559
seek operations expensive part retrieval procedure important advantage :10.1.1.128.6559
column wise storage case store data columns resulting file part containing time points part containing values data object part values second data object clearly previous problem :10.1.1.128.6559
notion record defined guarantee better performance :10.1.1.128.6559
consider example want retrieve part row :10.1.1.128.6559
values data objects correspond time point stored location file perform seek operations data objects want retrieve :10.1.1.128.6559
means read unwanted data order achieve increased number seek operations created complicated file access mechanism :10.1.1.128.6559
due relative costs seeking reading operations discussed expected general significantly degrade performance :10.1.1.128.6559
draw row wise storage scheme general efficient adopt rest chapter :10.1.1.128.6559
slight inefficiency cases serious problem :10.1.1.128.6559
omission time points assuming general format data files discuss possible improvements :10.1.1.128.6559
possible improvement regards storage time points :10.1.1.128.6559
contents time column certainly stored time series irregular way reconstructing :10.1.1.128.6559
storing case regular time series offer advantage completely reconstructed time metadata :10.1.1.128.6559
means excluded storage loss information :10.1.1.128.6559
benefit storage space required :10.1.1.128.6559
gain storage space depends number time series data objects storage space individual value requires :10.1.1.128.6559
assume values data object size bytes number bytes needed store time point kk numbers bytes needed value th data object gain storage space example regular time series consists real number data column time point value take space storing time points column save storage space :10.1.1.128.6559
splitting columns discussed problem having retrieve row time series interested values column :10.1.1.128.6559
noted important problem simple technique possibly address :10.1.1.128.6559
idea simple storing data columns file keep different file :10.1.1.128.6559
irregular time series need extra file time column :10.1.1.128.6559
policy simulates way column wise storage time series files :10.1.1.128.6559
approach attractive gain expect marginal :10.1.1.128.6559
general case gain depends number value type data columns time series cases method want retrieve data columns time :10.1.1.128.6559
retrieve column read data disk kept columns file certainly expect better performance :10.1.1.128.6559
case retrieving columns data retrieve access files time :10.1.1.128.6559
involves file opening closing seeking operations disk extinguish gain result increase total data retrieval time :10.1.1.128.6559
performance evaluation order evaluate efficiency storage policy performed test stored regular time series different lengths consisted columns real numbers file separate files file corresponding column :10.1.1.128.6559
measured time needed read time series processing values :10.1.1.128.6559
case time series stored file read data case stored files read time series times :10.1.1.128.6559
time read column second third columns fourth time columns :10.1.1.128.6559
results :10.1.1.128.6559
clearly see difference performance appears long time series keeping different files column leads better performance read files :10.1.1.128.6559
gain marginal :10.1.1.128.6559
results assume size bytes columns approximately :10.1.1.128.6559
reasonable assumption real time series :10.1.1.128.6559
case big differences sizes data columns expect slightly better performance storing columns separate files :10.1.1.128.6559
tests chapter performed system implemented basis object model previous chapter system architecture chapter :10.1.1.128.6559
time msec columns file column file columns files columns files columns files time series length total retrieval time time series consisting real value data columns data stored file separate file data column :10.1.1.128.6559
gain keeping different file column marginal appears long time series column retrieved :10.1.1.128.6559
cases keeping columns file seriously affect performance :10.1.1.128.6559
splitting rows decide store column separately potentially important problem remains unsolved :10.1.1.128.6559
problem concerns way data files accessed :10.1.1.128.6559
sequential access satisfactory performance seeking files involved read time series till need read values data objects specific time points :10.1.1.128.6559
storage model far case obliged read data form file reach desired record way knowing exactly files desired data located :10.1.1.128.6559
assumed time regularity fixed size bytes value type :10.1.1.128.6559
requests retrieval specific time points general rare frequent requests retrieval subsequences specified starting time point :10.1.1.128.6559
completely equivalent requests specific time points operation involves linear scanning time series :10.1.1.128.6559
case long time series lead bad performance :10.1.1.128.6559
solve problem need keep information location data files avoid searching time want retrieve record :10.1.1.128.6559
solution creation index :10.1.1.128.6559
request retrieval record corresponding specific time point received search index return exact location requested record files :10.1.1.128.6559
assuming allow random access files easily retrieve extra cost :10.1.1.128.6559
building index requires extra space time complexity easily avoid adopting clever storage policy storing data file separate column files case really matter split data parts containing rows time interval store part different file :10.1.1.128.6559
keep record time points correspond record file created small index tell file find time point index give exact location record file highly reduce time needed locate record prunes considerably search space :10.1.1.128.6559
file general shorter unique file containing result linearly scan smaller amount data :10.1.1.128.6559
scanning time series desired record scan file desired record resides actual record :10.1.1.128.6559
performance evaluation order measure gain derives storage policy just executed test stored long time series consisted points different ways corresponded storing time series files maximum capacity rows :10.1.1.128.6559
needed files respectively store time series :10.1.1.128.6559
time appropriate file index created :10.1.1.128.6559
single time points range time series randomly generated measured average access time locate retrieve :10.1.1.128.6559
results shown :10.1.1.128.6559
curve corresponds average retrieval time record :10.1.1.128.6559
see index dramatic effect response time :10.1.1.128.6559
shorter files higher granularity index seeking retrieval times :10.1.1.128.6559
similar approach keep file divide blocks having direct access :10.1.1.128.6559
simplicity examine case keeping different files results hold files divided blocks :10.1.1.128.6559
time msec number files average retrieval time record time series split files containing rows included specific time interval :10.1.1.128.6559
shorter intervals files better data retrieval performance :10.1.1.128.6559
deciding split rows results surprising :10.1.1.128.6559
formula curve easily derived length time series number files average number records file order locate retrieve record file need read average records :10.1.1.128.6559
assuming retrieval cost records general absolutely true affect results equal average cost retrieval record splitting policy really efficient value appropriate value chosen keep total cost low level :10.1.1.128.6559
alternatively specifying number files specify maximum capacity records file :10.1.1.128.6559
flexible time series expected grow means changes time :10.1.1.128.6559
doing guarantee constant average retrieval time :10.1.1.128.6559
question needs answered specify maximum capacity file :10.1.1.128.6559
simplest way specifying fixed capacity :10.1.1.128.6559
fine assign richer meaning size files store file rows correspond time intervals certain length fixed number rows :10.1.1.128.6559
provides way organize files intuitive way :10.1.1.128.6559
equivalent length specified number due existence calendar time regularity patterns :10.1.1.128.6559
length file constant slightly vary :10.1.1.128.6559
need mechanism splits time intervals approximately exactly length :10.1.1.128.6559
problem similar regularity description problem previous chapter simpler :10.1.1.128.6559
need generate sequences time points denote new time interval interested complicated patterns :10.1.1.128.6559
purpose adt pattern length equal :10.1.1.128.6559
order keep adt description regularity time series need functionality define intervals simpler way :10.1.1.128.6559
adt adt defines way similar adt periodic time intervals :10.1.1.128.6559
difference interested actual time points included interval valid invalid time points affect storage mechanism define pattern :10.1.1.128.6559
define length intervals combination granule interval value :10.1.1.128.6559
addition adt includes field determines different files data column desired :10.1.1.128.6559
data structure timepoint starttime integer granule integer interval boolean adt :10.1.1.128.6559
adt index created storing data value files available system time processing time series :10.1.1.128.6559
reading time disk inefficient unreasonably increase number disk accesses :10.1.1.128.6559
main memory :10.1.1.128.6559
creating searching need special adt structure time retrieval row time point requested binary search index time complexity log returns number file con tains requested values :10.1.1.128.6559
qualifying file read till requested record :10.1.1.128.6559
data structure timeline timepoint timepoint integer operations integer timepoint tp timepoint integer fileno timepoint integer fileno adt :10.1.1.128.6559
regularity pattern data index splitting data files existence file index prunes considerably search space needing retrieve time point expected meet demand performance :10.1.1.128.6559
special case increase performance :10.1.1.128.6559
previous chapter constructed complete adt order represent rules generate valid time points regular time series :10.1.1.128.6559
examine tool see index :10.1.1.128.6559
regular time series know time point record file corresponds file index calculate number valid points point time point record want retrieve :10.1.1.128.6559
regularity pattern relatively easy :10.1.1.128.6559
additional condition record size fixed holds multiplying size distance time points get exact location desired record :10.1.1.128.6559
means need read file form till desired record :10.1.1.128.6559
go directly location record read 
condition fixed record hold hold cases :10.1.1.128.6559
common value types integer real categorical value types fixed data size :10.1.1.128.6559
problematic case case strings length vary :10.1.1.128.6559
case decide loss storage space caused fixing length strings important additional improvement data retrieval time :10.1.1.128.6559
representation time series revisited defined appropriate adts order represent information time series may stored integrate additional information data model developed previous chapter :10.1.1.128.6559
system needs know information order execute operation data form part time series metadata :10.1.1.128.6559
reason extend timeseries adt previous chapter :10.1.1.128.6559
new version includes new fields data structure holding storage policy holding file index :10.1.1.128.6559
timeseries data structure string name collection collection statistics timepoint starttime timepoint endtime summary extended timeseries adt :10.1.1.128.6559
chapter investigated time series data efficiently stored stable storage achieve fast retrieval :10.1.1.128.6559
demonstrated storing data file lead poor performance saw avoided keeping data time series files :10.1.1.128.6559
keeping different files column time series prove significantly enhance performance :10.1.1.128.6559
hand keeping different files parts time series correspond different time intervals dramatic effect performance :10.1.1.128.6559
justified split equivalent creation index data :10.1.1.128.6559
granularity index depends number records stored file fine index considerably improve performance :10.1.1.128.6559
approach possible regular irregular time series :10.1.1.128.6559
special case regular time series regularity information order improve performance completely avoiding linear searching files :10.1.1.128.6559
parallel developed necessary adts model information operations splitting time series various files achieved :10.1.1.128.6559
extended timeseries adt previous chapter order include information storage :10.1.1.128.6559
chapter system architecture developing set time series data types created flexible mechanism representing time series level :10.1.1.128.6559
hand investigating storage options identified techniques guarantee efficient storage access data :10.1.1.128.6559
steps essential sufficient allow process data :10.1.1.128.6559
model store :10.1.1.128.6559
needed system data model storage mechanisms developed provide useful functionality :10.1.1.128.6559
functionality consists main parts access processing data :10.1.1.128.6559
done previous chapters optimising data structures storage mechanism important legacy system :10.1.1.128.6559
starting point flexible efficient infrastructure system take full advantage :10.1.1.128.6559
chapter general system architecture consisting data access data processing part :10.1.1.128.6559
design robust data retrieval mechanism data processing part focus creating extensible mechanism executing operations time series :10.1.1.128.6559
requirements purpose data access part fetch data stable storage deliver data processing part vice versa :10.1.1.128.6559
processing part uses data receives order perform calculations generate new data :10.1.1.128.6559
second case may send new data back data access subsystem order store :10.1.1.128.6559
call set possible calculations transformations input data operations :10.1.1.128.6559
purpose processing part provide general efficient way executing operations time series :10.1.1.128.6559
may general specification intentional :10.1.1.128.6559
processing part inflexible implementation probably common time series operations provide general framework processing time series :10.1.1.128.6559
aim design extensible mechanism defined interfaces allow integration new operations allow interact applications want functionality :10.1.1.128.6559
identify requirements :10.1.1.128.6559
data access data processing parts autonomous subsystems :10.1.1.128.6559
guarantees increased functionality allows need development data processing mechanisms storage retrieval mechanism :10.1.1.128.6559
operations execution mechanism develop chapter data processing mechanism :10.1.1.128.6559

data access data processing subsystems able handle time series imposing restrictions lengths value types take care missing values sequences :10.1.1.128.6559

processing subsystem implement common operations extensible :10.1.1.128.6559
provide easy way integrating new operations :10.1.1.128.6559
effectively achieved clean operations execution model independent nature specific operation :10.1.1.128.6559

extensibility cost efficiency :10.1.1.128.6559
strict unrealistic requirement contradictory nature goals :10.1.1.128.6559
usually order increase extensibility flexibility cost paid possibly sub optimal performance :10.1.1.128.6559
account consider requirement strict sense look solutions sense achieve compromise :10.1.1.128.6559
overview general architecture system develop chapter illustrated :10.1.1.128.6559
layered architecture reflects fact data access processing subsystems autonomous functionality system available third party applications :10.1.1.128.6559
briefly functionality layer follows layer layer implements data access subsystem :10.1.1.128.6559
layer maintains operates various data files system uses :10.1.1.128.6559
provides necessary low level operations creating reading writing files :10.1.1.128.6559
main role enable higher layers access stored data file format independent way :10.1.1.128.6559
converting bytes reads files instances data types data model vice versa :10.1.1.128.6559
files operates value header files :10.1.1.128.6559
header files create get result operation time series open save operation application operation operation write output buffer buffering execute create operation group output stream input stream value files interpolation input buffer buffering read peek mark :10.1.1.128.6559
architecture system :10.1.1.128.6559
consists core layers application level layer :10.1.1.128.6559
layer responsible retrieving data stable storage storing second part data processing takes place :10.1.1.128.6559
access header files particular interest :10.1.1.128.6559
small size access consists simply reading writing complete metadata time series :10.1.1.128.6559
focus describing access value files :10.1.1.128.6559
layer layer layer layer part subsystem implements access value files consists sub layers :10.1.1.128.6559
implements storage mechanisms described previous chapter :10.1.1.128.6559
second sub layer provides additional functionality :10.1.1.128.6559
particular responsible buffering data retrieved value files delivering layer stream vice versa :10.1.1.128.6559
existence second sub layer important opportunity describe detail included advantages sections :10.1.1.128.6559
briefly say part system guarantees system ability process time series length perform interpolation data transparent operations way enables data access data processing parts system really independent :10.1.1.128.6559
layer second layer belongs processing subsystem implements operations execution mechanism :10.1.1.128.6559
say layer belongs processing subsystem processing subsystem order clear data processing mechanism interacts lower layer may belong layer :10.1.1.128.6559
words second layer may formed data processing parts independent interacting :10.1.1.128.6559
data processing subsystem developed provides flexible way executing operations time series :10.1.1.128.6559
implements usual ones designed extensibility mind allows new operation integrated :10.1.1.128.6559
addition supports parallel execution operations :10.1.1.128.6559
layer layer shown part system application wants functionality :10.1.1.128.6559
shown functionality second layers available layer :10.1.1.128.6559
typically application extensive functionality lower layer :10.1.1.128.6559
open time series header files charge second layer execute operations :10.1.1.128.6559
collect results :10.1.1.128.6559
buffering ideally request process part time series result reading stable storage loading main memory requested sequence :10.1.1.128.6559
lead optimal performance minimize process disk access times :10.1.1.128.6559
fact time series potentially long approach infeasible :10.1.1.128.6559
trying load long sequence memory lead memory problems result inability process :10.1.1.128.6559
solution problem buffer acts intermediary stable storage data processing part system :10.1.1.128.6559
buffer part main memory fixed size hold time data capacity allows :10.1.1.128.6559
part data requested buffer checked order find part loaded :10.1.1.128.6559
data read forwarded processing data buffer discarded replaced new data read stable storage :10.1.1.128.6559
disk level buffering levels buffering consider system :10.1.1.128.6559
level regards low level file access operations belongs sublayer data access layer general system architecture :10.1.1.128.6559
aim speed data retrieval times reading buffering data requested :10.1.1.128.6559
major cost associated disk access time required perform seek operation right location disk :10.1.1.128.6559
transfer begins relatively fast slower transfer main memory :10.1.1.128.6559
result cost seeking record file seeking reading record greater seeking just reading successive records :10.1.1.128.6559
request specific record efficient read data required probable additional data requested subsequently especially case time series data scanned sequentially :10.1.1.128.6559
level buffering closer related physical properties disk content data existence essential performance :10.1.1.128.6559
parameter specified capacity buffer bytes :10.1.1.128.6559
application level buffering second level buffering higher level closer related application :10.1.1.128.6559
aim increase performance system terms speed guarantee reading parts time series time system able process time series length fit main memory :10.1.1.128.6559
low level buffer reads parts time series claim existence needs :10.1.1.128.6559
may true problem lowlevel buffer returns fixed sized blocks data disk blocks raw bytes semantics associated :10.1.1.128.6559
system works complex data structures raw blocks bytes arrive disk transformed meaningful data objects :10.1.1.128.6559
need mechanism conversion :10.1.1.128.6559
elegant way inserting new buffer low level buffer rest system hold part time series form meaningless bytes form meaningful objects rest system easily recognize handle appropriately :10.1.1.128.6559
buffer structure suitable form buffer system buffer hold fixed number rows time series table :10.1.1.128.6559
consist sub buffers data columns time series number columns retrieved files column wise split storage policy plus sub buffer containing corresponding time points :10.1.1.128.6559
part contain sequence time points read files case irregular time series sequence time points generated regularity pattern case regular time series :10.1.1.128.6559
form application level buffer described shown :10.1.1.128.6559
time points data column data column data column application level buffer values time column sub buffer data columns sub buffer application level buffer consists sub buffer time points sub buffer data object time series :10.1.1.128.6559
buffer operations buffer application level buffer supports standard fetch flush operations transfer data stable storage :10.1.1.128.6559
operations execution model shortly application level buffer system district roles time :10.1.1.128.6559
input output buffer 
request retrieval sequence higher levels system directed corresponding input buffer :10.1.1.128.6559
data loaded higher layer reads action taken :10.1.1.128.6559
current data buffer discarded new part time series staring requested time point loaded :10.1.1.128.6559
hand new data produced directed output buffer 
buffer overflows contents firstly written disk emptied order get ready accept new data :10.1.1.128.6559
operations execution model assumes time series processed system separate buffer associated input output buffer :10.1.1.128.6559
buffer filling strategy account serial character data fact request retrieval record corresponds specific time point probably followed request record buffer follows aggressive strategy fetch operation tries fill buffer reading part time series necessary :10.1.1.128.6559
existence application level buffer auxiliary having purpose allow system process time series length try implement way greatly affect performance :10.1.1.128.6559
buffer receives request retrieval record corresponds specific time point na approach see request independent previous requests :10.1.1.128.6559
case request needs load new data buffer assuming regularity pattern index see previous chapter need search file index determine file read read contents file till requested data record able load data buffer :10.1.1.128.6559
buffer filling strategy leads especially bad performance reads time value files advantage serial character requests :10.1.1.128.6559
consider fact request retrieval new data record probably follow request caused retrieval directly preceding data :10.1.1.128.6559
condition holds need read time value files :10.1.1.128.6559
new data simply retrieved continuing reading records location files request stopped :10.1.1.128.6559
performance evaluation order test performance na buffer filling strategy performed test saved time series consisting different ways splitting value files read time series performing processing different buffer sizes :10.1.1.128.6559
size varied :10.1.1.128.6559
time needed retrieve time series shown clearly illustrates high inefficiency strategy :10.1.1.128.6559
combination small buffer long value files leads unacceptable performance :10.1.1.128.6559
time msec files files files files files file buffer size time needed order read time series request filling buffer handled independently previous request :10.1.1.128.6559
time buffer file new data located read performance poor especially number files data split buffer size small :10.1.1.128.6559
section introduce streaming approach retrieving data see problem efficiently overcome :10.1.1.128.6559
problem solved possible source inefficiency regarding buffer remains :10.1.1.128.6559
inefficiency originates aggressive strategy adopted filling :10.1.1.128.6559
buffer large operation requests retrieval small subsequence short window time series filling buffer wasteful small portion retrieved data :10.1.1.128.6559
problem illustrated time needed retrieving window different sizes shown :10.1.1.128.6559
test gave results consisted measuring time needed retrieve random windows sizes time series buffers capacity varied :10.1.1.128.6559
various lines correspond different buffer sizes :10.1.1.128.6559
expected cost operation buffer size lower bound regardless size window :10.1.1.128.6559
lower bound time needed fill buffer :10.1.1.128.6559
buffer long size window affect total time longer time need forced fill buffer :10.1.1.128.6559
select reason able size buffer minimize negative effects having revise aggressive buffer filling strategy :10.1.1.128.6559
time msec window size buffer size time needed order extract window time series function buffer size length window :10.1.1.128.6559
buffer large window small data needed retrieved stable storage :10.1.1.128.6559
reasonably small buffer better cases :10.1.1.128.6559
data streaming seen buffering result general data processing subsystem available time data needs :10.1.1.128.6559
data read forwarded parts :10.1.1.128.6559
means existence buffer known data processing part system main reasons optimise performance presence guarantee correctness results produces :10.1.1.128.6559
implementing operations data processing part system buffer dependent way clearly disadvantage algorithmic logic operations mixed buffer management :10.1.1.128.6559
elegant implement operations transparent buffer way :10.1.1.128.6559
order separate buffer management operations introduce data streaming model :10.1.1.128.6559
idea hiding existence buffer operations allowing retrieve send rows time series buffer strictly sequential way allowing operate directly buffer :10.1.1.128.6559
streaming model operation read row incoming stream write row outgoing stream :10.1.1.128.6559
stream receives requests retrieval row storage newly created row responsible translating requests appropriate operations buffers :10.1.1.128.6559
sequential nature time series streaming model general expected negatively affect performance :10.1.1.128.6559
negative effects performance expected operation needs move forwards backwards stream :10.1.1.128.6559
usual possible scenario :10.1.1.128.6559
addressed operation responsible keeping part past data need :10.1.1.128.6559
stream possible solution cases cause new disk accesses degrade performance :10.1.1.128.6559
improving buffer filling strategy greatest advantages derive form streaming allows overcome efficiently problem mentioned regards wasteful reading data time buffer filled :10.1.1.128.6559
know sure operations receive data strictly sequential manner know request filling buffer preceded request filling immediately previous data files :10.1.1.128.6559
filling need continue reading value files form point request stopped :10.1.1.128.6559
performance evaluation dramatic increase performance new strategy results illustrated :10.1.1.128.6559
test produced results gave results revised buffer filling strategy :10.1.1.128.6559
demonstrates clearly achieved aim avoid important negative effects performance system application level buffer :10.1.1.128.6559
performance independent size files :10.1.1.128.6559
large files consequence unnecessary reading data :10.1.1.128.6559
contrast files perform slightly better :10.1.1.128.6559
due fact smaller number files file operations mainly open close operations performed :10.1.1.128.6559
point mentioned strange shape curves :10.1.1.128.6559
expect constant performance slightly increasing size buffer increases :10.1.1.128.6559
due fact larger buffer size fewer requests filling issued :10.1.1.128.6559
consider request con stant overhead requests lead slightly worse performance :10.1.1.128.6559
completely confirm expectations :10.1.1.128.6559
buffer size get optimal performance size relatively small :10.1.1.128.6559
strange behaviour may attributed partially size low level buffer earlier mainly caching policy operating system :10.1.1.128.6559
parameter control system :10.1.1.128.6559
see retrieval time bounded msec considered constant :10.1.1.128.6559
time msec files files files files files file buffer size time needed order read time series account sequential character requests filling buffer :10.1.1.128.6559
new request continues reading files point request stopped data read files :10.1.1.128.6559
gain performance obvious compared :10.1.1.128.6559
interpolating stream important advantage streaming model offers easy way perform interpolation :10.1.1.128.6559
interpolation procedure missing null values time points time series presence unwanted :10.1.1.128.6559
operations operate null values calculation dft coefficients time sequence :10.1.1.128.6559
brief interpolation procedure try guess value possible value sequence actual value missing replace missing value :10.1.1.128.6559
literature interpolation methods rich :10.1.1.128.6559
time series null values expected sparsely distributed replacement new non null value serious effects result analysis :10.1.1.128.6559
system implement complex interpolation functions offers simple interpolation modes :10.1.1.128.6559
time series data column consecutive null values non null value immediately non null value follows interpolation modes available :10.1.1.128.6559
back fill ni replaced :10.1.1.128.6559
forward fill ni replaced :10.1.1.128.6559
substitution ni replaced predefined fixed value addition numeric columns mode supported :10.1.1.128.6559
linear replaced say interpolation loading data buffer assumed buffer contains exact image contents value files :10.1.1.128.6559
right place perform interpolation transparent system way exactly level :10.1.1.128.6559
operations read data buffer stream easy insert new intermediate layer buffer higher layers modifies incoming stream desired way case performing interpolation :10.1.1.128.6559
interpolation layer works filter ensures null values reach higher layers system :10.1.1.128.6559
interpolation layer optional :10.1.1.128.6559
omitted operations responsible handling possible null values :10.1.1.128.6559
advantages streaming apart possibility perform interpolation follow efficient strategy filling buffer implement operations buffer independent way streaming model minor advantages :10.1.1.128.6559
firstly provides easy way operate subsequences time series :10.1.1.128.6559
want operate subsequence time series defined starting time point thing generate stream starts ends desired time points :10.1.1.128.6559
operations execution worry operating desired subsequence :10.1.1.128.6559
rows read incoming stream means subsequence reached :10.1.1.128.6559
furthermore notion stream gives intuitive way select operate data columns time series :10.1.1.128.6559
creating stream declare want send operations sub rows rows incoming time series easily :10.1.1.128.6559
summarising stream generated time series consists parameters :10.1.1.128.6559
time series data columns retrieves values time points perform interpolation :10.1.1.128.6559
operations execution subsystem discussion till concerned exclusively layer system implements data access mechanism :10.1.1.128.6559
seen processing mechanism may form layer system purpose develop operations execution mechanism :10.1.1.128.6559
order proceed need moment go back consider main objective :10.1.1.128.6559
objective mechanism efficient extensible :10.1.1.128.6559
goal successfully met identified classified possible operations time series analysed properties :10.1.1.128.6559
classification operations purpose classification time series operations attempt discover properties interest design extensible processing subsystem :10.1.1.128.6559
assuming sequential retrieval data complexity algorithmic structure properties useful knowledge type number inputs outputs :10.1.1.128.6559
classification detail category examples typical operations :10.1.1.128.6559
shall see paragraph classification basis defining handling different operations system :10.1.1.128.6559
class input time series subclass input data column category output value examples numerical time series statistical operations sum maximum minimum average standard deviation :10.1.1.128.6559
category output array values examples numerical time series extraction features calculation dft dwt coefficients subclass input data columns category output time series examples numerical time series calculation moving averages creation new time series aggregating differentiating integrating values input combination input number scaling shifting time series conversion regular irregular removal null values category output window examples time series window extraction operation class input time series subclass input data column category output value examples numerical time series calculation euclidian distance correlation time series subclass input mode data columns category output time series examples numerical time series calculation combination inputs addition multiplication selection minimum maximum values classification operations types number inputs outputs :10.1.1.128.6559
defining executing operation development system tried opt choices increase efficiency terms flexibility performance keep design general possible avoiding commit choices damage extensibility :10.1.1.128.6559
sensitive point far extensibility concerned exactly integration operations execution mechanism :10.1.1.128.6559
due concrete restrictive specifications operation easy choose implement integrate care additions :10.1.1.128.6559
order maintain flexibility need create general operation independent operations execution model :10.1.1.128.6559
achieve identify steps operation consists subsequently transform interface operations system :10.1.1.128.6559
independently actual implementation operation complies interface integration system possible :10.1.1.128.6559
definition interface concept stream wise retrieval generation data adopted data access part system :10.1.1.128.6559
having mind identify steps operation needs go order executed :10.1.1.128.6559
create instance operation :10.1.1.128.6559
stage want instance operation independent time series operate :10.1.1.128.6559
operation dependent parameters specified size window window extraction desired norm distance operation :10.1.1.128.6559

determine inputs operations :10.1.1.128.6559
equivalent binding operation time series streams data columns operate :10.1.1.128.6559

perform initialisation task :10.1.1.128.6559

retrieve rows incoming streams process :10.1.1.128.6559
may involve calculations writing new rows output streams :10.1.1.128.6559

perform finalization task :10.1.1.128.6559

get result execution :10.1.1.128.6559
steps describe way execution procedure operation getting details algorithm basis general operation interface :10.1.1.128.6559
particular step correspond method interface :10.1.1.128.6559
concrete implementation method operation specific constitutes actual operation :10.1.1.128.6559
steps regard instantiation operation passing necessary parameters steps steps operation executed :10.1.1.128.6559
general steps completely operation independent :10.1.1.128.6559
problematic steps :10.1.1.128.6559
steps case operation independent :10.1.1.128.6559
example step depending category operation belongs number inputs vary :10.1.1.128.6559
operation category need different second step :10.1.1.128.6559
step collects result operation :10.1.1.128.6559
type result depends category operation category dependent step :10.1.1.128.6559
operation adt observations define general interface operation comply order integrated system :10.1.1.128.6559
interface modelled operation adt :10.1.1.128.6559
operation operations void initialize timepoint tp value val void process timepoint tp value val void finalize operation adt :10.1.1.128.6559
point classification operations :10.1.1.128.6559
classification types inputs outputs operations operation category need concrete interface adds methods binding inputs collecting result steps :10.1.1.128.6559
step corresponds constructor operation belong interface :10.1.1.128.6559
example provide adts correspond categories practical reasons include value type data columns definitions interface adts :10.1.1.128.6559
say :10.1.1.128.6559
operations operation dependent instantiation process :10.1.1.128.6559

operations depending category belong implement appropriate sub interface operation adt :10.1.1.128.6559

operations provide concrete implementation methods interface belong :10.1.1.128.6559
operations methods provided sub interface may completely cover needs far passing parameters concerned :10.1.1.128.6559
reason operation allowed implement additional methods apart specified interface far methods called binding initialisation methods practically means additional step steps general execution procedure added :10.1.1.128.6559
necessary condition stage instantiation passing parameters operation steps new step operation independent execution stage needs completely operation independent steps :10.1.1.128.6559
case operation dependent generality flexibility available :10.1.1.128.6559
examples operations need extra step appendix implemented system operations interfaces :10.1.1.128.6559
operation operations void bind inputstream integer column value getresult operation operations void bind integer column integer column value getresult adding new operation sub interfaces operation interface :10.1.1.128.6559
developed complicated classification operations order maintain extensibility system allow new operations added :10.1.1.128.6559
operation implemented system needs added possibilities consider :10.1.1.128.6559

operation belongs implemented interface new operation needs provide concrete implementations methods interface additional parameter passing methods :10.1.1.128.6559

operation belong implemented interface new interface concrete implementation operation provided :10.1.1.128.6559
executing groups operations definition operation basis general interface meets requirement operation independent execution model :10.1.1.128.6559
steps interface followed right order operation may executed desired result may obtained :10.1.1.128.6559
identify possible source inefficiency :10.1.1.128.6559
suppose need calculate mean variance extrema time series :10.1.1.128.6559
time series want calculate euclidian distance possible pair :10.1.1.128.6559
tools till calculations independently executing corresponding operations :10.1.1.128.6559
case execute sequence operations time series second case operations :10.1.1.128.6559
wasteful way computations :10.1.1.128.6559
retrieve disk times time series read perform calculations concurrently :10.1.1.128.6559
second case save time read time series twice :10.1.1.128.6559
examples obvious mechanism group operations operate time series execute parallel expect better performance cases :10.1.1.128.6559
integrated facility system defining operation handlers represent group operations executed concurrently :10.1.1.128.6559
operation handler consists set operations set input streams correspond different time series operations operate :10.1.1.128.6559
operation handler executed executes operation steps described parallel way :10.1.1.128.6559
retrieving time row streams delivering appropriate operations processing :10.1.1.128.6559
details operation groups created executed appendix performance evaluation order test performance operation execution model system performed simple tests :10.1.1.128.6559
testing interpolation parallel execution time msec operation interpolation operations interpolation operations interpolation operation tion operations interpolation operations interpolation time series length effects interpolation execution time operations :10.1.1.128.6559
execution time increases slightly absolutely expected due increased number computations performed :10.1.1.128.6559
aim test examine effects execution groups operations interpolation procedure performance system :10.1.1.128.6559
facility system allows parallel execution groups operations executed time series lengths points groups operations consisting different simple statistical operations :10.1.1.128.6559
groups executed interpolating incoming streams :10.1.1.128.6559
execution times cases :10.1.1.128.6559
results show clearly execution times linear length time series execution time operation group increases number operations belong increases :10.1.1.128.6559
results expected particular interest :10.1.1.128.6559
interesting part effects interpolation :10.1.1.128.6559
see interpolation increases total execution time :10.1.1.128.6559
increase low absolutely justified increased number computations performed :10.1.1.128.6559
testing scalability different operations aim second test examine system behaves executes operations different categories :10.1.1.128.6559
test performed time series lengths points :10.1.1.128.6559
time series operations executed :10.1.1.128.6559
simple statistical operation calculation average value :10.1.1.128.6559

operation calculates euclidian distance time series :10.1.1.128.6559

operation calculates dft coefficients time series :10.1.1.128.6559

operation creates new time series aggregating values windows fixed size :10.1.1.128.6559
operations expect require execution time :10.1.1.128.6559
needs scan time series performing simple calculation value execution time increase linearly length time series :10.1.1.128.6559
second operation performs simple calculation value operates time series :10.1.1.128.6559
disk access time dominant factor need roughly twice time operation :10.1.1.128.6559
dft operation operates time series increased computational complexity :10.1.1.128.6559
noted expect linear increase execution time length time series increases operation calculate fixed number dft coefficients :10.1.1.128.6559
operation expect linear increase execution time expect slower increased operations :10.1.1.128.6559
execution involves reading writing data stable storage :10.1.1.128.6559
results experiments :10.1.1.128.6559
seen actual execution times completely expectations :10.1.1.128.6559
time msec average operation dft operation aggregation operation distance operation time series length execution time operations :10.1.1.128.6559
linear time complexity absolute execution time depends actual number computations operations need executed :10.1.1.128.6559
summary chapter complete system architecture data model storage schemes previous chapters provides data storage retrieval mechanism extensible flexible mechanism executing operations time series :10.1.1.128.6559
system layered architecture divides functionality separate defined parts :10.1.1.128.6559
lowest layer responsible storing retrieving data files second layer responsible processing :10.1.1.128.6559
data access part system introduced buffering mechanism order allow system operate time series regardless length :10.1.1.128.6559
described buffer filling strategies proved experiments general presence buffer negative effects performance system :10.1.1.128.6559
cases slight degradation performance expected careful selection buffer size minimized :10.1.1.128.6559
streaming approach retrieving data introduced order keep implementation processing part independent presence buffer :10.1.1.128.6559
starting idea saw concept simplified aspects system :10.1.1.128.6559
provided simple way perform interpolation remove burden operations :10.1.1.128.6559
modifying parameters streams send operations selected parts time series hiding details :10.1.1.128.6559
presence streaming sub layer damage performance system :10.1.1.128.6559
processing part layer developed robust mechanism executing operations time series :10.1.1.128.6559
designed complete flexible extensible operations execution model allows see operations way execute concurrently groups operations add new operations system :10.1.1.128.6559
basis design complicated classification possible operations various groups types inputs outputs :10.1.1.128.6559
cost complicated classification design necessary order extensibility system guaranteed :10.1.1.128.6559
chapter indexing seen detail chapter time series combination similarity queries :10.1.1.128.6559
main characteristic queries answered linearly scanning comparing data response time may poor especially large databases :10.1.1.128.6559
improve response time indexing techniques developed described chapter :10.1.1.128.6559
system previous chapter concentrated implementing operations execution mechanism time series say indexing similarity queries supported :10.1.1.128.6559
recognizing importance indexing mechanisms great improvement may processing similarity queries essential investigate extend system order add functionality :10.1.1.128.6559
able open architecture system :10.1.1.128.6559
chapter closely related chapter theoretical background indexing provided :10.1.1.128.6559
aim see indexing technical point view identify common steps techniques basic structure indices :10.1.1.128.6559
allow chapter extend system previous chapter general indexing mechanism :10.1.1.128.6559
requirements technically application indexing technique consists distinct stages creation index search :10.1.1.128.6559
processes special nature involves operations time series index :10.1.1.128.6559
fact allow consider indexing typical time series operation sense previous chapter :10.1.1.128.6559
means directly integrate operations execution mechanism developed need look solution :10.1.1.128.6559
emphasized previous chapter operations execution mechanism developed possible data processing subsystem system :10.1.1.128.6559
addition data processing subsystem possible far complies interface data access subsystem :10.1.1.128.6559
means integrating indexing support develop new data processing subsystem shall interacts operations execution subsystem :10.1.1.128.6559
operation execution subsystem great variety indexing techniques want new subsystem implementation specific indexing techniques :10.1.1.128.6559
want general flexible mechanism creation indexes order speed similarity queries :10.1.1.128.6559
index structure order create index decide exactly inserted choose appropriate indexing structure :10.1.1.128.6559
purpose helpful summarize general procedure indexing techniques time series data follow detail chapter :10.1.1.128.6559
convert time series subsequences length point dimensional space :10.1.1.128.6559

insert points individually grouping dimensional rectangles index :10.1.1.128.6559
steps clear similarity index essentially structure contains dimensional points rectangles :10.1.1.128.6559
regardless details index time series subsequences dimension points rectangles method grouping individual points rectangles needed structure efficiently index multidimensional objects :10.1.1.128.6559
structures known multidimensional point spatial access methods :10.1.1.128.6559
rich literature multidimensional access methods summary see :10.1.1.128.6559
tree efficient dynamic multidimensional access method point spatial access method structure basis indexes going develop :10.1.1.128.6559
continuing tree structure essential :10.1.1.128.6559
tree brief summary tree structure original presentation description tree height balanced tree index records leaf nodes contain pointers data objects :10.1.1.128.6559
index organizes dimensional rectangles containment relationship :10.1.1.128.6559
node associated dimensional rectangle minimum bounding box children nodes :10.1.1.128.6559
dimensional rectangles various nodes allowed overlap :10.1.1.128.6559
nodes tree correspond disk pages structure designed spatial search requires visiting nodes :10.1.1.128.6559
leaf nodes tree contain index records form objectid objectid pointer data object kx dimensional yn gle bounding box spatial object indexed :10.1.1.128.6559
data object ndimensional point bounding box trivial hyper rectangle containing point :10.1.1.128.6559
non leaf nodes contain entries form nodeid nodeid pointer lower node tree covers rectangles lower node entries :10.1.1.128.6559
structure satisfies properties :10.1.1.128.6559
lead node contains index records root :10.1.1.128.6559

index record objectid leaf node smallest rectangle mini mum bounding box spatially contains dimensional data object represented objectid :10.1.1.128.6559

non leaf node children root :10.1.1.128.6559

entry nodeid non leaf node smallest rectangle spatially contains rectangles child node :10.1.1.128.6559

root node children leaf :10.1.1.128.6559

leaves appear level :10.1.1.128.6559
height tree contains index records log log :10.1.1.128.6559
logarithmic relation height tree number objects indexes means non degenerated situations number os logarithmic number objects indexed :10.1.1.128.6559
order search rectangle point tree path root leaves followed testing bounding box node path containment overlapping :10.1.1.128.6559
general due fact bounding boxes nodes allowed overlap sub trees node may visited guarantee worst case performance :10.1.1.128.6559
order insert new data objects tree appropriate leaf chosen accommodating new object :10.1.1.128.6559
leaf full new entry inserted bounding boxes parents updated :10.1.1.128.6559
leaf full split :10.1.1.128.6559
split may propagated root :10.1.1.128.6559
decision leaf insert new data object split nodes case overflow heuristics try minimize overlapping nodes :10.1.1.128.6559
bounding boxes nodes tree indexes dimensional points :10.1.1.128.6559
minimum maximum entries node tree successful improvement original tree uses efficient heuristics order reduce node overlapping :10.1.1.128.6559
result better performance overlapping means search query fewer nodes visited :10.1.1.128.6559
creating index chosen indexing structure investigate map time sequences points rectangles inserted index :10.1.1.128.6559
procedure described detail chapter summarize basic parts :10.1.1.128.6559
converting sequences points main idea time series subsequence extract features numbers applying feature extraction function :10.1.1.128.6559
feature extraction function extracted features approximation original sequence original distance maintained :10.1.1.128.6559
conditions combination low number features necessary efficiency correctness index :10.1.1.128.6559
extracted features seen multidimensional point :10.1.1.128.6559
seen coefficients discrete fourier transform discrete wavelet transform approximation time series segmented means transformations satisfy criteria convert time series subsequence point :10.1.1.128.6559
extreme case consider time series multidimensional point application feature extraction function :10.1.1.128.6559
approach infeasible time series due length consequently extremely high dimensionality resulting point absolutely reasonable choice index short subsequences length points :10.1.1.128.6559
case extracted features approximation sequence exact sequence :10.1.1.128.6559
second step creation index determination feature extraction function :10.1.1.128.6559
sequence subsequence indexing applying feature extraction function need investigate data exactly apply :10.1.1.128.6559
problem applied time series subsequences :10.1.1.128.6559
depends exclusively application :10.1.1.128.6559
want index sequences apply feature extraction function sequence insert result index :10.1.1.128.6559
means index entries sequences want index :10.1.1.128.6559
hand want index subsequences extract time series possible subsequences length apply feature extraction function :10.1.1.128.6559
case subsequence produce point size index larger :10.1.1.128.6559
length subsequences parameter procedure :10.1.1.128.6559
normalization having decided length sequences want index consider additional problem :10.1.1.128.6559
seen distance metric applied directly raw data sensitive scaling shifting data :10.1.1.128.6559
order align data create common basis comparison insensitive transformations data normalized :10.1.1.128.6559
common normalization methods :10.1.1.128.6559
standard normalization usual way normalization consists converting sequence sequence average standard deviation :10.1.1.128.6559
normalization called standard normalization statistical properties sequence :10.1.1.128.6559
standard normalized form sequence easily calculated formula average original sequence deviation sequences normalized method derive simplified formula euclidian distance :10.1.1.128.6559
normalized sequences euclidian distance definition wi ti wi nr standard deviations sequences arithmetic means correlation :10.1.1.128.6559
account formula reduces range values correlation maximum valued euclidian distance fixed range normalization second type normalization simply scales shifts sequence appropriately forcing desired maximum minimum value :10.1.1.128.6559
choices maximum minimum values alter essence method :10.1.1.128.6559
needs chose maximum value normalized sequence minimum value :10.1.1.128.6559
maximum mini mum values sequence normal form formula nm mx mx value sequences vary maximum value manhattan distance euclidian distance distance :10.1.1.128.6559
difference normalization methods statistical properties sequences second considers shape :10.1.1.128.6559
method appropriate depends application :10.1.1.128.6559
general short sequences shape important fixed range normalization expected longer sequences fail detect long term properties sequences overestimate local fluctuations :10.1.1.128.6559
case standard normalization appropriate :10.1.1.128.6559
noted applying normalization optional :10.1.1.128.6559
case index subsequences need decide apply normalization procedure time series extracting subsequence subsequence individually :10.1.1.128.6559
grouping points rectangles index subsequences time series potentially important problem index large :10.1.1.128.6559
may lead poor performance :10.1.1.128.6559
example order index subsequences length time series length need insert index points points :10.1.1.128.6559
possible solution problem chapter :10.1.1.128.6559
idea observation probable consecutive subsequences mapped nearby points :10.1.1.128.6559
points grouped rectangles inserted index :10.1.1.128.6559
weak point approach normalize subsequence individually :10.1.1.128.6559
case especially subsequences short normalization spatial closeness points correspond consecutive subsequences :10.1.1.128.6559
normalized subsequences lose absolute positioning time series independent sequences :10.1.1.128.6559
depending application grouping points rectangles may may applicable :10.1.1.128.6559
searching index index created order answer similarity queries :10.1.1.128.6559
query consists sequence threshold distance answer set sequences database distance query sequence threshold :10.1.1.128.6559
order index query sequence undergo processing sequences inserted undergone :10.1.1.128.6559
comparison possible :10.1.1.128.6559
means query sequence eventually transformed multidimensional point :10.1.1.128.6559
threshold query determine multidimensional area point :10.1.1.128.6559
index say area point index included area may similar query sequence point outside area certainly similar :10.1.1.128.6559
shape area combination query sequence threshold creates depends distance metric :10.1.1.128.6559
shape query areas common distance metrics shown :10.1.1.128.6559
area dimensions query point norms :10.1.1.128.6559
combination shows way search index similar sequences retrieve index points included area query point index contains points rectangles overlap area index contains rectangles :10.1.1.128.6559
filtering false alarms step search procedure verification sequences index returned similar query sequence similar :10.1.1.128.6559
index may introduce false alarms :10.1.1.128.6559
false alarms expected cases :10.1.1.128.6559
insert index exact sequences approximations words applied feature extraction function :10.1.1.128.6559

grouped points rectangles :10.1.1.128.6559
case rectangle resulting grouping points may overlap query area point sequence included query area :10.1.1.128.6559
indexing subsystem having examined indexing structure way index created proceed goal design general indexing mechanism integrate system :10.1.1.128.6559
purpose helpful summarize parameters determine creation index :10.1.1.128.6559
:10.1.1.128.6559
index structure index :10.1.1.128.6559

feature extraction function map sequences points :10.1.1.128.6559

number features extracted sequence :10.1.1.128.6559
number dimensionality index calculated :10.1.1.128.6559

index index sequences subsequences length indexed sequences :10.1.1.128.6559

individual points grouped rectangles criteria :10.1.1.128.6559

data normalized normalization method 
adt parameters divided categories :10.1.1.128.6559
includes parameters independent details algorithms transform sequences index entries search index second ones includes algorithm dependent parameters :10.1.1.128.6559
algorithm depend 
index structure :10.1.1.128.6559

number extracted features :10.1.1.128.6559

length indexed sequences :10.1.1.128.6559
parameters determined user constitute basic structure similarity index details available :10.1.1.128.6559
adt order describe properties assuming tree underlying index structure :10.1.1.128.6559
data structure rtree tree integer integer operations void insert point byte description void insert rectangle byte description adt :10.1.1.128.6559
rest indexing procedure parameters general included general adt :10.1.1.128.6559
feature extraction function normalization method group points index sequences subsequences parameters different index :10.1.1.128.6559
particular specify exact procedure transformation sequences points search index performed answering query :10.1.1.128.6559
solution adopted separate structure combination feature extraction function normalization method subse quence indexing :10.1.1.128.6559
structure extend adt provide algorithm specific parts implementation :10.1.1.128.6559
means provide concrete implementation methods convert sequences entries index perform search index :10.1.1.128.6559
operations void index timeseries ts integer column operations result search timeseries ts integer column real threshold integer norm operations result search ts real threshold integer norm family adts :10.1.1.128.6559
order keep extensibility system able different indices uniform way :10.1.1.128.6559
purpose need common interface :10.1.1.128.6559
inputs search method depend index indexes sequences subsequences different sub interfaces needed :10.1.1.128.6559
adts implement needed interfaces :10.1.1.128.6559
indexing operations execution subsystem conversion sequence point application feature extraction function normalization process seen execution set operations :10.1.1.128.6559
means methods various indexing adts facilities operations execution subsystem developed previous chapter :10.1.1.128.6559
case converting time series points case transforming subsequences time series points seeing transformation separate operation lead poor performance :10.1.1.128.6559
know eventually extract process serial way subsequences time series optimize procedure :10.1.1.128.6559
purpose need operation responsible extracting turn possible subsequence time series inserting index new entries :10.1.1.128.6559
extensibility operations execution mechanism developed previous chapter integrating new operations easy :10.1.1.128.6559
due special nature new operations classified categories :10.1.1.128.6559
new interface operations category needed :10.1.1.128.6559
properties new category show extends table :10.1.1.128.6559
class input time series subclass input data column structure index category output index modified insertion new entries :10.1.1.128.6559
performance evaluation new class operations insert time series index :10.1.1.128.6559
general indexing mechanism just described implemented indexing techniques chapter :10.1.1.128.6559
particular implemented similarity indexes sequence similarity search dft segmented means sm :10.1.1.128.6559
time msec sm dft number features index search time :10.1.1.128.6559
search time increases number features result dimensionality index increases :10.1.1.128.6559
point noted implementation relation dimensionality index features extracted time series cases :10.1.1.128.6559
segmented means index situation straightforward dimensionality index coincides number extracted features :10.1.1.128.6559
situation complicated dft index :10.1.1.128.6559
dft feature complex number dimensionality points features correspond twice number extracted features :10.1.1.128.6559
know dft coefficient real sequence real number need include imaginary part final point inserted index :10.1.1.128.6559
reduces dimensionality index improves performance :10.1.1.128.6559
dimensionality index dft transform number extracted features :10.1.1.128.6559
order test performance indices executed test :10.1.1.128.6559
created synthetic sequences consisting points random walk xt xt zt zt :10.1.1.128.6559


sequences total indices created dft segmented means indices :10.1.1.128.6559
cases index contained features sequences :10.1.1.128.6559
time series inserted index having normalized standard normalization method :10.1.1.128.6559
time msec sm dft number features filtering false alarms time :10.1.1.128.6559
features original sequences kept better approximation original sequences fewer false alarms occur :10.1.1.128.6559
features dft provides better approximation original sequences :10.1.1.128.6559
segmented means provide better approximation number extracted features increases :10.1.1.128.6559
measured performance indices executing queries :10.1.1.128.6559
role query played time series randomly chosen set sequences produced :10.1.1.128.6559
threshold distance query set euclidian distance distance metric :10.1.1.128.6559
maximum distance sequences example expect query return average percent sequences matches query :10.1.1.128.6559
indices measured time needed search index time needed filter false alarms :10.1.1.128.6559
results shown respectively :10.1.1.128.6559
scanned total number fea tures ratio number sequences linearly scanned total number sequences :10.1.1.128.6559
essentially :10.1.1.128.6559
filtering false alarms stage sequences index returns possible matches true matches false alarms linearly scanned compared query sequence :10.1.1.128.6559
see dft index slower segmented means index performance degrades rapidly number features increases :10.1.1.128.6559
result absolutely justifiable fact dimensionality dft index double minus dimensionality segmented means index number features :10.1.1.128.6559
second see keep features original sequences dft method provides better approximation :10.1.1.128.6559
index works better returns matches :10.1.1.128.6559
fewer matches mean fewer sequences linearly compared filtering false alarms phase :10.1.1.128.6559
situation changes keep features :10.1.1.128.6559
segmented means method sm dft approximated better sequences returned fewer false alarms :10.1.1.128.6559
ratio number sequences indices returned possible matches total number sequences shown :10.1.1.128.6559
summary chapter extended system previous chapter order provide support answering similarity queries time series indexing :10.1.1.128.6559
operation execution subsystem aim create general infrastructure support indexing concrete implementation indexing techniques :10.1.1.128.6559
order achieve analysed technical point view time series indexed order speed similarity queries :10.1.1.128.6559
identified algorithm dependent independent parameters indexing methods showed basic indexing structure depend details indexing algorithm :10.1.1.128.6559
structure basis defined necessary interfaces concrete implementations order interact :10.1.1.128.6559
allowed create desired indexing subsystem system maintain flexibility extensibility :10.1.1.128.6559
system designed provides indexing support subsequence similarity search :10.1.1.128.6559
case provides necessary interface algorithm comply order system :10.1.1.128.6559
subsequence similarity indices handled system way details left implementation index insertion searching algorithms :10.1.1.128.6559
responsible creating interpreting meaning entries index :10.1.1.128.6559
indexing time series simplest case consists simply inserting index point sequence :10.1.1.128.6559
indexing algorithm needs extract sequence point :10.1.1.128.6559
case indexing subsequence similarity search complicated :10.1.1.128.6559
case indexing algorithm extract time series subsequences certain length extract features possibly try group nearby points reduce number entries index result size :10.1.1.128.6559
sensitive part subsequence similarity indexing algorithms search performance highly depends :10.1.1.128.6559
process developing indexing mechanism showed operations execution functionality system previous chapter :10.1.1.128.6559
extension addition new operations category necessary order increase performance subsequence similarity indexing operations :10.1.1.128.6559
chapter simple pattern matching purpose chapter investigate indexing technique order address real problem related analysis financial data :10.1.1.128.6559
adapt indexing techniques far specific needs problem evaluate results :10.1.1.128.6559
evaluation calculation relative gain terms processing time indexed method achieves na linear scanning method :10.1.1.128.6559
problem common problem analysis financial data problem trying predict movement data object price stock exchange rate currency days affect short term movement stock prices currency exchange rates :10.1.1.128.6559
essentially prediction problem solution analysis corresponding time series past :10.1.1.128.6559
aim analysis discovery interdependencies involved time series usually form rules describe certain behaviour time series past determined subsequent behaviour time series :10.1.1.128.6559
projection rules provide possible answer regarding expected movements time series :10.1.1.128.6559
outline solution idea order address problem simple find time intervals past time series similar behaviour identify behaviour affected time movement time series knowledge may try predict movements :10.1.1.128.6559
detail proposed methodology consists steps :10.1.1.128.6559
extract time series stock price currency exchange rate effects movement movements time series want investigate short subsequence window consisting values days :10.1.1.128.6559
call window movement window :10.1.1.128.6559

check time series find past windows length movement window similar behaviour movement window :10.1.1.128.6559
call windows past movement windows :10.1.1.128.6559

get time points past movement windows move forwards time time interval equal length movement window :10.1.1.128.6559

new time points extract time series movements want predict window certain length equal length desired prediction period :10.1.1.128.6559
call windows movement windows :10.1.1.128.6559

time series classify movement windows different sets applying clustering method :10.1.1.128.6559

sets generate time series set association rules movement windows :10.1.1.128.6559
having generated rules describe probability certain movement past followed movement similar movement try predict movement time series :10.1.1.128.6559
step procedure straightforward consists simply extracting movement window :10.1.1.128.6559
parameter specified exact length window :10.1.1.128.6559
value crucial procedure quality results depend :10.1.1.128.6559
specific guidelines length depends time scale user interested :10.1.1.128.6559
small size consisting points reasonable choice interested short term movements :10.1.1.128.6559
choose longer windows method subject noise :10.1.1.128.6559
steps special interest :10.1.1.128.6559
consist extracting windows time series system developed allows execute efficiently :10.1.1.128.6559
size extracted windows movement windows time parameter user specify :10.1.1.128.6559
reasoning previous case applied :10.1.1.128.6559
examine steps clustering discovery association rules subjects scope case study :10.1.1.128.6559
rest chapter focus execute efficiently second step :10.1.1.128.6559
pattern matching second step consists discovering subsequences past movement windows time series similar movement window :10.1.1.128.6559
clearly subsequence similarity search problem :10.1.1.128.6559
chapter adopt slightly different terminology call query sequence particular movement window pattern :10.1.1.128.6559
change name technical reflects nature approach going follow want see query sequence movement window sequence values defines shape particular line interested actual values sequence :10.1.1.128.6559
result refer subsequence similarity search pattern matching :10.1.1.128.6559
similarity metric normalization issue need investigate define exactly compare windows extract time series pattern order decide match specify exactly distance metric going :10.1.1.128.6559
euclidian distance commonly distance metric :10.1.1.128.6559
manhattan distance norm changing essence approach :10.1.1.128.6559
difference semantics value distance pattern windows :10.1.1.128.6559
stock price time series case study :10.1.1.128.6559
forget primarily interested find similar shapes :10.1.1.128.6559
technically means need normalize pattern windows comparing :10.1.1.128.6559
normalization methods previous chapter fixed range normalization satisfies best needs :10.1.1.128.6559
explained puts emphasis shapes sequences :10.1.1.128.6559
provide example window extraction normalization procedure 
shows time series stock price case study :10.1.1.128.6559
particular time series shell stock price :10.1.1.128.6559
normalized subsequences windows time series shown window length taken equal :10.1.1.128.6559
financial data window size choice corresponds week working days :10.1.1.128.6559
size analysis rest chapter :10.1.1.128.6559
extracting shape windows length sequence normalized fixed range normalization method :10.1.1.128.6559
finding matches having decided metric determine subsequence time series matches pattern ready proceed application method actual data :10.1.1.128.6559
na approach linearly scanning time series looking similar patterns :10.1.1.128.6559
means extract time series want find positions window similar pattern defined movement window appears possible subsequences length pattern normalize calculate distance normalized pattern :10.1.1.128.6559
distance window threshold considered match pattern included list results :10.1.1.128.6559
independently number matches linear scanning requires time length time series :10.1.1.128.6559
short time series length increases performance degrade :10.1.1.128.6559
section investigate apply indexing technique order speed search :10.1.1.128.6559
indexing pattern matching problem seen indexing problem follows want index time series subsequence similarity search normalized subsequences :10.1.1.128.6559
desired size windows known fixed additional requirement able search windows slightly different sizes possible :10.1.1.128.6559
feature extraction specifications parameters needed create index previous chapter thing remains decided feature extraction function actual number features extract windows :10.1.1.128.6559
mentioned specific problem interested matching short patterns consisting couples points chosen value points :10.1.1.128.6559
fact crucial leads important simplification indexing method need apply dimensionality reduction technique sequences want index dimensionality low allow creation efficient index :10.1.1.128.6559
features subsequences subsequences inserted index :10.1.1.128.6559
course normalize sequences inserting index affect dimensionality :10.1.1.128.6559
grouping points assumption size windows simplifies method potentially important problem building index subsequences time series resulting index large especially time series long window size small case :10.1.1.128.6559
mentioned method addresses problem discussion subsequence similarity search group heuristic features consecutive windows rectangles insert index rectangles points :10.1.1.128.6559
lead false dismissals increases number false alarms :10.1.1.128.6559
case building index containing features sequences sequences number false alarms expected anyway small number new false alarms add complexity method :10.1.1.128.6559
method applied case :10.1.1.128.6559
reason insert normalized subsequences index :10.1.1.128.6559
applied normalized function windows order extract shape comparison independent absolute values points :10.1.1.128.6559
hypothesis subsequent sequences similar signatures grouping method hold :10.1.1.128.6559
normalization subsequence loses absolute positioning time series independent pattern :10.1.1.128.6559
means normalization process applied order meaningful comparison subsequences allow improve performance index keeping size small :10.1.1.128.6559
grouping applied insert subsequence index creating index entries subsequences time series small windows roughly equal length time series :10.1.1.128.6559
reason grouping possible meet desired features index able index built specific window size order answer queries slightly different window sizes :10.1.1.128.6559
smaller windows impossible anyway keep information :10.1.1.128.6559
larger windows possible approach split large windows smaller ones execute queries combine results :10.1.1.128.6559:10.1.1.128.6559
normalization procedure destroys connection different windows :10.1.1.128.6559
returning grouping subsequent points mention case grouping possible reason :10.1.1.128.6559
grouping expect false alarms method :10.1.1.128.6559
feature extraction procedure insert exact subsequences index :10.1.1.128.6559
observation save lot processing time searching index verify results order filter false alarms :10.1.1.128.6559
set matches index true matches :10.1.1.128.6559
apply grouping strategy false alarms inevitable :10.1.1.128.6559
index parameters summarize application build index parameters :10.1.1.128.6559
length type subsequence index :10.1.1.128.6559

size subsequences :10.1.1.128.6559
feature extraction function 

normalization method fixed range 

grouping points rectangles performance evaluation order compare linear scanning indexing method indexing mechanism system built index parameters stock price time series :10.1.1.128.6559
time point time point time point time point euclidian distance euclidian distance euclidian distance matches time series example query euclidian distance threshold equal :10.1.1.128.6559
top pattern query corresponds points stock price time series :10.1.1.128.6559
bottom closest matches :10.1.1.128.6559
pattern starting point shown :10.1.1.128.6559
evaluation original problem part evaluation method executed exactly required second step solution original problem :10.1.1.128.6559
extracted movement window time series looked matches time series :10.1.1.128.6559
size window maximum distance patterns :10.1.1.128.6559
performed search various threshold distances :10.1.1.128.6559
searches performed index linearly scanning minimum maximum number entries tree index set respectively :10.1.1.128.6559
experiments showed values gave best performance :10.1.1.128.6559
values create deep tree reduce number overlaps data read disk due relatively small size nodes :10.1.1.128.6559
time series :10.1.1.128.6559
example matches got threshold distance equal shown :10.1.1.128.6559
shows execution time indexing linear scanning methods shows number matches :10.1.1.128.6559
figures horizontal axis represents ratio threshold distance query maximum distance :10.1.1.128.6559
shows number matches linear threshold distance :10.1.1.128.6559
reasonable result real data :10.1.1.128.6559
time msec index linear scanning threshold nce ma distance linear scanning indexed execution times :10.1.1.128.6559
linear scanning time constant indexed execution time increases linearly threshold distance :10.1.1.128.6559
see indexed execution time linear value threshold distance expected linear search takes constant time :10.1.1.128.6559
performance index better low threshold distances number matches low :10.1.1.128.6559
number matches increases linear scanning method begins perform better performing eventually better :10.1.1.128.6559
threshold distance high subsequences time series match pattern linear scanning times faster index :10.1.1.128.6559
degenerate situation appear real application :10.1.1.128.6559
behaviour index absolutely justifiable :10.1.1.128.6559
high threshold distances correspond large query areas tree index :10.1.1.128.6559
means nodes examined read disk number overlaps rectangles nodes tree query area relatively high :10.1.1.128.6559
larger area nodes sub trees tree read eventually having read tree :10.1.1.128.6559
leads disk accesses retrieval data :10.1.1.128.6559
index contains data time series nodes contain information objectid part leaf nodes example nodes non leaf levels exist raw time series data value time point time series inserted index times length window stored rectangle point :10.1.1.128.6559
case value point exists index times participates windows original sequence :10.1.1.128.6559
amount data read read random way moves tree :10.1.1.128.6559
linear scanning efficient point :10.1.1.128.6559
reads data efficient way serially :10.1.1.128.6559
matches general test threshold distance maximum distance number matches :10.1.1.128.6559
number increases linearly threshold distance :10.1.1.128.6559
order evaluate method general case performed test selected range time series randomly time points extracted windows length started :10.1.1.128.6559
windows patterns searched time series matches :10.1.1.128.6559
measurements taken threshold distances :10.1.1.128.6559
time measured time needed find matching windows linearly scanning time series index :10.1.1.128.6559
ratio time needed linear scanning index search time various queries experiment produced :10.1.1.128.6559
horizontal axis represents query selectivity ratio number matches total number subsequences length time series :10.1.1.128.6559
size indexes bytes general times greater size corresponding time series :10.1.1.128.6559
experiment verifies previous results :10.1.1.128.6559
index efficient linear scanning queries low selectivity case corresponds matches :10.1.1.128.6559
linear scanning better choice expect query produce large number matches :10.1.1.128.6559
applications looking close consequently matches :10.1.1.128.6559
time serial time index query selectivity evaluation original method fixed range normalization short time series :10.1.1.128.6559
index better selectivities :10.1.1.128.6559
improvement case identify weak point index :10.1.1.128.6559
normalized data fixed range points index expected value dimensions equal value dimension equal :10.1.1.128.6559
means points inserted tree uniformly distributed hyper rectangle constitutes address space index :10.1.1.128.6559
concentrated hyper planes :10.1.1.128.6559
addition take account heuristics tree structure uses order efficiently split nodes new entries inserted calculation areas rectangles expect poor quality far overlapping nodes concerned tree created :10.1.1.128.6559
solution problem modify heuristics tree take account peculiarity application :10.1.1.128.6559
way overcome change normalization method standard normalization method :10.1.1.128.6559
opted different approach 
normalized windows extracted time series converted new sequences values :10.1.1.128.6559
values new sequences differences consecutive values original windows :10.1.1.128.6559
sequence length converted new sequence defined formula xi xi example patterns converted sequences shown :10.1.1.128.6559
eliminate problem mentioned important benefit :10.1.1.128.6559
reduces length sequences inserted index dimension :10.1.1.128.6559

































































differentially normalized windows :10.1.1.128.6559
windows :10.1.1.128.6559
noted distance new sequences distance original sequences :10.1.1.128.6559
euclidian distance original sequences distance new sequences maximum distance sequences experimental results showed choosing appropriate values threshold dis tance matches methods return vary :10.1.1.128.6559
instance query returned exactly matches :10.1.1.128.6559
results method experiment shown :10.1.1.128.6559
displayed ratio time needed linear scanning index search time :10.1.1.128.6559
see improvement efficiency index :10.1.1.128.6559
index performs general better selectivity range better wider approaches value :10.1.1.128.6559
time serial time index query selectivity evaluation modified method differentially normalizing windows short time series :10.1.1.128.6559
performance index better wider selectivity range :10.1.1.128.6559
testing scalability order test method scales larger time series tested time series length :10.1.1.128.6559
time series represented exchange rate euro currency dollar period :10.1.1.128.6559
test performed original improved approaches results show respectively :10.1.1.128.6559
see larger sequences performance index better gain modified method important :10.1.1.128.6559
clearly see original approach index better query selectivities modified approach increases limit important improvement :10.1.1.128.6559
interesting result shown shows absolute indexed execution time queries produced :10.1.1.128.6559
time serial time index time serial time index query selectivity evaluation original method fixed normalization method long time series :10.1.1.128.6559
clearly index better linear scanning method selectivities lower :10.1.1.128.6559
query selectivity evaluation modified method differentially normalizing windows long time series :10.1.1.128.6559
limit selectivity range index better :10.1.1.128.6559
verifies time needed index increases linearly number matches equivalently query selectivity increases :10.1.1.128.6559
means constant execution time linear scanning method value selectivity index better linear scanning better :10.1.1.128.6559
seen limit case :10.1.1.128.6559
time msec time serial time index query selectivity indexed execution time :10.1.1.128.6559
time method index needs increases linearly selectivity query :10.1.1.128.6559
query selectivity evaluation method larger window :10.1.1.128.6559
high dimensionality windows extracted performances index poor :10.1.1.128.6559
order test scalability method larger windows created index longer time series improved normalization method :10.1.1.128.6559
specifications size windows taken equal :10.1.1.128.6559
ratio linear scanning time index time shown :10.1.1.128.6559
results previous cases :10.1.1.128.6559
low query selectivities performance index marginally better performance linear scanning method :10.1.1.128.6559
behaviour explained take account degradation performance index dimensionality increases :10.1.1.128.6559
window length corresponds dimensionality index value close limits spatial access methods poor performance :10.1.1.128.6559
general rule exponential degradation performance expected dimensionality increases :10.1.1.128.6559
summary chapter investigated indexing technique applicable problem performing fast pattern matching small window sizes financial time series :10.1.1.128.6559
began setting parameters index suitable application :10.1.1.128.6559
main observation small size window need apply feature extraction function insert subsequences directly index :10.1.1.128.6559
important benefit observation index find matches producing false alarms :10.1.1.128.6559
hand due fact inserted index normalized windows unable apply point grouping policy insert windows index :10.1.1.128.6559
lead relatively big index loss performance due size countered fact filtering false alarms phase needed :10.1.1.128.6559
performed series comparisons performance index linear searching approach :10.1.1.128.6559
results showed small window sizes index expected better selectivity query high :10.1.1.128.6559
time needed index increases linearly selectivity increases point index performs worse linear scanning method :10.1.1.128.6559
window size points limit point selectivity cases acceptable value :10.1.1.128.6559
addition saw normalization method chose tree structure suitable indexing structure :10.1.1.128.6559
order overcome problem proposed insert index differentiated version original sequences :10.1.1.128.6559
doing achieved decrease dimensionality index increase performance performed better linear scanning method query selectivities :10.1.1.128.6559
performance index worse size window result dimensionality index increases :10.1.1.128.6559
method applied sizes windows large dimensionality reduction technique :10.1.1.128.6559
chapter pattern matching time warping multiple resolutions previous chapter context real application discussed problem efficiently search existence certain pattern time series :10.1.1.128.6559
pattern matching algorithm described euclidian distance norm way normalization procedure order method tolerant uniform amplitude scaling shifting sequences :10.1.1.128.6559
main limitation method pattern windows extracted time sequence exactly length shifting time axis tolerated :10.1.1.128.6559
mentioned chapter weakness norm distance metric family inappropriate similarity search take account possible distortions sequences time axis :10.1.1.128.6559
distortions addressed time warping distance metric :10.1.1.128.6559
chapter examine problem searching short patterns time series time base approach time warping distance :10.1.1.128.6559
addition flexibility dynamic time warping algorithm offers far length compared sequences concerned interested looking patterns original time sequence resolution levels :10.1.1.128.6559
single resolution suppose sequence length want find subsequences windows length match pattern length time warping distance :10.1.1.128.6559
lengths necessarily differ order time warping algorithm produce unintuitive results shall see example complications may arise size pattern windows differ :10.1.1.128.6559
problem typical similarity search problem assuming time interested answering index apply simple linear scanning method :10.1.1.128.6559
similarity query extract sequence subsequences length calculate time warping distances pattern :10.1.1.128.6559
done previous chapter order comparison pattern extracted subsequences meaningful need normalize calculating distance :10.1.1.128.6559
normalization methods may :10.1.1.128.6559
fact time warping distance euclidian distance change essence basic similarity search procedure :10.1.1.128.6559
difference semantics results complexity algorithm calculates distance :10.1.1.128.6559
seen complexity euclidian distance extracted window just corresponding complexity time warping distance time sequence extract windows assuming complexity methods respectively :10.1.1.128.6559
lengths small time warping algorithm behave increase slow :10.1.1.128.6559
existence index built time warping distance speed response time prune number sequences compared :10.1.1.128.6559
interested short patterns case response time algorithm absence index tolerable :10.1.1.128.6559
varying window size size windows compared pattern necessarily remain fixed :10.1.1.128.6559
fixed window size benefit flexibility time warping algorithm :10.1.1.128.6559
means allow size window slightly vary defining minimum size min maximum size max case differ size pattern :10.1.1.128.6559
problem equivalent having max min similarity search problems fixed window size need execute similarity search procedure times :10.1.1.128.6559
allow size window vary consider additional problem :10.1.1.128.6559
similarity query consists query sequence threshold value distance :10.1.1.128.6559
correct answer queries window sizes threshold favour smaller window sizes :10.1.1.128.6559
longer window sizes possibly close pattern greater distance distance sum distance points :10.1.1.128.6559
presenting definition time warping distance mentioned time warping distance algorithm creates new sequences sequence compares aligning optimal way points :10.1.1.128.6559
length sequence increases maximum length new sequences created time warping algorithm increases :10.1.1.128.6559
length increases linearly corresponding value distance :10.1.1.128.6559
time warping distance window size time warping distance pattern windows sizes normalized standard normalization method :10.1.1.128.6559
value time warping distance increases linearly size window :10.1.1.128.6559
normalized data effect expected strong see time warping distance normalized windows sizes extracted randomly stock price time series normalized patterns size created randomly displayed :10.1.1.128.6559
data normalized expect steeper increase values time warping distance :10.1.1.128.6559
case want account linear increase value time warping distance specify similarity query gradient value value threshold distance :10.1.1.128.6559
threshold distance correspond threshold minimum window size gradient order calculate threshold distances longer windows :10.1.1.128.6559
threshold distance shortest window value gradient threshold distance window length min max min value depends value range compared sequences :10.1.1.128.6559
multiple resolutions method help discover time sequence windows slightly different sizes match pattern :10.1.1.128.6559
interesting extension problem find pattern exists original sequence resolution levels :10.1.1.128.6559
useful allow look existence certain patterns long term movements sequence :10.1.1.128.6559
entering discussion essential define mean exactly saying want look existence pattern resolution levels time sequence :10.1.1.128.6559
suppose pattern length want match windows time sequence size zero resolution level :10.1.1.128.6559
reduce level resolution perform search double size windows extract compare pattern :10.1.1.128.6559
resolution level compare windows size pattern resolution level windows size discussion follows initially assume size window search resolution level zero performed fixed :10.1.1.128.6559
examine varying window size problem :10.1.1.128.6559
doubling window size approach follows exactly definition resolution levels gave :10.1.1.128.6559
searching algorithm resolution level zero extracts sequence compares pattern subsequences length level subsequences note assigned zero resolution level original sequence time reduce resolution level resolution level increased :10.1.1.128.6559
length subsequences length length exceeds size original sequence :10.1.1.128.6559
sizes windows extracted compared pattern form sequence resolution level :10.1.1.128.6559
length sequence resolution level number windows extracted course restriction equivalently written maximum resolution level log log log log sequences eventually compared pattern complexity mi mi mi going estimate complexity algorithm :10.1.1.128.6559
resolution levels extract sequence possible windows calculate time warping distance pattern :10.1.1.128.6559
complexity dtw algorithm resolution level window wi simplicity assume algorithm performs exactly wi computations level number computations total number computations resolution levels xi account equation algorithm quadratic complexity log doubling window pattern size apart high complexity algorithm described suffers important problem may useless high resolution levels :10.1.1.128.6559
previous section said sizes windows extracted sequence compared pattern allowed vary emphasized size differ pattern size :10.1.1.128.6559
happens time warping algorithm fail :10.1.1.128.6559
window window distance window distance window distance window distance window distance window distance window time warping distances windows different resolutions pattern :10.1.1.128.6559
top windows :10.1.1.128.6559
bottom pattern different resolutions distance windows :10.1.1.128.6559
euclidian distance base distance metric time warping distance :10.1.1.128.6559
dynamic time warping may produce pathological results comparing windows different sizes :10.1.1.128.6559
consider example top different windows length shown bottom pattern seen different resolutions :10.1.1.128.6559
window pattern pair time warping distance calculated :10.1.1.128.6559
see results size window different size pattern disappointing :10.1.1.128.6559
time warping algorithm produces completely unintuitive results :10.1.1.128.6559
keeping size pattern normally consist points fixed increasing exponentially size windows compared cause time warping algorithm produce completely false results :10.1.1.128.6559
order overcome problem keep size pattern level size subsequences compared :10.1.1.128.6559
simplest way time go resolution level double size windows size pattern :10.1.1.128.6559
simple linear interpolation fill values new points created pattern :10.1.1.128.6559
note order damage shape pattern increasing resolution exactly double size new size double previous size minus :10.1.1.128.6559
resolution level size pattern formula complexity time complexity method expected higher previous method due exponential increase size pattern :10.1.1.128.6559
equation written log algorithm cubic complexity multiresolution analysis doubling size pattern resolution level addressed problem algorithm cost increased complexity :10.1.1.128.6559
overcome problem high complexity need different approach 
idea simple doubling sizes windows patterns order jump resolution level try keep size windows compare pattern fixed :10.1.1.128.6559
achieve complexity algorithm insensitive increase resolution levels compare windows patterns fixed small size :10.1.1.128.6559
keeping size extracted windows fixed impossible able define resolution levels :10.1.1.128.6559
simple way overcome problem :10.1.1.128.6559
keep doubling size windows extract comparing directly pattern calculate averages successive pairs points create new sequences values compare new sequences pattern :10.1.1.128.6559
keep newly calculated sequences basis calculation sequences resolution level :10.1.1.128.6559
illustrates procedure just described :10.1.1.128.6559
level level level level level reducing resolution sequence calculating averages nearby points :10.1.1.128.6559
idea borrowed wavelets particular haar transform offers simple way see sequence levels resolution time domain :10.1.1.128.6559
additional advantage way increasing resolution desired collateral effect filtering noise original sequence smoothing effect :10.1.1.128.6559
approach promising compared previous ones :10.1.1.128.6559
time complexity algorithm lower due logarithmic decrease size sequences level notion resolution captured better natural intuitive way :10.1.1.128.6559
analyse method :10.1.1.128.6559
lengths sequences resolution levels ln order continue analysis assume length original sequence power :10.1.1.128.6559
length resolution level li levels need window fixed size means number comparisons performed level li xi sequences eventually compared pattern complexity xi total number computations calculation time warping distance resolution levels equation :10.1.1.128.6559
value add number averages calculated :10.1.1.128.6559
complexity algorithm extended multiresolution analysis previous method addresses efficiently problem obtaining different resolution levels sequence weakness :10.1.1.128.6559
way creates sequences correspond resolution levels original sequence biased may prevent pattern matching algorithm detecting matches :10.1.1.128.6559
level new sequences created averages pairs previous sequences starting averaging procedure point :10.1.1.128.6559
reason restrict procedure start point :10.1.1.128.6559
allow start second point new sequences created resolution levels may contain matching windows :10.1.1.128.6559
extend previous method account problem :10.1.1.128.6559
illustrates new method creates just new sequences various resolution levels :10.1.1.128.6559
level creates sequences level sequences :10.1.1.128.6559
level level level level level reducing resolution sequence calculating possible sequences resolution levels :10.1.1.128.6559
analyse improved method :10.1.1.128.6559
simplicity calculations multiplex sequences resolution consists sequence show calculations performed butterfly manner :10.1.1.128.6559
values marked number belong sequence :10.1.1.128.6559
lengths sequences produced resolution level lengths form sequence previous method level compare sequences sizes pattern :10.1.1.128.6559
due way multiplex sequences resolution level window contains points subsequence compared pattern length course contents compare time elements pattern :10.1.1.128.6559
number comparisons performed level number greater zero expected derive equation maximum resolution level :10.1.1.128.6559
new general form equation complexity mi xi total number computations perform order calculate time warping distance pattern subsequences value add number averages calculated :10.1.1.128.6559
complexity algorithm comparison log compare methods terms quality results produce time complexity :10.1.1.128.6559
quality results methods operate original data resolution levels create intermediate sequences correspond different resolutions original sequence cf :10.1.1.128.6559
equation equations :10.1.1.128.6559
matches detect different directly comparable :10.1.1.128.6559
methods offer intuitive way handling different resolution levels smoothing effect :10.1.1.128.6559
general expected produce better results :10.1.1.128.6559
addition mentioned method due way time warping algorithm works produce useful results couple resolution levels :10.1.1.128.6559
difference third fourth method third creates eventually compares pattern sequences :10.1.1.128.6559
sequences third method creates subset sequences fourth method third method produce fewer matches matches fourth method :10.1.1.128.6559
general third method fail find matching subsequences :10.1.1.128.6559
complexity complexity algorithms examined log respectively :10.1.1.128.6559
quality results second method clearly higher cost increased complexity :10.1.1.128.6559
reason practical application second method problematic :10.1.1.128.6559
short sequences slow :10.1.1.128.6559
contrast methods complexity third fourth algorithm guarantee acceptable response time relatively long sequences :10.1.1.128.6559
increased complexity fourth algorithm cost paid order retrieve possible matches resolution levels :10.1.1.128.6559
normalization case interested searching patterns original sequence normalize new methods sequences calculating distance :10.1.1.128.6559
pay attention exactly normalize third fourth method 
normalization various resolution levels :10.1.1.128.6559
normalization high resolution levels done account values original sequence resolution level zero patterns original sequence may appear :10.1.1.128.6559
consider instance sequence :10.1.1.128.6559
sequence consists points form resolution level consists points shown :10.1.1.128.6559
normalize standard normalization method new sequence get sequence :10.1.1.128.6559
see normalized sequence resolution level distinguishable pattern exist original sequence :10.1.1.128.6559
pattern looking similar sequence sequence classified matching pattern :10.1.1.128.6559
obviously undesirable :10.1.1.128.6559
problem normalized sequence high resolution level independently original values resolution level zero :10.1.1.128.6559
right normalization sequences equation produced resolution levels normalization methods chapter ns mi ti mi mi ti mi ti mi respectively average standard deviation mi minimum maximum value sequences equation :10.1.1.128.6559
varying window size searched patterns original sequence allow size windows want match pattern slightly vary :10.1.1.128.6559
additional restriction regards allowed sizes windows satisfy inequality wmax wmin due way various resolution levels created :10.1.1.128.6559
see problem equivalently set problems fixed window size :10.1.1.128.6559
means high number computations increase :10.1.1.128.6559
discussion second method excluded exactly reason :10.1.1.128.6559
performance bad windows fixed sizes worse :10.1.1.128.6559
number computations methods derived formulas developed :10.1.1.128.6559
example fourth method new form formula max wmin max wmin log log wk wk log wk expect performance decline considerably range window size increases :10.1.1.128.6559
case study case study going evaluate third fourth method developed :10.1.1.128.6559
restrict methods due high time complexity poor quality results expect methods :10.1.1.128.6559
evaluation searched patterns time series chapter shown :10.1.1.128.6559
searching algorithms implemented new operations integrated system chapter :10.1.1.128.6559
pattern query :10.1.1.128.6559
looked pattern distance threshold equal euclidian distance base distance metric standard normalization pattern windows :10.1.1.128.6559
matches shown :10.1.1.128.6559
time point time point time point window size window size window size resolution level resolution level resolution level time warping distance time warping distance time warping distance time point time point time point window size window size window size resolution level resolution level resolution level time warping distance time warping distance time warping distance time point time point time point window size window size window size resolution level resolution level resolution level time warping distance time warping distance time warping distance time point time point time point window size window size window size resolution level resolution level resolution level time warping distance time warping distance time warping distance closest matches pattern normalizing windows standard normalization method :10.1.1.128.6559
algorithm manages find sequences similar query pattern resolution levels :10.1.1.128.6559
matches intuitively correct :10.1.1.128.6559
undesired effect fact high resolution levels sequences start nearby time points similar appear times results :10.1.1.128.6559
problem easily solved grouping matches :10.1.1.128.6559
matches marked asterisk detected third fourth method :10.1.1.128.6559
rest matches detected fourth method :10.1.1.128.6559
see fourth pattern matching algorithm windows similar pattern resolutions time sequence window sizes third matches original sequence :10.1.1.128.6559
cases matches intuitively correct :10.1.1.128.6559
distance pattern increases quality gets worse expected :10.1.1.128.6559
fact third algorithm failed detect matches higher resolutions expected :10.1.1.128.6559
detect matches higher resolutions happens chance matches coincide sequences constructs :10.1.1.128.6559
fourth algorithm leave things change searches exhaustively possibilities manages find matches higher resolutions :10.1.1.128.6559
problem note high resolutions fourth algorithm tends return matches nearby starting time points similar :10.1.1.128.6559
absolutely justifiable way constructs sequences annoying effect :10.1.1.128.6559
come problem keeping set matches algorithm detects high resolution levels starting time points close :10.1.1.128.6559
executed query pattern normalizing windows fixed range normalization method :10.1.1.128.6559
closest matches shown :10.1.1.128.6559
time point time point time point window size window size window size resolution level resolution level resolution level time warping distance time warping distance time warping distance time point time point time point window size window size window size resolution level resolution level resolution level time warping distance time warping distance time warping distance time point time point time point window size window size window size resolution level resolution level resolution level time warping distance time warping distance time warping distance time point time point time point window size window size window size resolution level resolution level resolution level time warping distance time warping distance time warping distance closest matches pattern normalizing windows fixed range normalization method :10.1.1.128.6559
normalization method fails find matches high resolution levels :10.1.1.128.6559
essential difference previous case matches original sequence favoured :10.1.1.128.6559
experiment matches higher resolution levels appeared list matches dozens matches original sequence :10.1.1.128.6559
effect explained basis fixed range normalization method works :10.1.1.128.6559
mentioned long sequences case correspond high resolution levels original sequence standard normalization method appropriate considers long term statistical properties data :10.1.1.128.6559
reflected results saw fixed range normalization method got trapped comparing shapes short lengths :10.1.1.128.6559
pattern second query :10.1.1.128.6559
second example executed query order find pattern exists time series :10.1.1.128.6559
time executed query standard normalization method distance threshold equal :10.1.1.128.6559
matches detected :10.1.1.128.6559
validity observations previous example verified :10.1.1.128.6559
time point time point time point window size window size window size resolution level resolution level resolution level time warping distance time warping distance time warping distance time point time point time point window size window size window size resolution level resolution level resolution level time warping distance time warping distance time warping distance time point time point time point window size window size window size resolution level resolution level resolution level time warping distance time warping distance time warping distance closest matches pattern :10.1.1.128.6559
effectiveness multiresolution pattern matching algorithm combination standard normalization method verified :10.1.1.128.6559
indexing section investigate index order increase performance algorithms :10.1.1.128.6559
indexing technique order speed similarity queries time warping distance time sequences :10.1.1.128.6559
problem time warping distance directly indexable guarantee false dismissals satisfy triangular inequality addressed development new distance metric underestimates lower bounds time warping distance :10.1.1.128.6559
index new metric stage filtering false alarms actual time warping distance sequences calculated :10.1.1.128.6559
lower bounding metric defined minimum maximum value sequences :10.1.1.128.6559
features extracted sequences inserted index :10.1.1.128.6559
experimentally demonstrated method performs better linear scanning method expected performance increases lengths sequences increase :10.1.1.128.6559
indexing technique dynamic time warping significantly improves performance previous method :10.1.1.128.6559
key feature develops tighter lower bound time warping distance index returns false alarms :10.1.1.128.6559
experimental comparison method data sets application fields demonstrated superiority competitive approaches :10.1.1.128.6559
particular pruning power index average times higher index :10.1.1.128.6559
main limitations method sizes compared sequences indexing possible dynamic time warping algorithm constrained limited path :10.1.1.128.6559
main difference techniques application want index subsequences sequences addition subsequences lengths correspond different resolutions original sequence :10.1.1.128.6559
due cubic complexity second method index probably highly improve performance :10.1.1.128.6559
developed fourth method faster produces better results creation index second method pointless :10.1.1.128.6559
examine possibility creating index improve performance fourth method best :10.1.1.128.6559
complexity fourth method log length time sequence performance expected tolerable relatively long sequences :10.1.1.128.6559
regardless parameters query pattern time series certain lengths response time constant :10.1.1.128.6559
hand index search return set sequences possibly match query need filter false alarms :10.1.1.128.6559
means existence index improve performance method need compare pattern possible subsequences resolutions :10.1.1.128.6559
limit search sequences returned index :10.1.1.128.6559
practical problems consider :10.1.1.128.6559
related size index :10.1.1.128.6559
total number sequences created resolution levels max wmin max wmin wmax nk nk wk wmin equation :10.1.1.128.6559
number sequences fourth method exhaustively compares query index contain entry :10.1.1.128.6559
problem number potentially large :10.1.1.128.6559
course problem original method :10.1.1.128.6559
time msec time data retrieval resolution analysis time time wa nce ca tion time sequence length analysis execution time fourth method :10.1.1.128.6559
due small size sequences compared contribution time warping distance calculation total execution time relatively low :10.1.1.128.6559
time needed calculation resolution levels dominant factor long sequences :10.1.1.128.6559
example get min window sizes get index entries take space needs quite long time created :10.1.1.128.6559
selectivity query high problems apparent search fast :10.1.1.128.6559
selectivity increases nodes index retrieved tested performance degrade eventually poor :10.1.1.128.6559
max guarantee search time index problem :10.1.1.128.6559
matches index returns correspond sequences resolution levels window sizes :10.1.1.128.6559
phase filtering false alarms regenerate sequences order calculate warping distance pattern :10.1.1.128.6559
matches index returns calculating new sequences resolution levels :10.1.1.128.6559
randomly need time time systematic way original method follows needs :10.1.1.128.6559
observations verified total execution time fourth method sequences length analysed :10.1.1.128.6559
particular time corresponds calculation intermediate resolution levels time corresponds calculation time warping distances shown :10.1.1.128.6559
due small size windows resolution analysis time negligible :10.1.1.128.6559
remarks verified experimentally tried implement index method :10.1.1.128.6559
apart extremely large size got better results original method selectivity query low :10.1.1.128.6559
number matches index returned increased performance degraded eventually worse original method :10.1.1.128.6559
summary chapter examined problem efficiently search existence pattern time series flexible far sizes subsequences match pattern concerned :10.1.1.128.6559
particular size subsequences time series compared pattern vary addition interested detecting existence pattern resolution levels original sequence :10.1.1.128.6559
time warping distance metric flexible distance metric accounts distortions time axis compare sequences different lengths choose basis method :10.1.1.128.6559
scaling shifting value axis taken account appropriately normalizing sequences :10.1.1.128.6559
starting examining problem presenting simple linear scanning algorithm discovered results produces poor far quality time complexity concerned :10.1.1.128.6559
particular fails capture notion resolution levels quadratic cubic time complexity :10.1.1.128.6559
order overcome problems looked different approach :10.1.1.128.6559
purpose borrowed methodology wavelets order calculate sequences correspond different resolution levels original sequence :10.1.1.128.6559
adapted technique needs developed novel fast algorithm look matches desired resolution level original sequence letting time size windows slightly vary :10.1.1.128.6559
algorithm time warping distance keeping small size windows compares achieves sublinear time complexity :10.1.1.128.6559
method experimentally evaluated correctness results demonstrated :10.1.1.128.6559
subsequently investigated algorithm combined index achieve better response times :10.1.1.128.6559
result verified experimentally simple index containing entry subsequence efficient due extremely large size :10.1.1.128.6559
chapter recognizing importance time series variety fields increasing need combination data mining applications thesis provided thorough investigation firstly time series efficiently represented stored secondly efficiently processed particular similarity queries :10.1.1.128.6559
summary efficient representation basic step goal high performance processing time series :10.1.1.128.6559
time series essentially sequences values differentiates value sequences values time point associated may play significant role analysis :10.1.1.128.6559
large part representation problem devoted investigation relation values time points possible benefit role order improve data analysis performance :10.1.1.128.6559
important result real time series regular behaviour time domain described relatively simple rules :10.1.1.128.6559
parallel saw possible keep representation high level allow representation time series consist data objects possibly different data types :10.1.1.128.6559
important notion included model notion groups time series structure describe similar variables :10.1.1.128.6559
useful easy management time series large databases :10.1.1.128.6559
second problem overcome related amount data :10.1.1.128.6559
time series potentially long consist thousands points may grow rapidly :10.1.1.128.6559
effective storage scheme available performance system processes may poor :10.1.1.128.6559
investigated storage schemes try benefit serial nature data way operations retrieve values order guarantee fast retrieval data regardless amount :10.1.1.128.6559
introduced simple indexing scheme small size significantly improves data access times :10.1.1.128.6559
particular guarantees logarithmic retrieval time performance length time series :10.1.1.128.6559
solution representation storage problems goal means order reach point development efficient data processing system possible :10.1.1.128.6559
designed open system architecture retrieving subsequently performing operations time series :10.1.1.128.6559
demonstrated system flexible efficient backend analysing time series designing robust operations independent core allows concurrent execution operations easy integration new operations :10.1.1.128.6559
problem fast similarity search second main issue concentrated :10.1.1.128.6559
developed integrated system general indexing mechanism customized order indexing techniques developed :10.1.1.128.6559
having infrastructure available concentrated interesting problems :10.1.1.128.6559
regarded search short patterns time series :10.1.1.128.6559
implemented algorithm find matches account possible scaling shifting subsequences value axis :10.1.1.128.6559
normalizing subsequences performing comparison :10.1.1.128.6559
investigated indexing scheme allow answer query fast :10.1.1.128.6559
compared na linear scanning method suitable index built compared performance :10.1.1.128.6559
demonstrated index faster queries selectivity high :10.1.1.128.6559
real data really limitation queries expected search close matches selectivity cases relatively low :10.1.1.128.6559
main limitation performance index large size :10.1.1.128.6559
introducing different normalization method data improved extend performance :10.1.1.128.6559
new normalization method calculating differences successive data points :10.1.1.128.6559
second problem sophisticated search patterns :10.1.1.128.6559
problem interested identifying patterns certain size original time sequence problem lifted restrictions looked patterns letting size subsequences vary considering resolution levels original sequence :10.1.1.128.6559
described simple linear scanning algorithm look matches demonstrated performance poor far complexity quality results produce concerned :10.1.1.128.6559
led look different algorithm :10.1.1.128.6559
time warping distance developed new fast algorithm see time sequence resolution levels varying window sizes :10.1.1.128.6559
evaluation divide outcomes project main parts :10.1.1.128.6559
includes data model storage scheme system architecture processing indexing time series developed :10.1.1.128.6559
second part includes results providing efficient solutions similarity search problems :10.1.1.128.6559
believe data model developed flexible cover needs applications :10.1.1.128.6559
structured design process followed allows easy extension integration minor application specific details included original design :10.1.1.128.6559
storage scheme offering low data retrieval time meets needs applications :10.1.1.128.6559
hand system architecture developed prototype offers effective infrastructure processing indexing time series :10.1.1.128.6559
tried keep flexible possible avoiding great compromises far performance concerned :10.1.1.128.6559
expect operations applications need execute :10.1.1.128.6559
covering possible needs impossible due great variety :10.1.1.128.6559
special needs examined individually open architecture believe minor modifications extensions able support :10.1.1.128.6559
similarity search problems investigated results mixed :10.1.1.128.6559
problem indexing technique implemented gave better results linear scanning method certain limitations :10.1.1.128.6559
small pattern sizes second selectivity queries high :10.1.1.128.6559
requirement small pattern sizes due exponential decrease performance spatial access methods dimensionality increases :10.1.1.128.6559
second limitation explained practical cases real problem :10.1.1.128.6559
certain threshold selectivity queries exceeded index alternative :10.1.1.128.6559
second problem developed algorithm sublinear complexity performs fast pattern matching resolutions time sequence :10.1.1.128.6559
useful problem real applications complexity algorithm allows applied relatively long sequences :10.1.1.128.6559
algorithm keeps complexity low index keeping small size sequences compares :10.1.1.128.6559
possibility improving performance index examined large size main obstacle prevented performing :10.1.1.128.6559
suggestions problems faced discussing similarity problems may subject research :10.1.1.128.6559
saw principle index may order speed query response times certain conditions performance may poor :10.1.1.128.6559
conditions occur interested subsequence similarity search size sequences small varying addition want sequences normalized :10.1.1.128.6559
essential problem index indexes subsequence individually large :10.1.1.128.6559
combined limitations spatial access methods lead performance index worse linear scanning method :10.1.1.128.6559
solution problem orientated grouping similar sequences inserting index :10.1.1.128.6559
apart special cases easy :10.1.1.128.6559
addition grouping introduce false alarms turn degrade performance indexing methods linear scanning order filter :10.1.1.128.6559
subsequence similarity problem distance metrics normalization methods needs investigation order indexing technique guarantee better performance linear scanning method developed :10.1.1.128.6559
situation complicated need index time warping distance :10.1.1.128.6559
seen developed exact indexing techniques distance metric long considered non indexable :10.1.1.128.6559
applicability methods subsequence similarity search investigated :10.1.1.128.6559
interesting field extended system developed real time data :10.1.1.128.6559
designing system order enhance extensibility introduced stream wise approach transferring data stable storage :10.1.1.128.6559
mechanism easily extended order data arrive stream stable storage applications act data sensors :10.1.1.128.6559
scalability storage mechanism expect system large amounts real time data arrive :10.1.1.128.6559
support real time data system powerful tool extend applications may :10.1.1.128.6559
extension support time series collections included system useful highly enhance functionality applications handle large number time sequences :10.1.1.128.6559
mentioned provided sup port time series collections elementary level extension support easier definition collections integration collection management mechanism create complete really flexible time series management mechanism :10.1.1.128.6559
bibliography agrawal faloutsos swami :10.1.1.128.6559
efficient similarity search sequence databases :10.1.1.128.6559
proceedings th international conference foundations data organization algorithms chicago usa :10.1.1.128.6559
agrawal 
lin sawhney shim 
fast similarity search presence noise scaling translation time series databases :10.1.1.128.6559
vldb journal 
segev shoshani temporal data model time sequences :10.1.1.128.6559
temporal databases :10.1.1.128.6559
theory design :10.1.1.128.6559
benjamin cumming publishing :10.1.1.128.6559
beckmann kriegel schneider seeger 
tree efficient robust access method point rectangles :10.1.1.128.6559
proceedings acm sigmod international conference management data minneapolis usa :10.1.1.128.6559
beyer goldstein ramakrishnan shaft :10.1.1.128.6559
nearest neighbor meaningful :10.1.1.128.6559
proceedings th international conference database theory jerusalem israel :10.1.1.128.6559
chan 
fu 
efficient time series matching wavelets :10.1.1.128.6559
proceedings th ieee international conference data engineering :10.1.1.128.6559
chatfield 
analysis time series :10.1.1.128.6559
chapman hall th edition 
faloutsos ranganathan manolopoulos :10.1.1.128.6559:10.1.1.128.6559
fast subsequence matching time series databases :10.1.1.128.6559
proceedings acm sigmod international conference management data minneapolis usa :10.1.1.128.6559
michael folk bill 
file structures nd edition addison wesley publishing june :10.1.1.128.6559
gaede nther 
multidimensional access methods :10.1.1.128.6559
acm computing surveys :10.1.1.128.6559
goldin kanellakis :10.1.1.128.6559
similarity queries time series data constraint specification implementation :10.1.1.128.6559
proceedings constraint programming :10.1.1.128.6559
france :10.1.1.128.6559
das mannila finding similar time series :10.1.1.128.6559
proceedings st european symposium principles data mining knowledge discovery trondheim norway june :10.1.1.128.6559
guttman 
trees dynamic index structure spatial searching :10.1.1.128.6559
proceedings acm sigmod international conference management data boston usa :10.1.1.128.6559
informix 
managing time series data financial services applications informix module :10.1.1.128.6559
www informix com 

survey methods efficient retrieval similar time sequences :10.1.1.128.6559
keogh 
exact indexing dynamic time warping 
proceedings th vldb conference hong kong china :10.1.1.128.6559
keogh chakrabarti pazzani 
dimensionality reduction fast similarity search large time series databases :10.1.1.128.6559
journal knowledge information systems volume number :10.1.1.128.6559
keogh chakrabarti pazzani 
locally adaptive dimensionality reduction indexing large time series databases :10.1.1.128.6559
proceedings acm sigmod conference :10.1.1.128.6559
keogh chu pazzani 
ensemble index new approach indexing large databases :10.1.1.128.6559
proceedings th acm sigkdd international conference knowledge discovery san francisco usa :10.1.1.128.6559

kim park chu 
index approach similarity search supporting time warping large sequence databases :10.1.1.128.6559
proceedings th ieee international conference data engineering :10.1.1.128.6559
korn jagadish faloutsos :10.1.1.128.6559
efficiently supporting ad hoc queries large datasets time sequences :10.1.1.128.6559
proceedings acm sigmod international conference management data tucson usa :10.1.1.128.6559
lin rish sk ld :10.1.1.128.6559
indexing values time sequences :10.1.1.128.6559
proceedings th international conference information knowledge management maryland usa :10.1.1.128.6559
nanopoulos manolopoulos :10.1.1.128.6559
indexing time series databases inverse queries :10.1.1.128.6559
proceedings th international conference database expert systems applications vienna austria :10.1.1.128.6559

wang zhang parker 
landmarks new model similarity pattern querying time series databases :10.1.1.128.6559
proceedings th international conference data engineering san diego usa :10.1.1.128.6559
rafiei mendelzon 
efficient retrieval similar time sequences dft :10.1.1.128.6559
proceedings th international conference foundations data organization algorithms kobe japan :10.1.1.128.6559
seshadri livny ramakrishnan :10.1.1.128.6559
sequence query processing :10.1.1.128.6559
proceedings acm sigmod international conference management data minneapolis usa :10.1.1.128.6559
spatial access methods rsv :10.1.1.128.6559
white jain 
similarity indexing algorithms performance :10.1.1.128.6559
proceedings spie storage retrieval image video databases iv jan jose usa :10.1.1.128.6559
wu agrawal el abbadi 
efficient retrieval browsing large image databases :10.1.1.128.6559
proceedings international conference information knowledge management :10.1.1.128.6559

wu agrawal el abbadi 
comparison dft dwt similarity search time series databases :10.1.1.128.6559
proceedings th international conference information knowledge management :10.1.1.128.6559

yi jagadish faloutsos :10.1.1.128.6559
efficient retrieval similar time sequences time warping :10.1.1.128.6559
proceedings th international conference data engineering :10.1.1.128.6559

yi faloutsos :10.1.1.128.6559
fast time sequence indexing arbitrary norms :10.1.1.128.6559
proceedings th international conference large databases cairo egypt :10.1.1.128.6559
appendix operations execution api purpose appendix describe application programming interface api part system implements operations execution mechanism :10.1.1.128.6559
api enables third party applications execute operations time series functionality system :10.1.1.128.6559
system implemented java tm programming language :10.1.1.128.6559
overview mentioned chapter operations execution subsystem ability execute operations time series concurrently :10.1.1.128.6559
addition main characteristic sees times series input stream incoming set values set corresponding row time series processes :10.1.1.128.6559
reflecting general features steps followed order execute operations concurrently :10.1.1.128.6559
open time series operations operate :10.1.1.128.6559

specify properties stream generated :10.1.1.128.6559
involves specification starting time points stream data columns time series consist interpolation procedure going :10.1.1.128.6559

create time series independent instances desired operations :10.1.1.128.6559

create instance operation handler coordinate execution operations :10.1.1.128.6559

register time series operation handler :10.1.1.128.6559

bind operation streams operate :10.1.1.128.6559

provide additional time series dependent parameters operations :10.1.1.128.6559

execute operations :10.1.1.128.6559

get results execution :10.1.1.128.6559
sections describe classes methods calls involved steps :10.1.1.128.6559
opening time series time series opened instance timeseries object created loaded main memory :10.1.1.128.6559
timeseries object contains metadata describe time series :10.1.1.128.6559
timeseries class existing time series may opened call constructor public timeseries string directory string name meaning parameters obvious specify name path time series opened :10.1.1.128.6559
specifying properties input streams time series opened generate input stream act data operations :10.1.1.128.6559
elementary properties stream time points data columns time series participate :10.1.1.128.6559
seen possibility add extra layer modifies stream delivering data operations :10.1.1.128.6559
layer responsible removing missing values :10.1.1.128.6559
class order group properties input streams structure :10.1.1.128.6559
timeseries object instance obtained call constructors public timeseries ts public timeseries ts cols public timeseries ts timepoint start timepoint public timeseries ts timepoint start timepoint cols public timeseries ts int public timeseries ts timepoint start timepoint int public timeseries ts cols int public timeseries ts timepoint start timepoint cols int call creates instance object specifies obtained stream time series interpolated :10.1.1.128.6559
third call limits time range obtained stream :10.1.1.128.6559
fifth call puts time limits stream sets interpolation modes going data columns time series :10.1.1.128.6559
done providing array integers contains numbers columns time series interpolated :10.1.1.128.6559
interpolation modes columns provided constructor array :10.1.1.128.6559
array objects paragraph :10.1.1.128.6559
data columns time series included list excluded interpolation procedure :10.1.1.128.6559
sixth call equivalent fifth sets addition time limits stream :10.1.1.128.6559
rest calls provide functionalities offer addition possibility specifying data columns time series participate stream :10.1.1.128.6559
class class defines properties interpolation procedure instance created call constructor public int start int mid int value val arguments constant integers specifying interpolation mode middle time series respectively :10.1.1.128.6559
depending value type column interpolation applied possible values linear substitute argument provides value replace null values case substitution mode :10.1.1.128.6559
creating configuring operation instance operation may obtained call constructor :10.1.1.128.6559
operation depending properties inputs outputs implements operation interface :10.1.1.128.6559
operation sub interfaces exactly sub interface implements operation classification operations chapter :10.1.1.128.6559
sub interfaces operation interface implemented system public interface public interface public interface public interface public interface public interface operation classes creating instance operation interface implemented operations operate column time series numeric value type produce numeric result :10.1.1.128.6559
implemented operations constructors public public public public public public interface implemented operations operate column time series categorical value type produce set numeric results :10.1.1.128.6559
implemented operation calculates frequency appearance time series values category set public interface implemented operations operate numeric column time series :10.1.1.128.6559
operations calculate distance correlation time series implemented public int norm public interface implemented operations transform time series new public int window int mode public int window int mode sp public pat int mode public pat int mode sp public public sp public int window public int window sp public public sp public public sp public public sp operations new specified time series operation operates determining storage options new time series :10.1.1.128.6559
implemented operations extract features numeric column time series :10.1.1.128.6559
argument operations specifies dimensionality extracted feature :10.1.1.128.6559
public int public int implemented operations extract subsequence certain length window time series public timepoint start int size passing time series dependent parameters creation instance operation returns new object contains information necessary execution operation depend properties input streams going applied :10.1.1.128.6559
cases information complete additional parameters passed operation object :10.1.1.128.6559
values parameters depend time series stream operation operate mentioned passed operation object bound specific time series stream :10.1.1.128.6559
parameters operation specific means implemented operation interface :10.1.1.128.6559
example generates new time series scaling shifting values columns time series :10.1.1.128.6559
operation method calls specify columns input time series included new time series scaling shifting parameters :10.1.1.128.6559
public void int col public void int col int public void int col double public void int col int public void int col double public void int col int add int mul public void int col double add double mul generates new time series aggregating values time series period time implement method specifies columns exactly aggregated :10.1.1.128.6559
public void int cols method implemented :10.1.1.128.6559
getting result executed object operation contains result execution :10.1.1.128.6559
result retrieved call getresult method operation :10.1.1.128.6559
type returned value depends sub interface operation implements :10.1.1.128.6559
return types interfaces public getresult interface public getresult interface public timeseries getresult interface public point getresult interface public getresult creating configuring operation group description operations provided provide information binding operations specific time series actual execution :10.1.1.128.6559
functionality provided class creates objects responsible concurrent execution set operations transparent user way :10.1.1.128.6559
class tor instance object obtained call construc public registering time series step creation registration time series operate :10.1.1.128.6559
done calling method time series stream :10.1.1.128.6559
parameter method timeseries object provide object complete description desired properties input stream generate time series :10.1.1.128.6559
public descr call apart registering time series operation handler creates instance corresponding stream :10.1.1.128.6559
instance structure return value method :10.1.1.128.6559
binding operation time series step registration time series creation operation objects declare object operations operate time series :10.1.1.128.6559
operation operates data column time series number column declared :10.1.1.128.6559
binding procedure done calling method object :10.1.1.128.6559
method operation sub interface :10.1.1.128.6559
public void op tss int col public void op tss int col public void op tss int col public void op tss string directory string name public void op tss int col public void op tss int col tss int col parameters type calls objects obtained registering time series :10.1.1.128.6559
execution operation operations registered object executing call method object public void execute example purpose example clear steps followed order execute set operations parallel :10.1.1.128.6559
example assumes time series named abc def consists numeric data column want calculate euclidian distance minimum maximum values :10.1.1.128.6559
achieved sequence calls timeseries new timeseries abc timeseries new timeseries def new new og new og og amax new bmax new amin new bmin new dist new og amax og bmax og amin og bmin og dist og execute val amax getresult val amin getresult val bmax getresult val bmin getresult val dist getresult appendix graphical user interface order able easily functionality system developed created program provides access parts functionality simple graphical user interface :10.1.1.128.6559
having specific goal graphical interface may considered application belonging rd layer system architecture :10.1.1.128.6559
appendix going briefly demonstrate main features interface order perform operation time series :10.1.1.128.6559
overview screenshot program shown :10.1.1.128.6559
program uses desktop appear frames interaction user achieved :10.1.1.128.6559
desktop frames program uses :10.1.1.128.6559
operations frame operation may selected executed :10.1.1.128.6559

parameters frame order pass necessary parameters operations :10.1.1.128.6559

result frame results simple statistical operations displayed :10.1.1.128.6559

time series frame displays list time series constitute database system :10.1.1.128.6559
program provides partial support time series collections :10.1.1.128.6559
collection selected contents appear list :10.1.1.128.6559

data frame displays time points values data objects length information time domain regularity time series :10.1.1.128.6559
time time series may open displayed data frame :10.1.1.128.6559

graph frame provides visualization time series data object :10.1.1.128.6559

import frame may inserting new time series database system :10.1.1.128.6559

support similarity search frames appear :10.1.1.128.6559
matches pattern frames displaying results similarity query :10.1.1.128.6559
see frames examples :10.1.1.128.6559
importing time series screenshot graphical user interface program :10.1.1.128.6559
example import procedure import frame shown earthquake time series imported system :10.1.1.128.6559
import frame provides possibility importing time series consist real integer value types :10.1.1.128.6559
depending type time series time domain information regularity specified :10.1.1.128.6559
desired storage policy specified :10.1.1.128.6559
import procedure completed successfully new time series appears time series frame :10.1.1.128.6559
support collections demonstrated contents collection contains time series daily meteorological data wind direction mean wind speed maximum wind minimum maximum mean temperature source meteorological time series appendix royal netherlands meteorological institute :10.1.1.128.6559
percentage precipitation mean air pressure minimum visibility cloud cover places netherlands shown :10.1.1.128.6559
importing new time series :10.1.1.128.6559
time series consists data objects :10.1.1.128.6559
belongs time series collection :10.1.1.128.6559
demonstrated time series consist data objects supported :10.1.1.128.6559
case table data frame consists data columns data objects time sequence opened processing :10.1.1.128.6559
time series opened contains daily meteorological data city maastricht netherlands period :10.1.1.128.6559
graph frame mean daily temperature period displayed :10.1.1.128.6559
executing operations section going demonstrate simple statistical operations operations transform time series new may performed :10.1.1.128.6559
statistical operations example shown regards calculation statistics data object specific time period :10.1.1.128.6559
described operation may executed selecting operations frame completing necessary parameters parameters frame :10.1.1.128.6559
result appears result frame :10.1.1.128.6559
operation shown calculated average precipitation year time series meteorological data city netherlands :10.1.1.128.6559
values precipitation data object time series displayed graph frame :10.1.1.128.6559
performing simple statistical calculation :10.1.1.128.6559
transformation operations example operation transforms time series new shown :10.1.1.128.6559
operation regards calculation moving averages time series :10.1.1.128.6559
parameters frame addition size window operation operate name new time series provided :10.1.1.128.6559
execution operation new time series appears time series frame :10.1.1.128.6559
calculation moving averages time series :10.1.1.128.6559
calculation new time series aggregates values time series monthly time intervals :10.1.1.128.6559
example calculated moving averages mean temperature data object time series window size length :10.1.1.128.6559
comparison purposes original sequence new time series opened graph created :10.1.1.128.6559
provides second example operation transforms time series :10.1.1.128.6559
input mean temperature data object time series time calculated new time series consists monthly average values original sequence :10.1.1.128.6559
parameters frame aggregation operation specify regularity pattern generate starting time point intervals aggregation take place :10.1.1.128.6559
resulting time series displayed :10.1.1.128.6559
see result operation time series smooth produced moving averages operation :10.1.1.128.6559
creating searching index program supports creation indices similarity search :10.1.1.128.6559
particular create index time series belong collection :10.1.1.128.6559
procedure creating index shown :10.1.1.128.6559
collection contained time series recording prices ftse stocks period :10.1.1.128.6559
order create index select parameters frame desired parameters :10.1.1.128.6559
program supports creation dft segmented means indices normalization procedures discussed chapter :10.1.1.128.6559
creating index similarity search collection time sequences :10.1.1.128.6559
index created fast answering similarity queries :10.1.1.128.6559
query displayed :10.1.1.128.6559
role query played time series selected time series frame rest query parameters specified parameters frame :10.1.1.128.6559
matches search displayed matches frame appears desktop execution query :10.1.1.128.6559
matches ordered distance query :10.1.1.128.6559
match selected table matches frame graph automatically created graph frame allow easy comparison query time series :10.1.1.128.6559
graph frame time series displayed thick line time series query second best match :10.1.1.128.6559
pattern matching search similarity index visualization matches :10.1.1.128.6559
section going demonstrate program order look existence short patterns time series :10.1.1.128.6559
simple pattern matching example shown uses simple pattern matching algorithm discussed chapter index order identify win time series match pattern :10.1.1.128.6559
means pattern compared windows time series length norm distance metric calculation distances :10.1.1.128.6559
search performed time series open program desired pattern may inserted visualized parameters frame :10.1.1.128.6559
search performed new frames appear desktop :10.1.1.128.6559
matches frame contains detailed information matches pattern frame provides visualization matches :10.1.1.128.6559
selecting match frame exact location time series automatically highlighted graph frame :10.1.1.128.6559
performing simple pattern matching fixed window size :10.1.1.128.6559
pattern matching time warping program offers possibility pattern matching algorithm developed chapter order perform advanced search patterns :10.1.1.128.6559
search time warping distance varying window sizes :10.1.1.128.6559
previous case parameters frame query pattern created :10.1.1.128.6559
time addition minimum maximum size windows algorithm may specified :10.1.1.128.6559
default search matching windows performed resolution levels input sequence desired restricted resolution levels :10.1.1.128.6559
pattern matching query tries identify head shoulders pattern set stock price time series :10.1.1.128.6559
case simple pattern matching search matches pattern displaying visualizing results :10.1.1.128.6559
see matches high resolution levels sequence :10.1.1.128.6559
best best match resolution levels highlighted :10.1.1.128.6559
performing pattern matching time warping resolution levels looking head shoulders patterns stock price time series :10.1.1.128.6559
final example pattern matching algorithm time warping multiresolution analysis looked simple pattern time series records electricity power consumption days week :10.1.1.128.6559
pattern results query shown :10.1.1.128.6559
proves algorithm works identify pattern equally resolution levels time sequence :10.1.1.128.6559
discussion example pattern matching time warping resolution levels :10.1.1.128.6559
purpose program appendix act prototype shows tool provide time series analysis capabilities system underlying structure look complete tool :10.1.1.128.6559
integrates functionality system things need done considered complete tool :10.1.1.128.6559
full support creating managing time series collections advanced importing exporting time series similarity search results better organization handling similarity indices possibility open operate time series time richer set operations features complete tool support :10.1.1.128.6559
appendix integration kensington appendix demonstrate parts functionality operations execution indexing mechanism system may third party application :10.1.1.128.6559
previous appendix developed new application designed especially functionality system appendix show successful integration achieved software package :10.1.1.128.6559
particular integrated functionality performing statistical operations extracting features creating searching similarity index time series kensington data mining tool :10.1.1.128.6559
benefit integrating system kensington advanced analysis time series data possible data mining tools kensington supports :10.1.1.128.6559
timeseries data type properties table examples :10.1.1.128.6559
system stores time series data special files mechanism retrieving processing :10.1.1.128.6559
aim create tables kensington containing values time series data objects keep system responsible han add new time series data type set supported kensington :10.1.1.128.6559
call new data type timeseries data type :10.1.1.128.6559
interface name time series represents displayed cells kensington column timeseries data type :10.1.1.128.6559
see new data type appearing properties table examples :10.1.1.128.6559
data appendix created table contained time series ftse stock prices period :10.1.1.128.6559
explained contents table interface kensington just names time series data storage directory kensington server data held :10.1.1.128.6559
statistical calculations example facilities integrated demonstrate simple statistical calculations may performed :10.1.1.128.6559
execution need table containing column time series objects result new table additional column contains calculated statistics time series :10.1.1.128.6559
functionality implemented adding new functions supported derive node kensington :10.1.1.128.6559
new functions correspond statistical operations system :10.1.1.128.6559
particular defined functions ts sum name ts avg name ts var name ts dev name ts min name ts max name name name column kensington table contains time series ordinal position data column time series statistics calculated :10.1.1.128.6559
functions calculate respectively sum average variance standard deviation minimum maximum value corresponding time series :10.1.1.128.6559
order able calculate statistics subsequence time series functions extra parameters specify starting time point provided :10.1.1.128.6559
example function calculates sum versions available regard calendar ordinal time series :10.1.1.128.6559
ts sum name year month day year month day ts sum name year month day hour minute second year month day hour minute second ts sum name point point calculation statistics example table stock time series order calculate average standard deviation minimum maximum value time series contained :10.1.1.128.6559
sequence derive nodes performed calculations shown result execution :10.1.1.128.6559
sequence nodes calculate average standard deviation minimum maximum value table time series :10.1.1.128.6559
results execution node sequence :10.1.1.128.6559
properties node node sequence :10.1.1.128.6559
example exactly functions may derive node give properties node node sequence :10.1.1.128.6559
calculation statistics time ranges example calculated statistics stocks table specific time ranges :10.1.1.128.6559
particular calculated average standard deviation stock prices years :10.1.1.128.6559
sequence nodes calculate average standard deviation year time periods :10.1.1.128.6559
shows sequence nodes performed calculations :10.1.1.128.6559
year period interest added nodes calculation average calculation standard deviation :10.1.1.128.6559
shows properties node execution sequence :10.1.1.128.6559
properties node node sequence :10.1.1.128.6559
sequence eventually executed got new table new columns nodes added original table :10.1.1.128.6559
final table shown table resulted execution node sequence :10.1.1.128.6559
feature extraction apart statistical calculations integrated kensington feature extraction operations implemented system :10.1.1.128.6559
done sdk nodes :10.1.1.128.6559
particular created node feature extraction function desired properties feature extraction procedure specified :10.1.1.128.6559
demonstration facility calculated table dft coefficients contents :10.1.1.128.6559
required sequence nodes shown properties node performs calculation :10.1.1.128.6559
parameters name column contains time series data column time series coefficients want extract number :10.1.1.128.6559
sequence nodes calculate dft coefficients time series table :10.1.1.128.6559
properties dft node :10.1.1.128.6559
model resulted execution :10.1.1.128.6559
noted chapter coefficient real part kept numbers included results sequence :10.1.1.128.6559
similarity indexing calculated dft coefficients :10.1.1.128.6559
integrated facility create index time series perform search :10.1.1.128.6559
purpose sdk node facility :10.1.1.128.6559
shows sequences nodes required creation search index shows properties nodes create search index :10.1.1.128.6559
nodes create search similarity index :10.1.1.128.6559
parameters nodes create search similarity index :10.1.1.128.6559
node creates index supports indices dft coefficients sequences segmented means data may normalized normalized standard fixed range normalization method :10.1.1.128.6559
node searches index need specify time series table play role query threshold distance desired distance metric :10.1.1.128.6559
euclidian distance maximum norm :10.1.1.128.6559
results similarity query :10.1.1.128.6559
results search index created node sequence query shown :10.1.1.128.6559
discussion appendix demonstrated design architecture system developed allow integrated software tool developed independently :10.1.1.128.6559
despite fact principle integration possible regarded parts functionality system :10.1.1.128.6559
integrate kensington parts system support time series collections execution operations transform time series new ones subsequence similarity indexing :10.1.1.128.6559
main reasons :10.1.1.128.6559
integration possible parts systems clean programming interfaces :10.1.1.128.6559
programming interfaces essentially tools interaction software systems possible :10.1.1.128.6559
exist interaction impossible requires great programming effort :10.1.1.128.6559
instance kensington clean programming interface easy creation new tables :10.1.1.128.6559
highly limited extent integration :10.1.1.128.6559
obliged example results feature extraction similarity search operations text models useful available new tables ready processing :10.1.1.128.6559
second reason kensington designed possibility integration system mind vice versa :10.1.1.128.6559
parts functionality system kensington system exploit features kensington :10.1.1.128.6559
example easy way integrate support time series collections advanced data storage options system kensington :10.1.1.128.6559
functionality scope kensington data mining tool :10.1.1.128.6559

