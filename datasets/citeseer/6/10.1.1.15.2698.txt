ieee transactions parallel distributed systems vol 
february probabilistic reliable dissemination large scale systems anne marie kermarrec laurent ganesh growth internet raises new challenges design distributed systems applications 
context group communication protocols gossip schemes attracted interest scalable easy deploy resilient network process failures 
traditional gossip protocols major drawbacks rely peer having knowledge global membership oblivious network topology impose high load network links applied wide area settings 
provide theoretical analysis gossip protocols relates reliability key system parameters system size failure rates number gossip targets 
results provide guidelines design practical protocols 
particular show reliability maintained alleviating drawback providing peer small subset total membership information drawback organizing members hierarchical structure reflects proximity network related metric 
validate analytical results simulations verify hierarchical gossip protocol considerably reduces load network compared original nonhierarchical protocol 
index terms scalability reliability gossip probabilistic multicast membership group communication random graphs 
background large scale reliable group communication 
reliable group communication protocols essential distributed systems applications publish subscribe systems distributed databases consistency management distributed failure detection 
growth internet influenced scale reliability requirements distributed systems 
traditional solutions applicable small scale settings scale large system sizes 
network layer multicast protocols srm rmtp top ip multicast ensure reliability positive negative acknowledgments repair packet losses 
ip multicast currently deployed internet 
consequently application level multicast received increasing attention 
centralized partially centralized approaches proven efficient local area networks scale large groups 
instance log reliable multicast uses loggers provide stable storage handle retransmission missing messages amount information stored grows number nodes loggers overloaded 
protocols scribe multicast efficient scalable require existence largescale peer peer routing infrastructure 
contrast epidemic gossip protocols scale large groups easy deploy degrade gracefully rate node failure message loss increases 
authors microsoft research jj thomson ave cambridge cb fb mail microsoft com 
manuscript received june revised may accepted sept 
information obtaining reprints article please send mail computer org ieeecs log number 
ieee gossip probabilistic multicast protocols 
protocols rely peer peer interaction model multicasting message scalable load distributed participating nodes 
redundant messages achieve reliability fault tolerance 
class protocols consistency management replicated databases failure detection garbage collection protocol called pbcast uses reliable multicast 
pbcast notifications broadcast ip multicast randomly generated multicast tree ip multicast available 
addition node periodically chooses random subset processes sends digest messages 
receipt messages receivers check missing messages needed solicit retransmission 
related protocol combining push pull phases proposed 
push phase node receiving message passes gossip increments counter attached message 
counter reaches threshold receiving nodes don gossip anymore 
second phase nodes haven received message send requests randomly chosen nodes pull message 
papers include theoretical analysis number gossip messages needed ensure high probability reaching 
pull phase difficult implement motivates consider pure push algorithm 
analysis techniques different may independent interest 
hybrid version pbcast called reliable probabilistic multicast consists phases 
phase uses unreliable ip multicast 
second phase pbcast gossiping step initiated fails third deterministic phase loggers invoked 
ieee transactions parallel distributed systems vol 
february fig 

probabilistic gossiping algorithm node 
refinement probabilistic gossip takes network topology account directional gossip 
wide area protocol nodes favor choice low connectivity neighbors gossip targets attempt improve reliability 
gossip approaches proven scalable rely membership protocol assume subset nodes chosen uniformly participating nodes requiring node know node 
assumption limits applicability large scale settings 
protocol partially addresses issue connection graph called harary graph constructed 
optimality properties harary graphs ensure tradeoff number messages propagated reliability guarantees 
building graph requires global knowledge membership maintaining graph structure presence arrivals departures nodes prove difficult 
contributions 
consider protocols node maintains partial view membership typically smaller system size 
gossip targets chosen partial view 
describe probabilistic gossip algorithms modeled random graphs provide rigorous analysis relating probability success fanout defined number gossip targets node 
flat setting partial views provided node chosen uniformly group members 
consider models nodes grouped clusters partial views largely restricted nodes cluster 
give analysis reliability function fanout clusters 
extended hierarchical models arbitrary number levels 
network load reduced clustering basis proximity network 
simulations confirm analysis showing protocol exhibits stable behavior high failure rates 
implication resilience node failures protocol provide support mobile nodes may disconnect nonnegligible periods 
order evaluate impact clustering simulate system realistic network topology georgia tech transit stub model 
results show hierarchical protocol substantially reduces network load compared flat gossip 
theoretical analysis generic applied variety protocols 
describe generic gossip protocol membership mechanisms section 
theoretical analysis flat hierarchical protocols section 
section displays simulation results 
conclude section 
gossip membership protocols gossip protocol consider system composed nodes 
assume membership protocol provides node randomized partial knowledge system consists list node identifiers stored local subscription list size denote consider specific examples membership protocols 
notification gossip message contains event disseminate group 
node generates notification event gossiping protocol round initiated 
pseudocode gossiping algorithm fig 

node initiates notification receives time picks nodes random local list sends notification 
number gossip targets called fanout 
numbers random variables 
links nodes defined gossip targets specify overlay network top existing network topology 
call overlay network connection graph rest 
section derive expression fanout required achieve specified probability notification reaches group member 
membership protocol tuned provide members partial view small multiple desired fanout 
permits nodes randomize choice gossip targets successive gossip rounds reduces likelihood node remaining isolated long periods 
sake simplicity assume gossiping round initiated notification 
easily modified initiated periodically send notifications gossip message 
kermarrec probabilistic reliable dissemination large scale systems reliability requirements goal protocol ensure notification sent member group reaches members despite transient permanent failure nodes links network 
transient failures refer temporary inability node receive message due buffer overflow temporary failure network deliver message due packet drops 
permanent failures refer node crashes 
gossip protocols provide probabilistic guarantees delivery 
parameters model tuned achieve success probabilities arbitrarily close approach comparable deterministic methods 
focus relationship fanout reliability basic gossip protocol described previous section 
additional mechanisms increase reliability easily layered top basic probabilistic protocol 
scope 
note node may isolated identifier local views nodes holding identifier failed 
node substantial probability remaining isolated long period 
describe deal issue context specific membership protocols 
membership protocols variety protocols provide node partial view group membership 
focus details implementation theoretical analysis simulation results sections show memory requirements protocols scale system size 
results applicable variants basic protocols 
flat membership protocol server protocol 
consider set servers group members subscribe join group 
server manages subscription list containing subscriptions knows 
model server manages part membership service 
subscription process distributed servers membership information replicated servers 
receipt subscription server adds subscriber subscription list 
server integrates new member connection graph group 
requires steps providing new member partial knowledge system disseminating new member identity nodes 
server randomly chooses subset nodes subscription list sends subset new member 
subset constitute local subscription list provide uniform randomized partial view system 
addition server randomly chooses nodes sends identifier new member 
enables new member integrated local subscription lists consequently connection graphs 

distributed applications rely set servers variety purposes 
fanout related number nodes system reliability guarantees servers charge modifying fanout response changes number nodes modifications infrequent shall see fanout needs increased number nodes increases factor main drawback protocol number nodes system increases load server increases linearly 
addition synchronization servers required periodically ensure approximately consistent view group membership 
replicating membership information advantage failure individual servers tolerated 
isolation happen protocol node identifier local views server example nodes holding identifier failed 
overcome nodes periodically send heartbeat messages gossip protocol 
missed heartbeat trigger 
decentralized flat membership protocols 
protocols described rely servers manage membership dissemination notifications 
problem designing scalable peer peer membership service addressed 
employs self organizing subscription mechanism automatically provides node partial view membership size log average number members design parameter 
hierarchical membership protocol probabilistic gossip protocols scalable nodes point view 
attractive reliability properties derive high degree redundancy 
generates large number messages may expensive wide area setting 
drawback partially overcome messages sent locally 
flat membership approach local subscription list composed nodes located network 
introduce hierarchical model nodes clustered geographical network proximity criterion taken account providing nodes local subscription list composed exclusively nodes belonging cluster 
addition nodes cluster provided remote subscription list consisting nodes clusters 
see small number links clusters necessary keep system connected 
henceforth distinguish intercluster intracluster fanout intracluster fanout denotes number links node nodes cluster 
intercluster fanout denotes number remote links cluster maintain nodes outside cluster 
minimum degree 
geographical criterion clustering number hops round trip delay example 
challenging problem estimate quantities reliably locate nearest server subject ongoing research 
ieee transactions parallel distributed systems vol 
february fig 

flat hierarchical membership graph connection node system 
flat model fanout set 
hierarchical model intra intercluster represented thick arrows set 
knowledge server nodes outside cluster 
intracluster membership information contained subscription list previously 
addition remote list contains identity remote nodes 
random nodes designated cluster maintain remote links node may responsible intercluster connection 
fig 
depicts example node system different approaches 
membership protocol described twolevel hierarchy ease exposition easily extended hierarchy levels 
model described remote links equally directed cluster clusters may closer chosen metric 
view fact established section intercluster links required expect significant impact network load large systems 
required differences proximity clusters exploited adding levels hierarchy 
membership protocol implemented server cluster charge attributing intercluster links maintaining partial views cluster 
synchronization required servers exchange random node ids link clusters 
hierarchical gossiping approach astrolabe 
protocols hierarchy nodes mapped network topology administrator nodes gossip subhierarchy remotely 
fully decentralized hierarchical approach membership proposed hi clusters nodes network proximity metric implements protocol cluster clusters level hierarchy 
analysis gossiping performance section establish theoretical results performance gossiping algorithm terms 
relevant analysis links go distinct clusters cluster chosen uniformly random link link go cluster 
key parameters fanout failure rate link node system size 
derive analytical results connectivity random graphs hold number nodes grows large 
apply results analyse performance flat hierarchical protocols described 
connectivity random graphs denotes random graph nodes ordered pair nodes fx yg arc directed probability independent arc presence arc fx yg interpreted saying gossip targets 
success gossip protocol corresponds existence directed path specified source node node random graph 
connectivity undirected graphs studied classical erd renyi 
consider graph nodes edge unordered pair nodes probability pn independent edges 
show pn log probability graph connected goes exp exp 
problem study analogue directed graphs 
consider random graph pn specified source node denote pn probability directed path node pn 
likewise subgraph pn nodes including denote pn probability nodes reachable arcs subgraph 
theorem 
consider sequence random graphs pn pn log constant 
limn pn fact result applicable generally random directed graph models fanout kn random variable general distribution 
examples probability having directed path source vertices depends mean fanout kn exact distribution kn provided distribution satisfies certain restrictions 
restrictions easy state pursue refer reader ball details 
proof techniques different may independent interest 
proof 
proof relies identity pn xn xn pn pn pn pn 
model correspond gossiping protocol number gossip targets chosen node followed binomial distribution bin 
results success gossip continue hold number gossip targets constant mean np 
prefer gn model allows easier analysis impact failures 
kermarrec probabilistic reliable dissemination large scale systems see note reaching vertices complement reaching exactly vertices 
fixed term sum right number ways choosing vertices source second probability arc vertices remaining third term probability vertices reached source conditional edges outside 
second equality obtained simple manipulation 
briefly sketch intuition rest proof 
show pn having form statement theorem lim pn cr 
fixed assuming limn pn exists limn pn fixed sums limits interchangeable expect cr 
simplifying gives exp exp 
proceed formal proof 
call vertex isolated incoming arcs 
clearly directed path source vertex isolated vertices possibly source 
vertex ip isolated pn random graph model pn isolation distinct vertices independent events 
ip vertex isolated recalling pn denotes probability vertex reachable source directed path immediate lim sup pn fact simple calculation essentially yields correct estimate probability directed path vertex 
words isolated vertices constitute main contribution probability vertex reachable source 
establish reverse inequality claim theorem 
order establish lower bound pn lhs require upper bounds prn pn pn tight yield satisfactory upper bound sum series rhs 
lemmas establish necessary upper bounds 
lemma 
npn log 
sufficiently large fn pn br 
limn fn cr fixed proof 
log pn log log fn xr log 
log log log 
log clear second equality fixed limn log fn log 
cr 
verifies second claim lemma 
standard comparison sums integrals shows log 
log turn implies log 
log 
sufficiently large log log fn log log verified differentiation log decreasing function log fn log log jk log log log fact log 
log obtain inequality 
establishes claim lemma 
straightforward verify claim 
tu lemma 
fn defined lemma 
find sufficiently large fn proof 
lemma sufficiently large fn br positive sequence summable 
choose large sufficiently large fn fn fn follows ieee transactions parallel distributed systems vol 
february fn gmax note finite 
fn gmax don depend term smaller sufficiently large 
completes proof lemma 
tu lemma 

sufficiently large rg pn pn proof 
fix rg 
set vertices cardinality containing source vertex vertex fxg 
denote ea event vertices reachable directed paths don leave define eb analogously 
ip ea pn ip eb pn ip eb ip ea eb ip ea ip ip ea ip ec denotes complement eb 
ip pn conditional ea event ec equivalent arcs vertices vertex pn pn pn iterating inequality yields pn pn pn pn pn pn pn ne claim lemma follows large lemmas tu pn xr xr words fn pn xn fn pn fn fig 

fanout required versus probability node failure 
pn xr fn letting fixed obtain lemma lim inf pn xr cr 
choose arbitrarily small arbitrarily large get lim inf pn combined reverse inequality established completes proof theorem 
tu flat gossip result theorem directly applicable flat membership model gives probability success gossip protocol 
intuitively meaning theorem sharp threshold required fanout log 
consider impact link node failures success gossiping algorithm 
suppose links fail independently probability 
simply corresponds replacing pn pn 
take pn log probability success asymptotically exp exp 
suppose nodes source fail independently arcs 
question message reaches node failed 
condition number nodes haven failed 
independence assumption random graph model situation pn 
pn log corresponds fanout log gossip succeeds limiting probability exp exp 
proportion failed nodes fig 
shows mean fanout required achieve success probability greater percent function proportion failed nodes 
top bottom plots correspond respectively 
kermarrec probabilistic reliable dissemination large scale systems fig 

impact inter intracluster lower bound success probability clustered configuration 
hierarchical gossip order gossip succeed model sufficient gossip succeeds cluster message goes originating cluster cluster 
distinct clusters nodes cluster 
mn denote total number nodes 
want choose intracluster fanout intercluster fanout order guarantee bounds probability success 
intra denote probability gossip initiated cluster reaches nodes cluster intracluster arcs 
theorem log intra goes exp exp goes infinity 
consider graph cluster reduced single node nodes connected intercluster arcs 
number intercluster links binomial bin random graph 
inter denote probability directed path source cluster cluster random graph 
theorem says log limiting value inter exp exp grows large 
probability success success larger intra inter 
asymptotic estimates obtained yield lower bound exp ne success go infinity chosen 
order achieve target success instance set ne 
yields log log log log log log mn log observe required intracluster fanout depends mn total number nodes system 
estimates modified account node link failures flat gossip 
lower bound success alternatively expressed success exp ne ne 
fig 
illustrates behavior quantity function light contours correspond high success probabilities approximately 
multiple links pair clusters edge probability random graph fact smaller equivalent asymptotic regime consider 
fig 

flat gossip results failure free execution node group 
shaped indicating sharp threshold intra intercluster 
simulation results evaluate flat hierarchical gossip protocols metrics 
reliability failure free execution 
resilience node failures 
impact network terms link stress 
latency message delivery 
simple packet level discrete event simulator run simulations network topologies generated randomly georgia tech transit stub model 
topology composed node core lan attached core node 
lan star topology composed nodes average 
lan nodes 
evaluate groups composed nodes selected random nodes 
link delays modeled simply assigning propagation delay ms lan link ms core link 
evaluate impact protocols measuring stress link simulated network number messages traveling link message broadcast group 
simulation results consistent theoretical analysis 
results simulations configuration 
hierarchical gossip cluster nodes manner starting arbitrary node construct sorted list choosing successor node closest nodes list 
closeness measured delay transit stub topology 
nodes belonging lan placed contiguous locations list 
sorted list split equally sized clusters number clusters system parameter 
probability atomic broadcast report fraction simulations broadcast atomic mean node receives notification failures 
report fraction nodes receive notification nonatomic broadcasts 
corresponding standard ieee transactions parallel distributed systems vol 
february fig 

flat gossip results failure free execution node group 
fig 

hierarchical gossip results failure free execution node node group 
fig 

hierarchical gossip results failure free execution nodes node group 
tions small indicate high degree confidence estimates 
figs 
depict results failure free execution configurations nodes 
plot dark bar denotes proportion simulations broadcast atomic light bar represents proportion nodes received message nonatomic broadcasts 
observe different regions behavior system 
low atomic broadcast occurs proportion reached nodes increases close close 
intermediate range proportion reached nodes remains close proportion atomic broadcasts increases 
high broadcasts atomic 
figs 
display results failure free execution clustered configurations node node group 
intra intercluster fanout pairs indicated horizontal axis order 
results consistent theoretical analysis 
fig 

hierarchical gossip results failure free execution node node group 
fig 

hierarchical gossip results failure free execution nodes node group 
fig 

stability presence failures fanout node group 
reliability mentioned earlier performance gossip protocols degrades gracefully presence failures 
illustrate evaluating impact failures ranging percent group members proportion atomic broadcast proportion nodes reached broadcast message 
consider model faulty nodes gossip messages receive 
flat gossiping 
figs 
display impact failures node node configurations fixed fanout respectively 
execution simulations resulted atomic broadcast node group large proportion resulted atomic broadcast node group 
figs 
show proportion atomic broadcasts decreases substantially percent group member faulty 
proportion node reached broadcast close percent half group faulty 
kermarrec probabilistic reliable dissemination large scale systems fig 

stability presence failures fanout node group 
fig 

hierarchical gossiping stability presence failures node group 
fig 

hierarchical gossiping stability presence failures node group 
demonstrates high degree resilience failures matches theoretical results 
hierarchical gossip 
plots figs 
similar ones obtained flat model confirm resilience cluster system failures 
proportion atomic broadcasts shown decreases sharply node failure rate goes 
fraction nodes reached notification remains high 
observe performance degrades earlier flat version 
explained fact nodes carrying intercluster links faulty cluster isolated 
contrast probability large set nodes isolated flat gossip low 
impact network main benefit expected hierarchical protocol decrease load core router links 
order evaluate compare load physical link table link stress characteristics flat gossip called link stress flat hierarchical protocols 
experiments broadcast message link stress defined number copies message traverse link 
evaluate link stress nonfaulty environment 
table presents summary statistics link stress flat gossip nodes respective 
cases median coincides fanout feature explained fact links lan see exactly load 
expected links core router experience high load due network oblivious choice gossip targets 
figs 
link stress distribution respectively node group different degrees clustering case 
median link stress close intracluster fanout nodes fanout 
observe dramatic decrease mean maximum link stress pronounced clusters get smaller 
example group node maximum link stress decreases flat version clustering clustering 
observe case approximately cluster lan intuitively minimizes load backbone links network core 
clustering fig 

link stress distribution node core topology node group 
fig 

link stress distribution node core topology node group 
ieee transactions parallel distributed systems vol 
february fig 

link stress distribution node core topology node group 
fig 

link stress distribution node core topology node group 
algorithm suboptimal expect accurate clustering greater impact 
latency measured average delay message delivery various configurations 
compare delay ip multicast shortest path delay source destination flat hierarchical configurations 
table presents delays node node groups respectively 
fanout indicated parentheses 
hierarchical configurations intracluster fanout indicated followed intercluster fanout 
delay hierarchical flat gossip protocols comparable suitable choice intercluster fanout 
hierarchical case delay decreases intercluster fanout increases 
delay flat version approximatively times ip delay 
theoretical analysis gossip protocols relating fanout fraction link node failures probability successful information dissemination flat hierarchical gossiping schemes 
simulations confirmed theoretical findings showed hierarchical protocol significantly reduces network link stress cost small degradation reliability latency 
acknowledgments authors miguel castro antony rowstron participation development simulator 
table average maximum delays flat clustered configurations ball poisson approximation epidemic models applied probability vol 
pp 

birman hayden xiao budiu minsky bimodal multicast acm trans 
computer systems vol 
pp 
may 
birman joseph exploiting virtual synchrony distributed systems proc 
acm symp 
operating systems principles sosp dec 
castro druschel 
kermarrec rowstron scribe large scale decentralized application level multicast infrastructure ieee selected areas comm 
jsac vol 
oct 
deering cheriton multicast routing datagram internetworks extended lans acm trans 
computer systems vol 
may 
demers greene hauser irish larson shenker sturgis swinehart terry epidemic algorithms replicated database maintenance proc 
sixth ann 
acm symp 
principles distributed computing podc pp 
aug 
erd renyi evolution random graphs mat int 
zl vol 
pp 

eugster guerraoui 
kermarrec lightweight probabilistic broadcast proc 
int conf 
dependable systems networks dsn 
floyd jacobson liu mccanne zhang reliable multicast framework light weight sessions application level framing ieee acm trans 
networking pp 
dec 
ganesh 
kermarrec peerto peer lightweight membership service large scale group communication proc 
third int workshop networked group comm 
ngc nov 
ganesh 
kermarrec peer peer membership management gossip protocols ieee trans 
computers appear 
feb 
ganesh 
kermarrec hi self organizing hierarchical membership protocol proc 
sigops european workshop sept 
golding taylor group membership epidemic style technical report ucsc crl dept computer science univ california santa cruz 
guo hayden van renesse vogels birman efficient gossip garbage collection scheme scalable reliable multicast technical report tr dept computer science cornell univ 
gupta 
kermarrec ganesh adaptive efficient epidemic style protocols reliable scalable multicast proc 
st symp 
reliable distributed systems srds oct 
holbrook singhal cheriton log receiver reliable multicast distributed interactive simulation proc 
sigcomm 
jannotti gifford johnson kaashoek toole overcast reliable multicasting overlay network proc 
fourth symp 
operating systems design implementation osdi 
kermarrec probabilistic reliable dissemination large scale systems kaashoek tanenbaum hummel bal efficient reliable broadcast protocol operating system rev vol 

lin paul reliable multicast transport protocol proc 
infocom pp 


lin marzullo directional gossip gossip wide area network technical report cs dept computer science eng univ california san diego june 

lin marzullo masini gossip versus deterministic flooding low message overhead reliability broadcasting small networks proc 
th int symp 
distributed computing pp 

shenker karp randomized spreading ieee proc 
st ann 
symp 
foundations computer science focs pp 

ratnasamy handley karp shenker application level multicast content addressable networks proc 
third int workshop networked group comm 
ngc nov 
sun sturman gossip reliable multicast large scale high throughput applications proc 
int conf 
dependable systems networks dsn july 
van renesse birman scalable management data mining astrolabe electronic proc 
int workshop peerto peer systems iptps mar 
van renesse minsky hayden gossip style failure detection service middleware 
zegura calvert bhattacharjee model internetwork proc 
ieee infocom apr 
anne marie kermarrec received phd degree computer science university rennes france 
worked postdoctoral researcher computer systems group vrije universiteit amsterdam netherlands assistant professor university rennes 
march worked researcher microsoft research cambridge united kingdom 
research interests distributed systems fault tolerance application level multicast peer peer computing 
laurent graduated ecole polytechnique received phd degree universit paris sud paris france 
currently researcher microsoft research cambridge united kingdom works modeling performance analysis networks 
research interests quality service congestion control internet epidemic style information dissemination 
currently associate editor queueing systems theory applications 
ganesh graduated indian institute technology madras ms phd degrees electrical engineering cornell university ithaca new york respectively 
research interests include queuing theory congestion control pricing internet distributed systems 
information computing topic please visit digital library computer org publications dlib 
