interactive problem solving algorithm visualization pearl pu database lab computer science department swiss federal institute technology di epfl lausanne switzerland pearl pu epfl ch tool conceptual design industrial products 
helps designers define evaluate initial design space search algorithms generate sets feasible solutions 
algorithm visualization techniques kaleidoscope lattice visualization dimensional data map externalize machine problem solving strategies tradeoffs result strategies 
short training period users able discover tactics explore design space effectively evaluate new design solutions learn important relationships design criteria search speed solution quality 
propose visualization serve tool interactive intelligence human machine collaboration solving complex problems 

douglas adams novel hitch guide galaxy computer deep thought put years solve ultimate question life universe answer disappointed designers expected comprehensive explanation 
computer users face similar situations day complex algorithms scheduling configuration design turn supposedly optimal answers justification 
users gain understanding solutions obtained best tune behavior programs obtain solutions better quality 
consider case conceptual design formulation constraint problem solving set automatic search methods 
examine issues learning discovery control strategies novice users 
focus important tasks conceptual denis lia ceri universit avignon des pays de des bp avignon cedex france denis lia univ avignon fr design solution search tradeoff analysis alternative solutions discovery new solutions 
conceptual design design description exploration space quickly large set interacting design criteria complex making difficult designer effectively evaluate different possibilities 
computational assistance offload cognitive tasks designers concentrate creative aspects 
designers start definition search space new product identifying set key parameters 
enumerate list possible values design parameter 
put combine values set coherent consistent design alternatives consideration design rules customers criteria preferences 
design process conceptual design configuration design land design industrial product design 
employ constraint satisfaction problem solving csp techniques formulate solve conceptual design problems 
csps known np complete 
efficient algorithms exist optimal right context 
algorithm visualization useful presenting right opportunities users order select best strategy problem 

related works algorithm visualization presenting workings complex algorithms visual forms animation 
benefit offer users significantly fast intuitive understanding algorithm behavior advantage high bandwidth communication channel display human fovea perceptual inference 
research area important results algorithm learning software maintenance designing analyzing concurrent algorithms software engineering 
algorithm visualization show workings algorithms externalize machine strategies tradeoffs strategies 
system helps users discover problem solving tactics expert user tactics 
interactive visualization tools support design new 
attribute influence explorers multiple linked interactive representations extrapolate dependencies design attributes governed set mathematical models 
untrained users set range values design criterion cost ask system give ranges admissible values design attributes material dimensions designed pieces 
interval propagation techniques useful engineering design parameters continuous mathematical models describe behavior difficult interpret normal users 
conceptual design parameters discrete continuous combinatorial search methods needed generate admissible solutions 
doing internal search state important incorporate users strategies choosing right subspace 
information visualization domain increasingly strong interest developing methods support human computer interaction problem solving level 
examples document retrieval complex information visualization worldwide web navigation large data base exploration 
duce visualization tools generally described consisting components data access mapping rendering 
order support visualization larger quantity data component architecture sufficient pointed campo 
algorithm visualization proposes problem solving knowledge algorithm visualization allow humans explore larger information space 
organized follows 
describe constraint satisfaction problem solving conceptual design framework introduce visualization methods important steps conceptual design design space definition solution tradeoff analysis design conflict resolution describe user evaluation system followed 

constraint satisfaction search csp formulation conceptual design consists set variables domain values variables constraints values 
solution csp assignment values domain variables constraints violated 
consider simplified watch design see realistic examples parallel robot design land configuration industrial product design 
csp consists design criteria beauty complexity implementation usability 
criterion takes values ranging 
suitable discrete values low medium high maximum 
designers adopt scalar values shortcuts 
criterion beauty aesthetic appearance complexity number pieces needed watch implementation easy manufacture final product usability easy put watch manipulate settings 
designers describe solution spaces terms included final solutions rules follows beauty implementation complexity implementation usability complexity usability complexity beautiful watch difficult implement 
complex difficult implement 
easier watch complex 
watch currently designed usability value complexity value 
kaleidoscope showing search result 
backtrack search backtracking simplest way solve csp problem 
systematically instantiates value time variable domain checks constraint violation 
succeeds instantiating required variables enumeration solution 
admissible solutions generated automatically 
list shows trace backtracking algorithm beauty complexity search fail beauty complexity implementation usability search fail beauty complexity implementation usability fail 
call row trace valuation 
unsuccessful valuations immediately discarded algorithm goes back variable alternative value remains tried 
continues way value combinations examined 
progressive snapshots kaleidoscope 
solutions space possibilities visualization random search knuth algorithm call kaleidoscope visualization tool animating internal search state color patterns 
patterns change users modify design parameters similar kaleidoscope curious changing patterns manipulates device 
kaleidoscope shows solutions obtained 
entire search space kaleidoscope disk divided concentric rings variable csp problem 
drawing wedges starts right hand center line sweeps disk wise direction shown 
value assignment visually displayed wedge colors disk 
successful assignment colored black unsuccessful assignment drawn corresponding color constraint 
assignment gives wedge black 
assignment results portion wedge black second portion color corresponds 
thin black line reaching outer circle represents solution 
successive snapshots kaleidoscope watch design example 
black lines represent solutions color bands show forbidden spaces blocked relative constraints 
kaleidoscope scale csp size 
similar circular forms fisheye view technique visualize local search spaces csp large 
contrast visual display represents reasoning process aggregation hierarchically organized data 
phenomenon called thrashing occur search repeatedly fails certain combination values 
kaleidoscope disk large slice chopped color top part 
thrashing behavior signals designer certain combinations values discarded avoid valuation 
backtracking intelligent provide preprocessing 

random search knuth example variables having range values 
unfortunately csp problems grow size variables number values ranging big backtracking search algorithms find answers quickly 
second csp algorithm monte carlo search method knuth explore search space efficiently randomly 
set snapshots showing progress knuth algorithm slightly different design problem contains solutions visualized black lines 
depicted algorithm explores different areas circle randomly 
snapshot algorithm obtained solutions 
top bottom parameters order optimal order accelerate search 
search variable reordering third csp algorithm called variable reordering 
examines constraints picks restricting 
order search starts restricting ones 
consider watch design example 
new order usability complexity implementation beauty 
compares visualization csp problem different algorithms simple backtracking top variable reordering bottom 
second case significantly fewer numbers unsuccessful valuations making algorithm faster terminate 

users discover kaleidoscope 
color patterns black lines color elements convey important abstractions guide humans setting search strategies 
search space large solutions scarce called futile space knuth method appropriate 
small set variables strong constraints variable ordering offers significant advantages 
simple problems backtracking sufficient 
users aware different strategies algorithms know switch algorithm depending context 
program allows humans current search change subspaces results far satisfactory 
example search process blocked color element constraint thrashing obviously cause detect easily constraint responsible thrashing looking color coding 
knuth algorithm cure thrashing behavior 
kaleidoscope contains visual structures easily learned appreciated users spaced black lines solutions represent solutions diverse characteristics concentrated black lines represent homogeneous solutions 
quickly observe search space abundant futile noticing full length black lines numerous existed far 
case futile search space color patterns diagnose constraints responsible lack solutions 
summarize list set strategic points help users perform efficient combinatorial search help kaleidoscope thrashing occur type frequency 
solutions diversified concentrated clusters 
solutions abundant futile 
variables reordered solution generation faster 
map pareto space 
map dimensional tradeoff designers choices 
provide visualization assistance evaluate solution space order intelligent decisions 
users define set criteria instance quality material product manufacturing cost 
criteria tradeoff analyses solutions mapped space coordinates represent criteria values solution represented node 
shows solution space city planning design problem criteria noise factor cost 
node performs best criteria called dominant solution 
nodes lying outer rim solution space called non dominant nodes darker 
cases solution map contain dominant node 
tradeoff analysis necessary order users choose winner dynamic preference measure 
example prefer optimize noise factor cost point highest value current winner 
visualization called pareto space feasible criteria real world problems call tradeoff analysis higher dimensions 
balance visualization performing tradeoff analysis dimension 
new visualization design map multiple attribute pareto overcomes limit combining color patterns visual structures interactivity 
shows new design position represents center mass criteria values bars bottom position represents sum criteria values 
solution performs best speaking node largest value 
represents absolute performance value shows distribution underlying criteria balance 
example nodes located view line represent solutions having relatively higher values view compared criteria 
tradeoff analysis required users slide left right center line depending current preferences 
cases solutions pulled multiple criteria values individually criteria distinguishable 
case interactivity solves problem allowing users click solution nodes examine details 
method change interactively criteria weight ambiguities disappear 
example increasing weight pull optimal solutions right side visualization 
answers obtained map dominant solution 
numerous non dominant solutions 
solutions clustered certain area spread map 
map coloring problem lattice shown upper right corner 

enemy design null solution sets opposite abundant solution space designers enemy null solution space 
design problem constrained quickly due number variables explored constraints defined 
constrained problem contains sets constraints defined way solution exist 
conflict elicitation algorithms described diagnose constrained problems listing set constraints satisfied simultaneously set sets constraints set repaired order give solutions 
simple example constrained problem consider coloring mutually adjacent countries aa bb cc colors neighboring countries different color 
constraints satisfied time aa bb aa cc bb cc means colors countries 
observe csp contains constrained csps solutions 
define notions constraint set conflict set allow partial solutions constraint set minimal conflict set smaller set conflict set constraint set allow solutions contains minimal conflict set lattice interactive form 
interactive lattice conflict sets analyzed visual interactive lattice shown upper right corner 
square set constraints 
sets ordered top bottom sizes sets top row smallest 
square black minimal conflict set 
dark blue set blocks certain number solutions 
darker potential solutions blocks 
question multiple blocking sets case problems user focus 
sets lying top row smaller underneath 
smaller set easier users modify constraints 
general heuristic find smallest top darkest blue set constraints relax 
square bottom lattice shown minimal conflict set map coloring problem 
clicking set subsets highlighted top 
removing main conflict give solutions removing relaxing subsets give solutions indicated numbers small windows 
means allow adjacent countries color removing constraint remove relax subsets 
desirable color neighboring countries color opt relaxing subsets adding color domains obtaining solutions 
final map coloring problem color choices countries 
normal lattices contain lines relate sets sub supersets lattice interactive displays subsets set clicked 
square white clicked subsets highlighted white 
way display large lattice risk having lines causing visual overloading 
lattice multiple conflict sets shown black squares 
multiple minimal conflict sets problems minimal conflict sets indicated black squares left part 
watch design different constraint sets constraint network visualized fig beauty implementation complexity implementation usability complexity usability complexity beauty implementation black squares correspond minimal conflict sets 
minimal conflict sets relaxed generate solutions 
square row clicked lattice shows subsets see lattices 
subsets define parts original problems solutions exist 
information guides users choose subsets keep 
example clicking black square lattice subsets shown 
keep subset second 
second subset larger set keeping automatically allows keep largest original problem 
visualizing conflicts largest consistent subsets offer designers choice throw away keep difficult decision design requires experience gut feeling dynamic criteria designers 
summarize section constrained problems list type queries representing different reasoning tasks corresponding results get lattice visualization csp problem constrained single black squares lattice conflict sets relax side window select optimal look constraint definition find appropriate potential solutions perform map corresponding constraints removed 

putting set design parameters pen consists variables domains 
simple backtracking kaleidoscope discovered successful valuation 
quick application knuth algorithm gave answer csp futile 
lattice shown lower right corner gave dark squares indicating main conflicts responsible lack solutions 
squares top row represent constraints 
eliminated new solutions 
square second row combination constraint 
constraints eliminated time solutions liberated 
clicking square map gives visualization potential solutions 
advantage coupling avoid doing entire search process users certain quality solutions obtain 
top squares promising small potentially yield new solutions respectively 
rank fairly tradeoff analysis 
rational relax constraint 
design choices re evaluated new consideration 
having button inset body screw directly body 
button width longer smaller body width 
widths equal 
constraint re written 
order find new solutions system just re evaluates new constraint solutions previous constraint forbidding plus initially 
returns solutions 
largest pen returned selected optimal tradeoff visualization 
small scenario shows algorithm visualization influence user design strategies 
years design problems parallel robot design micro engineering products kitchen arrangement 
helped discover new concepts different aspects existing designs particularly appreciated reflective tool 
design pen 
lattice visualization lower right corner collaboration tradeoff view order browse potential space solutions 

evaluation asked subjects solve real design problems underconstrained constrained 
subject asked note initial problem solving strategies 
compare strategies machine subjects students university micro engineering computer science 
summarize results follows detail please see knuth algorithm find problem yielded solutions constrained 
brief explanation map lattice tool navigate constraint editor modify problem obtain interesting optimal solutions 
interactive search feature kaleidoscope search underway aware role variable order search speed told color coding 
solved design problems minutes 
general satisfied learning speed subjects speed mastering set search heuristics offered machine 
able distribute computationally intensive tasks various algorithms concentrate finding innovative design solutions relaxing design constraints obtain compromises 
system offers set computational tools located far left define solve repair visualize design problems 
active assistants located lower left corner inactive ones left panel 
column presents history working space 
tool time predefined order 
main working area right provides visualizations active computational assistants moment problem definition solve conflict elicitation 

visualization techniques help designers explore design spaces evaluate discover new design solutions 
interactive intelligence paradigm contrast automatic methods keep intelligent black boxes compounding untrained users frustration problem results deep thought analogy 
kaleidoscope map lattice initial steps applying interactive visualization conceptual design problems human machine collaborate solve problems difficult 
generalization framework underway resource allocation travel planning activities csp formalism 
believe type intelligent systems engaging visualization communication medium 


brown sedgewick system algorithm animation 
ieee software january 

campo automatic abstraction management information visualization systems proceedings visualization conference 

card information visualization 
tutorial notes chi 

chalmers design perspectives visualising complex information proc rd ifip visual databases conference 

chuah dynamic aggregation circular visual designs 
proceedings ieee symposium information visualization infovis triangle park nc october 

klein mcguinness configuration artificial intelligence engineering design analysis manufacturing 

duce visualization proceedings visualization conference 

eick maintenance large systems software visualization stasko eds mit press 

gershon moving happily world wide web ieee computer graphics applications march 

goldstein roth aggregation dynamic queries exploring large data sets proceedings conference human factors computing systems sigchi pages 

hearst tilebars visualization term distribution information full text information access proceedings conference human factors computing systems chi 
acm press may 

knuth estimating efficiency backtrack programs mathematics computation 

kraemer creating accurate portrayal concurrent executions ieee concurrency pp 
january mar 

computer aided creativity multicriteria optimization design ph thesis th se swiss institute technology lausanne 
appeared doctoral consortium chi 

mackworth consistency networks relations artificial intelligence 

mitchell new agenda computeraided design electronic studio 
mitchell purcell eds electronic design studio 
mit press 

mittal generic model tasks proceedings international joint conference artificial intelligence pp morgan kaufmann august 

exploration innovation design 
springer verlag new york 

pareto cours technical report rouge lausanne switzerland 

stasko domingue brown price 
eds software visualization mit press 

tweedie spence williams attribute explorer video proceedings chi boston april th th acm press 
tweedie spence su influence explorer tool design 
proceedings acm chi conference human factors computing systems videos visualization vol 
pp 


tsang foundations constraint satisfaction academic press 
