dynamic group communication andr schiper ecole polytechnique rale de lausanne epfl lausanne switzerland mail andre schiper epfl ch group communication basic infrastructure implementing fault tolerant replicated servers 
group communication understood context static systems processes created start computation current specifications dynamic group communication processes added removed computation satisfactory 
proposes new specifications dynamic reliable broadcast call reliable multicast dynamic atomic broadcast call atomic multicast group membership primary partition model 
special case static system specifications identical known static specifications 
specification group membership derived specification atomic multicast 
shows solve atomic multicast group membership reliable broadcast 
solution atomic multicast close static atomic broadcast solution reduction consensus 
group membership solved atomic multicast 
context reliable multicast introduce notion solution show solution obtained relying generic multicast algorithm 
keywords distributed systems fault tolerance group communication primary partition specification implementation reliable broadcast atomic broadcast group membership 
fault tolerance distributed systems ensured replication traditionally implemented top group communication infrastructure 
reliable broadcast ensures correct processes deliver message atomic broadcast addition properties reliable broadcast orders messages examples group communication primitives 
group communication understood context static system processes created start computation 
specification static group communication implementation reliable broadcast atomic broadcast discussed example 
static system practical limitations 
consider example replicated server replicas 
crashes probability service permanently available decreases 
increase probability new replica created replace 
requires dynamic group communication 
despite review chockler dynamic group communication reached level maturity static group communication 
goal contribute better understanding dynamic group communication 
key component dynamic system group membership service responsible adding removing processes computation 
group membership strongly related view synchrony property ensuring processes deliver set messages membership changes 
specifications group membership view synchrony unsatisfactory reasons 
current specifications complex 
second specifications exclude trivial solutions 
specification reliable broadcast atomic broadcast result specifications group membership view synchrony different understood simple specifications reliable broadcast atomic broadcast static system 
example reliable broadcast static system view synchrony dynamic system provide somewhat similar guarantees 
specification different 
proposes new specifications dynamic group communication primary partition model specifically dynamic reliable broadcast dynamic atomic broadcast shows implemented 
avoid lengthy expression dynamic reliable broadcast respectively dynamic atomic broadcast denote reliable multicast atomic multicast 
adopt approach start specification reliable multicast extend atomic multicast 
special case static system specifications identical known static specifications 
specification group membership derived specification atomic multicast 
discuss solutions atomic multicast group membership reliable multicast 
atomic multicast solved reduction consensus similarly static atomic broadcast 
group membership solved atomic multicast 
solution atomic multicast trivially extended solve reliable multicast 
discuss solution uses generic broadcast :10.1.1.17.9099
structured follows 
section devoted specifications reliable multicast atomic multicast group membership 
section compares new specifications survey chockler 
section solves atomic multicast group membership proves correctness solution 
section extends solution reliable multicast 
section concludes 
specification dynamic group communication section define reliable multicast dynamic reliable broadcast atomic multicast dynamic atomic broadcast group membership 
consider called primary partition membership problem 
system model consider asynchronous distributed system composed processes taken finite set communicate message passing 
system dynamic processes may created computation processes may terminate computation 
group communication assumes groups group subset processes 
order avoid unnecessary complexity assume exists group processes belong single group 
assumption means creation process ii joining group operation 
similarly termination process ii leaving group operation 
consequence difference processes system group 
rest consistently term group 
process may created 
process terminated crashed created second time 
practical point view stills allows crashed process recover take different name 
view subset represents membership group moment 
process denote current membership group perceived membership may occur process sequence membership added membership removed membership add notion view instance denoted inst 
instance view process instance number subsequent instance instance number incremented 
membership inst say process view inst simply process view initial view group denoted view process 
process view view say say view view note static system special case dynamic system model view changes equal view view processes 
processes fail crashing consider byzantine failures 
static system process said correct crashes 
extend definition introducing notion correctness process view 
process correct view eventually view view processes crashes view immediately process definition define notion correct process dynamic system 
initial view process say process correct correct subsequent views 
faulty 
note system static initial view processes 
item definition static system 
attach identifier view view number 
glossary summarizes definitions 
reliable multicast tentative usual definition static reliable broadcast assumes processes created computation 
definition reliable multicast considers dynamic system model introduced 
reliable multicast defined primitives tentative properties validity correct process executes eventually uniform agreement process view processes correct eventually uniform integrity message correct process ii previously sender 
definition problem 
allows runs specification satisfied respect process violated respect process consider example process crashes 
view initial view group process executes view process view process view crash correct view 
example specification satisfied correct view view 
reliable multicast second tentative avoid problem add property requires message delivered processes view uniform view delivery processes view inst inst 
altogether define reliable multicast properties validity uniform agreement uniform integrity view delivery 
easy see definition reliable multicast generalization static reliable broadcast 
system static view equal view delivery property trivially satisfied properties identical define reliable broadcast 
systems static reliable multicast equivalent static reliable broadcast 
broadcast primitive define uniform 
simplify notation drop word uniform various broadcast types 
atomic multicast define atomic multicast primitives adeliver similarly static systems properties define reliable multicast plus additional ordering property 
property take definition contrary order property forbids holes delivery sequence messages 
adapt definition dynamic creation processes poses specific problem want process deliver messages delivered creation 
express views uniform total order process correct faulty message view message process adelivered illustrate property consider process adelivered view view possibly 
adelivered created delivery consequently adeliver adelivered created delivery adeliver group membership complete definition dynamic group communication need specify events change views 
words need specify group membership problem 
consider simple specification operations add process group remove process group 
call operations join respectively leave 
join leave operations means modify membership 
events process crashes failure suspicions similar events appear specification 
allows clear separation concerns question process excluded question excluded 
address second issue 
process requests add process group invoking operation join 
process included view process possibly executes join 
similarly process requests remove group invoking operation leave remove invoking leave 
process removed view process executes leave 
process learns removed group executes leave 
model section process executes leave faulty member view 
specification simple 
process left group similar faulty process left group obliged deliver messages join group 
introduce notation 
invocation operation join 
leave denoted join inv 
leave inv 
execution operation join 
leave denoted join exec 
leave exec 
want join exec leave exec executed total order processes 
simply define group membership properties atomic multicast renaming join inv join exec leave inv leave exec properties replaced adeliver 
process join different name similarly crashed process see section 
join inv equivalent add join exec equivalent adeliver add 
leave inv equivalent remove leave exec equivalent adeliver remove 
uniform integrity property atomic multicast needs adapted 
reason 
consider view processes invoking leave inv view want leave exec executed process lead fictitious view changes view view 
fictitious view changes may result invoking example leave inv view contain specification gm uniform integrity allows real view changes 
summarize define group membership initialization property properties gr gm validity validity property renaming rules 
gr gm uniform agreement uniform agreement property renaming rules 
gr gm uniform integrity correct process executes join exec 
leave exec join inv 
leave inv previously invoked 
executes join exec 
leave exec created 
current view 
gr gm uniform view delivery uniform view delivery property renaming rules 
ga gm uniform total order uniform total order property renaming rules 
occurrence join exec process view view atomically 
occurrence leave exec process view view atomically 
introduce notation join exec 
leave exec denote execution join 
leave leads view process executes join exec leave exec say installs view event process denoted init initial view process 
initialization property defines initial view process initial view group view installed process gm initialization process event init belongs view ii exists process installs view lead specification problems may disturbing user perspective 
noted ordering property ga redundant 
denote op join exec leave exec 
ga states process say executes op view executes op process executes op executed op 
show follows properties 
proof induction number mop membership operations op performed base case mop 
assume executes op view executing op view obtained execution op 
assume process executed op 
gr executed op view initial view 
initial view 
hypothesis 
gr op join exec means initial view executes op view executed view change operation view leading operation necessarily op completes proof base case 
induction step proven similar way 
examples illustrate specifications examples 
example shows message view adelivered different view 
initial group view process crashes local history init join exec adeliver 
local history init join inv join exec adeliver 
local history init adeliver 
second example shows process faulty execution leave exec 
initial group view process crashes local history init adeliver leave exec 
local history init leave inv adeliver leave exec 
local history init adeliver leave exec second example shows interesting feature specification 
process despite fact correct execution leave exec execute adeliver 
reason 
process executes adeliver view executes leave exec 
uniform total order property section process view execute leave exec executed adeliver 
generally process correct execution leave exec execute operations message delivery join leave operations take place joined group execution leave exec 
comparison current specifications compare specifications chockler 
discuss properties order safety liveness properties 
safety properties start properties group membership usual current specifications 
group membership safety properties safety properties group membership split basic primary vs partitionable properties 
basic properties property self inclusion process installs view member specification weaker self inclusion 
gm initialization property initial view process satisfies self inclusion property 
self inclusion trivially satisfied subsequent views installed process executes leave exec 
leave exec process allowed install new views belong 
property local monotonicity process installs view installing view identifier greater local monotonicity apply specifications attach identifiers views section 
property initial view event send recv safe prefix event occurs view 
property trivially ensured gm initialization property requires init event executed process 
non basic safety property property primary component membership function set views installed trace natural numbers satisfies property view exists view member installs successor process 
property implies pair consecutive views process survives view second 
specification satisfies property 
consider part property defined recursively follows ii process installs view immediately view 
gm uniform total order property function 
show contradiction second part property holds 
assume contradiction exists views process installs definition initial view 
gm initialization property exists process different installs installs view summarize specification group membership satisfies relevant safety properties 
opposite true 
example gm uniform integrity property hold view changes required justified 
give informal specification 
additional information please refer 
multicast safety properties multicast safety properties split basic sending view delivery weaker alternatives virtual synchrony properties 
basic properties property delivery integrity recv event preceding send event message 
property corresponds part ii uniform integrity property 
property duplication different recv events content occur process 
corresponds part uniform integrity property 
properties category sending view delivery weaker alternatives property sending view delivery process receives message view process possibly sends view specification require view delivery 
property added noticed view delivery see basic property sending view delivery 
property view delivery processes receive message receive view 
property ensured uniform view delivery property 
mentioned view delivery introduced avoid blocking application happen sending view delivery 
properties category virtual synchrony property virtual synchrony processes install view previous view message received received specification ensures property 
consider processes install view view message delivered adelivered view self inclusion property install view model correct view delivered view uniform agreement uniform view delivery properties delivers view property transitional set skip complex property relevant context 
section give informal specification 
property agreement successors process installs view view process installs member installs property alternative transitional set property 
show specification satisfies property consider function defined ii process installs view immediately view 
gm uniform total order property function 
processes views gm uniform total order property ensures 
self inclusion property install view initial view view installs immediately installs immediately installs immediately 
result conclude means installs immediately terminology installs 
ordering reliability properties ordering reliability properties split fifo multicast causal multicast total order multicast 
consider fifo order causal order discuss total order multicast category property strong total order timestamp function messages received processes order consistent property reliable total order exists timestamp function process receives message messages sent view receives reliable total order stronger strong total order requires processes deliver prefix common sequence messages delivered view 
specification uniform total order property ensures reliable total order 
liveness properties liveness properties difficult compare specifications 
events trigger view changes appear specification 
example gm validity gm uniform agreement properties hold 
weaker non uniform gm agreement property hold 
concerning message multicast observations 
firstly ensure validity property correct process executing forced deliver secondly ensure uniform agreement property 
satisfy non uniform version property 
consider correct process delivers view requires correct process deliver discussion comparison shown specification satisfies safety properties meaningful context 
specification safety liveness properties appear 
solving atomic multicast membership changes start describing solution atomic multicast simpler discuss solution reliable multicast 
extending system model complete system model section 
respect communication assume reliable channels defined primitives send receive properties process receives message sent creation ii receives duplication iii sends correct eventually receives loss 
assume consensus oracle solves consensus 
consensus oracle defined propose val decide decision 
process executes propose val parameter identifies specific instance consensus stands view denotes set processes reach agreement val initial value 
instance consensus consensus oracle ensures property 
processes execute propose val parameter processes crash eventually decide termination decision initial values val validity processes decide differently uniform agreement 
solution reduction consensus atomic multicast view changes solved reduction consensus atomic broadcast 
explain mainly differences reduction static setting reduction dynamic setting 
parts algorithm algorithm decompose solution parts 
algorithm page transforms calls join inv 
leave inv calls atomic multicast add 
remove 
algorithm page solves atomic multicast constant view 
order express transformation algorithm introduce primitive type type take values add remove am 
call translates am call join inv translates add call leave inv translates remove see algorithm task task task 
low level primitive confused 
calls type atomically multicasts typed messages 
messages delivered execution type line 
algorithms implements type ensures additional property sequence events add remove terminated fictitious delivery message type line triggers creation joining processes 
example 
ad am ad add ad remove ad ad am 
example ad am takes place view ad am takes place new view 
initialization newly created process done algorithm executing init send line sends reliable channel new view set created processes set joining processes joining processes 
notation init send init receive line distinguish standard send receive primitives algorithm 
initialization algorithm satisfies property processes intersection old new view crash sending new view joining processes get new view start execution 
correct joining process gets initial view line correct joining processes get initial view algorithm atomic multicast constant view algorithm solves atomic multicast constant view reduction consensus 
algorithm close static atomic broadcast algorithm works follows 
processes execute sequence consensus numbered 
initial value decision consensus set messages 
adeliver set messages decided consensus messages set adeliver delivered messages set adeliver messages set adeliver delivered deterministic function 
main difference dynamic algorithm sequence consensus executed constant set processes 
consensus executed processes members group consensus started 
dynamic algorithm additional differences need explained 
initialization joining processes lines line 

line sends messages received delivered joining processes 

deterministic delivery function delivers messages type am messages type add remove line 
notation line stands line type simply denoted ad type 
note initialization algorithm algorithm independent 
algorithm independently starts initialization part completed 
algorithm dynamic group communication atomic multicast main code process initialization wait init receive created view newp created view iew init send newp processes newp execute init initialization done execute task am execute join task add execute leave task remove type task type am adeliver type add join exec type remove leave exec type create processes iew init send iew processes iew iew 
delivery fictitious message type line leads algorithm create processes send initial view 
algorithm atomic multicast code process initialization wait init receive aset newp received adelivered aset init send aset newp processes newp initialization done type task send type processes receive type time task sender send type processes received received type received adelivered task undelivered received adelivered propose undelivered wait decide adeliver iew atomically messages adeliver deterministic order messages type add remove delivered messages type add remove adelivered adelivered adeliver init send adelivered iew processes iew type received adelivered send type processes prev iew comment points 
denote view preceding view change vnew view view change 
initialization allows processes vnew initialize set adelivered messages delivered counter identify consensus instances 
line needed case processes vnew crash execution line ensures newly joining process terminates initialization joining processes crash 
line validity correct process executes eventually 
consider process executing type line view guarantee type eventually exist view non crashed processes 
purpose view changes new view sends messages received delivered joining processes line new view faulty validity property trivially ensured 
batch adeliver messages type am delivered messages type add remove reason 
consensus executed processes current view adeliver add am decision 
consider options delivery add followed delivery am ii delivery am followed delivery add 
case new view installed delivered new view specification process deliver requires special mechanism 
case ii delivered view new view installed 
deliver delivering messages type am messages type add remove solution simpler 
messages current batch delivered joining processes created 
goal fictitious message type line 
system initialization algorithm system initialization system initialization subset create processes init send processes init send processes algorithm code executed system initialization 
initial view defined line processes created line processes initialized reception message line algorithm message line algorithm 
proof atomic multicast prove section algorithm algorithm satisfy properties atomic multicast 
lemma denote value executes propose value executes propose vk view executes propose 
processes 
adelivered adelivered defined adelivered adelivered 
vk defined vk vk 
undelivered defined message undelivered correct eventually 

executes propose correct eventually executes propose 
propose messages correct eventually messages proof proof simultaneous induction 
base step trivially holds adelivered adelivered base step trivially holds 
base step show holds 
undelivered received line 
sent line 
correct channels reliable eventually receives inserts line 
base step show executes propose correct eventually executes propose 
distinguish cases view ii view case correct equivalent correct 
case definition installs view 
necessarily executed propose 
case ii executes propose contain message executes propose initially empty remains empty 
contradiction 
eventually executes task propose 
base step show messages adelivered correct eventually messages adeliver adeliver adeliver algorithm messages adeliver previously executed propose 
part lemma processes correct eventually execute propose 
termination uniform integrity consensus process correct view eventually executes decide adeliver messages adeliver uniform agreement consensus processes execute decide adeliver value adeliver induction step assume lemma holds 
show adelivered adelivered consider cases initial view 
ii initial view iii initial view adeliver decision value propose confused adelivered simply notation section adeliver means adeliver line join exec line leave exec line 
proof adapted 

case line induction hypothesis part lemma induction hypothesis part lemma case ii line exists process initial view case case iii line exists processes possibly initial view case induction step show vl vl induction hypothesis part vl vl ii ii view changes applied view changes applies vl induction step show holds consider cases undelivered defined ii undelivered defined iii defined undelivered case view initial view case received view sent processes line including correct eventually 
case ii undelivered receives view view precedes immediately received view sent processes including correct eventually 
received view argument eventually 
received view initial view adeliver sends line correct eventually 
adeliver sends line correct eventually 
case iii view precedes immediately view result follows immediately induction hypothesis 
initial view apply reasoning case ii sends line correct eventually 
sends line correct eventually 
induction step show executes propose correct eventually executes propose 
view definition installs view executes propose 
assume view prove result contradiction 
assume executes propose 
executes propose contain message 
part lemma executes propose 
part lemma defined correct eventually view time condition received triggers task line true view eventually executes task propose 
contradiction 
induction step show messages messages messages executed propose 
part lemma processes correct eventually execute propose 
view definition eventually installs view executes decide 
view correct equivalent correct 
termination consensus eventually executes decide messages uniform agreement consensus processes execute decide lemma uniform agreement property atomic multicast satisfied 
proof prove process message view processes correct eventually adeliver assume view line messages type am adelivered messages type add remove message adelivered process view execution propose view view view happens executed propose 
lemma part eventually lemma uniform total order property atomic multicast satisfied 
proof immediate lemma part fact processes adeliver messages batch deterministic order 
lemma validity property atomic multicast satisfied 
proof prove correct process executes eventually proof contradiction 
suppose correct process view vi lemma process line sends processes view vi 
vi vi vi sequence views sequence finite set finite sect 
process added removed view 
adelivered views vij ij message decision consensus 
line process sends processes vi vi vi vi sends processes correct process eventually receives inserts 
processes adeliver insert adelivered 
correct process time permanently 
algorithm lemma part correct processes execute propose sets include adapted 
faulty processes eventually crash faulty process executes propose 
max 
correct processes view execute propose termination uniform agreement consensus correct processes execute decide uniform validity consensus process executed propose 
definition contains correct processes including adeliver contradiction concludes proof 
lemma uniform integrity property atomic multicast satisfied 
proof argument proof 
lemma uniform view delivery property atomic multicast satisfied 
proof prove correct process adeliver view result follows immediately lemma part holds messages type am messages type add remove fact processes adeliver messages batch deterministic order line 
theorem algorithm algorithm solve atomic multicast 
proof follows directly lemma lemma proof group membership proof group membership properties gr gr ga straightforward 
properties gr gr gr ga follow immediately corresponding properties atomic broadcast 
part gr correct process executes join exec 
leave exec join inv 
leave inv previously invoked follows 
second part gr executes join exec 
leave exec created 
current view follows line 
line algorithm 
solving reliable multicast membership changes section discuss solution reliable multicast 
system model see section 
reliable multicast membership changes brute force solution trivial solution obtained atomic multicast solve reliable multicast execute adeliver execute solution drawback 
consensus oracle run obviously needed runs join inv leave inv invoked 
solution satisfies properties adapted join inv leave inv invoked consensus oracle 
time join inv leave inv invoked time consensus oracle 
reliable multicast solution satisfies properties said respect consensus oracle 
solution obtained generic multicast atomic multicast 
static generic broadcast vs dynamic generic multicast static generic broadcast flexible group communications primitive defined parametrized symmetric non reflexive conflict relation denoted set messages conflicting messages delivered order processes non conflicting messages may delivered order 
intuitively conflict relation view change messages type add remove conflict messages reliable multicast messages type rm conflict reliable multicast messages 
reliable multicast messages ordered respect view change messages respect reliable multicast messages 
formally static generic broadcast defined properties define static reliable broadcast validity uniform agreement uniform integrity uniform generalized order property uniform generalized order messages conflict process correct faulty messages message process define dynamic generic multicast similar way 
primitives defined properties reliable multicast uniform generalized order property 
solution respect oracle introduced implementation generic broadcast satisfies properties messages broadcast conflict oracle 
time messages broadcast conflict time oracle 
generic broadcast solution allows easily get reliable multicast solution 
algorithm page gives main code process compared algorithm new message type rm reliable multicast added calls type replaced calls type lines conflict relation messages type rm conflict 
algorithm line lead rm rm 
messages ordered generic multicast algorithm 
messages type add conflict messages messages type remove conflict messages 
algorithm lines join inv 
leave inv lead add 
remove 
view change messages ordered respect view change messages respect reliable multicast messages 
required gm uniform total order property ga required uniform view delivery property 
generic multicast algorithm obtained adapting generic broadcast algorithms respect atomic broadcast oracle 
calls atomic broadcast oracle result calling atomic multicast algorithm algorithm turn invoke consensus oracle 
discuss issue lead discuss mainly details related generic broadcast outside scope 
brought new insight specification dynamic reliable broadcast called reliable multicast dynamic atomic broadcast called atomic multicast 
specifications simple close static group communication 
shows gap static dynamic group communication small 
new perspective implementation dynamic group communication 
group membership considered basic layer group communication infrastructure proposes different probably simpler solution atomic multicast basic layer top group membership easily solved 
summarize shown specification implementation dynamic group communication simple easily understood 
contribute clarify topic difficult understand outsiders 
sergio mena useful comments earlier version 
aguilera toueg 
generic broadcast 
proceedings th international symposium distributed computing disc october 
algorithm dynamic group communication reliable multicast main code process initialization wait init receive created view newp created view iew init send newp processes newp execute init initialization done execute task rm execute join task add execute leave task remove type task type rm type add join exec type remove leave exec type create processes iew init send iew processes iew iew charron bost toueg 
formal specification group membership services 
technical report department computer science cornell university august 
birman joseph 
reliable communication presence failures 
acm trans 
computer systems february 
chandra toueg 
unreliable failure detectors reliable distributed systems 
journal acm 
chockler keidar 
group communication specifications comprehensive study 
computing surveys december 
cristian 
reaching agreement processor group membership synchronous distributed systems 
distributed computing april 
hadzilacos toueg 
fault tolerant broadcasts related problems 
technical report department computer science cornell university may 
pedone schiper 
generic broadcast 
th 
intl 
symposium distributed computing disc pages 
springer verlag lncs september 
pedone schiper 
handling message generic broadcast protocols 
distributed computing april 
ricciardi birman 
process groups implement failure detection asynchronous environments 
proc 
th acm symposium principles distributed computing pages august 
schiper 
uniform reliable multicast virtually synchronous environment 
ieee th intl 
conf 
distributed computing systems pages may 
glossary summary definitions view view subset finite set processes 
instance view inst denotes instance number view process view membership inst say view inst simply view view view process view view view view view view process correct view view processes crashes view immediately process process correct correct respect views 
process installs view say installs view executes join exec leave exec 
