computer vision face tracking perceptual user interface gary microcomputer research lab santa clara ca intel index words computer vision face tracking mean shift algorithm perceptual user interface graphics interface step perceptual user interface computer vision color tracking algorithm developed applied tracking human faces 
computer vision algorithms intended form part perceptual user interface fast efficient 
able track real time absorb major share computational resources tasks able run visual interface 
new algorithm developed robust nonparametric technique climbing density gradients find mode peak probability distributions called mean shift algorithm 
case want find mode color distribution video scene 
mean shift algorithm modified deal dynamically changing color probability distributions derived video frame sequences 
modified algorithm called continuously adaptive mean shift camshift algorithm 
camshift tracking accuracy compared polhemus tracker 
tolerance noise distractors performance studied 
camshift computer interface controlling commercial computer games exploring immersive graphic worlds 
part program develop perceptual user interface computers 
perceptual interfaces ones computer ability sense produce analogs human senses allowing computers perceive produce localized sound speech giving computers sense touch force feedback case giving computers ability see 
described part larger effort aimed giving computers ability segment track understand pose gestures emotional expressions humans tools front computer box 
describe development core module effort degree freedom color object tracker application flesh tone face tracking 
computer vision face tracking active developing field face trackers developed sufficient needs 
elaborate methods tracking contours snakes eigenspace matching techniques maintaining large sets statistical hypotheses convolving images feature detectors far computationally expensive 
want tracker track face presence noise faces hand movements 
run fast efficiently objects may tracked real time frames second consuming system resources possible 
words tracker able serve part user interface turn part computational tasks computer routinely expected carry 
tracker needs run inexpensive consumer cameras require calibrated lenses 
order find fast simple algorithm basic tracking focused color tracking simpler algorithms computationally complex slower cpu speed due color correlation blob region growing kalman filter smoothing prediction contour considerations 
complexity algorithms derives attempts deal irregular object motion due perspective near objects camera move faster distal objects image noise distractors faces scene facial occlusion hands objects lighting variations 
want fast computationally efficient algorithm handles problems course operation algorithm mitigates problems free develop algorithm drew ideas robust statistics probability distributions 
robust statistics tend ignore outliers data points far away region interest 
robust computer vision face tracking perceptual user interface intel technology journal algorithms help compensate noise distractors vision data 
chose robust nonparametric technique climbing density gradients find mode probability distributions called mean shift algorithm 
mean shift algorithm intended tracking algorithm quite effective role 
mean shift algorithm operates probability distributions 
track colored objects video frame sequences color image data represented probability distribution color histograms accomplish 
color distributions derived video image sequences change time mean shift algorithm modified adapt dynamically probability distribution tracking 
new algorithm meets requirements called camshift 
face tracking camshift tracks area flesh color probability distribution representing face 
area proportional distance camera 
head roll tracked degree freedom 
roll derived camshift face tracking perceptual user interface controlling commercial computer games exploring graphic virtual worlds 
choose initial search window size location set calculation region search window center larger size search window set search window center area set size 
report roll hsv image color histogram lookup calculation region color probability distribution find center mass search window center search window center mass find area converged block diagram color object tracking summarizes algorithm described 
video frame raw image converted color probability distribution image color histogram model color tracked flesh face tracking 
center size color object camshift algorithm operating color probability image gray box mean shift algorithm 
current size location tracked object reported set size location search window video image 
process repeated continuous tracking 
video demonstrations videos demonstrate camshift action 

fast avi 
distractors avi 
avi video shows camshift tracking rapid face movements 
second video shows camshift tracking face faces moving scene 
third video shows camshift tracking face hand occlusions 
videos available web intel technology journal site developer intel com technology 
color probability distributions order camshift track colored objects video scene probability distribution image desired color flesh color case face tracking video scene created 
order create model desired hue color histogram 
hue saturation value hsv color system corresponds projecting standard red green blue rgb color space principle diagonal white black see arrow 
results 
descending axis gives smaller corresponding smaller darker rgb subcubes 
hsv space separates hue color saturation concentrated color brightness 
create color models histograms hue channel hsv space 
face tracking flesh color model flesh areas user sampled prompting users center face onscreen box motion cues find flesh areas sample colors 
hues derived flesh pixels image sampled channel binned histogram 
sampling complete histogram saved 
robust histograms may sampling flesh hues computer vision face tracking perceptual user interface intel technology journal multiple people 
simple flesh histograms tend wide variety people having updated 
common misconception different color models needed different races people example blacks 
true 
humans color hue 
people simply greater flesh color saturation light people separated hsv color system ignored flesh tracking color model 
operation stored flesh color histogram model lookup table convert incoming video pixels corresponding probability flesh image seen right hand image 
done video frame 
method probabilities range discrete steps zero probability maximum probability pixel value probability 
bit hues range 
track camshift probability flesh image 
real cameras discrete pixel values problem occur hsv space seen 
brightness low near saturation low near 
hue quite noisy small small number discrete hue pixels adequately represent slight changes rgb 
leads wild swings hue values 
overcome problem simply ignore hue pixels low corresponding brightness values 
means dim scenes camera auto adjust adjusted brightness simply track 
sunlight bright white colors take flesh hue upper threshold ignore flesh hue pixels corresponding high brightness 
low saturation hue defined ignore hue pixels low corresponding saturation see implementation details section 
originally color histogram built normalized red green space 
color models sensitive lighting changes saturation influenced lighting separated model 
green yellow computer vision face tracking perceptual user interface cyan blue green white red magenta rgb color cube cyan white blue black yellow magenta hsv color system camshift derivation red closest existing algorithm camshift known mean shift algorithm 
mean shift algorithm non parametric technique climbs gradient probability distribution find nearest dominant mode peak 
calculate mean shift algorithm 
choose search window size 

choose initial location search window 

compute mean location search window 

center search window mean location computed step 
repeat steps convergence mean location moves preset threshold 
proof convergence assuming euclidean distribution space containing distribution proof follows reflecting steps 
window chosen size intel technology journal 
initial search window centered data point pk 
compute mean position search window mean shift climbs gradient 
center window point 

repeat steps convergence 
near mode mean shift algorithm converges 
discrete image probability distributions mean location centroid search window steps follows find zeroth moment 
find moment xi yi 
mean search window location centroid xc yc pixel probability value position image range search window 
mean shift algorithm designed static distributions camshift designed dynamically changing distributions 
occur objects video sequences tracked object moves size location probability distribution changes time 
camshift algorithm adjusts search window size course operation 
initial window size set reasonable value 
discrete distributions digital data minimum window size explained implementation details section 
set externally adapted window size camshift relies zeroth moment information extracted part internal workings algorithm continuously adapt window size video frame 
think zeroth moment distribution area search window 
window radius height width set function zeroth moment search 
camshift algorithm calculated initial non zero window size greater equal distribution discrete 
calculate continuously adaptive mean shift algorithm 
choose initial location search window 

mean shift iterations store zeroth moment 

set search window size equal function zeroth moment step 
repeat steps convergence mean location moves preset threshold 
camshift shown search process top left step step left right columns convergence bottom right 
red graph cross section actual sub sampled flesh color probability distribution image face nearby hand 
yellow camshift search window purple mean shift point 
ordinate distribution value abscissa horizontal spatial position original image 
window initialized size converges cover tracked face hand iterations 
sub sampled image maximum distribution pixel value set width search window see discussion window size implementation details section 
process camshift exhibits typical behavior finds center nearest connected distribution region face ignores nearby distractors hand 
computer vision face tracking perceptual user interface step step step step step step camshift operation left right columns intel technology journal shows camshift startup 
shows frame frame tracking 
red color probability distribution shifted left changed form 
left search window starts previous location bottom right 
iteration converges new face center 
step step example camshift tracking starting converged search location bottom right mean shift mean shift algorithm fail tracker 
window size works distribution scale suitable scale color object moves away camera 
small fixed sized windows may get lost entirely large object translation scene 
large fixed sized windows may include distractors people hands noise 
camshift video sequences tracking colored object camshift operates color probability distribution image derived color histograms 
camshift calculates centroid color probability distribution window calculation re centers window calculates area window size 
needn calculate color probability distribution image restrict calculation distribution smaller image region surrounding current camshift window 
tends result large computational savings flesh color dominate image 
refer feedback calculation region size coupled camshift algorithm 
calculate coupled camshift algorithm 
set calculation region probability distribution image 

choose initial location mean shift search window 

calculate color probability distribution region centered search window location area slightly larger mean shift window size 

mean shift convergence set number iterations 
store zeroth moment area size mean location 

video frame center search window mean location stored step set window size function zeroth moment 
go step 
frame mean shift algorithm tend converge mode distribution 
camshift video tend track center mode color objects moving video scene 
shows camshift locked mode flesh color probability distribution mode center area marked original video image 
camshift marks face centroid cross displays search window box 
video image flesh probability image calculation head roll orientation probability distribution easy obtain second moments course camshift operation range search window pixel probability value second moments computer vision face tracking perceptual user interface object orientation major axis xc yc arctan xc yc 
eigenvalues major length width probability distribution blob camshift may calculated closed form follows 
intel technology journal length width distribution centroid face tracking equations give head roll length width marked 
orientation flesh probability distribution marked source video image camshift gives computationally efficient simple implement algorithm tracks degrees freedom see 
tracked degrees freedom video camera roll head tracked degrees freedom location head roll head movement camshift deals image problems tracking color objects camshift deals image problems mentioned previously irregular object motion due perspective image noise distractors facial occlusion described 
camshift continuously re scales way naturally fits structure data 
colored object potential velocity acceleration scale distance camera turn scales size color distribution image plane 
objects close move rapidly image plane probability distribution occupies large area 
situation camshift window size large catch large movements 
objects distant color distribution small camshift window size small distal objects slower traverse video scene 
natural adaptation distribution scale translation allows predictive filters variables computational saving serves built problem erratic object motion 
camshift windowed distribution gradient climbing causes ignore distribution outliers 
camshift produces little jitter noise result tracking variables smoothed filtered 
gives robust noise tolerance 
camshift robust ability ignore outliers allows robust distractors 
camshift locked mode color distribution tend ignore nearby non connected color distributions 
camshift tracking face presence faces hand movements scene cause camshift loose original face faces hand movements substantially occlude original face 
camshift provable convergence mode probability distributions helps ignore partial occlusions colored object 
camshift tend stick mode color distribution remains 
camshift window size set somewhat greater root distribution area window camshift tends grow encompass connected area distribution tracked see 
just desired tracking objects faces hands colored tools 
property enables camshift get stuck tracking example nose face track face 
implementation details initial window size placement practice digital video images distributions discrete 
camshift algorithm climbs gradient distribution minimum search window size greater order detect gradient 
order center window odd size 
discrete distributions minimum window size set 
reason camshift adapts search window size size search window rounded current greatest odd number 
practice start calculate color probability scene zeroth moment set window size see subsection centroid set window center 
computer vision face tracking perceptual user interface intel technology journal setting adaptive window size function deciding function zeroth moment set search window size step camshift algorithm depends understanding distribution wants track goal wants achieve 
consideration translate zeroth moment information units sense setting window size 
maximum distribution value discrete cell divide zeroth moment convert calculated area search window units number cells 
goal track color object need expansive window 
multiply result window grows encompass connected distribution area 
round greatest odd search window size window center 
color probability distributions maximum pixel value set window size divide reason stated convert resulting region length need take square root 
practice tracking faces set window width window length faces somewhat elliptical 
comments software calibration camshift robustness noise transient occlusions distractors depends search window matching size object tracked better err side search window little small 
search window size depends function zeroth moment chosen 
indirectly control search window size adjust color histogram constant truncating zero saturating maximum pixel value 
adjustment affects pixel values color probability distribution image affects window size 
bit hue adjust histogram maximum tends shrink camshift window just object tracked reduces image noise 
hsv brightness saturation thresholds employed hue defined low high brightness low saturation 
low high thresholds set maximum pixel value 
comments hardware calibration camshift video color object tracker camera field view zoom set covers space intends track 
turn automatic white balance possible avoid sudden color shifts 
try set auto adjust agc shutter speed iris ccd integration time image brightness dim saturating 
camera need focus track colors 
camshift cheap cameras need calibrated lenses 
camshift perceptual interface treatment camshift tracking variables perceptual user interface shows variables roll returned camshift face tracker 
game graphics control roll require neutral position position relative face movement measured 
example captured video image dimensions typical neutral position 
user moved left user moved right variable 
piecewise linear transformation control variables obtain differential control various positions including jitter damping neutral movement region variable relative movement neutral position scaled different ranges 
variable example range scaled scale range scaled scale 
formula mapping captured video head position screen movement factor min min min bi bi sn control equation equals zero min returns minimum bn represents bounds ranges sn corresponding scale factors range absolute value difference variable location neutral 
allows stability close neutral position growing acceleration movement distance away neutral increases piecewise linear manner shown 
computer vision face tracking perceptual user interface intel technology journal control visually tracked position piecewise linear transformation camshift position interface control variable frame rate adjustment graphic rendering rate determined final screen movement control equation computer graphics game movement commands issued rendered graphic frame 
best movement amount sensitive frame rate 
computer rendered graphic game scenes simple views example looking blue sky rendered faster complex views example texture mapped city 
final rate movement depend complexity view wants achieve satisfying motion immersed scene 
variable special case seated user user sits facing camera neutral left right movement pivoting chair decrease shown 
lean changes head roll order overcome empirical observation nd eigenvalue face half width local face flesh color distribution length proportional face size see average proportional body size 
empirically ratio nd eigenvector torso length face centroid inches inches control equation lean distance nd eigenvector units seated size sin 
sin control equation cos cos control equation units nd eigenvectors 
distance correct add back leaning 
roll considerations seen seated users lean induces change head roll angle control relies head roll lean induced roll corrected 
correction accomplished ways range boundary control equation large contain changes face orientation result leaning 
scale value leaning causes roll 
subtract measured roll lean induced roll calculated control equation 
possible problem result user looks shown 
case user looking keyboard 
looking causes forehead dominate view turn causes face flesh color blob look oriented horizontally 
extreme head pitch causes corrupted head roll value correct problems define new variable called roll quality ratio eigenvalues length width distribution color blob camshift search window 
control equation problem views face observe roll quality nearly 
face computer vision face tracking perceptual user interface intel technology journal tracking roll ignored treated vertical quality measures 
roll ignored high quality scores greater distributions un resulted noise occlusions 
camshift actual interface camshift face tracker control games graphics 
inserting face control variables mouse queue control unmodified commercial games quake shown 
left right head movements slide user left right game back forth head movements move user backwards forwards movements user shoot getting gun roll left right turn user left right game 
methodology extensively series demos different users 
head tracking camshift experiment immersive graphics control natural head movements translated moving corresponding graphics camera viewpoint 
extensively tested graphics model forbidden city china exploring graphics model big island hawaii shown 
users find enjoyable experience naturally pick control graphics viewpoint movement 
camshift face tracker play quake hands free inserting control variables mouse queue camshift face tracker fly graphic model hawaii camshift analysis comparison polhemus order assess tracking accuracy camshift compared accuracy polhemus tracker 
polhemus magnetic sensor connected system measures degrees spatial freedom object tracking tethered object 
observed accuracy polhemus cm spatial location orientation inches polhemus antenna 
compared polhemus tracking camshift color object tracking image size see 
coordinate systems polhemus camera carefully aligned prior testing 
object tracked pulled cart set trajectory away polhemus origin 
comparison camshift polhemus roll yielded results shown table 
tracking variable standard deviation difference roll cm cm cm table standard deviation polhemus vs camshift tracking differences exhibited worst difference camshift determines measuring color area inherently noisy 
roll polhemus observed tracking error indistinguishable 
cm 
results better elaborate vision tracking systems camshift track pitch yaw 
computer vision face tracking perceptual user interface intel technology journal measured distance cm axis translation standard deviation actual distance cm comparision tracking accuracy measured distance cm axis translation standard deviation actual distance cm comparision tracking accuracy axis translation standard deviation computer vision face tracking perceptual user interface measured distance cm actual distance cm comparision tracking accuracy measured distance deg axis rotation standard deviation actual distance deg accuracy comparison polhemus camshift tracking roll 
tracking noise camshift robust ability find track mode dynamically changing probability distribution gives tracking behavior noise 
videotaped head movement sequence played back adding uniform noise 
shows noise added raw image left resulting color probability distribution right 
note color model greatly cuts random noise color noise low probability flesh color 
intel technology journal flesh color model highly degraded spurious flesh pixels color probability distribution image 
camshift able track roll quite white noise shown 
problem camshift measures tracking distribution area search window see area highly effected noise 
shows upward shift simply narrower chin region exhibits degradation noise wider forehead 
roll tracks noise length width face color distribution obscured 
camshift handles noise need extra filtering adaptive smoothing 
distance start position tracking uniform noise noise time avg dif accuracy uniform noise noise computer vision face tracking perceptual user interface distance start position distance start position face orientation deg time avg dif accuracy uniform noise noise time avg dif accuracy uniform noise noise time avg dif deg deg deg roll accuracy uniform noise intel technology journal tracking presence distractions camshift search window converges span nearest dominant connected probability distribution 
adjust nature probability distribution properly setting hsv brightness saturation threshold see implementation details section search window tend stay just object tracked shown marked image top left 
cases camshift robust distracting nearby distributions transient occlusions 
robustness occurs distractors search window rarely contains distractor shown sequentially left right columns 
tracking face background distractor faces sequence left right columns table shows results collected sample point tracking runs active background face distraction shown 
distracting face rarely intersects camshift search window tracking variables perturbed little 
roll strongly affected small intersection distractor camshift search window change effective orientation flesh pixels measured camshift 
tracked variable average std 
deviation maximum std 
deviation pixels pixels pixels roll degrees table perturbation camshift tracking variables face distractors camshift tends robust transient occlusion search window tend absorb occlusion stick dominant distribution mode occlusion passes 
demonstrates robustness hand occlusion sequential steps left right columns 
tracking face presence passing hand occlusions sequence left right columns table shows results collected sample points tracking runs active transient hand occlusion face 
average perturbation pixels roll strongly effected due arbitrary orientation hand passes search window 
computer vision face tracking perceptual user interface intel technology journal tracked variable average std 
deviation maximum std 
deviation pixels pixels pixels roll degrees table perturbation camshift tracking variables passing hand occlusion see table camshift gives wide tolerance distraction occlusion free due statistically robust workings algorithm 
performance order complexity camshift constant image taken nxn 
influenced moment calculations average number mean shift iterations convergence 
biggest computational savings come scaling region calculation area search window size previously discussed 
camshift run mhz pentium ii processor image size frames second see 
camshift performance scales tracked object size 
shows cpu load entire computer vision thread including image acquisition conversion color probability distribution camshift tracking 
tracked face far camera camshift thread consumes cpu cycles 
face fills frame camshift consumes cpu 
performance scales inversely tracked object size ordinate percent cpu traces computer vision thread performance actual control task flying model hawaii head movements 
case average cpu usage 
tm analysis showed actual camshift operation excluding image capture color conversion image copying consumed cpu 
camshift relies intel mmx technology optimized image processing library available web rgb hsv image conversion image allocation 
mmx technology optimized image moments calculation added image processing library time publication 
optimized moment calculations boost performance noticeably forms part inner mean shift calculation loop 
improvement camshift current average actual efficiency allows visual user interface 
computer vision face tracking perceptual user interface intel technology journal actual camshift consumed average mhz pentium ii cpu control graphic hawaii fly discussion discussed core tracking module part larger effort allow computers track understand human motion pose tool 
module designed simple computationally efficient 
core module handle basic computer vision problems outlined 
seen camshift handles problems follows irregular object motion camshift scales search window object size naturally handling perspective induced motion irregularities 
image noise color model eliminates noise camshift tends ignore remaining outliers 
distractors camshift ignores objects outside search window objects nearby faces hands affect camshift tracking 
occlusion long occlusion isn camshift tend follow left objects probability distribution 
lighting variation hue hsv color space ignoring pixels high low brightness gives camshift wide lighting tolerance 
camshift simplicity cause limitations 
camshift derives object area estimates subject noise spurious values 
effects noise evident 
camshift get spurious area values evident 
camshift relies color distributions errors color colored lighting dim illumination illumination cause errors tracking 
sophisticated trackers multiple modes feature tracking motion analysis compensate complexity undermine original design criterion camshift 
camshift detects roll modes freedom plus pitch yaw 
unfortunately degrees head movement possible roll useful control variable natural head movement user constantly 
camshift simple computationally efficient face colored object tracker 
acknowledging limitation imposed simplicity see camshift tracks virtually expensive tethered trackers polhemus sophisticated computationally expensive vision systems tracks noisy environments 
shown camshift conceived simple part larger tracking system uses right game graphics control 
adding perceptual interfaces computers natural fun games graphics better medium communication 
new features consume mips take advantage mips available intel cpus 
project designed highly efficient face tracking algorithm complex higher mips usage algorithm 
done want able demonstrate compelling applications interfaces today systems order prepare way computer vision pcs 
camshift usable visual interface designed part robust larger tracking system 
camshift incorporated larger complex higher mips demanding modules provide robust tracking posture understanding gesture face recognition object understanding 
way functionality computer vision interface increase increasing intel cpu speeds 
user able upgrade computer vision interface upgrading higher speed intel cpus 
acknowledgments mark holler countless discussions feedback leading development 
special ryan rapid implementation camshift game control demo major help implementing testing routines camshift 
computer vision face tracking perceptual user interface intel technology journal comaniciu meer robust analysis feature spaces color image segmentation cvpr pp 

fukunaga statistical pattern recognition academic press boston 
mmx tm technology optimized libraries image signal processing pattern recognition matrix math downloaded developer intel com design index ht freeman tanaka ohta computer vision computer games int 
conf 
automatic face gesture recognition pp 

smith color gamut transform pairs siggraph pp 

foley van dam feiner hughes computer graphics principles practice addison wesley pp 

terzopoulos color tracking heads mobile objects video frame rates proc 
ieee cvpr pp 

wren azarbayejani darrell pentland pfinder real time tracking human body spie vol 

waibel face locating tracking human computer interaction proc 
th asilomar conf 
signals sys 
comp pp 

pitas segmentation tracking faces color images proc 
second intl 
conf 
auto 
face gesture recognition pp 

swain ballard color indexing intl 
computer vision pp 

kass witkin terzopoulos snakes active contour models int 
computer vision pp 

catching moving objects snakes motion tracking pattern recognition letters pp 

pentland moghaddam starner view modular eigenspaces face recognition cvpr pp 

isard blake contour tracking stochastic propagation conditional density proc 
th european conf 
computer vision cambridge uk april 
maurer von der malsburg tracking learning graphs pose image sequence faces proc 
second intl 
conf 
auto 
face gesture recognition pp 

starner horowitz pentland visually controlled graphics ieee tran 
pat 
anal 
mach 
intel 
pp 
vol 
june 
cheng mean shift mode seeking clustering ieee trans 
pattern anal 
machine intell 
author biography dr gary received ph pattern recognition computer vision boston university 
works computer vision research microcomputer research labs intel mission college campus 
interests include segmenting tracking people visual scenes perceptual computer interfaces applying visual structure graphics pattern recognition biological perception self organization 
mail gary intel com 
computer vision face tracking perceptual user interface 
