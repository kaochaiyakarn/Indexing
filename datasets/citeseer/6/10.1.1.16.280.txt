exploring design space distributed peer peer systems comparing web triad chord cfs stefan saroiu krishna gummadi steven gribble university washington despite existence peer peer systems design choices implications understood 
compares distributed peer peer systems evaluating key set architectural decisions naming addressing routing topology name lookup 
www triad chord cfs examples illustrate different architectural choices impact availability redundancy security fault tolerance 
peer peer systems latest addition family distributed systems goal share resources participants 
previous members family include www distributed file systems telephony network 
compare systems decompose design axes extension proposed saltzer content name name describes user looking file name file system 
host address address describes resource example ip address describes host resides internet 
routing mechanism route describes get destination 
routing mechanism bgp internet autonomous systems ass discover disseminate routes 
network topology topology describes set physical logical links hosts 
lookup bindings names addresses registered system 
participants lookup mechanism resolves name address registered bindings 
design axes represent possible framework reason architecture system 
framework clear practice real systems blur distinction axes 
example nat blurs routing lookup introducing name translation mechanism non routable ip addresses bridged routable internet 
additionally ip addresses converted mac ethernet addresses manner similar name translation 
believe decomposition useful designing analyzing system mapping design choices axes learn trade offs system 
compare designs different distributed architectures www triad chord cfs representative proposed peer peer architectures 
derive performance security robustness implications result design choices 
world wide web www ubiquitous popular successful distributed system 
www enables clients retrieve hyperlinked content 
names web content names drawn infinite space globally unique uniform resource locators urls structured fully qualified domain name combined locally unique relative url 
right bind ip address controlled hierarchical delegation right bind relative urls controlled local policy 
addresses www addresses globally unique hierarchically organized ip addresses internet hosts servers clients caches intermediate routers 
finite large number ip addresses addresses allocated ranges centralized authority address assignment rights delegated locally ranges 
routing routing www combination internet routing protocols including bgp ospf 
routing decisions driven business policy performance 
ability route ip address result advertising address routing protocol 
little control right advertise typically lack authentication access control routing protocols 

triad architecture 
name request google com forwarded intermediate relays best content replica 
topology www topology physical topology internet hosts 
topology roughly hierarchical consisting interconnected autonomous systems subnetworks 
lookup urls resolved ip addresses domain name system dns relative urls resolved bound locally servers 
dns distributed system www replace dns lookup mechanism semantic loss proposed triad 
triad triad defines content layer replaces web address routing name routing protocol 
individual piece content advertised server replica lookup requests directed clients intermediate routers relay nodes servers back path 
relay node maintains set hop mappings just ip router maps address prefixes hops 
request content name arrives relay looks name forwards request best server replica 
request reaches relay responsible server replica relay sends back response containing server address 
names similar web triad resources objects spread servers 
triad content namespace require specific structure content names routing table entries need aggregate 
urls hierarchical triad suggests web url namespace content naming 
addresses triad addresses composition namespaces globally unique ip addresses locally unique ip addresses 
results finite large address space 
inter address space controlled centralized authority intra address space managed locally 
routing triad uses name bgp routing protocol called distributes name suffix reachability messages 
ability route name result advertising name protocol 
topology triad topology arbitrary consisting logical links relay nodes messages flow 
performance reasons suggested triad topology reflect physical internet topology 
lookup triad unifies lookup routing resolving name address achieved routing name destination 
destination address lookup reply routed back source path 
chord cfs hosts chord cfs style peer peer systems serve roles act servers clients intermediate routers 
symmetry roles design implications 
names chord piece content named chord identifier obtained hashing content bits 
content namespace flat large uniformly populated 
addresses chord address namespace structurally identical content namespace 
addresses obtained concatenating host ip address small virtual host number hashing result bit address 
addresses bits probabilistically globally unique system 
routing content address namespaces equivalent routing thought address web name triad 
web triad participating chord host acts intermediate router 
routing chord simple host directs queries neighbor address closest name pre determined lexicographic order 
topology chord overlay network topology deterministic function participating peers addresses 
peer successor predecessor total ordering addresses 
routing lookup unified triad chord 
chord name address spaces identical topology deterministic function names addresses 
peer maintains logarithmically sized finger table connections peers 
stale finger table entries tolerable act shortcut routes freshness ensures efficient routing 
lookup triad chord unifies lookup routing 
content address namespaces equivalent identity function sufficient bind names addresses name bound address content name 
name resolution done routing name network 
summary summary systems designs 
decomposition served illustrate important differences systems 
instance chord binding names addresses done identity function topology deterministic function host addresses 
chord triad lookup unified routing 
discuss implications design differences 
names addresses section explore content names host addresses created bound systems 
world wide web binding names ip addresses controlled dns lookup mechanism 
hierarchical nature dns imposes structure content names serves delegate binding rights authorities subtrees namespace 
web server create infinite number urls binding ip addresses restricted ability register particular dns subtree 
result malicious web server pollute global namespace registering large number dummy harmful names attack web server content duplicating urls 
similar hierarchical delegation ip address assignment rights web 
individual may able control assignment large finite number ip addresses instance mit owns class subnet allowing assign addresses fixed range 
difficult malicious host hijack ip address outside allocated range involves injecting false routing advertisements network 
hierarchical name address namespaces web completely independent control control 
triad triad lookup routing unified 
result binding name address accomplished advertising route triad network lookup performed routing name destination 
similar web ability create name triad unrestricted 
restrictions binding rights enforced routing infrastructure date issue remains unresolved 
addresses triad composition globally routable ip addresses assigned ass locally routable ip addresses ass 
authority assign routable addresses split levels 
similar web centralized naming authority delegates globally visible ip ranges ass ass enforce local policies address assignment 
individual hosts triad typically affect globally visible ip assignment 
name routing triad involves routing advertisements routing table formation ability aggregate names important scalability 
result content namespace hierarchical practice 
reason triad content names modeled urls 
chord cfs style peer peer systems peer peer content namespace flat responsibility managing content randomly distributed address namespace 
insertion name address binding publish ing content system causes host accept responsibility incur cost managing content 
right insert address binding controlled host cause unbounded amounts effort storage expended system 
furthermore attacks specific victims possible 
example attacker overwhelm targeted victim address content cause targeted host store undesirable illicit content 
contrast web triad binding name address cause host store content making attacks impossible 
set content names associated address deterministic 
hosts allowed select addresses deterministic mapping control access specific content names 
chord cfs ability create address restricted limiting hosts hashes ip addresses concatenated small virtual host number 
attacker assignment rights number chord nodes max virtual hosts ip addresses control arbitrary content system 
routing lookup topology section discuss consequences unifying routing lookup triad chord cfs contrast web 
furthermore chord topology function address space unexpected implications emerge affecting system redundancy availability faulttolerance security 
world wide web structure www mapped directly internet physical topology web servers clients addressed ip addresses routing data performed ip routing protocols bgp ospf 
infrastructure content delivery networks caching hierarchies extend name lookup mechanism result lookup ip address host serve data 
www routing policy selected independent physical topology content 
flexibility allows policy driven efficiency business rules local physical characteristics 
routing policy altered affecting naming binding content placement 
common isp operators adjust policy achieve financial traffic balancing goal adjustments functionally transparent rest system 
possible engineer redundancy higher availability levels web 
routing level redundant physical routes provide alternate paths data transport clients servers 
name binding level binding name multiple addresses allows clients middleware fail alternate address destination unavailable 
endpoints web transfer servers clients general physically distinct routers 
physical separation roles benefits 
different degrees trust associated different roles example core internet routers protected trustworthy web clients servers 
hosts provisioned optimized specific roles high speed router needs different hardware os software support web server client 
sideeffects host failures isolated respect role play 
web server failure affect ip addresses router failure doesn affect content availability failure partitions network 
triad triad routing content address lookup mechanism routing policy longer selected independently content 
triad network topology mirrors physical topology internet suggested authors efficient routing policy enable clients route requests topologically nearest content replica 
works triad route arbitrary topologies chord cfs style peer peer systems discussed 
triad supports levels redundancy 
multiple name address bindings attainable replicating content additional routable destinations destination fails content available replicas addresses 
replication technique possible triad routing uses content names host addresses 
addition source may multiple routes destination name 
failure link triad necessarily cause content unavailable 
triad supports routing arbitrary topologies possible construct topology content servers intermediate nodes route servers need participate routing requests 
content hosting routing separable roles enabling separations trust provisioning failure web 
chord cfs style peer peer systems topology chord cfs style peer peer systems deterministic function set participating addresses 
side effect routing tables need advertised system eliminating cause overhead 
routing tables approximated finger tables chord constructed peer entry system lazily updated reflect departure neighbors 
finger tables kept date carefully chosen topology bounds lookup route lengths log peers 
content name address namespaces chord cfs unified allows binding identity function content name address peer routes requests 
combined chord deterministic topology implies peers expected serve routers content destinations 
roles inseparable peer choose address relieve routing responsibilities topology engineered relieve content destinations routing responsibilities 
roles longer need explicitly assigned topology need explicitly constructed determined peers join leave system vastly simplifying decentralizing administration system 
redundancy chord cfs occur multiple levels 
binding identity function impossible bind content name multiple addresses 
naming convention assign aliases content name triad www redundancy level transparent user exposed content namespace 
second level redundancy exists overlay 
order log peers mutually disjoint routes addresses 
long routes fail independently provides high degree availability system 
chord cfs network overlay maps physical ip network 
redundancy added physical network overlay topology function chord addresses involves randomly distributed hash function physical locality diffused overlay 
accordingly difficult predict effect physical network redundancy overlay network 
example failure network link manifest multiple randomly scattered link failures overlay 
diffusion physical links logical chord network tends amplify bad properties system properties 
link lookup path low bandwidth high latency low availability entire path suffers 
conversely links path share property path benefit 
single bad physical link infect routes 
measured hosts popular file sharing peer peer systems connect internet modems 
chord overlay paths traverse essentially random physical links simple calculation reveals network peers similar characteristics probability lookup request encounters modem 
example possible single physical link failure internet cause large network partition 
consider worst case failure separates rest internet long web content replicated outside content available clients 
chord number failed routes single link failure cause proportional number chord addresses hosted partitioned failed routes randomly distributed peers content 
final implication deterministic nature routes chord cfs style systems possible attacker construct set addresses inserted system intercept lookup requests coming particular member system 
mechanisms exist prevent peer selecting arbitrary addresses peer insert addresses probabilistically surround neighbor peer 
summary design decomposition www triad chord cfs representative peer peer architectures 
decomposition allowed describe fundamental system design differences chord cfs content address namespaces equivalent opposed www triad chord net servers routers routers servers 
impact architectural choices properties www triad chord cfs topology deterministic function content address namespace www triad chord lookup routing unified 
differences unexpected consequences serious implications systems availability security redundancy fault tolerance 
berners lee masinter 
rfc uniform resource locators url december 
dabek kaashoek karger morris stoica 
wide area cooperative storage cfs 
proceedings th acm symposium operating systems principles sosp lake louise ab canada october 
druschel rowstron 
storage management caching past large scale persistent peer peer storage utility 
proceedings th acm symposium operating systems principles sosp lake louise ab canada october 
fielding 
rfc relative uniform resource locators june 
cheriton 
architecture content routing support internet 
proceedings rd usenix symposium internet technologies systems usits san francisco ca usa march 
ratnasamy francis handley karp shenker 
scalable content addressable network 
proceedings acm sigcomm technical conference san diego ca usa august 
saltzer 
rfc naming binding network destinations august 
saroiu gummadi gribble 
measurement study peer peer file sharing systems 
proceedings multimedia computing networking conference mmcn san jose ca usa january 

inter network naming addressing routing 
proceedings ieee compcon pages washington dc usa december 
ed tutorial distributed processor communication architecture ieee publ 
pp 

zhao kubiatowicz joseph 
tapestry infrastructure fault resilient wide area location routing 
technical report ucb csd university california berkeley technical report april 
