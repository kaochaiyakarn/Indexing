xquery xml query language world wide web consortium working group design query language extensible markup language xml data sources 
new query language called xquery evolving described series drafts published working group 
xquery functional language comprised kinds expressions nested composed full generality 
type system xml schema designed compatible standards 
explains need xml query language provides tutorial overview xquery includes examples 
increasingly extensible markup language xml considered format choice exchange information various applications internet 
popularity xml due large part flexibility representing kinds information 
tags xml data self describing extensible nature xml possible define new kinds documents specialized purposes 
importance xml increased series standards grown defined world wide web consortium 
example xml schema provides notation defining new types elements documents xml path language xpath provides notation selecting elements xml document extensible stylesheet language transformations xslt provides chamberlin tation transforming xml documents representation 
xml possible applications exchange data standard format independent storage 
example application may native xml storage format may store data relational database 
xml emerging standard data exchange natural queries applications expressed queries data xml format 
gives rise requirement query language designed expressly xml data sources 
october xml query working group purpose designing query language called xquery 
xml data different relational data important respects influence design query language 
relational data tend regular structure allows descriptive meta data data stored separate catalog 
xml data contrast quite heterogeneous distribute meta data document 
xml documents contain levels nested elements relational data flat xml documents intrinsic order relational data unordered ordering derived data values 
relational data usually dense nearly column value copyright international business machines 
copying printed form private permitted payment royalty provided reproduction done alteration journal ibm copyright notice included page 
title portions may copied distributed royalty free permission computer information service systems 
permission republish portion obtained editor 
ibm systems journal vol ibm chamberlin relational systems represent missing information special null value 
xml data contrast sparse represent missing information simply absence element 
reasons existing relational query languages directly suitable querying xml data 
design xquery progress 
xml query working group published working drafts documents describe current state design 
important design xquery subject number influences 
xquery xml query language contains syntax informal description language 
working group published list requirements description data model underlies language formal semantic description list functions operators collection cases illustrate applications language 
documents updated time time design xquery evolves 
xquery design time publication design changing documents referenced paragraph consulted latest developments 
design xquery subject number influences 
important compatibility existing standards including schema xslt xpath xml 
xpath particular important closely related xquery defined superset xpath 
design xquery language proposal called quilt 
quilt turn influenced functional approach object query language oql keyword syntax structured query language sql previous xml query language proposals including xql xml ql lorel 
objective xml query working group define syntaxes xquery expressed xml optimized hu man writing understanding 
describes human oriented version xquery 
initial design xquery focused information retrieval provide facilities updating existing xml documents 
xml query working group may consider addition update facility completing design version xquery 
describes data model xquery presents overview xquery language form series examples 
intended provide rigorous exhaustive definition language 
reader referred xquery syntax complete language description 
data model formally input output xquery defined terms data model described 
query data model provides representation xml documents document fragments 
data model notion sequence 
sequence ordered collection zero items 
item may node atomic value 
atomic value instance built data types defined xml schema strings integers dates 
node conforms node kinds include element attribute text document comment processing instruction namespace nodes 
node may nodes children forming node hierarchies 
kinds nodes element attribute nodes names typed values 
typed value sequence zero atomic values 
nodes identity nodes may distinguishable names values atomic values identity 
nodes hierarchy total ordering called document order node appears children 
document order corresponds order nodes appear node hierarchy represented xml format 
document order nodes different hierarchies implementation defined consistent nodes hierarchy ordered nodes hierarchy 
sequences may heterogeneous may contain mixtures various types nodes atomic chamberlin ibm systems journal vol data model representation items xml itemno seller description reserve price date values 
sequence appears item sequence 
operations create sequences defined flatten operands result operation single level sequence 
distinction item sequence length words node atomic value considered identical sequence length containing node atomic value 
sequences length zero valid represent missing unknown information way null values relational systems 
addition sequences query data model defines special value called error value result evaluating expression contains error 
error value may combined sequence value 
input xml documents transformed query data model process called schema validation parses document validates items xml items item status item status particular schema represents hierarchy nodes atomic values labeled type information derived schema 
input document schema validated permissive default schema assigns generic types nodes labeled atomic values labeled 
process schema validation described detail 
result query may transformed query data model xml representation process called serialization 
details serialization scope 
worth noting result query wellformed xml document 
example query return atomic value number sequence elements common parent 
example data item elements similar structure illustrate query data model provide basis examples consider small xml database contains data line auction ibm systems journal vol chamberlin data model representation bids xml itemno bidder bid amount bid date loosely case 
database consists xml documents named items xml bids xml 
items xml document contains root element named items turn contains item element item currently sale auction 
item element status attribute subelements named itemno seller description reserve price date 
reserve price element names minimum selling price set owner date element indicates date auction 
bids xml document contains root element named bids turn contains bid element bid placed item 
bid element subelements named itemno bidder bid amount bid date 
figures show data model representations items xml bids xml documents respectively including representative item representative bid 
figures circles labeled bids xml bid bid bids represent document element attribute text nodes respectively 
expressions bid elements similar structure describe expressions xquery 
basics 
xml xpath xquery case sensitive language keywords lowercase characters 
detailed rules lexing parsing xquery described 
characters enclosed considered comments ignored query processing course inside quoted string considered part string 
xquery functional language means expressions return values side effects 
xquery kinds expressions composed lower level expressions combined operators keywords 
xquery expressions fully composable expression expected kind expression may 
noted earlier value chamberlin ibm systems journal vol expression general heterogeneous sequence nodes atomic values 
simplest kind xquery expression literal represents atomic value 
examples literals literal type integer literal type decimal contains decimal point literal type double contains exponent literal type string single quotes allowed inside double quoted strings literal type string double quotes allowed inside single quoted strings atomic values types may created calling constructors 
constructor function creates value particular type string containing lexical representation desired type 
general constructor name type constructs 
example uses constructor create value type date date xquery expression may enclosed parentheses 
parentheses useful making explicit order expression evaluated 
examples arithmetic expressions show parentheses control precedence operators 
arithmetic expressions discussed detail subsection 
value subexpression evaluated value higher precedence comma operator concatenates values form sequence 
sequences enclosed parentheses explicit delimiters required 
empty pair parentheses denotes empty sequence 
sequences nested comma operator constructs sequence consisting items left operand followed items right operand 
sequence constructed operator returns sequence consisting integers left operand right operand inclusive 
examples illustrate construction sequences sequence values identical identical identical variable xquery name begins dollar sign 
variable may bound value expression represent value 
way bind variable means expression binds variables evaluates inner expression 
value expression result evaluating inner expression variables bound 
example illustrates expression returns sequence start return start expression special case flwr return expression provides additional ways bind variables 
flwr expressions described detail 
simple form xquery expression function call 
xquery provides core function library described mechanism users define additional functions described section 
function calls xquery employ usual notation arguments function enclosed parentheses 
example calls core library function substring extract characters string substring martha washington path expressions 
path expressions xquery syntax xpath 
path expression consists series steps separated slash character 
result step sequence nodes 
value path expression node sequence results step path 
step evaluated context particular node called context node 
general step expression returns sequence nodes 
important kind step called axis step thought context node moving node hierarchy particular direction called axis 
axis step moves designated axis selects nodes satisfy selection criterion 
selection criterion select nodes names positions re ibm systems journal vol chamberlin spect context node predicate value node 
xpath defines axes supported xquery 
current plans xquery support axes named child descendant parent attribute self descendant self 
path expression evaluated nodes selected step serve turn context nodes step 
step context nodes evaluated context nodes turn resulting node sequences combined union operator form result step 
result step sequence distinct nodes duplicates node identity document order 
path expressions may written syntax abbreviated syntax 
syntax axis step consists axis selection criterion separated colons 
illustrates step path expression syntax 
step invokes built document function returns document node document named items xml 
second step axis step finds children document node selects nodes axis case single element node named items 
third step follows child axis find child elements level named item turn child named seller value smith result third step sequence item element nodes 
item nodes turn context node fourth step follows child axis find description elements children item 
final result path expression result fourth step sequence description element nodes document order 
list descriptions items offered sale smith 
document items xml child child item child seller smith child description practice path expressions usually written abbreviated syntax 
kinds abbreviations provided 
important axis specifier may omitted child axis 
child commonly axis abbreviation helpful reducing length path expressions 
example may abbreviated follows document items xml item seller smith description steps separated double slash single slash means second step may traverse multiple levels hierarchy descendants axis child axis 
example searches description elements descendants root node document 
result sequence element nodes principle various levels node hierarchy sample document description nodes level 
list description elements document items xml 
document items xml description path expression single dot refers context node consecutive dots refer parent context node 
notations abbreviated invocations self parent axes respectively 
names path expressions usually interpreted names element nodes name prefixed character interpreted name attribute node 
abbreviation step traverses attribute axis 
abbreviations illustrated begins node bound variable description traverses parent axis parent item node traverses attribute axis find attribute named status 
result single attribute node 
find status attribute item parent description 
description status predicates 
xquery predicate expression enclosed square brackets filter sequence values 
predicates steps path expression 
example step item seller smith phrase seller smith predicate select certain item nodes discard 
refer items sequence filtered predicate candidate items 
predicate evaluated candidate item candidate item chamberlin ibm systems journal vol context item evaluating predicate expression 
term context item generalization term context node may indicate node atomic value 
predicate expression single dot indicates context item 
candidate item selected discarded rules 
predicate expression evaluates boolean value candidate item selected value predicate expression true 
type predicate illustrated example selects item nodes reserve price child node value greater item reserve price predicate expression evaluates number candidate item selected ordinal position list candidate items equal number 
type predicate illustrated example selects fifth item node child axis item predicate expression evaluates empty sequence candidate item discarded predicate expression evaluates sequence containing node candidate item selected 
form predicate test existence child node satisfies condition 
illustrated example selects item nodes reserve price child node regardless value item reserve price different kinds operators functions inside predicates 
paragraphs commonest useful operators functions described 
value comparison operators eq ne lt le gt ge 
operators compare scalar values raise error operand sequence length greater 
operand node value comparison operator extracts value performing comparison 
example item reserve price gt selects item node exactly reserve price child node value greater 
general comparison operators 
operators deal operands sequences providing implicit existential semantics operands 
value comparison operators general comparison operators automatically extract values nodes 
example item reserve price selects item node reserve price child node value greater 
predicate expression enclosed square brackets filter sequence values 
node comparison operators isnot 
operators compare identities nodes 
example node node true variables node node bound node node identity variables 
order comparison operators operators compare positions nodes 
example node node true node bound node occurs earlier document order node bound node 
logical operators operators combine logical conditions inside predicate 
example predicate selects item nodes exactly seller child element value smith reserve price child element value item seller eq smith reserve price 
negation function operator 
serves invert boolean value turning true false false true 
step uses function existence test find item nodes reserve price child element item reserve price 
examples element attribute names simple identifiers 
xml namespace recommendation allows elements attributes part names part namespace prefix followed colon 
name qualified namespace prefix called 
namespace prefix bound uri uniform resource identifier uniquely ibm systems journal vol chamberlin identifies namespace 
convention allows application define names namespace danger colliding names defined applications allows query unambiguously refer names defined various applications 
prefix auction bound namespace uri line auction application step item reserve price written follows auction item auction reserve price process binding prefix namespace uri described section 
examples part names 
realistic xquery provides way specify default namespace query 
unnecessary query needs refer names multiple namespaces 
provides brief path expressions available xpath xquery 
xquery xpath evolving language 
working draft new version xpath called xpath published jointly xml query xslt working groups 
expected xpath xquery share common syntax path expressions predicates kinds expressions 
element constructors 
path expressions powerful important limitation select existing nodes 
full query language needs facility construct new elements attributes specify contents relationships 
facility provided xquery kind expression called element constructor 
simplest kind element constructor looks exactly xml syntax element created 
example expression constructs element named containing attribute named status child elements named itemno bid amount status pending itemno itemno bid amount bid amount example values elements attributes constants 
cases necessary create element attribute value computed expression 
case expression enclosed curly braces indicate evaluated treated literal text 
expression evaluated replaced value element constructor 
example values elements attributes computed expressions 
variables bids expressions bound enclosing expression 
status itemno itemno bid amount max bids itemno bid amount bid amount content element constructor may expression 
general expression element constructor may generate sequence items including atomic values elements attributes 
attributes generated inside element constructor attached constructed element 
elements atomic values generated inside element constructor content constructed element 
example element constructor contains expression enclosed curly braces generates attribute subelements 
variable bound enclosing expression 
status itemno bid amount element node produced element constructor new node node identity 
newly constructed element child nodes attributes derived existing nodes example new child nodes attributes copies nodes derived new node identities 
examples element constructors content element may computed name constructed element known constant 
necessary construct element name content computed 
purpose xquery provides special kind constructor called computed element con chamberlin ibm systems journal vol 
computed element constructor consists keyword element followed expressions curly braces expression computes name element second expression computes content element 
example computed constructor suppose variable bound element numeric value 
need construct new element name attributes want value twice value construction accomplished expression uses data function extract numeric value original node element name data similar computed element constructor xquery provides computed attribute constructor consists keyword attribute followed expressions curly braces expression computes name attribute second expression computes value 
attribute constructor attribute valid example inside element constructor 
attribute constructor bound variable generate attribute looks father frank mother mary 
example uses conditional expression described 
attribute sex father mother name iteration sorting 
iteration important part query language 
xquery provides way iterate sequence values binding variable values turn evaluating expression binding variable 
simplest form iteration xquery consists clause names variable provides sequence values variable iterate followed return clause contains expression evaluated variable binding 
example illustrates simple form iteration return result simple iterative expression sequence 
clause may specify variable iteration sequence variable 
clause produces tuples variable bindings form cartesian product iteration sequences 
specified binding tuples generated order preserves order iteration important part query language 
iteration sequences leftmost variable outer loop rightmost variable inner loop example illustrates clause contains variables iteration sequences return fact times fact result expression sequence elements fact times fact fact times fact fact times fact fact times fact clauses illustrated clause illustrated earlier special cases general expression called flwr pronounced flower expression 
general form flwr expression may multiple clauses multiple clauses optional clause return clause 
seen function clause clause bind variables 
clauses contains variables expression associated variable 
expressions evaluate sequences may contain variables bound previous clauses 
difference clause clause clause iterates variable associated sequence binding variable turn ibm systems journal vol chamberlin item sequence clause binds variable associated sequence 
difference illustrated pair clauses pair clauses full flwr expression return clause 
clause clause simply produce sequence binding tuples 
clauses example produce sequence binding pairs general number binding tuples produced series clauses clauses equal product cardinalities iteration expressions clauses 
clause clause course produces single binding tuple 
binding tuples produced clauses clauses flwr expression filtered optional clause 
clause contains expression evaluated binding tuple 
value expression boolean value true sequence containing node existence test binding tuple retained binding tuple discarded 
return clause flwr expression executed binding tuple retained clause order 
results executions concatenated sequence serves result flwr expression 
power flwr illustrated query auction database 
item bids generate popular item element containing item number description bid count 
document items xml item document bids xml bid itemno itemno count return popular item itemno description bid count count bid count popular item clause clause produce binding pair item items xml 
binding pair bound item bound sequence containing bids item 
clause retains binding tuples contains bids 
return clause generates output element bindings containing item number description bid count 
default order output sequence flwr expression preserves order iteration sequences 
prefix operator unordered expression indicate order result significant 
gives implementation greater flexibility optimize execution expression example iterating different order 
sequence reordered clause contains ordering expressions 
item original sequence ordering expressions evaluated item context item 
items original expression reordered ascending descending order values ordering expressions 
course ordering expression return single result results comparable gt operator 
purpose clause empty sequence treated greater value value user control 
clause useful reordering results flwr expression 
example desired popular item elements generated sorted descending order bid count clause added bid count descending important realize part flwr expression separate kind xquery expression reorder sequence generated flwr expression 
chamberlin ibm systems journal vol flwr expression followed smart optimizer realize reordering output items relaxes usual constraints ordering binding tuples 
illustrates flwr expression characteristics join query relational database system characteristics grouping query 
join query correlates elements different xml files named items xml bids xml 
grouping query groups bids item number computes number bids group sql expressed group itemno 
arithmetic 
seen examples arithmetic operators 
xquery provides usual arithmetic operators div mod aggregating functions sum avg count max min operate sequence numbers return numeric result 
division operator xquery called div distinguish slash path expressions 
subtraction operator follows name preceding blank distinguish hyphen hyphen valid name character xml 
arithmetic operators defined numeric values case aggregating functions sequences numeric values 
numeric values include values type integer decimal float double types derived types 
operands arithmetic operator mixed promoted nearest common type promotion hierarchy integer decimal float double 
operand arithmetic operator node typed value automatically extracted 
behavior arithmetic operators empty sequences important special case 
xquery empty sequence represent missing unknown information way null value relational systems 
reason div mod operators defined return empty sequence operands empty sequence 
illustrate application rule suppose variable emps bound sequence emp elements represents employee contains name element salary element optional commission element optional bonus element 
expression transforms sequence new sequence emp elements contains name element pay element value employee total pay 
employees commission bonus missing commission bonus evaluates empty sequence generated pay element empty 
sequence emp elements replace salary commission bonus subelements new pay element containing sum values original elements order resulting sequence ascending order value pay element 
emps return emp name pay salary commission bonus pay emp pay cases may desirable provide default value substituted missing operands arithmetic expression 
section illustrates user defined function written purpose 
operations sequences 
sense xquery operations operations sequences value xquery sequence error 
xquery provides operators specifically designed combining sequences nodes union intersect node sequences sequence containing nodes occur operands 
intersect operator produces sequence containing nodes occur operands 
operator produces sequence containing nodes occur operand second operand 
union intersect operators return node sequences document order eliminate duplicates result sequences node identity 
query provides example intersect operator 
construct new element named large bids containing copies bid elements document bids xml bid amount bid date january 
ibm systems journal vol chamberlin large bids document bids xml bid bid amount intersect document bids xml bid bid date date large bids expressions apply union intersect operators expressed way 
example query equivalent large bids document bids xml bid bid amount bid date date large bids important remember intersect useful combining sequences nodes different documents possibility nodes different documents node identity 
example consider query document items xml itemno document bids xml itemno query applies operator sequences itemno nodes 
node sequences selected different documents possibility node second sequence identical node sequence 
query returns itemno nodes items xml 
intent query list itemno elements items bids accomplished follows library function empty returns true operand empty sequence document items xml item empty document bids xml bid itemno eq itemno return itemno example predicate itemno eq itemno compares itemno nodes extracting comparing content identity 
operator retained compatibility xpath equivalent union operator 
op step path expression 
example path expression finds union children children nodes sequence bound nodes union serve context nodes step path 
conditional expressions 
conditional expression provides way executing expressions depending value third expression 
written familiar provided languages 
xquery clauses required expression clause enclosed parentheses 
result conditional expression depends value expression clause called test expression 
rules follows value test expression boolean value true sequence containing node serving existence test clause executed 
value test expression boolean value false empty sequence clause executed 
conditional expression returns error value 
simple conditional expression return price part depending existence attribute named discounted independently value attribute part discounted part wholesale part retail example complex query contains conditional expression 
query illustrates levels nesting flwr expressions element constructors 
quantified expressions 
quantified expressions allow testing condition see true value sequence called existential quantifier value sequence called universal quantifier 
result quantified expression true false 
chamberlin ibm systems journal vol example complex query generate report containing status bids various items 
label bid status ok small late enclose report element called bid status report 
bid status report document items xml item return item itemno document bids xml bid itemno itemno return bid bidder bid amount status bid date date late bid amount reserve price small ok status bid item bid status report flwr expression quantified expression allows variable iterate items sequence bound turn item sequence 
variable binding test expression evaluated 
quantified expression begins returns value true test expression true variable binding example satisfies quantified expression begins contrast returns value true test expression true variable binding 
example quantified expression returns value false test expression true bindings satisfies quantified expression query illustrated 
find items items xml bids received twice reserve price 
return copies item elements enclosed new element called items 
items document items xml document bids xml bid itemno itemno satisfies bid amount reserve price return items functions seen examples functions including document function aggregating functions avg 
xquery provides library predefined functions listed ibm systems journal vol chamberlin allows users define functions 
function may take zero parameters 
function definition specify name function names parameters 
may optionally specify types parameters result function 
provide body function expression enclosed curly braces 
function called arguments function call bound parameters function body executed producing result function call 
type specified function parameter parameter accepts values type 
type specified result function function may return value type 
example defines function named takes element node parameter returns decimal value 
function interprets parameter item element extracts item number finds returns largest bid amount recorded item number 
example illustrates function call invokes function item item number 
define function element item returns decimal max document bids xml bid itemno item itemno bid amount document items xml item itemno types argument types result type function definition may simple types decimal complex types elements attributes 
rules declaring types function definitions described detail section 
xquery support overloading user defined functions permit userdefined functions qualified name 
xquery built functions overloaded 
example string function convert argument type string 
arguments function call match declared types function parameters 
purpose function argument numeric type may promoted declared parameter type promotion hierarchy integer decimal float double 
argument considered match type argument derived subtype declared parameter type 
function expects atomic value called argument element typed value element extracted checked compatibility expected parameter type passed function 
value produced body function match return type declared function definition rules parameter matching 
example illustrates user write function provide default value missing data 
function named defaulted takes parameters possibly missing element node default value 
element nonempty value function returns value element absent empty function returns default value 
define function defaulted element 
returns empty empty data function query rewritten follows 
formulation missing empty commission bonus elements treated value zero emps return emp name pay salary defaulted commission defaulted bonus pay emp pay function invokes body called recursive function functions bodies invoke called mutually recursive functions 
recursion powerful feature function definitions particularly functions defined chamberlin ibm systems journal vol hierarchical data model xml 
illustration recursive function depth function example invoked element returns depth element hierarchy argument 
argument element descendants depth hierarchy 
depth hierarchy maximum depth hierarchy rooted child argument element value computed recursive call depth function 
example illustrates function call invokes depth function find depth document named bids xml 
define function depth element returns integer empty max return depth depth document bids xml types writing query necessary refer particular type 
example function definitions need describe types function parameters result noted previous section 
types xquery expressions described section need refer specific types 
way refer type qualified name 
may refer built type xs integer type defined schema abc address 
namespace prefix part left colon prefix bound specific namespace uri 
binding accomplished namespace declaration query prolog described section 
way refer type generic keyword element attribute 
keyword may optionally followed restricts name type node 
example element denotes element element shipto denotes element name shipto element type abc address denotes element type address declared namespace abc 
keyword attribute denotes attribute node denotes node item denotes item node atomic value 
xquery provides additional syntax possible refer kinds nodes element types defined local part schema 
example element city customer address refers element named city schema context customer address 
type may optionally followed occurrence indicators means zero means means zero absence occurrence indicator denotes exactly occurrence indicated type 
occurrence indicators illustrated examples element memo 
denotes optional occurrence element name memo element type order denotes elements type order element denotes zero unrestricted elements attribute 
denotes optional attribute name type type occur function definitions places xquery 
places second operand instance binary operator returns true operand instance type named second operand 
examples illustrate usage instance operator presuming prefix xs bound schema namespace www org xmlschema instance xs integer returns true hello instance xs integer returns false instance element returns true instance element shipto returns true bound element name shipto occasionally may necessary query process expression way depends dynamic run time type expression 
example query preparing mailing labels need extract geographical information various types addresses 
applications xquery provides expression called loosely modeled switch statement java languages 
part consists expression type tested called operand expression op ibm systems journal vol chamberlin variable bound value operand expression 
followed case clauses contains type expression 
operand expression tested type named case clauses turn 
case clause operand expression instance named type called effective case expression case clause evaluated serves result 
operand expression conform types named case clauses result taken final default clause 
expression illustrated example 
expression occur inside loop variable customer iterates set customer elements subelement named billing address 
billing address subelements different types needs handled way 
example bound billing address expressions evaluated depending dynamic type case clause specific type example case clause type known element type 
billing address element encountered conform expected types result example expression unknown customer billing address case element type return state case element type return province case element type return default return unknown type names similar looking xquery expressions called cast treat assert 
expressions consists keyword type expression enclosed parentheses 
cast expression convert result expression built types xml schema 
predefined set casts supported 
example result expression div cast xs double type expression cast xs double div 
cast may return error value unsuccessful 
example cast xs integer successful string representation integer return error value hello 
cast expression cast value user defined type user write function purpose 
treat expression ensure dynamic run time type expression conforms expected type 
example suppose static compile time type expression customer shipping address address 
certain subexpression may meaningful values conform subtype address 
writer subexpression may treat expression declare expected type subexpression example treat customer billing address cast expression treat expression change type operand 
effect twofold assigns specific static type operand type checking query compiled execution time actual value expression conform named type returns error value 
see query processor information provided treat expression consider example customer billing address zipcode type checking xquery compiler consider example type error static type customer billing address address address type general zipcode subelement 
reformulation example static type expression changed zipcode subelement type error removed treat customer billing address zipcode treat assert provide query processor information may useful typechecking 
assert expression serves assertion query processor operand expression particular static type 
processor checking query static type safety may raise error verify expression conforms asserted type 
assert expression strict treat expression pertains static type expression chamberlin ibm systems journal vol independent input data checked execution query 
treat expression contrast pertains dynamic type expression depends input data checked query processing 
example similar treat expression discussed generate compiletime type error static type customer billing address address assert customer billing address zipcode xquery require implementation provide static type checking 
query processor provide static type checking assert expression equivalent treat expression 
validation process schema validation defined 
schema validation may applied xml document part document individual element 
material validated compared definitions schema describes particular kind document 
validation process may label element valid invalid may assign specific type element provide additional information default values certain attributes 
example validation element named shipto assign specific type provide default value carrier attribute 
schema validation applied input documents part process representing query data model 
addition schema validation invoked explicitly query result intermediate expression query 
query data model associates type annotation element node 
type annotation indicates element validated conforming specific named type 
elements validated conform named type generic type annotation 
example element created element constructor type annotation specific type validate expression 
example constructs element validates schema named query prolog validate shipto street elm st street city nv city zipcode zipcode shipto type annotations expressions instance test type element expressions function calls require element particular type 
example validation shipto element assign type annotation enable argument function parameter type element type 
structure query xquery query consists parts called query prolog query body 
query prolog contains series declarations define environment processing query body 
query body simply expression value defines result query 
query prolog needed query body depends namespaces schemas functions 
dependency exists object query body depends declared query prolog 
discuss declarations namespaces schemas functions separately 
namespace declaration defines namespace prefix associates namespace uri 
prefix identifier 
example namespace declaration defines prefix xyz associates specific uri namespace xyz www xyz com example names declaration enables prefix xyz query body 
associates prefix uri specific namespace serves unique qualifier names elements attributes types 
example xyz uniquely identify billing address element defined namespace www 
xyz com example names 
desired multiple namespace prefixes associated namespace 
query prolog declare default namespace applies unqualified element type ibm systems journal vol chamberlin names default namespace applies unqualified function names 
syntax declaring default namespaces illustrated example default element namespace www xyz com example names default function namespace www xyz com example functions default namespaces provided unqualified names elements types functions considered namespace 
unqualified attribute names considered namespace 
addition namespace declarations query prolog contain schema imports 
schema import identifies schema uri optionally provides second uri specifies location schema file 
purpose schema import available query processor definitions elements attributes types declared named schema 
query processor definitions validating newly constructed elements optimization doing static type analysis query 
schema usually defines set elements attributes types particular namespace called target namespace define namespace prefix 
schema import may specify namespace prefix bound target namespace schema 
example schema import binds namespace prefix xhtml target namespace particular schema provides system hint schema schema namespace xhtml www org xhtml www org xhtml xhtml xsd addition namespace declarations schema imports query prolog may contain function definitions 
seen examples function definitions earlier section 
functions defined query prolog may query body bodies functions 
expected query prolog provide means importing function definitions external function library 
xquery functional language consisting types expressions composed full generality 
xquery expression types include path expressions element constructors function calls arithmetic logical expressions conditional expressions quantified expressions expressions sequences expressions types 
xquery defined terms data model heterogeneous sequences nodes atomic values 
instance data model may contain xml documents fragments documents 
query provides mapping instance data model instance data model 
query consists prolog establishes processing environment expression generates result query 
currently xquery defined series working drafts design language ongoing activity xml query working group 
working group actively discussing xquery type system mapped type system xml schema 
discussing full text search functions serialization query results number issues 
final xquery specification include multiple conformance levels example may define static type checking done require done conforming implementation 
expected subset xquery designated xpath version available embedding languages xslt 
overview xquery illustrated example queries 
complete description xquery bnf backus naur form grammar language reader referred 
document uri updated periodically contain latest xquery specification language continues evolve 
just xml emerging application independent format exchange information internet xquery designed serve format exchange queries 
xquery successful providing standard way retrieve information xml data sources help xml realize potential universal information representation 
trademark registered trademark sun microsystems chamberlin ibm systems journal vol cited 
extensible markup language xml second edition recommendation october see www 
org tr rec xml 

world wide web consortium see www org 

xml schema parts recommendation may see www org tr xmlschema www org tr xmlschema www org tr xmlschema 

xml path language xpath version recommendation november see www org tr xpath 

xsl transformation xslt version recommendation november see www org tr xslt 

xml query working group see www 
org xml query 

xquery xml query language working draft august see www org tr xquery 

xml query requirements working draft february see www org tr req 

xquery xpath data model working draft august see www org tr 

xquery formal semantics working draft august see www org tr query semantics 

xquery xpath functions operators working draft august see www org tr xquery operators 

xml query cases working draft august see www org tr cases 

chamberlin robie florescu quilt xml query language heterogeneous data sources lecture notes computer science springer verlag december see www almaden ibm com cs people chamberlin quilt html 

atwood barry eastman jordan loomis wade object database standard odmg release editor morgan kaufmann publishers san francisco ca 

information technology database language sql standard 
iso iec international organization standardization iso available american national standards institute new york ny 

robie lapp schach xml query language xql see www org ql ql pp xql html 

deutsch fernandez florescu levy suciu query language xml see www research 
att com mff files final html 

abiteboul quass mchugh widom wiener lorel query language semistructured data international journal digital libraries april see www db stanford edu widom pubs html 

namespaces xml recommendation january see www org tr rec xml names 

xml path language xpath working draft december see www org tr xpath 
accepted publication june 
don chamberlin ibm research division almaden research center harry road san jose california electronic mail chamberlin almaden ibm com 
dr chamberlin best known inventor sql database language author books ibm relational database products 
holds degree engineering harvey college ph degree electrical engineering stanford university 
acm fellow member national academy engineering ibm academy technology 
dr chamberlin currently research staff member almaden research center focused relational database technology document processing xml 
serves ibm representatives xml query working group editor xquery language specification 
ibm systems journal vol chamberlin 
