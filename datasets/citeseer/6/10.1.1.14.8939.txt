verifying second level security protocols bella cristiano longo lawrence paulson computer laboratory university cambridge jj thomson avenue cambridge cb fd uk gb lcp cl cam ac uk dipartimento di matematica informatica universit di catania viale catania italy longo dmi 
second level security protocol defined security protocol relies underlying security protocol order achieve goals 
verification classical authentication protocols routine second level protocols raise new challenges 
include formalization appeals underlying protocols modification threat model formalization novel goals 
challenges met isabelle inductive approach :10.1.1.145.4394:10.1.1.27.6385
outcomes demonstrated protocol certified mail delivery abadi 
development security protocols half decades mainly focused fundamental goals authentication am speaking 
confidentiality message kept secret 
somewhat simplistically security protocols referred authentication protocols :10.1.1.115.3569
growth internet transactions distributed computing general require sophisticated goals anonymity non repudiation delegation certified delivery 
predict security goals important year 
protocols presuppose existence authentication protocol 
example fair exchange protocol asokan presupposes peers authenticate means authentication protocol engage transaction commit contract 
certified mail protocol abadi assumes existence secure channel mail recipient trusted third party practice channel ssl connection 
ssl complicated obviously want avoid including definition formalization higher level protocol just want assume ssl works correctly 
observations inspire definition second level protocols 
definition second level protocol 
second level security protocol security protocol relies goals underlying authentication protocols order achieve goals 
concept natural 
kind construction customarily existing constructions process iterated 
likewise definition trivially generalized th level protocols employ st level protocols 
turn classical authentication protocols seen level protocols adopt th level protocols transfer protocols 
verification authentication protocols considered mature 
innumerable approaches taken wide variety protocols formalized verification highly fully automated :10.1.1.145.4394
second level protocols raise new challenges formal verification 
briefly outline 
underlying goals 
obvious treat goals available underlying authentication protocols 
examine interaction authentication second level protocols directly combining form giant protocol 
surely 
take granted authentication protocols goals verification second level protocols 
established principles hierarchical verification settled course 
conceptually simpler avoids danger missing low level interaction levels infeasible protocols combined 
threat model 
dolev yao threat model standard authentication protocols 
consists single attacker monitors entire network reuses intercepted messages break ciphertexts 
threat model second level protocols 
choice limit dolev yao model follows 
second level protocol rests authenticated communication attacker prevented interposing 
communication confidential attacker prevented overhearing 
new goals 
aim verifying new goals solve problem formalization 
new security requirements increasingly complex difficult formalize 
concentrating second level protocols simple formalizations goals certified mail delivery importantly simple strategies proving 

goals second level protocols may require dedicated treatment 
addresses challenges 
start inductive approach protocol verification capable verifying protocols :10.1.1.145.4394:10.1.1.27.6385
modifications described sect 
surprisingly simple 
currently formalized network events quickly adapted new protocols 
section describes certified mail protocol developed abadi 
sect 
introduces inductive model protocol sect 
describes findings 
sect 
concludes 
little related aware abadi blanchet currently working verifying protocol blanchet verifier 
shmatikov mitchell model checking techniques analyse call second level protocol 
model kept small exhaustive search feasible appears precisely tailored specific protocol consideration 
contrast aim provide general treatment second level protocol verification 
theorem proving model checking limit size model 
modelling verifying second level protocols approach analysing second level security protocols built existing analysing authentication protocols inductive definitions :10.1.1.145.4394
machinery mechanized isabelle hol modelling verifying protocol involves interaction theorem prover 
outline original approach describe extended cope second level protocols 
inductive approach approach formalize system inductively :10.1.1.145.4394:10.1.1.27.6385
defines operational semantics common lowe csp formalizations models infinite :10.1.1.27.6385
participants include honest ones execute protocol faithfully designated trusted third party 
spy network traffic send messages able generate 
verify safety properties example reason denial service 
proving protocol guarantee involves demonstrating holds execution traces matter spy 
event histories lists built reverse order containing kinds elements event says means sent message sending imply reception 
event gets means received message network 
normally consider channel unauthenticated know sent message 
event notes means stored message internally 
represents local state change 
messages recursive datatype includes constructors agent denotes name agent number denotes number non negative integer 
nonce number number treated non models long randomly generated byte strings 
key denotes key treated non 
hash denotes cryptographic hash message crypt denotes encryption message xn denotes concatenation messages 
xn 
protocol definitions proofs involve additional functions evs denotes set message components appear trace evs nonce evs expresses fresh nonce 
parts denotes set message components including plaintexts encryptions appear set messages analz subset parts components effectively derivable set messages plaintexts encryptions derivable provided corresponding key derivable 
synth denotes set messages built elements values 
prisk denote private keys encryption signature agent denote public keys encryption signature agent denotes set symmetric keys complement set denotes asymmetric keys 
bad denotes set compromised agents see 
nil dap 
na 
na kb dap evs dap nonce na evs says agent nonce na evs dap dap evs dap gets agent nonce na set evs says crypt prisk nonce na evs dap dap says set gets dap fake dap synth analz knows spy says spy dap fig 

demo authentication protocol dap inductive model fig 
presents trivial authentication protocol inductive definition 
consists rules defining constant dap denotes set traces permissible protocol 
rule nil empty trace permissible 
rule dap represents protocol step chooses fresh nonce sends rule dap represents second protocol step receives suitable message signs nonce contains private key sends doesn know message came sends principal named component message received 
rule says message sent received 
rule fake allows spy generate message material gleaned past traffic send anybody 
adapting inductive approach inductive approach extended face challenges sketched process required thought 
extensions turned technically simple quick implement 
modelling underlying protocols goals 
definition underlying protocols authentication protocols 
main goals need model authentication confidentiality 
minor goals may interest 
sender identity says event altered model event occurs trace 
formalize authentication protocol allow agent inspect sender identity originator message remains unknown conveyed message 
usually formalize message reception gets event mention sender 
earlier formalized message reception event says care ensure value true sender :10.1.1.145.4394:10.1.1.145.4394:10.1.1.27.6385
basis observations strategy formalizing authentication allow says events rule preconditions 
example says signify authenticate coming right way model authenticated channel offer confidentiality spy read event says channel confidential 
extend definitional framework introducing additional event sending message 
require extending definition function knows formalizes agent knowledge 
new event available designated recipient include event precondition rule allow true sender modelled authenticated confidential channel 
forbid confidential channel unauthenticated 
performed experiments new event abandoned realized original definitional framework sufficient model secure channels 
way modelling secure channels 
notes event formalizes agent changing internal state 
form notes message result computation stored 
formalize confidential transmission message event notes demonstrated rule fig 

shows demo second level protocol differs demo authentication protocol seen step takes place authenticated confidential channel 
event included precondition new inductive rule formalizing reception confidential message reception general guaranteed confidential channel 
new reception rule introduce event notes signifying receives demonstrated rule fig 

event included precondition rule formalizing reception confidential message message authenticated arrive agent identity appears component noted message 
demonstrated rule fig 

additional modification necessary model second level protocol highlighted comparison fig 
fig 

particular fake rule remains 
protocols require additional rule allowing spy send arbitrary messages previously established confidential connections 
rule insert event form notes spy spy 
important sure uses notes involve messages agent names avoid confusion representation transmission secure channels 
minor goals authentication protocols formalized similar techniques 
example distribution session key pair agents formalized inductive rule gives agents notes events containing key precondition key fresh 
goal guaranteed delivery implemented sending message repeatedly 
goal easily formalized introducing event sending message time event receiving 
simpler just introduce second event sender magically causes message reach recipient 
formalization model abadi certified mail protocol 
approach guaranteed delivery reception rule style fig 
necessary 
compromised agents 
notes events affected detail model set bad compromised agents 
honest agents come control spy security lapse 
spy knows private keys read notes 
detail consistent notes expect spy grab compromised agent receives secure channel 
nil 
ssl na 
na kb evs nonce na evs notes agent agent nonce na evs evs notes agent agent nonce na set evs says crypt prisk nonce na evs says set gets notes agent agent set notes agent agent fake synth analz knows spy says spy fig 

demo second level protocol inductive model note model constrain bad asserting spy set 
eliminate setting bad spy 
simplification harmless provided formalized protocol allows spy participate runs 
traditional authentication protocols designed protect honest agents rest world typical guarantee hold provided peers uncompromised 
protocols intended protect principal peer assumptions 
agent executes non repudiation protocol certified mail protocol requires protocol goals especially bad 
emphasise provided formalization security properties assumed second level protocol 
formalize specific underlying authentication protocol achieves properties 
hierarchical verification strategy irrelevant hidden inside black box ssl kerberos example assumed provide goals 
knowledge time principles hierarchical verification spelled context security protocols 
adapting threat model 
threat model formalized inductive approach dolev yao spy 
monitors network traffic means knows analyse traffic means analz synthesize new messages analysed components means synth 
spy send formed message formalized rule fake fig 
introduces event says spy current trace free variable 
principle obvious threat model second level protocols believe achieve goals dolev yao spy illustrated certified mail protocol abadi decide maintain existing spy 
interfere goals underlying authentication protocols execute protocols words analyse second level protocols threat model authentication protocols communications secured authentication protocols 
modelling secure communications notes events explained yields threat model free changes definitional framework 
modelling verifying novel goals 
abstractly main goal certified mail delivery resembles logical equivalence 
mail sender intended receiver assumption sends case receives obtains receipt received evs generic trace protocol model says event evs features 
analz knows evs analz knows evs 
analz knows evs analz knows evs 
fig 

specification certified mail delivery inductive approach comes operators model goal 
fig 
specifies certified mail delivery high level 
customary goal expressed generic trace events evs inductive protocol model 
says event preconditions expresses role sender played receiver played features mail form depends specific protocol encrypted hashed 
delivery receipt presumably built goal expressed terms guarantees protocol participant 
formalization express agents conform protocol protected agents 
statement reads follows receiver derive mail portion sees network traffic evs sender derive corresponding delivery receipt portion sees network traffic evs 
guarantee confirms sender disadvantage receiver receiver able derive mail line analysed components 
statement reads follows sender derive delivery receipt receiver derive corresponding mail 
sender submits delivery receipt judge guarantee counts evidence receiver 
assume delivery receipt involves digital signature mechanism prevent forged explicitly exclude danger formalizing precondition synth analz knows evs operator synth expresses message creation 
specific protocol statements need refined 
despite nice symmetry weak operator analz represents potentially unlimited series decryptions available keys 
stronger guarantee replace analz specific protocol message delivers required item 
refined statement says receiver compute mail unlimited amount sender corresponding delivery receipt 
refined statement says sender compute delivery receipt unlimited amount receiver corresponding mail 
note express refined statements know precise format protocol messages 
additional problem statements time writing lack techniques reasoning knowledge agents spy 
specifically know prove useful assumption analz knows evs spy 
correct situation proving stronger longer involves analz 
improved version statement delivery receipt created receiver corresponding mail 
version refer sender 
strengthened guarantee eliminating need reason sender knowledge 
apply technique statement obviously message created 
forced divide statement separate properties 
concerns spy proved reasoning analz knows spy evs know 
concerns honest agent states message normal way receipt 
refinements depend specific delivery mechanism protocol 
mail protocol consider uses key protect message 
key decrypt message 
refine statements replacing mail key mail formalize guarantee key reaches spy 
guarantee obvious value parties formalized proved typical authentication protocol 
prove guarantees able reuse techniques previously developed non repudiation protocol similar aim protecting agent :10.1.1.13.756
abadi certified email protocol abadi designed protocol certified mail delivery appears practical advantages 
requires trusted third party ttp ttp stateless lightweight access clear text transmitted messages 
burden ttp independent message size 
public key infrastructure necessary 
ttp signature encryption keys principals merely shares secret ttp password 
gist protocol mail sender sends mail encrypted symmetric key intended receiver 
similar spirit previously mentioned non repudiation protocol send encrypted message corresponding key 
sender attaches symmetric key encrypted ttp public encryption key 
recipient forwards message ttp order obtain symmetric key 
non repudiation protocol sender key ttp 
ttp releases key releases certificate documenting transaction sender 
fig 
presents protocol version simplifying headers authentication options 
fullest authentication option receiver authenticate sender ttp assumed 
notation purposely distinction various uses symmetric encryption asymmetric encryption digital signatures subscripts cases 
step sender sends receiver encrypted mail query certificate ttp called query part authentication mechanism required agree function link query response certificate encrypted ttp public encryption key contains symmetric key protects hash linking query response pair 
step issues response query just received necessarily query network insecure 
uses query response pair received ciphertext em build hash hr 
wraps received certificate password sends outcome ttp secure channel 
presumably creates channel running ssl protocol authentication ttp 
step ttp verifies received certificate expected form decrypting private decryption key 
ttp authenticates abbreviations steps hs hash hr hash em hs 
ttp 
ssl ttp hr 
ttp ssl 
ttp fig 

abadi certified mail protocol password verifies inside ticket matches positive check signifies agree authentication mechanism 
satisfied ttp replies delivering key inside ticket 
reply goes secure channel created step 
step ttp sends delivery receipt certificate signed ttp private signature key 
ttp trusted take step jointly previous fair sender receiver 
certificate received inside delivery receipt matches stored certificate authenticates ttp sees symmetric key plaintext message desirable goal reduces trust ttp disclose mails compromised 
note misbehaving ttp eavesdrop initial message ciphertext decrypt knows 
encryption prevent third parties learning importantly protocol allow sender send mail message receiver reads message receives corresponding return receipt 
modelling abadi protocol protocol require public key infrastructure ttp key pair encryption signature 
protocol model requires treatment kinds asymmetric keys 
protocol uses passwords strengthen authentication receiver ttp 
treatment symmetric keys shared ttp necessary 
complete formalization asymmetric keys developed verify set reused :10.1.1.13.756
formalization symmetric keys exists number protocols relying symmetric certified mail synth analz knows spy notes ttp agent spy agent ttp certified mail cm evs certified mail key evs nonce evs hs hash number cleartext nonce response crypt number ttp crypt ttp agent number bo key agent hs says agent agent ttp crypt number number bo number cleartext nonce ttp evs certified mail cm evs certified mail gets agent agent ttp em number bo number cleartext nonce ttp set evs ttp hr hash number cleartext nonce response em notes ttp agent agent ttp ttp key hr evs certified mail cm evs certified mail notes ttp agent agent ttp ttp key hr set evs ttp crypt ttp agent number bo key agent hs ttp hs hr notes agent ttp agent key hr gets crypt prisk ttp ttp says ttp crypt prisk ttp ttp evs certified mail fig 

modelling abadi protocol fragment phy :10.1.1.145.4394:10.1.1.27.6385
added extensions standard formalization public keys verifying protocols 
authentication able respond query original protocol expects agree line series pairs 
chose implementation responses response hash agent key shrk nonce explicit definition allows spy generate response compromised 
part protocol model appears fig 

message transmission secure channel authentic confidential delivery guaranteed formalized notes event form discussed 
rule represents possibility spy opening secure channel ttp sending fake message 
rule cm represents protocol message note cleartext part message immediately 
rule cm notes event represents message ttp key password 
steps assumed take place time formalized single rule cm 
ttp checks password authenticate sender message regardless reply secure channel 
replies delivery guaranteed rule introduces appropriate notes event receiver double says gets event ttp transmission sender 
verifying abadi protocol novel features protocol required new techniques verification 
space limitations force directly final results 
guarantee sender expressed theorems case recipient spy honest recipients 
sender know case applies 
theorem sender guarantee spy 
says agent agent ttp crypt number number ao number cleartext nonce ttp set evs ttp crypt ttp agent number ao key agent hs key analz knows spy evs evs certified mail spy bad gets crypt prisk ttp ttp set evs theorem premises sender issued message value ttp session key available spy 
compromised case sender gets return receipt 
theorem sender guarantee honest recipient 
says agent agent ttp crypt number number ao number cleartext nonce ttp set evs ttp crypt ttp agent number ao key agent hs notes agent ttp agent key hs set evs spy evs certified mail gets crypt prisk ttp ttp set evs version sender issued message legitimately received session key 
gets return receipt 
theorem recipient guarantee 
crypt prisk ttp ttp evs ttp crypt ttp agent number ao key agent hash number cleartext nonce em hr hash number cleartext nonce em spy evs certified mail notes agent ttp agent key hr set evs recipient guarantee states return receipt exists formalized function received session key 
development proofs highlighted anomalous execution protocol possible 
receiver initiate session step quoting arbitrary sender building identical hashes 
session terminate successfully sender get evidence mail sent delivered 
due fact protocol uses technique authenticate sender ttp 
anomaly solved inserting sender password certificate ttp created step receiver forge 
flaw defence claim message sent years ago longer relevant 
attack works directions claim truthful believed 
includes date message prove date accurate 
obvious solution ttp include timestamp return receipt 
developed concept second level security protocol uses level protocol primitive 
shown correctness assertions second level protocols expressed 
existing primitives inductive approach formalize concepts sending confidential message authenticated message message guaranteed delivery 
concrete example specified certified mail protocol formalized correctness assertions 
verified main guarantees protocol 
research funded epsrc gr verifying electronic commerce protocols 
discussions martin abadi bruno blanchet salvatore useful 

abadi glew horne pinkas 
certified email light line trusted third party design implementation 
proceedings th international conference wold wide web www 
acm press addison wesley 

asokan shoup waidner 
asynchronous protocols optimistic fair exchange 
proc 
th ieee sym 
sec 
privacy 
ieee comp 
society press 

aura 
distributed access rights management delegation certificates 
vitek jensen editors secure internet programming security issues distributed mobile objects volume lecture notes comp 
sci pages 
springer verlag 

bella 
inductive verification smart card protocols 
comp 
sec 

bella massacci paulson 
verifying set registration protocols 
ieee selected areas communications 

bella paulson 
mechanical proofs non repudiation protocol 
boulton jackson editors theorem proving higher order logics tphols lncs pages 
springer 

blanchet 
efficient cryptographic protocol verifier prolog rules 
proc 
th ieee comp 
sec 

workshop 
ieee comp 
society press 

burrows abadi needham 
logic authentication 
proceedings royal society london 

clark jacob 
survey authentication protocol literature version 
technical report university york department computer science november 
available web www users cs york ac uk jac 
complete specification clark jacob library available www cs sri com millen 

cohen 
taps order verifier cryptographic protocols 
proc 
th ieee comp 
sec 

workshop pages 
ieee comp 
society press 

herzog guttman 
strand spaces security protocol correct 
proc 
th ieee sym 
sec 
privacy 
ieee comp 
society press 

lowe 
breaking fixing needham schroeder public key protocol csp fdr 
margaria steffen editors tools algorithms construction analysis systems second international workshop tacas lncs pages 
springer 

paulson 
inductive approach verifying cryptographic protocols 
comp 
sec 

ryan schneider 
modelling analysis security protocols csp approach 
addison wesley publ 
reading massachussetts 

shmatikov mitchell 
analysis fair exchange protocol 
network distributed system security symposium ndss 

zhou gollmann 
fair non repudiation protocol 
symposium security privacy 
ieee computer society 

