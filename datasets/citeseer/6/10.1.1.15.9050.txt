xcat science portal sriram krishnan randall dennis gannon govindaraju rahul aleksander benjamin department computer science indiana university bloomington jay national computational science alliance il richard timothy eric webb department chemical engineering university illinois urbana champaign il design prototype implementation xcat grid science portal described 
portal lets grid application programmers easily script complex distributed computations package applications simple interfaces 
application packaged notebook consists web pages editable parameterized scripts 
portal workstation specialized personal web server capable executing application scripts launching remote grid applications user 
portal server receive event streams published application grid resource information published network weather service nws autopilot sensors 
notebooks published stored web archives retrieve modify 
xcat grid science portal tested various applications including distributed simulation chemical processes semiconductor manufacturing collaboratory support ray 
keywords grid science portal distributed simulations scripted applications 
concept science portal introduced national computational science alliance ncsa part project designed provide computational biologists access advanced tools databases shared community users web technology 
science portal broadly defined application specific environment programming complex tasks involving remote resources 
past year science portal concept heavily influenced emergence grid computational platform 
grid set distributed services protocols deployed large set resources 
services include authentication authorization security namespaces file object management events resource scheduling user services network quality service information directory supported nsf ncsa alliance doe 
permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
sc november denver acm services 
services enable applications access manage remote resources computations 
web grid portals provide mechanisms launch manage jobs grid web 
grid science portals problem solving environments allow scientists ability program access execute distributed applications grid resources launched managed conventional web browser desktop tools 
portals scientific domain knowledge tools user terms application science terms complex distributed computing protocols 
system effectively grid vast powerful computation engine seamlessly extends user desktop remote resources compute servers data sources line instruments 
describes xcat science portal xcat sp implementation ncsa grid science portal concept 
xcat sp idea active document thought notebook containing pages text graphics describing science particular computational application pages parameterized executable scripts 
scripts launch manage computation grid results dynamically added document form data links output results event traces 
xcat sp tool allows user read edit execute notebook documents 
goal research focus address set questions 
active document model real scientific applications 
scripts steer computations portal 
simple efficient mechanism store retrieve data specific application 
portal designed interact event system receive feedback remotely executing applications 
portal grid monitoring system provide resource utilization information environment 
existing grid portals area grid portal design extremely active important part emerging grid research agenda 
existing projects grouped categories user portals simple job submission tracking file management resource selection portal construction kits provide apis necessary portal communicate grid services science portals defined earlier user portal category npaci hot page successful system 
user portal projects european project nimrod australia ipg launch pad user portal nasa information power grid projects provide portal construction toolkits 
argonne commodity grid cog toolkit java interface globus 
lawrence berkeley labs jsp api cog tokyo institute technology uses sun microsystem jini provide interface cog networked solvers ninf netsolve 
science portals variety forms 
designed relatively specific application domains 
example cactus portal albert einstein institute originally designed black hole simulations ecce eln project ornl lbnl computational chemical engineering 
lattice portal jefferson labs user portal high energy physics 
category science portals directly addresses problem building multidisciplinary applications 
gateway project mississippi project corba enterprise java beans ejb build tier architecture launching scheduling multiple applications 
projects scripting orchestrate large complex application scenarios 
corba project rutgers discover portal provides interface computational steering collaborations 
xcat science portal initial prototype science portal tests features described developed year indiana university help chemical engineering team ncsa 
portal differs architecture examples described centralized web server remote machine 
system portal software runs user desktop laptop builtin server 
reason xcat science portal designed integrate user desktop environment remote grid resources 
portal resides tool user interact grid web browser clients 
model portal server provides single local gateway grid services local applications 
local web browser interact applications may possibly communicate local protocols services com net gnome 
illustrated major components portal server include java tomcat server engine spawns set java servlets manage access components 
notebook database 
notebook active document defined xml object describes set resources computational application 
consists documents web pages execution scripts notebooks 
script engine execute complex grid operations 
scripting currently popular computational scientists 
provide interfaces argonne cog toolkit turn provides access globus functionality gsi grid authentication mechanisms 
api allows easy access doe common component architecture cca services 
event subsystem capable handling event messages may generated grid resources user applications 
grid performance monitor provides user view available resources current loads network loads 
remote file management interface uses gsi enabled ftp service 
notebook database underlying directory structure filesystem database support portal 
database stores notebook corresponding computational application 
notebook stored directory page notebook stored different subdirectory 
xml file containing meta data notebook list pointers pages notebook stored local database 
shows snippet xml file 
describes notebook session title notebook intro containing notebook page 
complete schemas viewed www extreme indiana edu xsd 
notebook session saved jar java archive file published repository gsi enabled ftp file transfer services 
authorized portal users retrieve jar file repository place database local portal 
enables portal users scientific community share data corresponding experiments peers 
web browser local components active notebook server gsi cog authentication grid tools grid performance monitor grid application scripting soap event channel machine sensors workstation environment script engine viz tools notebook database application proxy wrapped application xcat science portal architecture grid application proxy wrapped application difference user portal science portal complexity tasks portal supports 
user portal allows users submit single jobs grid 
portal provides features simple manage job providing load time run time information help user select resources monitor execution job 
science portal applications tend complex 
single scientific experiment may involve running different computational simulations data analysis tasks 
may involve coupled multidisciplinary applications collaboration remote software components linked form distributed application 
complex tasks may take great deal effort plan orchestrate entire application may need run times slightly different set parameter values 
best way allow sort computation carried allow scientist access simple scripting language endowed library utilities manage grid applications 
furthermore provide simple tool allows scientist build web form interface configure launch scripts 
users scripts simply fill parameter values web form click submit button 
launches script executes user desktop manages remote applications grid 
prototype implementation uses python language scripting popular scientists excellent interface java scripts grid enabled providing api globus services cog toolkit 
illustrates portal interface typically application dependent configurable users 
panel left view open notebook session 
consists set pages script forms 
form simple script launches local visualization application shown 
parameter values selected user form page bound variables script 
selecting edit script form page may edited shown 
case script launches local program called animator takes parameter name simulation output file animate 
example script trivial difficult write script launch application grid manage remote files 
xmlns www extreme indiana edu title notebook intro session title thu apr est thu apr est version version id id open true open false title title url database notebook big picture html url id id number number open false open xml file notebook metadata second form scripting manage local details program execution remote site 
remote applications managed application managers 
cases applications scientists engineers want run grid grid aware ordinary programs read write data files 
cases access application source available commercial applications codes 
application manager agent process helps application grid services 
example manager stage input files remote locations invoke post processing application output application finished 
manager serves event conduit application portal 
application dies creates file manager send event back portal appropriate message 
application manager shown 
application manager act service broker application 
manager register grid information service advertise application capabilities 
user appropriate authorization discovers manager launch application behalf user mediate interaction user 
example suppose application library solving sparse linear systems equations large parallel supercomputer 
manager export remote solver interface takes sparse linear system input returns solution vectors error flags output 
user remote manager solver invoked remote method call passing linear system uri parameter solution vector received result call 
model invoke ninf netsolve 
xcat system application managers conform doe common component architecture cca specification 
xcat implementation cca specification built top allows users write cca compliant components java 
application managers designed components standard port providing creator ability download script component run 
scripting language library component identical language library available portal engine 
application managers combine advantages persistent remote shell remote object may invoked defined set interfaces 
furthermore interfaces manager component supports change notebook database notebook server database interface notebook notebook notebook page page script page page page script notebook database snapshot xcat sp script page xcat application managers application managers dynamically simply downloading new script 
allows portal dynamically change behavior remote application suit new problems requirements 
xcat provides scripting interface instantiate remote components wire input output ports orchestrate computations 
portal uses scripting interface api described 
def def def def def def start def kill def methodname event subsystem api xcat xcat science portal uses soap events system decouple communication scripting engine remote jobs launched portal 
decoupling important applications continue portal shut provide robustness system 
remote job instantiated component reads writes files grid monitoring architecture gma collects data fault detection performance tuning computational grid 
systems indicate progress sending events intervals interested listeners 
soap events system uses network protocol soap xml schemas wire protocol 
portal receive events soap system 
receive asynchronous event notification system required continually renew lease event publisher 
alleviate event system provides publisher pull model allows connections simple listeners 
result portal need dedicated thread renew lease event channel 
events published simply writing strings socket allowing frameworks different languages platforms easily publish events xml format 
portal designed leverage advanced features event system firewall friendliness directory services failsafe mechanisms 
portal registers known soap event channel listener 
processes launched python scripts provide information status computations publishing events event channel 
channel multiplexes events connecting portal different event publishers 
event channel provide type filtering allowing portal register interest events specific patterns 
portal registers known soap event channel scripting engine 
register subscriber provides object implements interface specified events api 
object registered event channel 
shows fragments code illustrating process 
import sys import extreme events package extreme events import import receiver acts extreme events import specialization generic class def init self constructor code goes method interface def handle self event wish handle individual events code register event channel def subscribe get handle event channel channel 
register event channel channel subscribe subscribing event channel shows example xml resource event 
portal uses receive event java object accessor methods retrieve values fields event 
portal information process event render browser needed 
xml schema event system lends extensibility self describing event formats making possible portal interoperate wide variety event systems including nws autopilot sensors application level events 
grid performance monitor grid performance monitor gpm uses event subsystem provide user list visualization available resources current predicted loads resources 
data loads obtained nws 
gpm designed thin layer top events event channel 
provides portal flexibility cooperate exchange signals events vast variety event generators 
event visualizer component gpm subscribes event channel 
visualizer registers interest events resource utilization related type 
lease subscription mechanism channel provides robustness face failures components distributed system 
event channel obviates need global registry sensors 
sensors send events event channel periodic intervals 
detection events particular sensor determined due failure sensor 
event generators send events irregular intervals required send simple heart beat events regular intervals indicate operational 
www extreme indiana edu soap events machine utilization source extreme indiana edu source timestamp timestamp security authentication example resource event xml 
authentication handled globus gsi 
user local globus credentials portal server globus cog kit remotely upload credentials portal cog kit 
initial startup screen text fields user enter appropriate information globus credential password local credential server tag name password credential 
case portal server loads object relevant source authentication instantiation behalf user 
cookies enabled user server sets cookie object user browser maps session proxy user leaves site identity isn lost 
helps portal better session management 
user disabled cookies portal works fine loses session tracking capabilities 
applications ncsa chemical engineering applications done chemical engineering team ncsa example kind science problems portal intended solve 
simulation models process copper sized form interconnection microprocessor chips 
simulation consists linked codes 
consists continuum model diffusion processes deposition bath adjacent 
second consists monte carlo model events occur near surface region solution additives influence evolution deposit shape roughness filling 
codes communicate sharing data files common boundary conditions 
shows coupled codes filter added insure stability linked computational system 
codes run separately grid 
transfer files done grid file management transfer utilities 
interface grid provided application managers 
described wrappers provide access grid services gsi grid events codes grid aware 
execution set controlled controlling script runs inside portal 
primary mechanism getting feedback event system 
grid file management tools transfer output files generated 
events come back applications handed event handlers registered logged 
special events trigger event handlers change control course execution 
application illustrates interesting scenarios collaboration 
experiment set chemical engineers tools provided portal 
simple web forms created parameter input control experiment 
example form shown 
subsequent users need know parameters mechanics grid computation 
interact linked chemical engineering codes application manager continuum simulation science portal grid file management application manager monte carlo simulation file file chemical engineering application setup parameter form portal web interface event notification mechanisms 
iu project second application collaboratory ray beam lines argonne advanced photon source aps lawrence berkeley advanced light source als 
allow users remote laboratories send sample crystals beam lines collaborate scientists preparing mounting sample receive initial images execution network 
dynamically upload new control parameters sample appears flawed terminate run 
addition large amounts data terabyte day numbers files second application requires multiple video streams accessing high speed research networks synchronous geographically distributed collaboration 
portal launch part experimental setup client site 
controlling script java application managers local applications launched controlled 
setup experiment closely resembled chemical engineering 
events get feedback progress execution 
described xcat science portal system 
contributions research project include providing programming tool grid application designers allows script complex applications package active document notebooks 
demonstrating grid event system integrated grid applications resource monitoring provide user important feedback runtime behavior applications 
showing distributed software component architecture case doe cca model effective tool manage distributed applications legacy software grid aware 
includes integration resource component directory services grid forum standards information services emerging web service directory language wsdl advocated industry groups 
addition building interfaces intelligent resource brokers building components capable adapting available grid resources 
gnome visited 
www gnome org 
brian tierney white grid monitoring service architecture draft visited 
www lbl gov papers gma pdf 
box simple object access protocol 
technical report 
www org tr note soap 
dietmar hpc portal visited 
www de 
geoffrey fox gateway computational portal visited 
www org 
george myers nasa ipg launch pad portal visited 
www ipg nasa gov 
jack dongarra netsolve visited 
www cs utk edu netsolve 
jason grid portal development kit visited 
dast nlanr net features 
jason visited 
dast nlanr net features 
discover visited 
www org 
rajkumar buyya nimrod tool distributed parametric modelling visited 
www monash edu au nimrod html 
ian foster carl kesselman 
grid blueprint new computing infrastructure 
morgan kaufmann 
grid forum information services working group 
ggf gis working group charter visited 
www unix mcs anl gov gis 
object management group 
common object request broker architecture specification july 
revision 
pablo group 
autopilot visited 
cs uiuc edu project autopilot htm 
albert einstein institute 
cactus visited 
www org 
argonne national lab 
cog visited 
www globus org cog 
argonne national lab 
gsi visited 
www fp globus org security 
argonne national laboratory indiana univeristy advanced computing laboratory los alamos national laboratory lawrence livermore national lab univeristy utah 
common component visited 
ca sandia gov cca forum see www extreme indiana edu 
jefferson labs 
lattice portal visited 
org 
microsoft 
net framework visited 
www microsoft com net 
microsoft 
com visited 
www microsoft com com 
sun microsystems 
jini visited 
www sun com jini 
sun microsystems 
ejb visited 
java sun com products ejb index html 
tokyo institute technology 
visited 
www titech ac jp 
tokyo institute technology 
ninf visited 
ninf etl go jp 
ornl lbnl 
doe electronic notebook visited 
www pnl gov docs collab research html 
san diego supercomputer center sdsc university texas ut university michigan um 
npaci hot page visited 
https npaci edu 
govindaraju gannon 
design xml interoperable rmi system java 
proceedings international conference parallel distributed processing techniques applications las vegas pages june 
aleksander govindaraju dennis gannon randall 
events design implementation 
technical report tr indiana university april 
mississippi state university 
mississippi computational web portal visited 
www erc edu labs 
rich wolski neil spring jim hayes 
network weather service distributed resource performance forecasting service metacomputing 
journal generation computing systems 
ucsd technical report number tr cs september 

