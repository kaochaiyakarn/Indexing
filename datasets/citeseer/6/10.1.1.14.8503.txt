participatory usability supporting proactive users david nichols dana mckay department computer science university waikato hamilton new zealand dmn dana cs waikato ac nz software released opportunities users influence development limited 
review research post deployment usability explicit connections open source software development 
describe issues involved design user reporting tools safari web browser digital library prototype 
keywords usability open source critical incident reporting usability firm place human computer interaction hci increasingly prominent role software development 
methods developed improving usability software devices 
usability techniques range methods improving requirements gathering ethnography automated analysis interface code 
methods fall term user centred design intended improve products deployed 
role user user centred design generally design participant usability study participant object field study 
software deployed opportunities remote users influence development rare 
review research post deployment usability explicit connections open source software development 
describe requirements user reporting tools safari web browser digital library prototype 
prototype serves interesting test case challenge designing interface novel piece functionality order purpose clear prospective users 
outline social considerations form privacy concerns need represented interface post deployment usability tools 
usability hci hci discipline emphasized importance post deployment usage usability activities 
reasons major thrust hci attempt influence early stages design right requirements capture stage 
known software engineering earlier bug caught michael twidale graduate school library information science university illinois urbana champaign il usa twidale lis uiuc edu design process cheaper fix 
cost savings amount orders magnitude 
true usability bugs problems users learning application failures application mesh actual user needs workplace practice 
result hci researchers advocates focused need early involvement specification prototyping processes leaving interface final stages just prior deployment design committed particular functionality decisions 
pieces deal usability overwhelming majority hci concerns pre deployment methods 
understandable difficult costly communicate users real world making pre deployment opportunity usability engineering 
changes computing allow closer post deployment user contact 
particular trends software combine provide opportunity post deployment methods increasingly effective addition usability methods low cost reliable networking connecting users developers incremental software versions software application interface users relatively small change widely previous version easy upgrades users simple downloads virtue application remote access central software resource digital library web interface post deployment usability typically piece software released users reduced opportunities communicate developers 
rich time consuming interactions user centred design process largely 
problems users experience resolved ad hoc combination online help materials local technical support software support telephone help lines informal interactions users 
frustrating episodes help resources individual users just get frustrated develop personal tactics 
point view developers incidents invisible reason alternative strategies ethnography uncovering type incident proven valuable 
observational studies situ way developers get glimpse everyday life typical users struggling software 
user frustration studies user frustration highlighted everyday computer 
surprising result subjects estimated half time spent front computer lost due frustrating experiences 
question wish pose computer program moment frustration 
long term generic responses improve design reasonable suggest moments frustration continue occur users expectations behaviour changes 
possible immediate software responses include 
software today simply passive 
applications may refer user help system associated web resources offline help available 

support users manage recover negative emotional states 
part relatively new field affective computing 

enable user dynamically change program attempt resolve problem 

suggest user improve source code program 
open source solution 

communicate details frustrating incident back developers 
post deployment usability includes user reporting instrumented software 
different responses reflect different philosophies interaction 
standard response saying piece software wait version 
affective response says software go react state user 
research considered explicitly designing computers respond user frustration users respond positively affective support 
hypothesize part frustration users experience may alleviated providing outlet complaints response 
klein vent condition letting users express frustration effective affective support condition believe directed product improvement 
users frustration outlet easy means complain directly back developers 
response suggests engineering paradigm radically alter way users interact software creating application significantly flexible run time current software 
approach users power responsibility 
final responses allow users active role software development 
open source solution encourage users fix problem motivation scratching personal 
vision developer users interacting source code quickly achieve new software version shared users 
restriction users need technically competent option realistic small proportion user base 
open source programs don prompt users contribute source code message fix firmly embedded culture 
final response acknowledge users skilled adopt open source solution knowledgeable interactions 
key pre requisite user reporting element post deployment usability 
approaches post deployment usability post deployment usability subset remote usability requires remote users participate part normal usage computer software 
actions users automatically recorded sent back developers instrumented software 
remote usage recording widespread devices including vending machines elevators 
alternatively software allow user explicitly send report usability incident 
concentrate second option user initiated reporting 
research frustration suggests shortage raw material general infrastructure users relay incidents back developers 
reader may try locate avenue complaint software predict take time locate facility exists probably require piece software email web browser require user enter information available computer 
difficulty software illustrative developer attitude individual user deemed valuable attempt record 
developers may promote usability laboratory testing products selling point cases simply expensive method getting underlying issues 
klein note corporations idea admitting product failure may counter intuitive legally unwise 
open source software see uses completely different world view 
view explicitly designing failure situations allowing users positive outlet capture incident data lost 
additionally may help users feel little better 
enterprises particularly services hospitality industry complaints customer feedback actively encouraged part culture 
shneiderman mayhew suggest users financial incentives contributing usability reports 
value collecting usability data real users part day day activities clearly recognized 
hartson castillo note techniques cost effectiveness lack need evaluator simplifies data collection reduces potential biases evaluator effects users 
major piece research user reporting indicates users fairly successful identifying critical incidents judge severity roughly way experts 
reports post deployment usability consist main elements objective program state information subjective comments provided users 
reporting may initiated user prompted application 
date reports hci literature widespread trials usability oriented user reporting 
open source projects successfully involved distributed users contributing bug databases 
open source usability usability open source products widely regarded worse commercial counterparts 
possible reasons including resources processes nature voluntary contributions development team composition 
key element open source projects manage engage users development process 
user participation comes forms code patches documentation testing bug reporting 
users allowed proactive open sources couch potatoes active part software development 
users majority open source project technically complicated bug reporting different 
system bugzilla bug database mozilla project holds bug reports users world 
bugzilla users technically adept requirement bug reporting complexity bugzilla reporting tool barrier potential users 
open source projects shown distributed networked users contribute software development 
rest examine may able adapt participatory functionality usability 
user reporting bugs crashes usability centred user reporting everyday applications bug reporting tools way desktops everyday users 
crash reporting netscape mozilla microsoft windows xp contain crash reporting tools send information back developers 
tools invoked program crashes typically little user input 
program longer running data threads running gathered information limited usability value 
current tools focuses functionality errors usability errors 
difference subjective 
crash crash cause confusion user depends goal user software context task user prior experience 
tools demonstrate technical feasibility widespread networked feedback users interactions 
safari safari released web browser public beta testing established quasi post release evaluation chiefly errors functionality developed apple computer mac os open source rendering element kde project 
apple included user reporting element safari help developers identify web pages display correctly 
user initiates report safari clicking bug symbol shown top right 
dialog shown left displayed 
section safari example discussing design user reporting tools 
design reporting tools previous sections outlined landscape reporting tools post deployment usability 
section describe key design challenges implementing tools safari bugzilla crash reporting tools 
user reporting safari 
safari web browser developed apple computer ubiquity 
shneiderman suggests facilities enduser reporting ubiquitous predict problems may arise 
safari bug visible main browser window facility restricted commenting html rendering doesn need visible say preferences dialog window 
web system available requires extra invoke 
registration anonymity 
safari bug require form registration respect functions crash reporting tools mentioned earlier 
feature anonymous reporting lowers cost terms effort privacy reporting compared public registration system bugzilla 
application integration 
safari tool integrated main application 
integration allows offer option recording screen shots option available crash tools separate web system bugzilla 
hartson castillo report participants preferred reporting tool integrated application 
web reporting systems force users input information available computer raises cost reporting contributes inaccuracy reports 
ease 
safari tool crash reporters submits report just click information optional 
contrasts average minutes fill full critical incident report 
believe clicks start tool send report user effort necessary minimal report 
subjective objective information 
safari combines low cost objective information url subjective information user comments report 
reporting tools need provide types developers efficiently interpret report 
tracking report 
systems discussed open source bugzilla allows report tracked sent 
hartson castillo note participants study wanted feedback reports bugzilla allows track progress report 
prototype developed prototype reporting tool greenstone digital library software 
aim show design challenge described addressed current version prototype course evolve light user feedback 
greenstone differs safari presents interface web browser safari native application full range interface options available 
consequently reporting mechanism constrained web technologies restricted integrated tool safari 
shows typical part digital library collection greenstone 
initiate report user clicks complain button top right 
report button element pages collection allowing incidents generated point system 
incident report interface shown 
interface designed allow user contribute minimum effort part providing greenstone developers information assess problem propose solution 
users provide optional subjective feedback interface doesn reveal key elements report construction 
majority information gathered reporting tool javascript information user browser operating system screen resolution time took reporting interface 
state form elements greenstone interface captured including query terms search text field 
prototype tool ubiquitous greenstone collection allows report submission minimal user effort mouse clicks supplements user comments objective program state information 
previous research laboratory studies hasn tested reporting part users everyday activities intend deploy tool greenstone observe users respond reporting infrastructure privacy whilst reporting interface appear relatively innocuous program clearly collecting information relating user interactions sending network 

user reporting prototype greenstone 
user trust program sending sensitive information user determine sensitive 
clearly user going pleased credit card details collected care page viewing noted depend content 
users mind page weather logged may concerned page containing example sensitive medical information 
need privacy conflict developers getting information need solve problems safari example content page necessary determine doesn render properly 
argued user relinquishes privacy software installed purely technical level true software capable recording user information point 
typical user way proving piece software transmitting contents filestore internet 
key issue conflict developer needs user privacy trust user trust developer take disseminate potentially sensitive information 
generate trust developer allow user see information recorded provide explicit policy information 
place privacy view details links 
transparency information intent reporting mechanisms gain social acceptance necessary widespread adoption 
reviewed relatively small literature user reporting linked open source development current prototype systems 
believe empowering users proactively contribute usability activities valuable technique 
open source communities shown distributed development achieve rapid results terms functionality challenge hci explore achieve similar success participatory usability 
acknowledgments ben shneiderman preece matt jones george buchanan stuart yeates rob valuable comments topics 

bentley biasing web site user evaluations study 
proceedings conference computer human interaction special interest group ergonomics society australia 
sydney australia 

lazar robinson shneiderman understanding computer user frustration measuring modeling disruption poor designs technical report hcil human computer interaction lab university maryland usa 

bugzilla 
bugzilla mozilla org accessed th march 
castillo hartson hix remote usability evaluation users report critical incidents 
proceedings conference human factors computing systems chi summary 
acm press 

fischer couch potatoes consumers designers active contributors 
monday december firstmonday org issues issue fischer 
weiler nayak remote usability testing 
interactions 

hartson castillo remote evaluation post deployment usability improvement 
proceedings conference advanced visual interfaces avi acm press 

hartson castillo kelso 
neale remote evaluation network extension usability laboratory 
proceedings conference human factors computing systems chi acm press 

hilbert redmiles extracting usability information user interface events 
acm computing surveys 

hilbert redmiles large scale collection usage data inform design 
human computer interaction interact proceedings eighth ifip conference human computer interaction tokyo japan 

johnston best practice complaint management 
academy management executive 

kde project www kde org accessed th march 
klein moon picard computer responds user frustration theory design results 
interacting computers 

lazar robinson shneiderman help 
lost user frustration web navigation 
society 

mayhew usability engineering lifecycle practitioner handbook user interface design 
morgan kaufmann san francisco ca 

mozilla project 
www mozilla org accessed th march 
nichols twidale usability open source software 
monday january firstmonday org issues issue nichols 
picard affective computing 
mit press cambridge ma 

raymond cathedral bazaar 
monday march firstmonday org issues issue raymond 
safari apple www apple com safari accessed th march 
shneiderman leonardo laptop human needs new computing technologies 
mit press cambridge ma 

witten mcnab bainbridge 
greenstone comprehensive open source digital library software system proceedings fifth acm conference digital libraries 
acm press 
