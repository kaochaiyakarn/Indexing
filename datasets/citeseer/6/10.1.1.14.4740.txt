roger dingledine free haven project arma net reputation anonymity systems decentralized anonymity systems tend unreliable users choose nodes network knowing entire state network 
reputation systems promise improve reliability predicting network state 
focus anonymous remailers anonymous publishing explain systems benefit reputation describe experiences designing reputation systems ensuring anonymity 
find example redesign underlying anonymity system support verifiable transactions 
decentralized networks traditional means ensuring accountability participants unworkable 
combined resources individual participants possibly nonexistent central authority top enforcement behavior unwieldy 
number participants grows repeated interactions participants infrequent individuals rely past experience recognize behave badly 
circumstances reputation workable mechanisms keep hostile nodes damaging system 
network purpose provide anonymity reputation problematic 
firstly location protection enables attacker cheaply throw away pseudonym acquired bad reputation 
secondly hard detect verify participant behavior time maintaining anonymity 
thirdly reputation information exploited adversary reduce participant anonymity 
left conundrum network stability relies behavior individual nodes reputation may way achieve 
nick mathewson free haven project net paul syverson naval research lab syverson itd nrl navy mil reputation data hard gather presence anonymity gathered poses potential vulnerability attacker exploit 
security tempting incorrect think reputation simple matter extra service side existing system 
rest illustrate point examples reputation systems designed networks provide pseudonymity anonymity 
outline incentive structures involved deploying networks 
economics anonymity confidentiality encryption anonymity created sender receiver 
alice decide send anonymous messages trust infrastructure provide protection infrastructure 
anonymity systems messages hide messages senders consumers anonymity providers cover traffic creates anonymity 
users better crowded systems noise users provide 
high traffic necessary strong anonymity agents balance incentives find common equilibrium system 
high traffic create enables better performance system processes light traffic delay messages achieve adequately large anonymity sets 
systems process traffic necessarily provide best hiding trust distributed high volume system vulnerable insiders attackers target trust bottlenecks 
anonymity systems face surprisingly wide variety direct anonymity breaking attacks :10.1.1.24.6256
additionally adversaries attack efficiency reliability nodes try increase cost running nodes 
factors combine threaten anonymity system 
back point anonymity systems usability efficiency reliability cost security objectives affect size user base turn affects degree anonymity possible achieve early economics anonymity focused incentives participants act senders nodes providing results firstly systems attract cover traffic low sensitivity users attract high sensitivity users 
weak security parameters smaller batches lower latency may produce stronger anonymity bringing users 
attract cover traffic may address fact users want realize want anonymity protection 
secondly high sensitivity agents incentive run nodes certain hop honest 
optimal level conditions agents opt accept cost offering service order gain cover traffic 
thirdly economic reasons distributed trust deployment completely decentralized system involve coordination costs unfeasible 
central coordination authority redistribute payments may practical provide trust bottleneck adversary exploit 
reputation systems discuss enable users direct traffic reliable nodes giving high sensitivity agents incentive provide reliable service making network reliable 
examine designs reputation systems anonymity networks 
example remailer networks remailer networks allow people send receive mail protecting identities 
today remailer networks handful long lived static servers fairly uniform reliability 
currently deployed reputation systems send periodic test messages remailer determine currently working 
pinging approach works small static list servers 
network small static set remailers potentially vulnerable funded adversary variety ways denial service remailer compromise 
better resist funded adversary remailer network grow nodes properly distribute trust 
pinging reputation breaks environment network transient volunteer nodes 
hand adversary render growing dynamic network useless flood unreliable remailers manipulate reputation system improve standing remailers owns 
reputation system aims improve remailer reliability 
remailer reputation positive negative performance 
successes adversary pump reputation sending messages node ignoring messages 
hand recording failures insufficient new unreliable remailers rated better remailers consistently perform 
design remailer message path passes back receipt 
senders successively query receipts determine remailer blame delivery failure 
remailer refuse provide receipt particular message didn try send message tried unable obtain receipt hop 
solve problem pinpointing failures introducing set weakly trusted global witnesses 
witnesses contacted hop path refuses message allowing remailer prove best effort delivery attempt 
senders tell witnesses remailers silently dropped messages meaning got copy attempt pass 
witnesses verify tally failures send test messages distinguish reliable remailers new ones tested 
reputations available client software choose reliable remailers sending anonymous mail 
reputation system attempts improve reliability long term sense giving provable delivery guarantees message 
hand relies proofs correct behavior establish reputations trusted witnesses determine keep track 
witnesses trust bottleneck communications bottleneck 
anonymity breaking adversary adequate budget best provide service possibly attempting dos high quality providers 
usual performance efficiency metrics distinguish bad guys 
reputation system away trusted witnesses proofs favor self rating groups remailers 
remailers arranged cascades fixed paths network batches messages go synchrony 
new cascades formed regular interval daily formation cascades generated random value set collaborating remailers predict remailer cascade long remailer honest 
remailers send test messages cascades receive evidence failure client senders 
depending proofs remailer performance cascade fails member cascade declared failed 
members cascades fail interval increase reputation members cascades fail decrease 
harder head remailer cascade fail fail selectively cascade members responsible portion messages go cascade batch 
effect member head messages 
similarly tail cascade sends outgoing message cascade members just directly recipient 
attempt deliver message recipient 
efficiency communication final delivery improved delivery receipts feasible 
remailer reputation systems necessary redesign remailer protocol track remailer behavior 
case added receipts delivery remailer ultimate destination added trusted witnesses verify delivery record success failure 
second case usual remailer cascade protocol messages inside cascade introduced new protocol sending messages cascade delivering messages cascade 
example anonymous publishing free haven describes design publishing system resist attempts powerful adversaries find destroy stored data 
provides anonymity readers publishers hides locations servers store serve documents 
related designs freenet publisher document servers holding document determines lifetime 
counter malicious servers publishers break documents shares adequately sized subset sufficient reconstruct document 
servers trade shares allowing servers join leave smoothly providing moving target adversary hunting particular share 
prevent selfish malicious users filling available disk space publish provide servers servers form contracts store material certain period time 
servers cheat drop data early free haven employs reputation system limit damage done servers misbehave 
successfully fulfilling con tract increases server reputation ability store data servers 
gives incentive server behave long cheating servers identified 
dynamic anonymous environment difficult reliably notice server drops data early 
give original publisher task monitoring availability documents broadcast claim particular document dropped early 
don want rely original publisher assign random server shepherd document 
dynamic solution buddy system publishers put copies share copies watch broadcast complaint disappears 
wishing claim misbehavior signed contract indication file kept number special cases signed contract sufficient proof pinpoint particular server culprit server traded share away contract expired 
claim taken absolute proof servers left grim task trying determine credibility servers disagree need way determine believe 
keeping track claims tracking results give server information reasonable guesses validity claim 
approach gets complex quickly leaves lots holes smart adversary 
providing way verify claims free haven remains open problem 
experience designing remailer reputation systems promising redesign entire system ground time verifiable claims mind 
designing original system clear idea reputation verifiability requirements free haven design complex brittle 
tempting scale reputation system 
servers local information transactions trades 
scenario new server separately convince server encounters reputable server allow publish data 
news bad behavior propagate servers conservative offering resources unfamiliar nodes 
prevent stabilization static network small number nodes trading data ignoring newcomers servers explicitly risk resources new nodes 
global gossip system world learns server interaction new server chance waste time resources server screw attack 
interesting point free haven reputations servers reputation capital obtain proportional resources servers 
order build reputation allows server store certain amount system think credit limit server previously successfully stored size documents 
server able commit current credit limit new contracts successfully completing contract raises credit limit 
server cheat amount useful done server forced perform useful 
say notion spending reputation quantifying risk 
reputation anonymity examples described associate non transferable reputation long lived pseudonyms nyms short ways vary formula 
entities may anonymous short lived names reputations may short lived transferable bindings nyms entities reputations may varied 
noted free haven server acquire spend reputation 
central register registers keep track server current reputation credit level server maintain view system 
small step consider systems reputation paid form coins tokens 
system entity maintain reputation changing nyms 
entity holds different nyms different contexts benefit feature preserve reputation independent private key compromise maintain perfect forward anonymity compromises linking nym entity reveal previous transactions entity bearing nym past behavior nyms logged 
advantages reputation come potential problems 
example entity obtain reputation context functioned spend context 
entity transfer reputation entity entirely 
capability controlled cryptographic techniques bind reputation nym entity revealing nym entity concerns approach 
example diminish reputations bad performance model 
possible bind reputation tokens entity anonymity preserving way may possible bind duration amount reputation evaluated respect time reputation bearer existed 
distinguish longstanding low performing entities untested ones 
hand contexts transferable reputation may problem 
example system free haven pays performance system services long amount service credit taken system amount service provided matter credit transferred 
new directions questions reputation systems gathering momentum internet 
special purpose systems ad hoc rolled online auction services messaging protocols online discussion sites 
despite growing body experience building simple reputation systems designing complex ones anonymity systems questions remain intriguing solutions 
fine tune reputation system response specific threat model 
relatively environment tracking isp uptime ordinary statistical models suffice 
statistical models assume data biased worst maliciously chosen adversary wants particular decision 
point emphasis current research shifts predicting behavior minimizing risk 
really necessary abandon statistical rigor 
field machine learning rich history lot experience solving related problems 
way adapt solutions adversarial context 
similarly statements aren verifiable adversary lie real interactions fabricate spurious interactions lie 
try credibility charts weight statements credibility smart adversary try trick credibility calculations 
somebody finds way establish bounds malicious influence system range problems solve reputation explode overnight 
seen reputation enhance privacy 
go step assign reputation expectation protecting privacy 
distributed privacy systems privacy provided typically assumption subset system components perform duties correctly reveal parts data operations 
privacy destroying adversary offer reliable service information various compromised system elements compromise privacy 
say meaningful reputations reliability keeping secrets limited making statements probability privacy compromise likelihood structure component compromise 
treat reputation currency 
currency implies economics 
get reputation currency 
currency approaches imply transitive trust 
supply reputation currency constant increasing decreasing 
expire slowly lose value time 
ultimately currency come decentralized federal reserve 
materialize side effect performing system 
credit 
currency appear system bootstrapped 
currency global individual servers mint currencies 
evolve viable market scalable local currencies issued individual servers 
global currency bootstrapped local currencies 
number diversity real world reputation systems staggering 
byzantine mass credit reports product reviews earnings statements flat gossip information channels try convince honesty competence 
process expose far detail wish 
online reputation systems promise complex difficult build real world analogues hold promise enabling decentralized interaction protecting privacy ways today systems trust 
dingledine syverson 
economics anonymity 
camp wright editors financial cryptography fc 
springer verlag lncs forthcoming 
back ller 
traffic analysis attacks trade offs anonymity providing systems 
moskowitz editor information hiding ih pages 
springer verlag lncs 
clarke sandberg wiley hong 
freenet distributed anonymous information storage retrieval system 
workshop design issues anonymity unobservability pages 
citeseer nj nec com clarke freenet html 
dingledine freedman molnar 
reputation system increase reliability 
moskowitz editor information hiding ih pages 
springer verlag lncs 
www net papers html 
dingledine freedman molnar 
free haven project distributed anonymous storage service 
workshop design issues anonymity unobservability july 
dingledine syverson 
reliable mix cascade networks reputation 
blaze editor financial cryptography fc 
springer verlag lncs 
friedman resnick 
social cost cheap pseudonyms 
journal economics management strategy 
neff 
verifiable secret shuffle application voting 
samarati editor th acm conference computer communications security ccs pages 
acm press november 

pinger anonymous remailers 
www org 
raymond 
traffic analysis protocols attacks design issues open problems 
workshop design issues anonymity unobservability 
springer verlag lncs july 
syverson stubblebine goldschlag 
unlinkable serial transactions 
editor financial cryptography fc 
springer verlag lncs 
