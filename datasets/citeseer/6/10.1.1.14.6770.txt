revs robust electronic voting system rui andr paulo ferreira instituto superior cnico technical univ lisbon inesc id alves lisboa portugal rui andre paulo ferreira gsd inesc id pt protocols proposed electronic voting prototypes implemented 
usually prototypes focused characteristics protocol handle properly real world issues fault tolerance 
presents revs robust electronic voting system designed distributed faulty environments internet 
goal revs electronic voting system accomplishes desired characteristics traditional voting systems accuracy democracy privacy verifiability 
addition revs deals failures real world scenarios machine communication failures witch lead protocol interruptions 
revs robustness consequences levels voting process interrupted recovered weakening voting protocol ii allows certain degree failures server replication iii servers conducting election certain level collusion corrupt election outcome 
keywords electronic voting fault tolerance robustness blind signatures 

years experiences conducted order facilitate elections 
introduced new ways expressing votes traditional 
examples new voting interfaces systems touch screens sms messages cellular phones distributed voting systems internet monteiro uk 
internet voting systems appealing reasons people getting computers sort things sensitive operations shopping home banking ii allow people vote far usually live helping reduce abstention rates iii may support arbitrary voting ballots check correct fulfillment voting process 
internet voting systems face problems prevent widespread today caltech mit cranor ipi rivest rubin 
problems broadly divided main classes 
class includes security fault tolerance problems inherited current internet architecture 
vital services dns name resolution tampered order mislead users spoofing servers 
ip routing mechanisms protocols managed different organizations deal partial communication outages communication problems may arise 
second class includes problems specific voting protocols 
problems derive assumptions protocols execution environment 
client machines voters trusted order act trusted agents hard ensure personal multi user computers general purpose commercial operation systems 
servers controlling voting process fail ii unreachable iii voting protocol 
protocol done reacting properly client requests trying influence election acting voter 
voting protocol disturbed communication problems machine failures 
third class includes problems may created specific attacks voting protocol running election 
attacks may try get useful outcome subverting voting protocol simply ruin election dos denial service attacks participating machines applications 
kind attack coercion voters happen vote supervision electoral committees 
revs internet voting system designed tackle problems 
particular revs voting protocol involving participating machines supports types communication machine failures keeping distributed loosely coupled state 
voter keeps local state mobile nonvolatile storage allowing resume election anytime 
servers replicated subset needs contacted voter 
server keeps distinct state regarding participation voter election allowing voters get times answer server 
server able act voter provide false replies voters noticed 
collusion servers order interfere election voting prevented certain degree collusion 
revs blind signature electronic voting system witch improved system 
improved order eliminate single entities capable corrupting election managed administrator 
system sensible failures communication servers problem solved revs 
furthermore system problems concerning authentication voters allowing easy impersonation voters servers running election 
revs solved problem redesigning voters authentication algorithm 
prototype revs implemented instituto superior cnico technical univ lisbon support elections quality surveys 
particular scenario revs servers deployed managed separate entities central computer services departments students organizations order reduce collusion 
set trusted machines available voters machine participate elections 
voting ballots signed java scripts downloaded voters machines 
scripts able check correct fulfillment ballots contact correct revs servers submit 
document structured follows 
section presents overview previous stressing witch revs 
section describes protocol achieves robustness 
section describe implementation details revs 
section presents evaluation system section draw 

related researchers working electronic voting research area mainly emphasis decade 
currently consolidate taxonomy classifying electronic voting systems defined sets protocols implementing 
start brief presentation taxonomy alternative protocols describe system managed administrator designed revs 
researchers electronic voting field reached consensus pack core properties electronic voting system cranor cytron accuracy possible vote altered possible validated vote eliminated final tally possible invalid vote counted final tally 
democracy permits eligible voters vote ensures eligible voters vote 
privacy authorities link ballot voter cast voter prove voted particular way 
verifiability independently verify votes counted correctly 
accuracy democracy verifiability cases today electoral systems assured presence representatives opposite parties 
privacy property currently assured existence private voting allowing voters cast votes secrecy 
particular nature internet environment requires robust internet voting systems 
define robustness join characteristics collusion resistance electoral entity server participating election group entities running election conspiracy introduce votes prevent voters voting 
entities conspire property isn achieved 
characteristic measured terms total number entities conspire guarantee successful interference election 
availability system works properly long poll stands voter access poll 
resume ability system allows voter interrupted voting process resume restart poll stands 
electronic voting protocols proposed far mainly divided different approaches protocols blind signatures sako cranor cytron okamoto protocols mix nets chaum park sako kilian ogata protocols homomorphic encryption benaloh fischer benaloh yung benaloh benaloh sako kilian cramer cramer hirt sako 
approach pros cons ones blind signatures flexible 
blind signature systems open kind ballot formats computational complexity homomorphic systems 
chose type system revs 
proposed blind signature protocol know foo blind signature voting protocols 
cranor cytron sensus proposed voting protocols systems foo 
don control power administrator 
proposed managed administrator protocol evolution reducing power administrator 
revs modified system order fault tolerant assuring availability 
furthermore modified algorithm authenticating users proposed personification problems 

managed administrator tackles common problem voting protocols blind signatures preventing administrator introducing ballots election 
idea ensure accuracy sharing power election administrator servers administrators required signatures ballot valid 
additional signature manager ensures democracy 
overview protocol voter contacts manager obtains ballot fills contacts administrators signing ballot 
voter gets manager signature signatures previously obtained administrators submits vote counter anonymizer protects voter privacy counter 
manager trusted 
threshold system uses password voter administrators manager 
entities know password advance unix validation 
small set administrators manager generate false votes voter password get 
fraud may administrators voter password get signatures administrators manager anonymizer counter administrators contacted voter send manager signed vote accept send counter 
administrators 
required signatures equal 
improving performance low value possibility attack negligible 
manager self introduce votes participation entity 
blind signatures class digital signatures consisting getting message digitally signed giving knowledge message signer 
putting document sheet carbon sealed envelope somebody signs outside 
removing envelope get signed document 
voters managed administrator kind fraud discovered servers logs 
manager part collusion refuse sign votes saying error occurred just refusing connection busy 
case votes refused voters pass undetected 
authentication method revs username password uses different password server preventing voter personification administrators 
details authentication scheme section 
problem respecting robustness system existence single manager replication anonymizer counter taken account proposal 
manager sign ballots responsible ballot distribution 
malfunction server leads interruption election single point failure 
system ensure availability 
furthermore manager performance bottleneck considering large scale elections 
single points failure avoided increase availability properties robust electronic system section 
revs single points failure 

revs voting protocol revs types servers commissioner ballot distributor administrator anonymizer counter 
module voters support participation elections performing proper interactions election servers get ballot get signed election servers submit ballot 
commissioner similarly systems revs commissioner 
systems commissioner election supervisor receiving complains voter electoral server 
received complains raise suspicion investigation find causes 
commissioner revs responsibility preparing election generating keeping secret election keys signing ballot questions defining operational configuration election addresses public keys servers number required signatures 
ballot distributor ballot distributor responsible distribution voters data set commissioner election ballots operational configuration 
procedure expensive terms data exchange decided introduce dedicated server revs 
information distributed ballot distributor signed commissioner voters trust 
may ballot distributors 
replication reducing load ballot distributor improving efficiency large scale elections provides protection communication machine failures affecting distributors bringing robustness distribution process 
administrators administrators electoral entities power decide acceptability ballot voter 
ballot acceptable final tally election minimum set signatures different administrators 
total number administrators voter get valid signatures different administrators ballot acceptable 
impossible voter get valid votes 
voter uses different password get signature administrator 
administrator derive passwords knows show section impersonate voter 
anonymizer anonymizer server provides anonymity voter machine preventing counter associating ballot machine owner 
voter choose number ones participating election 
anonymizer hides voter location randomly delays shuffles submitted ballots sending counters 
randomization ballot submissions prevents time analysis trying discover voters ballots hour voted 
counter counter server verifies validity ballots verifying required signatures ballot 
counter removes repeated ballots verifying bit commitment voter ballot signing phase see section performs tally 
voters send final ballots counters encrypted public key election preventing counters watching votes election 
counters analyze votes election ends commissioner releases election key private key 
revs allows configurations single points failure 
configurations counters reachable independent anonymizer 
case existence counters voters send theirs ballots counter correctly anonymizer counters 
means different counters get different sets votes election sets may contain repeated votes 
selected master counter obtains final tally gathering valid votes counters discarding repeated ones 
person access ballots collected counters act master counter 
increases confidence election outcome 

protocol revs protocol allows flexible replication servers involved election process 
ballot distributors separated logical function different server leading modular system 
restriction number required signatures ballot valid greater number administrators 
voters point view revs protocol divided steps see detailed messages ballot distribution voter contacts ballot distributor get blank ballot election 
ballot distributor returns requested ballot election public key election operational configuration signed election commissioner 
done phases 
voter contacts ballot distributor provides voter id receive list election participate 
voter chooses election requests ballot ballot distributor 
ii 
ballot signing expressing ballot voter commits ballot digest random bit string blinds committed digest random blinding factor 
voter sends blinded committed ballot digest administrators signing 
voter module saves answers bit commitment blinding factor non volatile storage preferably provided mobile media 
enables voter resume participation election affects voter privacy 
administrator receiving request signing verifies signed requesting voter 
signs saves signature signed administrator returns previously saved data signature blinded committed ballot digest 
receiving signature voter updates blinding factor verifies correctness original ballot digest administrator public key 
process repeated required signatures collected 
note administrators link signatures provided vote signatures voter gets applying blinding factor 
ballot distributors voter ballot distributor vn counter election list administrators iii 
ballot submission step voter constructs ballot submission package joining ballot signatures bit commitment 
time voter save data secure storage 
optional step helps improving accuracy affects privacy 
submits package vn eid election data vn eid bb bb signed voters revs protocol revs protocol diagram data transferred administrator anonymizer ballot commitment signatures ballot commitment signatures vn voter number eid election identification voter password administrator bb blind committed digest ballot encrypted counter public key ballot ballot answers variable variable kb kb variable signatures kb variable signatures kb election list list elections witch voter participate election data ballot questions election configuration administrators signing keys election public key 
signed commissioner note key size bits communications ssl revs protocol details hybrid cryptosystem random symmetric session key election public key anonymizer concluding voting protocol 
voter submit package counter times feels necessary sure ballot reach destination 
election commissioner publishes election private key 
counting process performed counters involves steps decipher submission package election private key 
verifying required signatures administrators 
removing repeated votes ones bit commitment 
length bit commitment large bits revs danger collisions negligible 
tallying remaining votes 
multiple counters master counter collects previous verified votes 
checks repeated votes bit commitment proceeds final tally 
counters publish contents received submission packages administrators publish blindly signed ballots 
publication voter verify vote counted 
vote isn tally reclaim presenting anonymously previous saved vote 
everybody verify relation total number votes total possible valid votes signed administrators 

implementation revs fully implemented java enabling installed executed computational platform 
encryption crypt crypto package 
database back revs servers max version mysql 
election preparation start revs election prepared 
preparation consists generating election key pair registration voters configuration servers 
registration voters consists defining identification username collecting passwords administrators secure passwords recorded unix method 
configuration servers consists installing servers includes generation theirs public private keys setting theirs databases election voter information 
voter module distributed voters registration process downloaded election official site ballot distribution server 
voter module comes commissioner public key 

system security managed administrator systems possible run elections simultaneously 
possibility controlled distributing right ballots voters done prevent voters exchanging ballots ballots voters 
possible voters participate elections authorized 
revs administrator asymmetric key pair election voters manage exchange ballots signatures match ballot discarded 
voter module represents voter important voter trusts 
revs commissioner signs voter module ensuring integrity 
implementing secure application aspects authentication security communications taken account 
revs rmi ssl provide security communications 
establishing connection server voter uses server public key authenticate server 
authenticating voters known username password method 
voter different password different administrator preventing impersonation 
keeping authentication user friendly force voter memorize passwords 
designed algorithm generating necessary passwords small set secrets 
algorithm uses secrets see strong password non trivial password large random alphabetical string activation pin memorized voter 
voter introduces passwords voter module computes required passwords administrator 
algorithm uses digest functions administrator ai knowing voter password pi compute password pj 
known administrator aj 
improved security passwords password pin digest mi digest pi chosen voter 
registration phase voter give actual passwords unix digest password pin mi digest password pin mi pi digest mi pin method authenticate managers 
possibility give passwords voters allow choose new ones 
password generation 
evaluation functionality revs evaluation functionality revs assumptions 
clarify assumptions evaluate revs considering characteristics section considering usability scalability 
assumptions 
cryptographic algorithms hard break 
revs cryptographic algorithms rsa producing checking blind non blind signatures encrypting keys encrypt submission packages ii triple des encrypt submission packages iii sha required digest computations 
communications secure 
communications revs ssl servers authenticated public keys 
servers voters computers communication gateways vulnerable attacks dos infection trojan horses viruses 
honest correctly 
required number signatures respects 
voter decided save data secure non volatile storage steps ii voting protocol 
commissioner publishes election private key election 
accuracy vote altered destroy administrators signatures 
voter verify vote eliminated final tally examining list received votes published counters correct sending submission package anonymously 
elimination votes counters harder implies elimination vote counters 
signatures verified published votes impossible invalid vote part final tally 
aspects accuracy respected 
democracy voter vote election voter obtain valid votes 
voters vote long administrators anonymizer available 
aspects democracy guaranteed long system works 
privacy assumptions stand part privacy guaranteed 
second part voting protocols proposed far isn accomplished allowing voter prove choice 
verifiability final tally verifying signatures votes summing votes 
voter verify vote correct assumes votes correct signatures 
collusion resistance characteristic depends number administrators required signatures cast vote needs cooperation administrators increases grows 
prevent voter voting administrators conspire preventing voter obtaining required signatures decreases grows 
obvious necessary trade parts property 
availability system available long minimal set servers running correctly 
minimal set ballot distributor administrators anonymizer counter pair 
properties intrinsically depend configuration system 
resume ability explained section voter recover interruption voting protocol long voter keeps voting data bit commitment blinding factor 
robustness revs robust system achieves properties defined section 

implementation evaluation revs designed support large scale elections 
section evaluate prototype revs concerning implementation decisions time spend cryptographic functions voter module administrators amount data transferred 
seen revs run single point failure avoiding bottlenecks 
servers database back implemented way necessary cluster easily implemented improve performance 
design implementation considerations believe revs easily support large scale elections 
evaluate prototype performance tests computer pentium iii processor mb ram running windows xp professional 
regarding voter module determined take half second compute passwords blinding process done ms verification blind signatures done ms revs configuration requiring signatures voter module compute cryptographic functions second 
administrator entity compute cryptographic functions signing blinded ballots 
tests verified administrator takes ms verify voter identity sign blinded ballot 
servers performance necessary analyze amount data transferred protocol 
revs ballot independent voting system assumption analyzing data transfers assume election list kb long election data divided fixed part kb ballot questions election configuration election public key variable part bits long signing keys administrators running election assume ballot answers bits long 
table data transferred revs anonymizer counter chains ballot ballot ballot total total distribution signing submission voter voters kb kb kb kb gb kb kb kb kb gb kb kb kb kb gb data table obtained configuration revs anonymizer counter chains voter submitting counters 
easily seen revs offers data transfer performance 
provides tradeoff increased security data transfer gb additional signature required 
note calculations don take account additional traffic generated communications ssl 
regarding required computation data transfer aspects previously data allows conclude prototype revs efficient large scale elections 

revs electronic voting system able perform faulty environments internet 
revs robust electronic voting system blind signatures tolerates failures communications servers maintaining desired properties voting system 
important characteristic revs ballot independency facilitates kind elections surveys 
implementation revs carefully designed assuring scalability availability largescale elections 
particular revs fully implemented java replication avoid bottlenecks single points failure 
revs sophisticated anonymity mechanism 
authentication mechanism substituted public keys technology largely available guarantee usability system 

practical multi candidate election system 
proc 
th acm symp 
principles distributed computing 
philadelphia usa pp 

benaloh 
verifiable secret ballot elections 
yale university phd thesis yaleu dcs tr 
benaloh fischer 
robust verifiable cryptographically secure election scheme 
proc 
th ieee symp 
foundations computer science 
los angeles usa pp 

benaloh 
receipt free secret ballot elections extended 
proc 
th acm symp 
theory computing 
montreal canada pp 

benaloh yung 
distributing power government enhance privacy voters 
proc 
th acm symp 
principles distributed computing 
calgary canada pp 

caltech mit 
voting 
available www vote caltech edu reports chaum 
untraceable electronic mail return addresses digital pseudonyms 
comm 
acm 
california internet voting task force 
report feasibility internet voting 
available www ss ca gov executive cramer 
multi authority secret ballot elections linear 
proc 
advances cryptology eurocrypt 
berlin germany lncs pp 

cramer 
secure optimally efficient multi authority election scheme 
european trans 
telecommunications pp 

cranor 
voting florida easy answers 
ubiquity 
cranor cytron 
sensus security conscious electronic polling system internet 
proc 
hawaii international conference system sciences 
hawaii 

multiple administrators electronic voting 
mit bs thesis 

practical secret voting scheme large scale elections 
proc 
advances cryptology queensland australia lncs pp 

secure electronic voting world wide web 
mit ms thesis 
hirt sako 
efficient receipt free voting homomorphic encryption 
proc 
advances cryptology eurocrypt 
bruges belgium lncs pp 

ipi internet policy institute 
report national workshop internet voting issues research agenda 
available www org research voting report pdf jakobsson 
practical mix 
proc 
adv 
cryptology eurocrypt espoo finland lncs 

dns security 
proc 
networking conference 
lisbon portugal pp 

monteiro 
sistemas de electr 
fct lisbon university tr 
portuguese 
security criteria electronic voting 
proc 
th nat 
computer security conf 
baltimore usa 
ogata 
fault tolerant anonymous channel 
proc 
information communications security 
beijing china lncs pp 
okamoto 
receipt free electronic voting schemes large scale elections 
proc 
workshop security protocols 
paris france lncs pp 

park 
efficient anonymous channel election scheme 
advances cryptology eurocrypt 
norway lncs pp 
rivest 

electronic voting 
proc 
financial cryptography 
grand islands 
rubin security considerations remote electronic voting internet 
comm 
acm 
sako 
electronic voting schemes allowing open objection tally 
trans 
ieice pp 

sako kilian 
secure voting compatible homomorphisms 
proc 
advances cryptology crypto 
santa barbara usa lncs pp 

sako kilian 
receipt free mix type voting scheme practical solution implementation voting booth 
proc 
advances cryptology eurocrypt 
saint malo france lncs pp 

uk 
www gov uk 
