wordsieve method real time context extraction travis bauer david leake computer science department lindley hall indiana university avenue bloomington leake cs indiana edu www cs indiana edu leake 
order useful intelligent information retrieval agents provide users context relevant information 
presents word sieve algorithm automatically extracting information context documents consulted web browsing 
information extracted stream documents consulted user wordsieve automatically builds context profiles differentiate sets documents users tend access groups 
profiles research aiding system index documents consulted current context pro actively suggest users similar contexts 
initial experiments capability match documents task contexts consulted wordsieve indexing outperformed indexing term frequency inverse document frequency common document indexing approach intelligent agents information retrieval 
intelligent information retrieval agents emerging class software designed aid computer users various aspects 
observing user interaction computer determine contextual cues agents suggest information useful current context 
research studied formalization context rich context representations proposed 
circumstances information retrieval agents function strongly constrain context extraction methods representations practical 
order provide robust support information retrieval agents automatically generate context descriptions wide unpredictable range subject areas order provide information useful decisions real time rapidly possible 
need handle unpredictable subject areas intelligent information retrieval agents generally forgo carefully crafted pre specified context representation travis bauer research supported part department education award 
david leake research supported part nasa awards ncc ncc 
schemes favor representations gathered implicitly observing user working task context 
systems seek aid user retrieving documents relevant user current context common approach analyze content current document accessed retrieve similar documents assumption documents similar content useful current context 
systems index documents term frequency inverse document frequency term approach focuses relationship document corpus 
particular tfidf take account contextual cue order documents accessed 
goal develop practical method information document access patterns help improve standard techniques selecting context relevant documents 
developing context extraction algorithm called wordsieve take advantage implicit contextual information provided considering user document access patterns time 
considering information developed order documents accessed algorithm able suggestions reflect content documents documents content tend consulted 
wordsieve implemented intelligent information retrieval agent calvin observes users browse world wide web indexes documents access context suggests documents similar contexts 
success approach measured selects documents appropriate user task context explicit description task available system 
initial experiments calvin monitoring users browsing tasks wordsieve outperformed tfidf matching documents tasks accessed 
organized follows 
discuss issues involved selecting context model intelligent agents 
describe wordsieve algorithm performance initial experiments 
discuss issues raised relationship previous research 
content context 
issues addressed context theory disambiguating sentence meanings respect specific context disambiguating sentence am 
similar issues arise determining relevant content documents context 
example explicit content document written middle ages monk food preparation constant context relevant content changes depending context 
person interested finding order document different context person interested cooking context different answer question document information retrieval agents generally retrieve document content commonly treat document independent entity account relationship entire corpus immediate group consulted contrasting view see 
documents accessed 
example tfidf indexing index vector created document magnitude element indicates term represents contents document frequency document inverse frequency documents corpus containing term 
term occurs frequently document rarely occurs corpus heavily weighted term vector 
practice approach provides robust results collections 
reflect potentially useful information access context considers relationship documents corpus context documents 
research wordsieve guided hypothesis relevant features document depend different document captured tfidf similar documents accessed 
words context document reflected content documents accessed 
fig 

percentage occurrence term genetic user search session 
illustration consider 
graph represents occurrence word genetic web pages course web search 
access pattern shows clear partitions distinguishable occurrence pattern word genetic word genetic occurred frequently user searching pages genetic algorithms artificial life software hypothesis terms type access pattern useful indicators context user browsing task 
tfidf works exhaustively analyzing corpus extracting comparing word occurrences 
reasons undesirable 
time consuming 
information agent system needs respond learn real time 
second information agent desirable store entire full text library documents user accessed 
wordsieve overcomes weaknesses able learn terms real time building information incrementally requiring entire corpus analyze time 
wordsieve algorithm context extraction wordsieve goal find terms associated document access patterns 
word sieve algorithm finds groupings documents tend accessed indexes documents frequently occurring terms partition documents 
hypothesis terms indicators task context 
evaluate hypothesis section 
wordsieve automatically extracts terms associated sets document accesses explicit task descriptions wordsieve require user specify task finished begun 
need user artificially limit browsing behavior provide task related information user practice 
wordsieve context representation system design reflect constraints affecting real time information retrieval agents assist users perform tasks 
system relatively compact consume limited resources 
example require storing re processing previously accessed documents consequently accumulate contextual information way 

system run real time 
suggestions user performing task relevant 

system develop user profile reflecting access patterns particular user order provide personalized recommendations useful user 

system able user profile produce context profile user accessing documents reflecting user current task 
wordsieve architecture wordsieve network consists small interdependent levels nodes 
function analogous sieve trapping partitioning words reflect user context 
nodes level contains small number attributes word real number values 
word associated node change time 
architecture current version wordsieve shown 
word sieve processes documents passing word level words encountered document 
levels get information solely survives level 
examine level individually consider system performs 
level fig 

word sieve diagram level level learns words currently occurring frequently stream text passing needing refer database pre indexed documents 
trap word occurs frequently including intention layer select small number common terms experiments level contains nodes associated single term 
nodes level directly record times words occur 
occurrence word text stream increases excitement associated node 
control growth processing step excitement nodes level decreases rate decay word passed sieve base rate decay 
short words sieve excitement node decreased desired effect excitement node related frequency occurrence corresponding word texts 
precisely node activation levels characterized threshold frequency rate goal representing percentage occurrence term excitement term associated node increase 
word occurs frequency node tend maintain level excitement 
word occurs frequency node decay excited time excitement decrease 
word occurs frequency greater opposite occurs node excited decays excitement level tend increase 
word enters level wordsieve things depending corresponding node level 
node corresponding word excitement increased defined 

node corresponding word word gets chance take node assigned word 
process node randomly chosen sieve 
node re assigned new word probability way word high excitement value replaced 
word low excitement value greater chance replaced 
proper operation level depends low terms increasing values level network unable distinguish ones occurring frequently 
high words decay fast resulting decay frequently occurring words 
correct value depends distribution word frequencies incoming text stream 
level continuously adjusts value keep excitement levels nodes increasing rest decreasing 
document reset new value equation 
equation number nodes excitement values greater initial value nodes assigned word number nodes level 
result level identify approximation frequently occurring words stream text keeping track words occurring keeping database documents accessed 
return wordsieve sacrifices absolute precision complete determinism 
probabilistic element algorithm system produce slightly different values time run 
shown sufficiently precise system produces reliably similar results time run 
level words occurring document sequences nodes level identify words tend occur sequences document accesses 
experiments level contained nodes 
level direct access stream text words corresponding nodes level 
node layer associated word real values excitement priming 
excitement node increases word continues high excitement values level 
priming determines fast excitement node change 
excitement priming allowed values 
pass words word sieve level sequentially 
word level node excitement decays node priming decays 
node word priming increased decay amount 
node excitement increased function priming 
word trapped level probabilistically replaces node manner similar described 
level terms currently frequent text stream level keeps record words tended occur frequently different times 
level remembers words occurring text stream slowly forgets 
nodes non discriminators get high values level nodes terms partition set 
level words absent document sequences function level similar level 
nodes achieve high excitement correspond words occur infrequently periods time 
specifically nodes automatically exactly words level 
nodes keep low level excitement word stops occurring increase excitement value long word occur 
non discriminators get high level activation level nodes exist 
partition words reflect user context achieve higher activation levels 
wordsieve output criteria architecture specified user context profiles generated system 
derived nodes levels follows 
user profiles define user profile set words tend partition user document accesses groups 
words occurrence patterns shown 
wordsieve experienced reasonably diverse set document accesses user profile extracted nodes levels 
user profile consists set words corresponding nodes levels word associated product excitement values levels 
words high products tend desired occurrence patterns 
note user profile different user depends user patterns document access 
profiles enable system learn kinds documents user accesses group identify terms indicate context user working 
having identified context system index document context suggestion identify previously indexed documents may helpful user aiding personalization recommendations 
context profiles user accessing documents wordsieve build profile current context 
intuitively context profile consist words frequent particular document stream high values user profile 
achieve wordsieve multiplying excitement values words level values upper levels 
words characteristic sets document sequences 
evaluation evaluated performance algorithm ability index documents search task user context defined topic users unavailable wordsieve 
tests wordsieve able strongly match documents task context tfidf 
software data collection experiment calvin intelligent agent research assistance 
system designed observe person computer suggest resources helpful similar contexts past 
calvin uses wordsieve index documents 
experiment experiment examined comparative performance wordsieve tfidf matching document seen context original search task described term vector representation search phrase 
search phrase vectors compared vectors produced wordsieve profiles tfidf 
subjects separately searched www minutes 
time asked perform tasks 
minutes told load browser pages genetic algorithms artificial life software minutes asked search information tropical southeast asia document accessed browser automatically recorded 
html tags stripped punctuation filtering done pages accessed 
page pages pages contained advertisements filtered 
data collected represents realistic sampling kinds pages intelligent agent handle observing user accessing www 
provide evaluation criterion documents pertain user search page documents hand tagged noise documents documents hand tagged belonging genetic algorithm butterfly task 
tags available wordsieve 
users accessed average documents minute session 
average accessed noise documents relevant documents 
total different documents accessed determined relevant 
documents accessed user determined relevant documents 
user browsing documents stored 
data run wordsieve series simulated browsing sessions 
sessions classes calvin wordsieve released open source java package available www cs indiana edu 
simulated sense user browser data processed wordsieve order user accessed pages omitted 
simulate multiple task changes single simulated browsing session consisted passing data user session wordsieve times 
information system user alternated searching information genetic algorithms information times minutes 
having built context model wordsieve vector relevant document simulated run computed running document empty level multiplying resulting node values values levels 
vector tfidf computed salton 
word document weights word vector defined equation 
resulting vector compared original query 
similarity original query calculated cosine similarity metric shown equation 
cases computing vectors doing comparison algorithms access documents user session 
user session treated independently 
consistency results wordsieve probabilistic algorithm produce exactly results time run 
test performance variation simulated user sessions run wordsieve times results compared 
variation individual rankings documents variation statistically significant repeated measures anova test 
suggests wordsieve works probabilistically consistent relatively small set data experiment minutes worth browsing 
suggests results experiment results lucky runs simulation data set large faithfully represent abilities algorithm 
performance vs tfidf viewing document isolation wordsieve better able match document original context tfidf 
repeated measures analysis variance shows findings statistically reliable 
comparison wordsieve tfidf shown 
table reports average similarity relevant documents users original tfidf wordsieve mean standard deviation context measured tfidf wordsieve 
wordsieve mean performance task surpassed tfidf 
shown figures patterns generally hold true breaking comparisons context user 
wordsieve outperformed tfidf cases users performed 
larger set users difficult determine cases 
may significant accessed relatively small number relevant documents user accessed fewer 
analyses show results reproducible diverse subsets data 
discussion fig 

comparisons user wordsieve extracts context information documents form keywords 
standard intelligent information agents purposes document retrieval natural approach 
results experiments suggest benefit account extra contextual information available user document access patterns effectiveness wordsieve algorithm task 
experiments suggest keyword occurrence patterns exist user document accesses time patterns help characterize context fig 

comparisons query document accessed compared method tfidf unable capitalize information 
results suggest viability small short term memory level probabilistic networks learning user context experiments long term studies needed 
research raises issue constitutes context instance web search 
experiment defined context relevant terms topic users asked search 
number comments received users performed experiment question assumptions 
users trouble butterfly query genetic algorithm query 
users commented information particular kind butterfly asian general 
suggests user perception context informed explicit task user kind information user suggests context defined users asked find asked find plus find 
type context description generated asking users write keywords thought characterized web pages original question augment task description 
expect tfidf wordsieve benefit expanded queries comparative performance patterns algorithms hold 
believe improve algorithm performance 
sufficiently explored values assigned free parameters system see increase accuracy model decrease variance perfor figures shows documents butterfly query tended rank lower average 
may indicate lack web pages clearly map context 
mance 
level added non discriminators 
words banned upper levels lower levels altogether assuring space profile reserved useful words 
obviously forms contextual information wordsieve take account 
example wordsieve take account location term page able treat document differently user keeps returning 
example consider situation user performs web search clicks links page returning frequently choice 
page probably useful determining context wordsieve treat special way re reading times 
see wordsieve useful tool reflect aspect context augmented richer descriptions 
interesting question concerns account quality document subject domain searched 
wordsieve analysis address 
calvin users set customized filters certain documents indexed filter advertisements error pages increases need user configuration 
relationship calvin intelligent agent learning user context making suggestions information 
best known agent class microsoft office assistant 
bayesian network office assistant infers user goals user behavior suggestions inferences 
office assistant specific model underlying application works suggestions deal software 
agent understanding context tailored special purpose task 
advantage approach ability give specific advice 
advantage gained cost generality 
see comments potential difficulty applying problem specific notion context form broader theory 
calvin potentially suggestions documents loaded application 
claim formal theory context architecture easily transferred document access applications 
margin notes agent suggests previously accessed documents 
calvin indexes documents accessed runtime system pre indexes documents email stored user computer 
user accessing information www user web pages automatically annotated related pre indexed files 
margin notes uses tfidf pre indexing documents understanding context purely content set documents user accesses 
approaches index documents isolation context accessed 
watson observes uses standard software tools browsers word processors generates queries www search engines context relevant information 
watson calvin uses vector representation context 
focuses information immediate task context information user task sequence 
method document parsing helps find significant words larger corpus spirit similar wordsieve automated www search engines gives advantage calvin margin notes suggest documents system users seen 
noted document indices generated wordsieve multiple users indices enable cross user retrievals providing individual user new documents expected interest current context 
techniques data mining rule learning employed record user profiles 
rule learning methods suited finding kinds terms wordsieve learns 
rule learning usually requires database user activity analyze order find rules wordsieve works incrementally real time 
idea learning user profiles making suggestions applied areas text document indexing retrieval recommending television programs 
ptv system builds user profile information explicit descriptions preferences user watching practices 
system preferences users similar profiles 
design challenge facing systems actual contents television programs opaque system contents text documents systems wordsieve 
wordsieve new algorithm characterizing user context analyzing documents user accessing 
algorithm builds user profile document access reflect range user interests generates context profiles reflect user current context 
wordsieve outperforms tfidf initial experiments associating documents contexts accessed 
performance gain specific subset data appears generalize various subsets data examined 
research wordsieve application suggests number questions context studies research especially concerning context intelligent information agents kinds information user context learned automatically implicit feedback 

alexander tuzhilin 
data mining methods build customer profiles 
computer february 

akman surav 
steps formalizing context 
ai magazine 

marko 
interface learning multi topic user profiles implicit feedback 
aaai workshop recommender systems 

benerecetti bouquet ghidini 
contextual reasoning distilled 
philosophical foundations artificial intelligence july 

bruno bouzy cazenave 
object oriented paradigm model context computer go 
proceedings international interdisciplinary conference modeling context 

budzik hammond 
watson anticipating contextualizing information needs 
proceedings second annual meeting american society information science nj 
information today 
budzik hammond birnbaum 
information access context 
knowledge systems 

budzik hammond birnbaum 
similarity 
working notes aaai workshop ai web search 
aaai press menlo park 

smyth 
ptv intelligent personalised tv guides 
proceedings th innovative applications artificial intelligence iaai conference 
aaai press 

marti hearst 
context structure automated full text information access 
phd thesis university california berkeley 

graeme hirst 
context spurious concept 
proceedings conference intelligent processing computational linguistics pages mexico city february 

eric horvitz jack breese david heckerman david 
inferring goals needs software users 
proceedings fourteenth conference uncertainty artificial intelligence pages 

david leake travis bauer anna maguitman david wilson 
capture storage reuse lessons information resources supporting task information search 
proceedings aaai workshop intelligent lessons learned systems menlo park ca 
aaai press 

henry lieberman neil van dyke adriana 
browse collaborative web browsing agent 
proceedings international conference intelligent user interfaces pages 

carlo 
objective cognitive context 
paolo bouquet luigi serafini patrick br massimo benerecetti francesca castellani editors modeling contexts proceedings second international interdisciplinary conference pages 
springer verlag 

bradley rhodes 
margin notes building contextually aware associative memory 
proceedings international conference intelligent user interfaces pages jan 

gerard salton 
automatic text processing transformation analysis retrieval information computer 
addison wesley series computer science 
addison wesley publishing 

roy turner 
context sensitive reasoning autonomous agents cooperative distributed problem solving 
proceedings ijcai workshop knowledge context chambery france 

roy turner 
context mediated behavior 
mira del ali editors lecture notes artificial intelligence methodology tools knowledge systems pages spain june 
springer new york 
