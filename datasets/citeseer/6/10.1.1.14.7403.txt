metadata model semantics peer peer systems jeen broekstra marc ehrig peter haase frank van harmelen kampman marta sabou ronny siebes steffen staab heiner stuckenschmidt christoph tempich vrije universiteit amsterdam marta ronny heiner cs vu nl institute aifb university karlsruhe karlsruhe ehrig haase staab tempich aifb uni karlsruhe de aidministrator bv jeen broekstra kampman aidministrator nl 
peer peer systems new paradigm information sharing systems successfully deployed 
argued current peer peer systems suffer lack semantics 
swap project semantic web peer peer aims overcoming problem combining peer peer paradigm semantic web technologies 
course investigations turned nature peer peer systems requires compromises respect semantic knowledge models 
particular notion ontology really apply find shared understanding domain 
propose data model encoding semantic information combines features ontology concept hierarchies relational structures flexible description rating model allows handle heterogeneous contradictory views domain interest 
discuss role model swap environment describe model creation access 
motivation essence peer peer nodes network directly exploit resources nodes network intervention central server 
tremendous success networks napster gnutella highly visible industry initiatives sun jxta peer peer working group including hp ibm intel shown paradigm particularly powerful comes sharing files internet central repository centralized administration file delivery dedicated solely user needs robust scalable manner 
time today solutions support limited update search retrieval functionality search napster restricted string matches involving just fields artist track 
flaws current systems unsuitable knowledge sharing purposes 
metadata plays central role effort providing search techniques go string matching 
ontology metadata facilitates access domain knowledge 
furthermore enables construction semantic queries 
existing approaches ontology information access assume setting information providers share ontology access information 
peer peer setting assumption longer hold 
face situation individual peers maintain view domain terms organization local file system information sources 
enforcing global ontology setting mean give benefits peer peer approach mentioned 
find way deal existence multiple distributed frequently changing views domain 
propose metadata model combines ontological structures information needed align evolve query processing 
section explain requirements metadata model guided development detail 
section focuses swap environment metadata model 
model introduced section 
section describe methods supporting creation update metadata model 
conclude discussion open problems 
requirements illustrate requirements proposed system short scenario described 
virtual organizations large companies impose complex situation respect number domains conceptualizations documents peer system knowledge sharing 
typically organizational units distributed expertise organizational tasks development marketing 
small case study virtual organization tourism domain real world example 
virtual organization comprises public authorities hotels event organizers 
public authorities require number guests visiting country plan example public transport waste management 
event organizers customize offerings number visitors age 
hotels publish information stay pleasant 
today exchange kind information time consuming error prone available electronic form level 
different organizations diverse objectives different conceptualizations domains 
technical point view different organizations seen independently operating nodes knowledge network 
nodes join disconnect network moment live act independently behavior nodes system 
node may perform tasks 
important acts peer network communicate nodes achieve goals 
apart may act interface interact human user network may access knowledge sources accomplish tasks 
node may knowledge sources associated 
sources contain information peer available peers 
examples user filesystem mail folders locally installed database 
node designed meet requirements arise task sharing information external sources peers multiple sources information uniform treatment internal external sources multiple views available information support query answering routing distribution information network metadata model needs reflect requirements 
derive main objectives metadata model emphasis information mediation 
integration piece knowledge requires metadata origin 
retrieve external information metadata needs capture information piece information obtained 
information allow identify peer locate resources repositories 
information heterogeneity peer uses local ontology distributed information inherently heterogeneous 
mappings may required overcome heterogenous labelling objects 
information inconsistency information added variety peers inconsistencies may occur local repository 
information needs assigned confidence rating system able handle heterogeneity provide useful information 
similarly level trust assigned peers model reliability 
security information may private nature visible peers 
information may restricted specific set peers 
metadata model needs provide means express security policies 
caching peer peer systems availability peers guaranteed 
peers may better connectivity terms bandwidth rest network peers 
improve network efficiency caching information useful 
caching mechanisms needs transparent user captured metadata model 
swap environment swap environment generic infrastructure designed meet requirements knowledge node proposed architecture shown 
architecture swap node described 
briefly individual components 
fig 

architecture swap node knowledge sources peers may local sources information local file system mail directories bookmark lists 
local information sources represent peer body knowledge basic vocabulary 
sources information place peer physically store information documents web pages shared network 
knowledge source integrator knowledge source integrator responsible extraction integration internal external knowledge sources local node repository 
task comprises means access local knowledge sources extract rdf representation stored knowledge selection statements integrated local node repository annotation statements metadata merging statements ontology user model 
processes described utilize metadata model section 
swap semanticweb org local node repository order manage different information models views information acquired network peer maintains internal working model 
model provides functionality mediate views stored information support query formulation processing specify peer interface network provide basis peer ranking selection working model ontology classical sense 
knowledge structure provides integrated model different structures coexist network peer 
different structures stored single model individual elements model annotated source ranking representing peer belief plausibility 
complete model may contain inconsistencies order receive consistent model part complete model chosen basis plausibility ranking 
user interface user interface peer provides individual views information local sources information network 
views implemented different visualization techniques topic hierarchies thematic maps 
predefined views correspond different sources information 
additionally user define complex views range different sources information 
main challenges peer peer network peers initially dont know 
provides mechanisms discover advertise knowledge pro actively 
function discoverer inferring information peers system know 
pro actively requests information peers network knowledge 
function advertiser publishing expertise node rest peers 
task accomplished sending message peers net peers 
query query component controls process distributing queries 
receives queries user interface distributes content query 
system receives query peer tries answer forward 
answers received passed back graphical interface knowledge adapter scheduled add content local node repository required manipulations explained document 
communication adapter component responsible network communication peers 
serves transport layer parts system sending forwarding queries 
hides encapsulates lowlevel communication details rest system 
swap metadata model swap environment aims providing general view knowledge peer 
facilitate access different information sources enable user take advantage peers knowledge 
metadata model designed provides semantics annotate external internal data 
information different information sources peers integrated metadata model enable retrieval underlying information items 
information source file system information item viz 
file retrievable 
furthermore allows cache information entire network efficiently 
purpose metadata model deal information heterogeneity inherent peer peer systems 
detailed description response objectives define swap specific metadata model rdf 
overview model 
complete definition model available swap semanticweb org swap peer model consists rdfs classes class peer class 
classes properties defined meet objectives described 
piece knowledge object contains meta information 
properties 
property track peer object associated 
uri piece information originally created peer 
keep track origin information primary uri explicitly stored metadata 
information possible unambiguously address object network 
location uri identifier ontology local node repository location attribute physical identifier 
want access document need document object ontology address document accessed file projects myfile txt 
peer information physically stored needs able interpret expression 
location information required doing updates local node repository 
label label saves specific information called peer originates 
label attribute formulated natural language users understand bank financial institution 
uris fig 

swap metadata model machine readable label human readable 
resource different names different peers property added object original object 
confidence peertrust measure reliability specific peer confidence attribute returns describing specific statement 
stored number 
attribute keeps track date related resource added updated local node repository 
determine confidence old information reliable 
furthermore update strategies attribute determine information checked 
security security issues access rights important 
wide open peer peer environment access control required ensure proper usage information 
security mechanism specified detail provisioned attribute 
visibility editing purposes objects hidden completely removed 
achieved attribute 
furthermore cached information annotated property set false 
cache increase network efficiency caching information necessary 
cached information annotated property set date inclusion 
peer piece knowledge remember peer originated 
local node repository stores different information known peer 
information grouped peer object 
object links corresponding peer object 
attribute stored peer object 
peer unique id identified 
purposes jxta uid jxta underlying communication infrastructure second peer attribute stores peer label human readable understandable description peer 
natural text 
example marc ehrig notebook 
peertrust peer attribute measure trust 
peers reliable 
trust responses peers changes message containing true false information 
defined manually specific peers 
control peertrust defined value meaning having trust peer trust worthy 
working model order model described semantics information exchange provide set methods constructing repository metadata model access knowledge stored 
describe methods developed create repository content automatically local information sources rank information repository confidence reliability access parts content repository user comprehensive way 
creation creating metadata comprises ontology extraction ontology integration metadata integration ontology merging 
ontology extraction mentioned swap system provides integrated model different structures coexist network peer 
structures file systems emails databases ontologies 
order include different information sources model extract rdf representation 
extraction just syntactical level existing structure translated rdf representation 
single information items annotated information source specific metadata model 
metadata model built information source manually 
metadata model model information extracted automatically information source 
example shows fragment extracted folder structure 
rdf rdf xmlns rdf www org rdf syntax ns xmlns rdfs www org rdf schema xmlns swap semanticweb org swap common xmlns swap swap semanticweb org swap peer folder rdf swap jxta project rdfs label xml lang en project rdfs label location windows project location folder rdf rdf extracted structures starting point ontology creation process 
suppose extracted information background knowledge wordnet create richer structures 
mean adding implicit semantics explicitly structure 
assume moment determine type certain information item ontological sense describe concept instance property 
extract example folder label project assert concept label swap correspond instance concept 
represent kind statements rdf multiple inheritance mechanism language 
manner just add new rdf type statement existing resource 
automatically assertions probably lead contradictions model 
confidence adjust believe particular statement 
example just changes structure shown peer rdf description rdf swap jxta swap rdf type rdf resource swap jxta project rdf description ontology integration ontology integration important feature adding information local node repository 
integration decide information useful 
ontology integration described filter lets information repository keeps 
metadata previously collected metadata trust peers prove useful defining ontology integration process 
information selected included local node repository annotated metadata described paragraph 
www cogsci princeton edu wn swap project eu 
contract 
eu ist 
metadata integration having built rdf representation information sources processing step objects added 
distinguish information originated ontology extraction process information received peers 
adding metadata extracted structures straightforward 
new object created resource statement 
link object statement construct reification 
properties filled accordingly resource object established relation 
object properties examined detail 
property set date statement added updated 
visibility property set true user included statement resource wants displayed false 
major source information peers 
query results returned rdf graph 
ontology integration process selects information keep 
information added local node repository way information peer 
course property object changes 
peertrust property alter receiving queries 
mechanism described section 
example shows reified statement corresponding information peer rdf statement rdf swap jxta statement rdf subject rdf resource swap jxta project rdf predicate rdf resource rdfs subclassof rdf object rdf resource swap jxta thing swap rdf resource swap jxta rdf statement swap rdf swap jxta swap rdf resource swap jxta swap label project swap label swap uri rdf resource swap jxta project swap location windows project swap location swap swap peer rdf swap jxta swap swap swap christoph swap swap peer ontology merging goal swap system single knowledge representation 
addition resources statements peers just differences shown object local repository different names 
system identify objects similarity measures 
approach ideas 
extend ideas fourth word matching checking labels determine objects name edit distance 
alternatively wordnet find synonyms 
feature matching entity predicates objects chances high object cases 
semantic neighborhood matching checks contextual neighborhood entities 
instance matching look instances classified structure 
indicates similarity classes 
determined similarity diversity 
goal merging algorithm find closest objects merge objects close left apart 
step merging local node repository 
rdf explicit relation equals defined equality relation defined owl shown example peer rdfs class rdf swap jxta label rdfs label xml lang en swap project rdfs label equal rdf resource swap jxta label rdfs class content rating model statements subclassof instanceof peers incomplete vague false 
reason statements accepted peer absolute truth judged previous experience sender 
example sender tells receiver receiver knows sender expert derive fact concepts gorilla small semantic distance sender probably knows average user 
formalize expertise introduce confidence ratings meta statements placed indicate confidence certain statement 
rating methodology involves aspects assigning confidence ratings statements received different peers updating ratings new information peers received ratings determine set peers high probability correctly answering incoming query applying aging mechanism ratings removing statements rating certain value 
describe aspects detail assigning confidence ratings statements peer distinguish derived statements extraction algorithm described previous paragraph statements received external peers 
case assume user confident statements derived assigned high confidence rating 
exact value determined experiments 
second case confidence ratings calculated previous statements sender 
statement provided unknown source gets low initial confidence rating 
unknown mean source provided information receiver 
peer receives information peer unknown statement gets low initial confidence rating 
provided statements statements new confidence calculated 
value weighted average weighting factor determined semantic distance old statement new 
similarity measure adapted :10.1.1.38.6442
updating confidence ratings peers original sender confirm statement repeating statement gains higher confidence 
amount gain depends confidence confirming source 
recursive definition rating pagerank google rank source depends ranks sources voting source :10.1.1.31.1768
important side effect updating confidence ratings confidence expertise original sender automatically increases 
determining experts queried query received receiver tries answer query 
doesn satisfying answer tries find experts topic query 
system tries find experts topics close semantic distance topic query 
similarity measure described 
aging mechanism confidence ratings time swap peer retrieve large set statements peers generated statements ontology extractor 
keep local repository scalable aging mechanism removes statements old combination low rating 
experiments adjust right parameters tuning way remove statements 
access problem model described far fact accessing quite inconvenient model contain actual knowledge management metadata 
solution problem provide user swap system set definable views repository 
views defined management metadata contain 
stripped metadata view treated ordinary rdf model specific part peers knowledge 
describe serql query language define views knowledge repository peer 
discuss features selecting parts repository constructing new rdf models parts 
furthermore describe mechanisms persistently defining views basis providing user visualization peers knowledge particular point view 
serql query language serql rdf query language developed basis experiences implementing different state art query languages rql rdql language currently implemented sesame system store knowledge peers swap :10.1.1.11.8975
main feature serql go abilities existing languages ability define structured output terms rdf graph necessarily coincide model queried 
contrast qel comprehensive syntax :10.1.1.11.5917
feature essential defining personalized views repository swap peer 
coming back issue discuss selection mechanism serql application context selecting parts knowledge repository attached metadata 
selection mechanism serql path expressions borrowing existing languages 
rdf triples seen arcs graph combinations triples form paths graph 
path expressions expressions describe certain types paths trivial graph consisting single triple represented resource property resource 
path expression extract content repository 
example ask classes model expression rdf type rdfs class variable 
course querying variable instantiated resources queried model type class returned result 
order formulate complex selection criteria simple path expressions combined different ways describe subgraphs rdf model 
typical examples compare model reification subclass relations assigned rdfs subclassof swap sequence things visibility set true swap swap visibility true split visible location projects swap swap visibility true swap location projects swap www hpl hp com semweb rdql html join refer location swap location example return result variables bound resource 
order prevent situation general define equality inequality variables serql allows specify boolean restrictions variable binding 
example add restriction state interested pairs non equal sharing location 
furthermore replace directly mentioned resources expressions variables add restrictions query enforce variables equal certain resource literal 
view definitions main new features serql ability retrieve tuples resources match selection statement return complete rdf model result query 
purpose serql query accompanied construction part specifies rdf graph 
specification consists path expression shares variables selection part query 
selection part matches subgraph queried model new rdf graph created instantiating creation part values bound shared variables 
creation mechanism extract certain views repository peer 
basic construction mechanisms create copy matched parts repository 
mechanism extract real knowledge repository attached metadata 
expression example extracts subclass hierarchy instances swap repository construct rdf type class rdf type rdfs subclassof reasons attaching metadata knowledge repository provide criteria extracting certain parts knowledge repository 
part knowledge trusted knowledge provided certain peer 
kind selective extraction knowledge needs sophisticated construction statements 
definition selects subclass hierarchy provided external peer label peer construct rdfs subclassof rdfs subclassof swap swap swap peer possibility define view direct structural correspondence content repository inventing new properties construction part 
possibility example create view describes expertise known peers 
definition example creates model describes concepts certain peers know construct view rdfs type rdfs class swap swap swap summarizing say construction abilities serql provides powerful mechanism extract information user content swap repository 
metadata model chosen swap project provides necessary background information definition meaningful views assist user finding assessing information 
storing views thing observe looking descriptions far inability explicitly refer result query 
fact necessary requirement query view result view definition handled rdf model 
rdf models referred uri 
extension serql construct possible assign target uri query represents virtual model created 
second important point view definition result rdf structure 
view definitions contain construct part select part 
furthermore need able explicitly represent query rdf repository part model 
purpose propose simple rdf serialization views serql serql view id target sesame aidministrator nl serql description just example view definition content 
serql description serql expression serql serql serql construct serql construct serql serql serql serql serql expression serql view simple model suffices purposes assigns id query way done rdf resource target name space refer virtual rdf model defined view 
furthermore include description part supposed contain free text description provided view mainly meant maintenance purposes 
second main part view definition query expression serql language 
modification introduce rdf properties different parts serql query 
properties introduced possible enforce view definition contains construct part referred accessing data view 
values properties just valid serql expressions different parts defined serql grammar 
view definition target uri 
example sesame aidministrator nl simple rdf container serql query expression provides view definition mechanism 
visualizing views achieve main goal swap system satisfying information needs users access information easy understandable 
seen view building mechanism offers flexible way select parts available information render constructs pre defined user 
views rdf files difficult understand human users 
visualization plays important role making views understandable 
employed visualization techniques depend complexity views 
distinguish major scenarios 
simple views expect views instantiated light weight ontologies concept hierarchies instances 
note information classes hierarchy instances obtained serql queries query example 
think views light weight facts 
information systems rely light weight ontologies 
known taxonomies ontologies frequently domains biology chemistry libraries classification systems 
information architects consider taxonomies basic building blocks representing backbone web sites 
non formal taxonomies widely web applications product classification amazon web directories yahoo open directory project odp 
second information sources peers semantically shallow folder structure email structures databases 
current ontology extraction methods capable producing light weight ontologies sources 
cluster map technique specially developed visualizing instantiated concept hierarchies 
visualizing simple views 
cluster map depicts concepts hierarchy instances 
complex views 
construct part serql queries possible extract information complex views defined user 
demonstrated third example serql query introduces new property 
returned answer query contain set resources linked properties structure displayed cluster map 
course just simple example serql allows defining complex rdf structures 
chose types visualizations depicting views different complexity tree technique employed simple concept hierarchies graph technique visualize complex rdf structures 
discussed strength weaknesses 
consider adapting techniques combine benefits approaches 
example eros system specially designed depict complex structures way concept hierarchy visible properties depicted 
related knowledge management peer peer systems topic various active research projects 
edutella provides rdf infrastructure exchanging metadata applications :10.1.1.11.5917
edutella query service intended standardized query exchange mechanism rdf metadata stored distributed rdf repositories 
edutella project focuses education community 
project deals distributed knowledge management peer peer systems 
ontology premise 
creation ontology metadata existing information sources focus cream framework 
uses deep annotation metadata generation active participation allows richer semantics 
order create metadata framework combines presentation layer data description layer contrast conventional annotation remains presentation layer 
emergent semantics builds lightweight file structure files instances heavyweight ontologies different participants created 
idea merging ontologies new 
semi automatic system called prompt propositions user confirm defer 
shows general approach 
matching especially similarity treated covering different dimensions similarity ontologies 
nice overview 
general schema matching algorithm shown 
respect accessing integrating ontology metadata presents methods construct views light weight ontologies 
integration external sources corporate semantic web addressed 
dealt integration knowledge arbitrary applications extraction annotations web sites 
completely distributed nature high degree autonomy individual peers system comes new challenges semantic descriptions 
want benefit advantages normally accompany ontologies specifications shared vocabulary find ways dynamically align semantic models different peers 
described model combines features traditional ontologies rich metadata origin information reliability sources 
furthermore introduced methods creating assessing accessing semantics metadata 
model advantages traditional ontologies context peer peer information exchange 
important feature respect fact statements semantic models seen truth traditional models 
see semantic model collection opinions supported different sources information 
opinions sources agree true opinions shared system contradict opinions 
possible directly extract semantic models information sources completely compliant existing model 
furthermore heuristic methods align update semantic models 
result update shared peers persist harm system 
key issue acceptance heuristic methods course careful evaluation performance general concrete applications 
order evaluate model methods general level test procedures developed swap project simulation techniques experiment large scale peer peer systems 
furthermore case studies swap system tourism finance domain planned 
case studies show general ideas really provide benefits real world applications 
fundamental questions answered case studies sufficient rely structures extracted information sources hand crafted knowledge structures metadata 
may turn addition extraction approach need annotate information hand 
case investigate methods supporting semantic annotation integrated system order build knowledge structures described 

ai knowledge management knowledge bases ontologies 
ieee intelligent systems 
gruber principles design ontologies knowledge sharing 
guarino poli eds formal ontology conceptual analysis knowledge representation netherlands kluwer academic publishers 
ehrig tempich broekstra van harmelen sabou siebes staab stuckenschmidt swap ontology knowledge management peer peer technology 
sure schnurr eds proceedings st national workshop ontologie wow 
appear 

broekstra klein decker fensel van harmelen horrocks enabling knowledge representation web extending rdf schema 
proceedings tenth world wide web conference www hong kong 
rodrguez egenhofer determining semantic similarity entity classes different ontologies 
ieee transactions knowledge data engineering 
levenshtein binary codes capable correcting deletions insertions reversals 
cybernetics control theory 
dean connolly van harmelen hendler horrocks mcguinness patel schneider stein owl web ontology language internet www org tr owl ref 

siebes van harmelen ranking agent statements building evolving ontologies 
proceedings aaai workshop meaning negotiation alberta canada 
resnik semantic similarity taxonomy information measure application problems ambiguity natural language 
journal artificial intelligence research 
page brin motwani winograd pagerank citation ranking bringing order web 
technical report stanford digital library technologies project 
karvounarakis alexaki christophides plexousakis scholl rql declarative query language rdf 
th international world wide web conference 

broekstra kampman van harmelen sesame architecture storing querying rdf data schema information 
nejdl wolf qu decker sintek naeve nilsson palm risch edutella networking infrastructure rdf 
proceedings eleventh international world wide web conference honolulu hawaii usa 
fluit sabou van harmelen ontology information visualisation 
ed visualising semantic web 
springer verlag 
houben eros explorer rdfs ontologies 
proceedings intelligent user interfaces miami florida usa 
peer peer architecture distributed knowledge management 
proceedings rd international symposium multi agent systems large complex systems businesses mal 

handschuh staab maedche cream creating relational metadata component 
proceedings international conference knowledge capture cap 

maedche emergent semantics ontologies support explicit lexical layer ontology learning 
ieee intelligent systems trends controversies 
noy musen prompt algorithm tool automated ontology merging alignment 
proceedings seventeenth national conference artificial intelligence aaai austin tx usa 
syntactic level ontology integration rules commerce 
proceedings th international flairs conference flairs 

maedche clustering ontology metadata semantic web 
proceedings pkdd 

rahm bernstein matching schemas automatically 
tech 
report msr tr microsoft research wa 
volz oberle studer views light weight web ontologies 
proceedings acm symposium applied computing sac march melbourne florida usa 

cao integrating external sources corporate semantic web managed multi agent system 
appear 

ehrig schmitz staab tempich evaluation peer peer distributed knowledge management systems 
appear 

handschuh staab authoring annotation web pages cream 
proceedings th international world wide web conference www honolulu hawaii may acm press 
van dignum abecker eds proceedings aaai spring symposium agent mediated knowledge management 
springer lnai stanford california stanford university appear 
