improving user interface usability mobile agents eduardo mena iis department university zaragoza maria de luna zaragoza spain cps es www cps es iis department university zaragoza maria de luna zaragoza spain es www cps es mena 
adapting graphical user interface gui meet higher level usability users interesting questions today mobile computation 
users gui constructed meet needs habits expectations 
discuss existing solutions solution mobile agents 
mobile agents learn users habits cooperate agents construct gui order meet users expectations 
mobile agents move host host able learn gui usability observing multiple users gui 
addition mobile agents cooperate personal agents order apply personalized changes gui 
result adaptable gui platform strives predict user behavior usable 
show application approach implementing simple business application 
adapting graphical user interfaces guis meet usability challenging questions user interfaces area 
main problems raised fact usability hard measure analyse measured data available multiple instances program 
solutions area mainly focus web site usage metrics user behavior prediction simulation usability patterns 
collected metrics hard analyse implement 
collected data easily misinterpreted due varied levels user expertise external factors influence users fatigue distraction 
solutions aim collect metrics web gui usability data analyse usability advanced approaches try predict user behavior propose measures supported dga project 
increase gui usability 
usability patterns try create general recommendations construct guis achieve better usability 
solutions aim provide line analysis run time solution 
idea transparently predict user behavior adapt accordingly graphical user interface mobile agent systems 
agents highly mobile autonomous intelligent 
cooperate intelligent agents order exchange information maximise performance 
previous demonstrated capability mobile agents autonomously adapt user interfaces various resources collect various types data 
agents collect usability metrics autonomously decide adapt user interface user order improve usability 
contrast solutions mobile agents find run time user interface adaptation collection usage metrics multiple program instances difficult 
classic approach new user interface program updates lead client programs user device happen mobile agents 
prototype adapts user interface mobile agents process user interface definition described extensible user interface language xul 
xul interpretation standard swing interface done platform 
agents automatically adapt interface definition clients interface making user interface dynamic multiple interface implementations unnecessary 
rest follows 
section gives overview state art related 
section give brief overview markov models longest repeating subsequence hybrid solutions evaluation 
section introduces mobile agents extensible user interface language xul gives overview user interface generation 
section introduce motivating example explain bound mobile agents gui prediction models 
section describes sample scenario shows technique 
section explains detail learning process 
section concludes discusses 
state art related measuring user interfaces predicting user behavior concepts 
focus main approaches user interface metrics data mining user behavior prediction usability patterns 
user interface metrics basic concept collect user interface metrics web site 
usually collected data perform tra analysis pages visitors page time analysis page view durations click paths number links graphics web pages 
similarly web pages frequently checked predefined guidance images improving user interface usability mobile agents alt tags pages titles 
approaches tend empirically validate metrics expert ratings pc magazine top web sites 
methods get web site properties usual time users spend page users navigated page pages visited single user 
furthermore learn site built properly alt tags page titles broken links 
methods fail give prediction user behavior results give influenced factors 
data mining user behavior prediction concepts provide concrete methods predict simulate user behavior order test di erent designs 
models treat predict user behavior markov chains 
predictions basing data usage logs 
generally complex high order markov models give better predictions simpler order models 
order models look history 
higher order models provide predictions 
describe markov models detail section 
advanced models longest repeating subsequence lrs information scent perform data mining seeking analyse navigation path server logs similarity pages linking structure user goals 
models incorporate parts markov models order give better results 
models help improving design usability 
evident lack run time support systems analysed authors aim create design time analysis tools web sites 
usability patterns usability patterns describe successful solutions recurring design problems 
hci community usability patterns relatively new concept successfully implemented object oriented design architecture 
idea document share successful solutions improve usability designers 
usability patterns define common design patterns web toolbar contact site map implementing patterns improves usability user interfaces 
porting usability patterns di erent platforms resources easy task documenting patterns remains open issue 
longest repeating subsequence method modifications longest repeating subsequence lrs described earlier methods try predict user behavior 
method developed pitkow pirolli published 
method seen evolution markov methods predicting user behavior path profiles method developed schechter krishnan smith 
decided method comparison markov models simplicity retaining prediction rates markov models 
paragraphs describe briefly methodology 
markov models markov models studying understanding stochastic processes predicting users behavior browsing web sites 
sequences obtained web site logs predict page accessed user 
simplest markov model order markov model 
model predicts user action looking performed action 
evolution model leads looking performed actions second order model leads generalised form th order model 
longest repeating subsequence lrs longest repeating subsequence longest repeating sequence items number consecutive items repeats threshold usually equals 
help illustrate suppose web site containing pages contains link contains links fig 

fig 

formation longest repeating subsequence lrs example suppose users go page page user navigates case fig 
longest repeating subsequence lrs ab 
user navigates page longest repeating improving user interface usability mobile agents subsequence ab abd case 
case abc abd lrs page visited ab longer lrs 
similarly case page visited 
lrs interesting properties 
low probability transitions automatically excluded cases result prediction 
example case threshold penultimate match lrs ab prediction pages possible 
addition case single page page transition repeated part larger sequence included lrs 
hybrid lrs markov models pitkow propose hybrid lrs markov models 
authors propose hop lrs model consists extraction lrs sample data estimating order markov models 
creation hop grams lrs example lrs abcd result ab bc cd 
second method th order lrs model 
model decompresses extracted lrs subsequences possible grams 
model predict orders empirical evaluation hybrid models markov models shows lrs model reduces space necessary storing models satisfying complexity reduction principle 
prediction rate pitkow experiments close means hop lrs model preserves predicting ability reducing complexity 
comparison th models gives similar results 
chosen implement hybrid lrs markov models suitable prototype 
prediction rates hybrid models su ciently complexity reduced 
generating user interfaces mobile agents prototype extensible user interface language xul mobile agents order create user interface 
chosen technology previous enables create flexible user interface able adapt move trough network 
extensible user interface language xul extensible user interface language designed cross platform user interface definition 
language incorporated mozilla project acting user interface definition language 
part mozilla project xul open mozilla projects 
format organized modern user interface definition mind supporting variety available controls 
xul lacks abstraction layer interface definition restricted window user interface 
capable referencing cascading style sheets css define layout elements 
user actions property access functionality stored javascript files 
similar approaches include uiml 
xul suitable open source solution purpose 
mobile agents agent platforms mobile agent program executes autonomously set network hosts behalf individual organization 
agent visits network hosts execute parts program may interact agents residing host working goal :10.1.1.19.4138:10.1.1.19.4138
lifetime agents travel di erent hosts distinct user interface possibilities 
agents typically possess characteristics goal oriented charge achieving list goals agenda 
autonomous independent entities pursue certain objectives decide achieve 
communicative collaborative achieve goal cooperate 
adaptive learning agents learn experience modify behavior respectively 
persistent agent state persist goals achieved 
reactive react environment change behavior 
execution travel host resume 
constitute complete application 
form working conjunction agent host agents 
agents meant intelligent electronic automated boys 
tell want search internet information topic assemble order computer desired specifications know finished 
agents personal agents store user preferences certificates policies perform actions behalf user enforcing security policies :10.1.1.19.4138:10.1.1.19.4138
mobile agent systems mas middleware allows creating executing mobile agents 
project choose grasshopper intuitive stable mobile agent platform supports standards fipa corba rmi :10.1.1.19.4138
addition grasshopper feature enables mobile agents web significant plus comparing platforms voyager aglets :10.1.1.19.4138
improving user interface usability mobile agents mobile agents improve user interface usability previous demonstrated possibilities benefits adapting user interfaces various user devices mobile agents 
idea extend previous build prototype adapts user interface aiming improved usability 
mobile agents particularly suitable adapting user interfaces learning 
agents autonomous communicative goal decide actions environment external factors 
mobile agents endorse push technology agents travel host user prior invitation 
provide transparent resolution environment errors network errors 
prototype mobile agents create swing interfaces plan technology improve user interface usability various user devices html clients wap clients 
created specialised mobile agents learn user behavior 
agents examine usage data order predict probable user action 
exchange data learn user actions keep mind user preferences 
furthermore re designed user interface pushed users mobile agents time gui designers learn usage data 
sample application invoice composition manipulation 
application basic options opening saving closing printing invoice adding items taxes selecting customer 
sample application mobile communicates agents application instances 
user interface adapted user preferences application interactive help guides users achieve goals 
describe sample application detail section 
implemented technology built prototype adapts user interfaces user needs transparent manner designer user 
extended extensible user interface language support demarcation design patterns 
extended tags able determine content position di erent design patterns user interface definition adapt user interface user preferences 
order enhance applications functionality prototyped agents developers extend appropriate class connect classes user interface definition files created described previously 
addition implemented th order lrs model adjusted run time applications mobile agents 
complex hybrid lrs markov model order give better predictions user behavior 
specialised agents applications mobile agents typically consisted agents perform di erent tasks 
agents specialised perform tasks contain expert knowledge achieve goals 
agents learn react environment autonomously provide functionality system application agents 
created specialised agents help adaptation learning process user interface agent agent developed previous serves bridge user mobile agents 
agent capable transforming user interfaces meet capabilities various user devices uses xul user interface definition language 
agent fully extendable agents 
helper agent agent prototype able learn 
helper analyses data collected users suggests probable action 
agent agent specialised agent wanders trough clients collects usage data 
goal exchange data helper agents 
personal agent users store preferences font sizes colours agent 
additionally agent store relevant data accessibility preferences preferences usability patterns user certificates 
fig 

sample application structure fig 
observe composition sample application network topology 
user interface personal helper agent mainly improving user interface usability mobile agents static agent travels network distributes usage data updates 
functionality agents described sections 
sample scenario sample scenario application application mobile agents retrieved network nearest host 
fig 
see sample application windows main window window user execute options new invoice open invoice invoice window invoice new loaded database window fits main window gives additional options save invoice print invoice edit items item control window window enables user add remove items invoice print item details fig 

sample application structure mobile agents case specialised agents autonomously collect usage data users learn user habits th order lrs model 
helper agents predict action performed user display available actions order probability specialised toolbar see fig 

additionally agents cooperate adjust user interface suite user preference 
fig 
observe user interface consists design patterns menu status bar toolbar 
mentioned earlier toolbar helper toolbar serves front helper agent users giving hint fig 

main window basic layout patterns 
probable action 
action predicted probable action action helper toolbar action chances selected user 
user click icon appears helper toolbar perform action 
decided helper toolbar display prediction modifying user interface 
modifying user interface run time confusing users 
learning process learning implemented specialised helper agent 
agent relies th order lrs model 
application training prediction 
users start application helper agent collects necessary data try predict hop 
learning limited just data collected helper agent single user 
agent collect usage data helper agents creates unique usage log distributed helper agents analysis 
acts push service completely autonomous 
means agents chooses host visit data relevant receive updated data 
process lead cient predictions di erent user experiences expertise 
help increasing user expertise users expertise influence predictions supplying better sequences 
helper agent provide better predictions users expertise show application ciently 
improving user interface usability mobile agents fig 
observe select printer window reached edit items window order print item details invoice window order print invoice 
application select printer window serves generating requested report sending desired printing device 
er user hop prediction case helper toolbar user suggested go window directly select printer window 
lead application crash su cient input data perform code select printer window report prepare invoice item 
fig 

helper agent predicts action interaction specialised agents training process goes 
application created usage data 
helper agent repository repository empty 
case fig 
left window helper toolbar empty prediction 
expected application designer provide basic training helper agent application initial predictions 
application requested hosts agent informed instances application depart 
instance visited updated loads initial snapshot usage data helper agent 
loaded data application moves destination host starts 
application collects usage data learns 
fig 
right see helper toolbar displays probable predictions 
occasionally application visited agent 
helper agent agent exchange usage data helper agent experience gets richer 
helper toolbar dynamically updated new predictions 
classic desktop applications probably base learning current user data benefit mobile agent push feature expand training data 
agent pushed user requested user application 
addition agent update user interface definition user interface redesigned improve usability 
helper agent updated latest data snapshot continues operate normally fresh usage data collected mixed snapshot users data 
learning process continues 
observe fig 
options delete invoice suggested users example 
actions ordered probability occurrence item control save invoice print invoice client control 
training period helper agents stops 
fig 

helper agent adapts user interface meet user preferences improving user interface usability mobile agents adapting personal preferences personal agents features helper agent communicate user personal agent 
personal agent stores user preferences supplies information user habits helper agent 
see fig 
user interface change user preferences 
type adaptation focuses usability patterns user interface accessibility problems 
fig 
see users preferences toolbars bottom windows slightly larger fonts status bar 
helper agent adapted transparently user interface user preferences increased usability particular user 
enables users application ciently user saves time application 
autonomous intelligent system mobile agents transparently adapts user interface 
constructed specialised agents predict user behavior suggest actions users real time 
main features approach extend previous system adapting user interfaces various resources mobile agents 
specialised agents built helper agent predicts action th order lrs model predictions improve application usability agent exchanges data application users implements push service capable pushing re designed user interface users 
personal agent stores user preferences cooperates agents order apply preferences 
user interface modified run time 
usage data collected users training time limit 
focused adapting concept various resources html wap 
potential problems discussed adapting usability patterns various resources achieving satisfactory plasticity :10.1.1.19.4138
task models order improve hybrid lrs markov model 
reduction space necessary storing sequences 
definition window tasks system predict tasks window 
measuring usability users various expertise levels 

mena adaptive user interface mobile devices th international workshop design specification verification dsv springer verlag lecture notes computer science vol 
pages 

pitkow pirolli mining longest repeatable subsequences predict world wide web surfing nd usenix symposium internet technologies systems usits 

se ah multiple user interfaces task driven patterns oriented design model th international workshop design specification verification dsv springer verlag lecture notes computer science vol 
pages 

chi pirolli pitkow scent site system analyzing predicting information scent usage usability web site acm chi conference human factors computing systems 

se ah usability usability patterns patterns usable accessible common developers workshop patterns practice acm chi conference minnesota april 

deshpande karypis selective markov models predicting web page accesses university minnesota technical report 

gri oen appleton reducing file system latency predictive approach usenix technical conference cambridge 

mobile agent security proxy agents trusted domains nd international workshop security multiagent systems st international joint conference autonomous agents multi agent systems aamas dfki research report pages 
sourceforge net 
etzioni weld intelligent agents internet fact fiction forecast ieee expert vol 
pages 
ivory sinha hearst empirically validated web page design metrics sigchi 

distributed objects components mobile agents www 
org oo mobile agents html 

max objective measurement web sites 
www com 

martin gerth tool automated website usability analysis proceedings th international workshop design specification verification dsv 

cheng xul creating xml gui fifteenth unicode conference 
www mozilla org projects intl xul html 
mozilla project www mozilla org 
meyer cascading style sheets definitive guide reilly associates 

grasshopper www grasshopper de 
foundation intelligent physical agents www fipa org 
pope corba guide understanding common object request broker architecture addison wesley pub 

java remote method invocation java sun com products jdk rmi 
abrams williams uiml appliance independent xml user interface language www computer networks improving user interface usability mobile agents 
milojicic trend wars mobile agent applications ieee concurrency pages 
language specification rd edition december ecma www ecma ch ecma stand ecma htm 
schechter krishnan smith path profiles predict requests seventh international world wide web conference 

mobile agent list university stuttgart mole informatik 
de mal mal html 
extensible interface markup language www org 
coutaz plasticity user interfaces frame research agenda proc ifip tc int 
conf 
human computer interaction interact edinburgh august ios press 

crow smith db habits comparing minimal knowledge knowledgebased approaches pattern recognition domain user computer interactions neural networks pattern recognition human computer interaction pages 
