wpi cs tr january xem xml evolution management hong su diane kramer elke rundensteiner computer science technical report series worcester polytechnic institute computer science department institute road worcester massachusetts xml emerging standard format data representation web 
application domains specific document type definitions dtds designed enforce structure schema xml documents 
data structure xml documents tend change time multitude reasons including correct design errors dtd allow expansion application scope time account environmental changes merging businesses 
current software tools enable xml provide explicit support data schema changes 
tools changing environment entails making manual edits dtds xml documents reloading scratch 
overcome limitation put forth framework called xml evolution manager xem manage evolution dtds xml documents 
xem provides minimal complete taxonomy basic change primitives 
primitives classified schema data changes consistency preserving 
schema change ensure new dtd legal existing xml documents transformed conform modified dtd 
data change ensure update performed modified xml document conform dtd 
implemented working prototype system called xem tool java pse pro object oriented database backend storage system 
experimental study system compares relative efficiencies primitive operations place xml data schema changes terms execution times time reload modified xml data backend oo storage system 
keywords xml document type definition schema evolution structural consistency xml evolution management motivation xml extensible markup language increasingly popular data exchange format web 
xml data considered self describing application domains tend document type definitions dtds xml schema specify enforce structure xml documents systems 
dtd defines example tags permissible xml document order tags appear tags nested form hierarchical structure 
dtds assume similar role types programming languages schema database systems 
database vendors oracle ibm db extender started enhance existing database technologies manage xml data 
assume dtd provided advance change life xml documents 
utilize dtd construct relational object relational schema serves structure populate xml documents 
example oracle provides fixed mapping dtd relational schemas 
mapping done matching element tag names column names table 
elements text content map scalar columns elements containing subelements map object types 
db xml extender user define document access definition dad file specify mapping 
dad xml formatted document allows user associate xml document structure particular relational tables columns 
systems provide sufficient change support xml data 
note change fundamental aspect persistent information data centric systems 
information period time needs modified reflect change real world change user requirements mistakes initial design allow incremental maintenance 
changes inevitable life xml repository current xml management systems unfortunately provide support changes 
motivating example xml changes example changes xml documents lead various data management issues addressed 
depicts example dtd article dtd publications shows sample xml document conforming dtd 
sample documents running examples forth remainder 
changes classified data changes schema changes 
example data change deletion editor information removal editor name kim won xml document 
case xml change support system determine legal change result xml document conforming dtd 
element definition monograph element monograph editor title requires editor subelement occur exactly parent element monograph data change element article title author affiliation related element title pcdata element author name author id id required element name element pcdata element pcdata element related monograph element monograph title editor element editor empty editor name cdata implied sample dtd article dtd article title xml evolution manager title author id dk name diane kramer name author author id er name elke rundensteiner name author affiliation wpi affiliation related monograph title modern database systems title editor name won kim editor monograph related article valid sample xml document conforming article dtd rejected 
consider dtd change definition element monograph editor subelement relaxed optional editor subelement element monograph editor title changed element monograph editor title dtd change change support system need verify suggested change leads new legal dtd conforming dtd specification corresponding changes propagated existing xml documents conform changed dtd 
single occurrence editor subelement xml data conform new dtd definition editor subelement optional 
dtd change requires changes underlying xml data 
fact case particular decision having consult particular xml data instances 
limitations xml management systems current xml data management systems change support inherently tied underlying storage system data model change specification mechanism 
example ibm db xml extender structured xml documents stored relational instances user write sql code perform type update documents 
requires users aware underlying relational database mapping dtd schema relational database expressed dad mapping file 
addition specification updates tightly coupled specific xml data management system may induce extensive re engineering migration system integration systems 
clearly points need development standard xml change specification support system 
database system maintain structural consistency data consistent schema 
critical detect advance update legal operation preserves structural consistency illustrated section 
problem ignored existing xml data management systems tools specially xml enabled system data update schema update generality consistency db xml extender oracle general data update table support xml change designed transforming xml documents format 
table compare update support commercial xml data management systems aspects support xml data updates support xml schema updates update specification general xml tied particular native format back storage engine update ensured preserve structural consistency xml data associated xml schema 
xml evolution manager xem approach fill void proposing general xml evolution management system provides uniform xml centric schema data evolution facilities 
best knowledge xem efforts provide uniform evolution management xml documents 
contributions 
identify lack generic safe support evolution current xml data management systems 

propose taxonomy xml evolution primitives provides system independent way specify changes dtds xml documents 

ensure forms system integrity evolution order change support system sound legal dtds formed xml documents valid xml documents 

show proposed evolution taxonomy complete sound 

develop working xml evolution management prototype system called xem tool java object server pse pro storage system verify feasibility approach 

conduct experimental studies xem tool assess relative costs associated different evolution primitives 
analyze dependency specific implementation choices resulting impact change performance 
outline 
remainder proceeds follows 
section provides background information xml documents dtds shows model constructs system 
section taxonomy evolution primitives provide proofs showing taxonomy complete sound 
section reviews prototype design implementation 
section experimental studies including tests run prototype system results tests 
section discusses related research base 
section including areas study taken continue research summary main contributions 
xml dtd data model background dtd xml document type definitions dtds xml schema define structure content xml document 
xml schema powerful dtd 
example supports list types dtd 
xml schemas preliminary stages proposed recommendation dtds currently dominant de facto industry standard 
project choose focus dtds xml schemas 
results transferable xml schemas extensions 
dtd legal conforms dtd specification 
example dtd uses illegal characters element type names defines element types name legal 
xml document formed meets formedness constraints enumerated specification 
example formedness constraint element type match requires name element tag match element type start tag matches name name 
unique attribute specification constraint prohibits attribute name appears start tag empty element tag 
formed xml document addition valid associated document type declaration dtd document complies constraints expressed 
order distinguish element xml document element declaration dtd term element instance refer opposed term element definition referring 
similarly term attribute instance opposed attribute definition 
xml data model tree structure represent xml document 
notation describe model xml data tree 
definition xml data tree set nodes tree function representing relationship node ordered children represents relationship node unordered children labeling function set node types set strings serve legal names node 
depicts xml data tree represents xml document 
simplicity mark node label 
different shapes node distinguish type mark name inside node 
xml evolution manager id dk name article id er name diane kramer elke rundensteiner title author author affiliation related element node node attribute node value node monograph title editor wpi modern database systems name parent ordered child relationship won kim parent unordered child relationship tree representation xml document xml document identified unique node 
node child node represents root element instance xml document 
node represents element instance name example article 
article represented node labeled article content article article represented node descendant nodes 
node represents attribute instance name pcdata value node value node 
unordered children relationship exists element node attribute nodes attributes ordered xml document 
subelements element ordered ordered children relationship model 
terms children list children set refer collection ordered unordered children respectively 
dtd data model dtd composed set element definitions 
element definition turn contain subelement definitions attribute definitions empty 
structure element definition defined content model built operators applied content particles 
content particles simple subelement definitions groups subelement definitions 
groups may sequences indicated choices indicated content particles 
content particle content model specify occurrence parent content particle regular expression operators zero occurrence zero occurrences occurrences 
content model element type empty content particles pcdata contain text contain defined subelements mixed contain subelements text 
definition dtd graph 
set vertices graph 
function representing relationship vertex ordered children represents relationship vertex unordered children labeling function set vertex types number properties vertex pcdata pair indicates vertex takes value property type represent type vertex pcdata vertices different types different sets properties 
vertex type called content particle vertex associated content particle 
describe properties vertex type 
vertex types fall larger categories tag vertex constraint vertex built vertex 

tag vertex element definition vertex vertex represents element definition 
property denoted name represent name element type 
attribute definition vertex vertex represents attribute definition 
properties denoted name default represent name value type cdata id idref idrefs default property required implied fixed default value default value attribute type respectively 

constraint vertex group definition vertex vertex property denoted specifies content particles grouped parent content particle 
list children grouped sequence ii 
choice children grouped choice 
quantifier definition vertex vertex property denoted specifies times content particles occur parent content particle 
star children repeatable required 
ii 
plus children repeatable required 
iii 
children repeatable required 

built vertex vertex vertex entry dtd graph vertex graph indegree zero 
set children element definition vertex 
vertex properties defined 
pcdata vertex pcdata vertex indicates content type parent element definition vertex pcdata 
vertex vertex indicates content type parent element definition vertex 
note element vertex subelement vertices content type empty 
content type 
content types derived parent children relationship explicit built vertices express 
depicts dtd graph representing article dtd 
simplicity different shapes vertices denote types label vertex shows values vertex properties 
unordered children relationship exists element vertex attribute vertices vertex element definition vertices 
content particle vertex modeled ordered child parent content particle vertex 
children list children set refer ordered unordered children respectively 
locate content particle content model element define concept dtd position denoted format list integers 
integer associated vertex 
list integers associated path reached associated vertex th child children list vertex associated associated th child example content particle related 
defined article reached path 
child third child dtd position 
relationships dtd graph xml data tree required dtd deterministic element document match occurrence element type content model 
xml data tree element attribute instance node uniquely typed instance node bound unique path dtd graph starting vertex element attribute definition vertex 
define bi direction relationship xml data tree nodes dtd graph vertices 
title pcdata article author name element vertex attribute vertex constraint vertex built vertex id id required related affiliation monograph editor name cdata implied parent ordered child relationship parent unordered child relationship graph representation article dtd xml tree dtd graph define function typeof 
element attribute instance typeof node gives list 
root element node 
path dtd graph 
path element definition vertex defines type parent element child definition vertex defines type 

root element node parent element gives definition vertex defining type 
call list dtd path list 
example figures typeof typeof 
conversely define function extent 
input extent dtd path list 

vertex element definition vertex extent gives singleton list contains sublist 
sublist contains instance nodes defined type 
vertex vertex extent gives singleton list 
sublist contains instance nodes satisfy typeof 
vertex extent gives singleton list 
sublist contains instance nodes groups 
different element attribute types group elements attributes different types 
vertex extent gives list sublists contains occurrence group instances quantifies 
example figures extent gives instance nodes type article 
extent returns instance nodes bound content particle title article 
extent gives binding content particle author affiliation composed occurrences groups bound content particle author affiliation respectively 
extent 
taxonomy semantics evolution primitives overview taxonomy section proposed taxonomy evolution primitives define semantics 
goal provide set primitives characteristics complete aim minimal set primitives valid changes manipulate dtds xml data specifiable sequence primitives 
sound primitive guaranteed maintain system integrity terms legality dtd formedness xml data consistency dtd xml data 
ensure execution primitives violates invariants constraints content model 
primitives fall categories pertaining dtd pertaining xml data 
table gives complete taxonomy primitives dtd xml data changes 
detailed explanation primitives examples section 
details change primitives section define precise syntax semantics dtd xml change primitive 
assume input dtd graph legal input xml data tree formed valid 
ensure targeted output dtd graph xml data tree remain legal formed valid changes pre conditions post conditions enforced change primitive 
primitive executed corresponding pre conditions satisfied changes committed corresponding post conditions accomplished 
clarify terms 
new vertex existing vertices descendant dtd position say inserted dtd operation description create target element type name content type destroy target element type add element type quantifier default value dtd position target element type remove content particle dtd position target element type change quantifier content particle dtd position target element type start group content particles dtd position start target element type group type add attribute type name type default type default value target element type destroy attribute type name target element type xml data operation description flatten group dtd position target element type create target element node type value add element node position target element node destroy target element node add attribute name value target element node destroy attribute name target element node table taxonomy dtd xml data change primitives dtd position means dtd position inserted sibling right say inserted dtd position means dtd position inserted child 
say removed dtd position means incoming edge vertex dtd position deleted 
changes dtd due space limitation describe change operations formally necessary 
full formal definitions 
change operation executed target object 
primitive primitive return new object created operation 
element definition built vertex name represent name unique dtd 
similarly node xml data tree represented name 
element instance node represented xpath uniquely identifying xpath refer single node 
variable represent object vertex node returned primitives 
prefix distinguish variable 
example represents element definition vertex type name variable named primitive syntax string semantics create return new non nesting element definition named content type preconditions existing element definition vertex name defined 
empty pcdata 
resulting dtd changes new element definition vertex name created content type added children set vertex 
element article title author affiliation related element article title author affiliation related element title pcdata element title pcdata element author name element author name author id id required author id id required element name element name element pcdata element pcdata element pcdata element pcdata element related monograph element middle pcdata element monograph title editor element related monograph element editor empty element monograph title editor editor name cdata implied element editor empty editor name cdata implied results primitive resulting data changes newly created element type subelement element type reached defined element 
say element definition vertex dangling 
instances created 
primitive causes changes xml data 
example dtd create new element type middle represent concept author middle name 
command middle pcdata 
primitive changes dtd form 
primitive syntax semantics destroy element definition preconditions element definition vertex exist non nesting content model empty pcdata 
resulting dtd changes removed children list vertex destroyed 
resulting data changes instance nodes type removed 
example dtd destroy dangling element definition middle 
command middle 
primitive restores dtd form 
instance middle exists data change xml document 
changes element type definition primitive syntax value element article title author affiliation related element article title author affiliation related element title pcdata element title pcdata element author name element author name author id id required author id id required element name element name middle element pcdata element pcdata element pcdata element pcdata element related monograph element middle pcdata element monograph title editor element related monograph element editor empty element monograph title editor editor name cdata implied element editor empty editor name cdata implied results primitive operation semantics insert element definition quantifier target element definition dtd position default value instances correspondingly generated preconditions exist element definition vertex star plus signifies required constraint star pcdata element null 
resulting dtd changes element definition vertex added dtd position new quantifier vertex type created child added dtd position resulting data changes signifies required constraint instance node extent subtree rooted instance node typeof created inserted example dtd create element middle done example 
middle pcdata insert element middle target element name dtd position 
command name middle quantifier impose required constraint data changes required operation 
primitives change dtd form 
primitive syntax semantics remove content particle dtd position target element definition preconditions exist content particle vertex dtd position resulting dtd changes removed children list resulting data changes subtrees rooted destroyed 
example dtd remove content particle related 
element type article 
dtd position 

command element article title author affiliation related 
article title xml evolution manager title author id dk name diane kramer name author author id er name elke rundensteiner name author affiliation wpi affiliation related monograph title modern database systems title editor name won kim editor monograph related article element article title author affiliation 
rest article title xml evolution manager title author id dk name diane kramer name author author id er name elke rundensteiner name author affiliation wpi affiliation article results primitive operation article article primitive changes dtd form 
xml data change instance content particle related 
article subtree rooted corresponds bold part xml document removed 
xml document changed form 
primitive syntax semantics change quantifier content particle dtd position target element definition type preconditions exist content particle vertex position cases 
quantifier vertex parent quantifier vertex quantifier state 
second quantifier vertex 
resulting dtd changes quantifier vertex parent quantifier vertex new quantifier vertex type inserted quantifier vertex updated new quantifier type especially removed 
resulting data changes xml data changes required primitive depend old new quantifier types 
changes summarized rules 
old quantifier represented repeatable constraint new quantifier remove multiple occurrence instances quantifies 
adopt kept policy occurrence kept 
list remove nodes sublists ones sublist 

new quantifier represents required constraint old quantifier created 
instance node check exists instance content particle quantifies 
instance check element article title author affiliation related 
article title xml evolution manager title author id dk name diane kramer name author author id er name elke rundensteiner name author affiliation wpi affiliation related monograph title modern database systems title editor name won kim editor monograph related article element article title author affiliation related 
rest article title xml evolution manager title author id dk name diane kramer name author related monograph title modern database systems title editor name won kim editor monograph related article results primitive operation exists sublist add new default subtree represents instance content particle quantifies 

remaining combinations old new quantifiers repeatable repeatable required required cause changes xml data 
example dtd change quantifier subelement type author parent element type article plus 
dtd position content particle author article 
command article primitive addition changing content particle author affiliation author affiliation deletes instances author affiliation 
rule 
illustrated section extent nodes sublist kept nodes sublists deleted 
primitive changes dtd xml document forms 
primitive syntax semantics group sequence content particles dtd positions range target element definition group type preconditions level content particles grouped siblings 
list choice resulting dtd changes create new group definition vertex move set children dtd positions falling range children insert dtd position element author email element author email 
results primitive operation resulting data changes primitive changes hierarchical organization content particle vertices cause change xml data 
example dtd subelements author email hierarchical level 
group content particles sequence list group 
group implies semantically coupled convey information name 
command author list primitive changes dtd form 
data change caused primitive 
primitive syntax semantics flatten group content particles dtd position target element definition preconditions exist group definition vertex dtd position resulting dtd changes move children children remove resulting data changes similar primitive primitive changes hierarchical organization content particle vertices cause change xml data 
example dtd flatten list group composed restore article definition dtd 
dtd position content particle author 
command author primitive syntax string string semantics new attribute definition name attribute type default type default value defined target element definition preconditions attribute name defined cdata choice href id required implied fixed default idref idrefs nmtoken implied default value null 
resulting dtd changes new attribute definition vertex created specified properties added attribute children set resulting data changes default type required extent new attribute instance node created default value added attribute children set 
element article title author affiliation related 
article title xml evolution manager title 
article element article title author affiliation related attlist article published cdata required 
rest article published title xml evolution manager title 
rest article results primitive operation example dtd add new attribute type published element type article indicate article published 
command article published cdata required primitive changes dtd form 
attribute required instance attribute created provided default value 
xml document shown changed form 
primitive syntax string semantics attribute definition named defined target element definition deleted 
preconditions attribute definition vertex named exist attribute children set resulting dtd changes destroyed 
resulting data changes extent destroyed 
example delete attribute type published element type article shown dtd 
command article published primitive restores dtd xml data forms 
changes xml data schema class citizen 
means dtd changed data change operation dtd change imply data changes data changes may caused due update propagation dtd change explicitly specified 
users mean perform data changes result xml document inconsistent current dtd explicitly perform appropriate dtd change primitives 
example users want delete subelement instance node required exist parent contents primitive may performed change quantifier property subelement type required required 
data change allowed happen 
primitive syntax semantics create return new element type value preconditions valid value element type example content model type pcdata legal string serve value 
content model null 
especially content model list nodes represents subelement created element 
resulting data changes new data element instance type created 
dangling xml data tree sense reachable node element node xml tree 
words xml data tree dumped xml text file newly created element visible xml text file 
element instance added xml data tree primitive primitive part xml document 
example create new element instances type title editor 
variables represent respectively 
create element instance type monograph specify value means element instance subelement second subelement 
commands title xml editor monograph primitive operations cause change dtd xml document visible outside 
primitive syntax semantics add new element subelement element preconditions new element instance allowed added cases 
case type new element instance repeatable content particle 
case type new element instance optional content particle instance content particle exists 
resulting data changes element instance added children list child 
example xml document create new element instance type monograph add second child element article related 
commands title xml editor null monograph article related addelement article title xml evolution manager title author id dk name diane kramer name author author id er name elke rundensteiner name author affiliation wpi affiliation related monograph title modern database systems title editor name won kim editor monograph related article article title xml evolution manager title author id dk name diane kramer name author author id er name elke rundensteiner name author affiliation wpi affiliation related monograph title modern database systems title editor name won kim editor monograph monograph title xml title editor editor monograph related article results primitive operation primitives cause change dtd 
change xml document document 
primitive syntax semantics destroy target element node preconditions type target element node required content particle parent element quantifier type 
resulting data changes element instance node removed children list parent element node example xml remove second related element 
command article related monograph primitive causes changes dtd restores xml document document 
primitive syntax string string semantics attribute instance name value created element preconditions attribute definition vertex named defined element type typeof 
default type implied instance exists attribute children set 
resulting data changes new attribute instance type value created added attribute children set element author name attlist author id id required 
article title xml evolution manager title author id dk name diane kramer name author author id er name elke rundensteiner name author 
article element author name attlist author id id required attlist author primary cdata implied 
rest article title xml evolution manager title author id dk primary name diane kramer name author author id er primary name elke rundensteiner name author 
rest article results primitive operation example xml add new attribute definition primary element type author indicate author primary author 
primitive add attribute values author element 
commands author primary cdata implied null article author primary article author primary primitives change dtd xml document dtd xml document 
primitive syntax string semantics attribute instance name element instance deleted 
preconditions attribute definition vertex name exist element type instance node default type required required attribute deleted 
resulting data changes attribute instance name destroyed 
example xml destroy attribute instances primary 
command article author primary article author primary default type attribute type primary author implied em primary required primitive allowed executed 
causes changes dtd restores xml document form 
operation description taxonomy equivalent create ver creates new dangling vertex add edge adds edge vertices delete ver deletes vertex zero degree removes incoming edges remove edge removes edge vertices discussion change taxonomy completeness dtd change operations table dtd graph operations 
section discuss set change primitives section supports possible types dtd changes primitives complete 
proof basis completeness proof evolution taxonomy orion 
dtd graph focus primarily manipulations vertices directed edges parent children vertices 
prove legal dtd graph operation achievable set graph operations 
semantics graph operations shown columns table 
taxonomy equivalents general graph operations column 
dtd graph operation combination multiple general graph operations list dtd graph operation multiple cells third column 
lemma dtd graph delete ver finite sequence reduce dtd graph vertex 
add edge lemma dtd graph vertex finite sequence operations create ver generates desired dtd graph theorem arbitrary dtd graphs add edge create ver transform finite sequence delete ver proof prove reducing dtd graph intermediate dtd graph lemma 
dtd graph converted lemma 
theorem arbitrary dtd graphs operations shown table transform finite sequence dtd change proof set operations create ver add edge delete ver equivalent operations dtd change taxonomy 
completeness set operations theorem 
soundness change primitives taxonomy xml dtd change primitives sound properties hold true operation legal input dtd graph produces legal output dtd graph op eration formed input xml tree produces formed output xml tree legality formedness criteria 
operation valid input xml tree produces new valid output xml tree validity ria 
operation input dtd graph associated valid input xml tree produces valid output xml tree consistency criteria 
formal proof soundness laborious requiring detailed proof steps demonstrate properties holds defined primitive 
illustrate proofs properties operations 
proofs done similarly 
legality formedness 
example consider primitive operation changes input dtd graph 
original dtd legal newly added element type dangling independent element types violation primitive bring duplicate element names 
pre condition checking mechanism requires element type name exists checked 
finds duplicate element name primitive allowed executed 
prevents illegal dtd 
validity 
consider primitive operation change xml data tree 
prior executing primitive pre condition checking mechanism check element instance added allowed requested position subelement specified element instance 
primitive passing checking ensures changed xml tree conform dtd 
consistency 
consider primitive operation explicitly changes dtd implicitly changes xml data 
pre conditions satisfied remove content particle definition content model specified parent element definition remove directed edge parent content particle vertices 
stopped point legal dtd graph formed xml tree xml tree longer consistent output dtd graph 
continue appropriate changes xml trees 
remove corresponding instance nodes achieve consistency 
primitive definitions section specify precisely change dtd requires change xml data order maintain consistency post conditions 
change rejected due pre conditions satisfied occur dtd xml data required demonstrate operations fulfill requirements conclude taxonomy combined dtd xml change primitives sound 
xem prototype system verify feasibility approach implemented working prototype system xml evolution management xem tool section system design architecture 
discuss mapping model xml underlying storage system 
preliminary version demonstrated acm sigmod 
xml concept representation xml tree oo concept element element instance node class instance attribute attribute instance node member variable class instance nested structures edge member variable class instance table mapping xml oo dtd element type class name member variables mapped dtd attributes article article title title author author name id type string name name editor editor name name type string table application class definitions mapped dtd mapping xml data model oo data model object oriented oo approach xem tool oo model data model closer xml data model due hierarchical structures 
table describes mapping strategy map data xml format oo format 
basically element type mapped class 
attribute type defined element type mapped member variable defined class models relationship element subelements modeled member variable named children implemented java vector 
object vector refers instance class mapped subelement type 
mechanism set class definitions defined dtd 
call classes application classes 
table shows part schema application classes processing article dtd shown 
column shows element type dtd 
second column shows name object class generated element type column 
third column shows names types class member variables mapped attributes defined element type generated class definition name prefix followed number indicating identifier dtd purpose managing multiple dtds 
example identifier article dtd 
xem tool architecture pse pro lightweight java object database system underlying persistent storage system 
pse pro provides object repository schema repository manages java objects schema information class definitions respectively 
pse pro system extended schema data evolution functionalities added previous project 
supports updating object repository schema repository example creating deleting class schema repository adding deleting attribute class definition run time 
depicts architecture xml evolution management prototype system xem tool 
main modules xem tool system architecture include dtd manager takes dtds input supports 
converting dtds dtd graphs managing information dtd graphs dtd graph manager 
generating necessary class definitions application classes application class definition generator 

managing dtd graphs querying modifying dtd graphs 
xml document manager takes xml document input supports 
converting xml data object instances application classes managing application class instance manager 
managing bi directional relationship dtds xml data extent manager described section 
extent manager able look application class objects representing xml data instances dtd path list 
conversely look dtd path list refer section application class object corresponds xml instance node 

regenerating xml documents stored instances application classes xml 
xml evolution manger supports executing xem operations defined section primitive executor 
dtds xml documents loaded object repository pse pro dtd manager xml document manager respectively 
change primitive submitted primitive executor interacts dtd manager cases xml document manager check pre conditions 
primitive passes pre condition checking oo evolution functionalities invoked carry desired changes 
changes performed underneath object repository performed schema repository 
details discussed section 
experimental study experimental set data sets conducted series experiments comparing time needed perform incremental updates versus reloading updated xml documents scratch 
execution platform microsoft windows nt service pack intel pentium ii mhz memory 
selected set shakespeare plays data set experiments 
statistics shakespeare files follows dtd dtd manager dtd graph manager application class definition generator change primitive script xem primitive executor pse pro xml xml document manager application class instance manager xml extent manager xml xml evolution management system architecture xem tool system dtd element definitions xml data files play file conforming dtd smallest data file bytes long contains elements largest data file bytes long contains elements average data file bytes long contains elements 
original shakespeare dtd contain attribute definitions added attributes order able test primitives deal attributes 
comparing time efficiency primitive implementation xml data change primitives lead object changes backend oo storage system 
dtd change primitive operations grouped categories types changes lead backend oo storage system 

dtd changes implying xml data change dtd changes leading oo object changes dtd changes leading oo object changes application class definition changes oo schema changes 
dtd changes implying xml data changes id primitive name time id primitive name time table execution times dtd primitives dtd changes leading oo object changes dtd changes leading oo object changes application class definition changes fact dtd changes lead oo schema changes due mapping mechanisms 
example mapping mechanisms children content particles stored java vector attributes stored member variables associated class 
case change element children content particles oo schema change changing definition application class mapped element 
case hand change adds removes attribute correspond schema change member variable added removed definition associated application class 
experiment examines evolution primitives individually 
purpose experiment give intuition actual change performance overhead caused single change primitive 
experiment run xml data files operation run times accuracy 
results table show averages runs operation 
oo schema change time consuming requires recompilation changed class definitions 
table see dtd change primitives leading oo schema changes take significantly time dtd change primitives 
note primitive leads oo schema changes take long dtd change primitives leading oo schema change 
executing system simply deletes definition file associated application class requiring time consuming recompilation 
incremental update versus reloading scratch tested dtd change primitives 
involve implied data changes explicitly specified dtd change 
due mapping mechanism change primitive lead oo schema evolution second 
randomly choose target dtd element 
data set approximately total amount data loaded affected average execution primitive operation 
figures compare efficiency incremental change versus reloading primitives respectively 
obvious doing incremental change gains reloading scratch 
reason gains lies mapping mechanism 
definition class mapped target parent primitive execution primitive execution incremental updates incremental updates vs complete reload data vs complete reload data element type remains 
new element subelement relationship captured data content member variable children class definition 
definition class mapped target element type changed 
new member variable added represent newly added attribute 
class definition needs recompiled expensive time consuming process 
related xml management tools 
xml primarily data exchange format world wide web research projects dealing xml focused web site management 
projects attempt alleviate difficulties associated managing large amounts data contained web sites representing web pages xml documents 
xem focus web site management research projects proved useful understanding storage manipulation xml documents 
research xml focuses semi structured nature 
dealing semistructured data projects totally ignore schema just consider implicated actual storage structure second class citizen 
deal schema evolution issues 
example object exchange model represents semi structured data similar nature xml associated dtd definition 
proposed model represent changes semi structured data temporal annotations 
proposes extensions xquery support xml updating 
approaches deals changes data level schema blind 
xml tools focused various language formats mechanism manipulating xml data 
example extensible stylesheet language transformations xslt language designed transforming individual xml documents 
require dtd users specify arbitrary xml data transformation rules 
schema constraints enforced data transformation 
xml update language declarative language proposed open source group update stored documents 
primitives document level dtd account 
xslt serve scenarios schema structure required 
dtd limited power express integrity constraints 
example sufficient express keys foreign keys 
proposes model constraints xml 
model cap ture relational constraints object oriented models object identity scoped id idref mechanism dtds 
system focus inherent constraints dtd model extensions take care constructs remain investigated 
schema evolution 
traditional database projects focused issue schema evolution main goal develop mechanisms change schema underlying objects conform modified schema 
issue time tackled xml model current xem project 
commercial database systems rdb oodb today provide support re structuring application schema means fixed set simple evolution primitives xem system 
done focus issues supporting complex schema evolution operations oodbs 
allow user string primitives form higher level specific change transformations 
template extensible schema evolution framework developed wpi allows complex user defined schema transformations flexible secure fashion 
xml database systems 
number projects tools emerged map xml similar semi structured data formats traditional database systems 
studies storing querying xml data relational database management system rdbms 
investigate semistructured data relational databases studies sgml predecessor xml storage object oriented database management system oodbms 
oracle xml sql utility xsu ibm db xml extender known commercial relational database products extended xml support 
mainly provide methods manage xml data 
option store xml data blob second option decompose xml data relational instances 
update external xml data storage option need reload data second option manually change relational schema data 
words evolution data inside outside database independent 
change propagation external xml document internal relational storage schematic structure supported 
related effort wpi database research group developed clock system synchronizes internal relational storage external xml documents 
clock system deals basic xml data updates handle xml schema changes 
summary 
xem project number important contributions area xml data management including approach addressing evolution xml context 
show motivation need support identifying lack existing support current xml data management systems 
propose taxonomy xml evolution primitives includes schema data updates fill gap 
identify various forms system integrity sound xml management system maintain evolution 
include formedness dtds xml documents conform standard language format consistency xml documents terms invariants validity xml documents respect constraints specified corresponding dtd 
show proposed change taxonomy complete valid desired transformations possible primitives sound maintenance system integrity 
verify feasibility approach developing working xem tool prototype implementation java programming language underlying object oriented database 
prototype provides automated xml evolution management facilities superior making manual edits 
conduct experimental studies verify correct execution primitive operations prototype system 
performance analysis shows incremental updating primitives efficient reloading data scratch necessary current xml management tools 

course research xem project number issues arose scope project interesting issues study 
new research directions undertaken continue 
model mapping xem tool implementation currently tied pse object store database 
generic storage independent xem middleware flexible solution develop 
versioning xem tool system modified changes new copy dtds xml documents place deltas stored applied old documents produce new ones system provide revision control version management services 
embedding xml query languages currently primitives implemented apis 
primitives embedded xml query language say xquery 
enable users declaratively specify desired changes programming language 
xml schemas xml schema includes powerful constructs defining structure content xml document dtd 
xem dtd change primitives adapted handle xml schemas extensions 
customization evolution rules xem defined default rules update propagation ensure consistency 
xem provides flexibility users define escape rules update propagation 
example changing quantifier sub element repeatable users may prefer keep occurrence sub element occurrence 
study direction fully customizable xem document management system desirable 
leonard 
management schema evolution databases 
vldb pages september 
banerjee kim kim korth 
semantics implementation schema evolution object oriented databases 
sigmod pages 

shakespeare plays xml format 
metalab unc edu xml zip 
br che 
advanced primitives changing schemas object databases 
caise pages 
maier stein williams williams 
gemstone data management system 
object oriented concepts databases applications pages 
acm press 
buneman davidson fan hara tan 
keys xml 
proceedings www pages 
chawathe 
describing manipulating xml data 
ieee data engineering bulletin pages 
chawathe abiteboul widom 
representing querying changes semistructured data 
icde pages february 
chen claypool rundensteiner 
web re web approach web re structuring 
www journal special issue internet data management baltzer acm publication 
christophides abiteboul cluet scholl 
structured documents novel query facilities 
proceedings acm sigmod international conference management data minneapolis pages june 
claypool jin rundensteiner 
oql odmg implementation template schema evolution framework 
centre advanced studies conference pages november 
claypool jin rundensteiner 
schema evolution extensible re usable flexible framework 
int 
conf 
information knowledge management pages november 
deutsch fernandez suciu 
storing semistructured data stored 
proceedings acm sigmod international conference management data pages philadephia usa june 
fan kuper simon 
unified constraint model xml 
proceedings www pages 
fan simon 
integrity constraints xml 
proceedings nineteenth acm symposium principles database systems pages 
acm press 
fernandez florescu kang levy suciu 
system demonstration strudel web site management system 
acm sigmod conference management data pages 
florescu kossmann 
storing querying xml data rdbms 
ieee data engineering bulletin pages 
xsl working group 
xsl transformations xslt 
www org tr xslt 
ibm software 
db xml extender 
www ibm com 
systems systems technical report 
technical report tm oodbms feature checklist 
rev systems december 
group 

www group org html wd html 

semi structured data relational databases 
technical report worcester polytechnic institute 
kramer 
xml evolution management master thesis worcester polytechnic institute 
master thesis worcester polytechnic institute 
lerner 
model compound type changes encountered schema evolution 
technical report um cs university massachusetts amherst computer science department 
mchugh abiteboul goldman quass widom 
lore database management system semistructured data 
sigmod record pages september 
mecca merialdo atzeni 
araneus era xml 
bulletin technical committee data engineering pages september 
oracle technologies network 
oracle 
www oracle com database oracle 
rundensteiner 
uniform structured document handling constraintbased object approach 
adl pages 
object design 
data integration server 
www odi com 
objectstore objectstore manual 
papakonstantinou garcia molina widom 
object exchange heterogeneous information sources 
proceedings th international conference data engineering taipei taiwan pages march 
sjoberg 
quantifying schema evolution 
information software technology january 
skarra zdonik 
management changing types object oriented databases 
proc 
st oopsla pages 
igor tatarinov zachary ives alon halevy daniel weld 
updating xml 
sigmod 
technology 
manual version 
technology versailles france november 
object technology 
user manual 
object technology 

xml path language xpath version 
www org tr xpath 

extensible markup language xml nd edition recommendation october 
www org tr rec xml 

xml schema proposed recommendation 
www org xml schema 

xquery xml query language 
www org tr xquery 
zhang mitchell lee rundensteiner 
clock synchronizing internal relational storage external xml documents 
eleventh international workshop research issues data engineering ride heidelberg germany pages 
ieee computer society april 
zicari 
framework schema updates 
th ieee int 
conf 
data engineering pages april 

