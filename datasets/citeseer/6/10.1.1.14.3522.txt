chep march la jolla california community authorization service status pearlman kesselman usc information sciences institute marina del rey ca welch foster tuecke argonne national laboratory argonne il virtual organizations vos communities resource providers users distributed multiple policy domains 
vos wish define enforce consistent policies addition policies underlying domains 
challenging problems distributing policy domains fact domains may different capabilities enforcing policy 
community authorization service cas solves problem allowing resource providers delegate policy authority vo maintaining ultimate control resources 
describe cas past current implementations cas discuss plans cas related research 

virtual organization vo dynamic collection resources users unified common goal potentially spanning multiple administrative domains vos introduce challenging management policy issues resulting complex relationships local site policies goals vo respect access control resource allocation forth 
particular authorization solutions needed empower vos set policies concerning resources assigned community compromising site policy requirements 
describe implementation community authorization service cas system developed part solution problem 
cas allows separation concerns site policies vo policies 
specifically sites delegate management subset policy space vo 
cas provides fine grained mechanism vo manage delegated policy spaces allowing express enforce expressive consistent policies resources spanning multiple independent policy domains 
past cas implementations build globus toolkit middleware grid computing allowing easy integration cas existing grid deployments 
rest article follows 
section describe scenarios cas designed support review globus toolkit authorization systems explain cas needed 
section introduce cas architecture concepts 
section describe current cas implementations implementation plans 
section discuss relationship cas related authorization technologies standardization enable interoperability 
section describe plans research 

problem statement describe scenarios cas designed solve review current globus toolkit authorization system explain system limitations motivated development cas 

consistent distributed policy physical organizations virtual organization may principle agree allow vo access resources organization typically retain ultimate control policies govern access resources 
vo wish apply common policy users access resources assigned vo 
example subset users may read access vo data may full access publish modify data 
data may sensitive published restricted limited set vo members 
vo resources located multiple organizations maintaining consistent policy means having access control enforced organizations consistent manner 
achieving consistency difficult site potentially different mechanisms policy expression enforcement different mechanisms may different abilities terms granularity policy express 
local policy mechanisms enforce vo policies limit policies common denominator abilities site mechanisms potentially change new sites added vo 
complicating situation fact resources may dynamic may dynamic policies 
example vo number datasets part resources 
datasets stored resources owned organizations vo spans vo wishes apply policy regarding access datasets 
datasets may dynamically created copied example demand access dataset user particular location motivate replica dataset chep march la jolla california automatically created location improve user access described 
data replicas access control policies identical original copied order maintain consistent policy regard access data 
policy turn may dynamic meaning policy replicas mirror changes 
site mechanisms complication policy replicated change policy requires update multiple sites 
temporarily unavailability site update lead inconsistencies policy vo 

authorization middleware middleware vos available years 
notable globus toolkit gt freely available widely deployed 

globus toolkit features globus toolkit normally uses existing local resource mechanisms authorization 
user authenticated mapped local identity unix account local configuration file 
mapping serves access control check user listed local mapping configuration access resource denied 
user mapped local identity globus toolkit relies solely local policy management enforcement mechanisms constrain user actions allowed local policy 
approach removes fine grained policy configuration decision making gt services gridftp gram allows local operating system act sandbox 
administrators normal policy administration tools configure policy 
example globus toolkit user normally mapped local unix account 
standard unix filesystem permissions quotes group memberships forth configure enforce policy 
similar techniques conjunction dynamically allocated accounts virtual machine technology 

limitations gt classic classic globus toolkit authorization system described advantage easy site administrators understand configure uses existing local policy management enforcement mechanisms administrator presumably familiar 
terms supporting large vo gt shortcomings scalability personnel policy change requires changing policy participating site lack expressiveness native os methods may expressive support vo policies consistency different native os methods may support kinds policies distribution order maintain consistent policy vo policy change propagated site involved 
failure propagation cause inconsistency policy 
solve problems undertook development cas system described section 

cas concepts introduce cas describe solves problems described section 

policy management cas allows vo maintain set policies explicitly communicate policies sites 
sites combine local policies vo allowed vo policies individual user allowed vo member enforce combined policy 
vo administration cas server maintains vo portion combined policy 
portion policy includes vo access control policies regarding resources rights granted users users read files cas server access control policies delegate rights maintain groups vo 
policies expressed finegrained level user may allowed rights certain resources add users certain groups list vo members 
part combined policy resource provider policy regarding vo maintained resource provider native mechanisms non vo users 
example site may create local identity representing vo add local configuration mapping users presenting credentials vo cas server identity 
site local mechanisms set policy vo example change file ownerships allow vo identity read write access particular subset file system set file system quotas limiting amount space vo 
resource provider may mechanism maintain policies vos running cas server 

policy enforcement resource providers participating vo cas deploy cas enabled services services modified enforce policy cas credentials resources assign vo 
user wishing access resources contacts vo cas server requests cas credential 
cas server replies cas credential contains policy statement user rights cryptographically signed cas server 
making request resource user presents cas credential 
receiving cas credential cas enabled service takes steps enforce vo local policy verify validity cas credentials signature time period 
enforce site policies regarding vo essentially method unmodified server 
identity enforcing site policies identity signer policy assertion vo cas server identity individual user authenticating 
enforce vo policies regarding user expressed signed policy statement cas credential 
optionally enforce additional site policies regard user example site may keep blacklist users allowed perform action regardless vo policy 
access granted site community access granted community user effective access granted access site user effective access control policy cas 
shown set rights user effectively granted steps intersection set rights granted resource server vo set rights granted vo user chep march la jolla california optionally modified site policy specific user 

cas implementations review past current cas implementations discuss implementation plans 
start review globus toolkit proxy certificates key component cas implementations 
discuss initial current cas prototype releases explaining differences motivations changes 
discuss upcoming cas release release version globus toolkit 

proxy certificate overview cas designed implemented grid security infrastructure gsi provides security functionality globus toolkit 
authentication gsi uses proxy certificates provide credentials users allow delegation single sign 
proxy certificates similar standard entity certificates eecs derived 
primary difference users issue proxy certificates create short term day delegation rights entity process running behalf opposed eecs issued certificate authorities assign long term identity 
short term nature proxy certificate credentials allows lightly protected credentials associated long term eec credentials create 
example proxy certificate credentials usually protected local filesystem permissions opposed encrypted 
approach allows single sign unattended processes 
eec proxy client service proxy proxy certificate creation delegation 
steps explained text 
shown step creation proxy certification local single resource usually subsequent clients enable single sign 
shown step proxy certificate gsi authenticate remote service establish secure connection 
proxy certificates chep march la jolla california issue proxy certificates allowing chain delegations shown step proxy certificate created gsi secure network channel delegate rights service act original user behalf 
normally proxy certificate allows bearer assert full rights bear eec issued 
delegation restricted policy embedded proxy certification discuss cas implementation section 

initial cas prototype initial cas prototype described released march 
implementation includes cas server appropriate administration user clients gridftp server modified understand honor cas credentials 
implementation uses toolkit facilitate implementation python 
implementation uses restricted proxy certificates described section issued cas server user 
proxy certificate identifies user member vo virtue user bearing proxy certificate issued cas server rights user possesses vo restrictions proxy certificate 
shown effective rights user subset rights granted resource vo vo user 
access granted site community account access granted community user cas policy effective access effective access control policy initial cas prototype 
described section resources create account virtual organization vo set rights account 
vo sets cas server configures policy server express user rights vo 
shows details cas 
steps follows logon cas server request community policy restricted cas proxy community resource initial cas prototype 
steps described text 

user authenticates personal proxy credentials vo cas server 
cas authenticates user establishes user rights vo local policy database 

cas server issues user restricted proxy certificate 
proxy certificate shown identity cas server identifying user vo member restriction policy expressing rights user vo 

user uses cas proxy certificate authenticate resource vo member 
certificate resource allows user access resource vo account constrains user activities restrictions proxy certificate 
release initial cas prototype early received useful feedback vo administrators resource sites 
largest concern raised sites inability identify user connecting cas credentials finer level granularity member particular vo verify actual user identity 
number sites policy requirements dictated funding agencies identify users computational resources 
proposed cas server authenticates user access identity encode user identity non critical extension proxy certificate 
solution concern resource providers required trust cas server identity user 
caused place trust cas server comfortable 
concern led redesign cas release prototype described section 
subject cn cas cn proxy issuer cn cas valid valid restrictions critical extension actions allowed vo policy read gridftp write gridftp myfile signature cas server example restricted proxy certificate simplified clarity issued initial cas prototype 
certificate identifies user member vo restrictions enumerate user rights vo 

second cas prototype building cas prototype community feedback elicited redesigned cas september released prototype 
major feature added release enable resources identify user operating cas credentials degree certainty user standard globus toolkit proxy credentials 
resource derive user vo membership user identity 
contents release cas server clients cas enabled gridftp server functionally identical prototype 
implement feature changed model restricted proxy certificate issued cas server model combines proxy certificate issued user signed policy assertion issued cas server 
resulting credential shown 
policy assertions issued cas server includes set access rights user identity 
assertion allows resource verify user vo membership fact assertion user identity user rights vo listed assertion 
assertion includes validity period signature allowing resources verify validity assertion 
separation cas policy assertion user proxy credentials allows resources accepting credentials identify user involved request normal gsi credentials 
strategy turn allows site normal mechanisms auditing apply additional level policy enforcement chep march la jolla california user identity 
applied policy shown intersection rights granted community site rights granted user community restrictions placed user site 
subject cn joe user cn proxy issuer cn joe user valid valid authorization assertion subject cn joe user issuer cn cas valid valid rights actions allowed read gridftp write gridftp myfile signature assertion cas server signature user example cas credential simplified clarity 
user proxy combined policy assertion issued cas server 
shows details second cas prototype usage 
steps follows 
user authenticates personal proxy credentials cas server serving user virtual organization vo 
cas server established user identity rights vo local policy database 

cas server issues user signed policy assertion containing users identity rights vo 
cas client generates new proxy certificate user embeds cas policy assertion proxy certificate noncritical extension 
embedding assertion proxy necessary security perspective allows application normal gsi proxy able proxy cas assertion embedded looks standard proxy certificate existing apis protocols 

user uses proxy certificate embedded cas assertion authenticate resource 
resource authenticates user normal gsi authentication allowing determine user identity apply local policy desired 
parses policy assertion proxy certificate assertion allows chep march la jolla california user access resource vo account constrains user activities rights assertion 
logon cas server request community policy authorization assertion community resource user proxy cas assertion second cas prototype usage 
steps described text 

summer release building earlier prototypes described preceding sections planning releasing new version cas built version globus toolkit gt 
version cas conceptually similar second prototype described preceding section number significant differences implements ogsa service 
reside gt hosting environment implement open grid service architecture service 
protocols access cas common web services methods soap 
java code base 
facilitate integration gt cas written java 
uses assertion format 
new version cas security assertion markup language format policy assertions issued cas server 
allow easy integration web services ogsa tooling 
intent release new version cas version globus toolkit late summer 
release include functional elements earlier prototypes cas server clients users administrators cas aware gridftp server 
include java client library library allow cas enabling services allowing accept properly enforce cas issued assertions 

relationship compare cas authorization services explain see standardization allowing services interoperate 

virtual organization management service cas similar architecturally issue policy assertions user user presents resource purpose obtaining rights 
primary difference systems level granularity operate 
shown assertions contain list role group memberships held user 
user presents assertion resource determines user rights memberships local policies memberships 
effect policy memberships user centralized server policy regarding exactly rights memberships distributed sites 
cas assertions provide rights directly need interpretation resource 
discussed section situations policies changing dynamically believe complete centralization policy achieve better consistency 
cas designed primarily fine grained policies research shown capable asserting coarser grained group memberships 
group memberships group rights cas rights groups community resource group memberships group rights difference cas models 
issues group memberships mapped rights resource 
cas issues rights directly 

akenti akenti having differences implementation features architecturally similar provide resource authorization decision regards request 
follow basic model 
resource authenticates requestor validates identity possibly additional attributes 

resource receives parses user request 

resource passes identity attributes request akenti requests authorization decision service reject request 

akenti returns decision resource enforces 
cas implementations provide simple authorization decision functionality limited supporting cas policy assertions rich feature set akenti 
possible systems modifications provide resource side functionality cas parse cas assertion authorize user request 

standardization assertions see potential allowing interoperability cas authorization systems mentioned section standardizing format authorization assertions 
today cas issue assertions different nonstandard format requires custom code resource side interpret authorization 
standardizing format assertions issued services cas enable authorization decision services able parse assertions decision making shown 
steps follows 
assertion service cas issue assertion user regarding user attributes group memberships rights 

user assertion resource making request probably authenticating identity 

resource request identity assertion authorization decision service akenti 

authorization decision service parse assertion local policy render decision returns resource 
attribute certificates possibility standard assertion format 
influence web services emerging grid standards believe standard line current web services efforts considered 
experimenting security assertions markup language standard formatting authorization attribute assertions format release cas described section 
plan working global grid forum order chep march la jolla california standardize supporting authorization vos 
cas vo policy local policy community resource akenti standard assertion format allow authorization systems cas akenti interoperate 
steps described text 

plan research activities regard cas 

caching server current cas server implementation maintains single centralized server vo 
provide availability cas server unavailable develop caching server act lightweight partial mirror cas server 
caching server accept requests cache certain types signed policy statements example rights granted user periodically request signed statements vo cas server 
caching server accept cas protocol requests users returning cached signed policy statements 

resource server pull support addition current model user pushes policy assertions resource server investigate model resource server client contacts cas server policy assertions 
model combined caching server described preceding section performance reliability caching server periodically contact vo cas server signed policy assertion including rights granted resource resource server query caching server 

local authorization server investigating possibility implementing local authorization server accept chep march la jolla california authorization queries request servers apply applicable local community policies return answer 
authorization server need highly trusted resource server highly available sites probably run local authorization server resource server host 
service potentially take cas credentials forwarded resource credentials making decision contact cas server pull model described preceding section 
server implemented akenti described section acknowledgments doug sam chris raghunathan contributions community authorization service 
gratefully acknowledge feedback cas implementations members ppdg doe science grid engineering groups keith jackson system prototypes 
supported part mathematical information computational sciences division subprogram office advanced scientific computing research office science scidac program department energy contract eng 
initial funding cas provided earth systems grid project 
globus toolkit trademark owned university chicago 
allcock chervenak foster kesselman tuecke 
data management transfer high performance computational grid environments 
parallel computing journal may pp 

butler foster kesselman tuecke welch national scale authentication infrastructure 
ieee computer pp 

cannon chan olson welch pearlman 
cas manage role vo sub groups 
appear chep june 
cas alpha release web site www globus org security cas alpha march 
cas web site www globus org security cas alpha september 
ccitt recommendation directory authentication framework 


role privilege management infrastructure 
th acm symposium access control models technologies 
farrell 
internet attribute certificate profile authorization rfc ietf april 
figueiredo dinda fortes 
case grid computing virtual machines 
rd international conference distributed computing systems 
foster kesselman 
globus metacomputing infrastructure toolkit 
international journal supercomputer applications 

foster kesselman nick tuecke 
physiology grid open grid services architecture distributed systems integration globus project 
foster kesselman tuecke 
anatomy grid enabling scalable virtual organizations 
international journal high performance computing application pp 

foster kesselman tsudik 
tuecke 
security architecture computational grids 
acm conference computers security pp 

global grid forum www ggf org may 
globus toolkit alpha release www globus org ogsa releases alpha index 
html jackson python interface globus toolkit 
concurrency computation practice experience pp 

pearlman welch foster kesselman tuecke 
community authorization service group collaboration 
ieee rd international workshop policies distributed systems networks 
reed pratt early 
accountable execution untrusted programs 
th workshop hot topics operating systems rio rico az ieee computer society press 
security assertion markup language specification oasis november 
simple object access protocol soap 
thompson johnston hoo jackson 

access control widely distributed resources 
th usenix security symposium 
tuecke foster welch thompson pearlman kesselman 
internet public key infrastructure proxy certificate profile ietf 
architecture infn docs pdf may 
submitted manuscript created university chicago operator argonne national laboratory argonne contract 
eng department energy 
government retains acting behalf paid irrevocable worldwide license said article reproduce prepare derivative works distribute copies public perform publicly display publicly behalf government 
chep march la jolla california 
