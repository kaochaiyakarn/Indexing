views semantic web raphael volz daniel oberle rudi studer institute aifb university karlsruhe th karlsruhe germany lastname aifb uni karlsruhe de 
semantic web extension current web information defined meaning better enabling computers people cooperation 
technical foundation semantic web rdf semi structured data model resembling directed labelled graphs 
semantics data ontologies encoded specialized vocabulary called rdf schema 
efforts implementing semantic web applications rdf show views rdf data beneficial gain intended semantic interoperability allowing rdf data filtered restructured 
carefully analyzes situation constituted data model comparing rdf schema known object oriented data models 
introduces specialized view mechanism ontology rdf models 
semantic web today hot topics bringing 
structure meaningful content web pages creating environment software agents roaming page page readily carry sophisticated tasks users bl 
enable semantic web pages supplemented semi structured meta data provide formal semantics web content 
formal semantics referring ontology provides shared domain models understandable human machine providing shared conceptualization specific domain 
technological basis representing data semantic web rdf ls semi structured data format resembles directed labelled exhibits similar properties oem aqm 
usually schema data 
ontologies specify meaning data represented rdf special vocabulary interpretation defines semantics 
vocabulary called rdf schema dr specifies primitives similar primitives known representing structural aspects object oriented data models semantic web presents novel situation object orientation fuses semi structured data data exposes non strict typing inheritance semantics time 
aim semantic web create largest integrated information system built 
view mechanisms sine qua non way reach objective tasks need views simplification large data sets restructuring data comply object orientation rdf schema features property centric approach 
ontologies short hands queries means data hiding security regularly occur 
views established technology relational object oriented databases 
mainly provide data customization viz 
adaptation content meet demands specific applications users 
key technology integrating heterogeneous distributed systems facilitating interoperability hiding information component gluing individual components form integrated application system 
aspect tackled wrappers lift selected content individual information sources common usually semi structured data model 
part done mediators wie provide glue 
sense mediators wrappers form views data sources 
data exist mediator may query mediator stored data 
information integration perspective semantic web wrappers obsolete ontologies simplify job mediators defining integrated semantic model gives explicit representation semantics information components 
picks unique situation constituted rdf data model presents novel approach specify view mechanism tailored semantic web 
structured follows 
section details data model employed semantic web 
section elaborates preconditions view mechanism evaluating approaches taken classical object oriented relational data models respect specific characteristics semantic web 
query language underlying approach introduced section 
section provides detailed description main features view mechanism outlines approach meets requirements introduced section 
remarks classification consistency section 
section give short description implementation approach 
conclude contribution provide outlook ongoing 
semantic web semantic web architecture layers play fundamental role respect capturing semantics resource description framework rdf ls ontologies gru 
rdf representing data semantic web 
essence rdf semi structured data model resembles directed labelled 
context semantic web xml just plays role syntax carrier encode exchange rdf models 
rdf describes information graphs built means linking information coming different web sources inherently meets web requirement linking data possible 
rdf provide semantic schema information 
ontologies come play define semantics represented data means classes properties 
embedded inheritance hierarchy 
notably ontologies specify type system associated rdf data 
single ontology 
rdf graph description data initially resource description framework rdf ls intended enable encoding exchange reuse structured meta data describing web accessible resources 
data encoded called resource property value triples called statements 
rdf individual information objects represented sets statements describing resource 
object identity uniform resource identifier uri labels resource object identifier globally unique 
set statements constitutes partially labelled directed commonly called rdf model 
fact properties multiple values email resource rudi allows combine statements different rdf models easily 
data model distinguishes types values 
value resource leading object associations may literal establishing object attributes 
example raphael resource name volz literal 
email ontologies rudi studer fzi de daniel email raphael oberle aifb uni karlsruhe de volz aifb uni karlsruhe de email advises name firstn raphael studer aifb uni karlsruhe de volz email supervises fig 

simple exemplary rdf model ontologies provide formal shared conceptualization particular domain interest gru 
semantic web ontologies defined specialized rdf vocabulary implementation perspective nice feature omitted creating called anonymous resources resource pointed name 
speak multiple edges possibly identical nodes allowed 
sake brevity write abbreviate uniform resource identifier uri xml namespaces 
predefined statements interpretation give ontology definition example uri rdf type rdfs class expresses resource uri class 
data structures data associated conceptual model ontologies 
languages representing ontologies semantic web currently proposed 
mainly differ expressivity language constructs 
officially recommended rdf schema dr vocabulary ontologies 
oem semantic information supposed included labels supposed self describing humans semantics data explicitly 
reader may note ontologies enforce structure rdf data 
professor employee rdfs class tutor student rudi raphael daniel phd student fig 

class hierarchy rdfs simple ontology 
rdf schema rdfs incorporates unique notion object orientation 
introduces classes subsumption hierarchy classes compare dashed lines denote instantiation solid lines denote subsumption 
rdfs subsumption allows multiple inheritance set inclusion semantics 
subsumption establishes partial order class equivalence expressed cyclic class hierarchy 
extension class defined explicit assignment resources classes 
resource belong class extensions multiple instantiation allowed 
commonly known object oriented data models attributes associations defined class specification 
class properties defined class primitives called properties exist 
specification property defines context resource value pairs property may validly rdf statement 
definition property may include specification multiple domains ranges 
property advises domain classes professor phd student advises correctly applied statement raphael advises daniel 
domain range property defined instantiation domain range may occur resource value pair applies responsible 
properties may placed subsumption hierarchy 
property advises specialization property responsible 
property subsumption establishes partial order features set inclusion semantics 
query extension property responsible model yield tuples rudi raphael raphael daniel 
professor phd student rdfs domain rdfs domain email advises responsible rdfs range rdfs range rdfs subpropertyof rdfs subpropertyof rdf literal student employee supervises employee rdfs domain rdfs range fig 

properties rdfs simple ontology rdf schema fixed architecture unfortunately rdf schema specification provide formal semantics 
issue lead series alternative formal specifications hay ph 
proposed minor modification rdf rdfs introducing stratified layer meta model architecture employed uml gro 
cleans imprecise definitions rdf rdfs considerations rdfs fa 
reader may note restrict generality approach disallowing infinite layers classes 
implementation issues tremendously simplified utilizing fixed layered meta modelling architecture 
proven methodology defining structure complex models need reliably stored shared manipulated exchanged 
design view mechanism section provides design goals ontology view mechanism studies alternatives design dimension careful analysis situation constituted data model novel situation giving semantics specifying type system 
way report related objectoriented views 
perspective relational object oriented databases natural consider views arbitrary stored queries 
apt rdf due reasons 
views related semantic description provided ontology 
especially fact queries name say semantics query result 
rdfs class instance close russell paradox 

query results ary relations 
fit structure rdf model graph 
reasons rely previous views semi structured data models 
views consist object collections associations objects fundamental rdf considered 
agm consider edges meet second issue 
approach addresses issues fundamental design 
issue results distinction views classes views properties 
creation views extends ontology new virtual classes properties created 
semantics extensions understood newly defined resources related established possibly view classes properties declaration subclass subproperty relation 
issue results limitation definition views involve queries return unary views classes binary views properties tuples 
ensures views functional queries 
allows views composed 
user choose arbitrary previously unused identifiers views design goals constraints constituted particular underlying data model mainly goals particular view mechanism motivate particular design 
want support 
important goal respect approach view ontology 
particular operations manipulating underlying data ontological primitives 
semantics transformation properly reflected respect semantics ontological primitives 

collection views possible order form external schemata proposed level ansi sparc database architecture 
provide schemas speak external ontologies 

approach functional allowed create views view 
fulfilled see 

additionally web aware allowing create views set source rdf models 
design considerations approaches proposed object oriented views 
approaches differ data models query languages set functionalities supported view mechanism 
follow dimensions established note automatically excludes identifiers specifications rdf rdfs 
support external schemata sense ansi level architecture databases programs allowed access database 
design goals support feature sense run slt 
refer class property views 
classes properties coming underlying rdf model called base classes base properties respectively 
placement view elements hierarchy consideration decide place views respective hierarchies 
happen ways 
hand done explicit assignment relations user 
implementation guarantee basic consistency compatibility domain range classes properties 
semantics operation defines view properly represented relation established automatically 
consistency issues discussed section 
view population decision take populate views 
principle alternatives exist object oriented views 
object preservation view classes populated instances base classes 
object generation views populated new instances 
set tuples views return sets tuples akin relational world 
look related object oriented views reveals approaches support alternative 
instance ab introduces virtual classes show instances base classes allowing object preserving views majority oo view approaches 
additionally imaginary classes allowed populated tuples defined query results new object ids computed 
ber suggest allow object generating views motivated goal support schema evolution view mechanism requires computation object identifiers 
object generation useful feature views defined join operation require object generation rdf data model allows anonymous resources obviating need oid generation support kind views 
allow views 
course object identifiers preserved source model 
notably object preserving views interface resolution conflict mentioned arise rdf supports multiple instantiation 
updates views data updated important criterion view mechanism 
fact view update commonly known problem relational databases views introduce potential ambiguity context defined operations relational join 
object oriented view mechanisms problem somewhat simpler due fact ambiguity avoided oids 
view mechanism principally updatable object preserving views object identifiers source database 
implementation cf 
chapter handle updates dynamic reclassification objects required objects change state 
fact ontology data encoded model complicates task tremendously check view definitions valid 
problem similar problem maintaining view definitions database schemas change 
plan consider updatable views step 
query language view definition language rely subset rql ack declarative language querying rdf 
typed language follows functional approach 
basic building blocks generalized path expressions offer navigation rdf graph 
graph viewed collection elements 
rql able switch schema data querying exploiting class property hierarchies 
choice rql motivated fact rdf query language takes semantics rdfs ontologies account 
need aware semantics main reason query languages operating syntactic xquery bcf fail meet goals 
due lack space give short rql section 
interested reader may refer ack depth description 
query gives gentle rql returns collection resource value pairs related property email select email rql queries follow basic select construct known sql 
construct email called basic data path expression atom path expressions 
example variables bound resources values rdf statements property email 
notation path expressions introduce variables 
rql permits interpretation superimposed semantic descriptions offered ontologies 
instance inheritance hierarchy considered accessing class extents 
path expressions concatenated just syntactic shortcut implicit join condition 
query shows features 
select student advises query returns identifiers students advised students 
class phd student subclass student query return daniel rdf model depicted 
furthermore rql supports set operators union intersection difference 
boolean operations pattern matching selection clauses 
view definition language sections talks view definition language means define class views property views external ontologies 
resembles sql syntax takes rql query language 
views classes definition views classes involves components 
users define arbitrary rql queries return unary tuples resources 
tuples constitute instances extent 
second view properly classified class hierarchy 
enables understandability view wrt 
set inclusion semantics subclass relationship 
basic syntax definition class views cf 
involves components 
create class view uri subclassof super uri select instance 

fig 

definition framework views classes example characterize class job title phd students usually germany employed advise students create class view subclassof employee select employee intersect select phd student advises convenience definitions consequently amend syntax convenience definitions allow define views selection set operations 
generate standard class view definition automatically view specifications 
especially classification view subclassof clause generated automatically 
selection views convenience operation provided system selection subset members certain class selected 
create class view uri base uri select instance 

user able pose rql queries 
system ensures result query selection base class cf 
chapter 
definition creates new class supervisors populated employees supervise 
create class view supervisors employee select instance instance supervises standard class view definition created provided view specification create class view supervisors subclassof employee select instance instance supervises instance select employee conforming classification discussed section view subclass employee 
additionally mentioned type casting expression appended clause 
difference views provide convenience syntax create class view view uri uri minus uri definition create class view unemployed students populated students job 
create class view unemployed students student minus employee translation convenience syntax standard view definition involves generation subclassof statement corresponds 
additionally appropriate rql query generated union view define syntax creation views unions class extents create class view view uri uri union uri union uri example class view scientists consists professors phd students created definition select minus select create class view scientists professor union translation definition standard form involves computation common super class unified classes 
respect ontology example common superclass professor phd student 
view super class subclassof statement omitted translation 
consequently properties email responsible validly applied scientist wrt 
updates 
walking generalized path expressions rql involves implicit joins properties defined instances extent view remain visible view participates queries 
generation rql query translated definition straightforward intersection view intersection operator convenience syntax defined create class view view uri uri intersect uri example defines class view students job create class view student intersect employee translation convenience syntax standard definition involves generation subclassof statements rql query 
views properties property views defined arbitrary query expressions 
mentioned queries return binary tuples query additional information required define view properties 
depicted involves 
definition domains ranges view 
sorting view property hierarchy 
forcing query return binary tuples convenience definitions property views class views 
comprise selection difference intersection union 
convenience definitions rename refine properties 
due lack space similarity class views won go detail 
select union select tuple resource resource resource literal reflect literals domain rdf properties 
external ontology create property view uri set domain domain uri set range range uri subpropertyof super uri select domain range 

fig 

definition framework views properties basic principles mentioned ensure views fulfill traditional role providing new abstraction level allowing customization information possibly access management semantic web 
sufficient application additional goals met web perspective ensure interoperability content 
content understood basic object set basic objects published document 
formation new sets objects central making content semantic web interoperable 
view definition language additionally supports document formations 
collections view definitions imported classes imported properties base rdf model form new external ontology 
hand provides external schemata sense ansi sparc level architecture databases applications users access database specified subschema issue queries 
hand allows customized transformed serialization rdf model 
serialization extents classes properties materialized 
serialization involves modification ontology meet access restriction requirements 
parts required understanding external ontology visible serialization involves reduction adoption class property hierarchies cf 
section 
content situated rdf model distributed rdf models allowed aggregate rdf models external ontology transformation data means views virtual model 
important feature community portals want expose data content consumers characterized presents basic notation definition external ontology 
allowed refer data source databases 
user import classes properties source databases 
import direct extents argue materialization extents sufficient conceptualization provided ontologies presents important value 
example companies internal thesauri published freely 
example community portal www org collects distributed information community members 
create external ontology uri database model uri model uri import class uri uri import property uri uri additional view definitions fig 

bnf notation definition external ontology classes properties visible external ontology 
refer complete extents include instances resource value pairs subclasses subproperties enable fine grained control uncovering extents 
naturally import operations object preserving semantics statements updateable data managed system 
updates propagated easily underlying source databases 
reader may note import operation distinguish base classes properties view siblings created source databases 
allow customization data additional views defined external ontology 
queries views unrestricted access data 
means imported data visible complete set data contained included source databases queries 
truly virtual databases established external ontologies 
example provides external ontology captures administration perspective scientific department 
includes information people receive payments 
information extracted institute web site intended republished human resource department university create external ontology database import class employee scientists working students import property email supervises classification consistency automatic hierarchy classification users combine arbitrary algebraic operations view semantic characterization view automatically problem undecidable run bee 
introduced additional possibilities conveniently define views classes classification automatically determined query semantics cf 
section 
provides overview classification semantically correct algebraic operation 
class views defined unary queries example www aifb uni karlsruhe de runs semantic web technology fixed projection fig 

placement views hierarchy operations joins cartesian product relevant 
joins query automatically decompose selection wrt 
unary result queries 
cartesian product creates binary results 
duplicates automatically removed interpretation result regard result set instances 
semantics depicted operations motivated set inclusion semantics inheritance rdf selection reduces initial set creates subsets 
query defined selection basis query subsumes view 
difference operator rewritten equivalent selection involving negation 
subsumes view 
union extensions unified classes subsets view 
view subsumes unified classes 
view subsumed common superclass unified classes 
intersection operator opposite fact holds 
intersection subset extents intersected classes 
intersected class subsumes view intersection operation 
class views created algebraic operators updatable 
updates propagated underlying instances instances identified uri 
insertions new resources class views propagated insertions respective superclasses view 
adding new instance view intersection physically adds new object classes subject intersection 
true adding new instance view selection difference operators 
new objects added union views adding instance superclass view meet query condition invisible view 
regarding stance classification consider description logics fb related 
advantage description logics hierarchical classification concepts resembles subclass relation 
called subsumption automatically computed regarding subset relation concepts extensions 
views classes implicitly classified clause manually assigning super class approach 
ensuring consistency class views selection system ensures result query selection base class 
done appending expressions clause instance select base uri expression provides kind type casting ensures variable stance take members base class value 
query involve arbitrary joins aggregation general property automatically ensured 
additionally consistency view definition ensured compile time 
consistency property domains ranges ensured tuples returned meet constraints specified domain range definition 
kind type cast implemented ensuring variables domain range take values extent specified domains ranges view cf 

technically done appending expressions clause query domain select domain uri done specified domains 
adoption ranges straightforward 
ranges exception properties range specified basic literals 
motivates variable names allowed occur projection part query fixed 
property hierarchy establish specialization property ensure values allowed super properties 
domain range definitions property compatible connected class hierarchy domain range definitions super properties 
check compile time appropriate consistency rules cf 
ov 
rdf literals represent kinds datatypes semantic consistency respect datatypes guaranteed 
example numbers fill range property strings super properties 
example definition creates new property view relates phd students email addresses advised students 
create property view mails advised set domain phd student set range rdf literal subpropertyof email select domain range phd student domain 
advises 
email range definition consistent domain constraints specified super property email 
range conflicts arise 
query modified select domain range phd student domain 
advises 
email range domain select phd student due required casting mentioned 
exception casting range applies range literal 
domain ensured extent phd student appended clause 
reader may note created property automatically classified property hierarchy semantically correct classification automatically 
implementation give brief survey implementation effort 
view mechanism currently implemented part kaon server multi user capable transactional rdf repository 
kaon server part open source kaon tool suite order provide query language view mechanism implemented large subset rql translating queries appropriate logic programs original rql definition compiled sql provide implementation query language 
logic programs operationalized inference engine 
notably approach querying rdf quite common cf 
triple sd ms 
usual approach taken translation rdf models simple ternary predicates query rdf logic programming approaches different expressivity 
logic programming allowed provide clean implementation aforementioned consistency rules utilizing inference engine operationalize complete view mechanism 
view definitions rely full expressivity provided consistency rules require highly expressive language 
specifications external ontologies stored normal rdf data 
due fact specifications external ontologies easily mapped rdf specialized vocabulary defines required primitives 
querying consistency check inference processes question remains view mechanism implemented 
clients able object oriented kaon api built rdf api access ontologies corresponding instances 
api implements transparent access class property views 
extension values defined views computed runtime 
soon external ontology loaded consistency check inference processes started 
transform external ontology logic serves input 
inferred inconsistency lead denial service 
implement query engine 
functions specified rql implemented 
inference engine kaon semanticweb org statement subject predicate object materialize external ontologies 
currently transiently materialized snapshots 
prototype support updates 
external ontologies views remain read 
motivates aforementioned materialization strategy external ontologies sense web perspective agents access collections objects contained document standard protocols individual objects queries 
years semantic web evolved important research development topic 
ontologies widely seen crucial part semantic web providing precisely defined semantics metadata associated web sources 
developers ontologies able envision kinds uses advance 
view mechanism required allows build application specific views ontologies associated metadata 
nowadays rdf rdf schema considered representational basis metadata ontologies semantic web 
order meet specific requirements semantic web applications rdf rdf schema exhibit characteristics differ important aspects object oriented data models 
proposed view mechanism takes specific aspects account notably absence typing handling properties class primitives specific notion object identity provided rdf decentralized semantic web context 
solution provides full fledged view approach tailored requirements 
approach described include strategies materialization 
materialization strategies required addressing scalability issues semantic web 
currently process defining strategies 
furthermore approach support view updates 
urgent requirement semantic web applications exploit read access views updates 
point view view mechanism important step putting idea semantic web practice 
kaon semantic web infrastructure gradually extended include additional aspects view mechanism semantic web 
ab serge abiteboul anthony bonner 
objects views 
proc 
intl 
conf 
management data pages 
acm sigmod may 
ack alexaki christophides karvounarakis plexousakis tolle bernd amann michel scholl anne marie 
managing rdf metadata community webs 
wcm salt lake city utah pages october 
agm serge abiteboul roy goldman jason mchugh vassalos yue zhuge 
views semistructured data 
proceedings workshop management semistructured data tucson arizona may 
aqm quass mchugh widom wiener 
lorel query language data 
int 
journal digital libraries 
bcf scott don chamberlin mary fernandez daniela florescu jonathan robie jerome simeon stefanescu 
xquery xml query language 
technical report april 
bee beeri 
formal models object oriented databases 
proc 
st intl 
conf 
deductive object oriented databases pages 
ber elisa bertino 
view mechanism object oriented databases 
advances db technology proc 
intl 
conf 
extending database technology edbt number lecture notes computer science pages vienna austria march 
springer 
bl tim berners lee 
xml semantic web talk 
internet www org talks xml tb slide html december 
delobel dos santos abiteboul 
virtual schemas bases 
proc 
extending database technology edbt 
decker brickley saarela angele 
query inference service rdf 
ql query languages workshop december 
dr dan brickley guha 
resource description framework rdf schema specification 
internet www org tr cr rdf schema 
fb 
baader 
terminological knowledge representation proposal terminological logic 
dfki technical memo tm deutsches forschungszentrum fuer intelligenz kaiserslautern 
elisa bertino barbara catania jesus garcia molina 
formal model views object oriented database systems 
theory practice object systems 
gro object management group 
unified modeling language uml version 
internet www omg org technology documents formal uml htm 
gru gruber 
translation approach portable ontology specifications 
knowledge acquisition 
hay pat hayes 
rdf model theory 
internet www org tr wd rdf mt september 
cris 
uml standardization odyssey 
communications acm vol october 
ls lassila swick 
resource description framework rdf model syntax specification 
internet www org tr rec rdf syntax 
ms massimo marchiori saarela 
query metadata logic 
ql query languages workshop 
ov daniel oberle raphael volz 
implementation view mechanism ontology metadata 
university karlsruhe th 
ph pan horrocks 
metamodeling architecture web ontology languages 
proceedings semantic web working symposium swws pages 
run elke rundensteiner 
multiview methodology supporting multiple views object oriented databases 
proc 
th intl 
conf 
large data bases vldb pages vancouver canada 
acm sigmod 
sd michael sintek stefan decker 
triple rdf query inference transformation language 
deductive databases knowledge management 
slt marc scholl christian markus 
views object oriented databases 
proc 
nd workshop foundations models languages data objects pages september 
wie gio wiederhold 
intelligent integration information 
sigmod pages 
zhuge garcia molina 
graph structured views incremental maintenance 
proc 
th int 
conf 
data engineering 
