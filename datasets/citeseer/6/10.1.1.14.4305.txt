ieee transactions communications vol 
com april data compression adaptive coding partial string matching john cleary ian witten member ieee developed technique arithmetic coding conjunction markov model source powerful method data compression situations linear treatment inappropriate 
adaptive coding allows model constructed dynamically encoder decoder course transmission shown incur smaller coding overhead explicit transmission model statistics 
basic conflict desire high order markov models need formed quickly initial part message sent 
describes conflict resolved partial string matching reports experimental results show mixed case english text coded little bits character prior knowledge source 
approaches data compression split problem parts modeling statistics source transmitting particular message generated source small number bits 
part markov modeling generally employed language dependent word dictionaries data compression explored 
case problem transmitting model faced 
usual procedure arrange transmission system set encoder decoder share general model sorts messages sent 
model take form table letter diagram frequencies 
alternatively extract appropriate statistics message 
involves preliminary scan message encoder preamble transmission informs decoder model 
spite overhead significant improvement obtained conventional compression techniques 
second part transmitting message generated source small number bits easier 
conceptually simply enumerate messages generated model allocate part code space size depends message probability 
procedure enumerative coding unfortunately impractical models complexity 
invention arithmetic coding provided method guaranteed transmit message number bits arbitrarily close entropy respect model 
method thought generalization huffman coding performs optimally statistics convenient power relationships 
shown equivalent enumerative encoding gives coding efficiency 
editor data communication systems ieee communications society publication oral presentation 
manuscript received may revised may 
supported natural sciences engineering research council canada 
authors department computer science university calgary calgary alta canada 
obvious disadvantages having encoder decoder share fixed model governs coding messages 
may appropriate tightly defined circumstances special purpose machines facsimile transmission documents variety different types message 
example imagine encoder embedded general purpose modem computer disk channel 
appropriate model general applications may standard mixed case english text 
system may encode long sequences upper case text program text formatted bibliography files statistics quite different model 
clearly case basing model statistics message currently transmitted 
require pass approach pass message acquire statistics second actual transmission 
procedure quite unsuitable applications 
usually wishes sending message seen 
obvious solution arrange sender receiver adapt model dynamically message statistics transmission proceeds 
called ad coding 
shown theoretically models adaptive coding significantly worse pass approach significantly better 
verifies results practice adaptive coding markov source 
adaptive coding problem initial part message statistical information gained efficient coding 
hand wishes high order markov model provide data compression possible appropriate statistics gathered 
takes longer gather statistics high order model 
hand wishes low order model accelerate acquisition frequency counts efficient coding sooner message 
solution partial match strategy high order model formed lower order predictions cases high order ones available 
structure follows 
section presents coding method partial string match strategy gain performance early message 
section iii results experiments coding scheme 
experiments variety different sorts data compression respectable cases exceptionally achieved 
resources required method practice discussed 
appendix gives formal definition character probabilities estimated partial string matching 
ii 
coding arithmetic coding arithmetic coding discussed number authors 
imagine sequence ieee cleary witten data compression symbols encoded sequence sequence possible values ordered arbitrarily say win assigned wl wrn 
encoding computed iteratively probabilities step 
arithmetic coding interesting properties important follows 
symbol probabilities wk may different step 
wide range algorithms compute wk independent arithmetic coding method 
efficient implemented small fixed number finite arithmetic operations symbol processed 
output code length determined probabilities symbols arbitrarily closely approximate sum log xi arithmetic sufficient accuracy 
adaptive transmission model arithmetic coding commonly uses fixed probabilities contingent current context derived statistical analysis text 
method derives probabilities message 
furthermore encoding done single pass message statistics gathered preceding portion message 
continually changing time transmission proceeds 
adaptive strategy langdon rissanen fixed order markov models 
roberts discusses similar techniques applied encoding authorship identification english text 
ziv lempel proposed coding technique involves adaptive matching variable length strings 
superficial technique appears dif ferent arithmetic coding plus adaptive model approach pursued 
shown langdon ex sts scheme form equivalent ziv lempel coding 
may difficult implement coding system predictions probabilities changing time 
problem great imagined usually extra need transmitted update probabilities 
decoder working properly seeing exactly message sequence encoder update frequency counts just easily encoder 
course necessary character encoded old model counts updated take account occurrence character 
having encoded character encoder updates model 
having decoded decoder updates model 
assuming error free transmission assumption models agree explicit details models transmitted 
appropriate error correction policies error detection retransmission protocols applied encoded data probability undetected errors arbitrarily small 
markov modeling partial string matching coding scheme uses markov model conditions probability particular symbol occur sequence characters immediately precede symbol 
order markov model symbol number characters context prediction 
example suppose order model selected current symbol sequence 
current sequence 
character denoted member coding alphabet bit ascii codes section 
course technique restricted alphabet 
particular characters space significant 
space written merely enhance legibility 
model order character predicted basis occurrences trigrams pi earlier message 
scan english dictionary show context high frequency word give reasonably high probability context 
coding scheme fixed order 
order large predictions infrequent sequences occur message seen 
context occurs character seen example occurrence escape mech anism transmit character identity 
fixed length context encoder decoder recognize predictions basis longest string match context previously seen ones 
creates ambiguity sees message sequence 
example character occurs context time prediction length context 
string occurred previously message preceding space word history coding character context 
es encoder decoder escape mechanism back previous level 
character encoded level order model implicit stored order 
string occurred previously context shortened empty string 
encoder second escape sequence inform decoder event 
cause character predicted basis order model frequency far message 
character seen predicted order model escape mechanism third time 
actual identity character transmitted probability 
escape probability es case great interest occurs encoder encounters character context seen 
example suppose occurs time context word word begins occurred message far 
course happen quite frequently initial part message 
impossible encoder encode basis model 
notice talking just occurrence particular character message occurrence possible context 
context allocate probability event novel character occurs context 
difficult imagine rationale optimal choice probability 
extensive discussion problem philosophers time kant 
pierce gives outline early 
modern solutions context markov models sum roberts refers zero frequency problem see 
roberts proposes solution takes weighted sums probability predictions models different orders 
noted authors absence priori knowledge theoretical basis choosing solution 
ieee transactions communications vol 
com april take pragmatic approach problem investigated performance different expressions probability novel event 
motivation experiments described section see clear choice practice 
experiments needed compare techniques referred 
technique estimates probabilities arithmetic coding allocating count possibility symbol occur context seen 
denote number times symbol occurs context coding alphabet say ascii 
denote total number times context seen za qc 
purpose arithmetic coding estimate probability symbol occurring context escape probability character occurs novel context remains accounting seen characters number characters occurred context size df coding alphabet characters occurred context 
allocate novel character coding probability 
convenience call technique method second technique method classes character particular context novel occurred twice 
motivated consideration event may error anomaly event occurred twice repeated 
probability event occurred context est mated escape probability 
allocate novel character coding probability formal definition probability calculations partial string matching appendix example calculation probabilities 
includes improvement characters predicted higher order models calculating probabilities predictions lower order models 
iii 
experimental performance sample messages adaptive partial string match coding method tested different kinds message 
table sum table success partial string match method different kinds message data chars bits bits coded char char 
english text 
english text 
english text 
source 
bibliographic data 
numeric data binary format 
binary program 
grey scale picture bit pixel values 
grey scale picture bit pixel values escapes calculated method example point transform sample rate khz gives equally spaced frequency components khz shown table 
time domain frequency domain sample time sample frequency number number sec hz sec hz table time domain frequency domain samples point dft khz sampling top half frequency spectrum interest contains complex conjugates bottom half reverse order corresponding frequencies greater tha half sampling frequency 
hz resolution frequency domain samples msec stretch speech needs transformed 
technique take overlapping periods time domain give new frequency spectrum msec 
acoustic point view reasonable rate re compute spectrum noted discussing channel rate change spectrum limited speed speaker move vocal organs msec reasonable transmitting storing spectrum 
dft complex transform speech real signal 
possible dfts putting time wave form real parts input imaginary parts 
destroys dft symmetry property holds real inputs 
give dft complex sequence formed way easy separate dfts real time sequences 
time sequence transform complex sequence follows complex conjugate parts spectrum upper frequency region fig 

example text taken data sample 
results different values order markov model method discussing results say kinds message 
samples english text 
upper lower case characters normal way 
sample shortest technical 
includes formatting controls character line 
sample longest complete chapter book 
notice sample contains half characters 
prior coding removed formatting controls mathematical expressions automatically left 
anomalous gaps text 
tabular illustrations deleted 
fig 
shows representative part text includes small table 
sample chapter book forms subsequence sample included study coding efficiency exposing coding scheme large representative sample text transmitting cleary witten data compression actual message 
fourth sample computer program source form written language including comments newline characters 
fifth short extract bibliography file contains authors names titles details structured manner suitable computer indexing keyword retrieval 
samples represented ascii text requiring bits character 
samples bits character 
sample data file containing geophysical 
information binary format 
sample binary program compiled pascal vax computer 
care taken remove symbol table coding text included 
apart literal strings 
sample grey scale picture histogram equalized stored raster order grey levels 
sample picture pixels truncated bits grey levels 
coding scheme ex 
results coding method table expressed terms bits coded character 
example th line shows short english message coded bits character optimal value 
penalty paid choosing large small bits needed percent 
optimal value grows slightly length message 
piece english text sample optimum apparent table shown 
text sample unable carry experiment resource reasons 
demonstrated method able code mixed case english including tables arbitrary spaces bits character 
average coding performance entire encoder decoder starting scratch prior information statistics mes sage 
table show final percent sample half characters coded bits character 
indicates expected coding decoding modules primed short representative sample kind english characters case 
notice better operating unprimed mode short character text sample bits character value 
interesting compare results sample program jn source form sample english text length 
lowest value coding scheme perform program english 
abundance unusual characters program text leading larger effective alphabet 
encountered language assure appears cryptic especially performance improves larger values fact optimum sample occupies bits character percent sample 
structured rm program variables declared repeated relatively keywords drawn relatively small set syntax constrains operators occur variables keywords 
example structured information bibliographic text file sample 
contains formatted information free text form titles authors names 
coding bits character achieved better obtained text file similar size sample 
surprisingly smaller coding gain obtained binary data 
geophysical data sample table ii comparison optimum compression achieved escape techniques data method method improvement bits char bits char 
text 
glish text 
english text 
program 
data 
numeric data jn binary format 
binary program 
gray scale picture bit pixel values 
grey scale picture bit pixel values coded bits byte optimal value 
represents reduction percent unencoded value bits byte reduction percent achieved samples english 
compiled program sample takes bits byte percent unencoded value 
presumably noisy geophysical data lead suspect greater gains possible 
hand coding programs expressed carefully designed eliminate redundancy 
grey scale pictures provide interesting example 
bit pixels bits pixel achieved percent optimal value 
value low indicating little information obtainable context pixel 
surprising low order bits und noisy 
linear treatment assumption additive gaussian probably kind data 
hand discarding lower order bits give bit pixel eliminates noise making coding scheme perform better bits pixel 
nt unencoded value 
suspect may better achieved techniques linear prediction 
selection escape probability investigated algorithms calculating escape probability probability character occur context occurred 
methods called described 
practice find clear choice 
seen table ii compares best compressions achieved techniques messages 
method slightly better texts worse 
apparent relation length type message escape technique fares better 
insensitivity escape probabil ity calculation quite satisfying 
illustrates coding method robust gaining idea escape mechanism precise details algorithm implement 
point reinforced roberts different technique blending markov models different orders achieve excellent results unfortunately texts easily comparable 
particularly fortunate view fact noted earlier hard see particular escape alg justified theoretically 
fig 
shows graphs coding value text samples 

general shown typical examples 
case method relatively efficient small values efficient large ones 
ieee transactions communications vol 
com april fig 

method 

order df markov coding performance plotted samples 
method deteriorate quickly past opt mum valu relative lack sensitivity ig large may method preferable situations hard estimate best value evaluation partial matching recall scheme uses partial match begins forming model desired order uses partial string matching force predic tions nascent model early value approach demonstrated fig 
shows coding performance varies line progresses long text sample 
time terms number characters plotted logarithmic scal 
vertical axis nts coding performance entire initial substring message 
lower line shows performance partial string match algorithm algorithm upper line partial string matching suppressed 
cases chosen 
partial string matching allows efficient coding achieved message 
example bit rate characters bits character partial string matching exceeds 
improved perform ance partial string matching seen loh 
piece text 
eventually course message really homogeneous partial string matching cease give 
advantage 
fig 
indicates take long time fairly modest value 
lines characters 
caused sudden disruption statistics txt character interested reader find just halfway chapter book 
taken warning text statistics real life homogeneous nicely making particularly appropriate adaptive method 
iv 
resource requirements consider th resources run algorithm 
feature point view practical coding time required enc ding decoding grows linearly length message 
furthermore way grows linearly model 
impressive data compression demonstrated models low order 
current implementation experimental inefficient 
written pascal language vax computer 
models order encoding fig 

partial match characters cumulative coding performance plotted time sample 
time order ms character har decoding takes similar time 
formance implementations parts investigated previously different contexts 
algol partial string match search possible ms character eighth order model computer 
believe possible reduce time taken partial string matching program factor better algorithms hand coding critical parts tightly coded assembly language program arithmetic coding achieved character encoding decoding vax 
partial string matching arithmetic coding cover tion scheme complete data compression system operate approaching characters special purpose architectures vlsi envisaged increase speed characters second important resource memory space re quired encoder decoder 
common markov models grow exponentially order model quite large practice order models english text 
notice scheme uses statistics required memory empty initially 
complicated tradeoffs space time implementation complexity partial string matching algo rithms 
experimental implementation stores markov model tree structure implementation execution grows linearly occupies reasonable space 
sample data number nodes tree shown table various orders del 
results reported obtained nodes 
experimental implementation pascal consume bits node easily improved 
node stored character code count number times node visited allow proba bilities calculated indicate node current level show 
subtree level 
allowing count pointer bits character code node con bits storage 
implementation accommodates nodes maximum attained 
bits required pointer 
furthermore count safely reduced bn basis limiting counts small maximum probably impair coding efficiency significantly 
reduce storage node bits mbytes suffice nodes 
cleary witten data compression table iii size data structure required different kinds message data chars nodes tree 
english text 
english text 
english text 
source program 
bibliographic data 
numeric data binary format program 
grey scale picture bit pixel values 
grey scale picture bit pixel values alternative implementations compact hash described cleary reduce esti mated bits node mbytes sacrificing search time 
modifications coding method reduce number nodes needed 
example partial model storage 
order model stored initially 
seen give ambiguous predictions augmented order model contexts ambiguity arises 
general order node model increased selectively maximum value prediction seen emanate 
possibility construct non automaton model message string store reduced form described witten 
overly concerned amount storage method consumes 
storage needed 
th continued inte circuit technology empty store cheap resource 
major expense associated memory cost filling information maintaining dating 
done automatically coding scheme 
coding methods exact cost requiring statistics calculated stored coding begins 
described 
applications find worthwhile prime encoder decoder representa tive statistics transmitting message 
easily done sending representative sample text main transmission begins saw discussion table effective 
statistics misleading course deterioration coding efficiency expected 
adaptation ensure initial priming eventually outweighed statistics message 
appendix formal definition probabilities estimated characters partial string matching 
extend notation earlier 
cm count number times character current context model maximum order stored model 
order gracefully cover special case character occurred message cm models range defined alphabet 
set characters predicted model order higher order models am 
method set characters counts greater order model counts greater 
iv calculation partial string match probabilities method values pm brackets higher order models sets allow probability predictions improved neglecting characters predicted higher order models calculating probabilities predicted lower order models 
current context sequence occurred previously message sequence member definition character occur set am 
definition 
character alphabet occur precisely method probability character rela tive model order estimated cm total count characters predicted model order cm crn oa rn gives estimated probability novel character occurring relative order pm cm oa estimated probability character partial string matching pm el am 
words compute start highest order reducing order step take product escape probabilities character predicted 
multiply product probability estimated character model positively predicts 
example calculation small alphabet characters abcdef table iv 
possible extend meth partial string matching suitably modifying am era prn 
acknowledgment neal providing timing data fast implementation arithmetic coding vax anonymous referee pointing early zero frequency problem kant 
ieee transactions communications vol 
com april ahl recognition read natural corpus proc 
ieee lnt 
conf 
acoust speech signal processing tulsa ok apr pp 

cleary associative computer ph dissertation univ canterbury christchurch new zealand 
compact hash tables ieee trans 
pub 
trees tries pointers dep 
cornput 
sci univ calgary calgary alta res 
rep sept 

cleary witten enumerative adaptive coding trans 
inform 
theory published 

cover enumerative source encoding ieee trans 
form 
theory vol 
pp 
jan 
guazzo general minimum redundancy source coding algo rithm ieee trans 
inform 
theory 
pp 
jan 
harrison ith linear prediction sion bell syst 
tech 
pp 
july 
hunter 
robinson international digital facsimile coding standard proc 
ieee voi pp 
july 
cx jones efficient coding long se ieee trans 
inform 
theory vol 
pp 
may 

ritchie programming language 
cliffs nj prentice hall 
langdon 
rissanen compression black images 
arithmetic coding ieee trans 
commun vol 
com ppf june 
langdon note model compressing individual ieee trans 
inform 
theory vol 
pp 
mar 
lesk refer nix programmers manual bell lab murray 
hill nj 
coding fast data compression ph stanford univ stanford ca 
induction world mathematics vol 
ed 
new york simon schuster pp raviv decision making markov chains applied prob lem te rn ieee trans 


theory vol 
pp 
oct rissanen arithmetic codings number representations acta 

vol 
math 
pp 

langdon universal modeling cod ing ieee trans 
inform 
theory vol 
pp 
jan 
roberts local order estimating analysis noiseless source coding identification ph dis stanford univ stanford ca 
white printed english compression dictionary encoding proc 
ieee vol 
pp 

witten approximate non deterministic modelling behaviour sequences lnt 
general syst vol 
pp 
jan 
witten principles speech 
london england academic 
ziv lempel compression individual sequences variable rate coding ieee trans 
inform 
theory vol 
pp 
sept 
john received sc 
hens 
sc 
degrees mathematics ph degree electrical engineering university canterbury christchurch new zealand ind respectively 
worked software house 
pr geni systems wellington new zealand 
lecturer computer science victoria university wellington wellington new zealand 
moved university calgary calgary alta canada currently assistant professor 
current research interests include adaptive systems applications man machine interfaces logic programming formal specification applications parallel processor systems 
ian witten received 
class hon urs degree mathematics cambridge university cambridge england sc 
degree computing science 
university calgary calgary alta canada ph degree electrical engineering essex university colchester eng land 
lecturer senior lecturer department electrical engineering essex university re returned calgary take department computer science 
research interests span field sys ems specialized fundamental problems human machine learning computational phonetics science speech synthesis computer signal processing document preparation systems documentation graphics 
author author publications including books communicating microcomputers new academic principles computer speech academic 
