fca merge bottom merging ontologies gerd stumme alexander maedche institute applied computer science formal description methods aifb university karlsruhe karlsruhe germany www aifb uni karlsruhe de wbs gst ontologies established knowledge sharing widely means conceptually structuring domains interest 
growing usage ontologies problem overlapping knowledge common domain critical 
propose new method fca merge merging ontologies bottom approach offers structural description merging process 
method guided application specific instances source ontologies merged 
apply techniques natural language processing formal concept analysis derive lattice concepts structural result fca merge 
generated result explored transformed merged ontology human interaction 
ontologies established knowledge sharing widely means conceptually structuring domains interest 
growing usage ontologies problem overlapping knowledge common domain occurs critical 
domain specific ontologies modeled multiple authors multiple settings 
ontologies lay foundation building new domainspecific ontologies similar domains assembling extending multiple ontologies repositories 
process ontology merging takes input source ontologies returns merged ontology source ontologies 
manual ontology merging conventional editing tools support difficult labor intensive error prone 
systems frameworks supporting knowledge engineer ontology merging task proposed hovy chalupsky noy musen mcguinness 
approaches rely syntactic semantic matching heuristics derived behavior ontology engineers confronted task merging ontologies human behaviour simulated 
locally different kinds logics fzi research center information technologies und neu karlsruhe germany www fzi de wim comparisons approaches offer structural description global merging process 
propose new method fca merge merging ontologies bottom approach offers global structural description merging process 
source ontologies extracts instances set domain specific text documents applying natural language processing techniques 
extracted instances apply mathematically founded techniques taken formal concept analysis wille ganter wille derive lattice concepts structural result fca merge 
produced result explored transformed merged ontology ontology engineer 
extraction instances text documents circumvents problem applications objects simultaneously instances source ontologies basis identifying similar concepts 
remainder follows 
briefly introduce basic definitions concentrating formal definition ontology recall basics formal concept analysis section 
generic method ontology merging section give overview existing related section 
section provides detailed description fca merge 
section summarizes concludes outlook 
ontologies formal concept analysis section briefly introduce basic definitions 
concentrate formal definition ontology recall basics formal concept analysis 
ontologies common formal definition ontology approaches share core items concepts hierarchical relation relations 
sake generality discuss specific features constraints functions axioms 
formalize core way 
definition core ontology tuple set elements called concepts partial order binary relation reflexive transitive anti symmetric set elements called relation names relations short function assigns relation name arity 
said definition considers core elements languages ontology representation 
possible map definition types ontology representation languages 
implementation instance frame logic kifer 
frame logic wellfounded semantics refer 
formal concept analysis recall basics formal concept analysis fca far needed 
extensive overview ganter wille 
allow mathematical description concepts composed extensions intensions fca starts formal context defined triple set objects set attributes binary relation 
read object attribute 
definition define define 
formal concept formal context defined pair 
sets called extent intent formal concept subconcept superconcept relation formalized set formal concepts context partial order complete lattice called concept lattice denoted possible confusion arise double word concept fca ontologies 
comes fact fca ontologies models concept concept arose independently 
order distinguish notions refer fca concepts formal concepts 
concepts ontologies referred just concepts ontology concepts 
direct counter part formal concepts ontologies 
ontology concepts best compared fca attributes considered unary predicates set objects 
related approach supporting merging ontologies described hovy 
heuristics described identifying corresponding concepts different ontologies comparing names natural language definitions concepts checking closeness concepts concept hierarchy 
ontomorph system chalupsky offers kinds mechanisms translating merging ontologies syntactic rewriting supports translation different knowledge representation languages semantic rewriting offers means inference transformations 
ex set formal concepts greatest common subconcept common superconcept 
allows violate preservation semantics trade flexible transformation mechanism 
mcguinness chimaera system described 
provides support merging ontological terms different sources checking coverage correctness ontologies maintaining ontologies time 
chimaera offers broad collection functions underlying assumptions structural properties ontologies hand explicit 
prompt noy musen algorithm ontology merging alignment embedded prot 
starts identification matching class names 
initial step iterative approach carried performing automatic updates finding resulting conflicts making suggestions remove conflicts 
tools described offer extensive merging functionalities syntactic semantic matching heuristics derived behaviour ontology engineers confronted task merging ontologies 
ontomorph description logics approach influences merging process locally checking subsumption relationships terms 
approaches offers structural description global merging process 
fca merge regarded complementary existing offering structural description merging process underlying mathematical framework 
related database community especially area federated database systems 
closest approach described schmitt saake 
apply formal concept analysis related problem database schema integration 
approach knowledge engineer interpret results order modeling decisions 
technique differs points need knowledge acquisition domain expert preprocessing phase additionally suggests new concepts relations target ontology 
bottom ontology merging said propose bottom approach ontology merging 
mechanism application specific instances ontologies merged 
process merging ontologies depicted consists steps instance extraction computing formal contexts ii fca merge core algorithm derives common context computes concept lattice iii generation final merged ontology concept lattice 
method takes input data ontologies set natural language documents 
documents relevant ontologies documents described concepts contained ontology 
documents may taken target application requires final merged ontology 
documents extract instances 
mechanism instance extraction described subsection 
automatic knowledge acquisition step returns ontology formal con linguistic processing linguistic processing fca merge ontology merging method lattice exploration text indicating ontology concepts appear documents 
extraction instances documents necessary usually instances classified ontologies 
situation skip step classification instances directly input formal contexts 
second step ontology merging approach comprises fca merge core algorithm 
core algorithm merges contexts computes concept lattice merged context fca techniques 
precisely computes pruned concept lattice degree detail source ontologies 
techniques applied generating pruned concept lattice described subsection detail 
instance extraction fca merge core algorithm fully automatic 
final step deriving merged ontology concept lattice requires human interaction 
pruned concept lattice sets relation names ontology engineer creates concepts relations target ontology 
offer graphical means ontology engineering environment ontoedit supporting process 
obtaining results assumptions met input data firstly documents relevant source ontologies 
document instance extracted source ontology neglected task 
secondly documents cover concepts source ontologies 
concepts covered treated manually merging procedure set documents expanded 
documents separate concepts 
concepts considered different appear documents fca merge map concept target ontology decision overruled knowledge engineer 
situation appears knowledge engineer want add documents separate concepts 
fca merge method section discuss steps fca merge detail 
illustrate fca merge small example taken tourism domain built specific ontology information systems 
general experiments tourism ontologies modeled ontology engineering seminar 
different ontologies modeled text corpus new web provided www provider tourist information 
corpus describes actual objects locations administrative information cultural events 
scenario described selected ontologies ontology contains concepts relations second ontology contains concepts relations 
underlying text corpus consists natural language documents taken www provider described 
demonstration purposes restrict small subsets ontologies described documents 
examples translated english 
subsection provide examples merging larger ontologies 
linguistic analysis context generation aim step generate ontology formal context set documents taken object set set concepts taken attribute set 
sets come free difficult step generating binary relation 
relation shall hold document contains instance 
computation uses linguistic techniques described sequel 
conceive information extraction approach ontology extraction implemented top smes saarbr cken message extraction system shallow text processor german cf 
neumann 
architecture smes comprises tokenizer regular expressions lexical analysis component including word domain lexicon chunk parser 
tokenizer scans text order identify boundaries words complex expressions mecklenburg expand abbreviations 
lexicon contains stem entries subcategorization frames describing information lexical analysis chunk parsing 
furthermore domain specific part lexicon contains lexical entries express natural language representations concepts relations 
lexical entries may refer concepts relations concept relation may referred lexical entries 
lexical analysis uses lexicon perform morphological analysis identification canonical common stem set related word forms analysis compounds recognition named entities part ofspeech tagging retrieval domain specific information 
steps viewed standard information extraction approaches step specific interest instance extraction mechanism 
step associates single words complex expressions concept ontology corresponding entry domainspecific part lexicon exists 
instance expression hotel schwarzer adler associated 
ontology document url www com region north east germany vacation hotel event concert root doc doc doc doc doc doc doc doc doc doc doc doc doc doc hotel accommodation musical root doc doc doc doc doc doc doc doc doc doc doc doc doc doc contexts result step contains expression hotel schwarzer adler relation hotel holds 
transitivity relation compiled formal context implies 
means hotel holds hotel accommodation document describes instance accommodation depicts contexts generated documents small example ontologies 
document doc contains instances concepts event concert root ontology musical root ontology documents contain information hotels contain instances generating pruned concept lattice second step takes input formal contexts generated step returns pruned concept lattice see input step 
merge formal contexts new formal context derive pruned concept lattice 
merging formal contexts disambiguate attribute sets may contain concepts 
indexation concepts allows possibility concept exists ontologies treated differently 
instance may considered ontology second 
merged formal context obtained compute concept lattice provide specific concepts 
restrict computation formal concepts formal concept generated ontology concept source ontologies 
assures remain range specificity source ontologies 
precisely pruned concept lattice defined section 
example pruned concept lattice shown hotel hotel accommodation vacation root root event concert musical pruned concept lattice 
consists formal concepts 
formal concepts total concept lattice pruned specific compared source ontologies 
diagram formal concept represented node 
empty nodes pruned concepts usually hidden user 
concept subconcept reached descending path 
intent formal concept consists attributes application ontology concepts attached formal concept superconcepts 
interested document names extents contexts visualized diagram 
computation pruned concept lattice done algorithm titanic stumme 
slightly modified allow pruning 
compared algorithms computing concept lattices titanic purpose advantage computes formal concepts key sets minimal generators 
key set minimal description formal concept key set formal concept 
words generates formal concept application key sets serve purposes 
firstly indicate generated formal concept gives rise new concept target ontology 
concept new key sets cardinality 
secondly key sets cardinality generic names new concepts indicate arity new relations 
generating new ontology concept lattice previous steps instance extraction context derivation context merging titanic fully automatic derivation merged ontology concept lattice requires human interaction heavily relies background knowledge domain expert 
result step pruned concept lattice 
derive target ontology 
formal concepts pruned concept lattice candidate concept relation new subsumption target ontology 
number queries may focus relevant parts pruned concept lattice 
discuss queries description general strategy follows 
course technical details hidden user 
documents needed generation target ontology restrict attention intents formal concepts sets ontology concepts source ontologies 
formal concept pruned concept lattice analyze related key sets 
formal concept cases distinguished 
exactly key set cardinality 
key sets cardinality 
key sets cardinality 
empty set key set 
generation target ontology starts concepts situations 
case easiest formal concept generated exactly ontology concept source ontologies 
included target ontology interaction knowledge engineer 
example formal concepts labeled 
second case concepts source ontologies generate formal concept 
indicates concepts merged concept target ontology 
user asked names retain 
example case formal concepts key sets concert musical generate formal concept suggested merged key sets hotel hotel accommodation generate formal concept 
case interesting includes concepts ontology 
means set documents provide details separate concepts 
knowledge engineer decides merge concepts instance observes distinction importance target application adds separate concepts target ontology 
suggestions merge concepts distinguished indication set documents large 
case user want re launch fca merge larger set documents 
formal concepts cases dealt concepts source ontologies included target ontology 
relations source ontologies copied target ontology 
possible conflicts duplicates resolved ontology engineer 
step deal formal concepts covered third case 
generated concepts source ontologies candidates new ontology concepts relations target ontology 
decision add concept relation target ontology discard suggestion modeling decision left user 
key sets provide suggestions name new concept concepts linked new relation 
key sets implies definition key sets formal concept key set 
root root key sets subset empty set generating formal concept 
minimal cardinality considered provide shortest names new concepts minimal arities new relations resp 
instance formal concept middle hotel event hotel event accommodation event key sets 
user decide create new concept default situation create new relation arity hotel event 
key sets cardinality serve purpose key set implies currently hold 
user key set cardinality generating new concept relation check reasonable add subsumptions target ontology 
case show small example 
example large ontologies section 
exactly formal concept fourth case empty set key set 
formal concept gives rise new largest concept target ontology concept 
knowledge engineer accept reject concept 
ontology tools require existence largest concept 
example formal concept labeled 
order concepts target ontology derived automatically pruned concept lattice concepts derived formal concepts resp explicitly modeled user key set cardinality 
querying pruned concept lattice 
order support knowledge engineer different steps number queries focusing attention significant parts pruned concept lattice 
queries support handling second case different ontology concepts generate formal concept 
list pairs indicates concepts different source ontologies merged 
small example list contains instance pair concert musical 
larger application german language pairs zoo zoo listed 
decided engl zoo zoo garden 
second query returns ontology list pairs helps checking concepts single ontology subject merge 
user conclude concept pairs merged differentiation necessary target application decide set documents extended differentiate concepts 
small example list contains pair hotel accommodation 
larger application additionally pairs auto 
target applica tion spatial thing region car means travel 
number suggestions provided third situation quite high 
queries significant formal concepts pruned concepts 
queries combined 
firstly fix upper bound cardinality key sets 
lower bound fewer new concepts 
typical value allows retain concepts source ontologies generated key sets cardinality discover new binary relations concepts different source ontologies relations higher arity 
interested having exactly old concepts relations target ontology suggestions new concepts relations upper bound key set size set 
secondly fix minimum support 
prunes formal concepts cardinality extent low compared number documents 
default pruning minimum support 
possible fix different minimum supports different cardinalities key sets 
typical case set minimum support key sets cardinality higher percentage key sets higher cardinality 
way retain concepts source ontologies generate new concepts relations certain statistical significance 
thirdly consider key sets cardinality concepts come ontology 
way formal concepts give rise concepts relations linking source ontologies 
restriction useful quality source ontology se known high need extend source ontologies 
small example key sets cardinality higher 
key sets cardinality support larger application fixed upper bound cardinality key sets 
obtained key sets telefon telephone public institution support accommodation means travel castle building zimmer room library 
gave rise new concept public phone second new binary relation third new subsumption fourth discarded meaningless 
fca merge bottom technique merging ontologies set documents 
described steps technique linguistic analysis texts returns formal contexts merging contexts computation pruned concept lattice semi automatic ontology creation phase supports user modeling target ontology 
described underlying assumptions discussed methodology 
includes closer integration fca merge method ontology engineering environment ontoedit 
particular offer views pruned concept lattice queries described subsection 
planned refined mechanism extracting instances 
evaluation ontology merging open issue noy musen 
plan fca merge generate independently set merged ontologies source ontologies 
comparing merged ontologies standard information retrieval measures proposed noy musen allow evaluate performance fca merge 
theoretical side interesting open question extension formalism features specific ontology languages instance functions axioms 
question exploited merging process new functions axioms describing interplay source ontologies generated target ontology 
research partially supported dfg bmbf 
chalupsky chalupsky ontomorph translation system symbolic knowledge 
proc 
kr breckenridge usa 
ganter wille ganter wille formal concept analysis mathematical foundations 
springer 
hovy hovy combining standardizing large scale practical ontologies machine translation uses 
proc 
st intl 
conf 
language resources evaluation granada 
kifer kifer lausen wu logical foundations object oriented frame languages 
journal acm 
mcguinness mcguinness fikes rice wilder environment merging testing large 
proc 
kr 
neumann neumann baur becker braun information extraction core system real world german text processing 
proc 
anlp washington 
noy musen fridman noy musen prompt algorithm tool automated ontology merging alignment 
proc 
aaai schmitt saake schmitt saake merging inheritance hierarchies database integration 
proc 
coopis ieee computer science press 
stumme stumme taouil bastide pasquier lakhal fast computation concept lattices data mining techniques 
proc 
krdb sunsite informatik rwth aachen de publications ceur ws 
wille wille restructuring lattice theory approach hierarchies concepts 
rival ed ordered sets 
reidel dordrecht 
