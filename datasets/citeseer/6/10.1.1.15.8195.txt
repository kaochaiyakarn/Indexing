palo alto research center self healing key distribution revocation jessica staddon palo alto research center staddon parc com dirk balfanz palo alto research center balfanz parc com sara miner san diego cs ucsd edu michael malkin stanford university stanford edu may matt franklin davis franklin cs ucdavis edu drew dean sri international csl sri com material ensure timely dissemination scholarly technical 
copyright rights retained authors copyright holders 
persons copying information expected adhere terms constraints invoked author copyright 
cases works may explicit permission copyright holder 
ieee 
personal material permitted 
permission reprint republish material advertising promotional purposes creating new collective works resale redistribution servers lists reuse copyrighted component works obtained ieee 
majority completed author summer intern xerox parc 
majority completed author summer intern xerox parc 
majority completed author employed xerox parc 
self healing key distribution revocation jessica staddon palo alto research center staddon parc com dirk balfanz palo alto research center balfanz parc com address problem establishing group key dynamic group users unreliable lossy network 
term key distribution mechanisms self healing users capable recovering lost group keys requesting additional transmissions group manager cutting back network traffic decreasing load group manager reducing risk user exposure traffic analysis 
user member session particular key sent order able recover key self healing 
binding ability recover keys membership status enables group manager short broadcasts establish group keys independent group size 
addition approach key distribution stateless meaning group member line time able recover new session keys immediately coming back line 

method enabling secure multicast communication periodic distribution new key called session key group members 
messages exchanged group fixed interval time session communicated securely encryption session key 
assume prior start session group manager broadcasts packet containing majority completed author summer intern xerox parc 
majority completed author summer intern xerox parc 
majority completed author employed xerox parc 
sara miner san diego cs ucsd edu michael malkin stanford university stanford edu matt franklin davis franklin cs ucdavis edu drew dean sri international csl sri com session key information group 
group membership dynamic users may added removed group periodically key distribution broadcast targets current group members 
problem distributing keys reliable channel received attention see example :10.1.1.135.9339
study pragmatic variant problem received attention distribute session keys manner resistant packet loss 
unreliable network key distribution broadcast particular session reach user 
requiring user contact group manager request re transmission contribute traffic network heavily burdened group size large re transmissions potentially overwhelm group manager 
furthermore environments military applications important users avoid sending essential messages lest vulnerable revealing location 
propose solution noninteractive 
self healing key distribution 
central concept type noninteractive key distribution call self healing 
idea group members due network packet loss receive particular session key key distribution broadcast recover session key 
group member accomplishes combining information key distribution broadcast preceding lost packet information key distribution broadcast 
words order recover lost session key user received key distribution broadcasts sessions sandwich session corresponding lost key distribution broadcast 
self healing key distribution implemented sequence sessions possible key distribution broadcasts able recover session keys 
basing session key recovery possession broadcasts allows flat hierarchical key management system 
system personal key known exactly user enabling traceability broadcasts constructed stateless manner 
cost benefits increase communication overhead 
keying information naturally decoupled content session key setting overhead incurred smaller payload session keys quite reasonable 
content low overhead reliability mechanism forward error correction 
key distribution schemes provide ability revoke users add users group resistant collusion attacks 
key distribution mechanism broken coalition users say resistant coalitions size applications 
self healing key distribution appears quite useful high security operations military necessary change session keys frequently able revoke users quickly 
self healing key distribution works length time user buffer encrypted messages short revocation accomplished quickly broadcast single packet 
addition self healing approach may useful commercial content distribution applications content highly sensitive 
example mergers acquisitions extensive negotiations involving representatives sides may take place 
frequent session key changes may necessary ability revoke low ranking parties certain exchanges desirable 
emphasize application self healing key distribution expected number consecutive sessions key distribution packets lost number sessions intervals membership particular user 
appears case 
example group conferencing internet burst loss key distribution packets cover interval time order seconds length time user may revoked allow discussion sensitive information example order minutes 
self healing approach reliable key distribution quite appropriate applications user abuse self healing leaving group short time period 
results 
applications described show simple polynomial secret shar personal key collection secrets allows users decrypt broadcast messages 
ing techniques possible achieve noninteractive resistance packet loss small broadcasts 
particular provide unconditionally secure construction broadcast overhead order log bits log session key size collusion resistance denotes number sessions self healing possible closely correlated anticipated packet loss 
show possible achieve broadcasts size mt log bits shifting moderate amount computation user 
constructions provides fast core operation simple polynomial interpolation fixed set sessions resistant collusion 
discuss modular exponentiation secret sharing extend lifetime constructions allowing users evolve personal keys base set appropriate set keys current set sessions 
constructions recovery loss possible delay user part key distribution packets lost single received key distribution packet sufficient recover missed session keys 
constructions stateless group members aren penalized line period time 
property important wireless applications members quickly line moving broadcast range 
addition personal keys system traceable 
consequence traceability collusion resistance way break system long term sense risk identification form coalition users 
part introduce new general technique distributing unique keys select subset users 
result independent interest useful extension earlier techniques distributing common key select subset users 
discuss practical issues addressed implementing self healing key distribution scheme 
core issue parameter choices appropriate intended application compatible existing network protocols 
illustrate tradeoffs system parameters exist staying ip packet size constraints 
parameters packet fragmentation required size constraints aren met fragments formed way useful member fragments received 
result member may able received packets self heal recover session keys directly packets fragments actual key distribution broadcasts 
overview 
rest organized follows 
section provide overview earlier areas key distribution multicast 
section defines necessary terminology 
section introduces new techniques self healing mechanism revocation mechanism 
section discusses self healing session key distribution scheme 
section show reduce broadcast size shifting computation user 
section describes extend lifetime approach 
section discusses practical issues encountered implementing section concludes 
background information theory concepts security proofs lower bounds appendices 

related key distribution protocols resistant packet loss noninteractive means described 
motivated single sender content distribution setting take tree approach key distribution achieve resistance loss appending additional key update information packets follow key distribution broadcast 
resistance packet loss ensured error correcting codes generate information past group keys 
certain fixed number packets received lost possible user reconstruct lost information 
ideas built allow resistance correlated packet loss 
depending membership change trigger rekeying hints updated keys attached subsequent data packets 
hints small half size keys leave user significant order recover missed keys 
redundancy key distribution packet care taken ensure new group members don receive packets allow recovery keys entitled 
specialized communication including unicast necessary control members receive 
achieving small broadcast size specialized communication necessitate hierarchical key management systems 
shortcoming approach systems stateful keys tree updated line member quickly shut group rejoin assistance group manager 
addition hierarchical key management system keys known subsets users giving away keys allows outsiders enter system way difficult trace 
approaches differ significantly approach taken self healing property requires pair preceding packets sufficient recovering lost key 
requirement possible communicate group members short broadcasts underlying set personal keys flat hierar key stored user advantage permitting traceability 
addition flat key structure doesn penalize members line period time 
note keying information decoupled content 
pairing sense group manager sender multi sender setting consider doing require passing messages group manager appending necessary keying information secure way requires knowledge users personal keys 
key distribution core multicast broadcast encryption schemes 
constructions rest new technique distributing distinct keys extension techniques distributing common keys subsets users due naor pinkas 
addition approach multicast problem similar taken kronos periodic rekeying 
multicast broadcast encryption techniques see 
graph multicast constructions method reducing number update messages needed previously line member schemes 
lower bounds communication storage multicast schemes proven 
goal secure communication large groups take broadcast approach key distribution 
scenarios key distribution needed 
briefly mention completeness 
initially key distribution studied goal establishing shared secret parties 
generalization problem studied establishing shared key group size studied roughly model 
diffie hellman solution authenticated key distribution 
party key distribution problem studied computational setting 
interactive key distribution studied 
formal analysis key distribution protocols considered 
provably secure party key distribution active adversaries studied 

definitions notation key distribution scheme group manager seeks establish new unique key user broadcast channel see appendix formal definition 
session key distribution scheme group manager seeks establish common key session key group session session simply fixed interval time 
setting ability revoke users prevent learning new keys important 
say scheme revocation capability possible prevent users time learning new session key 
distributing session keys consider self healing property states member sequential necessarily consecutive sessions recover session key corresponding intermediate session information recovered broadcasts 
schemes resistant coalitions users 
colluding users revoked unable recover information entitled 
defining notation unconditionally secure model session key distribution 
definitions results information theory concepts entropy function 
brief review necessary concepts appendix consider setting group manager users 
un 
operations take place finite field fq prime larger user ui stores personal key si fq si may subset elements fq 
denote single key element fq 
allow possibility individual keys may related 
definition key independence ki fq set wise independent keys subset distinct indices 
ki ki 
kit ki 
denote number sessions set users revoked session unable recover session key ui say ui member active user 
session keys 
km generated independently random 

session key kj sent group members broadcast bj group manager 
non revoked user ui jth session key kj determined bj si set revoked users clear context 
session key distribution scheme user potentially learns bj information session keys kj helpful introduce variable zi represent information ui learns knowledge bj si 
precisely zi bj si zi bj zi zi si 
example ui group member zi include kj possibly information session keys ui revoked zi contains information kj may fact empty set 
emphasize important prepare types collusion attacks designing key distribution schemes 
scheme sensitive information embedded users personal keys coalition users may unwilling share personal keys consequently attack session keys 
coalition consist revoked users collude new group members recover session keys sessions colluding users members 
security collusion attack motivates definition self healing definition 
definition session key distribution 



session key distribution scheme true member ui kj determined zi turn determined bj si kj zi zi bj si 
set 
un ui users determine si si si 
bm si 
members 
un learn bj determined broadcasts personal keys zi 
bm zi zi 
sn 

revocation capability set 
un group manager generate broadcast bj ui ui recover kj kj bj si revoked users kj bj si kj 

self healing true ui member sessions kj determined set zi zi kj zi zi 
disjoint subsets 
un set zi contains informa zi ui tion kj kj zi ui zi kj 
consider computationally secure session key distribution section 
definition session key distribution computational setting natural variation definition include provide appendix 
new techniques 
self healing idea technique secret sharing bind ability users recover packet loss user membership status 
broadcast shares recovered rom broadcast ot ved shares recovered rom broadcast missed broadcast 
self healing mechanism 
bj ui recovers share kj key kj shares kj kj kj 
bj ui recovers share kj new shares kj kj key kj share kj 
result bj bj ui complementary shares kj recover kj self healing broadcast bj wasn received 
user recovers current session key share previous session keys 
broadcast user learns actual key share actual key sessions 
share kj received session complementary share kj received session user member session able reconstruct kj bj isn received 
represents self healing property intuitive way value session key ambiguous share considered shares combined value kj clear 
order provide resistance collusion attacks self healing key distribution schemes mechanism shares recovered different users different 
collusion resistance key distribution scheme correlated degree dependence shares recovered users period 
accomplish desired level coalition resistance polynomials sufficiently high degree determine values shares 
construction self healing session key distribution scheme revocation capability 
set positive integer 
group manager chooses polynomials fq degree 
hm 
pm session keys 
km fq random 

define polynomial fq qj kj pj 

user ui stores personal key si 
hm fq 

broadcast session 
broadcast bj 
hj pj hj kj hj qj 
hm qm 
session key shares recovery session 
ui recovers kj broadcast bj evaluating hj kj subtracting hj part si 
similarly ui recovers session key shares 
pj qj 
qm 
possible session ui recovers share qj session ui recovers share pj pj qj kj 
adding user scheme session straightforward provided underlying field sufficiently large 
group manager sends new member unique identity fq corresponding points polynomials hj 
construction revocation capability 
section describe construction may combined construction achieve self healing key distribution revocation 
prove security construction lemma appendix lemma construction unconditionally secure self healing session key distribution scheme revocation capability 
user storage broadcast size construction essentially optimal shown lemmas 
proofs appendix lemma unconditionally secure session key distribution scheme user ui entitled session keys si 

lemma unconditionally secure self healing session key distribution scheme bj mt log 
revocation section describe mechanism distributing set distinct related keys select subset users broadcast channel 
mechanism allow add revocation capability self healing technique section 
note ability distribute distinct keys subset users essential self healing key distribution main goal distribution common keys session keys reliably distributing shares keys shares distinct ensure collusion resistance 
mechanism viewed generalization naor pinkas unconditionally secure method establishing common key broadcast channel 
keys distributed mechanism point polynomial 
size broadcast grows square degree collusion resistance desired total number users 
illustrates goals key distribution mechanism 
construction key distribution scheme capability self healing 
set positive integer 
fq element equal user index 
group manager chooses random fq polynomial 
tx 
user ui stores personal key 

broadcast group manager chooses random polynomial degree fq 

consist indices users allowed recover new key broadcast 
broadcast consists polynomials 
key recovery user ui evaluate polynomial get points polynomial 
coupling personal key ui points able recover polynomial evaluate recover 
ui may evaluate subtract recover new individual key 
technique independent interest demonstrate security combined mechanism 
proof lemma may appendix lemma construction unconditionally secure key distribution scheme revocation capability 
note keys distributed construction 
wise independent degree size broadcast construction log 
naor pinkas scheme unconditionally secure method distributing common key broadcast size moving distribution single key distribution set wise independent keys multiplied broadcast length 
self healing session key distribution combining techniques sections construct session key distribution scheme capability self healing 
construction unconditionally secure self healing session key distribution 
set positive integer element fq equal user index 
group manager chooses polynomials 
pm fq degree session keys 
km fq random defines polynomial qj kj pj 

group manager chooses polynomials fq random 
sm 
personal keys ew keys 
revocation mechanism 

ui stores personal key 
broadcast member ui able recover new key learns revoked user ui learns new keys 
si ai ai 
ai 
user ui stores personal key si 
sm 
sm 

sm 
broadcast 
un denote active users revoked users session respectively 
group manager chooses 
wt fq indices users contained indices users contained broadcast period 
pj sj kj sj qj sj sj 
session key shares recovery session 
ui able recover polynomial sj sj evaluating polynomials interpolating points sj sj ui recovers kj evaluating sj subtracting value kj sj additionally ui interpolate determine sj recover shares pj qj similar manner 
adding users group proceeds construction 
provided underlying field sufficiently large group manager adds new member session simply giving user unique identity fq personal keys corresponding current sessions sj keys corresponding past sessions unnecessary 
theorem construction unconditionally secure self healing session key distribution scheme capability 
proof recall goal security coalitions size show true context definition 
key distribution 
member ui recovers kj shares keys described step zi 
pj kj qj 
qm appears randomly distributed subset fq observer broadcasts personal keys 
addition set users ui unable determine sj 
able recover points polynomial sj points polynomial sj ui degree polynomial sj appears randomly distributed value fq users information sj 
contained broadcasts follows sj si 
bm sj 
revocation 
suffices consider set revoked users learn broadcast sj ui 


revoked users know points polynomials sj points ui points sj appears revoked users randomly distributed fq 

revoked users information sj follows revoked users information sj consequently kj kj bj si kj 
self healing 
recall step construction member ui learns qj bj pj bj kj pj qj reconstructed bj bj consider set users revoked sessions active session set users revoked sessions active session show disjoint colluding users unable recover kj broadcasts bj bj order recover kj recover qj bj pj bj users revoked session recover qj ui users revoked session recover pj ui disjoint size pj qj degree recover kj 
broadcast size construction mt tm log 
construction key distribution scheme revocation capability self healing session key distribution scheme lower bound broadcast size follows lemmas appendix max log mt log 
room improvement broadcast size construction 
reducing broadcast size section show reduce communication overhead mt mt log mt log adding moderate amount additional computation user 
idea reduction decrease size construction broadcasting smaller set polynomials sm making public pseudorandom permutation user efficiently generate necessary remaining polynomials sj fact output pseudorandom useful ensures high probability entire collection polynomials appear random indistinguishable collection generated entirely randomly construction 
emphasize choice pseudorandom enabling absolutely necessary 
construction discuss approaches 
smaller set polynomials defined specified set revoked users set known need modify scheme ensure personal keys allocated users set phase don introduce conflicts 
stating construction introduce new notation exposition simpler 
polynomial fq 
atx permutation fq 
construction variant construction overhead reduced 

set positive integer element fq 

group manager chooses session keys 
km fq degree polynomials 
pm fq random 
note determines polynomials 
qm construction 
addition 
group manager defines hr randomly chosen polynomial degree fq 

ui stores personal key hr 
group manager chooses bivariate polynomial degree variable sm fq random pseudorandom permutation fq 
permutation public 

broadcast session 
un denote set active members set revoked users respectively session group manager chooses fq indices users indices users 
wt 

group manager chooses sj bivariate polynomials fq degree variable 

sj wi sm wi broadcast period 
pj sj kj sj sj hj sj wi sm wi 
session key shares recovery session ui recovers sj 
evaluating hj sj subtracting hj 
user applies publicly known pseudorandom permutation recover sj 
sj wt fact sj wi sm wi 
recovery session keys key shares proceeds construction 
adding users construction simple construction 
provided underlying field sufficiently large group manager adds user session giving users unique identifier fq keys hr 
see choice pseudorandom permutation facilitates construction essential consider algebraic attacks user ui legitimately learns qj example revoked session uses knowledge recover sj exploits algebraic relationship sj learn session key kj algebraic rela sj simple sj sj kj kj sj sj 
pseudorandom permutation ensures high probability resulting sj polynomials chosen group manager step sufficiently different construction vulnerable attacks 
possible accomplish pseudorandom permutation possible permutations 
consider extreme case identity permutation 
identity permutation possible group manager choose sj sm 

resulting construction vulnerable exactly kind attack just described 
spectrum possible truly random permutation reduce overhead 
potentially places heavy computational burden user note construction burdens unconditional security experienced group manager don propose approach 
choose pseudorandom permutation construction noting secure options 
proof security construction appendix state theorem completeness 
theorem construction self healing session key distribution scheme revocation capability 

extending lifetime set sessions expired constructions rekeying users necessary distributing new session keys 
state system changed result broadcasts 
example construction portions personal keys revoked users public 
solution problem distribute new set secret keys user proceed 
solution technique originated described shamir secret sharing exponent generator cyclic group moving operations exponent allows user evolve secret keys set sessions making scheme long lived meaning scheme continue unicasts group manager 
accomplished broadcast random values set sessions group manager 
user revoked able random values calculate new personal key 
results significant bandwidth savings naive approach sending user new personal key unicast user stores keys random values sent contrast rn unicasts naive approach 
savings reduced constant factor approach requires larger underlying group size roughly bits order ensure decision diffie hellman problem hard 
technique applicable constructions 
demonstrate construction extension somewhat simpler important underlying ideas illustrated 
theorem construction shows construction secure provided decision diffie hellman ddh assumption hard 
informally state assumption referring reader precise detailed discussion examples proofs reduction ddh problem 
ddh defined cyclic group generator ddh assumption difficult distinguish distributions ab chosen randomly 

ddh believed intractable groups large prime order 
construction helpful introduce additional notation 

atx 

construction long lived variant construction 

initial set positive integer generator subgroup zp prime order zp 

group manager chooses polynomials zp random sr sr ar ar 
ar 
user ui stores personal key si 
sm 
sm 

sm 
set th set sessions group man ager randomly chooses integers 

broadcasts 
ui computes new personal key 
group manager randomly chooses 
zp degree polynomials 
zp 
note determines polynomials 
zp construction 

broadcast session th set sessions 
un denote active users revoked users respectively 
group manager chooses zp indices revoked users contained indices active users broadcast period 
pj jsj sj qj jsj 
session key shares recovery ui recovers jsj jsj jsj 
enables ui recover jth session key shares 
note users pool personal keys reconstruct users able retrieve session keys lifetime scheme 
long lived self healing scheme occasionally re starting scheme securely sending user fresh personal key desirable 
proof security construction appendix state theorem completeness 
theorem construction computationally secure long lived self healing session key distribution scheme revocation capability 

practical issues number practical issues need addressed deploying constructions real world applications 
need consider scenarios self healing key distribution schemes applied determine system parameter values appropriate scenarios 
need ensure efficient implementation schemes chosen parameter values possible 
described part larger project investigating secure group communication large dynamic groups 
particular project concerned groups members membership may change frequently possibly seconds 
schemes suited setting system parameters affecting broadcast size independent number members case number sessions key size log value determined necessary cryptographic strength typically larger group size grow slowly collusion resistance 
actual session length vary key size rate change group membership 
practice anticipate range seconds minute 
determined recall operations finite field fq bit number 
ensures broadcast session keys 
km bits long 
presumably session keys symmetric cipher aes bit key currently provides reasonable security short lived session key 
maximum packet size ipv network kb 
shows possible values constraint 
note larger broadcasts reach destinations assume packets lost independently random rate consider key distribution broadcast packets fragments chance fragment broadcast reach destination 
loss rate reaches fairly high probability kb broadcast goes 
words recipients see tenth broadcast 
choosing address problem users fact able recover missed session keys self healing 
fixing leaves values construction larger values construction 
dynamic nature group supports providing moderate degree collusion resistance 
group dynamic formed previous session may useful current member revoked doesn useful information current session key certain amount new collusion may necessary session 
difficulty forming useful short time period reduces needed degree collusion resistance 
mentioned values ip stacks break large udp packets byte ethernet packet sized fragments 
construction construction 
possible values maximum broadcast size 
adequate applications 
high likelihood broadcast loss associated high latency key recovery may take sessions learn key lost broadcast associated construction unacceptable application straightforward solutions 
application construction smaller values decrease size broadcast substantially lower probability broadcast loss case smaller sufficient 
second implementation group manager broadcasts shares previous keys current session key independently group manager performs fragmentation 
implementation smaller broadcasts send information currently done broadcast 
single smaller broadcasts higher probability reaching target receivers subset shares receive self heal missed broadcasts 
concern schemes defined fixed period sessions session keys corresponding sessions late sequence vulnerable packet loss opportunity form sandwich received packets 
may true session keys corresponding sessions unicasts distribute personal keys sense send key distribution packet unicast 
making bit larger ensure high probability user receive able recover self healing session keys 
issue distributing new personal keys member order deploy self healing key distribution new round sessions 
section appendix discuss way eliminate need individually re key group member sessions 
furthermore currently working sliding window versions schemes packets sandwich session sufficiently closely recover session key 

open problems shown self healing key distribution provides reliable multicast session key distribution manner stateless conducive traceability 
reasonable degree resistance adversarial coalitions network packet loss achieved overhead just single udp packet session 
addition members experience packet loss recover missed session keys efficiently receipt single additional packet 
open questions remain 
constructions number sessions contributes linearly broadcast size 
interesting explore computational versions self healing key distribution setting may possible remove term entirely 
addition unclear degree broadcast size reduced 
sliding window variation approach users able recover lost session key provided bursts loss key distribution packets length self healing implemented fixed set sessions reduced resistance loss session keys associated sessions sliding window self healing corrects problem ensuring members recover information session keys window constant size current session matter actual session number techniques implement sliding window self healing scheme 
fact new personal keys needed session presents interesting problem 
techniques section provide solution cost modular exponentiations involved may prohibitive interesting look alternatives 

acknowledgments authors alice silverberg hao chi wong anonymous referees helpful comments earlier version tom berson ralph merkle interesting discussions 
partially sponsored darpa 
boneh 
decision diffie hellman problem 
proceedings third algorithmic number theory symposium lecture notes computer science pp 

chor 
interaction key distribution schemes 
advances cryptology crypto lecture notes computer science pp 

bellare rogaway 
entity authentication key distribution 
advances cryptology crypto lecture notes computer science pp 

bellare rogaway 
provable secure session key distribution party case 
th acm symposium theory computing may 

broadcast secret 
advances cryptology eurocrypt lecture notes computer science pp 

blake wilson menezes 
entity authentication authenticated key transport protocols employing asymmetric techniques 
security protocols workshop 
blom 
non public key distribution 
advances cryptology crypto plenum press pp 

blundo stinson 
tradeoffs communication storage unconditionally secure schemes broadcast encryption interactive key distribution 
advances cryptology crypto lecture notes computer science pp 

blundo de santis herzberg kutten vaccaro yung 
perfectly secure key distribution dynamic conferences 
information computation pp 
boneh franklin 
efficient public key traitor tracing scheme 
advances cryptology crypto lecture notes computer science pp 

canetti garay micciancio naor pinkas 
multicast security taxonomy efficient constructions 
ieee infocom march pp 

canetti malkin nissim 
efficient communication storage tradeoffs multicast encryption 
advances cryptology eurocrypt lecture notes computer science pp 

cover thomas 
elements information theory 
john wiley sons 
desmedt 
key distribution system way function 
advances cryptology eurocrypt lecture notes computer science pp 

dwork naor 
digital self enforcing protection digital information 
acm symposium theory computing stoc 
feldman 
practical scheme non interactive secret sharing 
proc 
th ieee symposium foundations computer science pp 

fiat naor 
broadcast encryption 
advances cryptology crypto lecture notes computer science pp 


modular approach key distribution 
advances cryptology crypto lecture notes computer science pp 

zheng imai 
efficient identity key sharing method resistant collusion attacks 
advances cryptology asiacrypt pp 

just kranakis van oorschot 
key distribution true broadcasting 
acm conference computer communications security pp 

kumar rajagopalan sahai 
coding constructions blacklisting problems computational assumptions 
advances cryptology crypto lecture notes computer science pp 

wang 
key management secure multicast dynamic controllers 
fifth australasian conference information security privacy lecture notes computer science pp 

matsumoto imai 
key predistribution system practical solution key distribution problem 
advances cryptology crypto lecture notes computer science pp 

matsumoto imai 
seeking smart public key distribution 
transactions japan february pp 

maurer 
information theoretically secure secret key agreement authenticated public discussion 
advances cryptology eurocrypt lecture notes computer science pp 

sherman key establishment large dynamic groups way function trees 
submitted 
molva 
scalable multicast security dynamic recipient groups 
acm transactions information system security vol 
aug 
naor naor 
revocation tracing schemes stateless users 
advances cryptology crypto lecture notes computer science pp 

naor pinkas 
efficient trace revoke schemes 
proceedings financial cryptography lecture notes computer science pp 

pinkas 
efficient state updates key management 
workshop security privacy digital rights management november 
perrig song tygar 
elk new protocol efficient large group key distribution 
ieee symposium security privacy pp 

wang 
new constructions secure multicast re keying schemes perfect hash families 
th acm conference computer communication security acm press pp 

setia jajodia 
kronos scalable group re keying approach secure multicast 
ieee symposium security privacy 
shamir 
share secret 
communications acm pp 

shoup rubin 
session key distribution smart cards 
advances cryptology eurocrypt lecture notes computer science pp 

simmons 
shared secret shared control schemes 
advances cryptology eurocrypt lecture notes computer science pp 

stinson wei 
key preassigned traceability schemes broadcast encryption 
selected areas cryptology sac lecture notes computer science pp 

syverson meadows 
formal requirements key distribution protocols 
advances cryptology eurocrypt lecture notes computer science pp 

wallner harder 
key management multicast issues architectures 
internet draft ftp ftp ietf org internet drafts draft arch txt 
wong gouda lam 
secure group communication key graphs 
sigcomm 
university texas austin computer science technical report tr 
wong lam 
keystone group key management service 
international conference telecommunications ict 
yacobi 
key distribution paradox 
advances cryptology crypto lecture notes computer science pp 

yacobi 
key distribution systems 
advances cryptology crypto lecture notes science pp 

information theory tools section give brief overview information theory tools 
details topics refer reader 
random variable takes values finite set probability distribution entropy defined log log base entropy expressed bits 
intuitively entropy measure amount information contained random variable 
example entropy variable value determined random coin flip contains bit information coin heads tails 
concepts conditional entropy joint entropy 
random variable takes values finite set probability distribution conditional entropy yq define joint entropy need concept joint probability distribution 
probability random variable takes value denoted 
joint entropy yr log chain rule entropy state stated proof see 
theorem chain rule 
xt random variables joint probability distribution denoted 
xt 

xt xi xi 

introduce technical lemma follows naturally properties entropy function 
lemma denote random variables 

proof proof security construction lemma construction unconditionally secure self healing session key distribution scheme revocation capability 
proof part construction describes member ui recovers kj bj 
polynomials hj chosen randomly information zi 
pj kj qj 
qm learned broadcast help personal keys pj kj chosen randomly information zi determined hj broadcasts 
construction self healing 
kj reconstructed bj bj si follows pj hj pj hj qj hj qj hj kj pj qj revoked users scheme attacks colluding users attempt learn session keys aren entitled aren relevant 
key distribution proof security construction key distribution scheme group manager seeks establish new key ki fq user ui broadcast channel 
state definitions important unconditionally secure key distribution words case provide corresponding information theoretic equation clarity 
definition proof security key distribution scheme construction 
definition key distribution 



key distribution scheme true member ui ki determined si ki si 
set 
un user ui users able learn ki ki si si ki si 
information ki learned broadcast personal keys 
kn 
kn 
kn 
sn 

revocation capability set 
un group manager generate broadcast ui ui recover ki ki si revoked users recover keys kn si kn 
lemma construction unconditionally secure key distribution scheme revocation capability 
proof member ui recovers new key ki described step step construction 
prove resistance collusion consider set colluding users member ui show impossible coalition learn knowledge implies knowledge coalition information value 
described step construction users determine fact knows points polynomial 
polynomial degree colluding users points appears randomly distributed colluding users appears randomly distributed 
addition note consists entirely revoked users coalition knows points polynomials implies appears randomly distributed lower bounds key distribution revocation prove lower bounds communication user storage unconditionally secure self healing session key distribution schemes see definition 
bounds agree intuition user independent pieces secret information session size broadcast messages correlated number sessions collusion resistance 
construction essentially tight bounds 
lemma unconditionally secure session key distribution scheme user ui entitled session keys si log 

proof 
km 
bm si 
km 
bm 
km follows lemma si 
km 
session keys chosen independently random 
km 
km log result follows 
result relates size broadcasts session number sessions collusion resistance 
lemma unconditionally secure self healing session key distribution scheme revocation bj mt log proof note bj 
zn follows lemma equalities 
zn bj 
kn 
zn 
kn 
zn suffices prove lower bound 
zn 

zn 
zt 
zt zt 
applying lemma fact due self healing kj 
km zs zs kj 
km 
zs zs kj 
km follows zs 
zs log note equalities hold self healing 
kj zs zs 
kj 
zs zs 
kj lemma true zs 
zs kj 
combining lower bounds follows zs 
zs bj kj log proofs security constructions computational setting appendix prove security constructions 
theorem construction self healing session key distribution scheme revocation capability 
proof degree hj takes collusion users compromise scheme knowledge polynomials 
modification construction reduce collusion resistance 
user calculated personal keys sj broadcast bj construction indistinguishable broadcast bj construction polynomial time adversary pseudorandom permutation 
consequently properties self healing revocation capability inherited construction 
suffices show exist polynomials sj satisfy constraints construction 
follows 
provides equations coefficients sj 
equations linearly independent coefficients may chosen random remaining coefficients determined equations 
completeness list equations particular sj 
ct tx sm 
sj 
ct 
tw 
ct tw 


sj wt wt 
ct 

ct tw wt 
wt wt 
proving final theorem state definition computationally session key distribution setting completeness 
definition session key distribution 



session key distribution scheme member ui kj efficiently computed si set broadcasts set personal keys considered separately computationally infeasible compute kj useful information set 
addition computationally infeasible set users determine personal key user outside 
revocation capability set revoked users 
un group manager generate broadcast bj ui kj efficiently computed bj si infeasible compute kj bj si 
self healing true ui member sessions kj efficiently computed set zi zi 
disjoint subsets 
un infeasible compute kj set zi zi 
theorem construction computationally secure long lived self healing session key distribution scheme revocation capability 
proof self healing property revocation capability set sessions follow construction 
suffices show polynomial time adversary construction secure restarting construction sessions new secret keys users provided ddh hard 
simplicity exposition consider case detail sketch proof larger note scheme reduces key distribution mechanism section distribute session key 
simplify notation case write th broadcast 
wt show revoked users determine session key exists ddh oracle 
see note coalition users 
ut revoked th iteration construction aren entitled modeled algorithm ai zp takes input polynomially tuples 

challenge tuple 

ai successful nonnegligible advantage determining random element zp 
algorithm ai produce algorithm solving variant ddh problem distinguish tuples 
bt ab 
abt 
bt ac 
act 
bt 
ct chosen randomly zp 
denote challenge tuple associated ddh variant ga gb 


variant hard ddh showing algorithm ai provides algorithm solving variant suffices prove construction secure assuming ddh hard 
works follows 
generates polynomially random random values correspond 
portion challenge represents gs 
bt determine 

determine candidate ga denote inputs ai tuples 

challenge 
bt outputs answer provided ai 
note constrained 
inputs ai consistent 
see advantage gives recall ai returns believes positive answer ai shows 
bt agrees implies 
polynomials zp degree probability randomly chosen polynomial different agrees pt pt implies advantage times advantage extend proof note polynomials set sr chosen independently random proof technique essentially repeated times show revoked users unable determine ddh hard 

