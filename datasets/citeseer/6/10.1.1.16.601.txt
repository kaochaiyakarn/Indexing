high performance computer conference bangalore india dec power class design constraint architectures trevor mudge computer science electrical engineering university michigan ann arbor 
mobile embedded environments power leading design constraint 
argues power limiting factor general purpose high performance computers 
considered class design constraint par performance 
corollary view impact architectural design decisions power consumption considered early design cycle time performance impact considered 
summarize key equations governing power performance illustrate simple architectural ideas power savings 
presents contrasting research directions power important 
conclude discussion tools needed conduct research architecture power tradeoffs 
limits imposed power consumption issue areas computing 
need limit power consumption readily apparent case portable mobile computer platforms laptop cell phone common examples 
need limit power computer settings important 
example case server farms 
warehouse sized buildings internet service providers fill servers 
analysis shown sq 
ft server farm servers consume mw 
shown total running cost facility attributable power consumption directly indirectly 
frequently reported net growing exponentially follows server farms match growth demand power 
article financial times noted power consumption information technology 
component set grow exponentially check long power greater uses combined 

author address dept eecs university michigan beal avenue ann arbor mi usa 
tel 
fax 
mail eecs umich edu 
www www eecs umich edu 
get idea trends power consumption today processors consider table taken 
rapid growth power consumption obvious 
alpha model table power trends compaq alpha power frequency mhz die size mm growth power density die equally alarming 
growing linearly power density reached cm times typical hot plate 
growth occurred spite process circuit improvements 
clearly trading high power high performance continue architectural improvements added process circuit improvements growth power contained 
exceptions kind supercomputers built special tasks weather modelling 
introductory discussion briefly illustrated power limitation types computers just ones battery powered 
furthermore argued system architectural improvements added process circuit improvements contain growth power 
reasonable power dealt stage design process architectural trade offs remainder expand theme starting section simple model power consumption cmos logic 
power equations cmos logic supply voltage equations provide model power performance trade offs cmos logic circuits 
equations frequently discussed low power literature simplifications capture essentials logic designers architects systems builders 
focus cmos remain dominant technology years 
addition applying directly processor logic caches equations relevant aspects dram chips 
equation defines power consumption components equation 
familiar 
measures dynamic power consumption caused charging discharging capacitive load output gate 
proportional frequency operation system activity gates system gates may switch clock total capacitance seen gate outputs square supply voltage second term captures power expended due short short circuit current momentarily flows supply voltage ground output cmos logic gate switches 
third term measures power lost due leakage current regardless state gate 
today circuits term dominates immediately suggesting effective way reduce power consumption reduce supply voltage fact quadratic dependence means savings significant halving voltage reduce power consumption quarter original value 
unfortunately comes expense performance accurately maximum operating frequency equations shows fmax words maximum frequency operation roughly linear reducing limit circuit lower frequency 
reducing power quarter original value cut maximum frequency half 
important corollary equations widely noticed computation split run parallel independent tasks form parallel processing potential cut power half slowing computation 
lessen effect reducing voltage equation reducing fact occur allow proper operation low voltage logic circuits 
unfortunately reducing increases leakage current third equation shows limited option countering effect reducing leakage term equation appreciable 
summary important points taken away model 

reducing voltage significant effect power consumption 
reducing activity simplest case means turning parts computer 

parallel processing done efficiently independent tasks ideal 
exp mv figures merit related power equation power consumption average value 
important cases information needed 
peak power 
typically systems upper limit exceeded lead form damage average power account 
second dynamic power 
sharp changes power consumption result inductive effects result circuit malfunction 
effect seen di dt noise average power account 
term power quite loosely refer quantities really power 
example case portable devices amount energy form computation may useful measure battery stores quantity energy quantity power 
refer processor lower power may misleading computation takes longer perform 
total energy expended may cases battery run amount cases leads idea energy operation 
processor low energy operation incorrectly referred low power fact inverse measure mips frequently merit processors intended mobile applications 
mips widely merit higher numbers better misleading cutting power consumption half reduces frequency operation quadratic term discussed 
lead gonzalez horowitz propose third merit energy delay 
measure takes account systems power modelled possible trade decrease speed higher mips unfortunately bulk literature uses mips simply watts continue convention recognizing occasionally may suggest misleading trade offs quadratic devices cmos concerned 
noted computation consideration finish deadline slowing operation may option 
cases measure combines total energy deadline appropriate 
techniques reducing power consumption section survey common techniques systems designers proposed save power 
scope brief overview includes logic architecture operating systems 
logic number techniques logic level saving power 
clock tree consume power processor early alpha exceeded 
surprising item number power saving techniques developed 
clock gating technique widely employed 
idea turn parts clock tree latches flip flops 
years ago gated clocks considered poor design practice gates clock tree exacerbate clock skew 
accurate timing analyzers flexible design tools possible produce reliable designs gated clocks technique longer 

simplification total energy drawn battery charged depends extent rate energy drawn 
ignore effect simplified analysis 
half frequency half swing clocks idea half frequency clock edges clock synchronize events 
clock run half frequency conventional clock 
drawbacks latches complex occupy area requirements clock stringent 
half swing clock swings half increases requirements latch design difficult employ systems low place 
gains lowering clock swing usually greater clocking edges 
asynchronous logic proponents asynchronous logic pointed systems clock stand save considerable power goes clock tree 
drawbacks asynchronous logic design 
notable need generate completion signals 
means additional logic employed register transfer cases double rail implementation employed 
drawbacks include difficulty testing absence design tools 
projects demonstrate power saving asynchronous systems 
amulet asynchronous implementation arm instruction set architecture successful 
difficult draw definitive important compare designs realized technologies 
furthermore asynchronous designer disadvantage noted today design tools geared synchronous design 
case asynchronous design appear offer sufficient advantages wholesale switch synchronous designs 
area asynchronous techniques prove important globally asynchronous locally synchronous systems gals 
reduce clock power help growing problem clock skew large chip allowing conventional design techniques chip 
architecture focus computer architecture research typified international symposia computer architecture international symposia microarchitecture high performance 
important themes pursued research 
exploit parallelism seen help reduce power 
employ speculation computations allowed proceed dependent instructions may completed 
clearly speculation wrong energy wasted executing useless instructions 
branch prediction best known example speculation 
high degree confidence speculation correct provide increase mips 
case confidence level high speculation rarely employed means reduce mips power 
area new architectural ideas profitably contribute reducing power reducing dynamic power consumption term specifically activity factor 
memory systems memory system significant source power consumption 
systems relatively unsophisticated processors cache memory dominate chip area 
sources power loss memory systems 
dynamic power loss due frequency memory access 
modelled term 
second leakage current third term 
proposals limiting dynamic power loss memories organizing memory parts activated memory access 
examples filter cache memory banking 
filter cache small cache placed front cache 
purpose intercept signals intended main cache 
hit rate high access time need faster cache 
hit time power saved half difference activating main cache filter cache 
significant 
second example memory banking currently employed low power designs 
idea split memory banks activate bank presently 
relies pattern having lot spatial locality suitable instruction cache organization 
done architect systems designer limit leakage shut memory 
practical memory going unused relatively long time lose state backed disk 
type shut referred sleep mode usually handled operating system 
buses buses significant source power loss 
especially true inter chip buses 
wide standard pc memory bus includes data lines address lines 
requires substantial drivers 
unusual chip expend power inter chip drivers 
proposal limiting swing 
idea encode address lines gray code 
reasoning address changes particularly cache sequential counting gray code switches number signals 
straightforward adapt ideas problem 
transmitting difference successive address values achieves similar result gray code 
generally observed address lines reduced compressing information 
techniques best suited inter chip signalling encoding integrated memory controllers 

second term lumped 
continuing code compression concept shown significant instruction memory savings results program stored compressed form decompressed fly typically cache 
reduction memory size translate power savings 
reduces frequency code overlays source power loss technique digital signal processing dsp systems 
parallel processing pipelining noted corollary power model parallel processing important technique reducing power consumption cmos systems 
pipelining share advantage concurrency pipelining achieved increasing clock frequency limits ability scale voltage 
interesting reversal microarchitecture pipelining simpler parallel instruction issue traditionally common techniques employed speed execution 
degree computations parallelized varies widely 
embarrassingly parallel usually characterized identical operations array data structures 
general purpose computations typified spec benchmark suite little progress discovering parallelism 
reflected fact successful general purpose microprocessors rarely issue instructions 
increasing instruction level parallelism offset loss due hazards inhibiting efficient parallel execution 
desktop architectures shorter pipes 
contrast common signal processing algorithms possess significant degree parallelism 
reflected architecture dsp chips notably different desktop workstation architectures 
dsps typically run lower frequencies exploit higher degree parallelism 
parallelism direct support multiply accumulate mac operation occurs considerable frequency signal processing algorithms means spite lower clock rates achieve high mips ratings 
example analog devices dsp 
achieve mflops dsp kernels 
operating system quadratic voltage term means noted times reducing voltage great benefit power savings 
processor run maximum frequency time get done 
deadline computation known may possible adjust frequency processor reduce supply voltage 
example simple mpeg decode runs fixed rate determined screen refresh usually th second 
processor responsible adjusted run finish ahead schedule waste power 
difficult automatically detect periods voltage scaled back current proposals provide interface operating system allows control voltage 
idea application operating system functions schedule voltage needs 
effect way save power cause works directly quadratic term equation 
support voltage scaling way generation strongarm microprocessors intel xscale 
high mips device 
obvious applications processors high mips mobile computing 
called mobile phones expect near possess remarkable processing capabilities 
phones communicate packet switched wireless link mbs 
link support voice data connected time 
plans support mpeg video transmission data intensive applications 
today cell phones built processors general purpose computer dsp engine 
low power lower better 
common solution arm processor general purpose machine texas instrument dsp chip 
systems processors powerful sacrificing battery life 
fact processing requirements power constraints state art 
design systems power class design constraint major challenge computer architects 
furthermore immense number units sold hundreds millions cell phones today means platform take desktop defining application environment computers 
processor configuration cell platform arisen need low power system perform significant amounts signal processing possess general purpose functionality low resolution display support simple data base functions protocols associated cell phone communications 
architectural point view particularly elegant solution convergent architecture handle requirements signal processing general purpose computing may cleaner solution 
power perspective may easier manage power separate components easily turned required 
trade offs studied 
cell phone derivatives leading user power efficient systems means place power key saw 
go back server farm example consider servers workload independent programs 
parallelism inefficiencies introduced need intra program communication synchronization multiprocessors attractive solution 
typical front server handles mail web pages news intel compatible processor bytes memory byte disk requires power 
assume processor amd mobile total bytes cache running mhz 
rated typical 
compare announced intel xscale intel generation strongarm processor 
total cache size consumes mw mhz 
run ghz mhz mhz consumes just mw 
replace increased power consumption 
process jobs headed multiprocessor architectural efficiency times xscale 
lot disagree analysis 
example complex processor memory interconnect required multiprocessor accounted consideration fact individual jobs may unacceptable response time 
point show power chief design constraint low power non trivial processor xscale introduce new perspective computer architecture 
consider analysis replaced compaq need times efficient 
argument power class design constraint 
listed number ways systems designers contribute satisfying constraint 
research done 
power aware design longer exclusively province process engineer circuit designer contributions crucial 
account see talk deo singh need architects systems level designers contribute improvement power consumption generation 
improvement required addition gains process circuit improvements 
elevate power class constraint needs dealt early design flow point architectural trade offs 
point cycle accurate simulation performed 
problematic accurate power determination chip layout performed 
approximate values usually acceptable early design flow provided accurately reflect trends 
words change architecture approximate power reflect change power correct direction 
research efforts way insert power estimators cycle level simulators 
typically employ event counters obtain frequency measures components architecture 
components items adders caches decoders buses approximate model power obtained 
early example developed researchers intel 
wattch simplepower 
simplescalar simulator widely 
fourth effort development author austin grunwald expanding 
provide estimates di dt noise peak power 
acknowledgment 
author supported contract power aware computing communications program darpa 
singh tiwari 
power challenges internet world 
cool chips tutorial industrial perspective low power processor design eds mudge manne grunwald held conjunction micro haifa israel nov pp 
www eecs umich edu cool html wilcox manne 
alpha processors history power issues look 
cool chips tutorial industrial perspective low power processor design eds 
mudge manne grunwald held conjunction micro haifa israel nov pp 
www eecs umich edu cool html chart watch mobile processors 
microprocessor rept vol 
archive mar gonzalez horowitz 
energy dissipation general purpose microprocessors 
ieee jour 
solid state circuits sep pp 

garside temple 
power saving features amulet 
power driven workshop eds mudge manne grunwald isca barcelona spain june 
www cs colorado edu grunwald agenda html moore self calibrating clocks globally asynchronous locally synchronous systems 
int 
conf 
computer design austin texas sep 
manne grunwald 
pipeline gating speculation control energy reduction 
proc 
th int 
symp 
computer architecture barcelona spain june pp 

johnson gupta mangione smith 
filtering memory increase energy efficiency 
ieee trans 
computers vol 
jan pp 

park tyson 
modifying vm hardware reduce address pin requirements 
proc 
th int 
symp 
computer architecture portland oregon dec pp 

benini address bus encoding techniques system level power optimization 
proc 
design automation test europe date pp 

mudge 
reducing code size run time decompression 
proc 
th int 
symp 
high performance computer architecture jan pp 

pering brodersen voltage scheduling microprocessor system proc 
int 
symp 
low power electronics design july 
cai lim 
architectural level power performance optimization dynamic power estimation 
cool chips tutorial industrial perspective low power processor design eds 
mudge manne grunwald held conjunction micro haifa israel nov pp 
www eecs umich edu cool html brooks tiwari martonosi 
wattch framework architectural level power analysis optimizations 
proc 
th int 
symp 
computer architecture vancouver canada pp 

vijaykrishnan energy driven integrated hardware software optimizations simplepower 
proc 
th int 
symp 
computer architecture vancouver british columbia canada june pp 

burger austin 
simplescalar toolset version 
tech rept 
computer science dept univ wisconsin june 
see www simplescalar org www eecs umich edu power power html 
