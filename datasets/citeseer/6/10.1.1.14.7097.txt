framework constructing multi agent applications training intelligent agents kehagias andreas ioannis department electrical computer engineering aristotle university thessaloniki thessaloniki greece tel fax eng auth gr ee auth gr 
agent oriented paradigm reaching significant level acceptance software developers lack integrated high level abstraction tools design development agent applications 
effort mitigate deficiency introduce agent academy integrated development framework implemented multi agent system supports single tool design agent behaviours reusable agent types definition ontologies instantiation single agents multi agent communities 
addition characteristics framework goes deeper agents implementing mechanism embedding rule reasoning 
call procedure agent training realized application ai techniques knowledge discovery application specific data may available agent developer 
respect agent academy provides easy facility encourages substitution existing traditionally developed applications new ones follow agent orientation paradigm 
years agent technology impressively emerged new paradigm software development expected gain wider acceptance software developers 
important contribution effort provision tools development environments enable deployment agentbased applications quickly easily 
opposed envisioned situation current landscape agent constructing tools characterized plethora agent development environments provide limited capabilities terms level abstraction design development process agent oriented applications 
hand scope agent tools technologies dominate mainstream development trends field clearer past years 
respect quite desirable effort agent developers creation software product combines widely mainstream technologies tool 
order fulfill demand developed agent academy aa integrated framework constructing multi agent applications embedding rule reasoning agents design phase 
framework implemented jade infrastructure ensuring relatively high degree fipa compatibility defined 
aa multi agent system architecture gaia methodology 
provides integrated gui environment enables design single agents multi agent communities common drag drop operations 
capability aa development environment helps agent application developers build community agents chosen behaviour types attributes minutes 
aa agent developer easily go details designated behaviours agents precisely regulate communication properties agents 
include type number agent communication language acl messages exchanged agents performatives structure messages respect fipa specifications semantics defined constructing ontologies prot 
aforementioned characteristics development environment viewed agent oriented software engineering perspective provide essential elements design construction multi agent system pre specified attributes 
addition ai perspective deals reasoning capabilities agents 
context system implements training module embeds essential rule reasoning agents 
kind reasoning application data mining dm techniques possible available datasets 
methodology developed aa results extraction agent knowledge form decision model decision tree 
extracted knowledge expressed predictive modeling markup language pmml documents stored data repository handled development framework 
applied data mining techniques definition updateable new data come repository 
easy update knowledge bases agents performing agent retraining 
capability especially exploited environments large amounts periodically produced data 
characteristic example environment encountered enterprise infrastructures vast majority implemented traditional development paradigms 
infrastructure envisioned convenient tool encourage development new agent applications existing traditional ones exploiting available data 
structured follows 
section briefly reviews related 
section describes architecture framework illustrates development process tools provided construction multi agent system 
section detailed presentation agent training mechanism 
section concludes outlines 

existing tools applications growth interest agent technology motivated development different frameworks environment support implementation multi agent systems 
java applications aim facilitating rapid implementation agent applications providing mechanisms manage monitor message exchanges agents interface support creating debugging multi agent systems 
advanced open source tool kit providing library software components tools enable rapid design development deployment agent systems zeus 
system fipa compliant support agent mobility opposed aa 
development environment implemented multi agent system similar manner aa satisfy requirements fipa compliance 
far compliance fipa standards concerned development framework meets fipa specifications agent management agent communication language aa 
tool creating agent systems uses fipa acl agent messages implements naming register service ignoring relative fipa specifications 
aforementioned development frameworks facilitate particular reasoning tools prevent agent developers existing tools implementing agent reasoning 
contrast aa provides high level gui environment design development agent applications training facility creates rule reasoning developed agents 
survey existing tools creating rule reasoning agents 

development framework development framework acts integrated gui environment facilitates design process mas 
supports extraction decision models data insertion models newly created agents 
developing agent application aa involves activities developer side creation new agents limited initial reasoning capabilities addition agents new mas determination existing creation new behaviour types agent importation ontology files prot determination message recipients agent 
agent academy agent factory main gui agent types definition behaviour types definition mas creation tool ontology definition prot design agent application instantiation new mas instantiated mas fig 

diagram agent academy development framework case agent application developer intends create reasoning engine agents designed mas operations required agents determination available data source agent decision attributes activation training procedure specifying parameters training mechanism 
illustrates agent academy main functional diagram represents main components interactions 
remaining section discuss agent academy architecture explain development process realized framework 
database dummy agents data storage agent reasoning xml application data dmm atm insertion decision model agents extraction decision model architecture main architecture aa shown 
application developer launches aa platform order design multi agent application 
main gui development environment provided agent factory af specifically designed agent role collect required information agent application developer regarding definition types agents involved mas types behaviours agents ontology share 
purpose agent academy provides prot front 
initially created agents possess referencing capabilities dummy agents 
developer may request system create rule reasoning agents new mas 
agents agent training module atm responsible inserting specific decision model 
produced performing dm data entered agent academy xml documents datasets stored database 
task performed data mining module dmm agent aa task read available data extract decision models expressed pmml format 
aa hosts database system storing information configuration new created agents decision models data entered system dm purposes 
aa platform created mas executed jade 
developing multi agent applications main gui development platform agent factory consists set graphical tools enable developer carry required tasks design creation mas effort writing single line source code 
particular agent factory comprises ontology design tool behaviour type design tool agent type definition tool mas creation tool 
creating agent ontologies required process creation mas design ontologies order agents interoperate adequately 
agent factory provides ontology design tool helps developers adopt ontologies defined prot tool designing ontologies 
rdf files created prot saved aa database 
aa employs jade agent development ontologies need converted special jade ontology classes 
purpose framework automatically compiles rdf files jade ontology classes 
creating behaviour types behaviour type design tool assists developer defining generic behaviour templates 
agent behaviours modeled workflows basic building blocks receiving sending message executing house application necessary deriving decisions inference engines 
data control dependencies blocks handled 
behaviours modeled cyclic shot behaviours jade platform 
behaviour types generic templates configured behave different ways structure flow process defined configurable parameters application inside behaviour contents messages specified mas creation tool 
denoted behaviours specialized application domain 
building blocks workflows represented nodes types 
receive nodes enable agent filter incoming fipa sl messages 

send nodes enable agent compose send fipa sl messages 

activity nodes enable developer add predefined functions workflow behaviour order permit construction multi agent systems existing distributed systems 

jess nodes enable agent execute particular reasoning engine order deliberate way behave 
fig 
illustrates design behaviour agent receives message content message executes pre specified function sends message agent 
creating agent types having defined certain behaviour types agent type definition tool provided create new agent types order mas creation tool 
agent type fact agent plus set behaviours assigned 
new agent types constructed scratch modifying existing ones 
agent types seen templates creating agent instances design mas 
mas instantiation phase realized mas creation tool instances designed agent types instantiated different values parameters 
agent instance agent type deliver data different data sources communicate different types agents execute different reasoning engines 
fig 

creating behaviour agent behaviour design tool deploying multi agent system design behaviour agent types followed deployment mas 
mas creation tool enables instantiation defined agents running system designed agent templates 
receivers senders acl messages set behaviours agent 
parameters defined agent instances initialized 
agent factory creates default aa agents ability communicate af atm 
af sends agent necessary ontologies behaviours decision structures 

agent training initial effort implementation development framework motivated lack agent oriented tool coupled ai aspects far know 
ability incorporate background knowledge agent decision making process arguably essential effective performance dynamic environments 
agent oriented software engineering methodologies deal high level top iterative approaches design methods software systems 
lack tools concern agent reasoning issues high level software design approaches examine approaches pure software engineering point view 
building mas large number agents usually requires reasoning distributed agents mas community reducing degree reasoning agent 
perspective agent oriented development infrastructure provide high level design capabilities deal internals agent architecture order considered complete generic 
reason implemented separate module agentoriented development environment mechanism embedding rule reasoning capabilities agents 
realized atm responsible embedding specific knowledge agents 
knowledge generated outcome application dm techniques available data 
module role exploit possible available datasets order extract decision models dmm 
atm dmm implemented jade agents act close collaboration 
basic modules flow agent training process shown 
consider available source data formatted xml 
dmm receives data xml document executes certain dm algorithms suitable generating decision model determined developer 
output dm procedure formatted pmml document 
pmml xml language provides rapid efficient way companies define predictive models share models compliant vendors applications 
allows users develop models vendor application vendors applications visualize analyze evaluate models 
fact pmml data mining standard defined data mining group provides agent academy platform versatility compatibility major data mining software vendors oracle sas spss 
pmml document represents knowledge model expresses referencing mechanism agent intend train 
resulted decision model translated atm set facts executed rule engine 
implementation rule engine provided jess robust mechanism executing rule reasoning 
execution rule engine part agent behaviour 
agent jade behaviour initial beliefs rule behaviour xml data data mining module dmm decision model agent training module atm fig diagram agent training procedure shown agent trained provided infrastructure encapsulates types behaviours 
basic initial behaviour predefined af module 
may include set class instances inherit behaviour class defined jade 
initial behaviour created agent generation phase behaviour design tool described previous section 
type behaviour characterizes agents designed agent academy developer intends equip rule reasoning capabilities 
essential type behaviour includes set initial agent beliefs 
second supported type behaviour rule behaviour optionally created activation agent training feature 
type behaviour dynamic implements decision model 
remaining section details data mining procedure describe mechanism embedding decision making capabilities newly trained agents 
pmml document jess rule engine mining background data creating decision models mechanism extracting knowledge available data order provide agents reasoning application dm techniques background application specific data 
experience application framework industrial scenario supply chain management ascertained enterprise infrastructures generate manipulate large amount data permanent basis suitable data providers satisfy purposes dmm 
initial phase dm procedure developer launches gui wizard depicted specifies data source loaded agent decision attributes represented internal nodes extracted decision model 
developer selects type dm technique set available options 
order clarify meaning agent decision attributes consider decision model 
certain decision input attributes satisfied 
see input vector attributes output vector attributes comprises decision agent 
part agent decision attributes identical set inputs agent receives remaining part represents outputs decision nodes agent 
regarding technical details dmm developed dm facility framework incorporating set dm methods weka library tools extended weka api order support pmml version weka api extension included 
new dm techniques developed mention scope 
information developed dm algorithms please see 
xml document respective pmml output represents cluster decision model shown order generate pmml output means algorithm perform clustering selected attributes described xml document 
dataset illustrated comes design mentioned mas supply chain management 
xml document concerns customer related data 
pmml output shown contains apart extracted decision model algorithm specific details number clusters produced attributes data set document version 
embedding intelligence agents saw completion training process requires translation dm resulted decision model agent understandable format 
performed atm receives pmml output acl message sent dmm soon dm procedure completed activates rule engine 
atm converts pmml document jess rules communicates appropriate messages trainee agent order insert new decision fig steps dmm wizard input attribute input attribute input attribute input attribute fig input output attributes decision model decision model output attribute output attribute output attribute output attribute instances title data author kehagias attributes attribute name avg order freq name type numeric type attribute attribute name avg order rev name type numeric type attribute attribute name avg payment name type numeric type attribute attribute name crd limit name type numeric type attribute attribute name logistics dif name type numeric type attribute attribute name std order freq name type numeric type attribute attribute name std order rev name type numeric type attribute attribute name std payment terms name type numeric type attribute attribute name turnover name type numeric type attribute attributes data row crd limit crd limit logistics dif logistics dif turnover turnover avg order freq avg order freq std order freq std order freq avg order rev avg order rev std order rev std order rev avg payment avg payment std payment terms std payment terms row data instances fig xml input pmml output xml version encoding utf doctype pmml dtd pmml header copyright description clustering model erp data application name agent academy version header modules filters filter field ab field cl field field aop field field aoi field field apt field cluster name array array cluster cluster name array array cluster cluster name array array cluster pmml model 
completion process framework automatically generates java source code instantiates new trained agent predefined mas 
total configuration new agent stored development framework enabling modifications training parameters retraining trained agents 

agent academy multi agent development framework constructing multi agent systems single agents 
argued existing tools infrastructures agent development especially focused provision high level design methodologies leaving details agents decision making abilities 
contrast framework provide gui high level mas authoring tool facility extracting rule reasoning available data inserting agents 
produced knowledge expressed pmml formatted documents 
functional architecture framework shortly demonstrated indicative scenario deploying mas discussed details agent training process 
experience agent academy convinced development environment significantly reduces programming effort building agent applications terms time code efficiency especially mas developers jade 
instance mas requires writing lines java code jade requires hour developed agent academy 
test indicates aa meets requirement making agent programs quicker easier manner 
hand experiments dmm shown completion decision model generated agent reasoning highly dependant amount available data 
particular dataset records adequate producing dm results datasets fewer records yielded non consistent arbitrary output 
aa framework result development effort begun years ago 
currently beta version exists publicly available 
stable implementation aa planned come july open source product 
near involves finalization integration process aa exhaustive testing platform implementing largescale applications domains real time notification web applications supply chain management respectively 
partially funded european commission ist initiative research development project contract number ist agent academy data mining framework training intelligent agents 
authors members agent academy consortium remarkable efforts development large project 

lind issues agent oriented software engineering 
international workshop agent oriented software engineering aose limerick ireland 
agent academy iti gr 
poggi object oriented framework realize agent systems 
proceedings workshop parma italy 
foundation intelligent physical agents fipa developer guide available www fipa org specs fipa 
caire trucco jade programmer guide 
available sharon cselt 
wooldridge jennings kinny gaia methodology agent oriented analysis design 
journal autonomous agents multi agent systems 
vol 


foundation intelligent physical agents fipa communicative act library specification 
available www fipa org specs fipa 
foundation intelligent physical agents fipa sl content language specification available www fipa org specs fipa 
foundation intelligent physical agents fipa acl message structure specification available www fipa org specs fipa 
noy sintek decker fergerson musen creating semantic web contents prot 
ieee intelligent systems 
data mining group predictive model markup language specifications pmml ver 
available www org 
nwana ndumu lee zeus tool kit building distributed multi agent systems 
applied artifical intelligence journal vol 
gutknecht ferber madkit generic multi agent platform 
th international conference autonomous agents barcelona spain 
miyazaki implementation fipa ontology service 
proceedings workshop ontologies agent systems th international conference autonomous agents montreal canada 
petrie cutkosky java agent infrastructure message routing 
ieee internet computing 
cobb ali analysis intelligence enhancing techniques software agents 
proceedings th world multi conference systemics cybernetics informatics orlando 
survey agent oriented software engineering 
ntnu computer science graduate student conference norwegian university science technology trondheim norway 
java expert system shell jess herzberg ca sandia gov jess 
kehagias mining patterns rules improving agent intelligence integrated multi agent platform 
th iasted interna tional conference artificial intelligence soft computing asc banff alberta canada 
kehagias open source supply chain 
th international conference concurrent engineering ce workshop intelligent agents data mining research applications madeira portugal accepted publication 
witten frank data mining practical machine learning tools techniques java implementations 
morgan kaufmann publishers san francisco ca 
petridis applying machine learning techniques air quality data real time decision support 
international symposium information technologies environmental engineering itee poland accepted publication available ee auth gr en pdf itee pdf 
