querying semantic web formal approach ian horrocks sergio tessaris department computer science university manchester manchester uk horrocks tessaris cs man ac uk 
ontologies set play key role semantic web web ontology languages daml oil dls 
provide clear semantics ontology languages allows exploit dl systems order provide correct complete reasoning services 
results shown dl systems enriched conjunctive query language providing solution weakness traditional dl systems 
results transfered semantic web community need expressive query languages witnessed different proposals daml oil 
logical framework conjunctive query answering daml oil 
provide sound complete algorithm description logic research 
description logics dls known family knowledge representation formalisms notion concepts classes roles properties 
dls proved useful wide range applications including configuration databases ontological engineering design maintenance deployment ontologies 
dls ontological engineering highlighted explosion interest semantic web 
ontologies set play key role semantic web provide source shared precisely defined terms describe web resources improve accessibility automated processes 
prominent web ontology languages particular oil daml oil dls allows exploit formal results decidability complexity key inference problems algorithm designs dl research dl knowledge representation systems provide reasoning support web applications :10.1.1.20.7479
order maximise utility web ontologies necessary reason ontology classes individuals web resources instantiate particular answer queries sets individuals see 
highlights serious shortcoming dl knowledge representation systems inadequacy query languages 
show query answering technique provide query answering services conjunctive query languages proposed daml oil see www daml org joint committee html 
years witnessed transfer algorithmic techniques terminological reasoning tbox reasoning development algorithms optimised implementations support reasoning individuals abox reasoning see 
systems provide sound complete abox reasoning expressive logics weak abox query languages 
typically support instantiation individual instance class realisation specific classes instance 
retrieval individuals instances 
reason weakness expressive logics reasoning tasks reduced determining knowledge base kb satisfiability 
particular instantiation reduced kb un satisfiability transforming query negated assertion technique directly queries involving roles variables 
shown sophisticated reduction kb unsatisfiability answering conjunctive queries similar supported relational databases 
show placing certain restrictions variables query particular query cycles adapt technique daml oil 
show simple extensions supported 
completely removing restrictions causes problems particular variables force cycles query 
due lack space problems discussed full technical details reader referred 
focus problem answering boolean queries determining query free variables true respect kb 
retrieval returning set tuples individuals answer query turned set boolean queries candidate tuples described 
clearly extremely inefficient naively implemented discuss basic techniques improve performance 
preliminaries daml oil daml oil ontology language designed describe structure domain 
daml oil takes object oriented approach structure domain described terms classes properties 
ontology consists set axioms assert subsumption relationships inspired abox reasoning decide conjunctive query contain ment see 
classes properties 
asserting resources pairs resources instances daml oil classes properties left rdf task suited 
resource instance class say type formal point view daml oil seen equivalent expressive description logic shiq addition existentially defined classes oneof constructor datatypes called concrete domains dls 
daml oil ontology corresponds dl terminology tbox set rdf axioms asserting facts resources corresponds dl abox 
dl daml oil classes names uris expressions variety constructors provided building class expressions 
expressive power language determined class property constructors supported kinds axiom supported 
constructor dl syntax example intersectionof 
cn human male unionof 
cn doctor lawyer male oneof 
xn john mary haschild doctor haschild lawyer hasvalue usa np haschild lawyer np haschild male female fig 

daml oil class constructors summarises constructors supported daml oil 
standard dl syntax compactness rdf syntax verbose 
rdf syntax example human male written daml class daml intersectionof rdf parsetype daml collection daml class rdf human daml class rdf male daml intersectionof daml class haschild lawyer written describable rdf called resource 
resource web accessible web page part web page object directly accessible web person 
resources named uris plus optional anchor ids 
see www org tr rec rdf syntax details 
daml restriction daml daml onproperty rdf resource haschild daml rdf resource lawyer daml restriction meaning constructors intersectionof unionof relatively self explanatory just standard boolean operators allow classes formed intersection union negation classes 
oneof constructor allows classes defined existentially enumerating members 
constructors correspond slot constraints frame language value existential restrictions dl 
class class instances related property resources type class class instances related property resource type hasvalue constructor just shorthand combination hasvalue oneof 
constructors known dls qualified number restrictions generalisations hasvalue constructors 
class np np class instances related property exactly different resources type emphasis different unique name assumption respect resource names uris possible uris name resource 
note arbitrarily complex nesting constructors possible 
xml schema datatypes called primitive datatypes strings decimal float complex derived datatypes integer subranges class name appear 
formal semantics class constructors daml oil model theoretic semantics derived specification suitably expressive dl see :10.1.1.20.7479
mentioned set constructors supported aspect language determines expressive power kinds axiom supported 
summarises axioms supported daml oil 
axioms possible assert subsumption equivalence respect classes properties disjointness classes equivalence individuals resources various properties properties 
note class individual axioms axioms reduced subclassof axioms seen dl syntax 
fact reduced subclassof axiom equivalent pair subclassof axioms seen daml oil allows properties properties asserted 
possible assert property unique functional www org tr daml oil model axiom dl syntax example subclassof human animal biped man human male subpropertyof haschild cost price male female president bush bush john peter inverseof haschild ancestor ancestor fig 

daml oil axioms ous inverse functional 
possible inverse properties assert property transitive 
description logic concentrate dl expressive daml oil answering conjunctive queries complete daml oil open problem 
shiq built signature distinct sets concept cn role rn individual names 
addition distinguish non overlapping subsets rn rn denote transitive functional roles 
set shiq roles equal set role names rn union set inverse roles rn 
set shiq concepts smallest set concept name cn symbols concepts concepts role integer nr nr concepts 
interpretation consists nonempty domain interpretation function interpretation function maps concepts subsets individual names elements role names subsets cartesian product 
concept names interpreted subsets complex expressions interpreted equations see nr nr role inverse interpreted equation addition interpretation function satisfy transitive functional restrictions role names rn semantics dl includes called unique name assumption assumption interpretation function maps different individual names different elements domain 
approach rely assumption applied dls unique name assumption 
knowledge bases shiq knowledge base finite set statements form shiq concepts roles individual names 
kinds statement called terminological ones called assertional 
intuitively terminological statements describe intensional properties elements domain assertional statements assign properties named elements 
say interpretation satisfies terminological statement iff assertional statement iff 
interpretation satisfies statement notation 
interpretation satisfies model kb iff satisfies statements written 
query language query answering services provided dl system seen process verifying statement query logical consequence knowledge base written 
meaning logical consequence terms interpretations statement logical consequence kb satisfied interpretation satisfying iff interpretation implies 
example instantiation written instance model 
mechanism extend kind queries ask introducing conjunctive query language terms assertional statements see 
purpose consider set variable names distinct individual names 
analogously conjunctive queries database setting variables place individuals considered existentially quantified 
dl boolean conjunctive query defined conjunction terms form concept role variable individual names taken call kind concept terms kind role terms 
semantics boolean conjunctive query follows schema shown knowledge bases 
difference need consider variable names satisfiability term may affected assignment variables 
interpretation consider evaluations defined mappings names elements interpretation domain constraint evaluations agree interpretation function mapping individual names 
say interpretation satisfies term evaluation written iff 
extended arbitrary conjunctive queries interpretation satisfies conjunctive query 
tn evaluation iff ti 
note require variables interpreted individual names appearing kb mapped arbitrary elements interpretation domain 
example consider kb containing assertion sam child female query sam child 
restrict variables individual names query logical consequence kb individual name asserted related sam 
allow variables range arbitrary elements interpretation domains query logical consequence kb 
seen considering query equivalent query sam child concept child general child female 
answering boolean queries really interested evaluation satisfiability query say satisfies query written iff evaluation query graph query answering algorithm associate query graph conjunctive query 
main idea consider conjunctive query directed graph nodes variable individual names 
addition concept role terms provide labels nodes edges respectively 
example query corresponds graph start path path path start path restrict queries graphs directed acyclic graphs dags 
restriction leads efficient procedure algorithm works expressive dls 
ongoing research extend algorithm arbitrary shaped queries expressive dls 
encouraging results published dls expressive daml oil see 
query retrieval definition boolean queries easily extend formalism retrieve arbitrary tuples individual names 
notation 
xn indicate variables 
xn appearing bound individual names constitute answer query 
call variables distinguished 
formally answer set query 
xn kb set ary tuples defined 

xn indicates query occurrences variable substituted individual name answering boolean queries section show answer boolean queries see section queries returning set tuples answer 
section show algorithm provide answers non boolean queries 
boolean query partitioned connected components considering query graph 
unconnected components share variables considered independently 
example query mary children male student connected components mary children male student 
share variable query logical consequence kb iff components mary children male student logical consequence kb 
boolean query answering logical consequence easily reduced kb satisfiability problem query contains single concept term standard instantiation problem 
example iff kb student person tom student tom person student person tom student tom person satisfiable 
true individual names variables 
query person satisfied iff model kb interpretation person empty set 
verified checking kb plus axiom person satisfiable 
case model kb interpretation person empty set definition empty set 
simple approach case query may contain role terms 
idea transform initial query equivalent query containing single concept term see 
terms query graphs means collapsing dag single node eliminating edges 
firstly consider queries containing variable names show constants individual names handled similar fashion 
queries constants consider simple query children male 
query satisfied element related role children element class male 
semantics dl operators see section query paraphrased single term children male 
intuition example substantiated fact query corresponds order logic formula children male order logic translation term children male see 
indicate transformation query formulae suggested example rolling role terms 
inverse role constructor children enables rolling directions 
fact role term example rolled variable obtaining query children male 
note transformation eliminates variables example equivalence guaranteed iff variable eliminated appear query 
consider query children degree kb containing assertion mary children male degree phd 
query logical consequence kb kb forcing role chain expressed query 
careless rolling applied role term produces query children degree 
resulting query logical consequence kb transformation guarantee correctness 
problem highlighted example overcome eliminating variables appearing single role term 
multiple concept terms male pig problem collapsed single conjunction construct male pig 
assumption query true interpretation satisfying kb queried 
graph dag see section ensures variable appearing role term 
queries constants constants individual names query rolling described section 
rolling described section constants individual names query 
reason names significant treat variables 
consider example previous section substitute variable individual name bill children bill male 
query logical consequence kb containing assertion bill male children male role term bill children satisfied model kb 
roll role term ignoring fact bill constant obtain query children male logical consequence assertion kb 
problem solved dl construct enables describe concept enumerating members 
example interpretation concept sally bill set containing elements corresponding sally bill see section 
difficult realise query term bill male equivalent bill male newly introduced variable 
fact term bill guarantees variable interpreted constant bill 
generalising idea remove constants query introducing appropriate concept terms involving dl construct 
example query example transformed children male bill replacing occurrences bill new variable introducing new term bill 
query rolled described section obtaining concept term children male bill 
note necessary variable name occurrences constant 
crucial point constraint concept term involving construct 
query example transformed equivalent children bill male bill terms bill bill ensure interpreted element 
unfortunately dl systems support reasoning daml oil provide construct 
case need full expressivity simulated primitive concept names 
technique substitute occurrence new concept name appearing knowledge base 
new concept names different individual query called representative concepts individuals written pa individual name 
addition assertions ensure individual instance representative concept added knowledge base bill 
general representative concept place instances individual represents pa 
representative concepts reduced setting 
retrieving answer sets ideally provide efficient bottom procedure retrieving answer sets 
context expressive dls easily achievable aware lead solution 
important stress fact expressivity dls query answering simply reduced model checking database framework 
kbs may contain nondeterminism incompleteness making approach minimal models infeasible 
fact query answering dl setting requires reasoning machinery logical derivation 
model checking techniques query answering able associate preferred model kbs quite difficult arbitrary dl kbs 
consider example simple kb containing single axiom elephant mouse stating elephants mice disjoint abox assertion elephant mouse 
identify minimal inclusion interpretations satisfying kb element mapped individual extension concept elephant second extension concept mouse 
interpretations considered preferred 
point general mechanism choosing trivial kb 
definition answer set section easily derive algorithm retrieving tuples individuals answering query 
fact boolean query answering algorithm applied query obtained substituting distinguished variables constants test membership tuple answer set 
idea iterate possible assignment distinguished variables checking corresponding tuples belong answer set 
procedure possibly practical fits nicely proposal daml oil query language 
fact proposal response query consist single binding distinguished variables server continuation obtain answers bindings 
feature mentioned proposal possibility returning partial bindings kb entails existence individuals known names set 
example kb containing assertion red colour implies existence element related red role colour 
individual name asserted correspond element 
query colour distinguished variables return answer empty set 
proposal suggested case answer binding variable individual name red left unspecified bind newly invented name representing anonymous element 
effect achieved framework relaxing conditions variables making part distinguished variables longer distinguished 
example query colour relaxed query colour longer distinguished 
view task relaxing conditions incorporated basic query answering mechanism left external layer 
example external layer tries answer query leaving distinguished variables 
restrictions answers retrieved different queries generated making variables non distinguished 
process continue answer returned user 
heuristics ordering adopted selection distinguished variables relaxed 
think mainly depends specifications ongoing project 
main point logical framework capture feature 
speeding answer rolling procedure polynomial size query kb satisfiability test exptime dl shiq 
fact boolean query answering expensive kb satisfiability algorithm optimal class boolean acyclic conjunctive queries assuming naive evaluation retrieval prohibitively expensive point section amenable optimisation 
called query language discussed joint committee daml mailing list see www daml org joint committee html 
kb unsatisfiable iff query logical consequence kb 
kb satisfiability test optimal 
heuristics obtain better behaviour cases practical tractability 
empirical evidence axioms kb major cause practical intractability see 
seen section query need encoded axiom rolled variable 
query rolled individual name query transformed abox assertion 
choice node query graph rolled speed kb satisfiability test 
different optimizations directed minimize choice individual name candidates distinguished variables see section 
fact case query retrieval ary tuples potentially test possible element reducing number candidate individuals variable name envisage different techniques 
relies standard retrieval service provided dl reasoners retrieving individual names instances concept second structure induced role terms query 
setting rolling cheap operation prune number candidates 
idea roll query distinguished variable prior substitute individual name 
concept obtain describes necessary conditions individuals substituted distinguished variable 
concept retrieve list individual names instance concept retrieved individuals candidates distinguished variable 
technique alternative boolean query answering tuples membership answer set need verified boolean query answer 
may significantly reduce number boolean queries need tested 
dl systems usually optimised retrieval means internal indexes specialised algorithms see 
structure role terms query shape query graph reduce number candidates distinguished variables 
idea observation role assertions kb allow express incomplete information concept assertions 
fact role assertions usually limited simple statements crucial point individual names related role role assertion 
note expressive dls shiq names roles query assertions need match 
limited expressivity roles shared dls studied implemented 
note longer valid languages including operator daml oil unique name assumption see section 
kind optimizations need extreme caution 
example underlying dl language allows optimization query contains role term children distinguished variables restrict candidates pair individual names having asserted role 
described basic conjunctive query language daml oil description logic ontology language formal framework precisely defines meaning 
shown queries rewritten query answering reduced problem knowledge base satisfiability logic corresponding ontology language 
enables answer queries standard reasoning techniques guarantee query answers sound complete case knowledge base satisfiability test sound complete 
practice means implemented description logic systems system capable deciding knowledge base satisfiability provide sound complete answers queries 
number proposals query languages rdf daml oil review 
rdf publications state html 
described best knowledge unique formalising problem describing mechanism sound complete answers non trivial queries computed inference procedure 
query rewriting relies restriction respect variables constants query expressions notably cyclical allowed 
relaxing condition distinguished variables constants occur query cycles difficult dealing non distinguished variables query cycles open research problem problem solved expressive description logics 
remains seen effective techniques practice 
implemented naively clear extremely inefficient 
seen section possibilities optimising implementations order speed query answering 
technique lends naturally incremental query answering system return partial answers having wait complete answer computed 

franz baader philipp hanschke 
schema integrating concrete domains concept languages 
proc 
ijcai pages 

tim berners lee 
weaving web 
san francisco 

alexander borgida 
relative expressiveness description logics predicate logics 
artificial intelligence 

broekstra kampman van harmelen 
sesame architecture storing querying rdf data schema information 
lieberman fensel hendler wahlster editors semantics www 
mit press 

diego calvanese giuseppe de giacomo maurizio lenzerini 
decidability query containment constraints 
proc 
pods pages 

diego calvanese giuseppe de giacomo maurizio lenzerini 
answering queries views description logics knowledge bases 
proc 
aaai pages 

diego calvanese maurizio lenzerini daniele nardi 
description logics conceptual data modeling 
jan chomicki nter saake editors logics databases information systems pages 
kluwer academic publisher 

francesco donini maurizio lenzerini daniele nardi werner nutt 
complexity concept languages 
information computation 

dieter fensel frank van harmelen ian horrocks deborah mcguinness peter patel schneider 
oil ontology infrastructure semantic web 
ieee intelligent systems 

volker haarslev ralf ller 
racer system description 
proc 


horrocks patel schneider 
generation daml oil 
proc 
dl pages 

horrocks sattler tobies 
reasoning individuals description logic shiq 
david editor proc 
cade number lncs pages 
springer verlag 

ian horrocks peter patel schneider 
optimizing description logic subsumption 
logic computation 

ian horrocks ulrike sattler 
ontology reasoning shoq description logic 
proc 
ijcai 
morgan kaufmann 

ian horrocks ulrike sattler sergio tessaris stephan tobies 
decide query containment constraints description logic 
logic programming automated reasoning lpar volume lncs pages 
springer 

ian horrocks ulrike sattler stephan tobies 
practical reasoning expressive description logics 
harald ganzinger david mcallester andrei voronkov editors proc 
lpar number lnai pages 
springer verlag 

ian horrocks sergio tessaris 
conjunctive query language description logic aboxes 
proc 
aaai pages 

deborah mcguinness jon wright 
industrial strength description logic configuration platform 
ieee intelligent systems pages 

manfred schmidt schau gert smolka 
attributive concept descriptions complements 
artificial intelligence 

sergio tessaris 
querying expressive dls 
proc 
dl 

sergio tessaris 
questions answers reasoning querying description logic 
phd thesis university manchester 

sergio tessaris graham gough 
abox reasoning transitive roles axioms 
proc 
dl 
