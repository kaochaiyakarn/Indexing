artificial social systems yoram moses moshe tennenholtz department applied math cs faculty industrial engineering management weizmann institute science technion israel institute technology rehovot israel haifa israel artificial social system set restrictions agents behaviors multiagent environment 
role allow agents coexist shared environment pursue respective goals presence agents 
argues artificial social systems exist practically multi agent system play major role performance effectiveness agents 
propose artificial social systems explicit formal object study investigate basic issues arise design 
keywords social laws multi agent systems line design supported part israel binational foundation 
author supported alon fellowship helen marcus career development chair 
second author supported part fellowship israeli ministry science technology air force office scientific research 
part research carried second author department applied mathematics cs weizmann institute part cs department stanford university 
consider examples environments involving agents ffl large automated warehouse uses robots fetch store products serves tens customers time 
ffl truck high volume activity branches uses large number drivers trucks move goods country efficient way 
scheduling drivers trucks different branches done locally affects ability respond demands 
ffl major software project employs large number programmers 
different programmers write different parts program code final behavior programmer segment affect affected software written 
contexts involves multiple agents actions interdependent may affect success actions 
addition examples purpose distinct agents actions time may motivated different sources different robots warehouse may serving different clients branches truck may involved goods different customers different programmers may handling different aspects software project 
obviously cases agents face coordination problem 
similar coordination problems arise system involving agents operate shared environment actions agent affect success agent activities 
extreme solution coordination problems provide centralized control relevant activities 
example imagine having central entity determines actions robots warehouse ensures conflict accident occurs 
centralized solutions come cost 
number agents tasks involved grows costs communication synchronization processing grow dramatically 
system depends crucially things reliability central element communication lines large complex systems costs prohibitive 
extreme purely decentralized approach agents attempt act completely independent manner 
result conflicts may arise 
goal methods resolving conflicts arise 
clearly cost conflict dear conflict resolution difficult completely independent behavior unreasonable 
suggest intermediate approach design multi agent systems agents designed act individually actions restricted behavior mutually compatible 
restrictions agents behaviors call artificial social system 
artificial social system mechanism coordination reduces need centralized control 
designed social system agents avoid potential conflicts 
artificial social systems bridge gap completely centralized purely decentralized approaches coordination 
allow wide spectrum intermediate solutions 
actual systems involving agents acting shared environment thought employing type social system 
human societies example social system consists legal system various conventions regarding people behave 
societies animals conventions behavior constitute social system 
view conventions restrictions employed artificial multi agent systems constituting social system 
thesis artificial social systems treated explicitly major component design multiagent systems 
purpose initiate study artificial social systems explicit formal paradigm design 
presents notion artificial social systems 
original manuscripts notion 
describe artificial social systems suggest approach design multi agent systems 
tradeoffs involved design multi agent systems approach uncovers methodology design approach offered 
various issues concern distributed decentralized ai communities dai shown fit naturally artificial social systems framework 
semantics formal logical syntax reasoning systems carried 
followed number papers extend notion artificial social systems 
organized follows 
section introduce idea artificial social systems framework simple widely applicable model 
section discuss number essential aspects design social system 
particular discuss golden mean problem artificial societies consider central problem design artificial social systems 
section discuss general semantics artificial social system logical reasoning systems 
section provides final remarks discusses related 
social automata section consider simple framework demonstrate idea artificial social systems 
idea complex settings framework discussed section embodies relevant issues 
generally speaking multi agent system consists agents 
assume point agent states 
agent state represents current situation agent agent point view 
states agent perform actions 
actions agent performs point may affect state agent states agents change 
define automata model multi agent activity aspects come play 
model study issues related artificial social systems 
system dependent automata da system consists agents may finite number different local states 
denote set local states agent list hs states different agents called system configuration 
step agent performs action 
set possible actions agent perform general function agent local state 
state set actions perform local state call list ha actions different agents perform point joint action 
agent state function system current configuration joint action performed agents 
point goal agent identified states 
assume agent set potential goals reach 
agent starts state taken set potential initial states 
assume agent perform computations plan attain goal determine actions take point 
model success agent actions may depend crucial way agents actions 
formally plan agent da system function associates state agent particular action 
plan said guarantee attainment particular goal starting particular initial state da system plan agent attain goal regardless agents initial states agents 
clearly computing plans complex 
resulting plan useful 
plan needs able respond possible behavior agents may inefficient number steps takes 
cases plan may fail exist 
da system said social initial state goal state computationally feasible agent devise line efficient plan guarantees attain goal state starting initial state da systems sets represent set actions agent physically capable performing state fail social 
example situation agent waiting intersection may point time choose move intersection agent plan guarantees safely cross intersection 
shall modify da system call social law 
formally social law sigma da system consists functions ha satisfying agent state intuitively social law restrict set actions agent allowed perform state 
da system social law sigma replace stated assume problem feasible efficient tractable exists polynomial algorithm solving 
assumptions treated similarly 
functions restricted functions obtain new da system 
denote new system sigma intuitively sigma agents behave manner compatible social law sigma 
point view artificial social systems number computational questions natural stage 
computational problems relate finding set restrictions called social law actions performed different agents different states original da system 
restrictions usually determined line initiation activity induce system agents able efficiently achieve goals line activity 
example da system may interested restricting agents actions social law sigma yield system sigma sigma agent goals plan guaranteed achieve condition holds plans prescribed efficient condition holds problem computing plans sigma tractable hold 
case consider system sigma social 
various assumptions structure da system example regarding number local states agents number actions agent perform state may affect mentioned computational problems 
analogues problems apply complex types systems 
turn study particular problem context da systems 
theorem illustrates kind computational results obtain regarding artificial social systems approach dependent automata setting 
state theorem discuss interpretation 
formally define problem designing social system respect da system agents assignment goals agent follows 
da system sets local states agent thetal set initial configurations set actions ascribes set possible actions agent local state 
transition function mapping configurations joint actions configurations 
define size system jaj max jl goals sets local state agent called initial state appears configurations interested social law sigma sigma agent initial state goal exists plan guaranteed reach starting show results hold natural definitions size system 
example hold replace term max jl sigma jl 
theorem constant 
da system agents problem finding social law sigma sigma agent devise plans reaching goal state initial state law sigma exists np complete 
proving problem np complete usually taken evidence problem hard solve 
efficient algorithms known solving np complete problems conjectured exist 
case np completeness interpreted positive manner 
fact problem np shows verification design process done efficiently 
roughly speaking process designing social law setting theorem corresponds guessing social law associated plans encoded polynomial space verified polynomial time 
design process usually done initiation activity particular system supported automatic verification get trial error procedure feasible design stage 
discuss designer ability attempt solve np hard problems line design stage general greater agents ability tackle problems encounter conflict line course activity 
discussion introduces basic setting artificial social systems discussed fairly positive basic theorem regarding 
main objective setting da systems illustrate artificial social system approach means general model related ideas discussed studied 
extension model concerned case plans agents execute restricted functions local state depend full history agent previous states actions 
extended setting social law taken restriction plans agent devise 
refer dependent automata setting extended notion plan extended dependent automata setting 
extended type social law enables efficiently construct efficient extended plans achieving agent goals initial states say induced extended dependent automata setting social 
interested efficient plans number actions executed course plan polynomially bounded 
able show analogue theorem positive interpretations holds extended setting 
theorem constant 
extended dependent automata setting agents problem finding extended social law induces social extended dependent automata setting exists np complete 
designing social laws previous section studied social laws context dependent automata 
ideas apply broader set contexts 
general model multi agent activity social law restrict behavior agents model 
specifically identify plan agent individual strategy game theoretic sense protocol language distributed systems 
intuitively social law determine strategies legal 
relevant issues remain dependent automata 
example saw section social law enable agent design plan guarantees attain particular goal plan exists social law ii allow shorter efficient plans certain goals iii simplify domain plan design performed simplifying computational problem involved designing plan reach goal 
notice controlling actions strategies available agent social law plays dual role roughly speaking reducing set strategies available agent social system may limit number goals agent able attain 
restricting behaviors agents social system may possible agent attain goals cases goals attainable simpler efficient plans absence social system 
overly liberal social system allow agent carry large number strategies 
agent may hope able attain useful goals 
agents able carry large number strategies strategies different agents incompatible 
result able devise plans attain goals agent may able attain small number goals attainable high cost agent 
hand social law overly restrictive number legal strategies available agent small likelihood collision different agents strategies greatly reduced 
case agents unable attain goals due lack options choosing actions perform 
related issue fact social system cases determine possibly implicitly goals agent able attain goals unattainable agent 
intuitively may cases allowing agent attain certain goal may cause unreasonable damage agents 
think goals anti social 
goal hurting agent example 
examples may getting bus waiting line 
forcing agents stand line getting bus social law may prevent agents attaining goal making possible weaker polite agents receive fair service 
associate social system set socially acceptable goals agent 
goals social system allows agent attain 
designing social system designer needs find compromise competing objectives 
agent point view ideal social system allow agent able attain goals possible efficiently possible 
ideal agent may undesirable vice versa 
result social system strike right balance restrict allowable behaviors various agents serve different agents manner 
means depend application 
refer problem finding compromise golden mean problem artificial social systems 
golden mean problem described applies directly context dependent automata discussed section 
scenario model multi agent activity particular dependent automata notion balance needs different agents need unique social system 
acceptable social systems usually exist scenario 
summary practically effective social system come golden mean problem way 
fact view design social system consisting searching reasonable solution golden mean problem 
particular computational problems defined investigated previous section collection golden mean problems context dependent automata model 
computational problems assumed goals considered social assumptions treated similarly 
difference golden mean problems investigated items section definition consider solution 
results section interpreted study golden mean problem framework basic model multi agent activity 
consider variant golden mean problem basic model call shot social game 
model somewhat simplified purposes exposition 
aim see golden mean problem captured general game theoretic strategic setting 
start set possible physical strategies identical agents 
assume set soc socially acceptable goals 
goal soc agent associate payoff function assigns joint strategy value 
formulation golden mean problem assume social restrictions strategies similar agents 
addition assume value payoff function agent depends current goal strategies executed 
refer payoff functions agent drop agent number notation payoff function 
efficiency parameter ffl formulate problem definition basic golden mean constant 
set agents set possible physical strategies set soc socially acceptable goals soc payoff function gamma 
find set socially acceptable strategies soc exists oe ffl oe gamma definition formalizes particular variant golden mean problem general game theoretic terms 
definition captures main issue involved variants formalized similar fashion 
case shot game solving golden mean problem designer needs disallow possible strategies order ensure efficient achievement certain goals hand necessary maintain strategies order agents attain goals reasonably efficient manner 
corresponding definition basic golden mean problem natural computational decision problem set possible physical strategies agents payoff functions parameter ffl determine exists set satisfy basic golden mean problem 
making precise certain assumptions number strategies size soc strategies utilities computed 
essentially weak assumptions prove theorem 
theorem decision problem corresponding basic golden mean problem np complete number strategies goals 
number goals bounded constant problem polynomial 
case theorem view np completeness result positive indication 
fact problem np suggests line trial error procedure determining social restrictions may feasible 
notice discussing golden mean problem mainly context line design stage artificial social system 
precise sense instances problem need solved repeatedly resolve conflicts different agents intended actions 
fact sufficiently rich contexts crucial agents occasionally attempt resolve conflicts essentially solving local golden mean problem 
thing theorem implies agents reach arbitrary states conflict cases computationally intractable negotiate compromise 
taken evidence importance design stage calling artificial social systems 
roles design simplify world extent possible agents reach unresolvable conflicts course activities 
discuss section 
second part theorem referring case number goals bounded constant somewhat important issues discussed 
motivated general heuristic design discuss section 
line vs line think design social law chiefly line activity performed system designers agents start actual activity 
agents actions plans ultimately performed line multi agent system 
agent agents goal agents may different local states coincide computational problem discussed 
details appendix 
ultimately plan course action carry stringent constraints time resources information available 
crucial aspect line activity resources agent able apply deciding course action may extremely limited 
system designers hand access considerably greater resources purpose designing system 
advantages investing line design stage threefold 
designer line resources usually greater agents line resources problems may better solved designer solved line agents 
example solving finding approximate solution np hard problem may feasible line setting may hopeless handle line 
second important advantage investing design stage line design social law keep agents arriving conflicts 
result far effective efficient line activity agents 
cases design social system may performed design aspects multi agent environment 
cases effective social system hard come environment may modified manner simplify problem devising social law 
examples adding traffic lights changing road system various ways 
naturally operations harder implement line line design stage 
focusing design effective social system allow agents act individually pursuit goals reducing fortunate cases eliminating completely need agents communicate explicitly coordinate actions 
sufficiently complex situations communication explicit coordination agents inevitable may desirable 
central concern distributed decentralized ai design communication interaction protocols 
framework applies equally situations 
agents multi agent setting communicate need common language specific protocols interaction conventions 
social system choose communication efficient effective 
making right choices course line design social system may able improve line behavior agents increase benefits 
social routines heuristic design imagine fixed number basic tasks agent needs able perform successfully order attain goals 
may example basic operators agent planning program go neighboring locations put agent currently holding 
type context high level planning normally studied 
cases set basic tasks small class behaviors agents generate rich complex 
call implementations tasks primitive routines 
say set routines social agent primitive routine set guaranteed successfully performed desired task long agents behave routines set 
set basic tasks implementation social set primitive routines provide agents simple effective social system 
example social primitive routine consider task filling glass water 
normally may implemented going sink filling glass 
social implementation consist entering queue agents waiting sink sink agent turn comes 
case social implementation guarantees wants sink eventually able absence weak slow agents unable fill glasses bad day 
small number basic tasks social law reduced requiring agents routines prescribed set carefully planned primitive social routines 
task verifying set primitive routines social manageable 
example associate fact small number basic tasks find corresponding social primitive routines restriction number primitive goals golden mean problem bounded small constant 
demonstrated case computationally tractable 
agent provided routines spared cost verifying plan agent social 
long agent uses social primitive routines plan guaranteed social 
obvious setting viewed social routines effective behavior driving traffic laws concentrate drivers behaviors small set specific types situations having intersections passing similar issues 
similarly examples social primitive routines large part activity greatly simplify task coordinating compatible behavior 
particular case programmers working software project fact verification problem reduced considerably social primitive routines paramount importance 
typical case extremely difficult verify program consisting processes working concurrently supposed 
social systems conflict resolution today people face problem designing artificial environments 
illustrated example contexts agents operating environments may robots may people may heterogeneous collection people robots computers 
design environments generally difficult problem 
consider fundamental problem field distributed decentralized artificial intelligence dai design artificial agents environments operate 
design allow agents fruitfully coexist effectively function obtain particular goals interest 
substantial amount explicit formal distributed decentralized artificial intelligence gone questions ffl artificial agents robots computer programs negotiate 
ffl strike deals 
ffl schemes resolving conflicts artificial agents 
ffl answers questions affect structure agents 
think artificial social system set conventions rules restricting behavior agents 
major purpose conventions course keep agents reaching conflicts possible 
avoiding conflicts appropriate social system attainable possible consider possible scenarios advance 
cases cost avoiding conflicts particular type may higher cost resolving occur 
comprehensive social system contain component describes conflicts handled occur 
negotiations deals consensus interaction protocols forms conflict resolution viewed handling delicate complex aspect design social system 
logical reasoning social systems previous sections introduced investigated basic issues artificial social systems design 
particular automata theoretic game theoretic models order introduce investigate computational aspects artificial social systems 
section add tool reasoning social systems 
general logical framework reasoning social systems 
enable supply general semantics artificial social systems enable formal logical reasoning elements social systems 
semantics artificial social systems argued providing clear semantics artificial social systems necessary step design 
particular enable formal logical reasoning social systems 
section gradually construct model artificial social system 
defining general multi agent system definition multi agent system tuple hn able able ffl ng set agents ffl set possible worlds ffl theta accessibility relations assume equivalence relation ffl set primitive individual actions ffl able gamma 
function determines possible physical actions agent world 
ffl set possible external inputs agents 
ffl theta theta gamma 
state transition function 
function determines state world going function actions agent performs input agent receives current world 
iff exists action able 
structure set possible worlds possible worlds vitally important implementation multi agent system 
roughly speaking thinking lines situated automata literature related knowledge distributed systems 
relations intended capture agents knowledge 
possible external inputs intended capture messages agent may receive outside system 
particular model dynamic receipt goals agent having agent receive external inputs sent master specifying new goals pursue 
notice transition world specified function depends joint action consisting actions performed agents 
action agent performs usually uniquely determine change world undergo 
worlds may potentially result agent performing specific action 
context multi agent system define strategy plan agent function ch gamma 
satisfies 
ch ch 
ch able ch intended represent action agent chooses perform plan condition requires action depend knowledge choose action worlds distinguish 
second condition captures idea action chosen physically possible agent perform 
identify agent goal multi agent system set worlds 
intuitively worlds goal achieved 
formal model say world plan attaining plan starting world guaranteed yield world intuitively think able functions corresponding physical law specify actions agents physically capable performing 
step extending model incorporate social law define normative system restricts agents actions definition normative system extending multi agent system defined pair hs legal gamma 
functions legal required satisfy conditions 
epistemological adequacy legal legal 
physical adequacy legal able 
non triviality legal intuitively legal specifies actions agent allowed perform underlying normative code 
interpretation epistemological adequacy requirement states agent know actions allowed perform 
physical adequacy requirement says actions agent allowed required perform physically enabled 
condition requires agent action allowed perform 
implicitly assuming null action corresponding doing explicit action 
reason may cases normative system requires agent perform active action put fire 
achieved having legal contain null action 
normative system hs say strategy plan legal respect addition valid strategy chosen actions legal actions 
words condition definition strategy strengthened 
ch legal intention define social system 
clearly social system particular type normative system 
social system additional structure 
inherent structure normative system guarantee bad happens 
fact ask social system 
require agents able attain reasonable socially acceptable goal 
social system disallow agent eat birthday cake leaving possible agent wants eat piece cake 
capture ideas follows 
coming design social system start set soc socially acceptable worlds 
intuitively social system required guarantee state world exit set long agents obey rules social system 
addition set soc reasonable socially acceptable goals agent able attain 
multi agent system denote set states world may initially 
assume simplicity soc normative system extending say world legally reachable reachable world sequence steps agents act rules normative system 
formally social system consistent soc soc normative system extending satisfies 
world legally reachable soc 
legally reachable world goal agent soc legal plan starting attain long agents act normative social system 
notice soc soc stated necessary orthogonal 
fact level abstraction treat states world haven restrictions model technically away soc soc solely 
introduced view serving specify distinct aspects system 
soc intended capture global aspects behavior called safety fairness aspects system 
purpose soc guarantee agents able act somewhat useful way roughly correspond liveness formal specification systems 
sets soc soc designer process designing social system 
sets able incrementally construct rules system check suitability 
practice expect cases design stage include updating soc soc sets experience gained designer better acquainted environment agents operate reasonable expect 
design stage appropriate social system 
remarked particular instance normative system 
system stages process manufacturer agents act social system agents operation 
manufacturer need reason product act accordance rules system agent need reason world actions actions course planning acting actual environment 
cases set soc longer play central role reasoning performed respect set legally reachable worlds 
fact design stage redefine soc set legally reachable worlds 
definition social system captures basic insight methodology artificial social systems 
definition extended various ways 
extension consists explicitly modeling utilities agents obtain attaining goals different routes 
example agent may want get airport prefer driven bus 
goal getting airport attained routes yielding different utilities 
formally utilities added social system hs soc soc adding function agent goal soc intuitively value represents pleased state attainment world reasoning social systems main benefits having semantic definition artificial social systems ability reason systems 
reasoning performed designer evaluating impact adding deleting various laws system 
manufacturer agents robots function social system need reason creation equipped hardware software necessary follow rules 
agents system reason state world agents need observations environment social system 
order able reason formally need decide language 
simplicity exposition choose propositional language 
basic formulas consist set phi primitive propositions including distinguished atoms social legal corresponding statements world social world legally reachable respectively 
addition facts dealing ability agents perform actions world agent action os nec os nec formulas read respectively physically possible agent physically necessary agent socially possible agent socially necessary agent 
add basic formulas deal agents goals 
close basic formulas negation conjunction knowledge operators knowledge operators capture knowledge respect physical multi agent system 
agents planning reasoning assumption agents acting socially rules 
add operator agent intended capture beliefs generated assumption world legally reachable 
model language pair social system phi gamma 
function associating primitive proposition set worlds holds 
define formula satisfied world denote hm wi 
definition induction structure 
hm wi phi 
hm wi social soc 
hm wi legal legally reachable 
hm wi os able 
hm wi nec able fag 
hm wi os legal 
hm wi nec legal fag 
hm wi hm wi 
hm wi hm wi hm wi 
hm wi hm satisfying 
hm wi hm wi legal legal 
definition social belief operator clause instance belief defeasible knowledge defined 
notion belief may hold definition clause gives rigorous semantic handle facts believed 
choice having single actions subject formulas sufficiently general express facts possibility necessity encoded able legal functions choice discussion involve statements simpler type 
extending language talk sets actions done straightforward way 
say formula valid denoted hm wi worlds formula valid denoted valid models satisfiability defined validity standard fashion 
choice syntax semantics study valid formulas 
clearly obvious validities axioms propositional logic modal system knowledge operators 
addition fact able legal induces particular relationship various necessity possibility formulas 
property formalism assume agent performs single action world 
result action socially necessary point action socially possible 
instructive relationship knowledge social actions models 
key facts nec nec os os 
consider number valid formulas illustrate power framework 
proposition valid formulas language 
nec nec 
nec nec legal 
nec os proposition illustrates relationship social necessity social belief 
clause says agent believes holds perform action agent explicitly believe facts believes believes perform action second clause self explanatory 
third clause says fact determines agent allowed perform action current world agent explicitly believe explicitly believe negation 
properties proposition tell structure legal functions 
properties guide designer constructing functions restricting agents actions 
addition properties agents reasoning agents knowledge learning world observing agents actions 
goals action social system main purpose artificial social system provide framework agents able plan act manage satisfy goals 
reasoning include issues related agents goals satisfaction goals extend language allow reasoning 
simplicity assume world agent may distinguished current goal 
identity goal may change dynamically time result agent receiving input external source result current goal satisfied agent interacting agents 
case basic idea agent actively pursues current goal point time 
reason goals add formulas form current goal language agent goal course current goal hold agent current goal 
recall associated goal set worlds satisfied 
sense goal thought proposition 
satisfying goal coincides satisfying corresponding proposition 
treat goals special case propositions formulas 
order reason satisfaction goals want able talk set agents cause fact satisfied 
mainly interested social reachability mean agents joint plan consisting solely socially acceptable actions guaranteed attain long agents follow rules social system 
denote reachable 
analogy social reachability define physical reachability case consider physically possible actions plans 
corresponding notation case reachable 
able reason happen certain action executed 
order add appropriate parameters reachability operators 
write reachable reachable holds cases agent executes action current world 
similarly define parameter element closure conjunction negation 
similar parameters reachable operator 
formulate conditions definition social system terms reachable 
legal reachable social sets ng agents 

legal current goal reachable agent goal soc formalism designer system users reason actions goals achievement 
example imagine certain socially acceptable situation alice needs move side door order reach certain socially acceptable goal bob open door 
case designer deduce social system order bob open door 
straightforward type reasoning assume david asks bob bob believes alice goal achieve bob believes alice attain opens door forced open bob deduce alice current goal 
proposition demonstrates types reasoning supported formalism 
proposition valid formulas language reachable current goal nec legal reachable social os notice part proposition considered formalization bob reasoning previous example 
second part captures potential reasoning designer disallowing actions social law social situation agent action necessary lead situation designer conclude action socially impossible 
high level social laws semantic model treating social law restriction able functions actions agents perform world 
general expect social law stated terms high level formal language 
show possible bridge gap giving examples definitions high level rules terms language defined 
example imagine want rule states circumstances satisfy fact say house fire members set help attain say put fire 
say enforces rule help iff reachable fig reachable typical rule may question arises prefer attaining attaining 
say enforces prefer iff reachable reachable reachable reachable reachable reachable may example wish notify believes holds 
formalized system said enforce notify iff help course go long list rules 
definitions may modified slightly capture distinct senses terms 
hope reader convinced semantic definitions basic propositional language provide means express high level rules rigorous concise fashion 
related significant body literature concerned issues related topics discussed 
includes areas organization theory see team theory dai see example 
related areas research especially concerned design agents roles communication structures enable cooperative achievement common goal 
artificial social systems concentrates somewhat complementary issue line design computation laws enable agent individually successfully goals line activity provided agents obey laws 
additional related includes synthesis multi agent programs cooperative discrete event systems des 
artificial social systems approach design talks essential stages design process 
general rules governing behavior agents social law behavior agent determined designer agent fashion consistent rules 
stage process methodology design discrete event systems 
discussion connection see 
society metaphors proposed ai literature albeit somewhat different contexts 
minsky uses society metaphor society mind 
notion social choice important element jon doyle 
social metaphors appear works fox hewitt malone simon concerning organization theory 
treat notion artificial social system relatively narrow sense particular point view mind 
wish develop theory support design multi agent environments assist reasoning necessary creating modifying agents comply social system 
treatment attempt subsume uses society metaphors ai sociology ethology 
find term social system appropriate purposes analogy social order natural human animal populations 
specifically interested context loosely coupled agents uncorrelated dynamically changing goals 
thesis society metaphor important role play context long sufficient care taken defining studying applying social systems multi agent activity 
devoted explicit formal study centralized approach line resolution conflicts 
discuss explicitly formally computational mechanism applies intermediate solutions 
spite generality wish emphasize way crucial importance mechanisms interaction communication agents significance study effective representations agents 
developed provides considerable progress complementary directions 
discussion various ways modeling agents significant importance coordination agents 
study artificial social systems may need take various representation levels account addressing construction useful social laws 
discussion high level social laws spirit discussion bridging gap intentional reactive agents 
explained section elaborated communication negotiation mechanisms discussed may serve essential components social law 
take account incentives agents cooperation 
cnr concerned issues defining goal adoption basic form cooperation effect social power cooperation agents 
technical machinery may enable express concepts goal adoption emphasis design artificial systems agents assumed conform law prescribed system designer 
bridges gap centralized decentralized approaches coordination agents agents 
extending artificial social systems include treatment cooperation incentives challenging directions 
particular case study design social law 
authors investigate traffic laws mobile robots operate grid 
nontrivial laws allow robots carry respective tasks collision rate constant rate tasks take space 
example appropriate line design social laws guarantees effective line behavior 
authors novel model defines multi agent systems referring explicitly notion social law 
framework model investigate automatic synthesis useful social laws give precise conditions problem tractable 
treatment having additional features considered extension social automata section 
addition discusses conditions problem algorithmically synthesizing social law tractable 
extended non homogeneous dynamic social structures 
complementary see shoham tennenholtz considered interesting case conventions laws determined line initiation activity emerge line activity system 
research concentrates understanding different agent behaviors system characteristics affect efficiency convention evolution 
viewed nontrivial extension standards behavior efficient social laws lead successful emergence specific useful conventions 
environment involving agents actions behaviors agent affect affected actions certain degree 
settings agent behavior invariably somewhat different agents consider 
result practically multi agent environment social system sort 
system may designed priori careful fashion may evolved various ways 
may stable may change dynamically 
case claim 
argue artificial social systems play major role performance agents multi agent systems 
result claim deserve studied explicitly formally role considered design implementation multi agent systems 
study artificial social systems suggests new perspective multi agent activity gives rise new interesting problems 
couple years seen considerable amount research initiated idea artificial social systems 
appendix proof theorems proof theorem order show problem np observe social law encoded polynomial space 
notice size plan agent bounded jl delta jaj polynomial 
fact polynomially pairs initial states goal states get desired set plans guarantee reaching initial states goal states restricted system exists encoded polynomial space 
remains show verification plans guarantee achievement goals initial states social law done polynomial time 
done backward chaining procedure restricted system system sigma actions agents restricted law sigma 
plan agent guarantee reaching initial state goal state consider configuration space restricted dependent automata initially mark configurations agent state procedure continues iterations iteration additional configurations marked action selects leads configuration marked 
process stops configurations marked 
plan guarantees reaching state state initial configurations system state agent marked process 
prove problem np hard reduction sat 
assume instance oe sat number clauses oe 
assume dependent automata identical agents 
single initial state single failure state bad goal states associated single clause oe 
define set possible actions contain action pair clause oe literal negation literal disjuncts consists actions 
describe transition function agent performs action second agent performs initial state happens 
actions conflict mean complement agents move respective bad states 
similarly move bad 
complements agent moves state corresponding clause second state corresponding clause states initial states sinks agent move state 
claim oe satisfying assignment da just constructed social law desired 
assume satisfying assignment oe 
define social law sigma allow actions true obvious law agent reach bad state social law guarantees agents generate conflicting actions 
satisfying assignment follows clause oe literal true follows agent reach goal state corresponding performing 
follows agent plan reach goal states done direction 
remains show social law type exists oe satisfiable 
sigma social law 
clearly allow agent perform action initial state performs conflicting action 
addition clause oe action allowed 
follows literal action allowed sigma action complement allowed sigma 
result sigma defines partial assignment literals oe 
sigma enables agent obtain goal state initial state follows assignment consistent partial assignment induced sigma guaranteed satisfy oe 
conclude existence social law sigma desired type implies satisfiability sat instance oe 
proof theorem fact problem np hard proved theorem 
prove problem np 
take social law set plans agent plan associated pair initial goal states agent 
show guess encode social laws polynomial space verify satisfactory polynomial time 
show problem np 
notice require plan succeed matter initial states goals plans agents 
fact plans constitute social law common knowledge agent know plans executed agents crucial proof theorem 
prove problem np showing appropriate plan exists replaced plan encoded verified efficiently 
consider plan agent reaching initial states goal states 
number actions observations states visited execution polynomial requirement 
assignment initial states goals agents correspond sequence polynomial length observations actions induced polynomially assignments initial goal states polynomially sequences 
combining plan corresponds polynomially sequences polynomial length 
sequences equivalent plan encoded polynomial space 
verification achieves goal done simulating behavior described concise representation possible initial configuration possible behavior agents polynomially behaviors encoded concisely 
combining get problem np 
proof theorem ease presentation assumptions 
agents 
refer agents ii 
case constant number agents treated similarly 

assume agents set possible physical strategies 
enumeration strategies 

goals goal corresponding payoff function 
payoff function associates element theta number 
number stands payoff agent goal executes strategy agent ii executes goal associate theta matrix value th term payoff agent goal plays strategy agent ii plays subset numbers define sub matrix generated deleting row column number appears golden mean problem turns find matrix satisfy maxmin rows greater equal ffl 
prove theorem problem np guess strategies deleted check goal row appropriate sub matrix remains deletion contains 
case number goals bounded constant turn polynomial choose constant number strategies goal set strategies 
polynomially selections checked mentioned polynomial time 
prove np hardness reduction sat 
associate clause sat formula matrix 
th row th column matrix correspond variable literal gamman variables appropriate formula 
entry matrix form contain value entries matrix contain certain row literal associated number appears appropriate clause 
similar thing done columns 
take ffl reduction golden mean problem 
golden mean exists find satisfying assignment substituting literal corresponds row deleted row corresponds literal row corresponds negation deleted assign 
notice golden mean exists sub matrix created appropriate deletion row 
get literals corresponding rows satisfy appropriate clauses 
hand satisfying assignment throw rows columns correspond literals get value keep 
easily verified gives desired result 
proof proposition 
assume hm wi nec 
implies hm wi legal nec legal 
show hm wi legal legal 
suffices show hm wi legal legal nec 
hold exist indistinguishable hm legal hm legal nec 
hm nec hm nec 
hm legal nec contradicts assumption legal nec 

assume hm wi nec 
implies hm wi legal nec legal 
need show hm wi legal nec legal legal 
suffices show assume legal hold assume hm wi legal nec hm wi legal nec legal 
exists indistinguishable legal nec holds 
implies nec holds contradicts assumption 

assume hm wi nec os 
assumption get hm wi os nec 
yields hm wi legal legal nec nec 
show hm wi 
implies show hm wi legal legal legal 
clear assumption hm wi legal holds 
order desired result obtained show pair statements contradict assumption hm wi legal hm wi legal 
pair statements hold exists hm legal hm legal 
nec holds get legal nec holds contradicts assumption 
nec holds get legal nec holds contradicts assumption 
combining gives desired result 
proof proposition 
assume hm wi reachable 
implies hm wi legal legal reachable 
show hm wi legal legal current goal legal nec assumption order hold exist indistinguishable legal current goal nec holds 
hand talk social system require legal current goal reachable 
assumption tells reachable gives contradiction yields desired result 

assume hm wi legal reachable social 
hm wi os relationships social reachability physical reachability augmented assumption imply hm wi legal reachable social 
contradicts assumption system social yields desired result 
second author yoav shoham collaboration joint various aspects artificial social systems 
james allen james hendler austin tate editors 
readings planning 
morgan kaufmann publishers 
demazeau 
better 
decentralized ai pages 
bond gasser 
readings distributed artificial intelligence 
ablex publishing 
castelfranchi 
social power point missed multi agent dai hci 
demazeau muller editors decentralized ai pages 
northholland elsevier 
castelfranchi werner 
artificial social systems 
reactive intentional agents 
conte miceli castelfranchi 
levels cooperation various types interaction 
demazeau muller editors decentralized ai pages 
north holland elsevier 
demazeau muller 
decentralized ai 
north holland elsevier 
demazeau muller 
decentralized ai 
north holland elsevier 
demazeau muller 
reactive intentional agents 
demazeau muller editors decentralized ai pages 
north holland elsevier 
doyle wellman 
impediments universal preference default theories 
proceedings st conference principles knowledge representation reasoning 
edmund durfee victor lesser daniel corkill 
coherent cooperation communicating problem solvers 
ieee transactions computers 
fox 
organizational view distributed systems 
ieee trans 
sys man cyber 
garey johnson 
computers intractability guide theory np completeness 
freeman 

communication belief changes society agents formal model agent 
demazeau muller editors decentralized ai pages 
north holland elsevier 
georgeff 
communication interaction multi agent planning 
proc 
aaai pages 
halpern moses 
knowledge common knowledge distributed environment 
technical report rj ibm 
hewitt 
scientific community metaphor 
ieee trans 
sys man cyber 
kraus 
function time cooperative negotiations 
proc 
aaai pages 
amy 
lansky 
localized event reasoning multiagent domains 
technical report sri international 
malone 
modeling coordination organizations markets 
management science 
jacob marschak roy radner 
economic theory teams 
yale university press 
minsky 
society mind 
simon schuster 
moses shoham 
belief defeasible knowledge 
proc 
th international joint conference artificial intelligence 
moses tennenholtz 
artificial social systems part basic principles 
technical report cs weizmann institute 
moses tennenholtz 
computational aspects artificial social systems 
proceedings eleventh workshop distributed artificial intelligence pages 
papadimitriou tsitsiklis 
complexity designing distributed protocols 
information control 
pease shostak lamport 
reaching agreement presence faults 
journal acm 
pnueli rosner 
distributed reactive systems hard synthesize 
proc 
th ieee symp 
foundations computer science 
ramadge wonham 
control discrete event systems 
proceedings ieee january 
rosenschein genesereth 
deals rational agents 
proc 
th international joint conference artificial intelligence pages 
rosenschein 
formal theories knowledge ai robotics 
new generation computing 
shoham tennenholtz 
emergent conventions multi agent systems initial experimental results observations 
proc 
rd international conference principles knowledge representation reasoning pages 
shoham tennenholtz 
synthesis useful social laws artificial agent societies 
proc 
aaai pages 
shoham tennenholtz 
traffic laws mobile robots 
proc 
st conference ai planning systems aips 
shoham tennenholtz 
social laws artificial agent societies line design 
artificial 
herbert 
simon 
sciences artificial 
mit press 
stuart 
implementation multi agent plan synchronizer 
proc 
th international joint conference artificial intelligence pages 
tennenholtz 
efficient representation reasoning multi agent systems 
phd thesis weizmann institute israel 
tennenholtz 
computational social laws dynamic non homogeneous social 
appear 
wilson 
insect societies 
harvard university press 

