appear kr representing sensing actions middle ground revisited keith golden daniel weld department computer science engineering seattle wa cs washington edu build effective planning systems crucial find right level representation impoverished important actions goals impossible express expressive planning intractable 
classical framework pednault adl provided happy compromise impoverished strips representation expensive situation calculus 
languages handling sensing actions information goals similar spectrum expressiveness 
uwl extension strips express goals rename file tex kr tex represent universally quantified goals effects 
extreme elegant languages effective planners exist 
combine elements uwl adl define sadl middle ground representation sensing actions 
underlying language insights missing uwl knowledge goals inherently temporal 
knowledge preconditions unnecessary important class domains obeying markov property sadl expressive encode rich domain theory internet softbot including hundreds unix internet operators supports tractable inference planners mark boddy bob doorenbos oren etzioni marc friedman robert goldman neal lesh greg linden rich segal jonathan shakes ellen spertus helpful comments 
research funded part office naval research national science foundation iri arpa rome labs gift rockwell international palo alto research microsoft graduate fellowship stumbling blocks past research planning incomplete information inadequate imprecisely defined languages representing information goals sensing actions 
researchers devised formalisms reasoning knowledge action languages expressive practical planning algorithms 
uwl offered tractable representation strips tailored current planning technology levesque observes semantics uwl unclear definitions relative specific planning algorithm 
efforts define semantics uwl determined uwl confused information goals maintenance goals conflated knowledge goals knowledge preconditions 
furthermore years experience uwl convinced wasn expressive fully handle real world domains unix internet intended 
uwl didn support universal quantification conditional effects correctly represent unix command ls lists files directory rm deletes writable files 
information expressiveness 
complete strips adl situation calculus incomplete uwl sadl moore define new action representation language sadl combines ideas uwl pednault adl just adl marked middle ground tractability spectrum strips situation calculus sadl offers advantageous combination expressiveness efficiency 
sadl supports universally quantified information goals universally quantified conditional observational effects expressive unix internet commands 
sadl pronounced saddle stands sensory action description language 
years painful experience writing debugging internet softbot knowledge base forced uncover remedy subtle confusions information goals ffl dynamic world knowledge goals inherently temporal proposition true time point false time point mean ask truth value 
uwl limited provision temporal distinctions encode important class goals 
particular uwl express goals require causal change attributes designate objects rename file tex kr tex 
see sections sadl solution ffl identify large class domains called markov domains argue actions domains best encoded knowledge preconditions 
multiagent scenarios inspired moore morgenstern markov unix internet 
sadl discourages knowledge preconditions recognizes need knowledge subgoals 
section elaborates 
roadmap section describes problems uwl formulation knowledge goals presents sadl solution 
section discuss observational effects actions causal effects decrease agent knowledge world 
demonstrate representational adequacy sadl presenting encoding unix ls command 
section discuss temporal projection sadl 
section demonstrate sadl formalism expressive represent interesting actions 
section argues sadl comes reasonable price reasoning tractable 
conclude discussion related section summary section 
knowledge goals preconditions uwl preconditions goals limited conjunctions literals annotated tags satisfy hands find 
sadl action language uwl uses different set annotations satisfy hands initially provide cleaner semantics information goals greater additionally sadl uses unannotated literals designate preconditions don depend agent knowledge 
furthermore sadl supports universal quantification conditional effects ramifications context incomplete information 
proceed reviewing uwl uncovering confusions presenting sadl solution sketching formal semantics 
uwl sadl individual literals truth values expressed valued logic unknown free variables implicitly existentially quantified quantifier takes widest possible scope 
example satisfy dir tex means ensure file directory tex truth values represented variables 
example satisfy dir myfile tex tv means find myfile tex semantics uwl defined procedurally provide sadl semantics terms situation calculus 
situation calculus firstorder logic capture changes world come execution actions 
fluent proposition truth value changes time 
fluent takes additional argument situation represents statement holds situation convention sowe freely add drop depending referring particular situation 
dir means file directory dir means fact holds situation state changes assumed result execution actions 
special function describe changes returns situation resulting executing action situation fag represent sequence actions fag denotes nested application result executing entire sequence starting situation shorthand fag 
formulation sadl scherl levesque solution frame problem knowledge producing actions 
adopt completeness assumptions formulation incomplete knowledge results persistence knowledge ignorance hold 
incomplete knowledge defined terms standard possible worlds semantics means situation consistent agent knowledge believe situation fact words fs jk set possible worlds consistent agent knowledge situation assume agent knowledge correct actual situation considered possible agent assume situations change agent executes action 
define know def true worlds consistent agent knowledge 
explicit quantifiers indicate narrower scope 
notational convenience omitted truth value defaults rewritten satisfy dir tex 
shorthand remainder 
italicized lower case symbols denote variables 
symbols typewriter font denote constants 
annotations bold 
mentioned sadl uses valued logic represent knowledge 
relation truth values know straightforward 
truth value know 
truth value know 
truth value know know 
satisfaction maintenance goals goal satisfy indicates traditional goal adl achieve means possible 
presence incomplete information requirement agent knows true 
define goal fag mean goal achieved situation resulting executing plan fag situation assume agent knowledge correct sufficient state agent knows goal satisfy fag def know sn goal satisfy fag def know sn goal satisfy tv fag def know sn know sn note existentially quantified variable truth value satisfy goal requires agent learn proposition true false achieved making true false 
equation slight simplification fluents goal variable tv truth value 
definition fails capture correlations 
don discuss correlated truth values clarity omit variable constraints remainder 
show satisfy goals 
variable constraints definitions follow form goal satisfy tv fag def know tv know tv hands annotation indicates maintenance goal prohibits agent changing fluent question 
goal hands fag def state history state history mean set situations produced execution fag including 
definition hands requires change value execution plan 
etzioni noted satisfy hands indicate look don touch goal sense fluent value forbidden change 
hands goals clearly useful argue overly specifying knowledge goals 
particular value fluent sensed 
knowledge goals inherently temporal explaining sadl approach knowledge goals discuss uwl find annotation 
find problematic original definition terms particular planning algorithm motivation find existence goals hands restrictive satisfy permissive 
example goal tell files directory tex executing rm tex reporting clearly inappropriate 
conjunctive goal free disk space tell files directory tex 
case excluding rm inappropriate may necessary service freeing disk space 
knowledge directory empty relevant information goal 
proponents find argued rm unacceptable goal acceptable service conjunction contend definition unclear unacceptable plan satisfies conjunction solution examples justify original find definition evocative persuasive powers stem ambiguity 
time point wish know directory contents 
freeing disk space afterward 
fluents changing general information goal requires temporal arguments time fluent sensed time sensed value reported 
ask president tell tomorrow 
planning explicit temporal representation slow quest middle ground expressiveness tractability spectrum demands minimal notion time captures common goals 
limit time points time goal agent time agent gives reply 
note satisfy tv equation allows specify goal knowing truth value time point 
specify goal sensing fluent time goal weintroduce annotation initially 
goal initially tv fag def represent agent knowledge past situation set situations indistinguishable execution plan fs fag fag definition initially states agent finished executing plan know true false started 
initially isnot achievable action changes fluent action obscures initial value changing determining initial value 

orig sn region surrounded dotted lines represents set set states indistinguishable agent knowledge state subset fs states consistent agent knowledge agent learned originally held forgotten knew originally 
fine 
combining initially satisfy express goals modify restore initial value plan furthermore express goals find file currently named tex rename kr tex impossible express uwl 
uwl temporal distinctions way ask past value fluent requiring value reply goal form find false inexpressible uwl 
universally quantified goals defining universally quantified goals specific respect time points designator specifying herbrand universe refer sadl allows arbitrary goal description scope universally quantified goal specify wide range requests 
example suppose agent goal seeing files directory tex compressed 
plans satisfy goal 
depends request really means 
sadl write precise versions eliminating ambiguity 

ensure files initially tex compressed initially dir tex satisfy compressed 
executing compress tex solves goal executing mv tex temp compress temp 

ensure files tex compressed satisfy dir tex satisfy compressed 
executing compress tex solves goal rm tex 

determine files initially tex initially compressed initially dir tex initially compressed 

determine files tex execution initially compressed satisfy dir tex initially compressed 
compressed satisfy dir tex ensure files initially compressed tex example interpretation goal case leaves desired user may want files moved tex easily state additional requirement files moved hands dir tex returned tex satisfy dir tex 
careful goals overly restrictive 
desire agent fail way compress files moving adding restrictions correct 
desire merely agent avoid moving files unnecessarily want original solution background preference minimize unnecessary changes 
background preferences expressed terms utility function world states measure plan quality explicit notion harm note decide forbid moving files tex actions deleting files important papers sending threatening email president gov haven excluded 
general problem satisficing plans goes long goal achieved 
specifying undesired outcomes goal tedious error prone 
better solution separate criteria goal satisfaction background preferences done appropriate annotations fluents provide temporal information semantics goals straightforward goal fag def goal fag goal fag def goal fag goal fag logical operators suchas follow form 
knowledge preconditions considered harmful moore identified kinds knowledge preconditions agent satisfy order execute action support proposition know rigid designator unambiguous executable description action 
second know executing action fact achieve generalized framework handle scenarios multiple agents reasoned knowledge 
interest tractability narrower view assuming away moore type knowledge precondition refuting need second type 
argument occupies remainder section summary large class domains obeying markov property actions best encoded knowledge preconditions 
multiagent scenarios considered moore morgenstern markov unix internet 
start argument assuming away moore type knowledge precondition 
define actions programs executed robot softbot need reasoning 
view actions rigid designators 
dial combination safe admissible action dial lifted action schemas dial rigid designators easy produce substituting constant moore type knowledge precondition vanishes 
moore second type knowledge precondition presupposes action plan provably succeed achieving desired goal 
standard assumption classical planning overly restrictive incomplete information world enforcing assumption adding knowledge preconditions actions inappropriate 
example knowledge safe combination precondition dial action impossible planner solve goal find combination dialing number executing dial action need satisfy action precondition finding right combination 
hand necessary agent plan obtain information combination safe reduce dangerous mistakes 
knowledge subgoals naturally temporal component time moment action executed 
example goal knowing safe combination satisfied agent open safe satisfied combination known value instance earlier time safe open 
wesay action markov effects depend state world time execution 
note simple mechanical software systems naturally encoded markov multiagent sys note eliminating knowledge precondition dial action allows agent devise plan enumerate possible combinations finds works 
internet softbot follows analogous strategy directed find particular user file web page location unknown 
finger ls included knowledge preconditions actions useless locating users files 
tems typically useful endow model agent state know bill knew 
actions domain markov knowledge sub goals form agent needs know value action executed doesn matter agent affects fluent obtaining value 
requirements knowledge sub goals met sadl definition satisfy equation regard action sequence fag plan achieve preconditions action markov assumption actions yields substantially simpler representation change defined moore morgenstern 
theories appropriate complex multi agent domains sadl gains tractability retaining model important domains 
effects uwl sadl divides effects change world annotated cause merely report state world annotated observe 
lacked universal quantification uwl couldn correctly model unix ls 
sadl goes uwl allowing observational causal effects universal quantification secondary preconditions 
observational effects executing actions observational effects assigns values runtime variables appear effects 
runtime variable parameter action control contingent execution information gathered action affect agent subsequent behavior 
inside effect runtime variables syntactically identified leading exclamation point tv appear terms truth values 
example ping twain ef reader may object nonrigid indexical appear preconditions actions 
example suppose running netscape requires file netscape bookmarks directory 
sufficient file name renaming tex netscape bookmarks cause netscape fail 
example clear proposed preconditions netscape simply underspecified 
directory contains file named netscape bookmarks bookmarks file just qualification problem disguise 
granted usually impossible undesirable model preconditions 
justification initially hands preconditions minimize destructive actions agent satisfy goal don mv find name file 
agree need reasoning plan quality accurate theory action distinguish action preconditions user preferences 
fect observe machine alive twain tv determining true false machine named twain alive wc myfile effect observe word count myfile word determining number words myfile 
define individual effects discuss means execute action effects 
eff denote fact true action executed precondition action effects 
action effects realized action executed preconditions satisfied 
furthermore agent knows executes action knows effects action 
moore goal fg eff fact agent knows effects doesn imply effects certain 
discuss section actions conditional effects result uncertainty 
define semantics observe terms primitive situation calculus expressions eff observe def eff observe tv def words action observe effect executed situation resulting situation agent knows value example agent observes sky blue say situation look agent knows sky blue situation double operator equations redundant single observational effect 
assume positive introspection transitive logic resulting equation greatly simplified 
complex effects wish distinguish agent knowing effect took place knowing value single fluent 
sadl supports universally quantified run time variables 
nesting universal existential quantifiers sadl model powerful sensory actions provide pieces information unbounded number objects 
example ls reports facts file current directory 
universal quantifier indicates execution time information provided files directory value observed quantification uses run time variable 
nested existential quantifier denotes file action ls precond satisfy current shell csh satisfy protection readable effect dir observe dir observe pathname observe name unix action schema 
sadl ls action unix ls list files directory 
distinct filename pathname 
conditional restricts files sensed directory fact dir relation appears places may odd shall explain dir refers actual situation second refers agent knowledge possible situations 
useful note executing ls tex agent knows files tex knows knows files closed world knowledge contents tex 
effects ls knows effects ls agent infer closed world knowledge 
inference costly done order theorem proving situation calculus 
devised efficient algorithms doing reasoning describe translation effects situation calculus straightforward logical operators follow form eff def eff definition effects may 
magic stems way introduces secondary preconditions required effects clause restricts universe discourse finite set indicates precisely range quantifier 
conditional effects secondary precondition associated effect defines conditions action execution achieve effect 
primary preconditions secondary preconditions need true action executed 
secondary precondition effect resulting conditional effect defined eff def goal fg eff goal definition defined goal annotations satisfy hands initially 
define preconditions 
need hold action executed different initially preconditions 
satisfy requires agent know condition true lead faulty effect occurs agent knows secondary preconditions hold 
add new type precondition annotation represent conditions hold time execution knowledge agent goal fag def ensures effects occur depends state world 
clear quantified ls files really time execution 
uncertain effects cases executing actions causal effects decrease agent knowledge world 
sadl provides encoding actions conditional effects secondary precondition unknown explicitly specifying truth value 
example executing rm tex deletes writable files tex agent doesn know files writable won know files remain tex knew contents executing action 
example explicit creation uncertainty encode compress myfile effect cause size myfile 
define causal effects truth values follows eff cause def eff cause def predicate know know words represent uncertain effect deterministic function hidden state 
denotes unique unknown predicate represents hidden state responsible change truth value unique avoid biasing correlation independent unknown effects 
clear definition cause effect may unknown 
may clear cause effect known 
fact principle represent uncertain effects conditional effects unknown preconditions doing cumbersome 
define semantics uncertain effects precisely manner 
wouldn fact agent knows effects action equation 
knowledge conditional effect necessarily mean knowledge consequent 
example agent executes compress myfile knows write permission prior executing compress myfile compressed afterward 
temporal projection regression wehave discussed function maps situation action sequence actions new situation said situation terms relate 
fag wewant answer questions 
ffl progression say knowledge conditions hold 
ffl regression true guarantee desired condition treat turn 
projection frame problem definitions preconditions effects insufficient solve temporal projection problem 
sadl effects list fluents action affects fluents doesn affect explicitly stating doesn change tedious known frame problem 
standard approach frame problem adopt strips assumption explicitly said change remains 
fully specify sadl semantics necessary express strips assumption terms situation calculus 
formulation introduced augmented account sensing actions 
strategy consists providing formula fluent called successor state axiom specifies value fluent terms action executed conditions held action executed 
quantifying actions produce single concise formula fluent includes relevant information 
specifying update axioms fluent independently requires fluents logically independent disjunction allowed 
effects consist conjunctions terms term equivalent fl cause fl cause fl cause tv observe tv action fluent may contain universally quantified variables constants fl tv tv represent arbitrary goal expressions 
example compress tex changes size writable files directory tex fl size compress tex tex writable 
clearly actions represented specifying fl preconditions fluent domain theory 
effect cause tv fl tv express fact action doesn affect saying tv fl tv don list observe subsumed conjunction observe similarly 
definitions state conditions action changes preserves fluent truth value 
pednault define conditions executable action establish conditions preserve 
wehave establishment conditions fl unk fl fl unk fl unk unknown predicate introduced equations 
presence effect truth value true false depending value unk 
unk unknown definition effects truth values aren generally useful goal establishment 
preservation conditions fl unk fl fl unk fl fluent generate expression specifies precisely true false quantifying actions 
fluent successor state axiom combines update axioms frame successor state axioms straightforward statements strips assumption fluent true true true originally wasn false goal fg similarly successor state axiom goal fg including variables resolve constants 
restriction effects consistent example fl fl false 
wehave stated formula second order logic formula depends actual fluents domain theory 
specific domain second order formula replaced equivalent order formula replacing fluent domain 
definition specifies information gained say lost 
information loss accounted successor state axiom true situations accessible false definition unknown 
example compress myfile compresses myfile writable 
unknown myfile writable accessible worlds myfile writable compressed 
worlds myfile writable won compressed 
result unknown myfile compressed 
similarly known previously changed successor state axioms continue known 
formula correctly describes little unwieldy want know know 
intuitively know true known true observed 
additionally continues known true possibly false 
formulas follow successor state axioms know know know know fl tv know regression modern planners build plans goal regression starting goal successively adding actions achieve part goal preconditions previously added actions 
preconditions remain aren true initial state plan complete 
useful formal specification conditions true additional requirement know may come surprise action simultaneously observes causes false unknown violate rule inconsistent actions 
effects aren inconsistent observation pertains situation update situation 
destructive sensing actions commonplace 
heisenberg uncertainty principle inevitable examples macroscopic domains 
biologists find number insects living tree placing containers tree tree poison 
number insects fall containers provides estimate number originally living 
action sequence achieve goal 
regression operator action condition true immediately execution results true executed 
define fag 
naturally regression action sequence zero length identity function fg 
ff axiomatization initial conditions goal expression 
objective planning produce executable sequence actions fag ffj fag 
discuss executability section 
specify regression operators satisfy initially hands goals 
conditions true initial state specify condition true executing plan zero length 
initially indicates true plan executed satisfy indicates things true follows plan initially satisfy interpretation ffj know fg initially ffj know fg satisfy hands true initial state violated fluent fg hands wenow consider regress sadl goal formula action 
goal satisfy achieved agent knows true just true just observed true previously known true wasn subsequently affected 
conditions captured know holds satisfy held previous state knowledge preserved satisfy know satisfy know hands goal holds state remains initial state 
hands doesn forbid actions affect just actions change 
example action compress myfile doesn violate goal hands compressed myfile myfile compressed initially 
hands initially initially hands departure uwl notion hands compress violation 
file violate goal uncompress changes fluent 
initially satisfied action satisfied observed action wasn affected previous actions 
goals interested time point initially goal achieved opposed 
disjunct initially ensures occurrence considered regressed back 
initially initially tv hands definition doesn rule destructive sensing actions 
matters sensed 
fine act sensing value affects 
unannotated preconditions merely need satisfied final state isn necessary known true 
logical operators simply regressed back initial state interpretation situations detailed definitions show regression correct conditions returned true fag successfully executed true 
theorem soundness regression fag action sequence 
formula ff axiomatization initial state ffj fag goal fag believe reverse true true fag executed true 
executability regression operators tell part story action sequence actions achieve goal 
consists conditions achieve assuming successfully executed 
ensure brings wemust ensure executed 
action executable situation iff preconditions true sequence actions fag executable iff executable executable executable 
expressiveness sadl appropriate markov domain transportation logistics manufacturing mobile robotics language best modeling domains accurate low noise sensors 
concentrated efforts unix internet encoding hundreds commands 
examples sensory actions include finger wc grep inspec internet sites actions traverse web causal actions include cp rm compress 
universal quantification allows model actions return unbounded amount information 
illustration consider goal finding file named old renaming new initially name old satisfy name new 
recall goal inexpressible uwl 
achieved executing ls various directories desired file executing mv change name new 
single action sequence situations location old necessarily known 
assume old resides directory tex location unknown 
assume agent knows tex readable current shell csh true 
shortest possible action sequence achieve goal ls tex mv tex old tex new 
brevity abbreviate actions ls mv respectively 
show action sequence executable achieves goal 
sake example consider mv full glory 
assume simplified version mv precondition mv satisfy name old satisfy dir tex single effect mv cause name new 
representation ignores details tex writable old readable file named new show plan executable show preconditions ls hold ls show preconditions mv hold ls executed ls mv show plan achieves goal need show mv ls 
regression show results hold 
regress conjuncts mv 
mv achieves satisfy goal secondary preconditions mv satisfy name new mv know name new know fl name new mv know mv effect initially goal mv initially name old initially name old regress mv mv ls 
regress initially name old satisfy name old satisfy dir tex 
regress conjuncts ls 
final conjunct satisfy dir tex follows pattern 
action ls tex effect observe name observe dir tex secondary precondition dir tex 
precondition require knowledge part agent 
ls initially name old satisfy name old ls know name old hands name old ls name old know name old ls know ls name old name old hands name old fl name old ls fl name old ls dir tex know fl name old ls fl name old ls name old dir tex know name old 
formula entailed remains show fg ls 
definition fg satisfy goals follows iff know current shell csh know protection tex readable true assumption 
tractability sadl implemented xii partial order planner performance comparable ucpop snlp family classical planners 
analyze performance terms refinement paradigm described xii refinement operations goal establishment conflict resolution action execution 
goal establishment involves possibly adding action plan adding interval protection constraint ipc prevent goal clobbered 
sadl possible intervals consider 
situation action executed situation goal fulfilled intervals corresponding satisfy initially hands respectively 
ensuring actions violate ipc requires time number steps plan maintaining consistent ordering actions requires time 
conflict resolution action execution take time 
contrast note goal establishment conflict resolution undecidable situation calculus 
related mccarthy hayes argued agent needs reason ability perform action 
moore devised theory knowledge action variant situation calculus possible worlds semantics 
provided analysis knowledge preconditions discussed earlier information providing effects 
morgenstern generalized moore results express partial knowledge agents knowledge agents john knows bill said substantially expressive logic syntactic modal 
davis extended moore theory handle contingent plans moore doesn discuss actions indeterminate effects 
levesque offers elegant theory plan conditionals loops achieves satisfaction goal presence incomplete information 
levesque doesn discuss knowledge goals sensory actions return change state world 
goldman boddy clean language contingent plans context dependent effects nondeterminism 
levesque don allow variables sensing actions possible outcomes represented 
shoham presents language explicit time representing beliefs communication multiple agents 
agents request agents perform actions include nested communicative actions arbitrary goals 
discrete temporal logic represent beliefs 
prs procedural language represent similar class goals sadl lacks temporal goals initially 
prs annotation achieve corresponding sadl satisfy preserve corresponding hands test corresponding satisfy hands procedural constructs corresponding terms declarative sadl language 
partially observable markov decision processes provide elegant representation sensing actions actions uncertain outcomes markov domains 
don lend efficient algorithms 
exceptions mdps assumes reward functions goals markov temporal goals initially inexpressible 
anumber contingent planning systems novel representations uncertainty sensing actions 
tags actions conditional meaning possible outcomes buridan uses probabilistic action language represent conditional observational effects including noisy sensors effects cause information loss 
sadl buridan language propositional distinction knowledge goals goals satisfaction 
buridan cassandra represent reason uncertain outcomes actions disjunctions allowing deal correlations multiple unknown variables raining fido wet sunny fido dry 
truth value sadl gives represent correlations far agent knows raining fido dry 
reasoning truth values efficient possible worlds representation handle disjunction 
cnlp sadl uses valued logic represent uncertainty 
limitation languages inability represent actions ls return information unbounded number objects 
sadl language representing sensing actions information goals lessons learned years building debugging internet softbot domain theories knowledge goals temporal sadl supports temporal annotation initially 
markov domains unix knowledge preconditions actions inappropriate subgoaling obtain knowledge necessary sadl handles knowledge preconditions actions secondary preconditions clearly indicate subgoaling acquire knowledge useful 
sadl expressive represent real world domains unix world wide web restricted efficiently modern planning algorithms fahiem bacchus craig boutilier adam grove 
rewarding behaviors 
proc 
th nat 
conf 
ai 
cassandra littman 
algorithms partially observable markov decision processes 
technical report brown university providence rhode island 
davis 
knowledge preconditions plans 
technical report nyu computer science department may 
draper hanks weld 
probabilistic model action commitment planning information gathering 
proc 
th conf 
uncertainty artifical intelligence 
drummond 
situated control rules 
proceedings international conferenceon knowledge representation reasoning may 
etzioni golden weld 
sound efficient closed world reasoning planning 
artificial intelligence 
appear 
etzioni weld 
softbot interface internet 
cacm 
oren etzioni keith golden dan weld 
tractable closed world reasoning updates 
proc 
th int 
conf 
principles knowledge representation reasoning pages 
oren etzioni steve hanks daniel weld denise draper neal lesh mike williamson 
approach planning incomplete information 
proc 
rd int 
conf 
principles knowledge representation reasoning pages 
golden etzioni weld 
planning execution incomplete information 
technical report department computer science engineering february 
available ftp pub ai ftp cs washington edu 
keith golden oren etzioni dan weld 
omniscience sensor management planning 
proc 
th nat 
conf 
ai pages 
robert goldman mark boddy 
expressive planning explicit knowledge 
proc 
rd intl 
conf 
ai planning systems may 
peter haddawy steve hanks 
utility models goal directed decision theoretic planners 
technical report univ washington dept computer science engineering september 
submitted artificial intelligence 
available ftp pub ai ftp cs washington edu 
ingrand chatila alami robert 
prs high level supervision control language autonomous mobile robots 
proceedings ieee international conference robotics automation 
kambhampati knoblock yang 
planning refinement search unified framework evaluating design tradeoffs partial order planning 
artificial intelligence 
kushmerick hanks weld 
algorithm probabilistic planning 
artificial intelligence 
hector levesque 
planning presence sensing 
proc 
th nat 
conf 
ai 
mccarthy 
circumscription form non monotonic reasoning 
artificial intelligence april 
mccarthy hayes 
philosophical problems standpoint artificial intelligence 
machine intelligence pages 
edinburgh university press 
monahan 
survey partially observable markov decision processes theory models algorithms 
management science 
moore 
formal theory knowledge action 
hobbs moore editors formal theories commonsense world 
ablex norwood nj 
morgenstern 
knowledge preconditions actions plans 
proceedings ijcai pages 
morgenstern 
foundations logic knowledge action communication 
phd thesis new york university 
pednault 
mathematical theory plan synthesis 
phd thesis stanford university december 
pednault 
synthesizing plans contain actions context dependent effects 
computational intelligence 
pednault 
adl exploring middle ground strips situation calculus 
proc 
st int 
conf 
principles knowledge representation reasoning pages 
peot smith 
conditional nonlinear planning 
proc 
st intl 
conf 
ai planning systems pages june 
martha pollack 
uses plans 
artificial intelligence 
pryor collins 
planning contingencies decision approach 
journal artificial 
howard raiffa 
decision analysis introductory lectures choices uncertainty 
addisonwesley 
reiter 
frame problem situation calculus simple solution completeness result goal regression 
vladimir lifschitz editor artificial intelligence mathematical theory computation papers honor john mccarthy pages 
academic press 
scherl levesque 
frame problem knowledge producing actions 
proc 
th nat 
conf 
ai pages july 
shoham 
agent oriented programming 
artificial intelligence march 
warren 
generating conditional plans programs 
proceedings aisb summer conference pages university edinburgh 
dan weld oren etzioni 
law robotics call arms 
proc 
th nat 
conf 
ai pages 
wilkins 
practical planning 
morgan kaufmann san mateo ca 
williamson hanks 
optimal planning goal directed utility model 
proc 
nd intl 
conf 
ai planning systems june 
