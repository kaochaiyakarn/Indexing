zhu dennis shasha high performance discovery time series techniques case studies spin springer internal project number monograph june springer berlin heidelberg newyork hong kong london milan paris tokyo dedication goes preface come golden words place name surname month year name surname contents part techniques 
time series 
high performance time series analysis 
data reduction techniques 
fourier transform 
orthogonal function family 
fourier series 
fourier transform 
discrete fourier transform 
data reduction dft 
fast fourier transform 
wavelet transform 
fourier analysis wavelet analysis 
haar wavelet 
multiresolution analysis 
wavelet transform 
discrete wavelet transform 
data reduction dwt 
singular value decomposition 
existence uniqueness singular value decomposition 
optimality singular value decomposition 
data reduction svd 
sketches 
euclidean distance 
lp distance 
comparisons data reduction techniques 
contents indexing methods 
tree 
kd tree 
tree 
grid structure 
transformations time series 
gemini framework 
shifting scaling 
time scaling 
local dynamic time warping 
lower bounding technique indexing scheme 
part ii case study statstream 

data queries 
time series data streams 
temporal spans 
statistics monitor 
statistics sliding windows 
single stream statistics 
correlation statistics 
review discrete fourier transform 
inner product aligned windows 
inner product unaligned windows 
io performance 
monitoring correlations data streams 
parallel implementation 
statstream system 
empirical study 
speed measurement 
precision measurement 
related 

query humming 

related 
contributions 
architecture query humming system 
user humming input hum query 
database music 
contents xi indexing databases efficient humming query 
experiments 
quality query humming system 
experiments indexing dtw 
scalability testing 

elastic burst detection 

problem statement 
contributions 
data structure algorithm 
wavelet data structure 
shifted wavelet tree 
streaming algorithm 
aggregates 
extension dimensions 
empirical results 
effectiveness study 
performance study 
related 


index 
part techniques goal book help design fast scalable algorithms analysis single multiple time series 
foundation book consists fast algorithms finding highly correlated pairs promising delays autocorrelation bursts window sizes 
second half book discusses applications illustrate power fast primitives 
creative readers find applications may find ways speed primitives 
try keep mathematical prerequisites light assuming familiar year calculus linear algebra 
learn fourier wavelet sketch analysis correlation problem filtering techniques approximation envelopes design data structures speed time series matching application 
choice techniques try suggest decision criteria 
chapter describes basics time series presents road map book 
time series time series sequence recorded values 
values usually real numbers recorded regular intervals yearly monthly weekly daily hourly 
data recorded irregularly interpolated form values regular intervals time series analyzed 
represent time series just vector real numbers 
time series data appear naturally fields natural social science numerous disciplines 
people probably familiar financial time series data 
plots daily stock prices transaction volumes ibm month 
shows median yearly annual household income different regions united states 
economists may want number shares fig 

time series daily open high low close prices volumes ibm stock jan date identify trend changes annual household income time 
relationship different time series annual household incomes time series different regions great interest 
meteorological research time series data generated 
example fig 
plot monthly average temperature new york 
time series data may contain valuable business intelligence information 
shows number bytes flow internet router 
periodic nature time series clear 
equally spaced spikes correspond peaks internet traffic course day 
analyzing traffic time series data internet service provider isp may able optimize operation large internet backbone 
fact values recorded time sequence represented time series 
gives time series number hyde park purse chicago 
high performance time series analysis people interested time series analysis reasons 
modeling time series obtain insights mechanism generates time series 

forecasting time series predict values time series variable 
price dollars dollars dollars dollars high performance time series analysis year fig 

time series median yearly household income different regions united states top bottom northeast midwest south west 
data source census bureau traditionally people tried build models time series data fit actual observations sequences models 
model successful interpreting observed time series values time series predicted provided model assumptions continue hold 
result developments automatic massive data collection storage technologies living age data explosion 
applications generate massive amounts time series data 
example mission operations nasa space shuttle approximately sensors second mission control johnson space center houston 
telecommunication long distance data stream consists approximately records day customers 
month avg 
high avg 
low mean fig 

time series monthly average temperature new york 
data source weather com astronomy project investigate dark matter halo way monitors stars 
data rate high gbytes night 
securities trading united states second quotes trades generated 
extremely large data sets grow prevalent wide variety settings face significant challenge developing efficient time series analysis methods 
scalable methods linear time sublinear space 
happily possible 

data reduction time series observations sequence relationship consecutive data items time series gives data analysts opportunity reduce size data substantial loss information 
data reduction step tackling massive time series data provide synopsis data 
quick dirty analysis synoptic data help data analysts spot small portion data interesting behavior 
thorough investigation interesting data reveal patterns ultimate interest 
data reduction techniques time data 
discrete fourier transform classic data reduction technique 
discrete fourier transform researchers developed newly classic discrete wavelet transform 
singular high performance time series analysis fig 

time series number bits received backbone internet router week fig 

series number hyde park purse chicago day periods jan sep 
data source hay value decomposition traditional principle components analysis attractive data reduction technique provide optimal data reduction 
random projection time series great promise yields nice results provide approximate answers guaranteed bounds errors 
discuss techniques chap 

indexing method build scalable algorithms avoid brute force scan data 
indexing methods provide way organize data data interested properties retrieved efficiently 
indexing method organizes data way cost greatly reduced 
essential high performance discovery time series data 
indexing methods topic chap 

transforms time series discover patterns time series data analysts able compare time series scale magnitude independent way 
shifting scaling time series amplitude time shifting scaling time series dynamic time warping time series useful techniques 
discussed chap 

second part data reduction techniques data mining point view time series data important characteristics 
high dimensional think time point time series dimension time series point high dimensions 
time series length corresponds point dimensional space 
time series length common practice data processing dimensions extremely difficult modern computer systems 

temporal order fortunately consecutive values time series related temporal order time series 
example financial time series differences consecutive values predictable threshold time 
temporal relationship nearby data points time series produces redundancy redundancy provides opportunity data reduction 
data reduction important data mining concept 
data reduction techniques reduce massive data manageable synoptic data structure preserving characteristic data possible 
basis fast analysis discovery huge amount data 
data reduction especially useful massive time series data characteristics time series 
high performance analytical techniques time series rely data reduction techniques 
data reduction time series results reduction dimensionality time series called dimensionality reduction time series 
chapter discuss data reduction techniques time series details 
start sec 
fourier transform proposed time series data reduction technique data mining community widely practice 
wavelet transform new signal processing technique fourier transform 
surprising gains popularity time series analysis fields 
dis data reduction techniques wavelet transform data reduction technique sec 

fourier wavelet transforms orthogonal function family mathematically 
singular value decomposition provable optimal data reduction technique orthogonal function analysis 
topic sec 

sec 
discuss new data reduction technique random projection 
random projection favorite massive time series analysis suited massive data processing 
conclude chapter detailed comparison data reduction techniques 
fourier transform fourier analysis time series analysis invented years ago 
traditionally ways analyzing time series data time domain analysis frequency domain analysis 
time domain analysis examine time series process evolves time tools autocorrelation function 
frequency domain analysis known spectral analysis studies cyclic components different frequencies affect behavior time series 
fourier transform main tool spectral analysis time series 
time series data mining fourier transform tool data reduction 
section give quick tour fourier transform emphasis applications data reduction 
main virtues fourier transform fourier transform translates time series frequency components 
component non negligible values 
significant components reconstruct features original time series compare different time series 
convolution inner product operations faster fourier domain 
orthogonal function family applications convenient approximate function linear combination basis functions 
example continuous function compact set approximated set polynomial functions 
basis functions trigonometric functions sine cosine functions transform called fourier transform 
fourier transform particular interest time series analysis simplicity periodicity trigonometric functions 
give formal definition orthogonal function family 
basic fourier transform basic data reduction techniques wavelet transform singular value decomposition discuss sections 
fourier transform function said square integrable interval holds denoted 
dx 
definition orthogonal function family :10.1.1.45.9798
infinite square integrable function family orthogonal interval dx 
dx 
integral called inner product functions 
definition inner product functions 
inner product functions interval norm function defined follows 
dx definition norm function :10.1.1.45.9798
norm function interval dx orthogonal function family function family called orthonormal 
theorem shows represent function linear combination orthogonal function family 
theorem 
function orthogonal function family interval represented follows ci ci real constants ci determined ci 
data reduction techniques proof 
take inner product sides 
cj 
ci orthonormal simplified ci 
note theorem states function represented linear combination orthogonal function family decide coefficients linear combination 
necessary sufficient condition representation derived theory completeness convergence 
get technical details 
fourier series show trigonometric function family orthogonal need lemma readers verify 
lemma 
integer cos sin 
theorem states trigonometric function family orthogonal 
theorem 
integers cos nx cos sin nx sin cos mx sin proof 
tells cos cos cos cos sin sin cos cos sin cos cos sin lemma cos nx cos similarly cases 
fourier transform cos cos dx cos cos dx cos nx cos dx cos cos dx define function family interval follows cos ix sin ix orthogonal 
directly applying known function interval represented orthogonal function family coefficients computed 
similarly function defined replacing construct orthogonal function family 
ix cos ix sin function defined extend periodic function defined period notice functions periodic period defined represented linear combination functions represented linear combination functions 
theorem 
data reduction techniques theorem 
periodic function period defined represented follows ix ix ai cos bi sin proof 
theorem 
dx ai ix cos dx bi ix sin dx representation called infinite fourier series representation 
periodic function practice infinite fourier series representation exists 
convenient trigonometric functions complex exponential functions euler relation 
denote basic imagine unit 
euler relation follows 
cos sin jx cos ejx jx sin ejx jx ix integer fourier series complex representation fourier transform ix cn ix dx 
fourier series defined periodic functions 
general functions find representations frequency domain 
requires fourier transform 
formal definition fourier transform stated theorem 
fourier transform theorem fourier transform 
function real variable dt fourier transform exists inverse fourier transform gives dx fourier transform pair denote discuss fourier transform 
discuss discrete fourier transform time series section 
noted properties fourier transform similar corresponding properties discrete fourier transform 
discrete fourier transform fourier series fourier transform deal functions 
time series analysis finite sequence values observed discrete time 
apply fourier series fourier transform directly time series 
section discuss discrete fourier transform time series 
discrete fourier transform map sequence time domain sequence frequency domain 
definition discrete fourier transform 
definition discrete fourier transform 
time sequence discrete fourier transform dft df inverse discrete fourier transform idft idf data reduction techniques denote relation set df 
wn transforms written wn wn 
write dft idft matrix form 







df xw idf time series complex real imaginary parts real time series xr xi xr xi 
compute dft relation xr xi cos sin xr xi xr cos xi cos similarly idft xr xi xr cos xi cos xi sin xr cos xi sin xr cos fourier transform time series thought samples function interval xi 
discrete fourier transform inverse discrete fourier transform defined finite interval cases convenient imagine time series extended outside interval repeat values periodically 
compute dft extend variable outside interval get periodical time series 
similar result holds idft 
periodic property dft idft stated theorem 
theorem periodicity 
discrete fourier transform inverse discrete fourier transform periodic period proof 
data reduction techniques similar 
similar 
theorem linearity 
discrete fourier transform inverse discrete fourier transform linear transforms 
ay bz ay bz proof 
obvious linearity matrix multiplication 
remember transform matrices symmetric 
leads symmetric properties dft idft 
theorems state symmetry relation dft idft 
theorem symmetry 
proof 
df df df df similar 
theorem symmetry 

odd odd 
fourier transform periodicity proof 

df 
df df 
definition 
similar 
theorem symmetry 
real 
real complex conjugate proof 
real 
wn wn wn data reduction techniques similar 
shifting theorem important fast computation dft idft 
theorem shifting 
df nf idf ni proof 

substituting df wn 
similar 
wn wn convolution product important operations pair time series 
definitions follows 
definition convolution 
convolution time series time series denoted note 
convolution known circular convolution 
convolution time series need length 
time series different lengths just padding time series zeroes length 
definition product 
product time series time series denoted fourier transform turns convolution product symmetric fourier transform 
theorem convolution 
proof 
df nx theorem product 
df df nx proof 
similar proof theorem 
time complexity compute convolution time series length complexity product 
theorems connect convolution product 
computing convolution directly perform dft time series compute product perform idft product 
take time time complexity dft 
section show fast fourier transform takes time log time complexity convolution reduce log fourier transform 
inner product important operations pair time series 
data reduction techniques definition inner product :10.1.1.45.9798
inner product time series inner product pair real time series just power theorem says discrete fourier transform preserves inner product time series 
theorem power 
proof 
definition 
df 
df nx 
compare 

fourier transform energy real time series defined sum square item time series 
definition 
energy time series obviously en 
en 
rayleigh energy theorem parseval theorem states dft preserve energy time series 
theorem rayleigh energy 
proof 
direct consequence rayleigh energy theorem dft preserves euclidean distance time series 
theorem euclidean distance 
df df data reduction dft real time series coefficients contain energy reasonable expect coefficients capture raw shape time series 
example energy spectrum random walk series known brown noise brownian walk models stock movements declines power increasing coefficients 
shows time series ibm stock prices dft coefficients 
theorem know real time series th dft coefficient conjugated th coefficient 
verified 
observe energy time series concentrated dft coefficients coefficients symmetry 
birkhoff theory claims interesting signals musical scores works art consist pink noise energy concentrated frequencies random walk 
black noise successfully models series water level river varies time energy spectrum declines faster brown noise increasing number coefficients 
shows time series ocean level example black noise 
dft data reduction techniques time series ibm stock prices real part dft coefficients image part dft coefficients fig 

ibm stock price time series dft coefficients coefficients shown 
see energy type time series concentrated brown noise 
type time series white noise value completely independent neighbors 
white noise series energy frequency implies frequencies equally important 
pure white noise way find small subset dft coefficients capture energy time series 
discuss random projection method data reduction technique time series having large coefficients frequencies sec 

data reduction dft works retaining dft coefficients time series concise representation time series 
time series modeled pink noise brown noise black noise representation capture energy time series 
note symmetry dft coefficients real time series means energy contained dft coefficients implicitly 
time series reconstructed dft coefficients dft approximation original time series 
shows dft approximation ibm stock price time series 
see ocean level time series fourier transform real part dft coefficients image part dft coefficients fig 

ocean level time series dft coefficients 
data source ucr time series data achieve 
dft coefficients dft approximation gets better 
dft coefficients raw trend time series captured 
fig 
show approximation ocean level time series dft 
see black noise fewer dft coefficients brown noise approximate time series high precision 
fast fourier transform symmetry dft idft possible compute dft efficiently 
cooley tukey published fast algorithm discrete fourier transform 
known fast fourier transform fft 
fft important invention computational techniques century 
reduced computation dft significantly 
see time complexity dft time series length 
reduced log fft 
wm data reduction techniques fig 

approximation ibm stock price time series dft 
top bottom time series approximated dft coefficients respectively 
define dfts df df wn wn wm period fourier transform fig :10.1.1.45.9798

approximation ocean time series dft 
top bottom time series approximated dft coefficients respectively 
equations discrete fourier transform time series length computed discrete fourier transform time series length 
suppose computing fft time series length takes time 
computing transform requires transforms product 
computing takes time product time series size takes time 
recursive equation 
suppose integer solving recursive equation gives log 
data reduction techniques fast fourier transform time series size power computed time log 
time series size power pad zeroes time series perform fft computation 
wavelet transform theory wavelet analysis developed fourier analysis 
wavelet analysis gained popularity time series analysis time series varies significantly time 
section discuss basic properties wavelet analysis emphasis application data reduction time series 
fourier analysis wavelet analysis fourier transform ideal analyzing periodic time series basis functions fourier approximation periodic 
support basis fourier vectors length time series 
consequence sinusoids fourier transform localized frequency localized time 
examine time series transformed frequency domain fourier transform time information time series lost 
example spike time series impossible tell spike looking fourier coefficients time series 
see example ecg time series 
ecg time series electrical recording heart investigation heart disease 
ecg time series characterized spikes corresponding heartbeats 
shows example ecg time series dft coefficients 
impossible tell spikes occur dft coefficients 
see energy frequency domain spread relatively large number dft coefficients 
result time series approximation discrete fourier transform coefficients give satisfactory approximation time series especially spikes original time series 
demonstrated fig 
shows approximation ecg time series various dft coefficients 
overcome drawback fourier analysis short time fourier transform stft known windowed fourier transform proposed 
represent frequency behavior time series locally time time series analyzed functions localized time frequency 
short time fourier transform replaces fourier transform sinusoidal wave product sinusoid window localized time 
sliding windows fixed size imposed time series stft computes fourier transform window 
ecg time series wavelet transform real part dft coefficients image part dft coefficients fig 

ecg time series dft fig 

approximations ecg time series dft 
top bottom time series approximated dft coefficients respectively 
data reduction techniques compromise time domain frequency domain analysis time series 
drawback short time fourier transform sliding window size fixed stft provide information time series 
short time fourier transform generalized wavelet transform 
wavelet transform variable sized windows replace fixed window size stft 
sinusoidal waves fourier transform replaced family functions called wavelets 
results time scale domain analysis time series 
discuss details wavelet analysis remaining section 
amplitude frequency time domain time time time frequency domain frequency scale frequency domain time scale domain fig 

time series analysis different domains amplitude time wavelet transform fig 
compare view time series time domain analysis frequency domain analysis fourier transform time frequency domain analysis short time fourier transform time scale domain analysis wavelet transform 
wavelet transform higher scales correspond lower frequencies 
see wavelet transform time resolution better higher frequencies lower scales 
comparison short time fourier transform frequency time resolution independent 
haar wavelet start simplest wavelet haar wavelet 
haar wavelet step function 
definition step function 
step function 
definition haar scaling functions 
collection called system haar scaling functions 
mathematically system haar scaling functions generated haar scaling function integer translation shift dyadic dilation product powers 
see specific collection piecewise constant functions 
piecewise constant function non zero support length increases piecewise constant functions narrow 
intuitively function approximated piecewise constant function 
surprising system haar scaling functions approximate function precision 
similarly haar wavelet function generate system haar function family 
definition haar function family 
collection called system haar function family data reduction techniques fig 

sample haar functions def 
interval top bottom shows haar functions interval 
please verify orthonormal 
theorem 
haar function family orthonormal 
multiresolution analysis haar function family approximate functions progressively 
demonstrates power multiresolution analysis 
construct complicated wavelet systems need introduce concept multiresolution analysis describe briefly 
information multiresolution analysis please refer 
definition multiresolution analysis 
multiresolution analysis mra nested sequence subspaces vj function 
vj vj 

continuous function vj 
vj vj 


exists function orthonormal basis 
wavelet transform property multiresolution analysis says space vj included space vj 
function represented linear combination basis functions vj represented linear combination basis functions vj 
think sequence spaces vj vj vj spaces finer finer approximations function 
haar scaling function example basis functions vj haar approximation vj fj 
fj approximates piecewise constant function piece length call fj approximation function resolution level add detailed information level dj approximation level 
general fj fj dj 
words space vj decomposed subspaces vj wj fj vj dj wj 
wj detailed space resolution orthogonal vj 
denoted expand equation follows 
vj vj wj vj vj wj 
vj wj wj 
vj wj wj wj equation says approximation space resolution decomposed set subspaces 
subspaces include approximation space resolution detailed spaces resolution general show wj orthogonal wk second property says intersection resolution space space includes zero function 
interpreted follows 
approximation space get coarser coarser decreases 
information function space 
example haar wavelet space function approximated constant function 
coarsest approximation space possible 
requirement function square integrable gives zero function 
hand third property states function approximated certain resolution 
reason finest approximation 
function approximated go certain resolution level 
fourth property states space scaled versions fifth property states space invariant translation 
properties imply data reduction techniques vj 
function property called scaling function multiresolution analysis 
function construct orthonormal basis functions nested sequence subspaces multiresolution analysis 
wavelet transform multiresolution analysis introduce general theory wavelets 
simplicity restrict orthogonal wavelet 
property multiresolution analysis says scaling function generate orthonormal basis functions 
fact generates orthonormal basis functions vj 
theorem 
wavelet orthonormal basis proof 
fourth fifth property multiresolution analysis know orthonormal basis functions vj 
third property multiresolution analysis 
wavelet orthonormal basis examine relation adjacent levels resolution space 
theorem 
exists coefficient sequence hk hk 
proof 
know orthonormal basis functions 
dilation equation hk hk 
orthonormal basis functions hk dx 
wavelet transform coefficient sequence hk called scaling filter 
symmetric scaling function wavelet function designed generate orthonormal basis function detailed space wj 
orthonormal basis functions detailed space wj 
get detail design wavelet function scaling function 
infer properties wavelet function assertion 
fact orthonormal basis functions wavelet equation gk gk 
orthonormal basis functions gk dx 
coefficient sequence gk called wavelet filter 
theorem gives connection scaling filter hk wavelet filter gk 
theorem 
scaling filter hk wavelet filter gk gk scaling functions adjacent levels resolution space connected scaling filter 
similarly wavelet filter bridges wavelet functions adjacent resolution levels 
stated theorem 
theorem 
hl jl gl jl proof 
vj vj basis function vj represented jl jl data reduction techniques jl dx dx du hl wj vj basis function wj represented jl jl jl dx dx du gl orthonormal basis functions detailed space wj theorem 
theorem 
wavelet orthonormal basis wavelet orthonormal basis 
theorem function uniquely represented follows 
called wavelet transform function 
multiresolution analysis analysis know function approximated multilevel resolution 
supposed fj approximation level wavelet transform fj jk jk jk fj 
represent fj approximation details level fj fj dj jk djk jk 
wavelet transform function compute djk 
theorem wavelet transform 
theorem 
fj dj hl gl proof 
fj vj get fj fj fj hl jl hl jl hl similarly dj wj get dj dj dj gl jl gl jl gl data reduction techniques interesting observations theorem 
wavelet coefficients coarser level fj dj computed wavelet coefficients finer level 
reflects multiresolution analysis nature wavelet transform 
second computation scaling function wavelet function directly 
need scaling wavelet filters 
basis fast wavelet computation method discuss section 
inverse wavelet transform reconstruct function approximation level approximation detailed information resolution level 
theorem gives reconstruction formula 
theorem 
proof 
vj vj wj hk jk jk gk jk hk gk jk hk hk hk gk similar wavelet transform inverse wavelet transform computation requires scaling wavelet filters scaling wavelet function 
discrete wavelet transform time series seen discretization function 
quick review wavelet transform functions section discuss discrete wavelet transform time series 
give concrete example compute discrete wavelet transform haar wavelets 
haar wavelet transform fastest compute easiest implement wavelet family 
suppose time series length 
wavelet transform perform wavelet transform series average signal pairwise get new lower resolution signal value 
recover original signal averaged values need store detail coefficients pairwise differences 
normalized factor 
decomposing original time series lower resolution version half number entries corresponding set detail coefficients repeat process recursively average get full decomposition 
general haar wavelet decomposition tree shown table 
table shows haar wavelet decomposition tree 
averages highest resolution level details resolution levels dwt time series 
example dwt 
table 
example haar wavelet decomposition resolution averages details resolution see time series length time complexity haar wavelet transform 
discrete wavelet transform wavelet family basic operations similar process continuous wavelet transform theorem theorem 
theory discrete wavelet transform data reduction techniques closely related quadrature mirror filter qmf theory 
get technical details 
reader look excellent book mallat 
just give practical algorithm computing discrete wavelet transform 
continuous wavelet transform function fj vj approximate fj vj vj progressively fj fj dj fj dj dj fj dj dj 
dj similarly suppose time series representation function fj derived fj sampling finite interval 
discrete wavelet transform produce approximate time series detail time series dj dj dj wavelet family defined filters decomposition low pass filter decomposition high pass filter reconstruction low pass filter reconstruction high pass filter 
filters closely related scaling wavelet filters section 
filters seen time series 
discrete wavelet transform inverse discrete wavelet transform performed convolution filters downsampling upsampling 
definition downsampling 
downsampling keep time series data indices 
time series downsampling time series 
definition upsampling 
upsampling just insert data point time series 
time series upsampling time series 
convolution time series decomposition low pass filter yields approximation time series coarser level 
convolution decomposition high pass filter yields details time series dj 
downsampling gives new time series 
downsampling dj gives dj 
process repeated reach resolution level dj dj dj discrete wavelet transform shows procedure discrete wavelet transform 
dj dj dj reconstruct original time series reconstruction filters 
process called inverse discrete wavelet transform 
time series get new time series time series dj get new time series dj 
sum convolution convolution fj means 
dj fj wavelet transform fig 

discrete wavelet transform filters downsampling dj yields approximation level 
process repeated reconstruct shows procedure inverse discrete wavelet transform 
dj fj dj dj fj fj means 
fig 

inverse discrete wavelet transform filters upsampling algorithm called fast wavelet transform algorithm pyramid algorithm 
efficiency wavelet transform superior fast fourier transform 
time series length fourier transform takes times fft takes time log 
general time complexity fast wavelet transform 
popular wavelet families daubechies wavelet family created daubechies 
names daubechies family wavelets written dbn order 
haar wavelet daubechies wavelet order db 
filters haar wavelet follows 
fj data reduction techniques reader verify haar dwt done convolution filters 
order increases length filters increases 
filters popular daubechies db follows 
wavelet basis functions orthonormal think dwt orthogonal transformation 
time series length dwt coefficients dj dj dj write coefficients vector form dwt written follows 
dj dj dj xw 
size transform matrix matrix 
orthonormal matrix 
column orthonormal basis vector rn filters wavelet compute transform matrix considering canonical basic vector size ei 

th element 
ei 
decomposition low pass filter dl decomposition high pass filter dh wavelet transform compute dwt ei ci ci ci ci dw ei 
obviously dwt linear transform dw dw ei ci 
matrix form wavelet transform xm cn 


cn cn 
cn data reduction dwt approximate time series higher higher resolution detail wavelet coefficients time series higher resolution get closer closer zero 
discrete wavelet transform data reduction tool time series keep dwt coefficients coarser approximation level 
time series representation capture trend time series 
fig 
show approximation random walk time series haar wavelet 
time series approximation top reconstructed coarsest level approximation levels details 
top bottom approximations level details 
fig 
show approximation random walk time series db wavelet 
contrast haar wavelet approximation piecewise constant 
approximation smoother 
general db wavelet approximate continuous function time series continuous better haar wavelet 
wavelet family order increase scaling wavelet functions continuous 
approximation higher order wavelet continuous 
demonstrated example 
fig 
show approximation time series wavelet family wavelet 
see fig 
approximation time series haar wavelet results approximation segments sequences equal length segment approximated average value original time series fall segments 
generalized piecewise aggregate approximation paa proposed yi keogh independently 
piecewise aggregate approximation data reduction method divide time series length segments equal length keep average values segment paa coefficients 
trivial reconstruct time series approximation giving paa coefficients 
fig 
padding zeros time series necessary 
data reduction techniques value value value value time time time time original time series approximation db original time series approximation db original time series approximation db original time series approximation db fig 

approximations random walk time series haar wavelet 
top bottom time series approximations resolution level respectively 
value value value value time time time time wavelet transform original time series approximation db original time series approximation db original time series approximation db original time series approximation db fig 

approximations random walk time series db wavelet 
top bottom time series approximations resolution level respectively 
data reduction techniques value value value value time time time time original time series approximation original time series approximation original time series approximation original time series approximation fig 

approximations random walk time series wavelet family 
top bottom time series approximated respectively 
wavelet transform shows basis vectors paa keep segments time series length 
fig 

basis vectors time series size transformation paa fast 
paa easy understand implement 
simple paa flexible approximating distance time series 
yi faloutsos show data reduction arbitrary lp distance approximation 
keogh show paa weighted euclidian distance 
combining results conclude paa weighted lp distance 
shown different families discrete wavelet transform approximate time series 
examples dwt coefficients keep approximate wavelet coefficients highest level detail wavelet coefficients higher levels 
approximation catches trends time series lose detail information time series 
course way dwt approximation 
way discrete wavelet transform approximation keep significant dwt coefficients 
fact provably optimal way retain energy time series specific wavelet transform 
remember wavelet transform orthonormal preserves energy time series 
time series dwt coefficients data reduction techniques en en 
best way retain energy time series dwt coefficients keep significant dwt coefficients coefficients top absolute values 
compares haar wavelet approximations ecg time series coefficients significant coefficients 
see choosing coefficients adaptively significance approximate important details spikes example better 
fig 

approximation ecg time series dwt 
top bottom time series approximated haar coefficients significant coefficients significant coefficients significant coefficients 
course adaptive dwt approximation comes price 
different time series significant coefficients different places indexing time series dynamic dwt coefficients harder thought possible 
singular value decomposition singular value decomposition discrete fourier transform discrete wavelet transform different wavelet families orthogonal transform time series 
choose orthogonal basis vectors nature time series keep coefficients transform approximate original time series 
wonder optimal orthogonal transform best approximating original time series coefficients possible 
answer positive 
singular value decomposition 
existence uniqueness singular value decomposition introduce concept singular value decomposition 
details svd readers refer 
consider collection time series xi time series length xi xi xi xi 
write collection time series matrix form am 



xm xm 
xm xm define aa sm systemic positive semidefinite matrix 
basic theorems linear algebra know systemic matrix exist linearly independent eigenvectors um eigenvalues sui iui 
eigenvectors ui chosen orthonormal 
positive semidefinite eigenvalues non negative choose eigenvalues non decreasing 

rank obviously singular 

define collection vectors vi follows 
vi ui 
properties vi ui hard prove elementary linear algebra 
data reduction techniques lemma 
vi orthonormal 
proof 
ui uj aa uj ju uj ui uj ui orthonormal vi dare orthonormal 
lemma 
ui zero vector size proof 

ui ui ui ui ui ui 
lemma 
vi eigenvector matrix eigenvalue avi ivi 
proof 
lemma 
proof 
avi aa ui sui ia ui ivi ui vi 
avi aa ui sui iui lemmas ready prove theorem states existence singular value decomposition matrix 
theorem existence singular value decomposition 
singular value decomposition proof 
eigenvectors ui orthonormal im ma ui ui im 
ui ui lemma equation called singular value decomposition svd matrix values vectors ui vi left singular vectors right singular vectors decomposition respectively 
singular value decomposition matrix exists matter singular singular value decomposition matrix unique 
course vi ui vi ui interchanged 
vi ui singular vector pair replaced vi ui 
svd matrix unique senses singular values uniquely decided singular values different corresponding singular vector pairs uniquely decided choose sign vector singular vector pair 
proof uniqueness svd omit 
singular value decomposition written matrix form 
data reduction techniques ud 
vt vt vt 
remember matrix ui column vector size vi column vector size matrix matrix vt matrix 
equation shows matrix multiplication visually 
um am optimality singular value decomposition singular value decomposition optimal minimizing matrix norm 
give definition matrix norm known frobenius matrix norm 
definition matrix norm 
matrix norm matrix aij defined ij obviously total energy collection time series xi square norm corresponding matrix singular value decomposition en xi theorem states optimal feature svd 
proof scope book 
theorem optimality singular value decomposition 
pi arbitrary column vector size qi arbitrary column vector size matrix am rank integer matrices form min minimum achieved min 
data reduction svd collection time series xi supposed want find orthonormal basis vectors qi approximate xi follows xi cij xi qj 
best selection orthonormal basis vectors qi energy collection time series preserved possible 
theorem says best approximation preserve energy collection time series svd 
specific choose qi vi observation yields svd data reduction time series 
xi matrix form rank usually close min decrease increase 
energy data reduction techniques collection time series concentrated eigenvalues svd coefficients approximate time series 
uk 
vt vt vt 
summarize data reduction collection time series svd 
write collection time series matrix form perform singular value decomposition mathematical software lapack matlab implemented svd 
vi basis vectors svd coefficients time series svd coefficients time series xj th row time series length want compute svd coefficient express linear combination vi compute follows 
similarly reconstruction approximation time series svd coefficients follows 
orthonormal basis vectors vi svd allows minimize approximation errors collection time series globally 
dft dwt orthonormal basis vectors data independent basis vectors chosen derived data 
contrast svd finds optimal basis vectors time series 
experiment collection random walk time series demonstrates properties svd 
shows random walk time series svd approximations 
time series length 
approximated svd coefficients 
see svd coefficients capture raw shape time series 
basis vectors svd shown fig 

see basis vectors similar basis vectors dft exactly trigonometric functions 
demonstrate adaptivity svd add components time series collection 
short burst superimposed time singular value decomposition time series original time series svd approximation time series original time series svd approximation svd approximations svd basis vectors fig 

svd collection random walk time series data reduction techniques time series original time series svd approximation original time series svd approximation time series svd approximations svd basis vectors fig 

svd collection random walk time series bursts sketches series time point 
resulting time series samples shown fig 

compute svd new collection time series show svd approximations 
svd approximations follow new burst closely 
reason basis vectors computed new data incorporate burst adaptively 
fig 
basis svd vectors new collection time series show new burst components clearly 
collection time series svd approximations closest approximations terms euclidean distance comparing orthogonal transform dft dwt 
sketches data reduction techniques discussed far orthogonal transformations 
think time series point high dimensional coordinate space orthogonal transformation just rotation axes coordinate space 
collection time series principle components transformed axes principle components keep axes corresponding principle components reduce dimensionality time series data 
data clear principle components 
consider collection time series white noise example 
clearly orthogonal transformations dft dwt svd 
need new kind data reduction technique random projection 
random projection project high dimensional point corresponding time series lower dimensional space randomly distribution 
choose distribution carefully probabilistic guarantee approximation distance higher dimensional points corresponding distance lower dimensional space 
random project try approximate distance pair time series collection time series getting approximation time series dft dwt svd 
data reduction orthogonal transformations random projection approximate different types distances 
start euclidean distance 
euclidean distance random projection construction sketches time series 
definition sketches 
time series collection vectors ri ri ri data reduction techniques elements ri random variables distribution sketches defined ri inner product ri 
sketches written rn 
xr 
rk 
rk 


rk collection random vectors called sketch pool 
obviously time complexity compute sketch time series nk 
distribution gaussian distribution compute gaussian sketches time series 
important properties sketches stated johnson lindenstrauss lemma gaussian sketches 
lemma 
collection time series length time series log holds probability gaussian sketches words johnson lindenstrauss says collection points dimensional space mapped dimensional sketch space 
euclidean distances pair points transformed sketch space approximate true distance dimensional space probability 
lemma see increase size sketches approximation error smaller 
boost probability success standard randomization methods 
sketch approximation call success 
keep different sketches repeat approximation distance computation times probability median approximation distances precision probability number success larger 
chernoff bound compute log repetition sketches take median distance sketches probability success boosted 
sketches interesting observation size sketches depends number time series consideration approximation bound probability guarantee bound 
depend size time series random projection idea data reduction relatively small collection time series long length 
size sketches large approximation requirement high small 
svd reduce dimensions sketch space 
works especially time series data principal components random projection 
lp distance addition euclidean distance sketches approximation lp distance 
euclidean distance time series distance measures time series provide interesting results 
approximation lp distance concept stable distribution 
stable distribution statistical distribution parameter 
important property stable distribution follows 
definition 
distribution stable real number 
independent identically distributed random variables xn aixi ai aixi distribution ai px drawn 
gaussian distribution cauchy distribution 
indyk shows construct sketches approximate lp distance 
lemma 
collection time series length time series log constant sketches size median holds probability scaling factor 
lemma vector size median median values vector 
turns scaling factor cauchy distribution gaussian distribution 
data reduction techniques possible approximate hamming distance pairs time series stable distribution 
reader refer result 
comparisons data reduction techniques having discussed different data reduction techniques comparison 
help data analyst choose right data reduction technique 
comparison summarized table 
discuss time complexity computing data reduction time series length fast fourier transform computing dft coefficients take min log kn time complexity dwt computation lower 
time complexity svd depends size collection time series consideration 
collection time series svd takes time nm 
svd time series require mn 
time 
slowest data reduction techniques discuss 
time complexity random projection computation nk size sketches 
dft dwt svd orthogonal transforms 
coefficients data reduction reconstruct approximation time series 
comparison random projection orthogonal transform 
reconstruct approximation time series 
terms distance approximation dft dwt svd approximation euclidean distance 
exception 
paa essentially equal discrete haar wavelet transform lp distance computations possible 
discuss basis vectors data reduction technique 
dft basis vectors fixed vectors trigonometric functions 
particular benefit dwt choose vast number wavelet families basis vectors 
svd desirable cases basis vectors data dependent 
vectors computed data achieve optimality reduce approximation error 
imply need store basis vectors addition svd coefficients want reconstruct time series 
basis vectors random projection chosen randomly 
approximate time series coefficients dft dwt svd require existence principle components time series data 
random project assumption data 
white noise 
random project desirable time series data obvious trends 
comparisons data reduction techniques particular drawback dft data reduction method basis vectors dft compact support 
hard dft approximate time series having short term bursts jumps 
dwt basis vectors compact support 
dwt approximate time series jumps need choose subset coefficients necessarily dwt coefficients 
svd deals problem discontinuity time series data gracefully 
short term detail information reflected time series consideration svd construct basis vectors reflected majority time series data 
table 
comparison data reduction techniques data reduction random technique dft dwt svd projection time complexity log nm 
nk orthogonal transform approximation time series lp distance basis fixed fixed adaptive vectors choice choices optimal random require existence principle components compact support relevant indexing methods index data organization structure allows fast retrieval data 
analyze massive time series need find time series having certain property example time series having average close particular value time series having certain shape 
results query usually return small portion data 
index time query time series database time series data retrieved test required property 
extremely inefficient terms cpu cost io cost 
indexes essential large scale high performance discovery time series data 
chapter start simple frequently index structure tree sec 

tree dimensional index structure 
due high dimensional characteristic time series data multidimensional index structures time series 
start simpler multidimensional index structure kd tree sec 
discuss advanced structure tree sec 

sec 
discuss simple effective multidimensional index structure grid file 
tree suppose want look name phone book 
names phone book ordered alphabetically 
go phone book page book 
binary search phone book jumping back forth find page contain name 
similarly computer science binary search tree index structure dimensional data 
example collection time series computed average time series 
binary search tree index averages 
shows example binary search tree 
associated number node tree pointer time series retrieve time series binary search tree 
want find time series average indexing methods fig 

example binary search tree compared number root 
smaller go left subtree root 
compared right subtree chosen 
reach take right subtree get leaf node 
query point query ask data key equal specific value 
binary search tree answer range queries 
range query translated point queries 
example find time series averages point query binary search tree get path root node 
similarly find path root node containing number 
region binary search tree paths contain data key range 
binary search tree example balanced sense leaf node distance root 
indexed items binary search tree balanced depth tree log search point query range query takes time log binary search tree 
binary search tree optimized secondary memory access 
amount data huge binary search tree fit main memory 
access disk costs access main memory 
io cost 
data organized way random access secondary memory small possible 
tree extend binary search tree better io performance 
tree balanced tree 
leaves distance root node 
io cost tree depends depth tree reach leaves tree get data levels main memory 
shallower tree fewer io access search costs 
tree shallower node tree children 
contrast binary search tree node children typical tree node children 
maximum number children tree node called fanout tree 
depth tree roughly log fanout number data items 
shows example tree 
tree levels fanout 
leaves lowest level represent data entries 
non leaf node contains sequence key pointer pairs 
number pairs bounded fanout 
numbers shown non leaf nodes keys 
pointer associated key nodes 
key ki associated pointer points subtree key values ki ki 
keys km node pointers node pointing subtree keys pm pointing subtree keys larger km 
implementations leaf nodes non leaf nodes level linked linked list facilitate range queries 
fig 

example tree query tree works similar fashion query binary search tree 
supposed wish find nodes search key value starting root node identify key ki root node ki ki 
follow pi node 
follow pointer 
km follow pointer pm 
process repeated recursively get leaf node 
tree dynamic index structure 
insert delete data tree reconstructing tree 
insertions deletions sure 
overflow 
size node exceeds allocated space insertion node split 
split child node require insertion key pointer pair parent node 
insertion propagate upwards 

underflow 
size node half full deletion node underflow 
merge node sibling node case 
results entry parent node 
deletion propagate upwards 
practice underflow allowed 
johnson shasha showed free empty better merge half tree growing average 
indexing methods 
tree remains balanced 
adjust tree insertion deletion sure tree balanced 
important search time log tree balance 
splits merges ensure balance propagated root 
kd tree queries time series data composed multiple keys 
example query find time series start thought query composite key 
facilitate time series queries need indexing methods higher dimensional space 
kd tree extends binary search tree higher dimensions 
consider dimensional case 
build kd tree split data parts roughly size key 
keys consider dimensional composed keys 
call keys coordinates key point xy plane 
fig 

subdivision plane kd tree kd tree kd tree split data coordinates alternately 
example fig points xy plane 
split points line goes points 
yields subdivisions plane including points coordinates equal coordinates line including greater coordinates line step split subdivision horizontally 
left subdivision separated line parts 
line includes points subdivision line includes point 
procedure performed recursively subdivision 
splitting lines cycle vertical horizontal lines go point split region 
fig 

example kd tree subdivision plane fig kd tree structure built fig 
leaf nodes contain points non leaf nodes contain lines 
non leaf nodes number levels correspond vertical lines non leaf nodes odd number levels correspond horizontal lines 
algorithm construct kd tree search point kx ky kd tree start root 
compare kx line level decide go left right subtree 
odd levels ky compared key node 
similarly levels kx compared key node 
repeated leaf node reached 
see higher dimensional data similar approach described effective indexing searching high dimensional point 
fact term kd tree originally stands dimensional tree 
just tree secondary storage version binary search tree kd tree secondary storage extension kd tree 
kd tree allows multiple child nodes non leaf node reduce depth tree guarantees balance 
omit detail 
indexing methods algorithm set points current depth return node kd tree root subtree containing return leaf contains point create node split vertical line point having median coordinate 
points coordinates equal coordinate line points coordinates greater coordinate line node store coordinate split horizontal line point median coordinate 
points coordinates greater coordinate line points coordinates equal coordinate line node stores coordinate endif left pointer right pointer return endif fig 

algorithm construct kd tree index structure higher dimensional data quadtree 
quadtree dimensions splits plane different fashion kd tree 
level quadtree split plane coordinates midpoint simultaneously 
results rectangle regions exactly size 
example subdivision plane show fig 

similarly quadtree dimensional space split space hyper boxes equal size 
tree tree extends popular tree higher dimensions 
implemented efficient indexing structure higher dimensional data including points regions 
similarly tree tree height balanced tree indexed data leaf nodes 
trees non leaf node corresponds interval 
extending higher dimensions non leaf node tree corresponds bounding box higher dimensional intervals called minimum quality implementation critical 
fig 

subdivision plane quadtree fig 

example quadtree tree indexing methods bounding boxes mbb indexed space 
mbb basic object tree 
tree interval associated node includes intervals child nodes tree bounding box associated node includes bounding boxes child nodes 
tree interval associated node overlap intervals associated sibling nodes 
number nodes accessed search tree depth tree 
tree bounding boxes associated node overlap bounding boxes associated sibling nodes 
search path tree forks 
fig 

example bounding boxes tree fig 
show example set rectangles bounding boxes 
show dimensional case simplicity extension higher dimensions straightforward 
corresponding organization tree shown fig 

grid structure search rectangles contain query point follow child nodes bounding boxes containing query point 
similarly search rectangles intersect query rectangle follow child nodes bounding boxes intersect query rectangle 
search tree slowed follow multiple search paths 
fig 

tree structure insert object tree compute mbb object mbb 
insertions requires traversal single path 
candidate child nodes tree heuristic algorithm choose best child node 
usually criterion bounding box chosen child node needs increased 
bounding box nodes compact minimize overlapping area sibling nodes bounding boxes 
node full node splitting possible upward cascading node splitting performed 
tree adjusted remain balanced 
fact variants tree differ insertion algorithm 
variants include tree tree 
deletion data tree similar tree 
search deleted item leaf node delete 
deletion item bounding box leaf node smaller update size bounding box 
propagated upwards 
may check size node reduced minimum node size 
merge node sibling nodes update bounding box 
propagated upwards necessary 
grid structure tree discussed variants popular higherdimensional indexing methods 
implementation tree highly non trivial substantial costs maintaining tree dynamically 
section give quick review extreme simple indexing structure indexing higher dimensional data grid structure 
power grid structure comes fact simple indexing methods easy maintain 
gives grid structure applications response time critical 
fig 

example main memory grid structure start main memory grid structure 
superimpose dimensional orthogonal regular grid indexed space 
practice indexed space bounded 
lost generality assume dimension contained 
spacing grid shows dimensional grid structure 
partitioned indexing space dimensional cube diameter small cells 
cell ddimensional cube diameter cells stored dimensional array main memory 
main memory grid structure compute cell point belongs 
cd denote cell th dimension th second dimension point coordinates xd cell xd 
say point hashed cell 
help grid structure find point neighbors fast 
query point compute cell hashed 
grid structure data query point retrieved 
data points close hashed cells near retrieved efficiently 
insertion deletion grid structure entails maintenance cost 
insert point just compute cell hashed append data cell 
delete point just compute cell delete data cell 
course grid structure necessary regular 
partition indexed space non regular dimension adapt data reduce number cells grid structure 
grid structure suited point queries 
query update grid structure faster high dimensional index structures 
space requirement grid structures high 
cells dimensional space 
grid structure effective indexing lower dimensional spaces reasonably uniform 
grid file second memory index structure grid structure 
goal grid file guarantee access data require io operations 
fig 

example grid file structure indexing methods shows example grid file 
grid file partition indexed space unequal different dimensions 
grid kept main memory 
cell grid associated grid block 
shown pointer 
grid cell associated grid block grid cells associate grid block 
grid block grid cells long union grid cells high dimensional box 
data points grid block 
example 
constraint number points grid block guarantee grid block fit page secondary memory 
access data point high dimension locate cell query point hashed grid structure 
grid cell main memory perform disk access retrieve grid block contains cell 
loaded cell access page contains data associated query point 
point query grid file requires io accesses 
insertion deletion grid file complicated 
point inserted find grid cell hashes grid block contains cell 
grid block exceed capacity grid block split 
grid file requires grid block high dimensional box split grid block local operation 
grid blocks intersected splitting line plane updated 
omit details 
transformations time series ways analyze time series data 
various sophisticated mathematical methods time series analysis look time series provide insight choosing right tools time series analysis 
plotting samples time series data consideration step investigating time series 
shape time series thing people observe time series plot 
natural people relate different time series similarity shapes 
applications similarity search time series data 
fact thoroughly studied subjects time series data mining 
applications 

finance trader interested finding stocks price movements follow pattern particular stock trading day 

music wants decide new musical score similar copyrighted score detect existence plagiarism 

business management spotting products similar selling patterns result efficient product management 

environment science comparing level different sections river scientists better understanding environmental changes 
humans telling similarity time series just looking plots 
knowledge encoded computer want automate detection similarity time series 
formally pair time series similarity usually measured correlation distance 
treat time series high dimensional point euclidean distance appears natural choice distance time series 
euclidean distance widely basic similarity measure time series 
transformations time series euclidean distance measure adequate flexible similarity measure time series 
reasons follows 

time series similar different base lines amplitude scales 
example price movements stocks follow pattern large euclidean distance moving different baseline prices 

euclidean distance time series different lengths undefined time series similar 
musical pieces sound similar played slightly different tempos means time series representations different lengths 
scientific observations time series generated event different length frequencies observation sampling rates different 

time series similar perfectly synchronized 
euclidean distance sums difference pair corresponding data items time series rigid amplify difference time series 
euclidean distance rigid manipulation time series necessary yield flexible similarity measure 
chapter discuss transforms time series 
time series transformed intuitive similarity measures time series 
note transforms discuss entail manipulation time series approximation time series data reduction methods discrete fourier transform discrete wavelet transform 
discuss transform time series discuss general framework indexing time series databases euclidean distance euclidean distance basis time series similarity measure 
framework data reduction techniques discussed chap 
indexing methods chap 

discuss allow time series compared different amplitude baselines scales sec 

section discusses compensate different sampling rates 
discuss transform take consideration local deviance synchronization time series sec 

gemini framework similarity search time series databases problem query time series find time series database similar query 
different similarity measures section focus euclidean distance measure 
extended similarity measures sections 
gemini framework categories similarity queries time series databases 

sequence matching sequence matching time series database length query time series length 
euclidean distance query time series time series database computed linear time 
query threshold answer sequence similarity query time series database euclidean distance threshold 

subsequence matching subsequence matching time series database different lengths 
lengths candidate time series usually larger length query time series 
answer subsequence query subsequence candidate time series distance 
naive way tackle problem similarity query time series databases linear scan 
linear scan compute euclidean distance query time series candidate time series subsequences candidate time series subsequence matching database 
time series distance reported 
linear scan scales poorly computing time increases linearly size database 
time series length seen point dimensional space index time series dimensional index structure 
similarity search query time series just range query query point dimensional space 
unfortunately indexing method impractical 
multidimensional index methods suffer curse dimensionality 
dimensionality index structure increase performance index structures deteriorates 
example tree index space dimensionality 
seminal agrawal faloutsos swami investigate problem index time series database sequence matching 
achieve similarity search time series high performance introduce gemini framework 
extended subsequence matching follow research 
similarity search gemini framework dimensionality reduction 
difficulty indexing time series comes high dimensionality data 
indexing time series gemini framework data reduction techniques reduce dimensionality time series 
results concise representation time series lower dimension known feature space 
formally time series dimensionality reduction transform reduce lower dimension called feature vector signature time series mapped lower transformations time series dimensional space indexed multidimensional index structure tree grid file 
feature vector approximation original time series query indexed feature space get approximate answers 
kinds approximation errors similarity query 

false negative approximate query answers include time series database qualified answers 

false positive approximate query answers include time series database qualified answers 
false negatives affect correctness false positives affect time 
correctness important time applications 
prove important lemma time series data mining 
says dimensionality reduction transform special property guarantee false negatives approximate query answer 
lemma lower bound 
guarantee false negatives similarity queries lower bounding distance time series dimensionality reduction lower bound original distance 
proof 
suppose query range 
query time series qualifying time series database 
feature vector respectively 
guarantee false negatives qualifying time series retrieved index structure feature space 
word know 

false negatives result 
popular dimensionality reduction transformations including fourier transform wavelet transform singular value decomposition piecewise aggregate approximation lower bounding euclidean distance 
random projection approximate euclidean distance probabilistic guaranteed bound 
random projection probabilistically lower bounds euclidean distance probabilistic guaranteed bound 
stage similarity query retrieve similar time series indexed feature space 
false positives answer set 
false positives pruned away examining result set returned stage 
post processing stage retrieve shifting scaling original time series feature vectors compute true distance query time series candidate time series eliminating false positives 
post processing stage perform linear scan time series returned stage 
fast practice computation stage prunes lots time series feature vectors 
subsequence queries impose sliding windows fixed length long time series database 
subsequence mapped feature vector point feature space 
long time series mapped trail points feature space 
trails divided sub trails proximity 
minimum bound rectangles sub trails feather space indexed trees 
answers subsequence query included sub trails mbrs overlapping query rectangle 
details readers refer 
shifting scaling mentioned euclidean distance yield intuitive similarity measure time series 
especially case time series different baselines scales 
example fig 
show stock price movements ibm mmm year 
time series plots see price movements ibm similar mmm 
euclidean distance time series ibm higher ibm mmm 
euclidean distance give intuitive measure similarity 
example see similarity measure allow shifting scaling transforms time series measure euclidean distance 
define shifting scaling transforms 
shifting transform time series get new time series adding real number item old time series 
definition shifting 
shifting time series scaling transform time series get new time series multiplying real number item old time series 
definition scaling 
scaling time series bx bx bx bx simple way similarity measure invariant shifting scaling normalize time series 
transformations time series ibm mmm fig 

stock price time series ibm mmm year definition normal form :10.1.1.45.9798
normal form time series transformed shifting time series mean scaling standard deviation 
avg std obvious normal form time series properties 
lemma 
normal form time series avg std euclidean distance normal forms time series similarity measure time series invariant shifting scaling baseline scale 
example fig 
shows shifting scaling time series stock fig 
normalized 
see euclidean distance normal forms series ibm smaller ibm mmm 
norm normal form time series length euclidean distance normal forms time series ranges 
ibm mmm fig 

normalized stock price time series ibm mmm year known pearson correlation coefficient similarity measure invariant shifting scaling 
review definition pearson correlation coefficient 
definition pearson correlation coefficient 
pearson correlation coefficient time series defined follows 
corr avg xy avg avg std std pearson correlation coefficient ranges 
surprising pearson correlation coefficient closely related euclidean distance normal forms 
transformations time series lemma 
corr proof 
pearson correlation coefficient written follows 
avg avg corr std std avg avg std std xi yi corr euclidean distance normal forms time series linearly proportional correlation 
small normalized euclidean distances correspond higher correlation vice versa 
zero normalized euclidean distance corresponds correlation 
normalized euclidean distance corresponds correlation 
normalized euclidean distances larger give negative correlation normalized euclidean distances corresponding perfect anti correlation 
summary index time series similarity measure invariant scaling shifting need index feature vectors normal forms time series 
query sequence compute feature vector normal form search indexes 
time scaling shifting scaling section performed amplitude axis time series 
transforms performed time axis 
intuitively time scaling stretch squeeze time axis sequence uniformly 
known uniform time warping 
time series different lengths compute distance time scaling time series length 
time scaling jan jul feb aug mar sep apr nov daily exchange rates dollar euro jan jul feb aug mar sep apr nov monthly exchange rates dollar euro fig 

dollar euro exchange rate time series different time scales transformations time series example show dollar euro exchange rate time series 
time series fig 
daily exchange rate series series fig 
monthly exchange rate series 
course time series similar record sequence events different sampling rates 
see stretch monthly rate time series factor approximately squeeze daily rate series factor approximately sequences length 
compute euclidean distance 
squeezing stretching time axis formally defined transform respectively definition upsampling :10.1.1.45.9798
upsampling time series nw zi nw 
definition downsampling 
downsampling time series zi 
intuitively upsampling repeats value time series times downsampling retain value consecutive values time series 
upsampling downsampling integer factor works length time series multiple time series 
ratio length time series fraction say 
case upsampling time series larger length 
gives uniform time warping distance time series 
definition uniform time warping distance 
uniform time warping distance time series ut mn mn simplicity notation stretch time axis mn 
clear greatest common divisor gcd time axis stretched common multiple lcm 
note definition slightly different discrete wavelet transform chap 
local dynamic time warping integer lcm larger max replace mn get approximation distance 
lemma possible reduce distance euclidean distance 
proof obvious definition upsampling distance 
lemma 
ut mn uniform time warping compute distance time series different lengths 
normal form time series nw predefined large number 
hard adjust existing dimensionality reduction techniques compute normal form time series 
local dynamic time warping extend gemini framework dynamic time warping 
standard definition dynamic time warping distance follows definition :10.1.1.45.9798:10.1.1.45.9798
dynamic time warping distance time series dt irst irst min dt rest dt rest dt rest rest process computing dtw distance visualized string matching style dynamic program 
construct matrix align time series xn ym cell corresponds alignment element xi yj 
warping path cell corresponds particular alignment element element xn ym pl px max position numbers respectively alignment 
distance warping path distance xp constraints path monotonic px px continuous px px transformations time series number possible warping paths grows exponentially length time series 
distance minimized paths dynamic time warping distance 
computed dynamic programming mn time 
see uniform time warping special case dtw 
constraint imposed warping path diagonal 
constraint imposed rigid relaxed local dynamic time warping 
intuitively humans match time series different lengths follows 
time series globally stretched length 
compared locally point point warping small neighborhood time axis 
step transform emulate traditional dynamic time warping avoiding unintuitive results 
definition local dynamic time warping 
definition 
local dynamic time warping distance time series ldt constraint irst irst min ldt ldt ldt constraint xi yj rest rest rest rest xi yj shows warping path ldt time warping grid 
possible paths constrained shadow beam width diagonal path 
warping width defined constraint known sakoe chiba band 
similar constraints discussed 
shown complexity computing local dynamic time warping distance kn dynamic programming 
note definition dtw 
combining define general dtw distance definition :10.1.1.45.9798
dynamic time warping distance time series distance normal forms 
words distance time series length 
slight abuse notation distinguish dtw remaining book assume distance computed transform performed time series 
local dynamic time warping fig 

example warping path local constraint lower bounding technique indexing scheme local dynamic time warping distance possible lower bound distance locally 
local lower bound tighter global lower bounding dtw produces fewer false positives 
simplify notation review concept envelope time series 
definition 
envelope time series xi env env env 
upper lower envelope respectively env min xi env max xi transformations time series denotes envelope time series 
distance time series envelope defined naturally follows 
definition 
distance time series envelope min zn denote el zi eu value point range 
keogh proved distance time series envelope time series lower bounds true dtw distance 
lemma 
dt index time series gemini framework needs perform dimensionality reduction transform time series envelope 
piecewise aggregate approximation paa 
paa reduction envelopes keogh method follows 
paa reduction envelope li min ui max 
paa envelope just piecewise constant function bounds intersect envelope 
introduce new paa reduction follows 
li ui lj uj method piecewise constant functions piece average upper lower envelope time period 
shows time series bounding envelope paa reduction envelope keogh method 
shows time series bounding paa reduction envelope method 
see clearly bounds tighter straightforward prove case local dynamic time warping original time series upper envelope lower envelope keogh keogh original time series upper envelope lower envelope new new fig 

paa envelope time series keogh method top method bottom 
time series 
show bounds guarantee lowerbound real dtw distance 
prove paa transform provide lower bound dtw discuss general dimensionality reduction transforms envelopes indexing time series dtw distance 
define container property dimensionality reduction transform envelope follows 
definition 
say transformation envelope just transform time series lower bounding guarantee false negatives euclidean distance transform envelopes container invariant guarantee false negatives dtw distance 
transformations time series theorem 
transformation container invariant proof 
container invariant lower bounding dt min min min min min min definition distance time series envelope lemma dt concept container invariant design transform envelope paa dwt svd dft 
dimensionality reduction transforms linear transforms xj 
extend linear transforms time series transforms time series envelopes time guarantee container invariant 
lemma 
transform linear transform xj transform envelope follows dft linear transform real image part dft coefficient linear combination original time series 
sign function local dynamic time warping aij aij aij aij transform container invariant 
proof 
xi xj transform envelope envelope call envelope feature space 
special case envelope equals time series transform envelope transform time series 
paa linear transform proposed paa transform envelopes deduced lemma container invariant 
paa nice property coefficients linear transformation paa dft svd positive 
case upper envelope feature space just paa transform upper envelope lower envelope 
transform dft svd upper envelope feature space transform combination upper lower envelope 
envelopes paa feature space tighter dft svd general 
part ii case study statstream summary 
consider problem monitoring tens thousands time series data streams online fashion making decisions 
addition single stream statistics average standard deviation want find high correlations pairs streams 
stock market trader tool spot arbitrage opportunities 
proposes efficient methods solving problem discrete fourier transforms level time interval hierarchy 
extensive experiments synthetic data real world financial trading data show algorithm beats direct computation approach orders magnitude 
improves previous fourier transform approaches allowing efficient computation time delayed correlation size sliding window time delay 
correlation lends efficient grid data structure 
result algorithm know compute correlations thousands data streams real time 
algorithm incremental fixed response time monitor pairwise correlations streams single pc 
algorithm embarrassingly parallelizable 
applications consist multiple data streams 
example mission operations nasa space shuttle approximately sensors second mission control johnson space center houston 
securities trading united states second quotes trades ticks generated 
unfortunately difficult process data set oriented data management systems object relational time series extensions begun fill gap 
performance sufficiently data stream management systems dsmss logical model exploit characteristics application statstream updates insertions new elements relatively rare corrections older data 
queries moving averages standard deviations correlation treat data sequences sets 
full stream materialized queries treat data data stream 
pass algorithms desirable data vast 
interpretation qualitative sacrificing accuracy speed acceptable 
presents algorithms architecture statstream data stream monitoring system 
system computes variety single multiple stream statistics pass constant time input bounded memory 
show practical application include statistics securities trader interested 
algorithms applicable disciplines sensor data processing medicine 
algorithms synthesis existing techniques ideas 
divide contributions functional algorithmic 
functional contributions 
compute multi stream statistics synchronous correlation vector inner product continuous online fashion 
means statistic holds time statistic reported time constant independent size duration stream 

pair streams pair wise statistic computed incremental fashion requires constant time update 
done discrete fourier transform approximation 

approximation small error natural assumptions 

monitor data streams sliding windows revisiting expiring data streams needed 

net result pentium pc handle streams producing data second delay window minutes 
algorithmic contributions mainly correlation statistics 
distinguish time periods timepoint smallest unit time system collects data second 
basic window consecutive subsequence timepoints system maintains digest incrementally minutes 
sliding window user defined consecutive subsequence basic windows user wants statistics hour 
user ask pairs stocks correlated value hour data queries intermediate time interval call basic window yields advantages 
results user queries need delayed basic window time 
example user told correlations pm pm pm correlations pm pm pm 

maintaining stream digests basic window allows computation correlations windows arbitrary size necessarily multiple basic window size time delayed correlations high accuracy 

short basic window give fast response time fewer time series handled 
second algorithmic contribution grid structure cells stores hash function value stream 
structure high efficiency obtain due fact measuring correlation done time decomposition mentioned 
remainder organized follows 
data consider statistics produce section 
section presents algorithms monitoring high speed time series data streams 
section discusses system statstream 
section presents experimental results 
section puts context related 
data queries time series data streams consider data entering time ordered series triples timepoint value 
stream consists triples having 
finance may stock example 
streams synchronized 
stream new value available periodic time interval second 
call interval index timepoint 
example periodic time interval second current timepoint streams second streams new value timepoint 
note stream value timepoint value assigned timepoint interpolation 
values timepoint summary value assigned timepoint 
si denote value stream timepoint denotes subsequence stream timepoints inclusive 
denotes stream denote latest timepoint 
statistics monitor denoted stat si sik interval window interest 
discuss meaning windows section 
statstream temporal spans spirit generalize kinds temporal spans statistics time series calculated 

landmark windows temporal span statistics computed values specific timepoint called landmark 
stat landmark computed subsequence time series unrestricted window special case 
unrestricted window statistics available data 

sliding windows financial applications sliding window model appropriate data streams 
length sliding window current timepoint stat sliding computed subsequence 

damped window model model sliding windows important previous ones 
example computation moving average sliding window model compute average si avg contrast damped window model weights data decrease exponentially past 
example moving average damped window model computed follows st statistics damped window model defined similarly 
focus sliding window model general 
statistics monitor consider stream si statistics monitor 
single stream statistics average standard deviation best fit slope 
straightforward 

correlation coefficients corr si ri 
autocorrelation correlation series earlier time 

beta sensitivity values stream values stream weighted collection streams 
example financial applications beta measures risk stock 
stock beta market index experiences percent movement price market 
beta ri statistics sliding windows statistics sliding windows compute statistics sliding window maintain synopsis data structure stream compute statistics rapidly 
start framework subdivides sliding windows equally shorter windows call basic windows order facilitate efficient elimination old data incorporation new data 
keep digests basic windows sliding windows 
example running sum time series values basic window running sum entire sliding window belong kinds digests respectively 
shows relation sliding windows basic windows 
sliding window 
basic window basic window new basic window digests digests digests fig 

sliding windows basic windows data sliding window 
suppose kb length basic window number basic windows sliding window 
denote sequence basic windows ib 
new basic window expiring basic window 
th value basic window 
table defines symbols rest 
table 
symbols size sliding window size basic window number basic windows sliding window number dft coefficients digests number data streams ns size basic window important possible report statistics basic window user basic window completes point necessary computing statistics window 
statstream single stream statistics single stream statistics moving average moving standard deviation computationally inexpensive 
section discuss moving averages just demonstrate concept maintaining digest information basic windows 
obviously information maintained moving average 
basic window maintain digest 
new data points stream available compute sum new basic window 
sum sliding window updated follows old 
correlation statistics new correlation statistics important applications 
example pairs trading known correlation trading strategy widely employed major wall street firms 
strategy focuses trading pairs correlated 
correlation streams stocks affected factors known priori 
pair streams correlated time 
effort find correlations order enjoy arbitrage profits 
applications imply ability spot correlations large number streams real time provide competitive advantages 
task challenging correlations change time update moving correlations frequently 
efficient identification highly correlated streams potentially requires computation pairwise correlations proportional total number timepoints sliding window times pairs streams 
computation efficient discrete fourier transform basic windows compute correlation stream pairs approximately grid data structure avoid approximate computation pairs 
start quick review dft 
explain compute vector inner product series aligned basic windows 
approach extended general case basic windows aligned 
show approach reporting highly correlated stream pairs online fashion 
review discrete fourier transform follow convention 
discrete fourier transform time sequence xw sequence xw df complex numbers xf xie statistics sliding windows 
inverse fourier transform xi xf properties dft textbook dft 
dft preserves euclidean distance sequence symmetry property real sequence complex conjugate real time series dft coefficients contain energy expect coefficients capture raw shape time series 
example energy spectrum random walk series models stock movements declines power increasing coefficients 
black noise successfully models series water level river varies time energy spectrum declines faster increasing number coefficients 
inner product aligned windows correlation beta computed vector inner product 
vector inner product series xw yw denoted just sum products corresponding elements series series aligned explain compute inner product basic windows xb yb 
family continuous functions 
approximate time series basic window xb yb function family 
give specific examples 
xi yi statstream coefficients approximate time series function family inner product basic windows pfp mc fm fp mc pw fm fp precomputed 
function family orthogonal mc mv curve fitting technique reduce space time required compute inner products noted data compression curve fitting approach fill missing data 
works naturally computing correlations streams missing data timepoints 
sine cosine function families right properties 
perform discrete fourier transforms time series basic windows enabling constant time computation coefficients basic window 
observations obtain approximation series dft coefficients xi xf inner product unaligned windows harder problem compute correlations time lags 
time series necessarily aligned basic windows 
digests keep compute correlations 
statistics sliding windows loss generality show computation lagged inner product streams time lags size basic window 
series sy basic windows sy sy values sy values sy included 

xb yb inner product values values approximated dft coefficients 
pfp mc fm fp mc pw implies precompute table fm fp compute inner product dft coefficients requiring alignment basic windows time basic window 
precomputation time specific displacement 
theorem 
approximate lagged inner product time series dft coefficients computed time kn series aligned basic windows takes time kn number basic windows 
hard show approach extended compute inner product time series sliding windows size 
corollary 
inner product time series sliding windows size time delay approximated basic window digests data streams 
statstream io performance desirable store summary data analysis 
summary data keep sufficient compute statistics interested need store raw data streams 
summary data stored disk sequentially order basic windows 
ns number streams number dft coefficients real number cost access data streams specific period float cost exact computation float improvement ratio corresponds non dft elements summary data sum sum squares time series basic window 
costs assume sequential disk access 
reasonable assumption time ordered nature data streams 
monitoring correlations data streams curve fitting technique computing inner products correlations sliding windows size time delay streams 
frequent goal discover streams high correlations 
online monitoring synchronized streams fixed size sliding window correlation specific threshold approach dft hash technique report stream pairs quickly 
introduce normalization series sliding windows size xw follows 
xi xi xi lemma suggests correlation coefficient time series reduced euclidean distance normalized series 
statistics sliding windows lemma 
correlation coefficient time series xw yw corr euclidean distance proof 
notice corr xi yi xi yi xi yi xi yi xi yi corr reducing correlation coefficient euclidean distance apply techniques report sequences correlation coefficients higher specific threshold 
lemma 
dft normalized form time series respectively corr dn dn euclidean distance series xn yn 
proof 
dft preserves euclidean distance dft coefficients symmetry property dft xi yi xw yw xi yi corr dn statstream lemma examine correlations stream pairs dn holds 
get superset highly correlated pairs false negatives 
false positives filtered explain 
uses correlation coefficients similarity measure time series 
yi approximation correlation coefficient 
approximations true values stream pairs discarded approximations true correlations threshold 
propose empirical method select level dependent thresholds multi resolution scans sequences guarantee absence false negatives 
extend techniques report stream pairs negative high value correlations 
lemma 
dft normalized form time series corr dn proof 
df df corr xi yi xi yi dn discuss compute dft coefficients incrementally 
dft coefficients normalized sequence computed dft coefficients original sequence 
lemma 
df df xi xi maintain dft coefficients sliding windows incrementally 
lemma 
th dft coefficient series sliding window xw xnew coefficient series xw new old xw extended batch update basic windows 
statistics sliding windows lemma 
th dft coefficient series sliding window xw xnew coefficient series xb xb xw xw xw new mb old xw xi corollary suggests update dft coefficients incrementally keep digests basic windows 
xi dft normalized sequences map original sequences bounded feature space 
lemma 
xw dft normalized sequence xw xi proof 
xi xi xi lemma dft ranges dft feature space cube diameter 
grid structure report near neighbors efficiently 
dimensions dft feature space indexing 
superimpose dimensional orthogonal regular grid dft feature space partition cube diameter cells size shape 
cells cubes diameter 
stream mapped cell normalized dft coefficients 
suppose stream hashed cell 
report streams correlation coefficients threshold streams statstream hashed cells adjacent cell need examined 
similarly streams correlation coefficients threshold hashed cells adjacent cell 
hashing streams cells number stream pairs examined greatly reduced 
compute euclidean distance correlation dft coefficients 
grid structure maintained follows 
loss generality discuss detection positive high value correlations 
kinds correlations user interested 
synchronized correlation interested synchronized correlation grid structure cleared basic window 
basic window data current basic window available digests computed 
suppose stream hashed cell compared stream hashed neighborhood lagged correlation want report lagged correlation including autocorrelation maintenance grid structure little complicated 
tm user defined parameter specifying largest lag interest 
cell grid streams hashed grid timestamp 
timestamp tx associated hash value stream time hashed grid 
timestamp tc cell latest timestamp cell updated 
grid updated basic window time globally cleared 
sc set cells adjacent including gives pseudo code update grid stream hashes cell cells ci sc tx tc tm tc timestamp ci 
clear ci streams ci date 
tx tc tm streams ci date 
stream ci tx ty tm delete examine correlation tx tc stream ci examine correlation tc tx indicate ci just updated fig 

algorithm construct shifted wavelet tree statstream system theorem 
collection time series streams digests streams algorithms find stream pairs correlations synchronized lagged threshold false negatives 
techniques section search high value lagged correlations data streams fast 
time lag multiple size basic window case 
theorem states approximate correlation time lag efficiently 
approximation methods post processing step hashing methods spot promising stream pairs 
parallel implementation framework facilitates parallel implementation straightforward decomposition 
consider network servers monitor ns streams 
assume servers similar computing resources 
monitor streams stages 

compute digests single stream statistics data streams 
ns streams equally divided groups 
server read streams th group compute digests single stream statistics hash values 

report highly correlated stream pairs grid structure 
grid structure geometrically evenly partitioned parts 
server read part set cells sx 
server read set cells including cells adjacent boundary cells sx 
server report stream pairs highly correlated cells sx 
note normalized dft coefficients need communicated servers reducing overhead communication 
statstream system statstream runs high performance interpreted environment called 
system language powerful array computation achieve high speed streaming data environment 
system follows algorithmic ideas parameters correlation threshold stream pairs absolute value correlation coefficients larger specified threshold reported 
higher threshold finer grid structure fewer streams exact correlations computed 
sliding window size time interval statistics reported user 
sliding window size hour reported correlations past hour 
statstream duration threshold users interested pairs correlation coefficients threshold pre defined period 
example trader ask hour correlation stocks minutes parameter provides users option specify minimum duration 
longer duration period highly correlated streams indicates stronger relationship streams shorter indicate accidental correlation 
example longer duration give stock market trader confidence advantage potential opportunities 
longer duration gives better performance update correlations frequently 
range lagged correlations addition synchronized correlations statstream detect high value lagged correlations 
parameter tm section specifies range lagged correlations 
example range minutes basic window minutes system examine cross correlations autocorrelations streams lags minutes 
empirical study empirical studies attempt answer questions 
great time savings dft approximate algorithms compared exact algorithms 
streams handle real time 
approximation error dft basic window estimate correlation 
change basic sliding window sizes 
pruning power grid structure detecting high correlated pairs 
precision 
perform empirical study datasets ghz pentium pc mb main memory 
synthetic data time series streams generated random walk model 
stream si uj uj set uniform random real numbers 
stock exchange data new york stock exchange nyse trade quote taq database provides intraday trade quote data stocks listed nyse amex nasdaq issues 
database grows rate gb month 
historical data empirical study accumulated gb 
data experiment tick data major stocks trading day 
stocks dataset heavily traded nyse 
peak hours trades stock second 
price weighted volume price stock second 
second trading activities particular stock trading price price 
way stock streams updated second corresponding timepoint 
sliding window vary half hour hours timepoints 
practice actual choice sliding windows user 
lengths basic windows half minute minutes depending number streams monitored computing capacity 
speed measurement suppose streams new data second 
user time series stream system asks questions 
streams track online fashion 
online means data come forever compute statistics data fixed delay occurrence 

long delay change correlation time see change 
system compute correlations basic window 
noted computation basic window finish basic window order system considered line 
lag farther farther time 
correlations may computed basic window 
user perceives size basic window maximum delay time change correlation takes place time computed 
net result answers questions related 
increase number streams cost increasing delay reporting correlation 
shows number streams vs minimum size basic window uniprocessor different algorithms 
dft method choose number coefficients 
exact method basic window size time compute correlations ns streams new timepoints bn algorithm finish seconds bn ns dft grid method monitor correlations parts updating digests takes time bns detecting correlation grid takes time finish computations basic window ends dominating statstream number streams delay update seconds fig 

comparison number streams dft exact method handle term ns note grid structure 
computation data digests io efficient exact method raw streams 
equation increase number streams monitored increasing basic window size delay time 
tradeoff response time throughput confirmed 
number streams handled system increases size basic window perceivable change exact algorithm 
wall clock time find correlations dft grid method faster exact method fig 

time divided parts detecting correlation updating digest fig 

experiments processing time dft grid method provide guideline choose size basic window 
specific computing capacity show processing time different basic window sizes numbers streams fig 
fig 

note wall clock time detect correlation change size basic window wall clock time update digest proportional size basic window 
processing time linear size basic window 
processing time shorter basic window time system online decide minimum basic window size 
monitor streams minimum basic window size seconds 
similarly basic window time seconds streams 
exact dft wall clock time seconds wall clock time seconds detecting correlation updating digests precision measurement number streams number streams empirical study fig 

comparisons wall clock time exact approximate correlations dft curve fitting basic window precision computation depends size basic window 
experiments data sets fig 
show errors increase larger basic window size decrease larger sliding window size remain small 
particularly noteworthy dft coefficients basic window 
performed experiments test effectiveness grid structure 
grid structure dft feature space prunes pairs streams 
pruning power number pairs reported grid divided number potential pairs 
system guarantees false negatives reported pairs include pairs false positives 
measure quality dft statstream wall clock time seconds wall clock time seconds ns updating digests detecting correlation basic window size seconds ns updating digests detecting correlation basic window size seconds fig 

comparison wall clock time different basic window sizes system precision ratio number pairs correlations threshold reported statstream number pairs reported statstream 
shows precision pruning power fraction different numbers coefficients values thresholds different datasets 
indicates real dataset threshold indicates synthetic dataset threshold length sliding window hour 
table shows recall traded precision 
user may specify tolerance system report pairs approximate correlation coefficients larger threshold average approximation error average approximation error sliding hours sliding window hours empirical study basic windows minutes basic windows minutes fig 

average approximation errors correlation coefficients different basic sliding window sizes synthetic real datasets table 
precision post processing dataset tolerance precision recall statstream precision fraction number dft coefficients number dft coefficients fig 

precision pruning power different numbers coefficients thresholds datasets related increasing interest data streams 
theoretical literature datar study problem maintaining data stream statistics sliding windows 
focus single stream statistics 
propose online data structure exponential histogram adapted report statistics sliding windows timepoint 
achieve limited memory tradeoff accuracy 
online basic window synopsis structure report precise single stream statistics fall basic window boundaries delay size basic window statistics trade accuracy memory time 
gehrke study problem monitoring statistics multiple data streams 
statistics interested different related 
compute correlated aggregates number streams monitored small 
typical query phone call record streams percentage international phone calls longer average duration domestic phone call 
histograms summary data structures approximate computing correlated aggregates 
data mining community turned attention data streams 
domain specific language hancock designed extract signatures massive transaction streams 
algorithms constructing decision trees clustering data streams proposed 
manku greenwald focused problem approximate quantile computation individual data streams 
complementary data mining research techniques finding correlations inputs similarity clustering algorithms 
yi online data mining evolving time sequences complementary 
approximation algorithm spot correlations large number evolving time sequences quickly 
method muscles applied highly correlated streams linear regression forecasting new values 
time series problems database community focused discovering similarity online sequence indexed database previously obtained sequence information 
traditionally euclidean similarity measure 
original agrawal utilizes dft transform data time domain frequency domain uses multidimensional index structure index dft coefficients 
focus sequence matching 
generalized allow subsequence matching 
rafiei mendelzon improve technique allowing transformations including shifting scaling moving average time series similarity queries 
distances sequences measured euclidean distance plus costs associated transformations 
differs time series finite data sets focus similarity queries sequence database having index 
focuses similarity detection multiple online streams real time 
correlation coefficients distance measure 
correlation measure invariant shifting scaling transformations 
correlation possible construct efficient grid structure bounded dft feature space 
enable give real time results 
allows false negatives method 
techniques discrete wavelet transform dwt singular value decomposition svd piecewise constant approximation pca proposed similarity search 
keogh compares techniques time series similarity queries 
performance techniques varied depending characteristics datasets single transform optimal datasets 
statstream techniques curve fitting alternative ways computing digests sliding window basic window framework 
maintaining multi stream time delayed statistics continuous online fashion significant challenge data management 
solves problem scalable way gives guaranteed response time high accuracy 
discrete fourier transform technique reduces enormous raw data streams manageable synoptic data structure gives performance 
pair streams pair wise statistic computed incremental fashion requires constant time update dft approximation 
sliding basic window framework introduced facilitate efficient management streaming data digests 
reduce correlation coefficient similarity measure euclidean measure grid structure detect correlations thousands high speed data streams real time 
experiments conducted synthetic real data show statstream detects correlations efficiently precisely 
query humming summary 
query humming system allows user find song humming part tune 
musical training needed 
previous query humming systems provided satisfactory results various reasons 
systems low retrieval precision rely melodic contour information hum tune turn relies error prone note segmentation process 
systems yield better precision matching melody directly audio slow extensive dynamic time warping dtw 
approach improves retrieval precision speed compared previous approaches 
treat music time series exploit improve developed techniques time series databases index music fast similarity queries 
improve existing dtw indexes technique introducing concept envelope transforms gives general guideline extending existing dimensionality reduction methods dtw indexes 
net result high scalability 
confirm claims extensive experiments 
tune head days don know heard tune song 
search online search engine google know metadata tune 
music store clerk acts musical search engine interpreting tunes shoppers directing album 
works shoppers hum authors know personal experience 
resource useful hard find 
query humming system just resource 
user hum piece tune microphone connected computer 
computer search database tunes find list melodies similar user query 
user listen result see tune mind 
user won get tune wanted way tune database contain query humming tune computer intelligent tell tunes sound similar 
query humming particular case query content multimedia databases 
queries symbolic database melodies digital music scores general acoustic database mp 
formats linked metadata artist song names known method extract melodies mp 
querying acoustic databases interesting problem focus query humming system 
research query humming multimedia research community uses notion contour information 
melodic contour sequence relative differences pitch successive notes 
shown method listeners determine similarities melodies 
inherent difficulty contour method encounters known algorithm reliably transcribe user humming discrete notes 
discuss point 
matches melody directly audio 
generally gives better query results free error prone note segmentation 
relies dynamic time warping dtw performance poor 
database community investigating similarity query time series databases long time 
show query humming natural application time series database research 
time series database techniques especially dynamic time warping indexes applied build fast robust query humming database system 
related research pre existing query humming systems uses pitch contour match similar melodies 
user humming transcribed sequence discrete notes contour information extracted notes 
contour information represented letters 
example represents note previous 
naturally letters introduced get finer measure contour 
example indicates note slightly higher previous indicates higher 
tunes databases represented contour information 
way piece melody represented string small alphabet 
edit distance measure similarity melodies 
techniques string matching grams speed similarity query 
advantage contours users hum contour correctly hum contour intervals correctly 
suffers serious problems 
related shown contour information distinguish large database melodies 
typical query notes database tracks result tracks returned 
hard segment user humming discrete notes 
reliable algorithms transcribe user humming short time period specific pitch 
algorithm known segment time series pitches discrete notes 
precision query system rests imprecise preprocessing stage 
avoid problem longer query lengths finer measures contour intervals 
requires users especially poor 
second problem fundamental 
solutions proposed literature 

user required clearly hum notes melody syllable ta la da 
input method unnatural users 
tie notes tune hard user articulate correctly 
cumbersome job left intelligent computer programs 

proposes match query directly audio melody slope dynamic time warping match hum query melodies music databases 
results reported methods quite encouraging 
compared note methods direct methods generally higher retrieval precision 
quality improvement comes price 
performance deteriorates extent states biggest criticism clearly brute force approach slow indices searching large music database 
database community researching problems similarity query time series databases years 
techniques developed area shed light query humming problem 
agrawal utilized discrete fourier transform dft transform data time domain frequency domain multidimensional index structure index dft coefficients 
focus sequence matching 
generalized allow subsequence matching 
rafiei mendelzon improved technique allowing transformations including shifting scaling moving average time series similarity queries 
addition dft discrete wavelet transform dwt singular value decomposition svd piecewise aggregate approximation paa adaptive piecewise constant approximation approaches proposed similarity searching :10.1.1.14.3206
allowing dynamic time warping dtw time series similarity searching critical query humming system 
point point distance query humming measure time series fail due variations duration notes 
berndt clifford introduced concept dtw data mining community 
showed dynamic programming compute dtw distance demonstrated application time series similarity measure 
yi investigate dtw large databases 
proposed techniques speed dtw pipeline fashion 
technique fastmap index time series dtw distance measure 
technique result false negatives 
second global lower bounding technique filtering matches 
keogh proposed technique exact indexing dtw guarantees false negatives 
contributions investigate problem indexing large music databases allows efficient effective query humming 
strategy contributions follows 
treat melodies music databases user humming input time series 
approach allows integrate database indexing techniques query humming system improving quality system traditional contour string databases approach 
design indexing scheme invariant shifting time scaling local time warping 
system robust allows flexible user humming input attaining high speeds 
improve state art indexing technique time series databases allowing dynamic time warping due giving better lower bound distance dynamic time warping 
yields false negatives shows improvements speed times practice 
formulate general method dimensionality reduction transforms time series envelopes 
existing dimensionality reduction transforms discrete fourier transform dft discrete wavelet transform dwt extended index time series allowing dynamic time warping avoiding false negatives 
applications video processing spirit 
net effect approach scalable large music databases demonstrate 
architecture query humming system typical query humming system includes components user humming input hum query database music architecture query humming system index database efficient retrieval hum query section discuss components detail focus indexing techniques 
user humming input hum query user query melody pc microphone single channel mono 
acoustic input segmented frames ms frame resolved pitch pitch tracking algorithm 
results time series pitches 
shows example pitch time series 
tune phrases beatles song hey jude 
user may hum way prefers 
example see hard human mark borders notes 
case computer 
mentioned aware algorithm product automatically segment notes high accuracy 
system avoids note segmentation 
fig 

example pitch time series 
tune phrases beatles song hey jude amateur 
database music music database collection melodies 
melody sequence tuples note duration 
monotone melody note playing moment 
sequence tuples nk dk represents melody starting note lasts time followed note lasts time notice query humming include information rests melody amateur notoriously bad timing rests 
fact simply ignore silent information user input humming candidate melodies database 
sequence tuples thought time series format shows melody phrases beatles hey jude time series representation 
users expected hum melody 
system recognize sub melodies methods possible 

subsequence matching techniques subsequence queries proposed time series database research subsequence queries generally slower sequence queries size potential candidate sequences larger 

sequence matching segment melody pieces musical information people hum melodic sections 
query matched small piece melody database 
research sequence matching 
indexing databases efficient humming query user query humming system singer just euclidean distance time series match input pitch time series candidate time series database 
difficulty query humming comes fact users hum right pitch tempo 
system flexible allow typical inaccuracies 
absolute pitch people get absolute pitch right 
people different genders ages different moods hum melody different pitches 
humming people accuracy relative pitch intervals 
system allows user hum different absolute pitches 
subtract time series average pitches matching 
shift invariant technique time series matching 

tempo song sung different tempos sound quite 
practice melody tempo ranges half double original tempo 
tempo usually consistent tempo changes duration note changes proportionally 
imagine uniform stretching squeezing time axis 
time series database research called time scaling uniform time warping 
architecture query humming system 
relative pitch problem variation relative pitch average singer severe absolute pitch 
rare notes sung bit high low 
suppose timing note perfect distance query humming time series candidate time series measured sum differences sample time moment 
smaller distance similar candidate melody humming 
problem finding similar melody nearest neighbors query 

local timing variation unfortunately realistic require timing humming note perfect 
dynamic time warping matching process allow variations tempo note 
idea stretch squeeze time axis locally minimize point point distance time series 
important contribution efficient indexing scheme local dynamic time warping 
short time series approach transforms time series normal form similarity measure invariant shifting time fig 

sheet music hey jude time series representation query humming scaling 
shows example time series representations humming candidate music tune transformed normal forms absolute pitch tempo 
dynamic time warping distance normal forms time series similarity measure 
fig 

time series representations humming candidate music tune transformed normal forms ready describe strategy time series database query dtw 
range similarity query time series database find time series distances query 
includes step 

time series database compute feature vector 
build dimensional index structure 
time series query compute envelope 

range query index structure return set time series 
filter false positives true dtw distances guarantee false negatives theorem 
similarly nearest neighbors query built top range query 
existing time series databases indexed dft dwt paa svd add dynamic time warping support rebuilding indices 
works framework allows linear transforms adding dtw support requires changes time series query 
experiments experiments experiments divided parts 
run experiments evaluate quality query humming system time series database approach 
comparisons traditional contour method 
test efficiency dtw indexing scheme comparing state art technique 
test scalability system 
quality query humming system collected popular beatles songs manual entry 
songs segmented short melodies 
melody contains notes 
asked people different musical skills hum system 
evaluate quality query humming system compared note contour method 
hum queries better experiment hum queries poor quality hard human recognize target song 
note contour method need transcribe user humming discrete notes 
lack reliable note segmentation algorithm best commercial software find music composer transcribe notes 
applied standard algorithm transcribe user hum query sequence pitches silence information pitches segment notes 
contour method report better result note segmentation processes 
pieces hum queries better searched database find ranks contour approach time series approach 
result shown table 
see time series approach beats contour approach clearly 
claiming contour information music matching bad 
reliable note segmentation algorithm developed approach dubious input 
example query input piano human voice individual note clearly separated expect contour base approach quality 
table 
number melodies correctly retrieved different approaches rank time series approach contour approach query humming tested system hum queries poor quality example authors 
define melody perfectly matched intended target melody rank 
number melodies perfectly matched low 
result quite encouraging 
noticed warping width adjusted tune query results 
hard poor keep right duration note melody 
allowing larger warping widths give flexibility duration notes 
hum queries poor searched database find ranks dtw different warping width 
result reported table 
see queries return top matches warping width increased 
tendency disappears warping width increased sing way tempo 
warping width large melodies different small dtw distance 
warping width local dtw degenerates global dtw 
larger warping widths slow processing 
table 
number melodies correctly retrieved poor different warping widths rank experiments indexing dtw having shown time series approach query humming system superior quality traditional contour approach demonstrate efficient 
performance time series approach suffer extensive dtw 
scalability system comes proposed technique indexing dtw 
compare dtw indexing technique best existing dtw indexing method 
increasing awareness benchmark approach time series database experiments guard implementation bias data bias 
spirit took approach conduct experiments 
avoid data bias conducted experiments wide range time series datasets cover disciplines including finance medicine industry astronomy music 
measured results implementation free fashion avoid bias implementation 
define tightness lower bound dtw distance follows 
experiments fig 

mean value tightness lower bound lb new paa keogh paa different time series data sets 
data sets sunspot power spot shuttle water 
chaotic ocean tide cstr winding dryer ph data power plant standard poor soil temp wool eeg koski eeg buoy sensor burst walk lower bound dt distance reduced dimension rue dt distance range 
larger gives tighter bound 
note definition different 
keogh shown convincingly lower bounding envelope tighter global bounding reported 
envelope uses information global lower bounding 
time series size envelope represented values 
contrast global lower bounding technique seen minimum maximum value time series envelope time series 
global bounding represented values 
test efficiency dimensionality reduction dtw modify definition slightly lower bound reduced dimension 
compared methods lb lower bound envelope dimensionality reduction possibility indexing keogh paa lower bound paa transformation proposed keogh new paa proposed paa lower bound 
chose sequence length warping width 
dimension reduced paa 
selected time series randomly dataset subtracted mean time series 
computed tightness lower bound distances pair time series 
average tightness lower bound dataset methods reported 
see method lb best dataset 
surprise method lb uses information keogh paa new paa 
include sanity check 
lb second filter indexing scheme keogh paa new paa returns superset answer 
number values new paa better keogh paa 
comes fact estimations dtw new paa closer true dtw distance estimations keogh paa 
tightness lower bound query humming new paa approximately times keogh paa average datasets 
fig 

mean value tightness lower bound changes warping widths lb new paa keogh paa svd dft random walk time series data set 
contributions framework allowing dtw indexing different dimensionality reduction methods addition paa 
performance competing dimensionality reduction methods euclidean distance measure data dependent known best cases 
allowing different dimensionality reduction methods extended case dtw distance measure provide users flexibility choosing right method particular application 
tested tightness lower bounds dtw indexing dimensionality reduction methods including paa dft svd 
brevity report results random walk data random walk data studied dataset time series indexing homogeneous 
varied warping widths 
value average experiments 
lb tightest lower bound dimensionality reduction performed 
case warping width dtw distance euclidean distance 
svd optimal dimensionality reduction method euclidean distance lower bound svd tighter dimensionality reduction methods 
performance dft paa euclidean distance measure similar confirms research 
warping widths new paa better keogh paa expect 
new paa beats dft svd warping widths increase 
reason linear transformation coefficients paa positive mentioned 
scalability testing tightness lower bound indicator performance dtw indexing scheme 
tighter lower bound means fewer candidates need retrieved examination particular query 
increase precision retrieval cost recall 
higher precision retrieval implies lower cpu cost io cost time need access fewer pages retrieve candidate time series perform fewer exact dynamic time warping computations 
number candidates retrieved number page accesses free measures cpu io cost 
conducted experiments small music database beatles songs 
shows average number candidates retrieved queries different selectivity 
range queries range length time series thresholds take values 
see warping widths get larger number candidates retrieved increases lower bounds get looser larger warping widths 
approach new paa times better keogh paa 
test scalability system need larger datasets 
database tested music database 
extracted notes melody channel midi files collected internet transformed time series representation 
time series database 
second database contains random walk data time series 
time series length indexed reduced dimensions tree implemented 
result report averaged experiments 
shows performance comparisons music database 
see number page accesses proportional number candidates retrieved methods thresholds 
pentium pc new paa took second smallest warping width seconds largest warping width 
warping width increases number candidates retrieved increases significantly keogh paa method increases new paa 
true time series datasets 
shows performance comparisons random walk database 
similar performance advantages method hold random walk data 
improved scheme indexing time series databases dynamic time warping 
improvement builds dimensionality reduction transform time series envelopes 
give general approach adapting query humming fig 

number candidates retrieved different query thresholds beatles melody database existing time series indexing schemes euclidean distance measure dtw distance measure 
prove indexing scheme guarantees false negatives dimensionality reduction envelope container invariant 
approach paa transform dtw consistently better previous reported paa transform 
extensive experiments showed improvement factor 
time warping indexes show time series database approach query humming gives high precision fast scalable 
implemented query humming system 
preliminary testing system real people ok friends gave performance high satisfaction 
improved singing result 
system fig 

performance comparisons different query thresholds large music database query humming mature 
working expanding melody database adapting system different 
system potential applications entertainment education 
fig 

performance comparisons different query thresholds large random walk database elastic burst detection summary 
burst detection activity finding abnormal aggregates data streams 
aggregates sliding windows data streams 
applications want monitor sliding window sizes simultaneously report windows aggregates significantly different periods 
general data structure detecting interesting aggregates elastic windows near linear time 
applications algorithm detecting gamma ray bursts large scale astrophysical data 
detection periods high volumes trading activities high stock price volatility demonstrated real time trade quote taq data new york stock exchange nyse 
algorithm beats direct computation approach orders magnitude 
consider application motivates research 
astronomical telescope built new mexico group prestigious los alamos national laboratory universities 
telescope array light sensitive detectors covering large pool water size football field 
constantly observe high energy photons universe 
photons observed scientists assert existence gamma ray burst 
scientists hope discover primordial black holes completely new phenomena detection gamma ray bursts 
occurrences gamma ray bursts highly variable timescale minutes days 
burst happens reported immediately 
telescopes point portion sky confirm new astrophysical event 
data rate observation extremely high 
hundreds photons recorded second tiny spot sky 
applications data stream mining monitoring people interested discovering time intervals unusually high numbers events 
example elastic burst detection telecommunication network anomaly indicated number packages lost certain time period exceeds threshold 
finance stocks unusually high trading volumes attract notice traders regulators 
stocks unusually high price fluctuations short time period provide opportunity speculation 
watched closely 
intuitively aggregate function sum count problem interest discover subsequences time series stream subsequences size 
case burst detection aggregate sum 
know duration time interval maintain sum sliding windows known window size sound alarm moving sum threshold 
unfortunately cases predict length burst period 
fact discovering length part problem solved 
example gamma ray burst detection burst photons associated special event milliseconds hours days 
different thresholds associated different durations 
burst events second interesting 
time burst lasts longer lesser density events say events seconds interest 
suppose want detect bursts time series size interested sliding window sizes 
brute force search examine sliding window sizes starting positions 
windows lower bound time complexity 
slow applications 
fortunately interested windows experience bursts possible design nearly linear time algorithm 
burst detection algorithm time complexity approximately proportional size input plus size output number windows bursts 
problem statement categories time series data stream monitoring point monitoring aggregate monitoring 
point monitoring latest data item stream interest 
latest item falls predefined domain alarm sounded 
example stock trader places limited sell order informs stock price stream monitor raise alarm automatically sell stock price stock fall avoid losses 
latest data stream need considered point monitoring implemented effort 
aggregate monitoring challenging 
aggregates time series computed certain time intervals windows 
known window models subjects research projects :10.1.1.14.3206

landmark windows aggregates computed values specific time point called landmark 
example average stock price ibm jan st today landmark window 

sliding windows sliding window model aggregates computed values data stream 
size sliding window predefined 
example running maximum stock price ibm previous days sliding windows 

damped window damped window model weights data decrease exponentially past 
example damping moving average new data item inserted updated follows sliding window model widely data stream monitoring 
motivated gamma ray example generalized elastic window model 
elastic window model user needs specify range sliding window sizes aggregate function alarms domains notified window sizes range aggregates falling corresponding alarm domains 
give formal definition problem monitoring data stream elastic windows 
problem 
time series xn set window sizes wm aggregate function threshold associated window size wj monitoring window aggregates time series find subsequences window sizes aggregate applied subsequences cross window sizes thresholds 
wj wj elastic burst detection threshold estimated historical data model time series 
elastic burst detection special case monitoring data streams elastic windows 
elastic burst detection alarm domain wj 
note possible alarm domain wj 
contributions contributions follows 
introduce concept monitoring data streams elastic windows show important applications model 
design data structure called shifted wavelet tree efficient elastic burst monitoring 
data structure applied general aggregate monitoring burst detection higher dimensions 
apply algorithm real world data including gamma ray data stream nyse real time tick data text data 
method magnitudes faster direct computation means multi day computation done matter minutes 
data structure algorithm section give background wavelet data structure 
section discuss shifted wavelet tree algorithm efficient elastic burst detection offline setting 
extended streaming algorithm section 
algorithm generalized problems data stream monitoring elastic windows section higher dimensions section 
wavelet data structure wavelet analysis wavelet coefficients time series maintained hierarchical structure 
consider simplest wavelet haar wavelet 
simplicity notation suppose size time series power 
affect generality results 
original time series level wavelet tree 
pair wise normalized averages differences adjacent data items level produce wavelet coefficients level 
process repeated averages level get averages differences level average difference top level 
table shows process computing haar wavelet decomposition 
haar wavelet coefficients include average highest level differences level 
wavelet coefficients original time series constructed loss information 
usually wavelet coefficients represent trend level level level level level level data structure algorithm table 
haar wavelet decomposition level level level level fig 

wavelet tree left shifted wavelet tree right time series selected compact representation original time series 
wavelet coefficients viewed aggregates time series different time intervals 
shows time interval hierarchy haar wavelet decomposition 
level consecutive windows size windows level disjoint 
aggregates haar wavelet maintains normalized averages differences 
discussion burst detection aggregate interest sum 
obviously wavelet tree constructed time 
top levels wavelet tree yield concise multi resolution information time series 
gives wavelet lots applications 
purpose burst detection data structure serious problem 
windows level non overlapping window arbitrary start position arbitrary size included window wavelet tree window highest level includes 
example window consisting time points middle contained window wavelet tree largest 
wavelets inconvenient discovery properties arbitrary subsequences 
shifted wavelet tree shifted wavelet tree swt adjacent windows level half overlapping 
see size swt approximately double wavelet tree level additional line windows 
additional windows provide valuable overlapping information time series 
maintained level level level level level level elastic burst detection explicitly implicitly 
keep aggregates traditional wavelet data structure aggregates overlapping windows level computed aggregates level wavelet data structure 
build swt start original time series compute pair wise aggregate sum consecutive data items 
produce aggregates level 
downsampling level produce input higher level swt 
downsampling simply sampling second item series aggregates 
downsampling retain upper consecutive non overlapping windows level 
process repeated reach level single window includes data point 
gives pseudo code build swt 
regular wavelet trees swt constructed time 
return shifted wavelet tree swt 
remember log merge consecutive windows form level shifted wavelet tree size step swt endfor retain non overlapping cover size swt swt endfor endfor fig 

algorithm construct shifted wavelet tree subsequence starting arbitrary positions window swt tightly includes subsequence shows lemma proves 
lemma 
time series length shifted wavelet tree subsequence length included windows level shifted wavelet tree 
proof 
windows level shifted wavelet tree 

subsequence length starting arbitrary position included windows data structure algorithm fig 

examples windows include subsequences shifted wavelet tree 


subsequence length included subsequence length included windows level 
say windows size monitored level swt 
time series non negative numbers aggregate sum monotonically increasing sum time series sliding window size bounded sum including window shifted wavelet tree 
fact filter eliminate subsequences sums far thresholds 
gives pseudo code spotting potential subsequences size sums threshold 
algorithm search burst stages 
potential burst detected level swt corresponds subsequence 

second stage subsequence size 
sum eliminated 
moving sums sliding window size reused burst detection window size detail search burst surviving subsequences performed 
detail search subsequence compute moving sums window size subsequence verify bursts 
spirit original uses lower bound technique fast time series similarity search lemma guarantees correctness algorithm 
lemma 
algorithm guarantee false negatives elastic burst detection time series non negative numbers 
proof 
lemma subsequence length contained window swt 


elastic burst detection time series shifted wavelet tree swt window size threshold return subsequence burst log size swt swt possible burst subsequence 
compute moving sums window size subsequence 
sum 
detailed search 
endif endfor endif endfor fig 

algorithm search burst sum time series non negative numbers monotonic increasing 



eliminating sequences lengths larger sums introduce false negatives 


applications algorithm perform detail search seldom usually burst interest 
example suppose moving sum time series random variable normal distribution 
sum sliding window expectation se assume se se norm 
set threshold burst window size probability observed sums exceed threshold normal cumulative distribution function se 
data structure algorithm algorithm monitors burst windows size real burst result alarm 
possible alarm raised events window call probability false alarm rate pf suppose se se se se norm 
se pf se se se se se se false alarm rate small small primary case interest 
example pf 
model upper bound false alarm rate guaranteed 
time detailed search subsequence size 
total time detailed searches linear number false alarms true alarms output size 
number false alarm depends data setting thresholds approximately proportional output size total time detail searches bounded 
build swt takes time total time complexity algorithm approximately linear total input output size 
streaming algorithm swt data structure previous section support streaming algorithm elastic burst detection 
suppose set window sizes elastic window model 
wm simplicity explanation assume new data available time unit 
swt naive implementation elastic burst detection maintain sums sliding windows 
new data item available sliding window new data item added sum corresponding expiring data item sliding window subtracted sum 
running sums checked monitoring thresholds 
takes time insertion new data 
response time time unit computing resources available 
comparison streaming algorithms swt data structure efficient 
set window size 
elastic burst detection wm need maintained levels swt monitor windows 
methods provide tradeoffs throughput response time 
online algorithm online algorithm response time time unit 
swt data structure data item covered windows level 
new data item available update aggregates windows swt immediately 
associated level minimum threshold 
level minimum threshold min thresholds windows monitored level min wj wj sum windows level exceeds possible sum window sizes monitored level exceeds threshold 
perform detailed search time intervals 
data stream monitor awaits insertions data stream 
online algorithm provides response time time unit insertion data stream requires updates plus possible detailed searching 
batch algorithm batch algorithm lazy updating swt 
remember aggregates level computed aggregates level 
maintain aggregates extra level consecutive windows size aggregates levels computed batch 
aggregate window extra level updated time unit 
aggregate window upper levels swt computed data window available 
aggregate certain upper level updated check alarms time intervals monitored level 
batch algorithm gives higher throughput longer response time guaranteed bound window size online algorithm lemmas state 
lemma 
amortized processing time insertion data stream batch algorithm 
proof 
level swt time unit window data available 
aggregates window computed time aggregates level 
amortized update time level total amortized update time levels including extra level 
lemma 
burst activity window size reported delay log proof 
window size monitored level swt 
aggregates windows level updated time data structure algorithm units 
aggregates windows level updated burst activity window size checked 
response time log aggregates clear addition sum monitoring aggregates elastic window benefit data structure long holds 

aggregate monotonically increasing decreasing respect window window contained window holds 

alarm domain sided threshold monotonic increasing aggregates threshold monotonic decreasing aggregates 
important widely aggregates monotonic max count monotonically increasing min monotonically decreasing 
monotonic aggregate spread 
spread measures volatility surprising level time series 
spread time series spread max min 
spread monotonically increasing 
spread small time interval equal larger time interval 
large spread small time interval interest applications data stream indicates time series experienced large movement 
extension dimensions dimensional shifted wavelet tree time series naturally extended higher dimensions 
section consider problem discovering elastic spatial bursts dimensional shifted wavelet tree 
image scattering dots want find regions image unexpectedly high density 
image sky dots representing stars regions indicate galaxies 
case elastic bursts time series problem report positions spatial sliding windows having different sizes density exceeds predefined threshold 
dimensional shifted wavelet tree dimensional wavelet structure 
basic wavelet structure separates dimensional space hierarchy windows shown 
aggregate information computed recursively windows get compact representation data 
dimensional shifted wavelet tree extend wavelet tree similar fashion dimensional case 
elastic burst detection fig 

wavelet tree left shifted wavelet tree right demonstrated 
level wavelet tree addition group disjoint windows wavelet tree groups disjoint windows 
group windows offsets original group horizontal direction vertical direction third directions 
square spatial sliding window size included window dimensional swt 
size window 
techniques section burst detection swt report high density regions efficiently 
empirical results empirical study demonstrate desirability elastic burst detection applications 
study performance algorithm comparing algorithm brute force searching algorithm section 
effectiveness study emotive example monitor bursts interest countries presidential state union addresses 
show number times countries mentioned speeches 
clearly bursts interest certain countries 
interesting observation bursts different durations varying years decades 
empirical results fig 

bursts number times countries mentioned presidential speech state union rationale elastic burst detection predefined sliding window size data stream aggregate monitoring insufficient applications 
data aggregated different time scales give different pictures see 
show moving sums number events hour worth gamma ray data 
sizes sliding windows seconds respectively 
better visualization show positions bursts 
naturally bursts small time scales extremely high produce bursts larger time scales 
interestingly bursts large time scales necessarily reflected smaller time scales bursts large time scales composed consecutive bumps 
bumps positions numbers events high high bursts 
looking different time scales time elastic burst detection give insight data stream 
show example spatial elastic bursts 
census data population continental united state 
population map aggregated grid latitude longitude 
compute total population sliding spatial windows sizes regions population percentile different scales highlighted 
see different sizes sliding windows give distribution high population regions different scales 
japan russia iraq elastic burst detection number events number events number events sliding window size second time second sliding window size second time second sliding window size seconds time second fig 

bursts gamma ray data different sliding window size empirical results fig 

bursts population distribution data different spatial sliding window size elastic burst detection performance study experiments performed ghz pentium pc mb main memory running windows 
tested algorithm different types data sets gamma ray data set data set includes hours data small region sky gamma ray bursts reported time 
data time series number photons observed events second 
totally events time series length 
nyse taq stock data set data set includes years tick trading activities ibm stock july st july st 
trading records ticks total 
record contains trading time precise second trading price trading volume 
experiments set thresholds different window sizes follows 
hours gamma ray data year stock data training data respectively 
window size compute aggregates training data sliding window size gives time series thresholds set avg std avg std average standard deviation respectively 
factor threshold set 
list window sizes nw time units nw number windows 
nw varies 
time unit seconds gamma ray data minute stock data 
compare wall clock processing time elastic burst detection gamma ray data 
algorithm swt data structure times faster direct algorithm 
advantage data structure obvious examine window sizes 
processing time algorithm output dependent 
confirmed examine relationship processing time algorithm number alarms 
naturally number alarms increases examine window sizes 
observed processing time follows number alarms 
recall processing time swt algorithm includes parts building swt detailed searching potential portions burst 
building swt takes milliseconds data set negligible compared time detailed search 
demonstration purposes intentionally disadvantage set thresholds lower got alarms physicists interested 
alarms scarce case gamma ray burst detection algorithm faster 
fix number windows change factor threshold 
larger higher thresholds fewer alarms sounded 
algorithm related dependent output sizes higher thresholds faster algorithm runs 
contrast processing time direct algorithm change accordingly 
experiments test elastic burst detection algorithm ibm stock trading volume data 
shows algorithm times faster brute force method 
zoom show processing time different output sizes 
processing time ms processing time vs number windows number windows swt algorithm direct algorithm fig 

processing time elastic burst detection gamma ray data different number windows addition elastic burst detection swt data structure works elastic aggregates monitoring 
experiments search big spreads ibm stock data 
confirms performance advantages algorithm 
note aggregates min max spread known deterministic algorithm update aggregates sliding windows incrementally constant time 
filtering property swt data structure gains avoiding unnecessary detailed searching 
case algorithm times faster direct method reflecting advantage near linear algorithm compared quadratic 
related interest data stream mining monitoring 
excellent survey models issues data stream 
sliding window recognized important model data stream 
sliding window model previous research studies computation different elastic burst detection time ms processing time vs number alarms number windows processing time alarms fig 

processing time elastic burst detection gamma ray data different output sizes processing time ms processing time vs thresholds factor threshold number alarms swt algorithm direct algorithm fig 

processing time elastic burst detection gamma ray data different thresholds aggregates data stream example correlated aggregates count aggregates frequent itemsets clusters correlation 
studies problem learning models time changing streams explicitly applying sliding window model 
aurora project considers systems aspect monitoring data streams 
algorithm issues time series stream statistics monitoring addressed statstream 
extend sliding window model processing time seconds processing time vs number windows related number windows swt algorithm direct algorithm fig 

processing time elastic burst detection stock data different number windows time ms processing time vs number alarms number windows processing time alarms fig 

processing time elastic burst detection stock data different output sizes elastic sliding window model making choice sliding window size automatically 
wavelets heavily context data management data mining including selectivity estimation approximate query processing dimensionality reduction streaming data analysis 
elastic burst detection innovative 
data mining bursty behavior attracted attention 
wang study fast algorithms self similarity model bursty number alarms elastic burst detection processing time ms processing time vs number windows swt algorithm direct algorithm number windows fig 

processing time elastic spread detection stock data different number windows time ms processing time vs number alarms number windows processing time alarms fig 

processing time elastic spread detection stock data different output sizes time series 
models generate realistic time series streams testing data mining algorithm 
kleinberg discusses problem burst detection data streams 
focus modeling extracting structure text streams 
speeches state union example discovery burst structure 
different focus algorithmic issue counting different sliding windows 
number alarms finding surprising patterns time series data 
definition surprise application dependent domain experts choose appropriate application 
jagadish optimal histograms mine time series 
defined points values differ greatly surrounding points 
shahabi wavelet structure tsa tree find trends surprises large time series dataset surprises defined large difference consecutive averages time series 
keogh propose algorithm suffix tree structures find surprising patterns time series database 
try learn model previously observed time series declare surprising patterns small chance occurrence 
comparison advantage definition surprise spread simple intuitive scalable massive streaming data 
introduces concept monitoring data streams elastic window model demonstrates desirability new model 
beauty model sliding window size left system discover data stream monitoring 
propose novel data structure efficient detection elastic bursts aggregates 
experiments real data sets show algorithm faster brute force algorithm orders magnitude 
currently collaborating physicists deploy algorithm online gamma ray burst detection 
monitoring non monotonic aggregates topic 

www kx com 

www mcmaster ca project overview status html 

www nyse com taq 

lapack linear algebra package 

www lanl gov 

agrawal faloutsos swami 
efficient similarity search sequence databases 
lomet editor proceedings th international conference foundations data organization algorithms fodo pages chicago illinois 
springer verlag 

agrawal faloutsos swami 
efficient similarity search sequence databases 
proceedings th international conference foundations data organization algorithms fodo pages 

sound labs 
music composer version www com music composer html 

babcock babu datar motwani widom 
models issues data stream systems 
proceedings acm sigact sigmod sigart symposium principles database systems june madison wisconsin usa pages 
acm 

babu widom 
continuous queries data streams 
sigmod record 

barbara dumouchel faloutsos haas hellerstein ioannidis jagadish johnson ng poosala ross sevcik 
new jersey data reduction report 
data engineering bulletin 

beckmann 
kriegel schneider seeger 
tree efficient robust access method points rectangles 
proceedings acm sigmod international conference management data atlantic city nj may pages 

bentley weide yao 
optimal expected time algorithms closest point problems 
acm transactions mathematical software toms 

berndt clifford 
dynamic time warping find patterns time series 
advances knowledge discovery data mining pages 
aaai mit 

blackburn 
tool content navigation music 
acm multimedia pages 

carney cetintemel cherniack convey lee stonebraker tatbul zdonik 
monitoring streams new class data management applications 
vldb proceedings th international conference large data bases august hong kong china 

chakrabarti garofalakis rastogi shim 
approximate query processing wavelets 
vldb proceedings th international conference large data bases september cairo egypt pages 


chan 
fu 
efficient time series matching wavelets 
proceedings th international conference data engineering sydney australia pages 


chan 
fu 
efficient time series matching wavelets 
proceedings th international conference data engineering sydney australia pages 

cooley tukey 
algorithm machine calculation complex fourier series 
computations april 

cormode datar indyk muthukrishnan 
comparing data streams hamming norms zero 
vldb proceedings th international conference large data bases august hong kong china 

cortes fisher pregibon rogers 
hancock language extracting signatures data streams 
acm sigkdd intl 
conf 
knowledge data mining pages 

cortes fisher pregibon rogers 
hancock language extracting signatures data streams 
acm sigkdd intl 
conf 
knowledge discovery data mining pages 

datar gionis indyk motwani 
maintaining stream statistics sliding windows 
soda page appear 

datar gionis indyk motwani 
maintaining stream statistics sliding windows 
proceedings thirteenth annual acm siam symposium discrete algorithms january san francisco ca usa 
acm siam pages 

daubechies 
lectures wavelets 
siam 

domingos hulten 
mining high speed data streams 
acm sigkdd intl 
conf 
knowledge discovery data mining pages 

faloutsos ranganathan manolopoulos 
fast subsequence matching time series databases 
proc 
acm sigmod international conf 
management data pages 

faloutsos ranganathan manolopoulos 
fast subsequence matching time series databases 
proc 
acm sigmod international conf 
management data pages 

ganti gehrke ramakrishnan 
demon data evolution monitoring 
proceedings th international conference data engineering san diego california 

ganti gehrke ramakrishnan 
demon data evolution monitoring 
proceedings th international conference data engineering san diego california 

gehrke korn srivastava 
computing correlated aggregates continual data streams 
proc 
acm sigmod international conf 
management data 

gehrke korn srivastava 
computing correlated aggregates continual data streams 
proc 
acm sigmod international conf 
management data 

logan chamberlin smith 
query humming musical information retrieval audio database 
acm multimedia pages 

gilbert kotidis muthukrishnan strauss 
surfing wavelets streams pass summaries approximate aggregate queries 
vldb pages 

gilbert kotidis muthukrishnan strauss 
surfing wavelets streams pass summaries approximate aggregate queries 
vldb pages 
morgan kaufmann 

goldin kanellakis 
similarity queries time series data constraint specification implementation 
proceedings st international conference principles practice constraint programming cp 
springer verlag 

goldin kanellakis 
similarity queries time series data constraint specification implementation 
proceedings st international conference principles practice constraint programming cp 


analysis time series structure ssa related techniques 
chapman hall crc 

greenwald khanna 
space efficient online computation quantile summaries 
proc 
acm sigmod international conf 
management data pages 

guha mishra motwani callaghan 
clustering data streams 
annual symposium foundations computer science ieee 

guttman 
trees dynamic index structure spatial searching 
editor sigmod proceedings annual meeting boston massachusetts june pages 
acm press 

hellerstein naughton pfeffer 
generalized search trees database systems 
dayal gray nishio editors proc 
st int 
conf 
large data bases vldb pages 
morgan kaufmann 

hulten spencer domingos 
mining time changing data streams 
proceedings seventh acm sigkdd international conference knowledge discovery data mining pages 
acm press 

indyk 
stable distributions pseudorandom generators embeddings data stream computation 
th symposium foundations computer science 

smith collaboration 
search bursts gamma rays 
proceedings th international cosmic ray conference august hamburg germany 

jagadish koudas muthukrishnan 
mining time series database 
atkinson orlowska valduriez zdonik brodie editors vldb proceedings th international conference large data bases september edinburgh scotland uk pages 
morgan kaufmann 


jang 
lee 
hierarchical filtering method content music retrieval acoustic input 
proceedings ninth acm international conference multimedia pages 
acm press 

johnson shasha 
utilization trees inserts deletes modifies 
proceedings eighth acm sigact sigmod sigart symposium principles database systems march philadelphia pennsylvania pages 
acm press 

johnson lindenstrauss 
extensions mapping hilbert space 
contemp 
math 

keogh chakrabarti pazzani mehrotra 
dimensionality reduction fast similarity search large time series 
databases 
knowledge information systems 

keogh 
ucr time series data mining archive www cs ucr edu eamonn index html riverside ca 
university california computer science engineering department 

keogh lonardi chiu 
finding surprising patterns time series database linear time space 
th acm sigkdd international conference knowledge discovery data mining july 
edmonton alberta canada pages 

keogh smyth 
probabilistic approach fast pattern matching time series databases 
third conference knowledge discovery databases data mining 

keogh smyth 
probabilistic approach fast pattern matching time series databases 
third conference knowledge discovery databases data mining 

keogh 
exact indexing dynamic time warping 
vldb proceedings th international conference large data bases august hong kong china pages 

keogh chakrabarti mehrotra pazzani 
locally adaptive dimensionality reduction indexing large time series databases 
proc 
acm sigmod international conf 
management data 

keogh chakrabarti mehrotra pazzani 
locally adaptive dimensionality reduction indexing large time series databases 
proc 
acm sigmod international conf 
management data 

keogh 
need time series data mining benchmarks survey empirical demonstration 
th acm sigkdd international conference knowledge discovery data mining july 
edmonton alberta canada pages 

kleinberg 
bursty hierarchical structure streams 
th acm sigkdd international conference knowledge discovery data mining july 
edmonton alberta canada pages 

korn jagadish faloutsos 
efficiently supporting ad hoc queries large datasets time sequences 
proceedings acm sigmod international conference management data pages 

korn jagadish faloutsos 
efficiently supporting ad hoc queries large datasets time sequences 
sigmod proceedings acm sigmod international conference management data may tucson arizona usa pages 

korn sidiropoulos faloutsos siegel 
fast nearest neighbor search medical image databases 
vldb proceedings th international conference large data bases september mumbai bombay india pages 

nishihara 
practical query humming system large music database 
acm multimedia pages 


li yu castelli 
hierarchical similarity search algorithm databases long sequences 
icde pages 

mallat 
wavelet tour signal processing 
academic press 

manku rajagopalan lindsay 
random sampling techniques space computation order statistics large datasets 
proc 
acm sigmod international conf 
management data pages 

matias vitter wang 
wavelet histograms selectivity estimation 
haas editors sigmod proceedings acm sigmod international conference management data june seattle washington usa pages 

dannenberg 
melody matching directly audio 
nd annual international symposium music information retrieval bloomington indiana usa 

mcnab smith bainbridge witten 
new zealand digital library melody index 
lib magazine 

oppenheim poggi 
wavelet toolbox user guide 
math works massachusetts 


managing financial time series data object database systems 
vldb proceedings rd international conference large data bases 


moon 
whang 
han 
subsequence matching method time series databases generalized windows 
sigmod madison wisconsin usa june 

nolan 
stable distributions 

park chu yoon hsu 
fast retrieval similar subsequences time warping 
icde pages 

miller 
similarity search time series data wavelets 
icde 

press flannery teukolsky vetterling 
numerical recipes art scientific computing 
cambridge university press 

bidder 
perfect pitch 
american journal medical genetics pages 

rafiei 
similarity queries time series data 
icde pages 

rafiei mendelzon 
similarity queries time series data 
proc 
acm sigmod international conf 
management data pages 

rafiei mendelzon 
similarity queries time series data 
proc 
acm sigmod international conf 
management data pages 

rafiei mendelzon 
efficient retrieval similar time sequences dft 
proc 
fodo conference kobe japan 

schroeder 
fractals chaos power laws minutes infinite paradise 
freeman new york 

seidl 
kriegel 
optimal multi step nearest neighbor search 
haas editors sigmod proceedings acm sigmod international conference management data june seattle washington usa pages 

sellis roussopoulos faloutsos 
tree dynamic index multi dimensional objects 
kent hammersley editors vldb proceedings th international conference large data bases september brighton england pages 
morgan kaufmann 

shahabi tian zhao 
tsa tree wavelet approach improve efficiency multi level surprise trend queries time series data 
th international conference scientific statistical database management ssdbm july berlin germany pages 

mathworks 
matlab 

karjalainen 
computationally efficient multi pitch analysis model 
ieee transactions speech audio processing 

zobel 
manipulation music melody matching 
acm multimedia pages 

zobel 
melodic matching techniques large music databases 
acm multimedia pages 

vitter wang 
approximate computation multidimensional aggregates sparse data wavelets 
sigmod proceedings acm sigmod international conference management data june philadephia pennsylvania usa pages 

walnut 
wavelet analysis 
birkhauser 

wang chan papadimitriou faloutsos 
data mining meets performance evaluation fast algorithms modeling bursty traffic 
icde th international conference data engineering february march san jose california 

weaver 
theory discrete continous fourier analysis 
john wiley sons 


wu agrawal abbadi 
comparison dft dwt similarity search time series databases 
proceedings th international conference information knowledge management 


wu agrawal abbadi 
comparison dft dwt similarity search time series databases 
proceedings th international conference information knowledge management 

yang 
efficient acoustic index music retrieval various degrees similarity 
acm multimedia december french 


yi faloutsos 
fast time sequence indexing arbitrary lp norms 
vldb proceedings th international conference large data bases september cairo egypt pages 
morgan kaufmann 


yi faloutsos 
fast time sequence indexing arbitrary lp norms 
proceedings th international conference large data bases pages 


yi jagadish faloutsos 
efficient retrieval similar time sequences time warping 
icde pages 


yi sidiropoulos johnson jagadish faloutsos 
online data mining evolving time sequences 
proceedings th international conference data engineering pages 

zhu kankanhalli xu 
pitch tracking melody slope matching song retrieval 
advances multimedia information processing pcm second ieee pacific rim conference multimedia china october 

zhu shasha 
statstream statistical monitoring thousands data streams real time 
vldb proceedings th international conference large data bases august hong kong china pages 
index basic window paragraph 
