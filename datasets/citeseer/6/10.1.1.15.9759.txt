simple line algorithms maximum disjoint paths problem petr dept applied mathematics charles university am 
prague czech republic kam ms mff cz christian scheideler dept computer science johns hopkins university charles street baltimore md usa scheideler cs jhu edu march study classical problem finding disjoint paths graphs 
problem studied number authors specific graphs general classes graphs 
specific graphs matching upper lower bounds known competitiveness line algorithms known line algorithms perform general setting 
papers expansion measure performance line line algorithms field 
study class simple deterministic line algorithms called bounded greedy algorithms show achieve competitive ratio asymptotically equal best possible competitive ratio achieved deterministic line algorithm 
parameter called routing number allows precise results expansion 
interestingly upper bound competitive ratio better best approximation ratio known line algorithms 
furthermore introduce refined variant routing number show variant allows construct online algorithms competitive ratio significantly best possible upper bound deterministic line algorithms routing number expansion network known 
show line algorithms transformed efficient algorithms related unsplittable flow problem 
done authors members heinz institute paderborn university 
author supported dfg der second author supported part dfg massive algorithmen anwendungen disjoint paths problem called defined follows 
undirected graph set pairs nodes decide exist edge disjoint paths delta delta delta path connects shown karp np complete problem 
optimization variant problem called maximum disjoint paths problem simply find maximum subset exist edge disjoint paths 
approximation algorithms proposed 
short summary section 
generalization unsplittable flow problem ufp edge capacity request demand task choose subset request send flow single path capacity constraints kept sum demands requests maximized 
mainly concentrate solve maximum disjoint paths problem line setting requests arrive algorithm decide knowing requests input sequence accept 
request accepted path provided disjoint paths established previously 
line variant called call admission routing problem 
aim find algorithms problem small competitive ratio 
competitive ratio deterministic line algorithm defined sup oe opt oe oe taken possible sequences oe requests oe number requests accepted line algorithm opt oe number requests accepted optimal line algorithm 
case randomized line algorithm oe random variable 
define competitive ratio randomized algorithm sup oe opt oe oe rest compare performance line algorithms oblivious adversaries 
adversary see decisions algorithm take account selecting requests 
note upper lower bounds section hold adaptive adversaries 
previous due np completeness lot attention search approximation algorithms problem 
problem hard approximate 
size network parameter known trivial deterministic lower bound omega gamma line shows hope deterministic algorithms reasonable competitive ratio 
bartal fiat leonardi prove effort vain randomized algorithms giving omega gamma ffl lower bound randomized line algorithms general networks ffl gammalog parameters known best known approximation ratios arbitrary graphs maxf diam kleinberg delta ff gamma log srinivasan delta denotes maximal degree graph ff expansion graph number nodes number edges 
result multicommodity flow algorithms common approaches related problems 
frequently approach random walks useful especially expander graphs 
important results specific graphs polylogarithmic approximations mesh graphs 
results relate quality approximation ratio average path length optimal solution 
srinivasan stein different method gave approximation algorithms 
maxf diam approximation applies ufp 
case ufp usually assumed capacities large maximum demand 
denote optimal value ufp instance 
assumption srinivasan describe algorithm approximation ratio minfm special case ufp uniform capacity ufp edges capacity describe algorithm delta ff gamma log approximation ratio 
line studied specific topologies 
line algorithms polylogarithmic competitive ratio node line network trees meshes certain classes planar graphs 
algorithms randomized 
reason lower bounds deterministic algorithms topologies higher 
mentioned line network trivial lower bound omega gamma easily generalized omega gamma diameter tree 
awerbuch mention deterministic omega gamma lower bound theta mesh blum fiat karloff rabani 
kleinberg provides alternative proof 
known deterministic line algorithms polylogarithmic competitive ratios hex graphs strong expansion properties networks 
expanders networks bounded greedy algorithm shown performance 
afore mentioned randomized algorithms suffer drawback expected competitive ratio 
may happen compute poor solution high probability 
leonardi marchetti spaccamela ros en consider problem propose alternative randomized algorithms trees meshes optimal competitive ratios achieve solution high probability 
problem appears easier requests allocate small fraction link capacities 
request requires fraction log link capacities log competitive algorithm general topologies awerbuch azar plotkin 
authors gave matching lower bound setting 
terminology results introduce new parameter called bounded routing number 
denote set permutations ng ng 
consider arbitrary graph nodes 
permutation diameter minimum possible number steps required route packets paths length bounded routing number defined max simply call unbounded routing number 
case risk confusion simply write 
congestion path collection defined maximum number paths share edge dilation path collection defined length longest path measured number edges 
obviously lemma holds 
lemma graph bounded routing number path collection permutation routing problem congestion dilation leighton rao proved lemma 
lemma graph expansion ff maximal degree delta routing number holds theta ff gamma theta deltaff gamma log 
furthermore result known 
lemma ff gamma log graphs size theta ff gamma graphs size theta ff gamma log 
ready state new results 
new results class simple deterministic algorithms called bounded greedy algorithms achieves graph maximum degree delta routing number competitive ratio delta delta 
lemma implies competitive ratio delta delta ff gamma log substantially better best previously known approximation ratio delta delta ff gamma log line algorithms 
general best possible competitive ratio obtained deterministic line algorithm applied graph routing number resp 
expansion ff nodes omega gamma resp 
omega gamma ff gamma log results lemma lemma imply routing number achieves precise bound competitive ratio expansion 
advantage routing number contrast expansion quite easy construct constant factor approximation algorithm routing number graph see 
furthermore randomized line algorithm graph maximum degree delta bounded routing number achieves competitive ratio delta delta delta high probability 
smaller allows achieve competitive ratio significantly best competitive ratio hope achieve deterministic line algorithms ff known 
allow edge paths show competitive ratio delta delta delta achieved deterministic line algorithm 
provide lower bound omega gamma competitive ratio holds deterministic line algorithms 
consequences results line line approximation algorithms ufp similar approximation ratios counterparts 
bounded greedy algorithm bounded greedy algorithm bga works follows 
suitably chosen parameter 
request reject free path length terminal nodes 
accept select path 
prove general lower bounds competitive ratio provide matching upper bound competitive ratio bounded greedy algorithm 
theorem graph size routing number graph size theta routing number theta competitive ratio deterministic line algorithm proof 
obtain graph attach line edges node graph delta delta delta denote nodes line 
consider sequences requests 
sequence just consists second consists followed gamma 
bounded competitive ratio sequence deterministic algorithm accept 
second sequence deterministic algorithm accept optimal algorithm accept requests 
ut expansion lower bound shown 
theorem ff gamma log constant degree graph size expansion theta ff competitive ratio deterministic line algorithm omega gamma ff gamma log 
proof 
holds ff gamma log constant degree graph size expansion ff diameter omega gamma ff gamma log 
graph 
replace edge path length 
obviously resulting graph expansion theta ff diameter omega gamma ff gamma log 
take nodes distance omega gamma ff gamma log apart 
line algorithm deterministic choose fixed path length omega gamma ff gamma log connect nodes 
sequence consisting plus pairs nodes middle path pieces length representing edges path result competitive ratio omega gamma ff gamma log 
ut prove upper bound bounded greedy algorithm 
theorem network maximum degree delta routing number competitive ratio bga parameter delta delta delta proof 
sequence requests exists optimal solution uses paths length competitive ratio bga clearly request corresponding path optimal solution rejected bga intersects edge path accepted bga 
paths optimal solution edge disjoint request accepted routed bga cause rejection requests appear optimal solution intersect route 
guarantee optimal solution consists short paths 
long paths intersect paths bga 
need bound number 
fortunately possible transform optimal solution contains long paths illegal solution consisting short paths intersect paths accepted bga 
denote set paths requests accepted bga set paths optimal solution 
say path witness path share edge obviously request routed optimal solution short path rejected bga witness ae denote set paths longer delta correspond requests accepted bga witness paths witness accepted bga know jo gamma delta delta jbj 
able bound size set transform set short paths pairs endpoints paths intersect paths bga 
specific ensure path path length delta connecting vertices path witness paths altogether witnesses delta delta delta jbj paths complete proof 
shortcut long path gamma ar shortcut long path remains describe transformation path delta delta delta denote nodes delta delta delta gamma nodes 
defined multi set paths edge disjoint node graph appears delta pairs pairs split delta delta partial permutation routing problems cf 

follows lemma exists set paths connecting pairs congestion delta delta dilation set paths 
connecting nodes long path denote path going path 
length delta called shortcut path recall longer delta 
aim choose subset ae path shortcut paths witnesses delta delta delta jbj paths perform random experiment independently long path choose exactly shortcuts uniformly random 
set chosen shortcuts 
fixed shortcut probability chosen witness lg size gives upper bound paths witness recall suffices concentrate paths witness 
witness jfl witness 
furthermore binary random variable chosen delta delta delta obtain delta delta delta delta delta jbj follows exists set delta delta delta jbj witnesses definition path witness set looking paths length delta witness paths witnesses delta delta delta jbj paths jsj delta delta delta jbj 
recalling jo gamma delta delta jbj jo jsj proof completed 
ut worth noting analysis bga need conflicts paths transformed optimal greedy solution distributed evenly network 
important thing total number conflicts 
decreasing maximum path length possible decrease value parameter bga order obtain better bounds competitive ratio 
case bounded routing numbers simply routing numbers theorem holds 
theorem network maximum degree delta bounded routing number competitive ratio bga parameter delta delta delta proof 
construction exactly proof theorem 
paths longer delta optimal solution suitably transformed shorter ones shown average path greedy solution intersects delta delta transformed paths transformed path witness ut main contribution theorem bga algorithm efficient computationally easier search paths length delta length delta graphs easily constructed competitive ratio bga delta substantially better bga delta question upper bound theorem tight bga parameter achieve better competitive ratio 
show theorem certain limits bga line setting 
theorem network size bounded routing number theta log theta network size theta theta bounded routing number theta competitive ratio bga parameter theta theta omega gamma 
proof 
obtain network attach node special network theta nodes diameter theta 
define network start situation theta log network graph consisting complete binary tree leaves connected additional edges way form linear array 
obviously matter tree leaves attached binary array diameter log theta log bounded routing number 
consider bga parameter delta log assume power 
connect leaves linear array way consider linear array laid shown nodes column leaves row 
node column row called nodes row connected complete binary tree 
roots binary trees connected way gamma roots trees rows delta log log gamma rows gamma log gamma log gamma form tree called roots trees connected complete binary tree top single complete binary tree 
suppose set requests gamma 
path connecting requests said cover leaves number leaves nodes visited equal lemma holds 
complete binary tree row construction network linear array binary tree 
lemma path length connects request property covers leaves proof 
consider path length connecting request request 
suppose covers leaves total distance bridge linear array 
edges subtree shortcut linear array edges get allowed length contradiction assumption 
ut lemma implies bga parameter able connect requests 
total number requests arrive competitive ratio 
bga uses parameter construction requests connected 
case know gamma corresponding paths length 
extend requests adding new requests requiring path length overlapping request got path length 
case arrive competitive ratio omega gamma 
replacing tree linear array edge size ffi path length ffi ffi log yields combinations concludes proof theorem 
ut proof theorem prove result 
theorem network size bounded routing number network size theta theta bounded routing number theta competitive ratio deterministic line algorithm applied omega gamma 
proof 
proof construction theta 
minimizes bound theorem 
proof theorem consider set requests gamma 
deterministic line algorithm reject requests connect path length 
case extend requests short requests rejected 
causes cases competitive ratio omega gamma 
follows theorem competitive ratio improved omega gamma 
ut iterative bga 
mentioned algorithms approximation ratio denotes average path length optimal solution instance problem 
consider line modification bga called iterative bga run bga log times starting parameter doubling subsequent run 
solution choose best 
theorem instance denote average path length optimal solution 
approximation ratio iterative bga delta proof 
clearly choices exceeds routing diameter factor worst 
choice guarantees approximation ratio delta delta delta choices exceeds value delta factor worst half paths optimal solution shorter delta approximation factor worst case delta ut unsplittable flow problem bga efficiently solving uniform capacity unsplittable flow problem line setting 
simplicity assume edge integral capacity requests integral 
influence bounds constant 
consider procedure 
sort requests demands starting heaviest 
run bga delta requests order 
theorem uniform capacity network denote routing number delta maximal degree approximation ratio bga run requests ordered demands delta delta ff gamma log unsplittable flow problem 
proof 
usually denote set paths requests accepted bga set paths optimal solution 
notion witness modified 
purpose notion useful 
path denote demand corresponding request 
set paths denotes sum demands paths simplicity talk demand path meaning demand corresponding request 
edge path denote sum demands paths passing demand large demand gjj 
path witness path intersect edge say serves witness edge witness edge gjj 
start simple observation 
lemma path edge witness 
proof 
witness assume contradiction 
easily follows 
witness definition contradiction 
ut ae set paths longer delta correspond requests accepted bga witness bounds gamma jj jj complete proof 
ut lemma gamma jj delta delta proof 
consider partitioning gamma parts 
gamma consist paths corresponding requests accepted bga gamma gamma note witness denote set edges path witness 
jj delta delta delta help lemma fact paths length delta obviously jj concludes proof 
ut lemma jj delta delta delta delta proof 
purpose going modify set flows set short flows 
path delta delta delta denote nodes delta delta delta gamma nodes 
multiset paths satisfy capacity constraints node graph appears delta delta pairs pairs split delta deltac partial permutation routing problems 
follows lemma exists set paths connecting pairs congestion delta delta deltac dilation perform random experiment long path choose uniformly independently random exactly delta shortcuts 
set chosen shortcuts 
binary random variable chosen assume shortcuts carry original demand corresponding long flow 
bga processed requests demands starting heaviest shortcuts witness 
denote set edges path witness 
jj jjp jj suffices give upper bound jjp jj jjp jj 
theta jjp jj delta delta delta delta delta delta delta delta delta delta delta delta facts reasoning path passes edge definition deltad congestion paths delta delta deltac lemma assumption delta paths length delta ut problem ufp line setting acceptance single request small demand may cause rejection request large demand results competitive ratio bounded terms network reason focusing problem instances satisfy additional constraint instance ufp ffl bounded ffl maximum demand gamma ffl 
arrive result line uniform capacity ufp theorem uniform capacity network denote routing number delta maximal degree sequence requests ffl bounded competitive ratio bga ffl gamma delta ffl gamma delta ff gamma log 
proof 
consider modification sum demands paths passing edge accepted bga prior appearance request corresponding input sequence 
bound lemma changes jj ffl delta ut relaxing disjointness constraint section slightly different conditions established paths considered 
insisting edge disjointness congestion allowed line algorithm optimal line solution 
substantially simplify proof performance line algorithm 
section shown relaxation avoided cost introducing randomization decisions 
suppose graph bounded routing number algorithm simple 
may think graph graph copies edge blue red 
request accept exists free path fflr blue edges delta red edges fixed ffl 
stress deterministic algorithm 
theorem suppose network maximum degree delta bounded routing number ffl competitive ratio bga parameters fflr delta fflr delta delta ffl 
proof 
call path witness path share edge matter colors match 
denote set paths accepted bga set paths optimal solution 
ae denote subset paths longer delta fflr correspond requests accepted bga witness jo gamma delta fflr delta jbj 
proof theorem going transform paths paths fulfilling restrictions bga time intersect paths bga 
path delta delta delta fflr denote fflr nodes delta delta delta fflr gamma fflr fflr nodes 
set fflr edge paths node graph appears delta delta requests similar proof theorem exists set paths connecting requests congestion delta delta dilation path chooses uniformly independently random exactly possible shortcuts say 
route shortcuts red edges initial final parts paths blue edges 
may cause paths blue edge 
exactly argument proof theorem possible show expected congestion shortcuts red edges delta ffl 
denote set selected shortcuts 
obviously path witness particular path corresponding edge red edge 
path bga consists delta red edges path witness delta delta delta ffl paths putting bounds jo gamma jo jsj competitive ratio algorithm desired 
ut obviously asymptotically best possible competitive ratio reached fflr deltad ffl 
ffl required simply bga obtain competitive ratio 
obtain result 
corollary suppose network maximum degree delta bounded routing number competitive ratio bga parameters delta delta delta delta delta 
worth noting sizes optimal solutions congestion congestion problems may differ dramatically 
think brick wall delta delta delta am denote border nodes upper side going left right delta delta delta denote border nodes lower side going right left 
set requests size optimal solution congestion congestion algorithm section randomized line algorithm achieves similar competitive ratio deterministic algorithm section 
consists preprocessing phase path selection phase 
preprocessing suppose graph maximum degree delta bounded routing number algorithm selects path computes path system consisting path source destination pair dilation congestion delta delta delta log 
done polynomial time 
delta delta log term significantly smaller delta assume simplification reasons congestion delta algorithm randomly selects connected subset nodes node decides independently random probability fflr belong suitably chosen ffl 
denote size obviously fflr furthermore follows chernoff bounds theta fflr ffl log collection paths contains paths pairs nodes set serve path system define absolute congestion edge regard number paths traversing relative congestion edge absolute congestion divided parameters property 
lemma fixed edge absolute congestion concerning ffl expected case ffl log ffl high probability 
furthermore expected relative congestion ffl 
proof lemma appendix 
call edges congestion due paths heavy edges edges light 
path selection request algorithm accepts free path terminal nodes consisting delta fflr delta edges delta heavy 
paths called legal paths 
idea strategy 
heavy edges usually edges represent bottlenecks path system 
selecting paths requests algorithm avoids bottleneck edges path single path passing bottlenecks cause rejection subsequent requests 
theorem suppose network maximum degree delta bounded routing number ffl competitive ratio algorithm parameters fflr delta delta fflr ffl expected case delta fflr ffl ffl log proof 
denote set paths optimal solution set paths accepted algorithm ae consist illegal paths corresponding requests rejected algorithm witness intersect edge path 
proof idea transform illegal solution size consisting legal paths intersect paths illegal solution mean modified paths mutually edge disjoint 
transformation heavily depends path system connected subset done main steps 
show connect paths nodes nodes second step pair path constructed 
done help main difficulty proof ensure resulting modified paths legal intersect paths step terminal node path subpath path associated 
subpath shorter ffl subpath length fflr starting ffl minimal subpath containing heavy edges starting case called insecure case secure 
path say contains heavy edges fflr edges altogether constructed subpaths node disjoint defined 
show connect secure nodes nodes secure subpath chooses uniformly independently random heavy edges say choice chosen heavy edges chooses uniformly independently random paths path system passing choice 
denote path chosen desired node terminal nodes closer 
clearly combination contains heavy edges fflr edges total 
fs heavy edge fs chosen ps choice heavy chosen edges path qs chosen choice fs paths path system secure subpath ps connection secure node node case insecure nodes part provided node nodes chosen independently random insecure subpaths quite long fflr edges contain node subpath contains node closest terminal node chosen desired node node provided corresponding request able participate step 
jo fflr delta delta ffl care paths connected nodes jbj competitive ratio claimed theorem immediately follow 
denote subset paths nodes provided 
lemma states contains paths proof appendix 
lemma jo fflr delta delta ffl jo jo high probability 
step remains provide connections pairs path system valiant trick random intermediate destinations pair chooses uniformly independently random intermediate destination st choice uses paths path system connect st st 
path denote path st described 
st insecure vertex secure vertex paths illegal path modification illegal path description modification follows modified paths legal 
bounding congestion total number light edges total number heavy edges paths denote set paths pairs secure consider node going bound number pairs appears 
bound number secure nodes chose heavy edge number paths passing terminate ff 
note hu delta terminal node paths paths length edge probability chosen choice edge chosen choice probability chose choice path terminating expected number secure nodes chose bounded hu delta 
concerning insecure nodes delta choose paths edge disjoint 
total expected number respect random choices pairs terminating delta 
consider light edge graph 
want bound congestion paths path adds congestion heavy edge chosen choice edge chose path choice passes 
path adds congestion pair chose node st choice path st st path system passing heavy edge number paths passing ff 
note delta light edge paths length edge probability chosen choice edge chosen choice probability chose choice path going expected congestion paths bounded delta 
light edge path qs chosen choice fs heavy edges chosen choice heavy chosen edges fs fs paths paths system subpath ps congestion paths light edge node number paths terminate go note noticed fixed expected number pairs appears delta 
pairs probability chose intermediate node st choice path st st passing depending xu expected congestion paths bounded delta delta xu delta 
total expected congestion light edge delta 
recall congestion bound lemma 
consider heavy edge graph 
random variable denote number paths traverse arguments expected congestion paths expected congestion paths delta expected number conflicts modified paths paths delta delta delta heavy conclude exist choices conflicts 
lemma know ffl recall relative congestion ffl log theta ffl expected case high probability case ffl log number conflicts modified paths paths delta delta delta delta ffl 
maximal number paths witness summary path denote modification described steps 
goes st denote set modifications 
high probability respect initial random choice jsj jo paths modification lemma 
paths legal requests corresponding rejected algorithm witness expected case jsj delta delta delta delta ffl delta delta ffl delta delta ffl delta jbj delta delta fflr ffl delta jbj 
jsj delta delta fflr ffl delta jbj ffl log algorithm delta delta fflr ffl competitive expected case delta delta fflr ffl competitive ffl log ut choosing best possible ffl arrive result 
corollary suppose network maximum degree delta bounded routing number competitive ratio algorithm parameters delta delta delta delta expected case delta delta log way bga algorithm solve uniform capacity ufp problem 
runs algorithm transform expected competitive ratio approximation ratio holds corollary suppose network maximum degree delta bounded routing number approximation ratio algorithm parameters delta delta run requests ordered demands delta delta unsplittable flow problem 
corollary suppose network maximum degree delta bounded routing number competitive ratio algorithm parameters delta delta ffl bounded input sequence ffl gamma delta delta simple deterministic line algorithm general networks optimal competitive ratio routing number network 
furthermore introduced new parameter called bounded routing number showed help parameter line algorithms constructed competitive ratio significantly best possible upper bound deterministic line protocol routing number graph known 
upper lower bounds case bounded routing numbers tight 
interesting open question best possible competitive ratio reached deterministic randomized line algorithms setting 
furthermore interesting know simple algorithms reach optimal ratio 
aumann rabani 
improved bounds optical routing 
proceedings th annual symposium discrete algorithms pages new york ny usa jan 
acm press 
awerbuch azar plotkin 
throughput competitive line routing 
proceedings th annual symposium foundations computer science pages palo alto california nov 
ieee 
awerbuch bartal fiat ros en 
competitive non preemptive call control 
manuscript 
awerbuch bartal fiat ros en 
competitive non preemptive call control 
proceedings th acm siam symposium discrete algorithms pages 
awerbuch gawlick leighton rabani 
line admission control circuit routing high performance computing communication 
proceedings th annual symposium foundations computer science pages 
bartal fiat leonardi 
lower bounds line graph problems application line circuit optical routing 
proceedings th annual acm symposium theory computing pages philadelphia pennsylvania may 
srinivasan 
approximation algorithms disjoint paths related routing packing problems 
mor mathematics operations research 
borodin el yaniv 
online computation competitive analysis 
cambridge university press 
broder frieze upfal 
existence construction edge disjoint paths expander graphs 
siam journal computing oct 
broder frieze upfal 
static dynamic path selection expander graphs random walk approach extended 
proceedings ninth annual acm symposium theory computing pages may 
broder frieze upfal 
static dynamic path selection expander graphs random walk approach 
rsa random structures algorithms 
frieze 
disjoint paths expander graphs random walks short survey 
random international workshop randomization approximation techniques computer science 
lncs 
garay gopal kutten mansour yung 
efficient line call control algorithms 
proceedings nd israeli symposium theory computing systems pages 
garay gopal kutten mansour yung 
efficient line call control algorithms 
algorithms 
karp 
computational complexity combinatorial problems 
networks 
kleinberg 
approximation algorithms disjoint paths problems 
phd thesis department electrical engineering computer science massachusetts institute technology 
kleinberg rubinfeld 
short paths expander graphs 
proceedings th annual symposium foundations computer science pages 
kleinberg tardos 
disjoint paths densely embedded graphs 
proceedings th annual symposium foundations computer science pages los alamitos oct 
ieee computer society press 
kleinberg tardos 
approximations disjoint paths high diameter planar networks 
journal computer system sciences aug 
stein 
approximating disjoint path problems greedy algorithms packing integer programs 
ipco th integer programming combinatorial optimization conference volume lecture notes computer science pages 

short disjoint paths graphs 
technical report charles university kam series 
submitted journal interconnection networks 
leighton rao 
approximate max flow min cut theorem uniform multicommodity flow problems applications approximation algorithms 
th annual symposium foundations computer science pages white plains new york oct 
ieee 
leighton rao 
multicommodity max flow min cut theorems designing approximation algorithms 
journal acm nov 
leonardi 
line network routing 
amos fiat editor online volume lecture notes computer science pages 
springer 
leonardi marchetti spaccamela ros en 
line randomized call control revisited 
proceedings th annual acm siam symposium discrete algorithms pages san francisco california jan 
srinivasan 
fast randomized algorithms distributed edge coloring 
proceedings annual acm symposium principles distributed computing pages 
peleg upfal 
constructing disjoint paths expander graphs 
combinatorica 
raghavan thompson 
randomized rounding technique provably algorithms algorithmic proofs 
combinatorica 
scheideler 
universal routing strategies interconnection networks 
lecture notes computer science springer verlag 
schmidt siegel srinivasan 
chernoff hoeffding bounds applications limited independence 
siam journal discrete mathematics 
sleator tarjan 
amortized efficiency list update paging rules 
communications acm feb 
srinivasan 
improved approximations edge disjoint paths unsplittable flow related routing problems 
th annual symposium foundations computer science pages oct 
srinivasan 
survey role multicommodity flow randomization network routing 
pardalos editors randomization methods algorithm design volume dimacs series discrete mathematics theoretical computer science pages 
american mathematical society june 

estimate chromatic class graph russian 


proof lemma prove bounds absolute congestion 
congestion delta node chosen independently random probability fflr belong expected congestion fixed edge delta delta fflr fflr delta ffl ffl main problem finding bound congestion holds high probability probabilities paths traversing edge may independent 
assume ffl log suppose moment paths independent probabilities taken 
fflr represent probability sequence ir delta delta delta consider fixed edge denote set paths traversing assume paths numbered jt furthermore path binary random variable path belongs xm mg 
able show situation show large mg close property xm see allows chernoff bounds estimate probability far away expected value 
proposition mg holds min min deltan delta fflr fflr xm proof 
path represented source destination pair 
take subset size gamma gnu distinguish cases 

appear pairs know pr 
exactly appears pr fflr 
appear pr fflr suppose chosen uniformly random probability case min gamma gamma gamma gamma gamma min gamma gamma delta gamma pairs nodes nodes furthermore probability case min gamma delta gamma gamma gamma gamma gamma min delta worst case gamma different nodes gamma paths endpoint running combining probabilities probabilities cases get chosen uniformly random pr min min delta delta fflr fflr xm min min deltan delta fflr fflr ut techniques particular see inequality page follows proposition delta delta ffi pr ffi gamma ffi ffi furthermore theta delta fflr delta fflr theta delta ffl choosing theta log obtain theta ffl ffl log probability bound obtain polynomially small probability ffi constant ffi 
probability bound holds delta just introduce dummy paths get back delta proof bounds absolute congestion completed 
consider relative congestion 
consider fixed edge denote absolute congestion caused paths traversing furthermore represent relative congestion 
holds delta pr delta pr delta delta pr furthermore pr fflr gamma fflr gammam probability fixed path belong equal gamma gamma gamma delta gamma delta gamma gamma delta pr delta delta delta delta fflr gamma fflr gammam delta delta delta gamma gamma delta fflr gamma fflr gammam delta delta fflr gamma gamma fflr gamma gamma fflr gammam ffl completes proof lemma 
proof lemma path binary random variable nodes provided furthermore binary random variable fflr nodes called source part destination part node obviously 
obtain pr pr 
pr holds pr continue bound pr 
nodes decide independently belong probability source part resp 
destination part path contains node equal gamma gamma fflr fflr gamma pr gamma implies gamma jo jo unfortunately independent 
due fact parts paths may overlap 
knowing certain set paths node increase probability path node nodes may known subset paths fqg pr gamma gamma pr gamma random variables gamma self weakening parameter see definition 
implies usual chernoff bounds obtain gamma gamma jo ffi pr ffi gammaffi pr gamma ffi gammaffi pr jo gamma ffi gammaffi jo gamma ffi gamma gamma ffi gamma gamma jo gamma ffi delta jo pr pr get pr gamma ffi delta jo gammaffi network maximum degree delta diameter log delta gamma ffl follows delta delta ffl log jo log log 
probability jo polynomially small proves lemma 

