concurrent games full completeness samson abramsky lfcs division informatics univ edinburgh paul andre de logique cnrs univ paris new concurrent form game semantics introduced 
overcomes problems arisen previous sequential forms game semantics modelling linear logic 
admits elegant robust formalization 
full completeness theorem linear logic proved semantics 
contains main contributions ffl new form game semantics call concurrent games 
ffl proof full completeness semantics multiplicative additive linear logic 
explain significance turn 
concurrent games traditional forms game semantics appeared logic computer science sequential format play game formalized sequence moves 
key feature sequential format existence global schedule polarization finite position exactly player turn move sequential format turns important consequences wish game semantics model programs proofs ffl modelling limitation 
sequential games model sequential computation yield models parallel computation natural way 
ffl mathematical limitation 
despite evident inherent duality games interchange roles players sequentiality obstacle modelling logics classical format research supported epsrc foundational structures 
games considered relevant literature date person games 
classical linear logic 
fact sequential games yielded satisfactory models fragments linear logic multiplicative fragment aj multiplicative exponential fragment negative fragment 
sufficient model calculus programming languages inadequate general account 
illustrate problem respect andreas blass pioneering game semantics 
solve problems making radical departure formal versions games extensive form date logic computer science aware 
shall introduce true concurrency version games global polarization abandoned 
local decisions polarized sense player globally players act distributed asynchronous fashion 
time may active different parts game board 
concurrent games strict generalization usual sequential games 
remarkably generalization apparent complication formalized simple robust way arguably elegant mathematically tractable current formalizations sequential games 
fact key ideas formalization abramsky jagadeesan new foundations geometry interaction aj 
missing game theoretic interpretation mathematics turn suggests intuitive presentation closure operators 
basic formalization combined suitable form classical linear realizability contains number important novel ingredients leads model system classical linear logic models intuitionistic classical logic various calculi established interpretations systems linear logic gir djs 
model 
full completeness usual notion completeness logic respect provability full completeness respect proofs 
model formulas proofs logic typically means category structure appropriate kind formulas denote objects proofs pi entailments denote morphisms pi gamma 
convertibility proofs respect soundly modelled equations morphisms holding say fully complete formulas morphism denotation proof pi pi 
full completeness means characterizes proof strong sense 
defined syntax independent way true semantic characterization space proofs spanned notion full completeness introduced aj full completeness theorem proved game semantics multiplicative linear logic mix rule 
followed series papers established full completeness results variety models respect various versions multiplicative linear logic mll ho bs loa loa 
results logics weak multiplicative fragment linear logic 
significant extension multiplicative fragment proving concurrent games model fully complete multiplicative additive linear logic mall 
mall richer system mll shown sophisticated complex notion proof net requires gir 
proof full completeness correspondingly lengthy complex 
give outline extended detailed account draft full am 
believe methods results extend exponentials yielding complete analysis linear logic 
independently girard obtained form full completeness result game semantics gir 
methods details results appear different 
familiar detailed comparison 
structure rest follows 
section concurrent games model 
section show mall proof structures constructed strategies section outline proofs correctness criteria proof structures 
section gives main result 
concurrent games model convenient point departure blass games bla 
form inductively blass game 
idea opponent starts playing play proceeds defined dually player making initial move games trees stage exactly player turn move global schedule 
play proceeds sequence moves tracing path tree 
commitment sequential format forces interleaving interpretation multiplicatives analogous expansion theorem ccs leads failure composition strategies associative shown aj 
development concurrent games idea game trees viewed partial orders means position reached position playing additional moves 
natural information ordering domain theory aj 
add limit points corresponding infinite branches game tree obtain complete partial order viewed terms construction sums products games blass games described lifted sums far underlying domains positions concerned da shall represent strategies functions domains positions position obtained extending moves strategy position 
immediate positions moves turn exactly fixpoints usual way require computationally reasonable strategies monotonic continuous 
useful normalizing condition require strategies idempotent understand consider applied 
moves contains information supplied opponent environment 
decides able decide require 
course allows moves block player 
possibility exists blass games opponent move twice initially theta theta theta important point strategies may welldefined positions 
general positions reached strategy 
mesh requirement strategies increasing functions adjoin top element domain positions writing represent undefined 
summary strategies player represented continuous closure operators modest assumptions bounded completeness complete lattice 
completely specify game structure domain positions set legal strategies player set legal counter strategies strategies opponent 
strictly generalizes blass games games domain finite infinite sequences prefix ordering corresponding paths game tree conventions play formalized saying oe oe opponent turn move player turn 
special case general setting overcome problems blass games precisely allowing situations players move 
shall interpret game boards multiplicatives differently blass true concurrency interleaving representation 
setting simply matter defining da omega 
da theta db cartesian product domains 
linear logic connectives interpreted acting sets strategies 
define sa corresponds interchanging roles player opponent 
clearly products define ji ii oe sa hoe ji ii 
hoe ji ii oe corresponds exactly idea player wait opponent choose plays strategy fin oe oe oe 
oe oe oe oe corresponds idea strategy opponent firstly choose play strategy opponent note case covers unreachable states oe 
define sums de morgan duality strategies tensor define sa omega foe theta oe sa sb oe theta oe 
really smash product respect oe result 
exactly captures idea informational independence player actions cf 
aj 
player moves depends information available similarly order define counter strategies tensor strategies par linear implication eventually morphisms category concurrent games introduce important feature formalization elegant treatment affords composition strategies 
suppose firstly oe game 
play oe define oe ffi 
oe ffi 
ffi oe 
ffi oe fact fixpoints coincide follows easily fact oe continuous closures fact special case construction join closure operators 
position reach result playing oe equality formulas shows independent questions starts 
closure operators oe theta theta want compose get closure oe theta define follows oe ffi oe ffi ffi oe gamma ffi gamma input play oe relative input obtain external response account interaction 
particular oe closure theta induces action closures closures ff 
ff oe closures back closures fi 
oe fi 
oe fi ffi oe ffi oe gamma 
define omega foe da theta db ff sa ff oe fi sb oe fi de morgan duality 
omega 
particular sa foe da theta db ff sa ff oe sb fi oe fi symmetric classical version familiar logical relations condition oe action carries player strategies player strategies carries counter strategies counter strategies round account defining units point poset underlying domain 
tensor unit 




unit plus initial object 

exponentials defined model basic ideas lines aj lack space refrain doing 
reader really understand model checking composition associative seeing problems blass games simply arise setting 
ready define category concurrent games 
refinements needed 
stability continuous closure operators possible strategies impose condition stability ac 
turn important proof full completeness don know necessary condition deeply related monomial condition gir 
mean closure operator stable 
define domain closure operator oe set oe 
output function oe continuous function domain oe oe 
say oe stable stable output function 
link concurrent games aj output functions strategies interpreting proofs exactly denotations proofs aj 
composition closure operators tracked composition corresponding output functions defined aj 
shall henceforth restrict stable closure operators 
needs conditions underlying domains suffices assume bounded complete distributive suitable sense 
details see ac 
extensionality ensure get genuine model linear logic required equations hold adapt classical ideas realizability setting 
game simply predicates picking sets strategies take games form partial equivalence relations stable closure operators simply adapt definitions linear connectives unary predicates binary relations check preserve symmetry transitivity 
game form write oe mean oee oe 
position define category concurrent games 
objects structures domain partial equivalence relations stable closure operators explained subject condition oe maximal fixpoints oee similarly morphism closure operator oe oe composition defined 
identities ida understood symmetric bidirectional copycat strategies aj 
define extensional quotient morphism partial equivalence class ea proposition autonomous category limits colimits 
discussion motivate passage extensional category note weak products coproducts 
lifted sum model additives non associative need quotient behaviour partial elements order obtain required structure 
lead reader wonder bother partial elements just maximal elements effect means relational model loa 
fact relational model loa fully complete mall explicit counter example 
behaviour strategies partial elements factored plays crucial role determining strategies place 
cut space strategies stable closure operators stability allows capture causality links contexts key issue mall represented example boolean weights mall proof nets 
particular find beautiful correspondence trace stable output function strategy monomial weights appearing proof net shall read back strategy 
model mall fragment linear logic consider consists formulas built propositional atoms negations binary connectives omega tensor 
par phi plus 
refer fragment mall 
sequent interpreted formula 
delta delta delta 
proofs propositional formulas uniform substitution instances treat propositional atoms variables effect viewing propositional logic pi fragment secondorder propositional logic 
standard fashion mall formula propositional atoms xn interpreted mixed variance functor op theta gamma 
set functors form objects category collectively obtain indexed autonomous category limits colimits 
provide right algebraic structure model propositional mall 
define morphisms stages 
firstly dinatural family functor family strategies oe indexed tuples games oe oe tuples strategies oe id oe id define ef functor oe ef oe similarly define morphisms partial equivalence classes families stable symmetric strategies generalizing defining various connectives constructions linear types pointwise functors families obtain autonomous category limits colimits 
fine point known dinaturality general preserved composition 
proved full completeness assumption dinaturality preserved composition pulling back syntax easy see definable functors closure composition hold restricted definable functors category 
avoid logical detour stronger property dinaturality reynolds style relational parametricity closure composition proved directly complicate description model dinaturality sufficient prove full completeness 
hypothesis need prove full completeness closure operators symmetric sense having output functions satisfying symmetric mean closure operator having output function satisfying problem condition proving closure composition full completeness proved obtain closure composition corollary 
petri games give concrete dinatural strategy interpreting cut free mall proof formula gamma games model 
related formally domain theoretic description theory developed 
step see position game state petri net 
course possible special games call petri games define 
formally petri net quadruple pre post set places set transitions 
transition associated nonempty sets pre ae pre conditions post ae post conditions 
state petri net subset states related transition relations write gamma 
pre post state transition means disjoint union 
state accessible write exists sequence transitions gamma 
delta delta delta gamma 
petri net called unfolded 
pre singleton 
post post implies graphically means patterns forbidden words petri net looks forest 
restricting unfolded petri nets accessibility relation order 
call root place unfolded petri net appear post single state ae consisting root places call state accessible accessible special state accessibility relation defines domain dn set accessible states call petri game game domain positions da form dn unfolded petri net call board intuitively petri game board position state reachable sequence transitions gamma 
gamma 
position 
show construct board omega boards na nb multiplicatives na omega 
petri net obtained petri nets na nb particular na omega union na nb additives na na juxtaposition na nb new place new transitions left right pre conditions pre left pre right fp post conditions post left na post right nb graphically instance petri games boards na na petri game omega omega 

board position indicated tokens 
concrete interpretation formula gamma atoms xn interpreted mixed variance functor gamma op theta gamma 
proof gamma defines strategy gamma tuple games particular case petri games strategy plays board gamma associated gamma defined boards na previous paragraph 
describe briefly strategy plays gamma step consider proof translated proof net additive boxes see gir 
observe place gamma associated additive link gamma residual place na 
case valuations left right corresponds transition left right precondition fpg 
definition position gamma induces transition sequence gamma gamma 
delta delta delta gamma 
may unique induces partial valuation links gamma depend sequence valuation assigns left right links transitions left right appears sequence 
partial valuation link gamma computed new proof net additive boxes constructed removing additive box principal door formula assigned value point strategy oe determines answer oe information reads considering remaining additive box black box possibility look inside 
observe proof net verifies fundamental properties 
phi link visible black box left right 
visible literal related visible literal axiom link 
position oe defined position gamma 
valuation phi link appears 
axiom link position side position side concurrent copy cat 
instance proof formula omega omega 

interpreted dinatural strategy instance oe petri games see previous paragraph strategy omega omega 

plays proof structures strategies section construct proof structure associated dinatural family oe gamma 
technical lemma lemma requires restrict dinaturality category civil games defined follows 
strategy oe civil 
game da ea civil contains civil strategy civil counter strategy 
civil game total maximal oe classes civil total games closed mall constructs omega 
phi gamma strategy omega strategy 
total 
dinatural family functor gamma defined family strategies oe indexed tuples civil games oe gamma oe gamma id oe gamma id tuple morphisms gamma 
dinatural family oe uniform closure operator oe depends domain da lemma ensures dinatural family oe restricts uniform dinatural family 
lemma uniformity oe dinatural family tuple games 
strategy oe depend pers ea domains da fix sections ffl formula gamma built xn connectives omega 
phi ffl uniform dinatural family oe functor gamma 
valuation links gamma defines formula gamma interpreted functor 
leave reader inductive definition associated natural transformation proj gamma gamma delta gamma 
gamma projection maps gamma 
gamma 
composing dinatural family oe proj gamma defines dinatural family free gamma natural describe dinatural family oe special case formula gamma 
need notations 
annotated formula pair gamma index consisting mall formula gamma toone function index associating integer occurrence gamma 
annotated formula gamma index best seen formula gamma occurrences resp 
associated replaced resp 

number literal occurrences gamma 
section consider formula gamma annotated mg way index appears left index 
canonical annotation functions mg ng ffl mg gammag indicate literal index annotates ffl ffl gamma 
multiplicative fragments starting case multiplicative formula gamma construct multiplicative proof structure theta oe associated dinatural family oe 
construction require game theoretic properties simply follow steps loader carried construction relational model see loa 
lemma exists fixpoint free involution oe mg mg tuple civil games set maximal fixpoints oe xm oe mg suppose formula gamma constructed xn connectives omega 
phi 
associate free proof structure oe reducing problem multiplicative case 
duality total valuation phi links gamma total valuation links gamma valuation induces functor gamma op theta gamma 
natural transformation inj gamma gamma delta gamma 
gamma defined gamma gamma inj gamma proj gamma main result section factorization implies lemma uniform dinatural family oe describes proof structure 
lemma factorization dinatural family oe free gamma exists valuation phi link gamma morphism oe factors uniquely gamma inj gamma gamma instance civil games 
family gamma defined uniform dinatural 
proof take total game domain play oe 

maximal element obtain result defines valuation prove factorization instance establishing inj gamma split mono tuples civil games 
restriction dinaturality dinaturality appears proof 
notations instance resp 
annotated formula gamma tuples games associate element da resp 
db corresponding element 
gamma resp 

gamma gamma follows definition induction similar 
ae 
gamma omega gamma 
gamma 
gamma 
gamma gamma 
gamma gamma 
gamma phi gamma 
gamma gamma inl 
gamma gamma inr 
gamma gamma definition 
gamma easily adapted associate prime element 
left gamma gamma valuation 
left additive link gamma 
base case induction 
left gamma gamma inl 
prime element 
right gamma corresponding 
right defined similarly 
partial valuation links gamma tuple ff ff ff fi fi fi closure operators ff fi associate closure operator dff fie gamma gamma follows ffl dff fie ff dff fie fi ffl letting respective restrictions gamma gamma dff fie gamma 
gamma dff fie gamma omega gamma equal smash product dff fie gamma theta dff fie gamma dff fie gamma phi gamma 

fie gamma 
fie gamma assign value root link dff fie gamma gamma 
assigns value left root link dff fie gamma gamma 
fie gamma 
fie gamma 
assigns value right root link dff fie gamma gamma 
fie gamma 

fie gamma motivation construction tuples total games total valuation closure operator dff fie gamma strategy gamma ff fi strategies ff fi mall proof structures recall definition mall proof structure gir 
proof structure theta consists 
set formula occurrences 
set links links takes premise formula occurrences theta 
formula occurrence theta weight non zero element boolean algebra generated pn links theta satisfying conditions 
formula occurrence premise link link 
theta 
weight occurring theta monomial negations 
weight occurring theta ae 
sum taken set links required sum disjoint 

non axiom link premises ffl omega 
ffl phi ffl phi ffl link pl pl condition equivalent requirement appearing gir element boolean algebra generated weights occurring theta link depend pl main construction associate event structure event gamma formula gamma canonically annotated 
gamma tree omega phi 
links mall formulas formula gamma root literals leaves path alternating sequence formulas links 
replace subtree phi subtrees phi phi connected ancestor resulting tree tree gamma labelled omega 
phi phi links mall formulas literal annotated 
node tree gamma means link formula tree 
nodes ordered tree nesting ordering 
axiom link tree gamma element set fx annotated literals tree gamma additive boundary link formula phi tree gamma event structure event gamma defined follows 
events nodes axiom links tree gamma 
nodes nests node axiom link containing literal nested axiom link 

nodes additive boundary node axiom link containing literal axiom links intersection singleton axiom links containing incompatible literals 
observe maximal state event gamma describes multiplicative proof structure 
equivalence relation omega relates nodes tree gamma path cross additive boundary 
formally equivalence relation events event gamma ffl omega formula premise link ffl omega omega 
link particular axiom link element omega class 
total game associated flat domain integers strategies 


instance play particular role construction proof structure corresponding oe 
prime element form 
gamma 
gamma called input gamma prime element form 
gamma 
gamma output gamma valuation links gamma closure operator fl gamma defined fl dff fie gamma gamma considered canonically annotated strategies ff fi ff 
fi 
note fl counter strategy gamma valuation total 
lemma stability map 
hoe jfl valuations gamma stable 
proof proof relies heavily connection model definition stable closure operators fact category domains stable maps cartesian closed choice ff fi 
introduce linear functions ev gamma ev gamma gamma associate state event gamma element gamma functions defined follows ffl sent union omega class ffl prime 
left gamma sent omega class premise prime 
right gamma omega class second premise ffl phi prime 
left gamma sent omega class corresponding phi link prime 
right gamma sent omega class corresponding phi link ffl output prime 
gamma index literal sent ev gamma axiom link fx ffl output prime 
gamma index literal sent ev gamma gamma axiom link ffl prime sent empty state 
stable function prf oe associates partial valuation links gamma state event gamma prf oe 
ev gamma hoe jfl proof structure theta oe constructed follows 
formula occurrences resp 
links elements tr prf oe trace stable function prf oe form formula occurrence resp 
link event gamma node labelled 
weight computed valuation follows theta product taken links extends 
left second product links extends 
right 

formula occurrence premise link premise gamma extends 
formula occurrence link gamma extends lack space omit lengthy verification lemma theta oe defines mall proof structure 
omit proof alternative definition theta oe trace prf gamma oe 
ev gamma gamma hoe jfl leads proof structure strategy oe symmetric 
correctness criteria mall proof nets valuation links proof structure theta 
induces function denoted weights theta 
slice theta obtained restricting theta formulas verifying obvious modification remaining links premise 
switching proof structure theta consists stability proof 

choice valuation theta 
selection choice fl rg 
links theta 
selection link theta occurrence jump depending pl theta 
normal choice jump premise 
choice called proper 
normal switching switching proper jump 
definition switching proof structure theta 
define graph theta follows 
vertices theta occurrences links theta 
links theta draw edge link 
phi links theta draw edge link premise 
omega links theta draw edge link left premise link right premise 

links theta draw edge link premise left right selected 
links theta draw edge link jump selected proof net proof structure theta induced graph acyclic connected 
acyclicity prove section theta oe defined section satisfies conditions proof net acyclicity exhibiting deadlock assumption cycle connectedness propagating error value net assumption connected component 
fix subsections ffl formula gamma built xn connectives omega 
phi ffl symmetric dinatural family oe functor gamma 
total games strategies oe oe stable function da construct strategy oe omega follows 
oex 
oex oex maximal oex set disjoint omega links formula gamma total valuation nodes gamma strategies ff fi stable functions da db inductive definition strategy dff fie gamma gamma similar definition dff fie gamma gamma case omega link ffl letting resp 
respective restrictions resp 
gamma gamma dff fie gamma omega delta dff fie gamma dff fie gamma omega dff fie gamma theta dff fie gamma instance dff fie gamma dff fie gamma empty 
lemma switching theta oe acyclic 
proof sketch lack space omit nice graphtheoretic reasoning shows switching theta oe potential cycle switching graph theta oe may transformed oriented cycle form oriented means jumps headed direction ax ax ax ax label omega omega link appearing tensor omega omega gamma consider possible cases gamma ax ax case literals forming axiom link nested omega omega define resp 
input prime resp 
output prime literal nested omega resp omega 
second case omega nests link omega nests literals forming axiom link jump axiom link connects cycle 
define output prime literal nested omega prime 
gamma valuation left right compatible valuation associated prove cycle exist constructing strategy gamma interaction oe reach maximal element deadlocks contradicting totality gamma 
calling setf omega omega gamma strategy defined dff fie gamma ff fi defined section 
suppose element gamma verifying gamma hfl joe observe output input prime associated valuation link gamma 
implies gamma oe deduce construction theta oe definition gamma ae oe hfl joe hfl joe conclude joe maximal 
connectedness lemma normal switching theta oe connected 
proof sketch projection lemma reduces proving proof structure defined semantics connected 
restrict ourself multiplicative case lack space 
adaptation proof entirely straightforward essence proof appears 
oe dinatural family multiplicative formula gamma interpreted theta theta oe corresponding proof structure switching theta 
composing oe natural transformations omega 
delta gamma 

omega omega 
delta gamma 

omega transform oe dinatural family ae functor upsilon corresponding switching upsilon fold 
product omega products literals proof structure associated ae lemma homeomorphic switching graph theta define game da flat domain integers strategies closure operators 
integer ea equality 
observe total civil 
notation omega 
mean respectively fold omega 
product game pair integers strategy ae 
set maximal fixpoints exactly ng suppose theta disconnected upsilon 
product omega 
delta delta delta 
omega may assume loss generality omega powers omega axiom links form connected component theta set strategy ae omega 
delta delta delta 
omega gamma ae ae theta delta delta delta theta ae kl gamma nl gamma careful choose odd ff counter strategy omega simple argument shows result playing ae theta ff upsilon am am ae maximal element xm 
assume maximal element xm 
lemma exists involution oe mg oe mg 
involution oe describes axiom links theta restricts definition involution kl kl obtain sum kl forbids xm fixpoint ae theta ff 
conclude result playing ae theta ff ae necessarily 
strategy omega obtained composing ae ae just shown result playing strategy ff 
implies 
strategy omega yielding required contradiction 
theorem theta oe mall proof net 
proof lemmas imply simple graphtheoretic argument necessarily normal switching theta oe connected 
conclude 
main result theorem full completeness gamma delta mall formulas 
morphism gamma gamma 
delta interpretation pi mall proof pi formula gamma delta 
proof theorem sequentialization theorem gir symmetric dinatural family oe oe gamma gamma 
delta defines proof pi gamma delta 
turn proof pi interpreted class pi symmetric dinatural families gamma delta 
proof reduced showing classes oe equal 
simple argument slices pi shows oe maximal fixpoints instance fact strategies game equivalent maximal fixpoints conclude oe 
aj abramsky jagadeesan new foundations geometry interaction information computation 
conference version appeared lics 
aj abramsky jagadeesan 
games full completeness multiplicative linear logic journal symbolic logic vol 

conference version appeared 
aj abramsky jung 
domain theory 
handbook logic computer science 
volume iii semantic structures pages 
abramsky gabbay maibaum editors 
oxford university press 
am abramsky 

concurrent games full completeness 
draft pages 
ac amadio 
curien domains lambda calculi 
cambridge university press 
danos ehrhard regnier 
believe ajm games model classical linear logic 
proceedings lics pp 

bainbridge freyd scedrov scott 
functorial polymorphism 
theoretical computer science 
bla blass game semantics linear logic annals pure applied logic north holland 
bs blute scott 
linear semantics 
annals pure applied logic 
djs danos 
schellinx 
new logic linear logic 
journal symbolic logic 
gir 
girard 
linear logic 
theoretical computer science 
gir 
girard 
proof nets parallel syntax proof theory 

gir 
girard 
meaning logical rules ii 
unpublished papers 
ho hyland 
ong 
fair games full completeness multiplicative linear logic mix rule 
unpublished manuscript 
loa loader 
linear logic totality full completeness 
proceedings lics 
loa loader models lambda calculi linear logic structural equational proof theoretic characterisations phd thesis oxford 
nielsen plotkin winskel 
petri nets event structures domains part 
theoretical computer science 
