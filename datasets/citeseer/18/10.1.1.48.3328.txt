glr robust parser spontaneously spoken language alon lavie center machine translation carnegie mellon university pittsburgh pa usa email lavie cs cmu edu describes glr parsing system tomita generalized lr parsing algorithm designed robust particular types extra grammaticality noise input limited grammar coverage 
glr attempts overcome forms extra grammaticality ignoring words fragments conducting search maximal subset original input covered grammar 
parser coupled beam search heuristic limits combinations skipped words considered parser ensures parser operate feasible time space bounds 
developed parsing system includes tools designed address difficulties parsing spontaneous speech statistical disambiguation module integrated heuristic evaluating ranking parses produced parser parse quality heuristic allows parser self judge quality parse chosen best 
evaluate suitability parsing spontaneous speech glr parser integrated janus speech translation system 
evaluations transcribed speech recognized input indicated version system uses glr produces acceptable translations corresponding version uses original non robust glr parser 
analysis spoken language widely considered challenging task analysis written text 
difficulties written language ambiguity generally spoken language 
difficulties additional problems specific nature spoken language general spontaneous speech particular 
major additional issues come play parsing spontaneous speech speech disfluencies looser notion grammaticality characteristic spoken language lack clearly marked sentence boundaries 
contamination input errors speech recognizer exacerbate problems 
natural language parsing algorithms designed analyze clean grammatical input 
definition recognition process algorithms designed detect ungrammatical input earliest possible opportunity reject input ungrammatical slightest way 
property requires parser complete absolute distinction grammatical ungrammatical input parsers fragile little value practical applications 
parsers unsuitable parsing spontaneous speech completely grammatical input exception rule 
describes glr parsing system tomita generalized lr parsing algorithm designed robust particular types extra grammaticality noise input limited grammar coverage 
glr attempts overcome forms ignoring words fragments conducting search maximal subset original input covered grammar 
glr enhancement standard glr context free parsing algorithm grammars lexicons tools developed standard glr parser modification 
glr uses standard slr parsing tables compiled advance grammar 
inherits benefits glr terms ease grammar development large extent efficiency properties parser 
case input sentence completely grammatical glr normally return exact parse glr parser 
prove useful practical applications glr designed particularly suitable parsing spontaneous speech 
grammars developed spontaneous speech concentrate describing structure meaningful clauses sentences embedded spoken utterance 
glr parsing architecture facilitate extraction meaningful clauses utterance disregarding surrounding disfluencies 
foundation glr parsing glr parsing algorithm generalized lr glr parsing algorithm developed tomita 
glr parsing algorithm evolved lr parsing techniques originally developed parsing programming languages late early 
lr parsers parse input bottom scanning left right producing rightmost derivation 
lr parsers driven table parsing actions pre compiled grammar 
limited class lr grammars compiled parsing tables deterministic resulting extremely efficient linear time parser 
lr parsers come variants 
common core basic shift reduce parser fundamentally finite state pushdown automaton pda 
parser scans input left right word word 
step lr parser may shift input word stack reduce current stack grammar rule accept input reject 
action table pre compiled grammar guides lr parser parsing input 
action table specifies action parser take function current state word input 
tomita generalized lr parsing algorithm extended original lr parsing algorithm case non lr languages parsing tables contain entries multiple parsing actions 
algorithm deterministically simulates non determinism introduced conflicting actions parsing table efficiently pursuing pseudo parallel fashion possible actions 
primary tool performing simulation efficiently graph structured stack gss 
gss data structure efficiently represents multiple parsing stacks correspond different sequences parsing actions 
additional techniques local ambiguity packing shared parse forests order efficiently represent various parse trees ambiguous sentences parsed 
local ambiguity packing collects multiple sub analyses category type derive substring single structure 
parsing actions may refer single structure represents entire collection sub parses packed sub parses separately 
shared packed forests allow common sub parses different analyses shared pointers 
generalized lr parser compiler unification practical natural language system designed glr parsing algorithm center machine translation carnegie mellon university 
system supports grammatical specification lfg framework consists context free grammar rules augmented feature bundles associated non terminals rules 
feature structure computation part specified implemented unification operations 
allows grammar constrain applicability context free rules 
reduction context free rule succeeds associated feature structure unification successful 
generalized lr parser compiler implemented common lisp analysis component different projects center machine translation cmu course years 
glr implemented extension unification generalized lr parser compiler 
glr parsing algorithm glr parsing algorithm designed robust particular types noise input limited grammar coverage 
attempts overcome forms extra grammaticality ignoring words fragments conducting search maximal subset original input string covered grammar 
glr accommodates skipping words input string allowing shift operations performed inactive state nodes gss shifting input symbol inactive state equivalent skipping words input encountered parser reached inactive state prior current word shifted 
parser lr previous reduce operations remain valid words input skipped reductions depend lookahead 
similar glr algorithm glr parses input single left right scan input processing word time 
processing input word called stage 
stage consists main phases reduce phase shift phase 
reduce phase precedes shift phase 
outline stage algorithm shown 
st denotes set reduce actions defined parsing table state st similarly st denotes shift actions defined state st symbol st denotes accept action 
stage algorithm input symbol processed somewhat different 
read distribute reduce reduce steps identical previous stages 
distribute accept step replaces distribute shift step 
distribute accept step accept actions distributed state nodes st gss active inactive st true 
pointers state nodes collected list final state nodes 
list empty glr accepts input input rejected 
get parses step creates list symbol nodes direct descendents final state nodes 
symbol nodes represent set complete parses parser contain pointers roots parse forest 
due word skipping behavior glr parser local ambiguities occur frequent basis 
cases portion input sentence may reduced non terminal symbol different ways considering different subsets input inactive state node internal gss top represented stacks 
read read input token 
distribute reduce active state node st get set reduce actions st parsing table attach active state node 
reduce perform reduce actions attached active state nodes 
recursively perform reductions distributing reduce actions new active state nodes result previous reductions 
distribute shift state node st gss active inactive get st parsing table 
action defined attach state node 
shift perform shift actions attached state nodes gss 
merge merge active state nodes identical states single active state node 
outline stage unrestricted glr parsing algorithm may skipped 
ultimate goal glr parser produce maximal close maximal parses process local ambiguity packing discard partial parses lead desired maximal parse 
local ambiguities differ coverage input segment compared word coverage strictly subsumes subsumed ambiguity discarded 
noted due non local effects unification pruning carries danger discarding non maximal local ambiguity favor analysis fails incorporated complete parse due unification failure 
experience shown extremely rare situation practical purposes ignored 
complexity analysis unrestricted glr algorithm proves asymptotic time complexity algorithm length input length longest grammar rule 
complexity bound similar original glr parsing algorithm 
practice performance parsers rapidly diverges 
average glr time space requirements increase linearly function sentence length performance unrestricted glr appears closer predicted worst case complexity analysis 
suggests effective search heuristics required ensure algorithm performs feasible time space bounds 
sentence length time seconds beam beam beam beam beam beam time glr various beams time performance glr various beam widths function sentence length search control heuristics purpose glr find maximal close maximal parsable subsets input drastically reduce amount search limiting amount word skipping considered parser 
developed experimented heuristic search techniques 
word skip limit heuristic parser restricted skip consecutive input words point parsing process 
beam search heuristic parser restricted pursue beam fixed size parsing actions selected criterion locally minimizes number words skipped 
exists direct tradeoff amount search word skipping parser allowed pursue time space performance parser 
grammar domain goal determine smallest possible setting control parameters allows parser find desired parses overwhelming majority cases 
conducted empirical evaluations parser behavior different settings search control parameters 
results show time space requirements glr increase control parameters set higher values 
increase gradual case beam parameter considerably high settings parser performance remains feasible range approach time space requirements experienced running unrestricted version glr 
comparison performance figures heuristic control mechanisms revealed clear advantage beam search versus simpler skip word limit heuristic 
shows average parsing time function input string length various settings beam width parameter 
performance numbers determined hp apollo workstation applied benchmark corpus utterances parsed compiled grammar english scheduling domain 
statistical disambiguation abundance parse ambiguities input greatly exacerbated case glr parser due fact parser produces analyses correspond different maximal close maximal parsable subsets original input 
imperative parser augmented statistical disambiguation module assist parser selecting ambiguities particular parsable input subset 
probabilistic model similar model developed carroll probabilities associated directly actions parser defined pre compiled parsing table 
state lr parser partially reflects left right context parse constructed modeling probabilities level potential capturing contextual preferences captured probabilistic context free grammars 
probabilistic model assigns probability possible transition possible state parser 
probabilities conditional sequence input words previous states parser 
relative probabilities input words various states implicitly represented action probabilities 
training probabilities correctness parse result parsing system determined feature structure associated parse parse tree 
interested parse disambiguation feature structure level 
allow adequate training statistical model collect corpus sentences correct feature structures 
janus project large collection sentences correct feature structures constructed development evaluation purposes available training statistical model 
domains atis developed interactive disambiguation procedure constructing corpus disambiguated feature structures 
corpus input sentences disambiguated feature structures train finite state probabilistic model corresponds lr parsing table 
order done method developed correct feature structure parsed sentence converted back sequence transitions parser took process creating correct parse 
method process training corpus accumulate counters keep track times particular transition lr finite state machine taken course correctly parsing sentences training corpus 
processing entire training corpus obtaining counter totals counter values treated action frequencies converted probabilities process normalization 
smoothing technique applied compensate transitions occur training data 
runtime parse disambiguation statistical disambiguation unification glr glr parsing system performed post process entire parse forest constructed parser 
runtime statistical model score alternative parse analyses produced parser 
computed scores disambiguation unpacking analysis received best probabilistic score parse forest 
due ambiguity packing set alternative analyses corresponding parse trees packed parse forest 
packed nodes statistical score attached alternative sub analyses packed node 
packed node assigned best scores maximum 
score compute scores parent nodes forest 
scheme score attached root node forest reflect score best analysis packed 
due effects packing unification score assigned parse node guaranteed actual true probability best sub analysis rooted node 
score close estimate probability 
actual task parse disambiguation performed parsing process unpacking best scoring analysis parse forest 
unpacking done top starting best scoring root node forest selecting alternative packed ambiguities packed parse node 
results collection unpacked parse trees 
unification consistency procedure verifies validity unpacked parse trees correct probability trees computed 
best scoring tree corresponding analysis selected 
performance evaluation statistical disambiguation conducted evaluation assess effectiveness statistical disambiguation model compared principle disambiguation method minimal attachment 
evaluation conducted december version spanish analysis grammar developed janus project 
probabilities trained corpus target correct push talk dialogs cross talk dialogs amounting total sentences 
evaluated performance statistical disambiguation module unseen test set push talk dialogs cross talk dialogs amounting total sentences 
sentences parsable analyses returned parser completely correct matching target ilt specified sentence 
sentences ambiguous 
statistical disambiguation module chose correct parse sentences resulting success rate 
comparison applied minimal attachment disambiguation procedure test set 
minimal attachment correct parse chosen sentences resulting success rate 
statistical disambiguation method outperformed minimal attachment method case 
noted training observed small fraction actual transitions allowed grammar 
parsing table spanish grammar contained states total actions 
course training probabilities actions observed states 
training observed possible actions states actions observed 
mind statistical disambiguation performed remarkably 
leads believe extremely small amounts correct training data establish structural preferences resolving frequently occurring types ambiguity 
parse evaluation heuristics complement glr parser developed integrated framework allows different heuristic parse evaluation measures combined single evaluation function sets parse results scored compared ranked 
framework designed general independent grammar domain applied 
allows different evaluation measures different tasks domains 
evaluation framework includes tools optimizing performance integrated evaluation function training corpus 
parse evaluation score functions developed set evaluation measures janus scheduling domain atis domain penalty function skipped words penalty function substituted words penalty function fragmentation parse analysis penalty function statistical score parse 
basic form penalty skipping words assigns penalty range skipped word 
order deal false starts repeated words slightly higher penalty assigned skipped words appear input 
developed penalty scheme penalty skipping word function saliency word domain 
determine saliency words compared frequency occurrence transcribed domain text corresponding frequency general text 
atis domain attempted deal substitution errors speech recognizer confusion table 
empirically determined common listed table 
working confusion table glr parser encounters word appears table attempts continue original input word possible correct word 
word substitution incur penalty wish choose analysis contains substitution cases results better parse 
currently simple penalty scheme substitution penalty 
order cope looser notions grammaticality typical spontaneous speech grammars allow parses consist fragments incomplete sentences 
significantly increases degree ambiguity grammar 
particular utterances analyzed single grammatical sentence analyzed various ways collections fragments 
experiments indicated cases fragmented analysis desirable 
developed method associating numerical fragmentation value parse 
fragmentation value penalty score 
statistical disambiguation model assigns probability possible parser transition sequence 
transition sequences correspond parses different inputs directly comparable 
enables parse probabilities evaluation measure 
parse probability converted penalty score statistically parse trees receive lower penalties 
parse quality heuristic developed classification heuristic designed try identify situations best parse result inadequate 
parse quality heuristic designed classify parse chosen best parser categories bad 
classification done judgement combined penalty score parse chosen best 
parse classified value penalty score threshold value 
threshold function length input utterance longer input utterances expected accommodate word skipping producing analysis 
threshold parameters determined empirically 
parsing spontaneous speech glr glr parser integrated janus practical speech speech translation system designed facilitate communication pair different language speaking speakers attempting schedule meeting 
parsing full utterances glr speech translation janus system guided general principle spoken utterances analyzed translated sequential collection semantic dialogue units roughly corresponds speech act 
semantically coherent pieces information 
interlingua representation system designed capture meaning level 
semantic dialogue unit analyzed interlingua representation 
output speech recognizer textual hypothesis complete utterance contains explicit representation boundaries contained 
segmentation achieved stage process partly prior partly parsing 
segmentation decisions system reliably parsing point multiple sources knowledge applied 
pre parsing segmentation significantly reduce amount parse time segmentation ambiguity resulting significantly faster parser performance 
goal pre parsing segmentation detect confident boundaries utterance pre break utterance sub utterances may contain multiple 
sub utterances parsed separately 
pre parsing segmentation boundaries determined acoustic statistical lexical information 
remaining segmentation performed parsing 
analysis grammars contain rules allow input utterance analyzed concatenation 
cut amount segmentation ambiguity developed powerful set heuristics including statistical clause boundary predictor constrain segmentation possibilities considered parser 
janus performance evaluation evaluations conducted english spanish analysis grammars processing transcribed speech recognized input 
compared performance system incorporating glr version uses original glr parser 
results spanish english similar summarize english results 
test set consisted push talk unseen utterances 
average utterance word length 
transcribed text pre broken explicit markings transcriptions 
produced set average length words parsed separately 
top best speech recognized hypotheses segmented pre parsing segmentation procedure 
produced set sub utterances contain multiple 
transcribed input glr succeeds parse glr succeeds parsing 
amounts gain number parsable 
speech recognized input glr parses input sub utterances glr succeeds parse 
case increase parsable sub utterances amounts 
transcribed input glr produced acceptable translations compared glr 
glr produces acceptable translations 
case parses marked parse quality heuristic glr considered 
results speech recognized input similar 
glr produced acceptable translation time glr time 
amounted increase number acceptable translations 
similar results achieved parses marked glr considered 
evaluated effectiveness parse quality heuristic 
transcribed data parses marked parse quality heuristic produce acceptable translations 
marked glr bad result bad translation 
speech data effec parse quality heuristic hindered errors speech recognizer 
consequently parses marked parse quality heuristic produced acceptable translations sub utterances 
errors completely due poor recognition considered acceptable parses marked parse quality heuristic fact acceptable 
parses marked bad parse quality heuristic produced bad translation time 
performance evaluations glr parser janus system indicated parser highly suitable analyzing spontaneously spoken language 
version janus system uses glr produced acceptable translations corresponding version uses original non robust glr parser 
parser appears equally adjusted handling disfluencies typical spoken language limitations grammar coverage 
manual inspection transcribed test input utterances shows third contain disfluencies thirds grammatical 
due grammar coverage limitations non robust glr parser fails parse grammatical 
skipping portions input glr parses 
glr produced acceptable translations compared glr 
overcoming limitations grammar coverage glr produces acceptable translations 
appears indicate glr conjunction grammar reasonably adequate coverage result high levels performance minor unimportant portions input covered grammar detected parser ignored 
glr prove useful overcoming grammar coverage problems tasks input part grammatical complete crucial 
aho johnson 
lr parsing 
computing surveys 
carroll 
practical unification parsing natural language 
phd thesis university cambridge cambridge uk october 
computer laboratory technical report 
lavie 
glr robust grammar focused parser spontaneously spoken language 
phd thesis carnegie mellon university pittsburgh pa may 
technical report cmu cs 
tomita 
efficient augmented context free parsing algorithm 
computational linguistics 
tomita 
generalized lr parser compiler version 
proceedings international conference computational linguistics coling pages helsinki finland 
aoki waibel kemp lavie mcnair polzin ros schultz suhm tomita waibel 
janus spontaneous speech translation 
proceedings ieee international conference acoustics speech signal processing icassp 
