personal news agent talks learns explains daniel billsus michael pazzani department information computer science university california irvine irvine ca ics uci edu pazzani ics uci edu intelligent information agents far focused systems accessible world wide web 
demanding schedules prohibit people continuous access computers clear demand information systems require workstation access graphical user interfaces 
personal news agent designed part intelligent ip enabled radio uses synthesized speech read news stories user 
voice feedback user system automatically adapts user preferences interests 
addition time coded feedback explore components system facilitate automated induction accurate interest profiles 
motivate multistrategy machine learning approach allows induction user models consist separate models long term short term interests 
second investigate concept feedback novel form user feedback agent capability construct explanations reasons led specific classification 
users critique explanations machine learning perspective allows direct changes induced concept inclusion additional training examples 
evaluate proposed algorithms user data collected prototype system assess performance contributions system individual components 
keywords information agents machine learning user modeling human computer interaction 

research intelligent information agents assistants locate retrieve information behalf users attracted attention 
focused agents accessible world wide web research field led development interfaces software agents require access computer workstation 
clear demand information systems demanding schedules prohibit people continuous computer access 
personalized information delivery way past world wide web today 
example motivates need personalized information delivery outside world wide web 
users spend large portion day driving 
listen radio cars access medium focuses information specific interests 
user primarily interested business news order follow current stock market listen unrelated information 
locate information switch news channels pay attention time broadcasts start 
similarly user switch news channels locate information interest local sports 
goals develop foundation intelligent information agents require workstation access 
specifically envision internet protocol ip enabled portable device reads news stories user speech synthesizer 
feedback user system automatically adapt user preferences assist navigating large information spaces 
interesting aspect device users interrupt synthesizer point resulting time coded feedback easily available text applications 
long term goal research development intelligent ip enabled car radio retrieves information internet learns driver interests presents information personalized way 
general see ip enabled appliances broadcast textual information interesting alternative traditional radio broadcasts 
ip enabled devices radios take advantage lower bandwidth requirements text vs audio information large amount information transferred devices matter seconds 
furthermore textual representations open ways process evaluate recommend information leading personalized information access need access computer workstations 
believe novel information retrieval machine learning algorithms specifically geared characteristics kind human computer interaction needed achieve desired functionality 
describes design features information agent currently testbed collect user data evaluate proposed algorithms 
particular describe synthesized speech time coded feedback differ traditional relevance feedback approaches written text 
explain induction detailed user model describe agent ability revise induced model concept feedback 
evaluate proposed algorithms user data collected agent assess individual performance contributions system components 

system overview building agent learns user interests daily news stories poses challenges 
traditional information retrieval ir approaches directly applicable problem setting assume user specific defined information need 
setting case 
user query phrased new world know know 
computing satisfactory results query non trivial 
difficulty stems range topics interest user user changing interest topics 
take account novelty story interesting 
certain topic match user interests perfectly user interested story heard 
need build system acquires model user multiple interests flexible account rapid interest changes keeps track information user knows 
implemented java applet uses microsoft agent library display animated character named news reads news stories user 
applet requires microsoft internet explorer newer publicly accessible www ics uci edu 
functions accessed voice commands web user interface see 
ultimate goal speech driven agent require graphical user interfaces web medium allows system available large user base data collection testing purposes 
furthermore believe variety useful applications speech driven agent technology web 
example talking news agent reacts voice commands prove useful visually impaired 
currently agent provides access stories different news channels top stories politics world business technology sports 
user selects news channel applet connects news site internet yahoo news starts download stories 
applet multi threaded stories continue downloading background synthesizer reading typically allows filling queue stories read waiting time 
user interrupt synthesizer point provide feedback story read 
design goals system provide variety feedback options go commonly interesting uninteresting rating options 
consider intelligent information agent personal assistant news user interface gradually learns interests retrieves interesting information natural informative ways communicate preferences 
example want tell agent know certain topic request information related certain story 
ask agent reasons certain story rated interesting uninteresting just ask friend reasons particular recommendation 
summary system supports feedback options interesting interesting know tell explain 
initial training phase user ask agent compile personal news program 
goal process compute sequence news stories ordered respect user interest model 
shows system components retrieval agent recommender agent user interface 
individual component runs thread allow retrieving recommending background user listens stories 
retrieval agent task connect news site internet download latest news stories insert local story cache queue stories waiting receive relevance score 
recommender agent takes stories story cache uses current user model compute relevance score inserts story sorted recommendation queue 
user requests new story user interface take top element recommendation queue read user 
user provide feedback update current user model 
results system maintains ordered sequence news stories inserts new stories sequence soon evaluated presents currently highest ranked story user 

time coded feedback agent designed operate environments graphical user interfaces practical voice operation natural alternative 
news stories read user speech synthesizer user interrupt synthesizer point provide different forms feedback described previous section 
agent goal feedback learn model user multiple interests 
order fully exploit information provided kind feedback need algorithms specifically designed task 
substantial amount learning user preferences text documents 
scenarios users rate text documents respect interests assign binary class labels scores certain scale 
labeled documents training examples learning algorithm resulting hypothesis seen user model allows classifying new documents 
similar methodology applied spoken text important note spoken text time coded feedback contain additional information facilitate learning classification process 
believe point time user provides feedback interrupts news story informative incorporated classification algorithms 
time coded feedback incorporated classification process current system amount time user listened story implicit feedback 
underlying intuition users listen longer stories consider interesting stories interested capture form evidence 
current implementation convert user binary rating interesting vs interesting fine grained scale 
scores computed rules 
pl proportion story user heard 
story rated uninteresting score pl story rated interesting score pl user asked information score scheme assures stories rated interesting receive lower scores stories rated interesting allows differentiation different levels ratings requiring extra user 
similar techniques implicit feedback previously studied 
additional techniques time coded feedback currently investigation briefly summarized section 
internet retrieval agent story cache user model user interface recommendation queue th re ad recommender agent th re system architecture 
learning user model specific design agent user model motivated number observations requirements 
model capable representing user multiple interests different topics 
second model flexible adapt user changing interests reasonably quickly long preceding training period 
third model take account user information needs change direct result interaction information 
surprisingly aspect received virtually attention ir community 
application take account stories user heard avoid presenting information twice 
requirements led development multi strategy learning approach learns separate user models represents user short term interests represents user long term interests 
need separate models substantiated specific task hand classifying news stories 
users typically want track different threads ongoing events task requires short term information events 
addition users general news preferences modeling general preferences may prove useful deciding new story related rated event interest user 
sections describe models individually motivate conform requirements describe form comprehensive user model appropriate purposes 
modeling short term interests purpose short term model fold 
contain information rated events stories belong threads events identified 
second allow identification stories user knows 
natural choice achieve desired functionality nearest neighbor algorithm nn 
nn algorithm simply stores training examples case rated news stories memory 
order classify new unlabeled instance algorithm compares stored instances defined similarity measure determines nearest neighbor nearest neighbors 
class label assigned new instance derived class labels nearest neighbors 
utility nn algorithm previously explored text classification applications :10.1.1.21.6373
apply algorithm natural language text define similarity measure quantifies similarity text documents 
studied problem information retrieval rely commonly document representation associated similarity measure 
convert news stories tf idf vectors term frequency frequency cosine similarity measure quantify similarity vectors 
rated story converted tf idf representation stored user model 
score prediction new story computed follows 
stories closer threshold min story classified voting stories 
predicted score computed weighted average voting stories scores weight similarity voting story new story 
voters closer threshold max new story story labeled known computed score multiplied constant system assumes user heard event reported story 
story voters story classified shortterm model passed long term model see section 
nearest neighbor short term model satisfies requirements user model able represent user multiple interests quickly adapt user novel interests 
main advantage nearest neighbor approach single story new topic needed allow algorithm identify follow stories story thread 
tracking abilities nearest neighbor algorithm explored researchers similar project 
contrast learning algorithms require large number training examples identify strong pattern 
modeling long term interests purpose long term user model model user general preferences news stories compute predictions stories classified short term model 
achieve selected probabilistic learning algorithm na bayesian classifier 
na bayes shown perform competitively complex algorithms increasingly popular algorithm text classification applications 
represent news stories boolean feature vectors feature indicates presence absence word 
words appear news stories features 
explicit goal model user general preferences provide algorithm background knowledge set domain specific features words indicators commonly recurring themes daily news stories 
approximately words selected ranging countries crime disaster politics technology business sport related terms 
making na assumption features words independent class label interesting vs interesting probability story belonging class feature values class proportional class class class class easily estimated training data 
specifically multi variate bernoulli event model formulation na bayes compute estimates class class straightforward counting word class occurrences training data 
laplace smoothing prevent zero probabilities infrequently occurring words 
news story classified labeled probability belonging interesting class 
applications multi variate bernoulli formulation na bayes consider presence absence words text documents evidence probability computation 
restrict evidence presence words similar na bayes model proposed maron 
results conservative classifier requires examples classified class similar examples class prevent long term model classifying stories contain sufficient number features indicators class membership 
formally require story contain features interesting interesting order allow classification interesting likewise features interesting order allow classification interesting 
current implementation set means story contain terms indicators class 
hybrid user model hybrid user model consisting short term long term model user interests previously unseen news story classified follows story classified short term model score weighted average nearest neighbors story close known story score score small constant story classified long term model score probability estimated na bayes score default score summary approach tries short term model allows user track news threads previously rated label stories known 
story classified short term model longterm model 
long term model decides story contain sufficient evidence classified default score assigned 
current implementation set default score stories reliably classified appear high recommendation queue receive higher score stories classified interesting 

explaining recommendations goals support expressive forms dialog users agent facilitate acquisition precise user model 
achieved various feedback options described previous sections agent ability explain reasons recommendations 
systems form explanations decisions long history artificial intelligence especially context expert systems 
explanations help user understand system reasoning provide way verify validity decision 
explanation capabilities received attention context information retrieval software agents 
typically system forms model user information need uses model retrieve relevant items presents items user 
common information retrieval systems quantify relevance located information form single score user typically get form explanation justification computed score 
believe explanation main reasons led specific score useful reasons 
explanation help user decide wants inspect located item 
especially useful audio framework agent users skim located items order briefly assess relevance 
requested short explanation help user decide wants listen story 
second explanations provide direct insight induced user model 
allows user assess specific aspect user model led certain recommendation useful finding relevant information 
agent allows user critique formed explanations order direct changes induced model 
refer form interaction concept feedback 
explanation construction system recommendations scores computed hybrid user model consisting separate short term longterm models described section 
consequence different forms explanations summarize reasons story relevance 
story similar previously rated story classified short term model explanation proximity previously rated story 
agent retrieves headline closest story short term model received class label story explanation constructed 
retrieved headline construct explanations form explanation template story received high low relevance score told earlier interested closest headline likewise system assigns low relevance score assumes user familiar story content proximity explanation form constructed 
explanation template think know told earlier closest headline 
contrast story classified long term model belong class system forms explanation words influenced class decision 
feature appearing story compute influence log determine words highest influence value 
current implementation set construct explanations form 
explanation template story received high low relevance score contains words 
story received default score system explains story received default score related previously rated story contain informative words allow classification 
concept feedback users respond system explanation binary rating indicating line reasoning expressed explanation matches preferences useful useful recommendations 
system explanations correspond directly specific concepts represented user model form feedback allows direct changes induced model 
concept feedback significantly different traditional relevance feedback approaches ratings refer relevance items concepts classify items 
underlying intuition concept feedback lead potential benefits 
lead user models reflect user preferences accurately 
second lead reduction training data needed achieve certain accuracy 
third lead flexible user models useful domain assume user preferences unstable 
depending explanation template form explanation user feedback affects learned model different ways 
proximity explanation template take similar story explanation short term model explanation received negative feedback add second time explanation received positive feedback 
removing story short term model prevents contributing misclassifications 
especially useful cases users decide longer want follow thread stories previously rated interesting 
contrast adding story model allows story vote multiple times recommendations 
user provides positive feedback explanation formed proximity explanation template cases system assumes user knows story current content user model remains unchanged 
user provides negative feedback explanation increase threshold max see section small constant stories required similar rated stories classified known 
likewise max reduced system classifies news story interesting user indicates story heard 
agent reacts feedback explanations formed explanation template constructing additional artificial training example 
explanation stories classified set words indicate class membership long term model newly created training example consists simply words explanation 
new training example added long term short term model class label depends user feedback 
effect adding new example long term model essentially frequency counters determine class updated making misclassifications words 
adding example short term model dramatic effect 
consider case system explains high relevance score presence words internet web software 
user provides positive feedback explanation newly created positive training example containing internet web software assures stories containing words detected shortterm model causing story high position recommendation queue regardless remaining information story 
likewise user provides negative feedback story received high relevance score due words president congress affair negative training example added causes stories contain words filtered short term model 

evaluation order evaluate recommendation performance agent assess relative performance contributions individual components web agent prototype collect user data 
users trained system daily basis period ranging days resulting total rated news stories average stories user 
amount data lead performance estimates generalize users different collection dates allows analyze relative performance system individual components 
evaluating agent performance difficult reasons 
standard evaluation methodologies commonly machine learning literature example fold cross validation applicable scenario 
mainly due chronological order training examples learning algorithm random order skewing results 
second measure agent performance daily basis measure effects agent updated user model changing distribution news stories 
trying approximate model user interests assumed static consistent 
user going list stories time assign different labels 
chose evaluate agent performance follows 
divided user data separate training sessions corresponding user system typically training session day 
started train algorithm rated examples training session compared predictions class labels stories second training session user ratings 
incremented training set session session measured agent performance session 
averaged results users 
methodology models way system realistically training data available certain day classify stories 
addition system classification accuracy proportion correctly classified news stories common information retrieval performance measures precision recall evaluate system 
important evaluate precision recall conjunction easy optimize separately 
classifier useful purposes demand precise high recall 
order quantify single measure lewis gale proposed measure weighted combination precision recall produces scores ranging 
assign equal importance precision recall resulting definition recall precision recall precision summarizes system performance averaged users showing rapid increase classification performance training sessions 
results training sessions available subset users plot 
results users collected data training sessions revealed performance increase rapidly training sessions starts fluctuate result changing distributions daily news stories 
shows relative performance user model components 
expected hybrid approach combining short term longterm user model performs better individual approach respect classification accuracy measure 
inspection achieved performance revealed short term model tends high precision low recall 
contrast long term model higher recall short term model lower precision 
combining models allows advantage models strengths resulting higher values classification accuracy 
order evaluate contribution time coded feedback converted time coded scores boolean ratings measured resulting performance difference 
classification accuracy significant difference observed 
surprising take account measures change time coded information causes individual news stories change class membership 
time coded scores significantly change relative order stories recommendation queue 
assess magnitude effect measured system precision top suggestions 
plot shown summarizes results shows scores led precision increase 
evaluated effects concept feedback system performance 
performance differences depend number concept feedback interactions provided users difficult visualize results form learning curves 
training data provided user predict class labels stories user final training session 
measured resulting performance increase adding concept feedback interactions averaged results users 
caused accuracy increase increase 

advantage length time user listens news story begun explore potential time coded feedback 
currently exploring approaches modify text representation news story reweighting portion story user listened 
consider case user interrupts news story words read decides label message uninteresting 
clearly treat words portion story user listened differently remaining text story 
user able reach decision words assume strong indicators class membership words 
represent news stories form tf idf vectors possible artificially modify weights order assign weight words user listened 
currently implementing user interface specifically aimed visually impaired users 
intelligent information filtering techniques personalize access various types information available internet surprising potential benefits techniques visually impaired users far explored 
visually impaired users easily skim retrieved information quickly assess potential relevance information agents know user preferences interests prove invaluable 

acknowledgments daimler benz sun microsystems generous support 
users trained system assistance research project 
number tra sessions hybrid user model short term long term number training sessions system performance precision top effect time coded feedback 
allan carbonell doddington yamron yang topic detection tracking pilot study final report proceedings darpa broadcast news transcription understanding workshop virginia 
belkin user modeling information retrieval www rutgers edu belkin um oh tutorial overheads sixth international conference user modeling chia laguna sardinia 
cawsey explanation interaction 
cambridge ma mit press 
duda hart pattern classification scene analysis 
john wiley sons new york 
lang newsweeder learning filter news 
proceedings twelfth international conference machine learning lake tahoe ca 
lewis gale sequential algorithm training text classifiers 
proceedings seventeenth annual international acm sigir conference research development information retrieval london springer verlag 
lieberman letizia agent assists web browsing 
proceedings international joint conference artificial intelligence montreal august 
maron automatic indexing experimental inquiry 
journal association computing machinery 
mccallum nigam comparison event models na bayes text classification 
aaai icml workshop learning text categorization 
technical report ws aaai press 
pazzani billsus learning revising user profiles identification interesting web sites 
machine learning 
salton automatic text processing 
addison wesley 
yang evaluation statistical approaches text categorization 
information retrieval journal appear 
