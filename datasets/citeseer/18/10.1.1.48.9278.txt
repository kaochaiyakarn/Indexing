summary imagine phone directory containing names arranged completely random order 
order find phone number probability classical algorithm deterministic probabilistic need look minimum names 
quantum mechanical systems superposition states simultaneously examine multiple names 
properly adjusting phases various operations successful computations reinforce interfere randomly 
result desired phone number obtained steps 
algorithm small constant factor fastest possible quantum mechanical algorithm 

background quantum mechanical computers proposed early respects shown powerful classical computers important surprising result classical computers deepest level ultimately follow laws quantum mechanics 
description quantum mechanical computers formalized late early deutsch bb bv yao shown powerful classical computers various specialized problems 
early shor demonstrated quantum mechanical computer efficiently solve known problem known efficient algorithm classical computers 
problem integer factorization finding factors integer time polynomial updated version originally appeared proceedings stoc philadelphia pa usa pages 
applies quantum computing mundane problem information processing presents algorithm significantly faster classical algorithm 
problem unsorted database containing items just item satisfies condition item retrieved 
item examined possible tell satisfies condition step 
exist sorting database aid selection 
efficient classical algorithm examine items database 
item satisfies required condition keep track item examined 
easily seen algorithm need look average items finding desired item 
search problems computer science theoretical computer science typical problem looked examining number different possibilities see satisfy condition 
analogous search problem stated summary usually exists structure problem sorting exist database 
interesting problems concerned effect structure speed algorithm 
example sat problem asks possible find combination binary variables satisfies certain set clauses crucial issue np completeness possible solve time polynomial case possible combinations searched satisfy specified property question time polynomial possible reduce number steps finite power yield polynomial time algorithm np complete problems 
view fundamental nature search problem theoretical applied computer sci log log log fast quantum mechanical algorithm database search lov grover bell labs mountain avenue murray hill nj bell labs com ence natural ask fast basic identification problem solved assuming structure problem 
generally assumed limit items examined classical algorithm clearly take steps 
quantum mechanical systems simultaneously multiple schrodinger cat states carry multiple tasks time 
presents step algorithm search problem 
matching lower bound fast desired item identified 
show order identify desired element information structure database quantum mechanical system need steps 
number steps required algorithm constant factor fastest possible quantum mechanical algorithm 
quantum mechanical algorithms starting point think quantum mechanical algorithms probabilistic algorithms bv simulated annealing 
algorithms having system specified state distribution various states certain probability state 
step certain probability making transition state 
evolution system obtained premultiplying probability vector describes distribution probabilities various states state transition matrix 
knowing initial distribution state transition matrix possible principle calculate distribution instant time 
just classical probabilistic algorithms quantum mechanical algorithms probability distribution various states 
classical systems probability vector completely describe system 
order completely describe system need amplitude state complex number 
evolution system obtained premultiplying amplitude vector describes distribution amplitudes various states transition matrix entries complex general 
probabilities state square absolute values amplitude state 
shown order conserve probabilities state transition matrix unitary bv 
machinery quantum mechanical algorithms illustrated discussing operations needed algorithm 
creation configuration amplitude system basic states system equal second walsh hadamard transformation operation third selective rotation different states 
basic operation quantum computing fair coin flip performed single bit states simon 
operation represented matrix bit state transformed superposition states similarly bit state transformed magnitude amplitude state phase amplitude state inverted 
phase analog classical probabilistic algorithms 
comes quantum mechanics amplitudes general complex 
system states described bits possible states perform transformation bit independently sequence changing state system 
state transition matrix representing operation dimension case initial configuration configuration bits state resultant configuration identical amplitude states 
way creating distribution amplitude states 
consider case starting state states state described bit binary string 
result performing transformation bit superposition states described possible bit binary strings amplitude state having magnitude equal sign 
deduce sign observe definition matrix phase resulting configuration changed bit previously remains transformation performed 
bit binary string describing starting state bit binary string describing resulting string sign amplitude determined parity bitwise dot product transformation referred walsh hadamard transformation dj 
operation closely related operation called fourier transformation things quantum mechanical algorithms powerful classical algorithms forms basis significant quantum mechanical algorithms 
third transformation need selective rotation phase amplitude certain states 
transformation describing state system form arbitrary real numbers 
note walsh hadamard transformation state transition matrices probability state stays square absolute value amplitude state stays 

abstracted problem system states labelled states represented bit strings 
unique state say satisfies condition states assume state condition evaluated unit time 
problem identify state 
algorithm initialize system distribution amplitude states 
distribution obtained steps discussed section 
ii repeat unitary operations times precise number repetitions important discussed system state case rotate phase radians case leave system unaltered 
apply diffusion transform defined matrix follows diffusion transform implemented rotation matrix walsh hadamard transform matrix defined follows discussed section binary representation denotes bitwise dot product bit strings 
iii sample resulting state 
case unique state final state probability note step ii phase rotation transformation type discussed paragraph section 
practical implementation involve portion quantum system sensing state deciding rotate phase 
way trace state system left operation ensure paths leading final state indistinguishable interfere 
implementation involve classical measurement 
jf jf jf jf 
log ij ii wrw ij ii ii ij 
outline rest loop step ii heart algorithm 
iteration loop increases amplitude desired state result repetitions loop amplitude probability desired state reach order see amplitude increases repetition show diffusion transform interpreted inversion average operation 
simple inversion phase rotation operation discussion paragraph section unitary 
discussion show inversion average operation defined precisely unitary operation equivalent diffusion transform step ii algorithm 
denote average amplitude states amplitude th state average result operation amplitude state increases decreases operation operation 

inversion average operation 
diffusion transform defined follows proved inversion average shown 
observe represented form identity matrix projection matrix properties easily verified second acting vector gives vector components equal average components 
fact follows immediately representation unitary 
order see inversion average consider happens acts arbitrary vector expressing follows discussion component vector average components vector th component vector written precisely inversion average 
consider happens inversion average operation applied vector components equal value say approximately component different negative 
average approximately equal components approximately equal average change significantly result inversion average 
component negative start positive magnitude increases approximately approximately 
inversion average operation applied distribution com ij ii ij dv pv pv dv average average average average ponents initially components initially negative 
loop step ii section amplitude selected state inverted phase rotation valid quantum mechanical operation discussed paragraph section 
inversion average operation carried 
increases amplitude selected state iteration formally proved section theorem 
theorem state vector step ii algorithm follows state satisfies amplitude remaining states amplitude change steps algorithm lower bounded steps theorem immediately follows exists number repetitions loop step ii exceed probability system particular state proportional square amplitude follows probability system desired state system sampled desired state probability greater section quotes argument possible identify desired record steps 

proofs section proves system discussed section valid quantum mechanical system converges desired state probability proved previous section unitary theorem proves implemented sequence local quantum mechanical state transition matrices 
proved theorems converges desired state 
mentioned diffusion transform defined matrix follows way local transition matrix transitions state states 
walsh hadamard transformation matrix defined section implemented product unitary transformations local transition matrix 
defined theorem phase rotation matrix clearly local 
implemented section local transition matrix bit 
theorem expressed walsh hadamard transform matrix rotation matrix defined follows proof evaluate wrw show equal discussed section binary representation denotes bitwise dot product bit strings written identity matrix observing matrix defined section easily proved ww evaluate wr standard matrix multiplication definition fact follows elements matrix equal sum matrices gives dk dk ij ii wrw wrw ij ii ii ij ij ij mm wr ad ab bc cd bc ad theorem state vector follows state amplitude remaining states amplitude applying diffusion transform amplitude state amplitude remaining states proof definition diffusion transform section follows known unitary transformation total probability conserved proved particular case diffusion transformation theorem 
corollary state vector follows state amplitude remaining states amplitude real numbers general amplitudes complex negative positive applying diffusion transform positive numbers 
proof theorem assuming follows negative assumption negative positive similarly follows theorem condition satisfied condition satisfied corollary state vector follows state satisfies amplitude remaining states amplitude applying diffusion transformation new amplitudes respectively derived theorem proof theorem follows similarly adding previous equations corollary follows 
theorem state vector step algorithm follows state satisfies amplitude remaining states amplitude change steps algorithm lower bounded steps proof denote initial amplitudes amplitudes phase inversion step diffusion transform step theorem follows follows corollary assumption theorem positive follows kl kl dk dk dk assuming non trivial follows order prove observe phase inversion step furthermore follows facts discussed previous paragraph corollary positive 

fast possible find desired element 
matching lower bound suggests possible identify desired element fewer steps 
result states quantum mechanical algorithm running steps sensitive queries possible queries answer flipped affecting behavior algorithm 
order correctly decide answer sensitive queries take running time see assume states algorithm returns right result state satisfies desired condition 
answer queries flipped affecting result giving incorrect result case answer query flipped 
gives direct proof result tight bounds showing algorithm percent fastest possible quantum mechanical algorithm 

implementation considerations algorithm simpler implement compared quantum mechanical algorithms reasons operations required walsh hadamard transform second conditional phase shift operation relatively easy compared operations required quantum mechanical algorithms 
ii quantum mechanical algorithms walsh hadamard transform simpler implement large scale fourier transform 
iii conditional phase shift easier implement algorithm mode function point computed retrieved form memory 
eliminate storage requirements quantum memory 
iv case elements retrieved table computed discussed iii principle possible store data classical memory sampling system need quantum mechanical 
system consideration needs undergo quantum mechanical interference bits memory 
needed mechanism system able feel values various datapoints happens interaction free measurements discussed detail paragraph section 
note variation algorithm arranged leave trace path followed classical system system undergo quantum mechanical interference 

observations 
possible quantum mechanical systems interaction free measurements duality properties photons ev 
presence absence object deduced allowing small probability photon interacting object 
probably photon interact just allowing small probability interaction measurement 
suggests search problem possible find object examining objects just allowing certain probability examining desired object happens algorithm 

mentioned search algorithm knowledge problem 
exist fast quantum mechanical algorithms structure problem hand shor factorization algorithm shor 
possible combine search scheme shor quantum mechanical algorithms design faster algorithms 
alternatively possible combine efficient database search algorithms specific properties database 
dh example application 
median applies phase shifting techniques similar develop fast algorithm median estimation problem 
dk 
algorithm discussed assumes unique state satisfies desired condition 
easily modified take care case multiple states satisfying condition required find 
ways achieving possibility repeat experiment checks range degeneracy redesign experiment checks degeneracy solution range various log repetitions procedure ascertain exists states satisfies condition 
discusses detail 
ii possibility slightly perturb problem random fashion discussed high probability degeneracy removed 
scheme discussed vv possible modify algorithm solves problem unique solution solve np search problem general 

acknowledgments peter shor introduced field quantum computing ethan bernstein provided lower bound argument stated section gilles brassard constructive comments helped update stoc 

bb brassard oracle quantum computing journal modern optics vol december pp 

bennett bernstein brassard vazirani strengths weaknesses quantum computing published siam journal computing 
boyer brassard hoyer tapp tight bounds quantum searching proceedings lanl print quant ph 
beckman john efficient networks quantum factoring phys 
rev lanl preprint quant ph 
computer physical system microscopic quantum mechanical hamiltonian model computers represented turing machines journal statistical physics pp 

bv bernstein vazirani quantum complexity theory proceedings th acm symposium theory computing pp 

deutsch deutsch quantum theory church turing principle universal quantum computer proc 
royal society london ser 
pp 

dh hoyer quantum algorithm finding minimum lanl preprint quant ph 
dj deutsch jozsa rapid solution problems quantum computation proceedings royal society london pp 

ev quantum mechanical interaction free measurements foundations physics pp 

quantum seeing dark scientific american nov pp 

median grover fast quantum mechanical algorithm estimating median lanl print quant ph 
mulmuley vazirani vazirani matching easy matrix inversion combinatorica pp 

shor shor algorithms quantum computation discrete logarithms factoring proceedings th annual symposium fundamentals comp 
science focs pp 

simon simon power quantum computation proceedings th annual symposium fundamentals comp 
science focs pp 
vv valiant vazirani np easy detecting unique solutions theor 
comp 
sc 
pp 

yao yao quantum circuit complexity proceedings th annual symposium foundations computer science focs pp 


