machine learning approach musical style recognition roger dannenberg thom david watson school computer science carnegie mellon university cs cmu edu perception understanding music computers focused low level perceptual features pitch tempo 
demonstrates machine learning build effective style classifiers interactive performance systems 
analysis explaining techniques hand coded approaches consistently failed 
describe reliable real time performance style classifier 
perception understanding music computers offers challenging set problems 
date focused low level perceptual features pitch tempo computer music applications benefit higherlevel understanding 
example interactive performance systems designed react higher level intentions performer 
unfortunately discrepancy ideal realization interactive system musician machine carry high level musical discourse realization musician little trigger stored sound events 
discrepancy caused part difficulty recognizing high level characteristics style performance reliability 
experience suggested relatively simple stylistic features playing playing playing difficult detect reliably 
may appear obvious detect styles musical performance filled contrast 
example energetic performances contain silence slow passages may rapid runs grace notes passages may variety confusing patterns 
general higherlevel musical intent appears chaotic unstructured low level terms midi performance data 
avoiding higher level inference common composition research efforts 
research literature filled articles pitch detection score event processing 
interactive systems respond simple features duration pitch density intervals relatively little discussion higher level music processing 
short reasons believe style recognition difficult 
machine learning shown improve performance perception classification systems including speech recognizers vision systems 
studied feasibility applying machine learning techniques build musical style classifiers 
result research primary focus 
initial problem classify improvisation styles consisting short separated sound events 
added additional styles blues quote play familiar tune high low 
exact meaning terms important 
really matters ability performer consistently produce intentional different styles playing 
ultimate test suppose want communicate machine improvisation 
communicate different tokens information 
question play style identify probability machine perceive token 
crucial classification responsive real time 
arbitrarily constrained classifier operate seconds 
new style 
overlapping training examples extracted sec segment 
new style 
recorded data 
time overlapping training examples derived seconds performance 
data collection study problem created set training data recorded actual performances 
far experiments trumpet performances recorded midi midi converter machine readable data dat tape audio data 
devised software help collect data 
performer watches computer screen instructions 
fifteen seconds new style displayed performer performs style style displayed 
style changes abrupt throw seconds data allowing mental gear shift new style settle 
style retain seconds data 
th second data discarded 
want classifier exhibit latency seconds seconds data 
midi data divided overlapping intervals durations seconds shown 
supervised training need label interval training data 
labels displayed performer recording decided performer rate data afterward sure sample realizes intended style 
ratings give richer description data example performance somewhat additional information machine learning approaches 
recorded examples styles resulting second training examples 
ideally rate second example style require separate ratings 
reduce number ratings rated second segments assigned rating derived training examples 
individual rating shared training examples 
training data rating random order 
classification techniques constructed classifiers naive bayesian linear neural network approaches 
describe basic ideas 
build classifier identified low level features midi data averages standard deviations midi key number duration duty factor pitch volume counts notes pitch bend messages volume change messages 
pitch differs key number pitch bend information included 
duty factor means ratio duration inter onset interval 
bayesian classifier naive bayesian classifier assumes features uncorrelated normally distributed 
true approach works anyway 
vector features know classification 
assumptions bayes theorem shown class mean feature vector normalized distance normalized distance euclidean distance scaling dimension standard deviation delta gamma oe indexes classes indexes features means oe standard deviations 
linear classifier linear classifiers compute weighted sum features different set weights class 
linear classifier algorithm assumes features normally distributed uncorrelated 
linear classifier tries separate members class non members cutting feature vector space hyperplane 
depending features division may may successful 
neural networks approaches tried neural networks powerful incorporate nonlinear terms strong assumptions feature probability distributions 
cascade correlation architecture consists initially input output units number bayesian linear neural classes network table percentage correct classifications different classifiers 
equivalent linear classifier 
training hidden units added connections inputs outputs previously added hidden units 
effectively hidden layers node 
hidden unit applies non linear sigmoid function weighted sum inputs 
output class outputs regarded boolean values predict membership class 
results classifiers produced excellent results classes impressive results classes 
measured performance training classifier data classifying remaining 
data groups overlapping correlated training examples entire groups went training validation sets 
repeated times different partitions data example classified 
classifier outputs classes report total percent correct answers 
surprised reliability classifiers 
table shows numerical results 
training time bayesian linear classifiers occurred seconds neural net took hours 
implemented real time version naive bayesian classifier 
circular buffer stores seconds midi data second features computed classification 
fifth classification silence added case number notes zero 
execution time ms classification computation cost negligible 
note misclassifications class case involve quote style expect require knowledge familiar melodies encoding melody features 
discussion demonstrated machine learning techniques build effective efficient reliable style classifiers interactive perfor number notes examples histogram number notes sample style 
number notes average duty cycle versus number notes scatter plot 
mance systems 
wondered systems worked hand coded approaches failed 
wondered circumstances machine learning systems fail 
answer question attempted visualize data constructing histograms scatter plots 
features look projections dimensions 
shows histogram number notes feature 
number notes second common input parameter performance systems high correlation concept fast 
shows considerable overlap histograms class ratings mutually exclusive 
histograms show similar overlap classifications single feature useful 
shows scatter plot dimensions average duty cycle number notes 
classes separate 
argue machine learning necessary 
build classifier machine learning need identify features 
individ confidence threshold correct total correct classed total confidence threshold increases total number classified examples decreases number misclassified examples decreases faster ratio correctly classified classified examples increases 
ual features study different pairs features consider 
pairs features lead classifiers pair known parameters chosen accurately 
casually guessing features combinations plugging reasonable parameters testing fail 
contrast machine learning approaches automatically take account large body dimensional training data lead effective classifiers 
worth noting hand tuned original features allowed inference algorithms determine effective data 
classification stylistic intent relatively simple machine learning algorithms class case allows spend time problems representation 
live performance experience class classifier live performance provided new subjective evaluation 
classifier fast effective reliable data predict 
experiments shown performer style feature vector distribution changes performer interacts music 
training examples captured context 
words style isolation differs style performed interactive composition 
problem live performance false positives misclassifications erroneously imply performer playing particular style 
may better report wrong guess 
experiment naive bayesian classifier suggest simple confidence measures dramatically reduce false positives 
recall classifier decisions normalized distances means 
distance means classes nearly equal confidence decision reduced 
simply reject classifications distance fraction distance 
type analysis statistical approach 
illustrates reduction false positives technique 
summary machine learning techniques powerful approach music analysis 
constructed database training examples train systems classify improvisational style 
features classification simple parameters extracted midi data straightforward way 
styles classified consist range performance intentions high low quote blues 
styles classified better accuracy 
classifiers trained return styles accuracy 
confidence measures introduced reduce number false positives 
required study classification problems feature selection feature learning 
believe applications music performance composition analysis education mention just 
expect sophisticated music understanding systems 
bishop neural networks pattern recognition 
clarendon press 
fahlman lebiere cascade correlation learning architecture 
tech 
rep cmu cs school computer science carnegie mellon university pittsburgh pa feb 
rowe interactive music systems 
mit press 
rubine automatic recognition gestures 
tech 
rep school computer science carnegie mellon university 
