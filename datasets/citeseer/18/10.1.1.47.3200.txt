evaluation state model feature interactions au department computer science university waterloo waterloo ontario 
second workshop feature interactions proposed statebased model specifying features proposed reachability analysis algorithms detecting various types feature interactions 
evaluation approach respect bellcore benchmark feature interactions 
feature sub program adds functionality existing software system 
feature interaction occurs addition new feature affects behavior existing services features 
interaction features feature behaves way way feature absent 
software developers associate feature interactions unintended interactions features thought unrelated 
purpose feature modify enhance functionality features definition interact new feature expected interact features services functionality intentionally modified new feature 
problem detecting feature interactions twofold want validate specified interactions detect unspecified interactions 
second workshop feature interactions proposed graphical tabular notations state transition model specifying functional behavior telephone services features 
algorithms composing feature specifications detecting certain types interactions 
developed ideas suite prototype tools support automated detection feature interactions 
evaluate approach feature specification interaction detection respect benchmark feature interactions published bellcore 
attempted specify services listed benchmark plain old telephone service pots 
addition able specify features benchmark able detect interactions hope eventually able detect interactions 
specification model behaviors features modelled state transition machines stms transition triggered single input event 
feature specified independently features 
multiple stm composed form stm represents reachability graph 
composition tests detecting interactions run reachable state 
research supported natural sciences engineering research council canada matching funds nortel 
table descriptions events assertions events assertions descriptions token events token token agent token events tokens passed agent token token remote token events tokens passed remote user state transition events enable event feature ready active activation event feature active state 
event feature requests transition 
event feature forces transition 
event feature transition sibling events 
parallel transition event feature sibling machine state token token parallel input event tokens passed sibling feature bcm event start new stack basic service bcm feature internal events event internal event internally generated event feature wildcard state token ffla assertion raised property asserted true continue asserted explicitly un asserted assertion lowered property un asserted specification notation features specified state transition machines tabular notation 
row table represents transition old state new state due occurrence input event 
side effect transition output event issued assertion raised assertion assumption 
feature control behavior second feature ways communicate second feature signal passing token events 
alternatively control behavior monitoring rejecting modifying state transitions second feature activation event statechange events 
descriptions events assertions defined notation table 
accordance advanced intelligent network ain architecture originating call called originating call model simply ocm receiving call called terminating call model simply tcm modelled separate communicating stms 
feature intended modify behavior basic call write specification modifies ocm different specification modifies tcm 
specifications call forwarding feature tables 
call forwarding incoming cf modifies behavior call received subscriber invoked cf feature modifies tcm table 
call forwarding outgoing cf spawns forwarded call imitates ocm call subscriber invoked cf forwarded number 
cf suspends tcm initial call state simulating tcm functionality 
cf suspends ocm forwarded call state simulating ocm functionality 
data passed cf cf parallel tokens 
user calls subscriber forwarded calls user cf machines act intermediaries pass signals levels specification composition architecturally call configurations modelled different levels feature stack call call group 
level model divided environment system 
system refers part model particular interest enclosed dotted table specification call forward calls incoming leg call ready tcm receiving receiving 
tcm tcm ocm 
tcm exception 
exception tcm exception null tcm null null cf cf tcm tcm cf cf tcm null cf cf cf exception cf exception tcm exception exception null tcm null null forwarding cf cf cf tcm null null alerting cf tcm cf connected cf 
tcm null null tcm exception cf null cf 
tcm null null tcm specification call forward calls outgoing leg call state input output event newstate ocm setup 
ocm ocm orig originated ocm exception exception cf null cf 
ocm null disconnect null ocm cf cf cf ocm null originated cf cf exception cf null cf 
ocm null disconnect null cf cf exception cf null cf 
ocm null disconnect null cf cf cf cf cf ocm null cf cf ocm null alerting cf answered connected cf exception cf exception cf null cf 
ocm null disconnect null connected cf cf cf ocm null connected cf cf cf ocm null cf cf ocm null tcm system system environment basic service feature basic call model system environment feature feature level state transition events sibling events sibling events sibling events token events token events state transition events token events token events feature basic call model feature feature feature 
system environment stack level ocm tcm sibling events sibling events remote token events events events agent token agent token system user environment user call level rectangle diagrams please see figures examples environment refers elements model system interacts outside dotted rectangle 
architectural level focuses particular aspect configuration 
feature level describes behavior individual feature service 
service stand functionality complete 
shows model plain old telephone service pots provides basic call processing activities 
systems interest ends pots ocm tcm 
environment system human user system agent connection service remote user 
basic call model interacts agent remote counterpart 
feature hand addition modification existing service stand 
feature modifies behavior basic service acting mediator basic call model environment basic call model 
information passed basic call model environment seen possibly modified feature passed basic call model 
stack level describes behavior single call represents composition features activated call 
feature top stack said highest priority stack intercept inputs environment modify outputs environment 
reason feature bottom stack basic service said lowest priority 
system stack communication features consists token events state transition events 
token events represent data passed adjacent features stack 
state transition events represent requests transition new state notifications transition higher priority features control lower priority features rejecting sibling events system events agent token user events agent token events agent token user environment events agent token user call group level modifying state transition requests 
stack composition level communication features stack processed issued token events state transition events resolved 
call level describes behavior call 
composition stacks representing call connected communication channel 
caller callee communicate passing remote token events designated remote user 
remote token events stack passed input stack 
behavior multiple calls involving common users depicted call group represents composition call specifications see 
feature involved multiple calls call waiting way calling representative feature specification user stack shown grey figures features called sibling features communicate sibling events 
detection interactions composition reachable state tested determine interaction occur state 
composition detection algorithms implemented able automatically detect types interactions control modification data modification resource contention unreachable interactions 
provided basis detecting fifth type interaction assertion violation analysis algorithm currently implemented 
examples interactions discussed 
examples taken bellcore benchmark discussed section example numbers referenced 
control modifications control modification interaction occurs feature affects flow control feature 
done explicitly forcing second feature transition new state possible features execute feature stack implicitly intercepting modifying introducing data sent second feature 
control tokens features communicate passing tokens 
token events trigger features transitions behaviors features altered intercepting tokens passed features 
feature stack receives token pass unchanged feature pass modified token feature consume token passing 
passing received token allows features react token 
consuming token effect prevents features reacting token 
example hold feature user press hold button put receiver hook disconnecting ocm tcm denies req exception tcm control modifications origin origin ocm cnd tcm needs data modifications call 
essentially hold intercepts disconnect token preventing basic call model receiving disconnect request call 
type interaction detected feature feature stack ready input token high priority feature consumes alters token reaches features stack 
control features state transitions feature control feature behavior denying modifying transition request 
feature transition permission obtained features higher priority 
higher priority feature receives state transition request lower priority feature permission deny permission force requesting feature alternate transition 
type interaction detected state transition request denied modified 
state transition requests events passed features executing stack search interaction composition stack 
side effect disallowing state transition output events output tokens associated transition occur 
type interaction detected denied modified state transition output tokens 
example call waiting automatic callback call waiting cwt enables user receive answer second call phone busy 
achieved preventing terminating call model tcm second call entering state exception sending busy token caller 
cwt determine facilities exist support call instruct tcm set call 
automatic callback acb helps caller eventually establish connection party currently busy 
user calls gets busy signal activate acb monitor phone line 
hangs switch ring picks switch automatically ring set connection 
suppose user acb user cwt shown 
calls talking user busy able activate acb feature stack receive busy token stack 
control modification interactions 
explicit interaction cwt denying state transition tcm transition exception state 
second implicit interaction occurs busy token output denied state transition sent 
data modifications data modification interaction occurs token received feature modified 
feature receives token ability modify values 
question mark indicate token value modified 
data modification interaction detected feature accepts token contains symbol 
example call number delivery blocking call number delivery call number delivery cnd allows callee see caller phone number 
call number delivery blocking modifies caller number wca tcm bridge bridge resource contentions ocm cf cf cf cf cf cf cf tcm tcm ocm ocm tcm reachability ken real number delivered 
suppose user calls user cnd 
feature modifies number stack receives token origin token origin please see 
point data modification interaction detected 
resource contentions resource contention interaction occurs number requested resources greater number resources available 
detected counting number resources currently user call process 
number allocated resources equal number available resources additional request result resource contention interaction 
example way calling call waiting way calling wc call waiting cwt require resource known bridge 
wc uses bridge support origination second call cwt uses bridge support receipt second call 
switch allocates bridge telephone line card 
suppose user subscribes cwt wc please see 
suppose talking uses cwt accept phone call resource contention occur subsequently attempts invoke wc 
reachability reachability interaction occurs state feature specification unreachable composition 
detected comparing set reachable states composition 
reachable state appear unreachable intermediate state composition 
commonly state unreachable transition state explicitly denied input event occurs 
example call forwarding call forwarding suppose user call forwarding cf forwarded calls user suppose cf forwarded calls user calls call forwarded forwarded forwarded see 
interaction detected reachability interaction normally reachable states underlying call models reached 
assertion violations assertion violation interaction occurs set currently raised assertions unsatisfiable 
reachable state composition algorithm collects set assertions raised different calls system 
currently defining assertion language implementing algorithm checks truth set assertions 
example originating call screening call forwarding originating call screening ocs checks number screening list cf cf ocs user tcm ocs ocm ocm user tcm user ocs assertion violation number list connection established 
call forwarding cf forwards incoming calls number 
suppose user subscribes ocs cf see 
forward calls number screening list ocs 
call cf connected forbidden number similarly user subscribes cf forward calls calls call forwarded cases ocs thwarted number tested screening list 
specifications cf helps establish physical connections assertion logical connection 
ocs screens number assumes user involved logical connection user number second user screened dom ocs ran ocs assertion ocs raised set assertions evaluate true 
bellcore benchmark feature interactions cameron lin velthuijsen proposed benchmark feature interactions called bellcore benchmark intended evaluate compare different approaches feature interaction problem 
interactions classified complexity number users number network components involved causes violation assumptions limitations network support problems distributed systems 
specification benchmark services features distinguish feature service service provides stand operations feature provides added functionality service operate approach directed problem specifying switch provided customer features features extend functionality pots 
services features provide operations administration maintenance oam billing networking isdn features scope 
intention concentrate functional behavior features 
timing requirements data values specified abstractly 
example exist number timing requirements ringing timeout dialing timeout release timeout events call processing 
specify ordinary internal events explicit timing constraint values 
able specify services features described bellcore benchmark specification notation 
behaviors features descriptions dms meridian digital library understanding features behavior university telephone system 
features benchmark services modify listed table 
purposes benchmark study classified voice mail personal communication services pcs calling hotel rooms billing services 
long distance calling considered part pots 
classified rest examples features various services 
table list features services benchmark subscripts abbreviations caller operator invoke recall active st leg nd leg feature abbreviation service pots answer call ac pots area number calling anc pots automatic callback pots automatic recall pots call forwarding cf cf pots call number delivery cnd pots call number delivery blocking pots call transfer operator feature ct ct pots call waiting pots credit card calling pots distinctive ringing dr pots multi location business service mbs ed pots extension dialing originating call screening ocs pots terminating call screening tcs pots way calling wca pots extension dialing ain feature billing billing message rate charge billing calling hotel rooms personal communication services voice mail services benchmark study results benchmark study summarized table 
examples appear order bellcore benchmark examples interactions involving single user single component examples involve single user multiple components examples involve multiple users single component examples involve multiple users multiple components examples interactions customer features system features 
description interactions column indicates level specification describes example modelled notation possible 
example interaction answer call ac call waiting cwt detected stack level terminating call model tcm bottom stack ac middle cwt top stack configuration cwt highest priority 
example modelled call level 
user originating call screening ocs calls user distinctive ringing dr 
direction arrow indicates direction call caller callee dotted line separates different users 
similar notation depict call group level configuration 
user ocs calls call forwarded call forwarding cf user call group calls involved calls calls columns indicate able specify features example able detect interaction 
example type interaction detected reason specified detected 
abbreviations names features table 
evaluation approach bellcore benchmark interactions detect control modification interactions data modification interaction table benchmark interactions detected 
description interactions detect detect specify detect stack tcm ac control stack ocm wca control stack tcm wca resource stack ocm wca control stack tcm tcs reachability stack ocm ocs anc reachability group ocm ct ocm ocs tcm oper 
tcm ct assertion violation credit card calling voice mail services scope mbs ed ed scope group tcm cf ocm ocs tcm ocm cf assertion violation cwt personal communication services scope call ocm ocs tcm dr assertion violation group ocm cf ocm ocs tcm tcm cf assertion violation call ocm tcm control group ocm ocm tcm ocm tcm tcm control group ocm ocm ocm tcm tcm wca tcm control call tcm cnd ocm data group tcm cf tcm cf ocm cf tcm cf ocm cf ocm reachability call ocm tcm race condition long distance calling message rate charge scope calling hotel rooms scope ain feature billing scope ain services pots scope resource contention reachability interactions assertion violations 
descriptions types interaction section 
remaining interactions analyzable specify services features example 
interaction analyzed specifications contain necessary information reveal interaction 
specification notation model mentioned section developed notation specify customer switch features 
interactions involve features services specification notation designed specify 
example different segments long distance calling abstracted away model 
detect interaction segment connections long distance billing 
example involves features provide similar functionality different services extension dialing provided service specify 
abstraction timing constraints advantage specifying timing requirements abstractly specification analysis efficient 
timing constraints specify duration time reachability analysis analyze unreachable paths 
example callee hangs underlying call models state callee picks phone timeout occurs 
reachability analysis considers possible paths execution analysis includes paths features perform transitions react events timeout event occurs 
reality limit number tasks features perform time period 
analysis may include number unrealistic paths composition 
example describes interaction automatic callback acb automatic recall arc 
acb monitors line busy callee notifies caller callee hangs 
arc allows user call back caller 
suppose user acb user arc calls busy activates acb 
hangs acb notify activates arc time acb arc attempt establish connection features determine parties trying reach busy users choice want acb arc re activate features may try establish connection 
scenario occur repeatedly due race condition calling simultaneously 
specify timing constraints reachability analysis detect race conditions detect kind interaction model 
lack goto construct feature ability force lower priority feature specific state transition limitations capability controlling feature know current state controlled feature ask controlled feature transition exists specification 
words concept goto construct controlling feature request controlled feature transition arbitrary state specification 
primary reason decision goto construct violate semantics state transition machines model 
consequences decision features specify 
consider credit card calling feature example 
user press originate call entering credit card password 
model specification credit card calling need force originating call model ocm transition active back 
transition exist ocm specification credit card calling service force ocm transition 
input event synonyms analysis tools incorporated mechanism allows define token events different names semantically 
multiple designers introduce different terminologies signal potential cause interactions 
synonym mechanism helps resolve double definition terminology problem 
allowable events difficulty encountered notation provide specification non allowable events 
example terminating call screening tcs number screened internal events underlying call model accepted feature stack call proceed screening done 
events tcm tcm context current environment explicitly disallow specification 
explicitly prohibiting inputs state cumbersome 
increases complexity resulting specification 
example specification call forwarding cf see table requires additional transitions explicitly ignore prohibited token events agent 
useful incorporate construct defining set non allowable events state notation 
may addressed 
architectural model advantage specifying features independently combined order analysis 
new features analyzed existing features system re specifying system 
new features need specified 
stack call call group models different aspects call processing analyzed respect single user connecting users multiple inter related users 
state transition explosion problems advantage performing reachability analysis possible sequence actions analyzed 
explosion number states transitions reachability graph versus number states transitions individual specifications 
composition features interactions produce large reachability graph 
example degree wc cwt interact depends invoked user 
user wc user cwt number transitions composed reachability graph enormous exist possible interleavings wc cwt wc activated time connected independently cwt cwt switch calls regardless state wc 
number transitions resultant call group composition number transitions call group involving features wc cwt 
technique reducing search space incorporate partial orders reachability analyzer 
related state transition approaches literature deal feature interaction detection problem 
feature associated set state description primitives behavior described terms effects event primitives set rules 
state primitives rules statebased model 
approaches mechanism inter feature communication 
events generated outside system 
sort rule application mechanism non deterministic situations occur composition 
way behaviors features may changed 
main difference approaches communication protocol features users 
signals passed environment system different parties system system environment 
enables detect data modification interactions resource contention interactions approaches 
type interactions detect deadlock consistency problems arise rule application mechanism 
suspect correspond reachability interactions control modification interactions model 
ohta propose manual verification methods dealing interactions due timing number retries different words events primitives semantically 
detect types interactions mechanism tracking resource usage input event synonyms respectively 
may able incorporate manual inspection methods detecting timing interactions specifications 
lotos specification model consists feature specifications feature intentions 
system features intention verifier viewed process process algebra joined parallel composition 
feature intentions similar assertions describe asserted assumptions properties features expect hold 
interaction detected feature intention violated system 
method uses reachability analysis generate execution sequences check violated intentions 
due state explosion problem search strategies tools 
interactions detected manual inspection traces produced tools 
experience state explosion problem automated detection method feasible size call group configurations needed analyze far 
building block approach similar 
adopt ideas specifying features independently individual features building blocks build different call scenarios 
building block approach procedural level specifications describe feature operate similar state transition machine specifications behavioral level specifications describe properties feature exhibit temporal logic formulas similar assertions 
model checking verify desired behavior procedural specifications check temporal logic properties hold composition 
types interactions detected include reachability control modification assertion violation interactions 
researchers bt laboratories sdl model features detect interactions 
service plane model provides user view system validate feature specifications identify interactions 
network model composition service feature specifications similar call group inspect concurrent activation features multiple users user activate feature 
identification interactions appears manual inspection simulated executions models 
simulation thorough reachability analysis successfully identified previously unknown interactions technique 
approach geared specification analysis functional behaviors customer switch features 
bellcore benchmark means evaluating approach 
able specify customer switch features discussed bellcore benchmark notation able detect benchmark interactions hope detecting finish implementation assertion violation analysis 
initially chose concentrate detecting interactions switch features variety complexity interactions bellcore benchmark pleasantly surprised able detect interactions 
clear detect remaining interactions specify basic services benchmark examples 
approach limited due inability specify analyze data values timing constraints assumptions behavior environment 
addition concerned degree requirements specifications contain design decisions 
turn attention assertion approaches 
au 
evaluation state model feature interactions 
master thesis department computer science university waterloo 
blom jonsson kempe 
temporal logic modular specification telephone services 
feature interactions telecommunications systems pages 
blom bol kempe 
automatic detection feature interactions temporal logic 
feature interactions telecommunications systems pages 
bostrom 
feature interaction detection resolution delphi framework 
feature interactions telecommunications systems pages 

automated detection feature interactions 
feature interactions telecommunications systems pages 
cameron 
lin velthuijsen 
feature interaction benchmark 
feature interactions telecommunications systems pages 
logrippo 
specifying features analysing interactions lotos environment 
feature interactions telecommunications systems pages 
godefroid 
partial orders improve automatic verification methods 
cav 
ohta 
new proposal feature interaction detection elimination 
feature interactions telecommunications systems pages 
kelly king 
feature interaction detection sdl models 
ieee globecom 
kelly king masson 
service validation testing 
feature interactions telecommunications systems pages 
lin 
lin 
building block approach detecting resolving feature interactions 
feature interactions telecommunications systems pages 
northern telecom 
dms meridian digital library issue edition 
ohta harada 
classification detection resolution service interactions telecommunication services 
feature interactions telecommunications systems pages 

reachability analysis feature interactions service oriented software systems 
master thesis department computer science university waterloo 

reachability analysis feature interactions progress report 
issta 
logrippo 
representing verifying intentions telephony features data types 
feature interactions telecommunications systems pages 
