termination term rewriting semantic labelling zantema utrecht university department computer science box tb utrecht netherlands mail cs ruu nl new kind transformation term rewriting systems trs proposed depending choice model trs 
labelled trs obtained original labelling operation symbols possibly creating extra copies rules 
construction remarkable property labelled trs terminating original trs terminating 
labelled version operation symbols may rules infinitely termination easier prove labelled trs original 
provides new technique proving termination making classical techniques path orders polynomial interpretations applicable non simplifying trs 
requirement having model slightly weakened yielding remarkably simple termination proof system subst describing explicit substitution calculus 
functional program computing factorial described trs follows fact fact termination program difficult see recursive call fact value argument strictly decreases 
forget semantics terms representing numbers proving termination trs easy 
left hand side rule embedded corresponding right hand side system simply terminating standard techniques recursive path order rpo fail 
technique proving termination trs making semantics trs 
technique doing semantic path order 
seen generalization rpo discussed section 
describe technique trs having semantics introduce labelling operation symbols trs depending semantics arguments 
way termination original trs equivalent termination labelled trs 
labelled trs operation symbols original trs rules infinitely 
original trs obtained labelled trs removing labels removing multiple copies rules 
labelled trs greater sense original cases termination labelled version easier prove termination original 
propose proving termination trs proving termination particular labelled version new method 
method call semantic labelling 
instance factorial system label symbol fact value argument 
obtain infinitely distinct operation symbols fact symbol fact operation symbols change 
labelled trs obtained original replacing rule infinitely rules fact fact natural number easy prove termination infinite labelled system rpo interpretation naturals proving termination original factorial system 
globally distinguish ways technique 
way choose model reflects original semantics trs factorial example 
second way choose artificial model reflecting syntactic properties recognized rewrite rules making technique purely syntactical 
way obtain termination proofs systems 
approach closely related typing operation symbols proving termination resulting order sorted system discussed 
approaches proving termination non simply terminating systems syntactic way 
technique semantic labelling restrict plain trs 
section show construction preservation termination behaviour holds term rewriting modulo equations 
semantic labelling serves completion equational specification original equations hold model want holds critical pairs emerging completion process critical pairs labelled oriented termination order labelled terms 
section extension theory requirement having model weakened 
model left hand side rule equal corresponding right hand side extension left hand side allowed greater corresponding right hand side 
applications semantic labelling outside scope pure term rewriting process algebra logic programming explicit substitution calculus described system subst 
papers devoted exclusively termination subst 
gave simpler proof proving simple termination subst technique distribution elimination 
section give simpler proof simple termination subst semantic labelling 
semantic labelling provide termination proofs proving bounds reduction lengths 
labelling length reduction change 
bound reduction lengths labelled version bound prove bound unlabelled version 
semantic labelling holds properties confluence sense confluence trs follows confluence labelled version 
know examples confluence proofs simplified observation 
section sketch alternative proof main theorem characterization termination monotone algebras 
section compare semantic labelling semantic path order 
section sketch labelling leads generalization kruskal theorem starting point purely syntactic rpo orderings having power prove termination systems simply terminating 
basic theorem set operation symbols having fixed arity 
define algebra consist set carrier set arity function fix algebra set variable symbols 
oe define term evaluation oe inductively oe oe oe oe oe 
lemma oe 
oe oe ffi proof induction structure introduce labelling operation symbols choose corresponding non empty set labels 
new signature defined ff jf arity defined arity operation symbol called labelled contains element 
unlabelled set containing element left implicit case shall write choose map arity map describes function symbol labelled depending values arguments interpreted unlabelled function left implicit 
extend labelling operation symbols labelling terms defining lab theta inductively lab oe lab oe oe oe lab oe lab oe oe 
labelling terms satisfies property 
lemma oe 
define lab oe 
lab oe lab oe ffi proof induction structure variable lemma follows definition obtain lab oe lab oe oe oe lab oe lab oe lab oe ffi lab oe ffi oe ffi oe ffi lab oe ffi lab oe ffi labels equal due lemma arguments equal due induction hypothesis 
terms equal 
trs say algebra model oe oe oe rules follows definition lemma oe oe model rewrite steps oe fix algebra corresponding sets functions trs define trs consisting rules lab oe lab oe oe rules note finite finite 
lemma states reduction transformed reduction lemma model satisfy lab oe lab oe oe proof rule obtain lemma lab oe lab oe ffi lab oe ffi lab oe lab oe ffi lab oe ffi rule lab oe lab oe 
prove lab oe lab oe model know oe oe 
obtain lab oe oe lab oe oe lab oe oe lab oe lab oe usual trs defined terminating admit infinite reductions delta delta delta literature terminating trs called strongly normalizing noetherian 
arrive main theorem 
theorem model trs choose non empty set labels map arity define 
terminating terminating 
proof assume allows infinite reduction 
removing labels yields infinite reduction hand assume allows infinite reduction delta delta delta choose oe arbitrarily 
lemma allows infinite reduction lab oe lab oe lab oe delta delta delta section alternative proof theorem proposed 
wonder similar theorems hold interesting properties confluence weak confluence weak normalization 
due lemma trivial counterpart removing labels reduction yields reduction difficult prove confluent weakly confluent weakly normalizing satisfies property 
know examples observations helpful proving properties typical case proof obligations similar complicated giving list examples termination proofs theorem briefly discuss notion simple termination 
set operation symbols define emb trs consisting rules ng 
trs defined simply terminating emb terminating 
literature equivalent definitions appear 
finite equivalent notion simplifying trs 
infinite natural change definitions slightly 
scope suffices see terminating trs simply terminating definition know standard techniques rpo knuth bendix order status see polynomial interpretations fail trs simply terminating 
examples start examples finite model syntactical observations 
typical syntactical observation rule delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta forced obtain distinct labels choosing images model distinct 
example 
simplest example terminating trs simply terminating intuitively termination system difficult step number operation symbols argument term head symbol decreases 
idea transformed directly semantic labelling define model note model interpretations left hand side right hand side equal 
choose identity choose unlabelled 
rule obtained choosing oe second choosing oe 
termination easily proved counting number symbols 
recursive path order polynomial interpretations suffice proving termination 
theorem conclude original system terminating 
example 
consider trs 
system simply terminating 
proving termination want observation left hand side second argument distinct right hand side equal 
distinction choosing need model distinct simple 
obtain labelled system easily proved terminating standard technique 
example 
system 
force symbols rule get distinct labels choosing model defining am 
labelled system 

proved terminating rpo give lexicographic status choose greater symbols choose 
examples model corresponds natural semantics rewrite system 
example 
factorial system choose gamma 
choose xy fact 
clearly model system labelling fact naturals choosing fact get labelled version fact fact line stands infinitely rules 
interpretation proving termination fact example 
valid definition function max compute maximum natural numbers max max max 
definition transformed trs max max true false true false max system simply terminating adding rule emb obtain infinite reduction max false false false false false false false false false max false false delta delta delta max proved terminating semantic labelling 
model choose natural numbers identify true false respectively 
precisely max true false max easily checks model max 
find appropriate labelling 
labelling motivated intuition switches max vice versa go forever 
maximal number switches reduction false max false max true shall label max way occurrences occurrences max sequence get distinct labels 
possible choice smax max max max max true false true false max false max false max proved terminating rpo precedence max max true false rewriting modulo equations section show theorem extends rewriting modulo equations 
theorem model trs choose non empty set labels map arity define section 
ff 
set equations hold terminating modulo terminating modulo proof assume allows infinite reduction modulo delta delta delta removing labels yields infinite reduction modulo hand assume allows infinite reduction modulo delta delta delta choose oe arbitrarily 
similar proof lemma proves lab oe lab oe satisfying observation lemma conclude allows infinite reduction modulo lab oe lab oe lab oe lab oe lab oe delta delta delta section application theorem 
note operation symbols required unlabelled 
restriction essential theorem hold introducing extra restrictions 
instance system choose model positive integers interpreted addition commutative 
choose infinite labelled system easily proved terminating modulo commutativity polynomial interpretation original system terminating modulo commutativity 
theorem extended allow contain commutativity labelled symbols required symmetric symbols 
equations labelled symbols clear extended 
quasi models section give extension theorem sense required model 
motivation consider trs introduced showing completeness modular property clearly system closely related example section 
allow non trivial model models term interpretation theorem helpful proving termination system extension section easily proved 
model label sets sets 
require founded posets 
maps weakly monotone coordinates 
required model trs meaning interpretation left hand side rule equal interpretation corresponding right hand side 
required quasi model trs meaning interpretation left hand side rule interpretation corresponding right hand side 
presenting theorem give definitions lemmas 
algebra provided partial order algebra operation weakly monotone coordinates precisely operation symbols satisfying 
set provided founded partial order arity map weakly monotone coordinates 
define lab section 
trs say algebra quasi model oe oe oe rules section define trs consisting rules lab oe lab oe oe rules trs decr defined consist rules satisfying denotes strict part lemma quasi model satisfy oe oe oe proof rule assertion follows lemma definition quasi model 
oe oe prove oe oe oe follows definition fact weakly monotone coordinates 
lemma quasi model satisfy oe term lab oe decr lab oe remarked middeldorp order necessarily founded proof rule obtain lemma lab oe lab oe ffi lab oe ffi lab oe assertion holds 
write composition decr lab oe lab oe 
prove lab oe lab oe lemma fact weakly monotone coordinates obtain oe oe 
lab oe oe lab oe decr oe lab oe oe lab oe lab oe theorem quasi model trs decr choice terminating decr terminating 
proof assume decr allows infinite reduction 
order founded system decr terminating 
infinite reduction decr contains infinitely steps 
removing labels yields infinite reduction hand assume allows infinite reduction 
applying lab fixed substitution infinite reduction yields infinite reduction decr lemma 
proof similar proof theorem 
fact theorem considered special case theorem choosing discrete order special case requirements weak monotonicity trivially fulfilled notions model quasi model coincide trs decr empty 
consider trs introduced section 
constant serves bottom element rewritten way 
elements essentially distinct 
choose model consist elements incomparable 
choosing am quasi model 
define 
easily checks weakly monotone coordinates 
consists rules decr consists rule system decr easily proved terminating choosing interpretation positive integers 
theorem original system terminating 
appendix termination trs describing algebra communicating processes proved transforming trs 
transformation particular case construction proof preservation termination particular case theorem 
wonder essential theorem add system decr labelled system 
consider example consists rule choose clearly quasi model choose identity clearly monotone 
system consists rules terminating choose interpretation positive integers 
decr terminating allows infinite reduction delta delta delta similar examples show weak monotonicity essential 
termination subst section give application theorem 
ffi delta binary symbols unary symbol id constants 
consider trs ffi 
ffi delta delta ffi 
ffi delta ffi ffi ffi ffi ffi id ffi ffi id ffi delta ffi delta named oe essentially system subst 
system describes process substitution combinatory categorical logic 
corresponds currying ffi composition id identity delta pairing projections 
original termination proof subst complicated holds newer proof 
papers devoted termination proof particular system 
result implies termination process explicit substitution untyped calculus overview approach explicit substitution 
technique distribution elimination developed prove simple termination oe define trs consist rules oe embedding rules ffi ffi delta delta clearly simple termination oe equivalent termination prove termination means theorem 
quasi model choose natural numbers including ffi delta max easily checks quasi model symbol ffi labelled labelled value 
precisely choose ffi natural numbers ffi system decr reads ffi 
ffi delta values delta ffi 
ffi delta ffi values ffi ffi ffi ffi values ffi values ffi values delta delta ffi ffi values choosing founded precedence ffi ffi ffi ffi delta ffi ffi termination easily proved lexicographic path order 
theorem yields termination simple termination oe monotone algebras section describe alternative proofs theorems characterization termination fact line semantic labelling discovered 
founded monotone algebra defined algebra underlying set provided founded strict partial order algebra operation strictly monotone coordinates precisely operation symbol note difference partial orders occurred section operations weakly monotone strictly monotone 
define partial order follows ff ff ff term evaluation algebra defined section 
intuitively means interpretation variables interpreted value greater characterization termination 
theorem trs terminating non empty founded monotone algebra rule rule say compatible characterization sketch alternative proofs theorems fact line semantic labelling discovered 
theorem special case theorem concentrate theorem 
interesting direction theorem proving termination termination decr 
assume decr terminating 
admits compatible founded monotone algebra 
define founded monotone algebra choosing theta carrier set carrier set model carrier set 
order define 
clearly founded 
operations choose 
checked straightforwardly compatible terminating 
similar proof theorem theorem quasimodel version theorem generalizing theorem theorem 
semantic path order section argue typical applications semantic path order treated simpler powerful semantic labelling 
terms reflexive transitive 
write write quasi ordering called wellfounded strict partial order founded 
semantic path order spo terms defined recursively follows spo conditions holds ffl spo ffl spo ffl fs spo ft spo means spo spo spo multiset ordering induced spo basic theorem motivating order theorem trs terminating founded terms holds terms oe spo oe holds rules substitutions oe 
founded quasi ordering set operation symbols defined corresponding semantic path order called recursive path order rpo 
practical applications observations useful 
define subterm relation recursively write ae ae may conclude spo ae may conclude spo part theorem easily follows observation defining typical example termination proof semantic path order 
simply terminating 
semantic path order defined follows 
choose obvious model consists natural numbers interpreted define head symbol oe oe oe defined section 
check proof obligations theorem concluding system terminating 
similar ingredients give termination proof system semantic labelling choose label naturals define resulting labelled system 

give termination proof labelled system rpo 
structure complete termination proof essentially dershowitz labelling split definition layers 
forced path order approach prove termination labelled system example interpretation naturals defined provides termination proof 
approach symbol interpreted commutative associative operation labelled system terminating modulo commutativity associativity 
model operation commutative associative 
theorem conclude original system terminating modulo commutativity associativity 
approach easily proves induction depth term depth reductions length greater constant semantic path order provide tools deriving bounds 
research introduced semantic labelling new technique proving termination term rewriting systems 
starting point model trs model left hand side rewrite rule value corresponding right hand side 
operation symbol term labelled way depending interpretation arguments model 
applied rewrite rules 
proved labelled trs terminating original trs terminating 
illustrated new technique proving termination examples 
typical case trs termination proved simply terminating labelled trs proved terminating rpo interpretation natural numbers 
globally distinguish ways technique semantical syntactical 
section saw requirement having model trs essentially weakened 
technique works termination modulo equations 
technique semantic labelling hard automate depends knowledge semantic model heuristics choosing model syntactic way 
promising approach labelling model avoid drawback 
choose labelling operation symbol term labelled head symbols direct subterms original signature finite labelled signature finite 
applying basic version kruskal theorem labelled signature generalization kruskal theorem finite signatures derived consist rewrite rules gamma operation symbols contexts quasi order 
replace system emb introduced section obtain basic version kruskal theorem 
restrictive emb theorem powerful basic version 
example succeeds ordering approach 
abadi cardelli curien evy 
explicit substitutions 
journal functional programming 
arts zantema termination logic programs labelled term rewrite systems 
tech 
rep uu cs utrecht university may 
bellegarde lescanne termination completion 
applicable algebra engineering communication computing 
bergstra klop algebra communicating processes abstraction 
theoretical computer science 
essentially labelling independently proposed isabelle calls typing curien hardin ios strong normalization substitutions 
proceedings mathematical foundations computer science eds vol 
lecture notes computer science springer pp 

dershowitz termination rewriting 
journal symbolic computation 
vol 
informatik 
springer 
fokkink zantema basic process algebra iteration completeness equational axioms 
tech 
rep ruu cs utrecht university 
appear computer journal 
monotonic semantic path order 
tech 
rep university ulm 
termination order sorted rewriting 
algebraic logic programming kirchner levi eds vol 
lecture notes computer science springer pp 

hardin proof termination rewriting system subst ccl 
theoretical computer science 
kamin evy generalizations recursive path ordering 
university illinois 
kaplan simplifying conditional term rewriting systems unification termination confluence 
journal symbolic computation 
kurihara modularity simple termination term rewriting systems 
journal ips japan 
lescanne rewrite orderings quasi orderings 
journal symbolic computation 
middeldorp zantema simple termination revisited 
tech 
rep ruu cs utrecht university december 
accepted cade 
embedding patterns associated recursive path ordering 
proceedings rd conference rewriting techniques applications dershowitz ed vol 
lecture notes computer science springer pp 

unavoidable sets trees generalize kruskal theorem 
journal symbolic computation 
steinbach extensions comparison simplification orderings 
proceedings rd conference rewriting techniques applications dershowitz ed vol 
lecture notes computer science springer pp 

toyama counterexamples termination direct sum term rewriting systems 
information processing letters 
zantema termination term rewriting interpretation 
conditional term rewriting systems proceedings third international workshop ctrs rusinowitch emy eds vol 
lecture notes computer science springer pp 

full version appeared report ruu cs utrecht university 
zantema termination term rewriting interpretation type elimination 
pages appear journal symbolic computation 
