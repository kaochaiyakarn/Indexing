max min ant system local search traveling salesman problem thomas stutzle holger hoos technical university darmstadt department computer science group 
darmstadt germany informatik th darmstadt de ant system general purpose algorithm inspired study behavior ant colonies 
cooperative search paradigm applicable solution combinatorial optimization problems 
introduce max min ant system improved version basic ant system report results application symmetric asymmetric instances known traveling salesman problem 
show max min ant system significantly improved extending local search heuristics 
results clearly show max min ant system property effectively guiding local search heuristics promising regions search space generating initial tours 
ant system algorithm originally introduced new cooperative search algorithm inspired behavior real ants 
ants able find solutions shortest path problems food source home colony 
communicate pheromones aromatic substances variable quantities mark trails 
ant tendency choose specific path positively correlated intensity trail 
pheromone trail evaporates time looses intensity pheromone laid ants 
ants choose certain path lay pheromones intensity trails increases trail attracts ants 
behavior ant colonies imitated extent ant system simple agents called ants communicate mechanism inspired pheromone trails 
search metaphor applied solution combinatorial optimization problems :10.1.1.26.1865
tested improved version ant system max min ant system mmas symmetric asymmetric instances traveling salesman problem tsp taken tsplib 
rest organized follows self contained introduce tsp ant system section ii 
section iii introduce improved version ant system mmas computational results 
showing mmas significantly improved adding local search section iv discuss positive effect cooperation ants section iv 
section sum experimental results give outlook 
corresponding author accessible ftp ftp uni heidelberg de pub tsplib 
ii 
ant system tsps tsp represented complete weighted directed graph ng set nodes cities theta vg set arcs 
weight function associating positive integer weight ij arc 
aim find route minimal length visiting city exactly 
symmetric tsps distances nodes independent direction ij ji pair nodes 
general asymmetric tsp atsp pair nodes ij ji tsp np hard optimization problem applications extensively studied literature 
standard testbed algorithms try find near optimal solutions np hard combinatorial optimization problems 
reason apply extensions ant system problem class 
solve tsps ant system uses pheromone trails ij associated arc 
initially ant set randomly selected city begins constructing valid tour tour visiting city exactly starting initial city 
tour successively built choosing node probabilistically probability distribution proportional ij ff ij delta fi ij visited ij local heuristic function ant system defined ij ij value high distance nodes small 
probability distribution selection city biased parameters ff fi determine relative influence trail strength heuristic information 
keep track cities visited ant maintains tabu list actual partial tour stored 
ants constructed complete tour calculated corresponding tour length trail updated 
ant allowed lay total constant quantity pheromone 
trail intensities updated formula interpreted distance nodes detailed description ant system algorithm reader referred :10.1.1.26.1865
induce probability distribution divide numbers common denominator 
complicates formula attention essential part 
new ij ae delta old ij delta ij ae persistence trail gamma ae corresponds evaporation number ants 
amount delta ij equal arc ant tour zero 
frequently arcs arcs contained short tours receive high amount pheromone selected cycles algorithm 
interpreted learning arcs 
means arc participates short tours 
basic steps tour construction trail update simply repeated number iterations cycles 
important part ant system treatment trail intensities 
trail intensities high ants choose arc high trail intensity 
practice long term effect trail intensities successively reduce size effective search space concentrating search relatively small number arcs 
characterize amount exploration ant system performs branching factor introduced 
value mean branching factor close arc exiting node high selection probability practically new solutions explored 
refer situation stagnation search 
iii 
max min ant system performance ant system enhanced allowing best ant update trails cycle 
disadvantage strategy early stagnation search tour improvements impossible 
stagnation occurs trails arcs grow high ants construct corresponding tour 
mmas allow best ant update trails 
alleviate problems concerning early stagnation introduced explicit maximum minimum trail strengths arcs name max min ant system 
maximum minimum trail limits chosen problem dependent way depending average arc length details refer 
way influence trail intensities limited 
lower limit min probability specific arc chosen may small greater zero 
trail limits alleviate problem associated early stagnation search especially long runs leading higher degree exploration 
trail strengths mmas initialized max arcs 
iteration evaporation reduce trail strength factor ae 
trail arcs participating best refer complete cycle tour trail update iteration similar generation genetic algorithms 
table results problems international contest evolutionary computation runs problem 
iterations symmetric tsps 
quality percentage deviation form known optimal solution 
best best result obtained avg best average tour length runs 
problem best quality avg best oe eil tsp kroa tsp tsp ry atsp ft atsp kro atsp ftv atsp tours allowed increase intensities maintain high level 
trail strength bad arcs decreases slowly arcs maintain high level trail strength selected ants 
performance mmas improves considerably ant system 
despite maximum minimum trail limits long runs mmas show stagnation behavior 
mean branching factor approaches low values new tours built leading limited exploration possibly better tours 
avoid added trail smoothing mechanism case stagnation search indicated mean branching factor adjust trail intensities proportional update trail intensity increased proportionally difference max current trail intensity ij arc increase max gamma ij advantage proportional update completely forget trails learned far 
effect increasing trail intensities probability distribution selection node influenced way exploration new tours higher 
call approach smoothing trails differences high low trail intensities pronounced smoother 
approach solution quality longer runs increased significantly 
give indication performance respect solution quality mmas results mmas tsp table tsps taken international contest evolutionary optimization 
easier comparison existing improved variants ant system give results obtained ant colony system acs best existing extension ant system problems see table ii 
problems extension atsp asymmetric tsp problems extension tsp symmetric tsp 
number associated instance number cities problem kro atsp comprises cities 
parameter settings ae ff ftv atsp chose 
tables detail best result obtained runs aver table ii solution quality ant colony system acs independent runs 
table reproduced 
problem best avg best oe eil tsp kroa tsp tsp ry atsp ft atsp kro atsp ftv atsp table iii performance mmas additional candidate sets 
iterations symmetric tsps 
averages independent runs 
problem best quality avg best oe eil tsp kroa tsp tsp att tsp ry atsp ft atsp kro atsp ftv atsp age solution standard deviation oe 
percentages deviation form known optimal solution 
problems ftv atsp tsp average performance mmas achieved independent runs better standard deviation solution quality generally smaller corresponding results acs 
disadvantage algorithms high run time 
basically algorithm constructs tours iteration construction tour complexity leading total complexity delta iteration mmas 
usually choose equal number nodes results complexity 
run time grows fast increasing problem size 
lower run time mmas considered possibility adding candidate sets 
reducing computation times far modification positive influence performance mmas 
extent observed larger problems table iii 
effect adding candidate sets notable iterations allowed time limits run time mmas see section iv 
remind problems optimal tour surprisingly low number nearest neighbors 
problem instance pcb tsp cities optimal solution subgraph pr tsp cities subgraph nearest neighbors 
plausible addition candidate sets positive influence performance mmas 
note average results mmas table iii better ones obtained acs see table ii 
acs best solutions better mmas 
iv 
local search mmas max min ant system interpreted randomized restart procedures iteratively tries construct solution combinatorial optimization problems 
difference simple restart algorithms solutions constructed parallel trail intensities communication mechanism iterations restart mechanism biasing iterations promising regions search space 
extension kind algorithm algorithm addition local search phase improve constructed solutions 
local search improve performance genetic algorithms application ant system 
reason adding local search algorithms mmas twofold hand want enhance performance adding local search yielding earlier detection high quality solutions guide learning mechanism directly 
hand hope mmas able construct initial tours local search phase near optimal tours 
apply local search mmas iteration 
section especially investigate issue local search added mmas especially ants allowed perform local search 
consider basically possibilities 
ants allowed perform local search iteration 
possibility allow iteration best ant improve current tour local search 
additionally choose number ants mmas adding local search 
experimental investigation version constant number ants number ants increased proportionally problem size 
allow ants perform local search constant number ants larger problem instances number local searches high 
refer different versions follows ls version ants ants allowed perform local search best ls version constant number ants best allowed perform local search mmas ls version number ants proportional problem size best ant performs local search 
symmetric tsps implemented called opt heuristic involves exchange edges 
opt directly applicable direction arcs traversed considered 
specific opt move allows insertion arcs reversing direction partial tour 
refer form opt atsp reduced opt 
local search may implemented note mmas local search number ants increased proportionally problem size yield reasonable performance 
opt move partial tour traversed opposite direction 
length partial tours calculated leading high run times 
table iv mmas additional opt symmetric tsp reduced opt atsp 
different versions mmas local search considered 
runs stopped delta delta steps 
average solution quality calculated runs 
best version specific problem instance indicated bold face numbers 
problem ls best ls mmas ls kroa tsp tsp lin tsp pcb tsp att tsp rat tsp atsp ry atsp ft atsp kro atsp ftv atsp different pivoting rules 
best improvement heuristic best possible neighborhood move selected 
especially larger problems involves high computation times considered improvement pivoting rule improving move performed 
results version symmetric tsps version 
symmetric tsps additionally restricted set possible opt moves nearest neighbor subgraph 
experimental results section aim assess relative value different ways local search may added mmas 
results obtained fixed number steps complexity proposed second international contest evolutionary optimization 
number steps limited delta delta const symmetric tsp number cities tsp instance const 
report results obtained values const see table iv vi 
reason stopping runs values const limit number steps relative order variants performance may change 
investigate performance different versions mmas local search problem instances section iii additionally larger instances symmetric tsps 
parameter settings determined preliminary runs different kinds algorithm chosen considering performance longer runs algorithms 
run algorithm known allowed number steps low parameter settings better ones 
small number steps allowed see table iv problem atsp version best ls performs best problems 
allow see section iv cpu time limits 
compared version mmas ls large differences due different values ae best table mmas additional opt symmetric tsp reduced opt atsp 
runs stopped delta delta steps 
give average solution quality different versions mmas local search 
problem ls best ls mmas ls kroa tsp tsp lin tsp pcb tsp att tsp rat tsp atsp ry atsp ft atsp kro atsp ftv atsp table vi mmas additional opt symmetric tsp reduced opt atsp 
runs stopped delta delta steps smaller symmetric tsps 
problem instances pcb att rat runs stopped delta steps 
give average solution quality different versions mmas local search independent runs 
problem ls best ls mmas ls kroa tsp tsp lin tsp pcb tsp att tsp rat tsp atsp ry atsp ft atsp kro atsp ftv atsp steps see table table vi changes 
case problem instances version mmas ls gives best average solution quality see 
smallest problem atsp version ls largest instance ftv tsp version ls best 
results symmetric tsps slightly different 
easy solve problem instance kroa tsp version ls best 
interestingly version ls performs best problem instances instances lin tsp pcb tsp att tsp 
largest instances mmas ls best 
interesting closer look possible reasons behavior algorithms 
case ls specific problem local searches performed having effect trails best local minimum update trails 
general better initial tours lead better local minima 
reasonable restrict application local search best initial tours done example version best ls 
short runs algo versions longer runs 
mmas ls values ae higher best ls learning slower 
verified mmas ls smaller values ae performance slightly worse 
table vii greedy random tour construction subsequent local search 
results obtained delta delta steps pcb att delta steps 
quality refers percentage deviation average solution quality known optimal solution runs 
symmetric tsps 
kroa lin pcb att quality ry ft kro ftv quality rithm version best ls best possible choice 
longer runs allowed version cases outperformed mmas ls ls 
reason twofold 
case mmas ls simply better choose best initial tour higher number possible initial tours 
case ls symmetric tsps run needs time initial tours initial tours subsequent local search 
case sensible allow ants perform local search 
idea improve versions proposed start ants allow iteration best ant improve tour 
high quality solutions increase number ants allow ants perform local search 
table vii indicate results obtained greedy tour construction heuristic 
greedy tour construction heuristic obtained straight forward way setting equation ff 
note obtain heuristic constructs random initial tours 
value produced best results far better random tour construction nearest neighbor initial tours 
note proved nearest neighbor tour construction heuristic obtained 
comparing table vi table vii observe variants mmas clearly better results obtained improvement relatively higher symmetric tsps 
note results table vii far better usually method comparing algorithm random tour construction subsequent local search 
performance time constraints give indication run times algorithm assess relative value different strategies improve mmas performed additional experiments time constraints see table viii 
compared solution quality mmas candidate sets mmas mmas candidate sets mmas versions proposed local search 
seen mmas obtain high quality solutions time 
severe time constraints tours possible best ls mmas ls 
experiments performed sparc workstations ss 
table viii results tsp time constraints 
time gives cpu time allowed 
average solution quality independent runs 
allowed cpu times sec 
eil tsp sec 
kroa tsp sec 
tsp sec 
lin tsp 
variant eil kroa lin mmas mmas ls best ls mmas ls time perform iterations learn trails 
problem alleviated extent candidate sets tours constructed faster iterations candidate sets may interpreted learning aid mmas choosing possibly arcs 
faster detection tours mmas possible lower values ae higher values fi start algorithm 
additional local search improved solution quality restricted time far 
strategies add local search mmas clear winner 
cooperation improves local search cooperation ants helps basic ant system variations significantly improve performance :10.1.1.26.1865
show true add local search phase improve solution ants 
consider case ants perform local search fixed number tour constructions local searches allowed 
choose number ants number iterations theta vary number ants 
ant performs local search updates trails 
ants ant best local minimum allowed update trails 
results table iv problem ry atsp indicate local search cooperation ants remains helpful 
ants provide performance giving considerably better performance ants 
interesting note solution quality decreases ants 
reason iterations performed learn trails 
compare performance mmas local search greedy tour construction local search phase section iv mmas local search performs significantly better 
applications local search obtained runs average tour length best local minimum 
interestingly ant better results obtained see table iv 
table ix parameter settings ant system ry atsp averages tries ae ff mmas additional opt local minima iterations best avg best oe research max min ant system extension ant system introduced 
max min ant system yields significant improvements performance ant system performs level performance acs cases giving better average performance 
feature shared mmas acs strategy best ant updates trails iteration algorithm 
differences mmas acs mainly way premature stagnation search prevented 
mmas uses bounds allowed values trail intensities provides additional mechanism smoothing trails prevent early stagnation 
furthermore extended mmas adding local search phase demonstrated solution quality mmas significantly improved 
combined system outperforms local search restart far shows mmas effective guiding local search heuristic 
additionally investigated possibilities add local search mmas 
aware ant system combined local search phase 
experiments reported show mmas local search outperforms ant system additional local search 
apart ant system different heuristics applied tsp 
claim approach compete specialized tsp algorithms iterated lin kernighan see 
results clearly indicate general purpose heuristic approach mmas high quality solutions tsp obtained 
furthermore mmas proved useful guiding local search algorithms 
large potential improve performance mmas plus local search sophisticated local search heuristics tsp lin kernighan see exploiting directly specific problem characteristics euclidean tsps 
interesting issue development study techniques automatic adjustment important parameters mmas 
context evolutionary approaches promising approach 
application ant system limited tsps seen plan investigate encouraging results mmas tsp carry problem classes :10.1.1.26.1865
max min ant system especially combined local search heuristics promising tool providing adaptive framework solution hard combinatorial optimization problems 
acknowledgments marco dorigo anonymous reviewers constructive comments helped improve 
thomas discussions topic help 
bersini dorigo gambardella 
results international contest evolutionary optimisation 
technical report tr iridia iridia universit libre de bruxelles 
boese kahng 
new adaptive multi start technique combinatorial global optimization 
operations research letters 
colorni dorigo maniezzo 
distributed optimization ant colonies 
proceedings ecal european conference artificial life pages 
elsevier publishing 
dorigo 
optimization learning natural algorithms 
phd thesis politecnico di milano 
dorigo gambardella 
ant colony system cooperative learning traveling salesman problem 
technical report iridia universit libre de bruxelles 
dorigo maniezzo colorni :10.1.1.26.1865
ant system optimization colony cooperating agents 
ieee transactions systems man cybernetics part 
feo resende 
greedy randomized adaptive search procedures 
journal global optimization 
freisleben merz 
genetic local search algorithm solving symmetric asymmetric traveling salesman problems 
ieee conference evolutionary computation icec pages 
ieee press 
gambardella dorigo 
solving symmetric asymmetric tsps ant colonies 
ieee conference evolutionary computation icec 
ieee press 
gambardella dorigo 
ant reinforcement learning approach traveling salesman problem 
proceedings twelfth conference machine learning pages 
morgan kaufmann 
johnson 
local optimization traveling salesman problem 
proc th colloquium automata languages programming volume lncs pages 
springer verlag 
lawler lenstra kan shmoys 
traveling salesman problem 
john wiley sons 
maniezzo dorigo colorni 
ant system applied quadratic assignment problem 
technical report iridia universit libre de bruxelles belgium 
martin otto felten 
large step markov chains tsp incorporating local search heuristics 
operations research letters 
reinelt 
tsplib traveling salesman problem library 
orsa journal computing 
reinelt 
traveling salesman computational solutions tsp applications volume lncs 
springer verlag 
stutzle hoos 
improving ant system detailed report max min ant system 
technical report aida fg intellektik th darmstadt aug 
aarts 
van laarhoven pesch 
genetic local search algorithms traveling salesman problem 

schwefel manner editors proceedings st international workshop parallel problem solving nature number lncs pages 
sv 
