games semantics programming languages samson abramsky department computer science university edinburgh mathematical models computation calculus pram played key role development software technology programming languages design analysis algorithms 
generation models computation functional character abstracted behaviour program computation function 
appropriate abstraction era batch processing provided basis formalization correctness programs respect specifications computational complexity algorithmic problems 
information technology progressed batch processing multitasking operating systems distributed systems today internet 
focus correspondingly shifted stand programs systems computation interaction 
stand programs computing functions seen special cases wider class behaviours components complex system concurrently executing agents interact achieve global effect 
macro scale description evidently fits today distributed transactions internet micro scale equally true functional computations ultimately realized software hardware 
challenge find models computation take interaction basic ingredient combine sufficient expressive power yield faithful descriptions wealth phenomena arising contemporary developments sufficient mathematical structure tractability provide basis formal analysis systems 
additional important goal address seriously issue doing fundamental science complex interacting systems 
fundamental character challenge indicated observation 
notions function set algorithm available shelf mathematics logic computer science 
contrast adequate pre existing theory processes interaction information flow second generation models build 
basic task precisely give non trivial analysis concepts 
game semantics game semantics fairly lengthy history logic pioneering done lorenzen lor 
basic idea interpret formula person game played proponent asserting thesis opponent seeking refute proof formula winning strategy proponent 
significant contributions joyal joy organized conway games category blass bla gave game semantics girard linear logic 
joint radha jagadeesan aj number key ideas introduced ffl dictionary concepts game semantics process models computation player proponent interpreted system modelled opponent environment 
interaction system environment modelled idea play game 
significance game semantics computational model apparent models interaction intrinsic fashion 
fact game semantics seen key refinement process models previously considered refinement distinction system environment explicit key eliciting mathematical structure 
apparently simple step proved unreasonably effective 
ffl distinction precise technical links constructions game semantics process models 
importantly composition strategies roughly playing strategy formalized parallel composition plus hiding process interpretation cut elimination linear logic previously proofs processes abr 
proved effective tractable formalization basic tool subsequent fine grained analysis models games 
ffl important difference previous literature logic game semantics insistence giving free standing thoroughly semantic compositional account 
trivial matter blass game semantics non associative composition example 
insistence semantic approach analyzing structure categories games fundamental 
ffl tools result full completeness multiplicative fragment linear logic proved 
important result basic paradigm established 
traditional completeness theorems logic focussed characterizing provability validity model class models 
focus point view computation proof theory proofs mathematical objects mere fact provability 
idea full completeness model purely semantic means independently syntax element model denotation proof stated terms fullness functor free category syntax name 
result plausible game semantics provide powerful tool addressing full abstraction problems semantics programming languages 
full completeness considerable interest logic fact spawned growing literature full completeness results similar fragments linear logic respect variety models ho loa bs 
full abstraction pcf motivated full completeness results compelling interest re examine best known open problem semantics programming languages full abstraction problem pcf new tools provided game semantics 
pcf higher order functional programming language modulo issues strategies forms fragment programming language higher order procedures includes reasonably expressive object oriented language 
aspect full abstraction problem personally interesting construct syntax independent model element denotation program note analogy full completeness definition turn motivated part aspect full abstraction 
problem originally formulated general nonsense model quotient get fully model original sense 
seminal papers pcf milner plotkin appeared mil plo important done full abstraction problem proved possible construct fully model syntax independent means 
fully models pcf game semantics constructed independently abramsky jagadeesan malacaria ajm hyland ong ho 
striking illustration effectiveness tools provided game semantics making fine grained analysis subtle computational notions previous attempts 
effect models interpreted higher order functional programs certain interactive processes strategies certain games corresponding types pcf 
new example milner mappings calculus calculus 
new precise characterization exactly processes image interpretation characterization terms local compositional properties key ones history freeness innocence constraint information available strategy stage computation expressing control flow followed properly nested stack discipline 
properties local properties single runs plays plays time 
prove isolated result 
semantic cube past years substantial development application games semantics programming languages taken place 
organized semantic cube suggested am elaborated marktoberdorf lectures 
discuss dimensions diamond cube 
idea space programming languages articulated family extended typed calculi 
gives rise syntactic cube origin purely functional language various orthogonal extensions considered local state ref types non local control operators call cc exceptions 
corresponding semantic cube highly constrained model give fully model pcf extends richer functional languages origin various language extensions mirrored relaxation various independent semantic constraints languages capture purely functional model 
particular local state captured simply allowing fully history sensitive strategies non local control captured relaxing bracketing constraint 
series results am am am lai hy shown correspondence syntactic semantic cubes exact sense semantic models fully corresponding languages 
remarkable pected feature results case definability model extended language proved technique factorization theorems 
shows strategy larger constrained space factors constrained strategy particular generic unconstrained strategy 
case local state strategy interpreting non local control call cc 
seen kind semantic normal form immediately yields definability model extended language reduction definability restricted language 
original result pcf proves lynch pin range results richer languages 
strachey programme put results context worth recalling programme mathematical theory programming languages mapped pioneer christopher strachey ms 
strachey specific goal give precise mathematical account modern programming language provide rigorous basis software engineering 
reasonable restatement programme current terms give fully model standard ml better meta language adequate describe standard ml 
goal reach years appearance strachey monograph methods needed build fully model functional subset meta language lacking getting fully model local state seen difficult problem modulo fully model pcf 
landscape transformed results game semantics 
way completing version strachey programme stated 
joint kohei honda guy mccusker extended analysis local state general types resulting fully model call value calculus general ref types 
major remaining step analysis core ml 
combining impressive progress student jim laird analyzing control axis semantic cube goal obtaining fully model core ml sight 
structure factorization theorems respect sub models accompanying results possible give comprehensive highly articulated account entire space programming languages purely functional fragment full core ml 
analysis general types considerable interest 
carries force mobility context milner calculus 
particular interest model quite different character previously proposed names calculus 
analyzed terms information flow strategy connecting readers writers 
ramifications remain explored 
ajm abramsky jagadeesan malacaria 
full abstraction pcf 
submitted publication 
am abramsky mccusker 
linearity sharing state 
algol languages ed 
hearn tennent birkhauser 
am abramsky mccusker 
full abstraction idealized algol passive expressions 
submitted publication 
am abramsky mccusker 
call value games 
proceedings csl 
aj abramsky jagadeesan 
new foundations geometry interaction 
information computation 
aj abramsky jagadeesan 
games full completeness multiplicative linear logic journal symbolic logic vol 

abr abramsky 
proofs processes 
theoretical computer science 
abr abramsky 
retracing paths process algebra 
concur concurrency theory th international conference 
montanari sassone eds 
springer verlag 
burn hankin abramsky 
strictness analysis higher order functions 
science computer programming 
agn abramsky gay nagarajan 
interaction categories foundations typed concurrent programming 
proceedings marktoberdorf summer deductive program design broy ed 
springer verlag 
agn abramsky gay nagarajan 
specification structures types concurrency 
logics concurrency structure vs automata proceedings banff higher order workshop birtwistle moller eds 
springer verlag 
abr abramsky 
axioms full abstraction full completeness 
submitted publication 
ar abramsky 
sproc final coalgebra 
submitted publication 
bla blass 
game semantics linear logic 
annals pure applied logic 
bs blute scott 
linear semantics 
annals pure applied logic 
hy honda yoshida 
game theoretic analysis call value computation 
proceedings icalp 
ho hyland 
ong 
fair games full completeness multiplicative linear logic mix rule 
unpublished manuscript 
ho hyland ong 
full abstraction pcf 
submitted publication 
joy joyal 
sur la th eorie des deux 
des sci 
math 
du quebec 
lai laird 
full abstraction functional languages control 
proceedings lics 
loa loader 
linear logic totality full completeness 
proceedings lics 
lor lorenzen 
logik und 
congr 
internat 
di vol 
firenze 
mccusker 
games full abstraction functional meta language recursive types 
ph thesis university london 
ms milne strachey 
theory programming language semantics 
chapman hall 
mil milner 
fully models typed calculi 
theoretical computer science 
plo plotkin 
lcf considered programming language 
theoretical computer science 

