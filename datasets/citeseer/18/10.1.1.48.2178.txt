discrete event systems autonomous mobile agents bajcsy grasp laboratory department computer information science walnut street university pennsylvania philadelphia pa grip cis upenn edu october discrete event systems des special type dynamic system 
state systems change discrete instants time term event represents occurrence discontinuous change possibly unknown intervals 
different discrete event systems models currently specification verification synthesis analysis evaluation different qualitative quantitative properties existing physical systems 
focus presentation automata formal language model des introduced ramadge wonham application domain mobile manipulator observer agents 
demonstrate feasibility des framework modeling analysis synthesis visually guided behaviors agents engaged navigational tasks address synchronization issues different components system 
des formalism allows synthesize complex behaviors systematic fashion guarantee controllability 
keywords visually guided behaviors control reactive behaviors discrete event systems obstacle detection obstacle avoidance cooperation real time vision mobile robots 
motivation long tradition ai robotics community incorporate reactive behavior components design autonomous systems 
early approaches arkin schemas motivated sources demonstrating different perception action schemas instantiated task accomplished 
ideas compose different behaviors culminated subsumption architecture 
approach simple behaviors encoded combined subsumption manner complicated behaviors emerge 
group researches believe purely reactive approaches won sufficient accomplish complex goals trying incorporate reactive approaches traditional ai planning systems 
reactivity mentioned systems achieved tight coupling sensors actuators 
sensors purposes sonar infrared sensors simple vision sensors sensory readings directly simple computation determine appropriate commands actuators 
case complex sensory guided behaviors vision navigation observation coupling longer straightforward 
due fact amount type visual information needed task dependent varies substantially task 
navigation instance locate landmarks avoid obstacles exploration recover structure environment active way 
situations clear appropriate connections sensors actuators order obtain desired behavior 
embed problem modeling tasks reactive behaviors autonomous agents des framework developed ramadge wonham 
des formalism models systems terms finite state automata allows observations qualitative information extracted sensory data actions commands actuators vehicle treated uniform way terms events 
events correspond transitions states model abrupt discrete changes system behavior 
des framework suitable investigating control theoretic properties system controllability observability conveniently predicted 
different visually guided behaviors combined modular fashion resulting behavior guaranteed controllable 
framework address combination different models hierarchical fashion 
task engaged effort investigating cooperation mobile robots task navigate cooperative fashion 
mobile robots equipped visual capabilities additional sensors see fig 
task follow path individually keeping particular formation avoiding unexpected obstacles 
task implies subtasks 
development real time vision processing capabilities enable visually guided navigation free space presence obstacles 
development recognition tracking capabilities mobile robot 
development control structure mobile robot couples results visual processing control 
development control architecture enable cooperative behavior mobile robots 
representation visually extracted information surrounding environment necessary assure cooperative behavior 
overview section introduce supervisory control theory des extension relevant modeling behaviors mobile agents 
describe vision algorithms obstacle detection avoidance tracking emphasizing qualitative information extracted 
second section formulate navigation tracking control problems propose des models visually guided behaviors 
feasibility studies performed laboratory environment trc vehicles different illumination conditions unexpected obstacles 
discrete event systems discrete event systems man systems arising domains manufacturing robotics organization delivery services vehicular traffic computer communication networks 
behavior systems truly nonlinear time varying parameters 
due non terminating interaction environment systems affected unexpected interventions means discontinuous 
demonstrate uncertain behavior caused fact available measurements inputs disturbed noise 
evolution system may unpredictable nondeterministic 
interactions particular components complex longer governed known physical laws describable differential equations 
due complexity systems need model analyze different hierarchical levels 
special nature systems past different formal methods proposed modeling emphasizing different aspects system design analysis 
main objective efforts assure appropriate behavior system full functionality environment means appropriate control 
class models successfully study different qualitative properties des called logical models 
behavior system logical models expressed terms system trajectories listings events occur sample path 
typically set possible trajectories specified 
done form transition structure automata petri nets means algebraic equations csp finitely recursive processes logical calculus temporal logic 
constraints imposed system specifying desired behavior expressed terms admissible trajectories 
trajectories investigated satisfy desired properties expressed constraints 
properties interest may include stability convergence correct resources correct event ordering deadlock liveness need examining different qualitative properties resulted development large variety tools employed areas semantics concurrent programs communicating sequential processes synchronization issues operating systems communication protocols networking logical analysis digital circuits 
logical models may basis verification synthesis des 
overview different approaches 
supervisory control theory section brief supervisory control theory discrete event systems 
des class dynamic systems evolve abrupt asynchronous occurrence physical events possibly unknown intervals 
contrast familiar class dynamic systems physical world described differential equations state trajectory continuous des state changes asynchronously discrete instances time 
des modeled nondeterministic finite state machines states correspond continua task evolution transitions caused events representing qualitative changes environment task evolution 
sigma denote set events system generate 
event trajectories thought strings fixed alphabet sigma 
subset sigma represent event trajectories physically possible system fully characterize behavior 
language described terms machine generates strings define generator tuple sigma ffi qm set possible states sigma set possible events ffi transition function ffi sigma initial state qm subset states called marker state qm ae order adjoin means control system events classified categories uncontrollable events observed prevented occurring obstacle detected robot failure controllable events prevented occurring move 
original framework model consists plant subject control embedded environment generates events 
goal control enable disable controllable events order ensure correct behavior plant 
open loop behavior system unsatisfactory main objective design controller plant way plant behaves accordance specified constraints 
controller called supervisor 
supervisor thought map gamma gamma sigma set binary assignments elements sigma binary assignments determine control pattern state events enabled disabled 
function specifies possible string language control input gamma applied point 
mapping realized pair oe automaton sigma xm oe sigma oe clear distinction subject control plant agent doing controlling supervisor 
existence supervisor plant existence appropriate feedback control closely related concept controllability 
system said controllable information current state system means appropriate control reach desired state system 
language ae sigma represent possible trajectories 
say language controllable iff sigma ae represents desired behavior system prefix closure words condition requires prefix string followed uncontrolled event oe sigma prefix intuitive way uncontrollable events prevented occurring clear event occurs path event occurred remain order controllable feasible closed loop behavior 
plant desirable behavior characterized language controllable prefix closed existence supervisor guaranteed 
modular composition system investigation usually composed modular subsystems 
subsystems plants modeled process global plant obtained kp symbol composition operator shuffle product models asynchronous composition events subsystems occur independently 
type composition models interleaving model concurrency theory concurrent systems 
input output semantics different ways interpret communication plant supervisor 
original framework plant generates events supervisor enables disables controllable events see fig 

plant responsible scheduling event occurrence 
type semantics appropriate 
situations events plant occur spontaneously 
may triggered forced occur supervisor occur responses commands previously triggered supervisor 
set events sigma partitioned sigma responses sigma commands 
semantics original model introduced depicted fig 

examples shown article adopted generator des 
discuss implications choice section 
closed loop system behavior synchronization order achieve desired closed loop system behavior issues synchronization plant supervisor addressed 
original framework plant supervisor fully synchronized time event occurs plant transition state transition event supervisor 
model synchronization desirable 
envision situations plant transitions due uncontrollable unobservable events supervisor interfere execution 
cases may necessary supervisor track events transition synchronously plant time event occurs 
situation may occur appropriate plant execute commands suggested supervisor 
example supervisor requests action executed plant failure plant discovered 
case single supervisor controls plant may envision situations commands applicable plants ignored single supervisor controlling actuators mobile platform camera head 
situations restrictive model synchronization called prioritized synchronization psc adopted 
model priority sets events associated processes determining events processes responsive 
visually guided navigation tracking control problems section formulate navigation tracking control problems identify particular components system needed adopting des framework introduced previous section 
subject control mobile robot unknown partially known environment committed follow trajectory 
order achieve desired goal need provide appropriate commands motors vehicle preventing crashes losing tracked target 
traditional control theory describes relationship input state output variables system differential equations sufficient 
mobile robot take account unexpected interactions environment adjust behavior 
example simple unexpected occurrence obstacle sudden appearance loss target vehicle front represents discrete change evolution system behavior 
describe particular modules navigation tracking terms events representing discrete qualitative changes system behavior 
purposes accurately modeling behavior system classify set sigma events follows ffl set uncontrollable events sigma corresponds observations sensory measurements monitoring environment responses observations event executable psc systems executable system priority set contains event 
effects actions performed subject control ffl set controllable events sigma represents commands controlling actuators system communicating commands corresponding sending receiving messages different components system sigma sigma sigma navigation obstacle avoidance main objective model cooperative multiagent behaviors mobile agents equipped visual non contact sensors 
section outline models elementary behaviors single agent composition mention approach may applied modeling cooperation agents 
navigation problem encompasses control mobile robot moving location environment 
case map environment available exist number techniques planning path locations 
path determined terms displacements headings task path absence obstacles corresponds simple feedforward control strategy odometry readings 
approach assumes odometry readings reflect correct position mobile agent relative starting position path free obstacles 
assumptions reasonable real world situations 
way eliminate assumption additional information landmarks correcting current heading position vehicle 
order account presence unexpected obstacles need means detect realize appropriate avoidance maneuver 
obstacle detection adopted idea proposed mallot 
obstacles detected difference pair stereo images applying proper inverse perspective mapping see fig 

differences perspective left right views determine presence obstacle approximate location 
images stereo pair mapped horizontal plane 
obstacle floor images applying inverse perspective mapping 
presence obstacles perspective distortions left right views different 
simple subtraction inverse perspective mappings left right image determine presence obstacle 
assumes movement mobile robot constrained horizontal plane 
objects elevated horizontal plane classified obstacles 
numerous advantages method simple point point transformation real time implementability standard architectures 
problems shadows textured floors 
analysis free space scenario field view vehicle sufficiently large compared size vehicle planning immediate obstacle avoidance strategies 
chose accomplish avoidance maneuver purely reactive way 
case distinguish stages differ qualitative information extracted map free space 

distance extent closest obstacle vehicle path compute appropriate turning rate proportional ratio distance obstacle extent obstacle linear velocity vehicle 

vehicle steering away obstacle monitor position obstacle field view 

field view free vehicle start correcting accumulated deviation eventually reach desired path 
case information free space sides obstacle sufficient compute appropriate turning rate size obstacle bigger field view 
obstacle avoidance behavior scenarios proposed assume vehicle driven process target vehicle straight line path follow 
obstacle avoidance behavior monitors free space front vehicle 
obstacle encountered appropriate avoidance strategy invoked 
des model obstacle avoidance behavior illustrated fig 

set states steer away path set events sigma detected clear path stopped move avoid motion detected motion path computed path sigma detected motion detected motion clear path path completed path computed initial state state vehicle stationary 
state vehicle moving ahead sensors continuously monitoring free space front vehicle 
state vehicle turning away obstacle particular turning velocity 
state path 
path followed feedforward control strategy 
event obstacle detected asserted obstacle vehicle path 
event clear path asserted obstacle vehicle field view 
event move avoid changes heading speed vehicle 
event path completed asserted path completed 
event stopped vehicle stopped 
event motion detected asserted motion detected 
event motion asserted vehicle stationary 
obstacle avoidance behavior activated task agent involves navigation 
behavior principally run path mode exploration mode driven particular exploration strategy 
obstacle avoidance process initiated state 
transition state depending vehicle move avoid command encompasses set commands sent host computer vehicle 
details see 
particular path follow motion caused exploration process detected 
states free space front vehicle continuously monitored 
presence unexpected obstacle event obstacle detected process transition state 
qualitative analysis map free space state appropriate turning rate computed vehicle away obstacle 
field view free obstacles process transition state pursue original path 
case original path vehicle just transition state 
free space insufficient allow avoidance maneuver vehicle stops event 
discrete event control point view obstacle avoidance behavior controllable 
tracking tracking mode provide vehicle capabilities tracking moving target 
requires choosing right features track uniquely describing motion target front 
problem addressed researchers focus issue control 
tracking behavior see fig 

set states set events sigma detected target lost move sigma detected target initial state state exploring 
vehicle stationary moving looking determined target 
state tracking 
target field view vehicle process generates commands keep target center field view constant distance vehicle 
event target detected asserted target tracked detected 
event move track command actuator order keep target center field view 
event target lost asserted target disappears field view 
composite behaviors activation different behaviors closely related task accomplished 
composite behavior concurrent combination elementary behaviors obtained shuffle product operator 
elementary behaviors easily controllable state possible controllable event take place case invoked concurrently 
impose constraint composition concurrent operation case expressed automaton 
block diagram composition process fig 

detailed description process 
obstacle avoidance tracking suppose task track moving target time avoid obstacles 
activate obstacle avoidance behavior fig 
tracking behavior fig 

composition behaviors results new behavior obtained product kp fig 
component behaviors 
component behaviors combined interleaving fashion resulting behavior represents possible sequences events 
problem may occur number controllable events commands actuators trying control actuator 
role supervisory control case crucial 
supervisor ensure correct commands carried enabled response previous observations 
example consider just open loop behavior system easily happen detecting obstacle agent observes target begins deviate choice correcting deviation avoiding obstacle 
keeping mind important thing prevent agent crashing want prevent target process affecting actuators obstacle detected 
means supervisor disable event move track soon observes event obstacle detected event clear path observed 
control strategy supervisor particular example expressed automaton fig 

line composition processes synthesis supervisor described 
product system feedback function phi resulting supervisor example shown fig 

modularity vs coupling emphasized discrete aspects control formulated supervisory control theory proposed models simple behaviors 
particular models completely determined capabilities sensors types actuators 
mentioned examples dealt degree freedom system controlled actuators wheels vehicle supervisor control strategy switch processes trying control actuators 
particular hardware configuration allowed completely decouple processes address control issues level events 
case number degrees freedom system increases tracking process realized camera head system number possible control strategies increases 
process combining behaviors synthesizing supervisor complicated 
may satisfactory associate states supervisor control patterns determining events enabled disabled 
may need adjoin states supervisor functions take arguments continuous variables describing state underlying behaviors linear angular velocity force compute parameters commands actuators 
remains seen original framework capture system properties interest extensions needed order model class systems class systems degrees freedom quite tightly coupled live environment full unexpected interventions type coupling task dependent 
choice particular semantics communication plant supervisor stems physical configuration system type dependencies modules 
examples shown commands generated particular processes execution simply enabled disabled supervisor previous observations 
envision situation particular observation detected module trigger transition different module forcing different observation control strategy associated state 
instance semantics applies better 
sensory guided behaviors interest computer vision community time real time control role different concurrent processes robot control apparent 
believe gained investigating system separate parts 
especially true navigation takes place unknown changing environment 
coupling visual modules navigation observation active process novel consider important contribution modeling behaviors theory des 
extraction right qualitative information visual observation appropriate action take place crucial modeling 
formalism allows systematically compose complex behaviors modular fashion predict controllability composite behaviors 
methodology allows model cooperative behaviors composite communication behaviors 
remains seen right compromise modularity vs coupling sensory behaviors preserve desirable properties continuous systems time allow flexibility composition activation different behaviors task accomplished 
navy afosr army daal pri nsf cise cda iri asc du pont labmate user manual version 
ronald arkin 
motor schema navigation mobile robot 
proc 
intl 
conf 
robotics automation 
hoffman wong toi franklin 
supervisory control rapid thermal multiprocessor 
technical report information systems laboratory department electrical engineering stanford university november 
bhanu ming burger nasr kim 
qualitative target motion detection tracking 
darpa image understanding workshop 
brooks 
robust layered control system mobile robot 
ieee journal robotics automation ra march 
hanson riseman beveridge kumar 
model directed mobile robot navigation 
technical report coins tr university massachusetts computer information science june 
james firby 
building symbolic primitives continuous control routines 
proceedings international conference artificial intelligence planning systems pages 
michael 
concurrency discrete event control 
control systems magazine june 
ian horswill 
simple cheap robust visual navigation system 
animals animats ii proceedings second international conference simulation adaptive behaviour 
mit press 
hu ahuja 
model motion estimation long monocular image sequences 
technical report university illinois urbana champaign 
jean claude latombe 
robot motion planning 
kluwer academic publishers 
mallot bulthoff little 
inverse perspective mapping simplifies optical flow computation obstacle detection 
biological cybernetics 
ramadge wonham 
control discrete event systems 
proceedings ieee january 
ramadge wonham 
supervisory control class discrete event processes 
siam contr 
optimization 
craig reynolds 
bumping things 
physically modelling siggraph 
marcel schoppers 
universal plans reactive robots unpredictable environments 
proceedings ijcai pages 
kumar 
supervisory control nondeterministic systems driven events prioritized synchronization trajectory models 
technical report university maryland 
wonham ramadge 
controllable sublanguage language 
siam control optimization 
mobile agents plant supervisor environment plant supervisor environment event enabling disabling semantics generator semantics generator vs semantics horizontal plane baseline disparity inverse perspective transformation left image map free space lower resolution dark areas correspond free space right image stationary obstacle detected obstacle detected path path completed path computed motion detected clear path steer away move avoid move avoid obstacle detected moving motion stopped model obstacle avoidance tracking exploring target lost move track move track target detected model tracking elementary elementary product elementary beh 
possible trajectories 
combination constraint supervisor desired behavior controllable desired behavior behavior behavior composition process state state obstacle detected move avoid move track clear path stopped combination constraint move avoid motion detected motion obstacle detected path computed path completed clear path move track target detected target lost state ped move avoid move track don care enabled disabled product system feedback function phi supervisor 
