information invariants distributed manipulation bruce randall donald james jennings daniela rus robotics vision laboratory computer science department cornell university ithaca new york donald described manipulation task cooperating mobile robots push large heavy objects 
asked explicit local global communication agents removed family pushing protocols 
answer affirmative 
general methods donald analyzing information invariants 
discuss measures information complexity task internal state robot retain 
cooperating agents required communication necessary 
robot change side effect environment order record state sensory information perform task 
information provided sensors 
computation required robot 
answer questions develop notion information invariants 
develop technique sensor constructed adding deleting collaborating autonomous agents 
add resource ask information provided task mechanics 
answering question author current address department computer science tulane university new orleans louisiana usa 
author current address department computer science dartmouth college hanover new hampshire usa 
describes research done robotics vision laboratory cornell university 
support robotics research provided part national science foundation 
iri iri presidential young investigator award part air force office sponsored research mathematical sciences institute intel bell laboratories 
third author supported advanced research projects agency defense department onr contract onr contract nsf contract iri 
revised version workshop algorithmic foundations robotics san francisco feb 
hope develop information invariants explicitly trade resource resources 
protocols describe implemented different forms report experiments measure analyze information invariants pair cooperating mobile robots manipulation experiments laboratory 
imagine broad view robots robotics 
say robot computer apply forces physical world 
insist forces external ii programmable computer 
rules clocks apply internal forces ii excludes programmed electronically mechanically 
typically robots sensory input vision sonar force sensing kinesthetic position sensing guide control strategies correct errors modeling execution 
distributed robotics involves robots cooperating perform task 
manipulation tasks require changing physical world example moving furniture orienting parts 
robotic manipulation robot applies external forces perform manipulation task 
robots simultaneously apply forces coupled dynamical system push couch call parallel manipulation 
parallel manipulation task performed distributed system call distributed manipulation 
distributed manipulation protocols spatially computationally distributed 
develop analyze synchronous asynchronous manipulation protocols small team cooperating mobile robots push large boxes 
boxes typically robot diameters wide times mass single robot robots pushed heavier times mass theta robot diameters size 
build ground breaking mason erdmann mason planar manipulation 
differs previous pushing ways 
robots boxes similar dynamic spatial scale 
second single robot strong move box specifically strength depends effective lever arm 
third assume robots globally coordinated controlled 
precisely develop protocols assumption local communication possible subsequently remove communication series source source transformations protocols 
fourth protocols assume robot geometric model box moment friction distribution known 
robot combines sensorimotor experiments manipulation strategies infer necessary information experiments flavor jennings rus 
pushing literature generally regards moving kinematic constraints 
case robot ii robots massive box robots really force system significant friction 
sense task ways closer flavor dynamic manipulation mason lynch box dynamics essentially quasi static 
course protocols rely number assumptions order 
develop framework analysis synthesis information invariants donald reveal assumptions expose information structure task 
believe theory implications parallelization manipulation tasks spatially distributed teams cooperating robots 
develop parallel manipulation strategy start perfectly synchronous protocol global coordination control 
distributing cooperating spatially separated agents relax protocol local communication partial synchrony 
remove explicit communication 
final protocols asynchronous essentially uniform spmd program runs robot 
ultimately robots viewed communicating implicitly task dynamics implicit communication confers certain degree synchrony protocols 
difficult important analyze information content implicit communication synchronization fairly heavy hammer theory information invariants 
big picture goal investigate information requirements robot tasks 
uses theoretical framework introduced donald donald donald central theme previous see survey article donald detailed review determine information required solve task direct robot actions acquire information solve 
key questions concern 
information needed particular robot accomplish particular task 

may robot acquire information 

properties world great effect fragility robot plan program 

capabilities robot environment class environments questions difficult 
structured environments industrial robots contribute simplifying robot task great amount information encoded implicitly environment robot control program 
encodings effects difficult measure 
wish quantify information encoded assumption say mechanics environment dynamic 
addition determining information encoded assumptions may ask converse information control system planner compute 
successful manipulation strategies exploit properties external physical world compliance reduce uncertainty gain information 
strategies exploit mechanical computation mechanics task possible outcomes spmd single multiple program multiple data 
action physical laws 
executing strategies may require little computation contrast planning simulating strategies may computationally expensive 
execution may witness little computation sense algorithm traditional techniques computer science difficult apply obtaining meaningful upper lower bounds true task complexity 
hope theory information invariants measure sensitivity plans particular assumptions world minimize assumptions possible 
develop notion information cornell mobile robot tommy 
note mounted top bottom cylindrical enclosure ring sonars ir modems bump sensors 
lily similar 
ants characterizing sensors tasks complexity robotics operations 
may view information invariants mapping tasks sensors measure information 
idea measure characterizes intrinsic information required perform task measure complexity 
example computational geometry successful measure developed characterizing input sizes upper lower bounds geometric algorithms 
unfortunately measure relevant robotics remains useful tool 
apparent diminished relevance embedded systems reflects change scientific culture 
change represents paradigm shift offline online algorithms 
increasingly robotics researchers doubt may reasonably assume strictly offline paradigm 
example offline model assume robot booting reads geometric model world disk proceeds plan 
alternative consider online paradigms robot investigates world incrementally builds data structures sense represent external environment 
typically online agents assumed priori world model task begins 
time evolves task effectively forces agent move sense build data structures represent world 
online viewpoint offline questions complexity plan construction known environment priori world model appear secondary artificial 
describe working robots tommy lily may viewed online robots 
discuss capabilities programmed 
examples papers jennings rus donald donald donald rus link intense interest online paradigms situated autonomous agents 
particular papers discuss kind data structures robots build represent environment 
discuss externalization state distribution state system spatially separated agents 
believe profitable explore online paradigms autonomous agents sensorimotor systems 
framework remains extended certain crucial directions 
particular sensing carefully considered modeled online paradigm 
tommy lily pushing couch straight line asynchronous spmd protocol requiring explicit communication 
chief devices analyzing online strategies principled theory sensori computational systems 
attempted fill gap donald donald provided theory situated sensor systems 
argue framework natural answering certain kinds important questions sensors 
theory intended reveal system information invariants 
measure intrinsic information invariants leads naturally measure hardness difficulty 
notions truly intrinsic invariants serve lower bounds robotics way lower bounds developed computer science 
quest intrinsic measure information requirements task inspired erdmann monograph sensor design erdmann information invariants erdmann introduced robotics community erdmann observe rigorous examples information invariants theoretical literature far back see example blum kozen kozen 
note interesting lower bounds complexity theoretic sense obtained motion planning questions see reif hopcroft natarajan canny reif see erdmann donald canny briggs upper bounds 
rosenschein developed theory synthetic automata explore world build data structures faithful rosenschein 
theory set logical framework sensors logical predicates 
theory viewed geometric attack similar problem 
motivated theoretical attack perceptual equivalence begun donald jennings experimental studies jennings rus horswill horswill developed semantics sensory systems models quantifies kinds assumptions sensori computational program environment 
gives source source transformations sensori computational circuits 
donald discusses semantics sensor systems 
formalism explore properties call situated sensor systems 
donald describes way transform sensori computational systems 
transformed say reduced call transformation reduction 
derive algebraic algorithms reducing sensor 
machinery necessary wishes automate transformation process quite easy calculate reductions hand pencil 
box motion robot motions box rotated cooperating autonomous agents 
motion box viewed world coordinates 
relative motion pushing robots viewed system coordinates fixed box 
arrows illustrate direction applied forces 
addition discussed section detailed bibliographic essay previous research geometric theory planning uncertainty see donald donald goals outlined ambitious taken small step 
questions provide setting inquiry far answering completely 
hope information invariants serve framework measure capabilities robot systems quantify power reduce fragility respect assumptions engineered control system environment 
believe equivalences derived communication internal state external state computation sensors prove valuable determining information required solve task direct robot actions acquire information solve 
things learned 
determine lot information structure task parallelizing ii attempting replace explicit communication communication world task dynamics 
communication world takes place robot changes environment change sensed robot 
give different protocols strategies robot pushing task protocol uses explicit communication encoding task mechanics information 
approach quantifying information complexity task mechanics involves viewing world dynamics set mechanically implemented registers data paths 
permits certain kinds de facto communication spatially separated robots 
equivalence task mechanics communication operational flavor exploring generality 
believe spatially distributing resources collaborating agents information characteristics robot task explicit 
asking task performed team robots 
may highlight information structure 
robotics evidence far largely anecdotal 
computer science learns lot structure algorithmic problem parallelizing argue resource internal state robot retain 
cooperating agents required communication necessary 
robot change side effect environment order record state sensory information perform task 
information provided sensors 
computation required robot 
information provided task mechanics 
table list questions resource consumption robot protocols 
direction pushing cof line pushing direction pushing cof finger pushing task vs 
robot pushing task 
goal push block straight line 
repeat measure case push move move protocol gripper 
similar methodology useful robotics 
difficult analyze interaction sensing computation communication mechanics see table distributed manipulation tasks 
analyses donald focus analysis parameterized task 
represents attempt integrate measure information content task mechanics theory 
theory biased sensing remains develop framework treats action sensing equal footing 
draws extensively material reported monograph donald donald announced abbreviated preliminary version donald 
reported ideas coordinated manipulation strategies preliminary form donald donald research agenda robot builders claims robot performance resource consumption 
general hard verify claims compare systems 
really think key issue robot programs sensor systems similar identical tasks may look different 
discuss hard compare power systems 
examples distinguished permit relatively crisp analytical comparisons represent kinds theorems information trade offs believe proved sensorimotor systems 
analyses section reveal trade offs terms resource consumption 
ask general theory quantifying power gained trade offs 
section theory represents systematic attempt comparisons geometric physical reasoning 
donald operationalize analysis making computational give effective albeit theoretical procedures computing comparisons 
see section summary 
wish rigorously compare embedded sensori computational systems 
define reduction attempts quantify efficiently build sensor build sensor components 
write build adding stuff 
analogous adding information complexity 
measure information complexity relativized information complexity sensori computational components bandwidth relativization circumvents tricky problems measuring sensor complexity 
sense components analogous oracles theory computation 
write build sensorimotor system simulates components plus little rewiring 
modeled circuits wires datapaths connecting internal components 
sensori computational systems differ computation theoretic ct circuits spatial configuration spatial location component important connectivity 
develop formal concepts facilitate analysis 
permutation models permissible ways reallocate reuse resources building sensor 
intuitively captures notion repositioning resources active passive components sensor systems infra red emitters detectors 
geometric codesignation constraints restrict range admissible permutations 
allow arbitrary relocation constrain resources installed location robot goal 
output communication formalizes notion little bit rewiring 
resources permuted find reconnected wires data paths 
separate previously colocated resources need add communication mechanism connect spatially separate components 
ct reductions defines efficient transformation sensors takes give generic algorithm synthesizing reductions algorithm exist ct reductions widely useful called donald example algorithm exists decide existence linear space log space polynomial time reduction ct problems 
exist better reductions open try demonstrate potential usefulness examples general claims algorithmic tractability 
give hierarchy reductions ordered power strength transformations quantified 
ideas applications 
comparison 
sensori computational systems ask powerful 
sense 

transformation 
ask transformed 

design 
suppose specification bag parts bag parts consists boxes wires 
box sensori computational component black box computes function spatial location pose ii inputs 
wires different bandwidths hook boxes 
algorithms decide embed components satisfy spec 
algorithms give embedding boxes placed world wired 
ask spec implemented bag parts 

universal reduction 
consider application 
suppose addition spec encoding bag parts embedding implement spec 
suppose reduction relativized measures power components relative components universally quantifying configuration ask components job components 
specifically ff configuration sensorimotor system ff encodes spatial embedding wiring connectivity 
similarly fi configuration system ff fi denote systems installed configurations 
gist universal reduction decide ff fi ff fi 
outline discuss resources see table experiment communicating robots 
consider task coordinated manipulation large objects particularly manipulation large box couch pair communicating mobile robots 
foreground task pushing object communicating robots need infer position moment friction distribution respect lines pushing see 
donald asked explicit communication removed protocol explicit mean local communication ir global communication rf 
give protocol explicit communication analyze compare protocols tools introduced donald believe methods generalize manipulation tasks larger teams robots underway example donald donald rus considered task coordinated manipulation large objects particularly rotations accurately large box team communicating mobile robots 
examined offline strategy robots geometric model object online strategy 
section describe strategies sketch general methodology developing distributed manipulation protocols 
left robot communication right robot repeat repeat measure measure theta gamma theta sign case push break 
guarded move move case push break 
guarded move move protocol robots synchronize actuators communicating force measurements 
cof mechanical observables protocol pushing communicating mobile robots introduce ideas consider task involving autonomous mobile robots 
robots cooperate push box 
issues related information invariants investigated setting single agent 
ideas spatially distributing resources collaborating agents information characteristics task explicit 
asking task performed team robots 
may highlight information structure 
preview proceed 
goal pushing task move object straight line called pushing direction agents 
describe strategy task designed executed manipulator rigidly connected fingers force feedback 
propose variants algorithm suitable execution autonomous mobile robots 
compare strategies respect resources table 
pushing protocols consider task goal push box straight line 
depicts robot reader picture robot manipulator gripper executing task 
robot consists rigidly connected fingers example fingers parallel jaw gripper 
complication involves micro mechanical variations slip box table mason phenomenon hard model difficult predict results push obtain straight line trajectory center friction cof lies line pushing 
push box translate straight line long cof lies fingers 
nice thing strategy cof move fingers keep pushing need ensure cof lies region see line 
second cof moves outside fingers move sideways capture 
implemented control loop described protocol puma robot finger gripper see 
basic idea sense reaction torque center friction cof 
push forward direction move fingers move fingers gamma mechanics perspective appear done 
difficult critically protocol relies global communication control 
consider analogous pushing task 
finger replaced autonomous mobile robot described rees donald robots mind cornell mobile robots see details construction important :10.1.1.50.8035
robots move controlling motors attached wheels 
robots autonomous equipped ring simple ultrasonic sonar sensors 
robot onboard processors control programming 
description rees donald augmented follows :10.1.1.50.8035
description characterizes robots lab 
equip robot infra red modems sensors ring robot body 
modem consists emitter detector pair 
transmitting receiving modem essentially functions remote control home appliances televisions 
addition robot ring bit contact bump sensors 
assume ffl bump sensors robots contact flat object face measure relative orientation face jennings rus ffl robots flat face object ffl robots know direction pushing ffl robots synchronize velocities ffl examining servo loop rees donald clear compute measure applied force observing applied power position velocity robot contact sensors :10.1.1.50.8035
pushing strategy described protocol approximated observing see figures 
robot compute applied force contact mode communicate data 
allows robots compute net torque point robots sign quantity infer location box 
center friction cof lines pushing robot continues pushing line positive net torque instantaneous center friction left robots 
situation left robot contact box right robot may may contact 
left robot recapture center friction lines pushing moving left face box move 
right robot contact box predicate break 
returns true executes guarded move motion contact direction robot takes null action 
case net torque negative symmetric 
call protocol see figures 
variant protocol derived quasi static qs system 
relative displacements line pushing measured forces 
shows configuration robots originate positions respectively 
locations time 
protocol initial locations robots communicated determine offset sigma sigma specifies better parameterizes pushing task offset determines pushing direction relative initial orientation box face 
computation sigma viewed calibration step 
robots exchange location information successively loop iteration information infer direction motion box 
call protocol qs see figures 
derive new protocol protocol qs observing information needed determine motion box sigma sigma related angle normal face box direction pushing follows tan sigma tan sigma see figures 
observe tangent function monotonic sign preserving means adapt control system servo sigma knowing specifically normal box face 
jennings rus describe algorithm measuring bounded error 
final protocol robots measure initial angle compare value angle measured time order infer direction motion box 
negative change value angle implies clockwise rotation box 
large positive change implies counterclockwise rotation 
robots adjust pushing location face box accordingly 
example robots pushing task suffices assume robots identical control systems command speeds 
generally velocity synchronization requires robots pushing time necessary complicated manipulation tasks 
protocol velocity synchronization hard synthesize methods see section 
task dynamics explicit communication determine actions 
call pushing strategy protocol ii 
left robot communication right robot measure measure sigma gamma repeat repeat measure measure sigma gamma sign sigma gamma sigma case push gamma move move case push gamma move move protocol quasi static 
case breaking contact shown handled 
robots synchronize actions communicating odometry 
cof protocol qs 
normal box face denoted axis parallel direction pushing lines pushing distance apart perpendicular distance 
angle left robot right robot repeat repeat case break 
guarded move push ae move case break 
guarded move push ae move protocol ii 
protocol uniform uniform changing lines move move 
note uniform quite imply simd protocols run asynchronously 
say protocols spmd single program multiple data 
explicit communication robots 
cof mechanical observables protocol ii 
comparing protocols ask protocols qs ii compare respect resources table 
note protocols require different sensing capabilities 
protocol relies force sensing protocol qs relies position sensing protocol ii relies orientation sensing 
observe robots coordinate find controls result stable pushing coordination accomplished differently protocols 
protocol protocol qs robots synchronize exchanging sensor values 
robots executing protocol require communicating log bits transmit value force bits transmit sign torque denotes values variable may take 
robots executing protocol qs require log bits transmit value distance bits transmit sign protocol ii explicit communication synchronization realized world monitoring change angle face normal pushing direction 
words robots infer motion object decoding changes task mechanics 
protocols qs rely direct communication protocol ii 
internal state requirements strategies different 
protocol requires internal state 
protocol qs requires register record value sigma protocol ii requires register record value get deeper understanding relationship protocols describing circuits attempting transform reduce 

reductions transformations formalize model manipulation protocols viewing manipulation circuits 
theory sections adapted donald particular examples application especially claim definition manipulation circuits definition tradeoffs new 
model circuits graphs 
vertices correspond different sensori computational components system call resources 
edges correspond data paths information passes 
different graphs correspond different spatial allocation resources 
thesis demands information added lost manipulation circuit change immersion 
information preserved 
define operator way combine manipulation circuits 
operation union graphs 
formalize manipulation circuits introducing notion sensori computational system term sensor system mean sensori computational system 
section show extend sensor systems manipulation circuits 
situated sensor systems definition labelled graph directed graph vertices edges labelling function assigns label vertex edge 
ambiguity denote labelling function 
definition sensor system represented labelled graph 
vertex labelled component 
edge labelled connection 
see figures illustrations circuits sensor systems protocols qs ii 
terms protocol refer computer programs figures circuit sensor systems figures 
clear circuit implements protocol 
protocol qs communications operations 
datapath simply refer subsequent resource 
circuits restrict components resources described figures definitions feel generalized resources 
figures components correspond boxes odometer signal coming box odometry reading 
box gamma performs subtraction boxes sigma registers implement internal state 
part circuit labelled case interfaces control part circuits protocols 
intuitively control added sensor system obtain manipulation circuit 
augmentation precise 
interesting resource call box source produces signal indicating relative orientation 
jennings rus describe detail implement bounded error source 
basic idea 
source abstraction relative normal sensing 
allows normal box treated external register robots may read write 
implement approximate source follows 
robot ring bit bump sensors 
implement relative normal sensing jennings rus specify pushing direction specifying see direction relative box normal time 
specifically task robot guarded move contact box 
aligns normal box bounded error algorithm jennings rus robot turns angle pure position control 
init bit state run init 
small crossed circles phi bits run gates input signal pass 
robot init odometer writes register 
init gamma component fed odometry input 
assume numbers represented signed integers 
sgn box just selects sign bit 
omit logic toggle init register written 
requires bit state init requires due asymmetry protocol qs 
denoted init init connections data paths carry information connection label represents information sent path 
connections carry data components 
adopt convention components communicate signal metaphor circuits strictly digital 
message stream better distracting religious connotations 
explicit connection spatially colocated 
figures data paths internal interesting datapaths external datapaths edge labelled comm deltax edge labelled comm 
bandwidth log deltax bits bandwidth bits 
consider 
source external robots 
interesting external data paths source marked comm delta marked datapaths bandwidth log bits 
definition variable ranges possible values sensor system compute 
call output system 
number values take define log size output size sensor 
output size upper bound bit complexity example takes integer values range log log suppose information communicated datapath assume information communicated repeatedly loss generality take unit time interval occasion communicate information 
take size output bandwidth far defined components connections operationally 
give formal definition 
components connections defined simulation functions 
simulation functions describe behavior components connections 
consider component associated vertex simulate component need know inputs ii configuration 
suppose component inputs outputs lies space configuration space component 
simulation function component map omega theta connect components 
assume moment components input output structure omega fixed system components may perform different functions 
model edge vertices label pair integers 
log bandwidth edge index resp 
specifies outputs resp inputs attach 
simulation function edge taken function omega usually restrict edge functions identify function check bandwidth transmitted data size greater log 
define resource called output device 
sensor system exactly vertex label called ouput vertex 
output vertex sensor system output sensor measured 
simulation function output device identity function output value device defines output value sensor system 
simulation function omega entire sensor system collection component simulation functions omega edge simulation functions omega function omega components retain state modeled function omega theta theta theta store records state 
example state element bits state modeled alternatively absorbed factor subspace configuration space component 
simulates component simulation functions correct configuration simulates routing data edge simulation functions 
adopt convention components communicate explicit connection spatially colocated 
component edge functions semi algebraic sensor simulation function omega semi algebraic see section 
definition consider sensor system simulation function omega output value particular configuration value omega computes configuration 
output value function configuration 
notions output value output definition related follows 
output variable ranges possible output values sensor system say output output omega omega identical 
model simulate trees embedded sensorimotor computation 
possible principle simulate general graphs systems state case value output vertex may vary time fixed configuration 
case need explicit notion time blocking model synchronous arrival data component 
restrict attention trees suffice model examples 
general discussion restricted consider clock tick generalizations possible consider time varying behavior system 
treat circuits qs ii effectively trees graphs data flow completely model manipulation circuits feedback employ notion weak simulation weak equivalence defined 
summarize component primitive device computes function inputs ii configuration component installed vertex communication graph vertices edges connections described 
graph immersed configuration space configuration component configuration vertex 
generally components actuators 
actuator component output forces configuration graph change evolve dynamics equation 
configuration entire graph dynamics equation models mapping actuator component output tangent space configuration space 
see rus discussion actuators 
actuator systems circuits identical consider detail 
actuator subsystem represented elision case delta delta delta figures 
circuit system look traditional plant diagram control engineering 
weaker forms sensori computational equivalence possible 
define state sensor system pair configuration system output value examine equilibrium behavior evolves state space 
consider notion strong simulation 
informally sensor system strongly simulates sensor system output 
see definition formal definition 
analogy say system weakly simulates system identical forward attracting compact limit sets state space 
replace strong simulation definition weak simulation structural results go mutatis mutandis 
computational results go compute limit sets properties difficult problem general 
failing derive properties limit sets hand principle reductions weak simulation strong simulation calculated hand 
concepts define actuators precisely formalize notion weak simulation 

actuators components take input sensori computational circuits output manifests forces torques configuration space system 
component output force exerted actuator depends spatial configuration 
differentially output actuator configuration configuration space modeled tangent vector tangent space informally means actuator exerts force point 
forces exerted actuator change configuration system dynamics equation 
forces cause system evolve time 
example newton dynamics equation mx mass generally permit actuators controllers familiar robotics 
example velocity controller component output causes velocity system change 
easy way model velocity controller uses order dynamics equation generalized damper dynamics see erez erdmann donald output actuator manifested force tangent configuration space 
dynamics equation changed constant chosen design 

mobile sensori computational system sensori computational circuit definition containing actuators output actuators change configuration system 
configuration space circuit output actuators circuit force configuration change time dynamics equation 
example consider robot system described section see 
configuration space robot say tommy theta typical configuration models center tommy orientation 
tommy executes translate command configuration advanced ray anchored pointing direction 
rotate command causes change 
grateful dan koditschek suggested formalism papers 
robot system lily tommy configuration space product space theta degrees freedom 
mobile sensori computational systems model navigation localization procedures mobile robots 

manipulation circuit mobile sensori computation circuit actuators solve manipulation task 
requires forces manifested actuators things cause configuration robots change ii cause configuration external object change 
example figures tommy lily manipulate large couch box 
configuration space robots theta 
cm configuration space couch 
couch degrees freedom cm theta manipulation circuit forces actuators change configuration robots configuration couch cm 
weak simulation equivalence relation mobile sensori computational circuits 
circuits limit sets dynamical systems say weakly simulate 
weak simulation manipulation circuits place strong simulation defined sensori computational circuits definition 
rest denote weak simulation noted 
interested behavior manipulated object restrict domain weak simulation configuration space cm example view set goal configurations couch set cm say manipulation circuit achieves viewed dynamical system limit set manipulation circuits achieve weakly simulate 
sensor systems separate notion sensor inputs 
sensory inputs encoded configuration space 
transformations reductions section give proof claim equation relating circuits qs ii 
intuitively equation indicates operationally speaking transform system executes protocol qs executes protocol ii removing odometry robots adding source component senses orientation manipulated object 
describing protocol ii demonstrated implementation circuit involves retained state relative orientation sensor bumper system described jennings rus fact claim precise statement engineering fact 
carefully define operators gamma formalize notions simulation efficient reduction permutation reduction involves concepts 
permutation involves redistributing resources manipulation circuit consuming new resources 
surprisingly redistribution resources add information system 
order permutation add information necessary sensor system spatially distributed case sgn deltax sigma case sigma sigma gamma sigma run run run init init init comm deltax comm manipulation circuit qs 
circuit protocol qs 
circuit shows possible implementation protocol 
figures show handle lost contact break 
case circuitry easily added qs ii 
comm run sgn init case sgn case init run manipulation circuit ii 
circuit protocol ii 
example circuits 
permutation gains information may viewed way arranging resources configuration lower entropy 
second concept communication 
measures resource 
consider adding communication primitives form comm info indicates sends message info examples primitive comm deltax comm 
permutation communication sense spatially distributed manipulation circuit 
spatially colocated components communicate free model external datapaths add information complexity system 
effect transform system protocol protocol qs see figures view system composed autonomous collaborating agents certain resources 
comm delta primitive view shared measure communication counting number agents bits required transmit info 
kind external communication consider abbreviate comm info direction clear 
sure getting semantics comm delta correct treating sensor system right albeit small 
comm defines graph vertices single edge head vertex edge defined output vertex sensor system comm 
argument parameter comm determines bandwidth example comm specifies graph edge label specifies edge datapath carry information requires log bits encode bandwidth model communication 
external communication probably possible buffering sender receiver 
comm delta include buffer realistic modeling internal state 
formalize ideas 
definitions generalize sensori computational systems manipulation circuits section 
consider manipulation circuit vertices vertex assume configuration space point space represents configuration component 
definition situated immersed manipulation circuit manipulation circuit immersion oe vertices 
call oe configuration vertex ambiguity call oe configuration component 
situated manipulation circuit essentially immersed graph 
map oe definition injective call oe embedding 
need injective 
order vertices necessary non injective 
definition immersion oe may partial opposed total function indicating specify spatial configuration components vertices outside domain immersion 
denote domain partial immersion oe oe gamma denote image im oe 
define means systems equivalent definition sensor systems say simulates output output case write generally suppose write oe situated sensor systems 
equation clearly defined oe total 
suppose oe partial leaving unspecified configurations components equation taken mean simulates oe configuration definition case say oe partial operationalize equation rewriting statement extensions oe oe 
define ex oe set extensions oe 
write oe ex oe equation holds bars placed 
treat similarly inner universal quantifier codesignation constraints section allow choice extension depend extension oe bound outer quantifier 
example definition configurations configurations equation holds 
set varies function delta models codesignation constraints 
definition generalized number unbound vertices see equation donald 
definition precisely characterizes equivalence relation strong simulation described section 
wish generalize definition case manipulation circuits 
case relation strong simulation definition formal sense practice fine grained relation obtain proofs realistic manipulation systems 
reason generally employ equivalence relationship weak simulation section analyzing manipulation circuits 
relation compares behavior distributed systems dynamical systems 
rest employ notion weak simulation specifically overload mean weak simulation noted 
permutation may consider orthogonal models permutation 
models vertex edge labels change 
model called vertex permutation definition 
model vertices move drag components wires 
vertices move permutation move edges follow 
vertex permutation situated manipulation circuit corresponds choice different immersion domain definition oe situated manipulation circuit 
permutation situated manipulation circuit oe domain oe gamma oe domain oe gamma oe 
technical reasons permit permutation change vertex output device label 
note definition permutation definition sense partial 
see appendix discussion semantics permutation sensor systems 
consider alternate model called edge permutation edge connectivity changes 
edge permutation modeled follows 
consider graph vertices edges start bijection oe call oe edge permutation induces restriction map oe oe edge set edge permutation says immersion graph 
compose models 
define graph permutation vertex permutation followed edge permutation 
graph permutation vertices edges move independently 
vertices may move addition edge connectivity may change 
illustrate different models consider manipulation circuit vertices labels 
edge bandwidth connects components system datapath 
vertex permutation move vertices components spatially connect 
edge permutation oe change edge connectivity 
example edge permutation oe graph edge oe connecting 
oe edge connect consider graph permutation suppose oe vertex permutation followed edge permutation oe 
edge connectivity oe 
vertices immersed oe situated manipulation circuit 
graph permutation oe oe oe oe oe vertex permutation oe edge permutation 
practice wish impose restrictions edge graph permutation 
example suppose sensor system containing cooperating communicating mobile robots sensori computational systems modeled circuits 
datapaths system addition bandwidth type form source destination source destination 
maintaining exactly physical locations done simple codesignation constraints 
permuting edges obtain sense permute edges type 
generally may segregate edge types classes internal edges external edges constructing may reallocate internal edge sufficient bandwidth connect components source destination 
external edges sufficient bandwidth re source destination 
class edge permutation permute edges type class 
restrict edge permutations kind class edge permutation 
class edge permutation leaves unchanged complexity bounds lemmas donald summarize vertex permutation preserves graph topology edge permutation move edges 
edge permutation permits arbitrary rewiring existing edges 
add new edges change bandwidth 
section discuss consequences allowing different kinds permutation model 
show graph permutation permitted additional cost changing power systems 
combination definition consider graphs 
define combination follows may define manipulation circuits definition lifting definition graphs 
may define immersed graphs compatible 
immersion oe immersion said compatible agree intersection total generally oe gamma gamma partial functions 
similarly definition consider graphs subgraph define difference gamma follows gamma gamma gamma definition may lifted partially immersed graphs situated manipulation circuits 
reductions calibration codesignation observed donald calibration exploits external state 
wish order systems information external state calibration yields obtain definition 
calibration complexity defined formally donald 
basic idea 
calibration complexity measures information add sensor system install calibrate 
installing sensor system may require physically establishing spatial relation components system 
case say components spatial relation 
generally may establish relation component frame world 
generally compare sensor systems typically install calibrate appropriate relative configuration spatial relation 
relations equalities configuration say system simple 
relations semi algebraic say system algebraically 
definition write 
simulates 
dominates calibration complexity 
maximum bandwidth definition 
convention drop notation denote graph permutation sensor system described 
definitions extend naturally manipulation circuits obtain definition write exists graph permutation manipulation circuit relativized information complexity consider sensor system output complexity sensors essentially characterized size log output ask output protocols important size 
suppose suggest output system bits system output chooses motor control states actions move move push 
case note sensor system internal bandwidth higher log delta log deltax bits 
output sense encodes information 
may view protocols recognizing model signal size log deltax bits subsequently hashing model equivalence classes 
argues intrinsic output complexity protocols log deltax bits 
idea observe actuator output push similar resolution orientation sensing odometry 
argues output protocol log bits move decision binary 
discussion reveals general issue sensor systems 
particular sensor systems complexity characterized number bits output 
example consider grandmother sensor 
sensor looks visual form see instrumenting delta deltax require number bits requires argument lemmas horswill see relation tan sigma discussion suggestion narasimhan grateful 
field outputs bit returning visual field contains grandmother doesn 
view sensor interpretation problem information reduction identification compare donald jennings discusses hierarchies sensor information 
consider somewhat different perspective views sensors model matchers 
imagine computational process calculates probability grandmother visual field probability data visual field 
sensor case specific detecting prefers see grandmother model best explains current data 
process computes model classes 
example sensor output tiger fuzzy picture best explained tiger 
short may view sensor system storing prior distributions 
distributions bias fixed set model classes 
principle stored distributions may viewed calibration internal state 
quantify absolute information complexity sensor system need measure information complexity model classes stored prior distribution sensor 
difficult 
propose measure quantity called maximum bandwidth sensor system 
intuitively quantity maximum internal external edge bandwidths data paths 
definition define internal resp 
external bandwidth sensor system greatest bandwidth internal resp 
external edge output size definition 
define maximum bandwidth greater internal bandwidth external bandwidth output size call sensor system monotonic internal external bandwidths bounded output size 
maximum bandwidth upper bound relative intrinsic output complexity relativized information complexity components sections 
explore notion briefly 
maximum bandwidth measure internal information complexity 
bandwidth measure information complexity relative sensori computational components system 
example imagine sensor system single component outputs bit recognizes complicated model say grandmother 
data path system bandwidth bit single component system powerful 
maximum bandwidth small absolute information complexity may large 
sensors black boxes 
call sensor system black box encoded single component 
measure bandwidth black box output size 
example odometry system source system section black boxes 
generally call sensor system monotonic internal bandwidth bounded output size 
black box sensors trivially monotonic 
sensor systems donald monotonic 
believe output size protocols log bits sensor systems monotonic 
believe output size bits 
case bandwidths protocols qs ii log deltax log delta resp 
tan sigma argue systems maximum bandwidth 
definitions arguments section generalize mutatis mutandis sensor systems manipulation circuits 
reductions communication light discussion define reduction donald relativized information complexity 
recall construction comm delta sensor system section 
monotonic sensor system output case define comm comm 
generally possibly non monotonic sensors comm comm relative intrinsic output complexity measuring general difficult treat maximum bandwidth definition upper bound definition consider manipulation circuits say efficiently reducible comm case write permutation operation combination operation commute compatible partial 
formalized distributive property donald example manipulation circuit ensured comm delta comm delta permutation combination order 
second ensured combination operation commutative associative 
third reduction single edge comm delta bandwidth works switch permutation 
sensor system comm equation may implemented sensor system permuted arbitrary way plus extra data path bandwidth largest flow observe transitive appears 
see suppose appears reduce require extra wire comm reduce require extra wire comm worst case reduce require extra wires 
reduce fewer extra wires 
find non artificial example lower bound appears indicate transitive simple sensor systems section 
summarize 
reduction corresponds specific circuit transformation 
transformation understood follows 
monotonic sensor system output sensor system 
imagine circuit embedded say plane 
comm sensor system datapath bandwidth log 
adding output communication viewed transformation called donald sensor systems 
comm 
transformation parameterized bandwidth bounded bandwidth datapath spliced 
note transformation composed permutation order 

comm fl fl fl fl fl fl 
comm 
comm reduction definition wire reduction 
appear transitive 
reduction definition wire reduction 
transitive simple sensor systems donald 
analogously define wire generally wire reduction modifying equation definition delta comm delta comm denotes times comm delta delta delta comm 
suggests hierarchy reductions indexed wire reductions form graded relation 
believe transitive elementary sense hierarchy graded transitivity simple sensor systems donald 
means simple sensor systems follows lemma wire reduction called definition elementary transitive simple sensor systems 
consider hierarchy wire reductions say hierarchy collapses isomorphic elementary relation 
particular hierarchy wire reductions collapses elementary transitive donald 
comparing protocols reductions results section apply strong weak simulation 
apply ideas compare protocols qs ii circuits figures 
define black boxes see sec 

define odometry sensor system vertex label single component odometer 
similarly define source sensor system vertex single component source 
systems installed better spliced circuits 
black box comes simple codesignation constraints 
vertex installed robot 
vertex vertex installed location robot 
vertex show claim ii qs sensor systems defined 
ii qs gamma 
proof consider sensor system obtained removing circuit qs adding source qs gamma consider permutations recall definition 
ask ii reduced ii 
note move registers gamma situate components ii 
leftover components wires 
ii requires sign boxes sgn box just selects sign bit 
build extra sign box just ignore bits leftover hardware build small circuit simulate sgn need argue register big hold hold follows tan sigma horswill 
see permute internal edges wire components ii situ internally 
externally 
permuting external wiring works quite 
external data paths bandwidth bits log deltax bits resp 
allow class edge permutation section permute external edges external edges internal edges internal edges 
fig 
edge suffice datapath adequate bandwidth 
datapath adequate bandwidth carry information order build ii add external data path comm delta argument comm delta 
data path bandwidth relative intrinsic output complexity ii log delta bits 
may parameterize new edge writing comm ii section 
see ii comm ii definition ii comm ii definition ii conclude ii qs gamma implies equation desired 
formalizes intuition removing odometry adding relative normal sensing accomplish pushing task explicit communication 
precisely show build circuit ii efficiently 
transform qs ii operators gamma quantify resources add delete 
relative information complexity allows measure effective communication world 
permutation quantifies redistribution resources 
tradeoffs equivalences results section hold strong weak simulation 
section shown compare distributed manipulation protocols analyzing resource consumption 
section describe equivalences established different protocols task determine resource tradeoffs task 
consider reduction suppose reduces exists permutation note implies identity permutation change valid trivial permutation take obtain manipulation circuits 
section think resources example primitive action sensing operation 
suppose know gamma equation shorthand gamma gamma equations argue gamma words trade equivalent 
caveat valid task specified codesignation constraints donald example prove resource trade offs manipulation circuits claim trade offs pushing task 
task resources may function equivalently gives procedure prove trade offs manipulation circuits resources key idea relation equations different example cases resulting information invariant equations provide means formalizing proving tradeoffs catch strength trade determined strength relation 
prove trade information invariant framework 
establish xr relation set fj integer 
note needed 
show gamma sm fj mg integer 
information invariants formalism argues equivalent trade 
precisely gamma bta strength relation defined strength sm stronger stronger smaller subscripts stronger larger subscripts 
prove trade offs class tasks mechanism called universal reduction donald scope 
write write defines partial order space reduction types fjg theta partial order turn defines hierarchy trade offs 
argument constitutes proof case systems minimal systems system minimal task resource subset system system gamma accomplish task 
obtain proof case resources resources systems minimal 
argue empirically protocols 
proof minimality obtained challenge reader design test manipulation protocols fewer resources 
apply notion tradeoffs protocols 
theorem summarizes results terms resources theorem reductions tradeoffs hold ii qs gamma qs ii gamma ii qs gamma proof prove theorem arguing steps page 
section defines weak simulation equivalence relation manipulation circuits 
protocols ii qs solve manipulation task configuration pushed object evolves identically protocol 
circuits ii qs equivalent weak simulation 
words ii qs ii qs mirroring equation 
establishes step page 
claim know ii qs gamma careful reading proof claim reveals qs ii gamma 
see observe datapath comm delta see sufficient bandwidth emulate datapath comm labeled qs see 
observe equation implies qs ii gamma ae 
convention equation combine equations obtain ii qs gamma desired 
step page argue resources tradeoff strength 
obtain results similar theorem pushing protocols 
starting figures possible derive circuit protocol leave construction exercise reader 
circuit drawn analyzed information invariant framework possible prove qs gamma force force denotes sensor system consisting force sensor protocol lower bounds believe possible show lower bound form conjecture suppose require strong simulation strongly simulates sense definition 
conjecture equation hold strong simulation 
proof sketch conjecture proven showing graph permutation simulates ii 
proof claim sketches argument particular class permutations trick show permutations 
section operator vertex permutations graph permutations 
graph permutation specified pair oe oe oe vertex permutation oe edge permutation 
codesignation constraints protocols qs ii require exactly sites 
component located exactly site 
consider resources vertex permutation subject codesignation constraint image permutation inject point set vertex permutation oe partition resources subset located rest precisely proposition codesignation constraint im oe ae partitions resources vertex permutations correspondence 
components number possible partitions equation bounds number possible vertex permutations 
observe number edges number edge permutations bounded 
exists permutation strongly simulates see discussion section 
graph permutation oe oe oe obtain new manipulation circuit oe simulation function omega 
proof obtain enumerating graph permutation oe proving omega omega ii checked reasonable permutations shown equation holds 
checked 
principle finite number permutations enumerated 
omega ii omega semi algebraic principle computer algorithm prove lower bound conjectured techniques section 
great value prove lower bound interest find efficient proof technique nn large 
conjecture stands strong simulation 
known equation holds weak simulation 
proving require showing graph permuted system resulting dynamical system different limit set emulate dynamical behavior protocol ii 
believe plausible resources colocated single robot reasonable pushing algorithm developed 
trick ruled insisting insistence strong simulation 
strong simulation section requires output manipulation circuit identical corresponding configurations 
impossible accomplish actuators distributed manner protocol ii 
computing reductions claim proof done hand 
principle determine equation holds showing hand existence suitable permutation 
somewhat surprising strong simulation weak simulation fact automate process donald gives algorithms deciding relation precisely suitable encodings sensor systems computationally decide donald 
algorithm complicated describe 
examine special case give flavor details omitted 
basic idea involves employing theory real closed fields bounded quantification 
moment restrict reductions vertex permutation definition 
suppose vertices 
immersion encoded point generally partial immersion oe domain contains vertices modeled point guess vertex permutation oe oe existentially quantifying configurations vertices inside oe domain 
space permutations oe denoted sigma oe isomorphic similarly verify tarski sentence extensions oe oe universal quantification gamma vertices outside domain oe 
space extensions oe ex oe isomorphic gammal model algebraic codesignation constraints possibly constant semi algebraic mapping oe 
oe immersion oe set oe ae methods generalize graph permutation donald 
definition simulation function omega map omega space outputs 
call value omega oe omega sensor configuration oe output value sensor value oe 
definition call sensor system algebraic algebraically section algebraic configuration space semi algebraic algebraic simulation function omega construct permute simulation functions 
recall discussion simulation functions components connections 
decide means deciding oe 
decide exists permutation oe computationally requires deciding tarski sentence sigma oe ex oe oe ex omega oe omega delta models codesignation constraints require choice extension inner quantifier depend extension oe selected middle quantifier 
comparing sensor systems typically install calibrate appropriate relative configuration spatial relation codesignation constraint delta encodes 
decide decide decide determine oe comm definition 
recall definition compatibility partial section 
observe permutation operation combination operation commute compatible partial donald 
arguments guessing extensions permutations generalized mutatis mutandis compute combination definition algebraic sensor systems 
comm constant sized sensor system vertices edge constant number codesignation constraints may guess combine permutation time bounds lemma equations 
suppose algebraic 
define size number vertices simulation complexity omega size simulation functions omega omega measure complexity codesignation constraints delta 
decide equation time bounds lemma don algorithm deciding relations algebraic sensor systems 
runs time polynomial simulation codesignation able compute dominance calibration complexity see definition 
done independently faster equation decided see donald complexity omega sub doubly exponential size sensor systems 
system size time complexity omega rcd dimension configuration space single component 
call small omega polynomially large omega note small sensor systems equation rc complex equation simplified presentation 
full tarski sentence contains codesignation constraints outer quantifiers donald warn section examined special case partially situated domains oe non empty 
powerful generalization app 
sensor systems 
computing reductions case weak simulation possible limit set dynamical system checking equality limit sets computed 
difficult algorithmic problem possible cases 
underway extending methods 
sensitivity model wish explain theory revealed universal truth information invariants results sensitive particular encodings circuits chose analyze 
sensitive model 
consider ways investigate issue 
try changing model reduction specifically permutation slightly see affects results 
second ask input slightly differently 
results change lot 
specifically ask compare vertex permutation graph permutation section 
particular permit graph permutation vertex permutation change complexity bounds 
ii graph permutation give powerful reduction vertex permutation 
question gives insight sensitivity complexity bounds model reduction 
question ii sheds light cheaply cleverly sensor system gain lot power information complexity 
donald derives complexity bounds lemma equation vertex permutation 
donald asks expensive compute reductions graph permutation 
extending configuration space include possible edge permutations obtain extended configuration space sufficiently low dimension obtain complexity bounds lemma eqs 
long constants see page donald 
address question ii graph permutation give powerful reduction 
show lemma clone lemma graph permutation simulated vertex permutation preceded linear time linear space transformation sensor system 
proof sensor system clone vertices attach edges clones 
cloned system simulates original vertex colocated clone 
components remain associated original vertices 
move edge independently components originally connected moving vertices clones 
graph permutation simulated vertex permutation cloned system 
specifically graph labelling function construct new graph labelling function cloning function cl 
injective map universe vertices cl 
lift cl restrict obtain cl cl follows cl cl cl 
edge labels defined follows cl 
define cl cl 
define labelling function follows 
returns identity component simulated identity function 
suppose jv vertices jej edges 
transformation adds vertices computed time space jej 
denote cl linear space clone transformation described lemma 
consider wire reduction section 
see corollary suppose sensor systems graph permutation 
cl vertex permutation 
experiments information invariants formal post hoc analysis manipulation protocols pushing task 
techniques laboratory synthesis develop new manipulation protocols analyze robustness information content 
believe techniques useful transforming protocols remove assumptions increase generality robustness develop new protocols complex manipulation tasks 
give examples application sections 
belief methods give valuable insights information structure task 
proof strengthened follows 
recall components communicate explicit connection spatially colocated 
proof goes cloned vertices associated components version appeal changing encoding adding additional physical resources 
robots pushing box 
speeds equal infer cof outside cp right robot faster possible cof lies pushing rays left robot communication right robot measure measure init init repeat repeat measure deltax measure deltax deltax sigma deltax gamma deltax sign sigma gamma deltav deltav simplified version protocol performs velocity synchronization explicit local communication perform pushing task 
velocity robot incremented decremented fixed amount deltav depending robot gets ahead 
simplified version assumes sigma 
removing assumptions protocols described depend critically assumption velocity synchronization 
example speeds robots 
region pushing rays consider situation shown 
explanation cof location outside second explanation cof inside velocity synchronization key ensuring infer cof methods similar sections develop protocols require synchronization 
removing explicit synchronization manipulation protocols analogous removing explicit communication 
ideal protocol started assumed global coordination control global velocity synchronization 
developed velocity synchronization protocol explicit local communication 
analysis simple develop protocol give basic idea 
composed protocol qs corresponds splicing circuits qs 
slightly difficult techniques outlined hard careful analysis get special cases right 
removed explicit communication robots communicate world task dynamics 
leave exercise reader develop resulting communication free protocol box pushing explicit communication synchronization 
somewhat surprising uniform asynchronous protocol explicit communication developed task 
hint easiest way compose control loops add bits explicit communication 
bit datapath tells broken contact 
symmetric datapath tells breaks contact 
need communication falls synthesis similar 
careful analysis shows bits explicit communication removed 
large objects pushing task task protocol global coordination control protocol qs local ir comm partial synchrony protocol ii uniform spmd asynchronous summary parallel manipulation protocols 
show methods useful engineering new protocols difficult multi robot manipulation tasks 
direction considered multi manipulation protocols box see donald donald rus 
denote protocols started offline algorithm rus designed multi robot hands global coordination 
developed protocol cooperating mobile robots local ir communication 
protocol robot moves time task parallelized 
removed explicit communication agents allowed robots perform simultaneous asynchronous manipulation box 
protocol advantages protocol protocol robots suffice rotate box 
protocol uniform spmd program including termination predicate runs robots 
interesting longer necessary robots priori geometric model box model required course various assumptions hold task succeed point analyses reveal assumptions 
currently completing analysis 
terms program development synchrony communication approximate correspondence protocols believe methodology developing coordinated manipulation protocols emerging tools described donald donald rus donald developing parallel manipulation protocols 
start erdmann mason erdmann erdmann jennings rus manipulation protocol requiring global coordination agents fingers goldberg rus fences peshkin 
examples rus protocol 

distribute protocol spatially separated agents 
synchronize coordinate control explicit local communication 
examples protocol qs 
particular considerably improved protocol donald see rus 
define virtual sensor measures key signal wish servo 
example sigma better sign sigma gamma sigma qs 

find way implement virtual sensor concrete sensors mechanical observables 
example ii 

transform communication agents shared data structures 

implement shared data structures mechanical registers 
example register share 
believe methods useful developing parallel manipulation protocols 
think information invariants serve framework measure capabilities robot systems quantify power reduce fragility respect assumptions engineered control system environment 
believe equivalences derived communication internal state external state computation sensors prove valuable determining information required solve task direct robot actions acquire information solve 
discussion raises number questions 
example robots externalize record state world 
answer depends environment dynamics 
juggling robot probably 
conveyor belt may possible suppose bad parts may removed 
certainly possible quasi static manipulation single agent 
moving multi agent tasks partially dynamic tasks attempting investigate question experimental theoretical setting 
consider relation defined section 
equivalence relation obey graded transitivity donald analogy ct reductions may ask class sensori computational systems contain complete circuits member class may reduced 
note complete circuits graded equivalent record programs world way may externalize state 
universal manipulation circuit read programs perform correct strategy accomplish task 
mechanism lead robot infer correct manipulation action performing sensori motor experiments 
appendix term sense donald jennings particularly henderson similar concepts 
tommy lily reorient couch asynchronous spmd protocol requiring explicit communication 
permutation 
section examined special case partially situated domains oe non empty 
powerful generalization donald sensor systems 
ideas section give version permutation applicable partially immersed sensor systems codesignation constraints 
set codesignation constraints defines different arrangement space 
cell arrangement turn corresponds region permutation corresponds selecting different family respecting codesignation constraints 
corresponds choosing different region picture permutation really different computational model situated permutations discussed section 
suppose simple sensor system vertices codesignation constraint write relation hold 
relation induces quotient structure corresponding quotient map identifies vertices similarly model non codesignation constraint diagonal delta ae avoided 
permutation viewed follows 
gamma delta 
quotient gamma delta partial immersion chosen compatibly codesignation constraints view permutation bijective self map disjoint equivalence classes ex gamma delta sigma general group structure permutation respect quotient structure codesignation correspondingly call permutations valid 
define diagonal delta precisely 
sensor system modeled partial immersion empty domain 
case ex equation specializes single equivalence class singular case take different approaches defining permutation 
may define consistent situated permutation useful 
choose different definition 
permutation redefine sigma ex special case empty domain 
ii simple may define sigma set vertices point define ij th diagonal delta ij define permutation bijective self map cells arrangement generated diagonals delta ij sigma arrangement complexity drc ex sigma cell arrangement ex witness point cell 
representative equivalence class ex situated permutation permutation viewed self map cells ex equivalently self map witnesses cleanest way model main examples section treat sensor systems initially respecting non codesignation constraints 
may done algebraically specifying codesignation constraints letting domain immersion empty ii choose permutations respect codesignation constraints 
methods section extended guess permutations 
examples section guess permutation corresponds choice vertices 
example permutation quite powerful 
consider deciding equation example consider vertex permutation simple sensor systems 
particular want see sense permutation replace oe oe obtain sigma oe ex oe oe ex omega oe omega situated permutation restricted choosing partial immersion oe fixing number vertices permute near vertices corresponds choice 
process gets right codesignation relation quotient map non codesignation relation delta definition ii permutation extended algebraic sensor systems methods section 
cost generality know topologically equivalent choice oe choose permutation holds 
simple sensor systems topologically equivalent means vertex 
permutation allows precisely want 
place partial immersion oe witness point oe oe represents equivalence class ex oe vertices oe oe says vertices colocated 
oe outer existential quantifier chooses permutation represents equivalence class ex vertices 
disjoint equivalence classes subsets equivalence class different vertices set classes sigma sigma 
choice selects vertices 
codesignation constraint delta enforces measuring outputs install place 
specifically oe data determines vertices choice determines vertices colocated construction delta determines vertices colocated 
specifically configuration oe turn defines region oe configuration space region constraints necessary relative oe 
surprisingly allowing permutation change complexity bounds section donald acknowledgment historical note 
key ideas arose discussions tom lozano erez mike erdmann matt mason rubinfeld 
tom suggested studying finger pushing task laid framework analysis 
ideas develop suggestions mike erdmann particular proposed notion calibration complexity 
perspicuous reader notice mike erdmann robots experimental devices described built lab jim jennings russell brown jonathan rees craig becker mark kevin newman ideas come light help 
drawing illustration 
lee smith amy briggs karl suggestions helped draw figures grateful help 
blum kozen 
power compass mazes easier search graphs 
proceedings th symposium foundations computer science pages ann arbor mi 
briggs 
efficient algorithm step compliant motion planning uncertainty 
algorithmica 
canny reif 
new lower bound techniques robot motion planning problems 
proceedings th symposium foundations computer science pages 
canny 
computability fine motion plans 
proceedings ieee international conference robotics automation pages scottsdale az 
donald jennings 
constructive recognizability task directed robot programming 
journal robotics autonomous systems 
donald jennings rus 
experimental information invariants cooperating autonomous mobile robots 
proceedings international joint conference artificial intelligence workshop dynamically interacting robots chambery france 
donald jennings rus 
theory information invariants cooperating autonomous robots 
proceedings international symposium robotics research hidden valley pa 
donald 
error detection recovery robotics volume lecture notes computer science 
springer verlag new york 
donald 
complexity planar compliant motion planning uncertainty 
algorithmica 
donald 
robot motion planning 
ieee transactions robotics automation 
donald 
information invariants robotics parts ii 
proceedings ieee international conference robotics automation pages atlanta ga 
donald 
information invariants robotics 
artificial intelligence journal 
erdmann mason 
exploration manipulation 
ieee journal robotics automation 
erdmann mason 
mechanical parts orienting case polyhedron table 
algorithmica 
erdmann 
backprojections fine motion planning uncertainty 
international journal robotics research 
erdmann 
probabilistic strategies robot tasks 
mit ai lab technical report massachusetts institute technology 
erdmann 
action sensing design 
proceedings ieee international conference robotics automation volume pages atlanta ga 
erdmann 
randomization robot tasks dynamic programming space knowledge states 
algorithmica 
goldberg 
orienting parts sensors 
algorithmica 
hopcroft schwartz sharir 
complexity motion planning multiple independent objects pspace hardness problem 
international journal robotics research 
horswill 
analysis adaptation environment 
artificial intelligence journal submitted 
jennings rus 
active model acquisition near manipulation mobile robots 
iasted international conference robotics manufacturing pages oxford england 
kozen 
automata planar graphs 
fundamentals computing theory proceedings conference algebraic arithmetic categorical computer science 
lozano erez mason taylor 
automatic synthesis fine motion strategies robots 
international journal robotics research 
mason lynch 
dynamic manipulation 
proceedings ieee rsj international symposium intelligent robot systems 
mason 
mechanics planning manipulator pushing operations 
international journal robotics research 
natarajan 
planning assemblies 
proceedings th annual symposium computational geometry pages 
peshkin 
planning robotic manipulation strategies sliding objects 
phd thesis university pittsburgh pa 
rees donald 
program mobile robots scheme 
proceedings ieee international conference robotics automation nice france 
reif 
complexity mover problem generalizations 
proceedings th symposium foundations computer science 
rosenschein 
synthesizing information tracking automata environment descriptions 
tr research 
rus donald jennings 
moving furniture mobile robots 
proceedings intelligent robot systems pages pittsburgh pa 
rus 
fine motion planning dexterous manipulation 
phd thesis cornell university department computer science ithaca ny 
