integrating sounds motions virtual environments james hahn larry jong won lee department electrical engineering computer science george washington university washington dc hahn seas edu sounds result motions virtual objects virtual environment 
sounds motions caused treated integrated way 
sounds motions proper correspondence resultant confusion lessen effects 
integrated system modeling synchronizing rendering sounds virtual environments 
key idea system functional representation sounds called timbre trees 
representation model sounds parameterizable 
parameters mapped parameters associated motions objects environment 
mapping allows correspondence motions sounds environment 
representing arbitrary sounds timbre trees difficult process address 
describe approaches creating timbre trees including genetic algorithms 
rendering sounds aural environment achieved attaching special environmental nodes represent attenuation delay listener effects timbre trees 
trees evaluated generate sounds 
system describe runs parallel real time processor sgi onyx 
see main contribution system conceptual framework consider sound motion integrated virtual environment 

sounds motions objects virtual environment inherently linked 
sounds general caused motions objects environment 
characteristics sounds shaped characteristics objects motions 
reinforce give coherent perceptual experience 
primary focus far spatial localization sounds finite impulse response fir filters usually head related transfer functions hrtf wenzel pope 
link motions objects resultant sounds minimal 
problem generating effective sounds divided subproblems sound modeling sound synchronization sound rendering hahn 
sound modeling issue long studied field computer music mathews moore dannenberg 
primary consideration effective parameterization sound models parameters generated motion mapped 
effective sounds mean realism effective encoding information area interest data sonification 
parameterization synchronization sound investigated relation user interfaces gaver data sonification computer animation thalmann thalmann hahn hahn mishra hahn 
sound rendering refers process generating sound signals models particular environment process generating images geometric models 
problems associated sound rendering studied field acoustics signal processing 
primary consideration rendering sounds keep desirable sampling rate analogous image rendering problems 
system modeling synchronizing rendering sounds 
key idea system functional representation sounds called timbre trees hahn 
representation model sounds parameterizable 
parameters mapped parameters generated motions objects environment 
mapping allows correspondence motions sounds environment 
creating timbre trees arbitrary sounds difficult process scope 
heuristics including genetic algorithm process easier 
rendering aural environment achieved attaching special environmental nodes represent attenuation delay hahn listener effects timbre trees evaluating resultant trees 
system describe runs parallel real time processor sgi onyx 
see contribution system conceptual framework consider sound motion integrated virtual environment 
choice real time performance generality went generality solution 
motion image rendering sound timbre tree parameters motion parameters image sound sound rendering sound modeling timbre trees synchronization mapping 
integrating sound motion section describe method model parameterizable sounds timbre trees 
section methods map parameters timbre trees motion parameters virtual objects described 
section briefly describe way render timbre trees virtual environment 
section implementation system evaluating timbre trees virtual environment described 

sound modeling sound generation active area research computer music 
computer music systems generate sounds connecting software modules add subtract multiply sound signals 
systems flexible suffer major drawbacks application 
events modeled computer music systems musical nature naturally correspond events virtual environment 
second parameterization instruments generated systems geared musical performance difficult modeling material environmental characteristics arbitrary 
sounds currently sampled real sounds synthesized midi devices 
problems approaches sounds easily parameterized may correlated motions 
real sounds place limiting 
parameterizing real sounds attributes amplitude pitch difficult correspond reverse engineering trying determine sounds created sounds 
midi synthesizers allow limited range sounds supported specific hardware 
want ways represent sounds reflect way mechanism responsible sounds 
gaver gaver describes parameterization heuristic analysis physical attributes sound determine listener perception phenomena producing sound 
approach give feedback computer human interaction 
immersive environment notion feedback critical expansive 
timbre trees represent general parameterizable sounds 
approach allows sounds including involving sampled sounds represented parameterized 
representation functional composition description sounds 
approach field computer music music fugue mathews moore dannenberg 
interested representing general sounds synchronized motions 

functional composition timbre trees timbre trees similar shade trees cook image synthesis 
main idea shade trees functional composition allows flexible integration various shading texturing techniques 
advantage tree structure modularity simplicity composing endless variety techniques 
operations performed dot product vector normalization form nodes tree 
node operates parameters control shading appearances turn produces appearance parameters 
entire tree evaluated root returns final color 
timbre trees nodes tree operate timbre trees representations sounds parameters 
evaluation tree produces sounds particular timbre 
object oriented terminology timbre tree set associated parameters seen abstraction class sounds 
tree evaluated specific set parameter values seen particular instantiation class 
user generate new classes sounds libraries tree classes elementary nodes 
parameters time varying associated timbre trees produce sounds change time 

timbre tree structure conceptualizing procedural sounds trees represent functions provides rich representation sounds easily manipulated computer sound designer 
node timbre tree may represent numerical constant named parameter may passed motion control system example time fundamental frequency angular momentum digitally sampled sound mathematical function zero arguments case argument timbre tree vector numerical constants timbre trees library representation timbre trees easily manipulated computer provides conceptual handle users think structures needed textual representation input output users able read write 
trees represent functions recursively defined chose language 
combine modal weights modal frequencies police siren fourier synthesis vibrating body sine sine sine sine sine combine sine 
timbre trees corresponding expressions standard mathematical functions implemented exp log implemented special purpose functions useful sound synthesis number elementary waveforms sawtooth triangle square sine types noise white noise perlin noise perlin signal processing functions filtering convolution 
provided mechanism extending language add new functions arbitrary complexity coding functions 
shows simple timbre tree frequency modulated siren sound associated lisp expression 
language supports vectors vector operations 
vector operations quite useful cases single node operates array parameter values 
example final sound vibrating body approximated weighted sum vibration modes body frequency domain fourier synthesis 
combine node sums vector argument corresponding frequencies weights vibration modes returns single scalar value 
results simpler readable manageable tree 
evaluation timbre trees temporal domain evaluation shade trees spatial domain 
sample point soundtrack argument values bound timbre tree parameters evaluation performed postorder traversal tree 
output root tree computed value sound time sample point 
timbre trees sampled sound nodes evaluation process involve re sampling tree essentially analytic function 
avoids aliasing artifacts texture mapping 

generation timbre trees timbre tree structure gives way represent sounds directly define methodology constructing sounds 
just just approach modeling objects textures computer graphics approach modeling sounds 
underlying physics create tree modes vibrations simple objects hahn heuristics simplify complex phenomena fourier synthesis 
trees generated trial error 
general sound modeling difficult problem usually relies heavily designer experience creativity 
modeling arbitrary sounds scope 
taken advantage timbre tree representation sounds genetic algorithms gas explore vast space possible sounds 
gas methods optimization surprisingly adept finding global optima large high dimensional search spaces koza hahn 
karl sims gas explore procedural textures represented lisp expressions sims 
initial guess mutated versions timbre tree representation derived form generation 
trees generation evaluated resulting sounds played time user rates fitness 
inhabitants generation derived choosing parents previous generation 
parents chosen randomly probabilities user ratings 
parents combined form generation children experience mutations 
cycle continues user decides tree generated represents desired sound 
process able produce entire classes sounds sounds chain 
classes clearly derivatives original sound defy description difficult conceive aid gas 

correspondence motion refer system controls updates positions objects users motion control system computer animation 
motion may caused user gestures locomotion simulation physically modeling hahn behavioral modeling kinematic techniques watt watt 
sound events automatic physics 
example objects come contact collision sounds generated 
case physically motion control parameters needed characterize resultant sounds impulse due collision come directly simulation 
cases simple kinematic information trajectory needed information velocity acceleration calculated 
sound events direct physical correspondence 
example may want indicate distances objects sounds 
behavioral modeling may want indicate emotions objects sounds 
oftentimes creative mapping physical basis effective reinforcing certain correspondences 
sounds tend affect listener subconscious way visual cues allowing freedom 
mappings sonification express data 
timbre trees usually associated virtual objects scene 
objects move environment associated timbre trees move 
sound events occur corresponding timbre trees instantiated 
timbre trees instantiated particular point time space mapping parameters motion control system parameters associated timbre trees 
mapping depends great extent particular timbre tree constructed determines parameters available 
generic sound parameters amplitude delay attached timbre tree 
mapping motion parameters timbre tree parameters physically timbre trees mapping obvious 
heuristically generated trees construction process suggest natural mapping 
example case heuristic collision sound object striking drum timbre tree loudness combine sine damp damping collision time force distance center collision time force distance center collision time force distance center 
object bouncing drum timbre tree uses fourier synthesis technique described amplitude value loudness damping rate damping parameters 
values parameters supplied physically motion control system objects considered rigid bodies 
case loudness mapped impact force object strikes drum surface damping mapped distance center drum point impact 
timbre tree instantiated time object strikes drum 
mappings give correct appearance correspondence sound motion considering complexities drum surface vibrations 

mapping user gestures timbre tree parameters motions due interactions user objects environment 
interactions sounds generated result surface textures objects 
shows procedural texture wood 
surface object finger nail pen sounds generated signal characteristic corresponds microscopic grain texture 
shows signal generated intersecting dimensional wood texture trajectory scraping object diagonal line 

procedural texture wood trajectory scraping distance time intensity 
intersection texture trajectory signal filtered geometry material characteristics object surface 
analogy needle smaller harder objects able pick smaller microscopic surface features 
larger softer objects act low pass filters 
resultant signal globally scaled time axis speed surface 
amplitude scaled normal force surface arrive final sound 
shows timbre tree represents process 
sounds generated function texture scraping object speed force surface 
freq intersect filter trajectory wood grain motion user surface filter determined size property scraping object frequency modulated speed amp amplitude modulated normal force 
timbre tree corresponding scraping wood texture 
rendering rendering sounds shares similarities rendering images hahn 
sound energy emitted needs traced environment 
sound reaching listener needs processed take account listener effects interaural delay shoulder reflection head shadowing response 
effects expressed convolution filters known head related transfer functions hrtf wenzel pope 
processes seen additional environment nodes attached original timbre trees 
resultant trees evaluated sampled frequencies generate final sounds 
corresponds rasterization occurs image rendering 
process rendering sounds seen rendering pipeline analogous image rendering pipeline 
just image rendering consider stage pipeline transformation attached original timbre tree 
advantage concatenate rendering transformations transformation applied original timbre tree 
practice real time digital signal processors dsp spatial placement listener effects exist crystal river engineering parts pipeline processed separately 
listener environmental effects final timbre tree environment nodes sound source timbre tree direct sound ambient sound direct attenuation directionality direct sound ambient hrtf global ambient convolution listener effects source timbre tree source timbre tree 
sum direct ambient terms tracing sound energy acoustic environment quite complex comparable tracing light energy visual environment render images consideration differences wavelength speed 
forward ray tracing major paths sounds computer animations hahn 
due computational overhead including real time evaluation timbre trees lumped global effects ambient term initial implementation 
similar ambient term image rendering 
ambient term calculated associating partitioned spaces virtual environment funkhouser sequin certain acoustical properties 
walk building example expect room entered exhibit unique acoustical personality 
rendering sound performed context space sound heard 
acoustic characteristics simulated currently simply causing reverberation function space geometry reflectivity 
heuristics simplified acoustic models sound passing enclosed volumes basic environmental effects due room size material composition provided 
final sound heard sum ambient term term corresponds direct path sound source listener 
shows timbre tree environmental nodes 
currently consider listener effects planning real time dsp handle functionality node 

evaluating timbre trees virtual environment system evaluating timbre trees virtual environment integrated real time audio system applications called virtual audio server vas hahn 
vas system developed testbed studying realtime audio virtual environments 
regard generality system utmost importance conception 
system supports multiple clients connected sound server 
digital audio output system directed audio output device playback typically form real time device 

timbre trees primary requirement interactive timbre trees evaluated real time 
evaluation timbre tree produce single sample relatively expensive process usually involves number floating point operations 
producing digital sound signal timbre trees requires evaluation tree sampling rate sound signal minimally khz extreme aliasing avoided 
places large computational burden machine 
parallel tree evaluation client motion control system server event handler listener space message stream environmental effects timbre trees listener space parameters final timbre trees position parameters position parameters spatial placement device vas system architecture compounding problem computational requirements timbre tree requirement multiple concurrently executing trees 
unreasonable expect sounds may active virtual environment time 
timbre trees computer animation gives convenience priori knowledge simulation results due deterministic nature scripted animation 
allows parameterization tree keyframed parameters 
motion may keyframed non deterministic nature user realtime interaction environment requires dynamic approach running simulation communicate parameters tree instantaneously events occur 

system architecture vas system developed object oriented paradigm 
class timbre tree forms class hierarchy nodes comprising timbre tree derived 
listener associated position orientation number listener attributes 
idea partitioning distinct acoustical spaces modeled class space 
space objects allow motion control system define spaces associate distinct acoustical properties spaces 
definition properties includes timbre tree object representing background ambient sound environmental effects space sounds occurring space 
vas system constructed client server architecture clients motion control systems 
approach chosen generality load balancing 
computational burden simulation sound generation heavy machine 
client server architecture allows computational burden distributed machines suitability machine architecture task 
clients communicate server event handler vas message passing protocol tcp ip 
general categories events communicated server object listener movement environment sound activation deactivation events events indicating parameter value change 
discussed relation timbre trees mechanism parameterized sound allows dynamic control sound user defined mappings 
vas system provides general mechanism parameterization representation sound 
root class timbre tree provides mechanism maintaining dynamically updating parameter value pairs 
interpretation parameters depends derived classes timbre trees 
resultant trees may environmental nodes attached listener attributes space attributes parameters 
instantiated timbre trees evaluated parallel 
result evaluation digital sample stream passed hardware devices spatial placement 

parallel evaluation timbre trees order achieve real time performance capability handling multiple concurrent timbre trees parallelism employed 
parallelism achieved light weight process thread mechanism provided sgi irix operating system silicon graphics 
system implemented sgi onyx processors 
active sound assigned threads responsible evaluating timbre tree real time 
multiple threads required complexity timbre tree precludes evaluation single thread real time 
cases dynamic allocation scheme coordinate effort cooperating threads 
sample stream divided blocks 
unallocated block posted shared memory idle thread claims free block samples updates shared memory free block 
timbre trees evaluated thread blocks corresponding ms output sampling rate system 
size blocks determines granularity parallelism 
lower bound block size due overhead synchronization communication 
experimentation block size block sizes ms system performance begins degrade considerably 
upper bound block size due minimum perceivable latency sound signal produced 
system send block output device completed 
necessary block size fall minimum perceivable latency 
sample block equivalent ms produces acceptable amount delay 

sounds important integral part 
research far concentrated primarily localization sounds environment 
missing correspondence motions resultant sounds 
outlined system integrating motion sound virtual environment 
key approach express sounds parameterizable structures timbre trees 
allows users easily design new timbre trees elementary nodes libraries timbre trees 
timbre tree parameters mapped motion parameters desired correspondence realized 
biggest problem timbre trees computational load 
optimizations code table lookup techniques enabled evaluate moderately complex trees real time 
results encouraging capable evaluating trees concurrently 
investigating levels detail sound cost benefit criteria equivalent image rendering funkhouser sequin 
feel ultimate logical solution problem sound equivalent hardware image rendering pipeline 
system suggests important step developing system 

members george washington university computer graphics laboratory laboratory advanced computer applications medicine 
special go joe helsinki university technology 
partial support provided naval research laboratory electronics telecommunications research institute etri 

blattner 

earcons icons structure common design principles 
human computer interaction vol 
pp 


simulator domestic 
audio eng 
soc vol pp 
chamberlin 

musical applications microprocessors 
hayden book cook 

shade trees 
proc 
siggraph vol pp 
dannenberg fraley 

fugue language sound synthesis 
ieee computer vol pp fletcher 

physics musical instruments 
springer verlag 
hahn 

framework integrating audio virtual environments 
proc 
spie symposium electronic imaging science technology 
funkhouser sequin 

adaptive display algorithm interactive frame rates visualization complex virtual environments 
proc 
siggraph pp 

gaver 

synthesizing auditory icons 
proceedings interchi 
hahn 

genetic programming articulated motion 
journal visualization computer animation volume number pp 

hahn 

realistic animation rigid bodies 
proc 
siggraph acm computer graphics vol pp hahn darken lee 

integrated virtual environment system 
presence teleoperators virtual environments vol 
pp 
hahn lee mishra 

integrated approach motion sound 
journal visualization computer animation volume issue pp 

mishra hahn 

mapping motion sound music computer animation 
invited proceedings pacific graphics 
koza 

genetic programming 
mit press 
mathews 

technology computer music 
mit press 
moore 

element computer music 
prentice hall englewood cliffs nj 
nakamura noma yoshida 

automatic background music generation actors emotion motions 
proceedings pacific conference computer graphics applications vol 
pp 
perlin 

image synthesizer 
proc 
siggraph vol pp 
pope 

audio synthetic environment aural renderer distributed virtual reality system 
proc 
ieee vrais pp 



platypus computer music workstation pope ed 
tempered object musical applications object oriented software technology 
mit press 
silicon graphics parallel programming silicon graphics computer systems 
version documentation number 
sims 

artificial evolution computer graphics 
proc 
siggraph vol pp 

hahn 

sound rendering 
proc 
siggraph vol pp 
hahn lee 

physically models genetic algorithms functional composition sound signals synchronized animated motion 
international computer music conference icmc 


synthetic actors computer generated films 
springer verlag 


manual audio processing system supporting programs 
mit media lab 
watt watt 

advanced animation techniques addisonwesley 
wenzel 

localization virtual acoustic displays 
presence teleoperators virtual environments 


audio design sound recording techniques film video 
prenticehall 
