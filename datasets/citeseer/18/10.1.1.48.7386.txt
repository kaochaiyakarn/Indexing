universit des saarlandes fachbereich informatik saarbr germany www cs uni sb de pub www seki report mechanization diagonalization proof strategy seki report sr mechanization diagonalization proof strategy fachbereich informatik universitat des saarlandes saarbrucken germany cs uni sb de cs uni sb de empirical study mathematical proofs diagonalization aim mechanization proof planning techniques 
show proofs constructed strategy finds indexing relation ii constructs diagonal element iii implicit contradiction diagonal element explicit 
suggest diagonal elements represented 
classical automated theorem proving reasoning process carried object level level order logic representation mathematical objects study 
searching proof means applying calculus inference rules manipulate initial problem situation consists negated theorem proved assertions definitions axioms theorems order find final situation instance 
guarantees theorem logical consequence assertions 
tactical theorem proving applies tactics composition calculus inference rules 
reasoning remains object level 
proof planning bun search sequence tactics proof plan applied construct object level proof 
operators methods specifications tactics represented meta language 
state meta language tactic applied effects 
reasoning carried meta level 
main aspects approach interesting demonstrated inductive theorem proving clam follows 
aspect proof planning search proof plan done context known mathematical proof technique induction diagonalization 
proof technique characterizes proof schema instantiated sequence planning steps turn generate object level proofs 
similar specifications basic tactics proof schemata called proof methods terminology clam 
mathematical proof technique implicitly comprises instructions globally perform associated part proof want extend proof schema representation technique additional knowledge expresses instructions 
approach call structures representation mathematical proof techniques proof strategies specifications basic tactics correspond ground proof plan steps called proof methods clam 
instance induction proof strategy consists ffl induction method computes induction schema reduces theorem known subgoals base step case ffl basic methods instance symbolic evaluation method eventually induction proof strategy prove subgoals base case ffl rippling proof strategy rewrite subgoal step case corresponds induction induction hypothesis close proof path 
wave methods choose appropriate rewriting rules 
ffl basic methods instance fertilize method close proof path step case employing induction hypothesis 
second aspect proof planning abstraction mere logical manipulation formulae calculus inference rules 
instance task proving induction clam treated reducing syntactical differences induction hypothesis rippling proof strategy intention employing close proof path 
point proof planning analyze proof techniques order determine typical proof steps find suitable control perform steps proof planning process 
report properties diagonalization strategy noticed empirical study known proofs diagonalization principle 
give essential proof steps diagonalization technique suggest implement steps proof planning environment 
cantor diagonalization order show main principles diagonalization technique consider cantor theorem 
diagonalization technique invented called cantor diagonalization kle 
theorem states power set set greater cardinality set equivalent conjecture surjective function set power set surj prove conjecture assume surjective function set power set deduce contradiction diagonalization 
proof diagonalization described follows diagonalization method turns demonstration assertions sort 
certain set enumerated suitable fashion 

possible help enumeration define object different object enumeration diagonalization part cantor proof enumerable set 
set enumerated help indexing relation diagonal element object defined help enumeration 
different object enumeration set fx jx belongs element index 
definition belongs iff belong 
obviously contradiction 
order formulate characteristic proof steps diagonalization proof consider formal proof cantor theorem interactively constructed omega gamma environment problem description table proof interactively constructed level natural deduction nd calculus generated application nd rules gen 
abstracted called assertion level hua assertions addition nd rules justifications 
tnd refl equiv surj def surj pset def def powerset surj table formulation powerset problem key steps diagonalization part proof ffl property diagonal element belongs power set stated line ffl application definition surjectivity surj def line prove existence index diagonal element assumed stated line ffl applying diagonal element function index done line obtain implicit contradiction line ffl contradiction explicit case analysis lines 

analyzing key proof steps want suggest systematic way search diagonalization proof central point diagonalization construction diagonal element 
diagonal element represented lambda expression indexing function sub term see line 
convenient search indexing function trying construct diagonal element 
example taken 

surj hyp 
surj hyp 
hyp 

ande 
impi 

def 
pset def proof 
surj def 
hyp 
ande 
refl 
subst 
equiv 
case 
case 


note case 
case 
ande 


note 
tnd 

ore case analysis 




surj noti 
surj formal proof powerset example cantor proof function binds diagonal element element enumerable set element index property follows surjectivity function represented formula indexing property provides important information specification diagonal element type functional type corresponding element type domain type type element type 
addition type constraints diagonal element different element enumerable set 
cantor proof achieved enforcing diagonal element differs element property 
call property diagonal property represented cantor proof 
diagonal element inverts diagonal property occurrence lambda expression representing diagonal element line 
order get contradiction diagonal element constructed way belongs enumerable set occurrence lambda expression representing diagonal element line 
consequently diagonal element index diagonal property element contradicted construction principle diagonal element 
summarize diagonalization proof carried way 
search indexing property ensuring formula schema ff fi ff matches provable formula 

construct function diagonal element belongs inverts diagonal property 
necessary function inverts property set indices sufficient invert proposition index inverting property formulated lambda expression schema higher order variable partially specifies diagonal element actual term structure constructed instantiating meta variable belongs satisfies inverting property 

consider index diagonal element exists due indexing property 
implicit contradiction explicit case analysis cases deduce equality inverting property 
look diagonalization examples order verify observations section patch suggested proof construction 
diagonalization examples section consider diagonalization proofs diagonalization argument somewhat different cantor theorem 
differences important want extend diagonalization strategy suggested previous section 
halting problem halting theorem states binary computable function decides unary computable functions halt 
formally term form yn stays lambda expression schema zn yn higher order variable denotes instantiated meta variable 
term form yn stays application zn yn denotes term object level 
tnd ext fn gn xn godel nn xu yu ifdef xu yu defined defined defined halting xn defined table formulation halting problem expressed defined iff problem formulated table formalization sorts denotes set natural numbers 
symbol represents non terminating function 
union fug 
denotes set 
order prove theorem need godel enumeration theorem states enumeration function unary computable function natural number corresponds application natural number computable function 
furthermore obvious definitions lemma total computable function function zn computable condition usual semantics 
shows formal proof assertion level halting problem formalized table 
proof interactively constructed omega gamma 
proof steps lines assume computable function halt returns iff function halts input rest proof consists inferring contradiction diagonalization 
want examine part proof find key proof steps noticed cantor diagonalization 
indexing relation godel lemma 
delivers enumerable set indexing function set indices 
diagonal element line represented lambda expression sub terms 
term denote proposition diagonal property predicate defined term defined 
inverting property diagonal element guaranteed conventional semantics properties ffl halt defined implies substituting conjecture halt defined line ffl defined line ffl defined line 

help properties equality line implicit contradiction diagonal element explicit case analysis lines 

formalization taken 

defined hyp 
defined hyp 
defined hyp 
halt halt defined hyp 
halt 
halt proof 
halt godel 
halt hyp 
halt ext 
halt 
halt com 
subst 
halt defined case 
halt case 
halt ifdef 
trans 
com 
defined subst 
defined sube 

note case 
halt case 
halt ifdef 
trans 
com 
defined subst 
defined sube 

note 
halt halt tnd 

ore case analysis 




defined noti formal proof halting example compared proof cantor theorem inverting property diagonal element complicated 
diagonal element represented term condition sub term halt equivalent diagonal property defined 
sub term belongs relation diagonal property predicate sub term 
consequently specify diagonal element case term denote proposition lambda expression schema 
inverting property holds properties satisfied ffl denotes diagonal property ffl ffl 
formulae denotes index diagonal element 
note instantiated object term 
total problem consider theorem total set tot fx nj defined phi indices total computable functions recursively enumerable 
phi denotes universal function takes natural numbers arguments delivers result call th computable function godel enumeration argument 
informal proof theorem page 
theorem formalized table formal proof 
nn tot xn phi fn res nn tot xn phi fn res xn defined fn res xn lem sn gn xn yn zn tot axiom res total tot table formulation total problem assuming set tot 
line applying lemma lem get conjecture line contradiction derived diagonalization technique follows ffl construct diagonal element show belongs set line 
function phi indexing function 
ffl prove existence index diagonal element lines 

ffl deduce equality line contradicts equality axiom axiom equality line 
diagonalization part proof differs cantor problem halting problem aspects actual indexing property example represented conjecture fn res nn xn phi directly proved application assertion problem description 
assertion satisfies property indexing relation second conjunct line allows deduction second possible indexing property 
consequently deal problem situations indexing property 
examination hypotheses problem 
tot hyp 
tot hyp 
tot tot lem 
tot tot hyp 
tot 
phi 
phi 
phi 
defined phi 
defined phi 
defined phi 
defined phi 
phi 
phi 
phi proof 
tot phi phi 
tot phi phi hyp 
tot 
phi phi 

hyp 
phi phi subst 
phi phi ext 
phi phi explicit contradiction 
phi phi 
phi phi axiom 

explicit contradiction 






tot formal proof total example description verify assert assertion prove indexing property incomplete relative task 
check availability indexing relation problem situation 
second difference concerns construction implicit contradiction diagonal element examples diagonal element contradict diagonal property term type example type diagonal term different truth value type diagonal element term containing sub term equal 
satisfy inequality diagonal element term position diagonal denotes index diagonal element 
means diagonal element represented lambda expression schema satisfy inequality 
general alternative taken account construction diagonal element 
problem consider theorem set fx nj defined phi recursively enumerable exercise page 
formalization theorem necessary assertions table 
nn defined phi fn res comp nn xn phi def sn gn res comp xn defined tnd oe oe oe table formulation problem shows formal proof problem assertion level constructed interactively omega gamma 
assuming set recursively enumerable line applying recursive definition line show contradiction diagonalization follows ffl state diagonal element belongs set comp line ffl prove existence index diagonal element lines ffl deduce obvious contradiction line help equality line second conjunct line definition 
diagonalization proof part differs previous diagonalization proofs diagonal element function directly problem situation need constructed 
consequently alternative taken account searching diagonal element 
lambda expression schemata suggested previous examples specify diagonal element instantiated function symbol belongs enumerable set 
inverting property stated conjectures proved current hypotheses 
meta variable denotes indexing function index diagonal element examples appendix 
diagonalization strategy section summarize properties diagonalization proofs 
give essential proof steps suggest steps performed implemented proof planning process 
goal diagonalization strategy contradiction 
diagonalization proof plan constructed way 
hyp 
comp defined def 
comp defined hyp 
comp proof 
phi 
phi hyp 
defined 
defined phi subst 
defined phi 
defined phi 
defined phi defined phi sube case 
defined phi case 
defined phi sube 

case 
defined phi case 
defined phi 


defined phi defined phi tnd 

case analysis 




formal proof example 
verify formula schema ff fi ff matches provable formula hypotheses order obtain indexing property 
check function diagonal element belongs satisfies inverting property relative term 
specification corresponding inverting property index depend type construction ffl type ff term denotes proposition predicate unify lambda expression schema ff 
inverting property ensured formula 
ffl function unify lambda expression form ff inverting property guaranteed formulae lambda expression form ff differs identity fi inverting property satisfied conjectures proven 

find proof plan making implicit contradiction diagonal element explicit structure plan determined instantiation diagonal element corresponding inverting property 
generate proof plan diagonalization proof partial plans computed previous steps 
success diagonalization proof strategy depends mainly second proof step existence indexing property existence function diagonal element satisfies inverting property relative term index diagonal element 
belongs enumerable set depending task hand need special methods special planning task 
furthermore need control knowledge solve conflict situations situations applicable methods 
verifying existence indexing property amounts general complex task formula schema matches provable formula hypotheses 
difficult obtain provable formulae match schema 
suggest restrict task find formulae proved assertion application hypotheses match schema 
methods planning assertion applications specify hypothesis assertion prove formula schema specify resulted subgoals premises assertion application 
assertion application determine possible indexing properties 
instance total example combine assertions get right indexing property 
extend procedure assertion application possibility combine assertions 
purpose investigate indexing property proved combining assertions 
provide control knowledge choose indexing property available 
control rule state hypotheses belong original proof assumptions introduced proof important proving current goal goal depends indexing properties proof involves hypotheses preferred 
second main step diagonalization proof construction diagonal element 
diagonalization strategy function corresponds diagonal element partially specified 
element enumerable set unify lambda expression schemata proposition depends inverting property hold 
suggest middle reasoning construction function 
goals process formula schema enumerable set meta variable represents function constructed conjectures specify inverting property 
suggest prove goals assertion application higher order unification 
instance halting problem membership diagonal element enumerable set formula schema reduced applying assertion xu yu unifying zn subgoal 
metavariable instantiated proving resulted subgoal 
general assertion application fully instantiate meta variables occur considered subgoals 
subgoals proven assertion 
situations instantiation alternatives need suggested order satisfy goal hand continue search process 
suggest provide instantiation alternatives special heuristics satisfy goal proposing possible bindings higher order variables 
instance heuristic satisfy formula schema instantiating higher order variable 
report empirical study proofs diagonalization exploited similarities suggest diagonalization proof strategy 
order effectively plan diagonalization proofs done ffl methods designed implemented proof indexing property application assertions control knowledge developed apply methods planning process 
procedure implemented search indexing property current hypotheses 
ffl methods heuristics construction diagonal element middle reasoning designed implemented 
planning methods involves higher order unification general delivers solutions useful 
preferred solutions formally described specified order apply approaches restrict solutions higher order unification similar say hol unification linguistic analysis gk 
questions need answered indexing property formulated proof schemata specification diagonal elements diagonalization examples appendix suggested diagonalization proof strategy successfully applied 
answer questions examples especially problem descriptions literature empirically examined 
want design general framework proof planning proof strategies addition methods declaratively represented including control knowledge interactive proof development system omega gamma 
bun alan bundy 
science reasoning 
computational logic essays honor alan robinson 
mit press 
th cade extended 
alan bundy frank van harmelen christian horn alan smaill 
er cl system 
mark stickel editor proceedings th cade pages kaiserslautern germany 
springer verlag berlin germany lnai 
martin davis ron sigal elaine weyuker 
computability complexity languages fundamentals theoretical computer science 
academic press second edition 
gen gerhard gentzen 
untersuchungen uber das logische schlie en mathematische zeitschrift 
gk claire michael 
higher order coloured unification natural language semantics 
proceedings th annual meeting association computational linguistics 
acl santa cruz 
huang manfred kerber 
adaptation declaratively represented methods proof planning 
seki report sr fachbereich informatik universitat des saarlandes im stadtwald saarbrucken germany 
huang manfred kerber michael dan jorg siekmann omega gamma proof development environment 
alan bundy editor proceedings th cade pages nancy 
springer verlag berlin germany lnai 
hua huang 
reconstructing proofs assertion level 
alan bundy editor proceedings th cade pages nancy france 
springer verlag berlin germany lnai 
basin bundy 
middle reasoning program synthesis 
szeredi editor proceedings th international conference logic programming 
mit press 
kle stephen kleene 
recursive predicates quantifiers 
martin davis editor undecidable basic papers undecidable propositions unsolvable problems computable functions pages 
raven press hewlett new york 
appendix additional examples appendix theorems proofs mainly diagonalization technique reflect proof steps suggested diagonalization strategy formal proofs 
problem theorem table formalization taken states surjective function natural numbers interval 
formal proof shown assume surjective function prove contradiction diagonalization indexing property follows surjectivity diagonal element represented construct line 
membership diagonal element interval shown lines 

proof part line line implicit contradiction derived applying indexing property surjectivity order get index diagonal element applying diagonal element index deliver equality line embodies implicit contradiction 
contradiction explicit case analysis lines 

tnd surj def dig digits dig dig axiom ifdef surj table formulation problem diagonalization proof example corresponds type diagonalization strategy section diagonal element represented lambda expression schema ff 
meta variables instantiated respectively 
meta variable inverting property instantiated 
problem consider theorem enumeration total unary functions exercise page 
theorem equivalent conjecture surjective function set natural numbers set tfn total unary functions formalized necessary assertions table 
assertion level proof theorem shown assume existence function prove contradiction diagonalization 
diagonal element corresponds function line indexing 
hyp 
surj hyp 
surj hyp 
tnd 
case 
ifdef 
dig digits 
dig subst 
case 
ifdef 
dig digits 
dig subst 
dig 
dig 
dig 
dig 
def proof 

hyp 

ext 


com case 
case 
ifdef 
com 
trans 
trans 
com 

case 
case 
ifdef 
trans 


tnd 

case analysis 




surj formal proof example property follows surjectivity membership diagonal element set tfn proved lines 

lines index diagonal element determined applying surjectivity definition formula line 
help extensionality property obtain function equality line equality line consists implicit contradiction 
implicit contradiction explicit lines 

diagonalization proof part corresponds type diagonalization strat tfn surj surj tfn table formulation problem egy section diagonal element represented lambda expression schema ff 
meta variable instantiated 

surj tfn hyp 
surj tfn hyp 
hyp 
tfn 





tfn proof 

hyp 


ext 
explicit contradiction 
tfn 




explicit contradiction 




surj tfn formal proof example aset problem look theorem states set fx phi phi xg recursive exercise page 
formalization problem listed table 
formal proof assume set recursive prove contradiction diagonalization 
diagonal element represented construct id line indexing property follows definition total computability 
total computability diagonal element shown lines 

proof part line line implicit contradiction obtained applying total computability definition order get index diagonal element applying diagonal element index deliver equality line 
equality embodies implicit contradiction explicit case analysis lines 

tnd xn def phi phi recdef un rec pn dig tcomp xn xn id 
xn def id xn def fn res tcomp xn phi yn def pn dig fn res gn res tcomp yn def zn def tcomp xn ifdef res res aset rec table formulation aset problem diagonalization proof example corresponds type diagonalization strategy described section diagonal element represented lambda expression schema ff 
meta variables instantiated respectively id 
metavariable inverting property instantiated defined 
defined id hyp 
defined hyp 
rec hyp 
tcomp recdef 
tcomp hyp 
tcomp 
defined id abu 
defined abu 
defined id defined 
tcomp defined id defined 
tcomp defined id defined tcomp id 
tcomp id proof 
id phi 
id phi hyp 
id phi ext 
id phi 
id phi 
phi id com case 
case 

id id ifdef 
phi id trans 
id 
phi subst 


case 
case 
defined id 
defined id 
defined phi subst 

id ifdef 
phi trans 

phi subst 



tnd 

case analysis 




rec formal proof aset example 
