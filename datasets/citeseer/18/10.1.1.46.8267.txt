explicit substitutions linear logical frameworks preliminary results cervesato computer science department stanford university stanford ca usa cs stanford edu valeria de paiva eike ritter school computer science university birmingham birmingham tt uk fv cs bham ac uk calculus xdllf experiment aspects meta theory :10.1.1.46.8267
xdllf integrates linear explicit substitutions de bruijn notation simply typed fragment linear logical framework llf 
observing expected rules invalidate subject reduction devise speci cation normalization inspired big step semantics programming languages prove correct 
explicit substitutions rationalize implementation systems various calculi functional languages logical frameworks higher order logic programming languages 
linear calculi grown popularity need solid ecient support implementation 
linear adaptation explicit substitution techniques prime candidate 
authors separately explored possibility distinct settings ghani de paiva ritter designed language geared implementation functional languages 
barber plotkin dill dual intuitionistic linear logic characterized things variables di erent kinds linear variables exactly intuitionistic variables accessed arbitrarily times 
extra information usage linear variables possible apply various optimizations update place aggregate data structures arrays savings memory allocation 
signi cantly uenced design decisions calculus 
hand cervesato pfenning implementation linear logical framework llf form linear explicit substitution thoroughly investigate meta theory 
llf close relative dill example distinguish linear intuitionistic variables 
llf designed logical framework forces set operations terms dill 
implementation llf support rst author partially supported dod muri semantic consistency information exchange onr 
second third authors partially funded gr explicit substitution linear machine 
cervesato valeria de paiva eike ritter term reconstruction meta representation practical permit logic programming style accommodate forthcoming addition theorem proving capabilities 
functionalities relies higher order uni cation explicit substitution calculus llf handle meta variables manipulation 
bring experiences trying isolate issues arise combining linearity explicit substitutions di erent settings 
results reported preliminary ect furthering understanding problems 
start linear calculus llf section includes operators llf dill ignoring complex features dependent types unrestricted operator 
llf enjoys properties subject reduction normalization con uence 
standard process construct calculus xdllf section incorporates substitutions separate syntactic category llf way switch de bruijn notation motivated interests ecient implementations :10.1.1.46.8267:10.1.1.120.7560
positive ect turning meta level substitutions produced reductions explicit substitutions manipulated calculus :10.1.1.46.8267
point standard approach require express implicit procedure carry application meta level substitution set rewrite rules explicit substitutions rules transcription correct prove reduction strategy eliminates explicit substitutions terminates term produced making explicit substitutions implicit 
deviate path rules obtain xdllf interfere linearity allow rewriting typed terms ill typed objects 
solved problem splitting linear substitutions usage linear variables 
approach may cause signi cant overhead implemented scale extending xdllf metavariables 
explore di erent path section give syntactic characterization set normal terms rule applicable language xdllf outline type preserving procedure reduces typable xdllf term normal form prove correctness 
approach deals correctly linearity drawbacks 
xes reduction strategy open rules 
second allow interleaving normalization steps reductions 
third scale handle meta variables 
see valuable rst step addressing issues satisfactorily section 
llf calculus llf starting point enriches simply typed fragment language linear logical framework llf multiplicative pairs unit 
hand extends language dill additives intuitionistic functions sacri ces full edged exponential 
llf de ned follows types terms hi hm fst snd additive unit additive pairs multiplicative unit multiplicative pairs linear functions intuitionistic functions explicit substitutions linear logical frameworks preliminary results context splitting llf dot 

llf int llf lin llf lin typing llf lvar llf ivar llf hi hi elimination rule llf hm ni llf fst fst llf snd snd llf llf llf llf llf llf lapp llf llf typing llf range variables base types respectively 
addition names displayed terms types respectively 
usual rely context assign types free variables 
contexts 
stand linear reusable intuitionistic assumption type respectively 
notions free bound variables adapted simply typed calculus 
usual identify terms di er name bound variables 
contexts treated sequences promote denote concatenation omit writing 
unnecessary 
usual require variables declared context 
write intuitionistic part context obtain removing linear declaration see formal de nition 
typing judgment llf form read type de ned 
relies auxiliary context splitting judgment due space reasons shall refer reader discussion rules 
rewriting semantics llf usual reductions commuting conversions generated forms depending taste rules 
marginally concerned various rules sequel 
de nitions properties interest extrapolated cervesato valeria de paiva eike ritter :10.1.1.46.8267
nameless variant llf obtained straightforwardly extending standard de bruijn transformation 
case calculus translation preserves typing reductions 
resulting calculus basis current experimentation explicit substitutions 
space reasons prevent discussing see :10.1.1.46.8267
language typing rules correspond exactly term fragment normal calculus xdllf discussed section 
xdllf devised calculus linear explicit substitutions named variables :10.1.1.46.8267
investigate variant style uses de bruijn notation mainly motivated implementation considerations 
restricted setting ways incorporate explicit substitution llf 
designing xdllf chose model normal substitutions structure contexts 
mention possibilities section 
types xdllf llf term constructors adapted language done 
substitutions may contain linear extension operator account terms substituted linear variables 
de bruijn numbers positional indices substitution context mark term linearly substituted 
terms substitutions de ned grammar terms hi ht fst snd variable indices additive unit additive pairs multiplicative unit multiplicative pairs linear functions intuitionistic functions substitution application substitutions id identity shift linear extension linear extension intuitionistic extension composition addition denote xdllf terms substitutions respectively 
contexts xdllf nameless variant llf contexts marker account positional nature de bruijn indices dealing assumptions 
contexts 
llf write indicate intuitionistic portion obtain replacing linear assumption 
typing judgments terms substitutions denoted xd read type xd read maps terms respectively 
llf de nition relies auxiliary context splitting judgment rules judgments displayed 
rewrite rules commuting possibly families adapted llf said deal see topic :10.1.1.46.8267:10.1.1.46.8267
point papers explicit substitutions typically long list reductions aimed con ning substitution application composition speci positions term substitution explicit substitutions linear logical frameworks preliminary results context splitting xdllf dot :10.1.1.46.8267

xdllf int xdllf xdllf lin xdllf lin terms xdllf lvar xd xdllf ivar xd xdllf hi xd hi elimination rule xd xd xdllf xd ht si xd xdllf fst xd fst xd xdllf snd xd snd xdllf xd xd xd xdllf xd xd xd xdllf xd xd xd xdllf xd xd xdllf xd xd xd xdllf lapp xd xd xdllf xd xd xd xdllf xd xd xd xdllf sub xd substitutions xdllf id xd id xdllf xd xdllf xd xd xd xdllf xd xd xdllf xd xd xd xdllf xd xd xd xdllf cmp xd typing xdllf respectively 
systematic application yields normal forms 
convenient rules interleaved reductions eciently reach canonical forms :10.1.1.46.8267
unfortunately linear explicit substitutions cooperative 
pushing substitution multiplicative operator typically requires splitting non deterministically 
may dicult normal form 
split sound constraints typing information cervesato valeria de paiva eike ritter needed guarantee correctness 
avoided unsound splits checking free variables splitting substitution accordingly 
direct implementation approach requires collect visiting subterm binary multiplicative operator naively maintain list free linear variables term 
satisfactory techniques involve signi cant overhead 
furthermore checking free variables scale languages meta variables needed linear logical frameworks higher order linear logic programming 
approach propose replaces rules declarative speci cation transform arbitrary typable xdllf term substitution equivalent object normal form 
corresponds big step opposed small step semantics programming language theory 
handle substitution splitting normalizing substitutions applying typing derivation guide splitting process 
approach deals correctly linearity drawbacks 
xes reduction strategy left open rules 
second allow interleaving normalization steps reductions 
third proposal scale handle meta variables 
see valuable rst step addressing issues satisfactorily 
normalization normal term substitution application form 
instances ectively implements de bruijn index 
similarly normal substitutions consist list linear intuitionistic normal substitution terms terminated composition number 
correspond environments functional programming setting 
formalize description language call xdllf normal terms hi hu fst snd normal substitutions shifts linear extension linear extension intuitionistic extension positive integer de bruijn index non negative integer legal substitutions :10.1.1.46.8267:10.1.1.46.8267
types contexts xdllf operations 
typing rules xdllf :10.1.1.46.8267
reductions adapted xdllf recover xdllf terms substitutions rewriting recursively expanding composition shifts xdllf term substitution :10.1.1.46.8267
shown translation preserves typing reductions :10.1.1.46.8267:10.1.1.46.8267
normalization procedure propose partially displayed 
articulated number judgments form right hand side normal term substitution left hand side xdllf term resp 
substitution zones marked congruences normal substitution applied xdllf term resp 
composed xdllf substitution zones labeled reductions 
rely auxiliary operations judgments 
intuitionistic part normal substitution obtained replacing linear substitution term explicit substitutions linear logical frameworks preliminary results terms xdllf lvar xd xdllf ivar xd xd xdllf xd xd xdllf xd xdllf hi xd hi elimination rule xd xd xdllf xd hu vi xd xdllf fst xd fst xd xdllf snd xd snd xdllf xd xd xd xdllf xd xd xd xdllf xd xd xd xdllf xd xd xdllf xd xd xd xdllf lapp xd xd xdllf xd xd xd xdllf xd substitutions xdllf id xd xd xdllf xd xd xdllf xd xd xd xdllf xd xd xdllf xd xd xd xdllf xd typing xdllf contexts :10.1.1.46.8267
substitution splitting judgment de ned similarly analogous relation contexts notice operates xdllf substitutions observe context splitting operation non deterministic split 
linear intuitionistic binder crossing operations associated reduction judgment displayed 
takes push substitution binder intuitively correspond respectively 
omitted de nitions :10.1.1.46.8267
procedure works follows walks xdllf term congruence rules till rst substitution application encountered 
normalizes switches reduction rules push inside recursive descent terminates constructors arguments processed 
procedure terminates constructor xdllf term substitution visited exactly congruence reduction judgments 
fail guided typing cervesato valeria de paiva eike ritter terms congruences obvious cases omitted sub 
terms reductions lvar ivar shift hi hi hi ht si hu vi fst fst fst snd snd snd lapp sub substitutions congruences obvious cases omitted cmp :10.1.1.46.8267
substitutions reductions cid id cmp normalization xdllf terms substitutions explicit substitutions linear logical frameworks preliminary results derivation starting typable term substitution :10.1.1.46.8267
objects rule act constraints terms substitutions acceptably processed 
precisely context just absence hi choices splitting substitution satisfy constraints ones split substitution linear variables corresponding terms 
typing rules xdllf ensure splits reduction 
substitution splitting judgment generate substitutions pass test properly controlled 
problem arises reduction supervised typing derivation stated theorem 
abbreviate derivation judgment 
theorem subject reduction xd exist xd ii xd exist xd proof proper generalization statement proof proceeds structural induction relies auxiliary results omitted space reasons 
see details :10.1.1.46.8267
expect normalization procedure function accompanying typing derivation time verify conjecture 
results procedure :10.1.1.46.8267
developments described linear calculus explicit substitutions xdllf appears reasonable playground experimenting linear explicit substitutions isolates delicate interactions explicit substitutions linearity 
analyzed approach coping drawbacks unsuitable foundational calculus linear logical framework particular directly extended handle meta variables essential logical framework implementations allow interleaving reductions reduction steps making rigid :10.1.1.46.8267
see valuable rst step addressing issues satisfactorily 
immediate questions arise endeavor happens dual contexts 
substitutions dual 
named variables uence result see 
get correct normal terms omit splitting substitutions 
de ne usable notion weak normal forms 
meta variables 
answers questions prove highly relevant implementation linear logical frameworks linear functional languages systems linear calculi 
currently experimenting languages incorporate ideas 
cervesato valeria de paiva eike ritter mart abadi luca cardelli pierre louis curien jean jacques evy 
explicit substitutions 
journal functional programming october :10.1.1.46.8267
andrew barber 
linear type theories semantics action calculi 
phd thesis laboratory foundations computer science university edinburgh 
cervesato valeria de paiva eike ritter :10.1.1.46.8267
explicit substitution linear logical frameworks 
unpublished manuscript www stanford edu papers forthcoming xdllf ps gz 
cervesato frank pfenning 
linear logical framework 
clarke editor proceedings eleventh annual symposium logic computer science lics pages new brunswick new jersey july 
ieee computer society press 
de bruijn 
lambda calculus notation nameless dummies tool automatic formula manipulation 
mathematicae :10.1.1.46.8267
neil ghani valeria de paiva eike ritter 
linear explicit substitutions 
proceedings international workshop explicit substitutions theory applications programs proofs tsukuba japan march 
eike ritter valeria de paiva 
explicit substitution names extended 
degano gorrieri marchetti spaccamela editors proceedings th international colloquium automata languages programming pages 
springer verlag lncs 

