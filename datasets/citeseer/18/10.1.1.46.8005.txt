framework efficient minimum distance computations david johnson elaine cohen department computer science university utah salt lake city ut framework minimum distance computations allows efficient solution minimum distance queries variety surface representations including surfaces 
framework depends geometric reasoning numerical methods implemented straightforwardly 
demonstrate performance compares favorably polygonal methods faster reported results methods surfaces 
introduce framework minimum distance calculations applies polygonal parametric model representations 
resulting methods scale problem size time critical properties interactive large polygonal models surfaces 
robotics minimum distance queries path planning path modification collision avoidance 
computer graphics minimum distance computations played roles physical simulation model prototyping 
haptic prototyping project uses minimum distance computations maintain local geometry haptic controller motivates interest 
background early area comes robotics computational geometry communities focused convex polygonal models 
computer graphics community demand realistic environments driven contributions collision detection minimum distance computations 
summarize approaches groups 
minimum distance polygonal models chin edelsbrunner report logn algorithms finding minimum separation convex polygons 
dobkin uses different approach get result extends arbitrary polyhedra 
theoretical algorithms unknown presumably large time coefficients 
convex polygonal models lin uses voronoi regions convex polyhedra local search methods minimum distance converge 
voronoi regions structure space closest point updated constant time step small movements 
collide system follows approach adds spatial sorting method reduce number object interactions 
method extended handle collisions concave polyhedral objects decomposing object hierarchies convex objects 
gilbert employs minkowski difference convex objects determine minimum separation 
slight modification method provide constant time updates slowly moving polyhedra 
chung added efficient means updating minkowski difference create collision detection method convex polyhedra 
general polygonal models quinlan produced efficient method finding minimum separation general concave polyhedra exploiting hierarchical spherical bounds prune portions model 
method prunes establishing upper bounds minimum distance depth descent leaf nodes models 
allowing approxi mate results relative error speeds convergence demonstrates log scalability number 
minimum distance models 
polygons scene 
exact distance required log complexity longer holds 
sato created collision detection method arbitrary polyhedra combining quinlan sphere tree method gilbert convex method 
minimum distance parametric models existing methods solving minimum distance queries models lose geometric flavor methods polygonal models 
root finding minimization methods solve systems equations describe conditions minimum distance 
minimum distance surface derives equations different types surface distance measures 
point closest point surface nearest root eq high order equation difficult solve slightly easier approach simultaneously satisfy eq research group approach slow order second sgi indigo exhibit numerical problems practice 
minimum distance convex surfaces methods finding minimum distance convex parametric curves surfaces minimum distance 
algorithm converges local minimum distance repeatedly finding closest point alternating surfaces 
baraff uses closest points strictly convex surfaces create witnesses simpler geometry captures models 
local numerical methods update closest points 
snyder tracks closest points parametric surfaces local numerical methods initiated polygonal collision detection 
minimum distance concave surfaces lin uses polygonal pass initiate numerical methods concave surface surface minimum distance finding 
bounding polyhedron indicates potential collision resultant methods solve minimum distance underlying surface 
local methods quickly update solution case movement 
times range second minutes finding global solutions ibm rs 
snyder developed global minimum distance method parametric surfaces avoids examining extrema distance finds global minimum interval methods 
method determined global minimum example problem seconds hp series workstation 
collision detection relate collision detection problem minimum distance problem observing collision detected minimum distance zero 
describe collision detection methods related contribution 
collision detection polygonal models apply general polygonal models hubbard sphere trees 
methods build bounding hierarchies original models 
obbtree efficient overlap test oriented bounding boxes 
hubbard spheres bounding primitives concentrated generating efficient hierarchies medial axis construction method 
collision detection parametric models von herzen developed collision detection method time dependent parametric surfaces prunes portions surface lipschitz bounds 
snyder extended method better handle manifold contacts interval methods efficiency 
summary approaches convex regions typically depend guaranteed convergence local methods efficiency 
concave case methods concave polygonal models emphasized hierarchical geometric processes methods concave models treat problem root finding distance equation 
find common ground polygonal parametric models 
minimum distance framework developed algorithms compute minimum distance object minimum separation objects polygonal parametric surface representations 
algorithms common set geometric operations allowing describe methods finding minimum distance part general framework 
overview lub tree framework refer minimum distance framework bound tree lub tree framework 
surface representation part framework provide set common operations including bounding volume generation lower bound distance computation upper 

bound model minimum distance computation bounding volume refinement method determining computation termination 
pruning method lower upper bounds uses operations converge minimum distance 
pruning method starts invoking bounding volume generation operation models 
treat bounding volumes top nodes hierarchical bounding trees connect active pair nodes 
active pairs point nodes may part minimum distance solution 
search prune bounding hierarchies procedure 

active pair compute lower bounds distance nodes nodes bounding volumes lower bound operations 

establish upper bound minimum distance models upper bound computation operation 

prune active pair list comparing lower bound distance current upper bound 
lower bound greater upper bound implies contained geometry farther away minimum distance 

split remaining active pairs new active pairs invoking refinement operation 

repeat termination computation method returns true 
essentially wish show portions model part minimum distance solution 
hierarchical bounds allow efficiently test portions model potentially remove large portions consideration high computational cost 
illustrating algorithm illustrate approach simple case finding minimum distance point polyline 
just example axis aligned bounding box aabb bounding volume assume existence method returns distance nearby polyline vertex upper bound operation perform refinement splitting half polyline contained node 
computation termination occurs nodes contain single line segments refine aabbs 
pruning method starts creating active pair points top level node 
algorithm descends bounding hierarchy polyline segments breadth manner computing lower bounds active pair upper bound level hierarchy 
bounds determine active pairs refine new active pairs pruned 
active pair points box surrounding single line segment segment accepted exact distance computation 
exact distance lower bound node potential upper bound minimum distance model 
pruning method stops active pairs 
upper bound returns exact minimum distance 
best worst case performance pathological case polyline segments lower bound log upper bound distance computations performance worse distance calculations needed simple linear algorithm 
best case bounding boxes removed level log lower upper bound calculations significant advantage linear algorithm 
imagine case finding minimum distance models segments 
best case active pair survives pruning level log lower upper bound calculations 
compares favorably distance calculations naive algorithm require 
worst case segment bounding box pruning occurs lower bound log upper bound distance computations 
exponential lower bound result fortunately difficult produce resembling useful model 
typical bad case models parallel flat surfaces concentric spherical regions algorithm uses lower bound log upper bound distance computations better naive algorithm 
minimum distance concave polyhedra lub tree framework applies arbitrary polygonal models 
order ask minimum distance queries surface representation define lub tree framework operations 
bounding volume 
compute lower bound active pair 
upper bound cached vertices 
active pair refines 
active pair pruned 
lower bound upper bound lower bound pruned lower bound precompute hierarchy oriented bounding boxes obbs publicly available obbtree package section 
gilbert convex algorithm section measures distance obbs find lower bound distance 
greater efficiency results pass approach pruning quick test compute rough lower bound distance distance current upper bound compute expensive precise obb distance 
node points small set vertices boundary contained geometry 
vertices allow compute upper bound minimum distance 
vertices part model distance vertex upper bound minimum distance model 
level model hierarchy save active pair smallest lower bound 
find smallest distance set cached vertices nodes saved active pair establish upper bound minimum distance models 
active pairs remain pruning split new active pairs applying refinement operator 
case precomputed bounding hierarchy descent children nodes accomplishes refinement 
method terminates processed active pairs point leaf nodes contain single triangles 
gilbert convex algorithm computes distances leaf node triangles 
minimum distance models models particularly nurbs surface representation choice cad cam packages 
able perform minimum distance computations directly models having resort conversion polygonal forms 
minimum distance problem phrased succinctly models eq 
researchers focused methods solving high order equations 
geometric approach lub tree avoids numerical issues complicate methods 
quickly review terminology surfaces 
surfaces functions parametric variables commonly form domain surface 
control mesh surface provides vector coefficients control points basis functions 
local set control points influences polynomial piece surface completely contains piece convex hull 
parametric nodes surface easily computable order approximation closest points surface control points 
refinement algorithms embed surface new parameter space degrees freedom compute appropriate additions control mesh 
apply lub tree framework models defining needed operations 
spline surface local convex hull refinement properties provide basis needed operations 
form initial nodes bounding hierarchy polynomial pieces surface 
active pair list initialized pairing local convex hulls surface 
similar way computed lower bounds polygonal models obbs compute lower bounds parametric spline models applying gilbert algorithm local convex hulls active pair 
just performance improved polygonal case addition initial sphere sphere test prune active pairs checking distance dynamically updated aabbs 
upper bound minimum distance allows prune active pairs 
pass active pair list save active pair smallest lower bound 
map closest points convex hull saved active pair underlying surfaces bilinear interpolation parametric nodes associated vertices control mesh 
distance points surface forms upper bound minimum distance 
polynomial piece surface contained local convex hull control points 
control mesh collapses surface refinement 

find closest points convex hulls active pair smallest lower bound 
bilinear interpolation nodes maps point surface 
algorithm removes active pairs lower bounds greater upper bound distance 
wish refine remaining polynomial pieces refinement applied repeatedly initial surface may produce extraneous refinement areas pruned 
group polynomial pieces active regions formed contiguous polynomial pieces extract active region refinement region parametric boundaries 
refine extracted surface extra refinement original surface 
new active pairs form refined surfaces 
demonstrates algorithm initially extracts refines separate regions 
refinement occurs lower upper bounds accurate algorithm prunes top bottom portions 
upper bound distance converges exact minimum distance stem stopping computation 
improving worst case convergence tensor product surface preferred parametric directions exist lines active regions fall directions refine efficiently 
certain spatial configurations models produce contiguous active pairs group active region falls diagonally parameter space 
introduce notion granularity regions reduce unnecessary refinement situations 
extracting active regions containing limited number polynomial pieces region improve convergence 
granularity regions long diagonal parameter space broken small surfaces quickly approximate solution avoid refinement unwanted regions 
performance refinement doubles number polynomial pieces iteration splines control mesh converges quadratically surface 
upper bound converges iterations active pair list 
running closest point surface algorithm obtain parametric precision speeds hz 
compares times second numerical method section 
minimum distance cup spiral converged hz depending distance orientations 
contrast rates times second minutes reported literature section 
times measured sgi indigo 
high order surfaces earlier mentioned belief geometric approach avoids difficulties associated numerical methods 
difficulty numerical methods lack stability high order surfaces 
lub tree approach tested spline patch orders ranging parametric direction 
algorithm remained stable high degree surfaces time convergence appeared directly proportional order direction 
breadth vs depth search chosen search lub tree hierarchy breadth manner opposed depth search quinlan 
section show breadthfirst search appears efficient depth 
polynomial pieces parametric domain remain pruning grouped regions 
region extracted separate surface refined 
new pruning grouping continues process 

extraction active regions surface refinement pt surface minimum distance 
active regions 
degenerate case unnecessary refinement occurs 
convergence improved notion granularity regions 
search 
conclude demonstrating breadthfirst search allows time critical behavior establishing upper lower bounds early computation 
efficiency scalability tested time solution range polygonal model sizes lub tree approach depth search similar quinlan 
lub tree search approximately twice fast depth search showed sub linear cost increases model complexity 
times minimum distance models ranged ms ms models triangles running sgi indigo 
time critical properties lub tree methodology time critical properties useful characteristic interactive systems 
method converging immediately solution large pre processing step exists upper lower bounds get established early computation 
illustrates behavior parametric surface 
time iteration fairly constant error distance measure halved iteration 
scheduled cost measured average time cost lub tree operations time computing distance spheres distance obbs 
times schedule allowed cost algorithm return upper lower bounds minimum distance 
demonstrates behavior triangle model 
upper bound distance quickly converges correct distance 
suggests cheaper approximate solutions low error 
lower bound distance converges correct distance fairly quickly 
error plateaus final level bounding hierarchy lower bound extracted level finishes 
implemented methods minimum distance point surface surface surface polyhedral model polyhedral model equivalents 
currently adding operations finding distance models different surface representations polygonal parametric models 
addition framework notion supports adding specialized objects simple distance computations holes cylinders 
hope improve efficiency certain classes models adding specialized types occur frequently 
demonstrated practical computation distances non convex polyhedra surfaces common framework 
lub tree method model size polygons model size vs time converge depth search breadth search 
time convergence breadth depth searches range model sizes 
iterations iterations 
minimum distance vs iterations 
total time vs number iterations time sec time error vs allowed computation cost allowed cost operations 
lub trees allow scheduled costs reasonable bounds returned 
ward implement useful properties behavior scheduled computation cost 
acknowledgments go alpha group providing underlying code 
susan anderson added lots red ink preliminary drafts 
support research provided nsf mip darpa nsf darpa science technology center computer graphics scientific visualization asc 
baraff david 
curved surfaces coherence non penetrating rigid body simulation computer graphics vol 
pp bobrow optimal robot path planning minimum time criterion ieee journal robotics automation pp 
aug 
cameron stephen 
enhancing gjk computing minimum penetration distances convex polyhedra int 
conf 
robotics automation april 
chin francis wang cao 
optimal algorithms intersection minimum distance problems planar polygons ieee transactions computers vol 
dec pp 

chung tat leung kelvin 
efficient collision detection algorithm polytopes virtual environments 
phil thesis university hong kong 
cohen schumaker rates convergence control polygons computer aided geometric design pp 

cohen collide interactive exact collision detection system large scaled environments proceedings acm int 
graphics conference pp 

dobkin david kirkpatrick david 
determining separation preprocessed polyhedra unified approach proc 
th international colloq 
automata lang 
program lecture notes computer science vol 
springer verlag pp tor finding intersections spline represented geometries recursive subdivision techniques cagd pp 

edelsbrunner computing extreme distances convex polygons tu graz tech 
rep aug 
gilbert johnson daniel keerthi fast procedure computing distance complex objects dimensional space ieee journal robotics automation pp 
april 
gottschalk lin manocha obbtree hierarchical structure rapid interference detection computer graphics proceedings annual conference series pp 
hollerbach cohen thompson jacobsen rapid prototyping mechanical assemblies nsf design manufacturing conference albuquerque jan 
hubbard interactive collision detection proceedings ieee symposium research frontiers virtual reality october pp 

khatib real time obstacle avoidance manipulators mobile robots international journal robotics research pp 
spring 
francois 
geometric algorithms intersection curves surfaces computer graphics vol 
pp 
lin efficient collision detection animation robotics ph thesis university california berkeley 
lin ming manocha dinesh fast contact determination dynamic environments appear international journal computational geometry applications 
lin ming manocha dinesh 
fast interference detection geometric models visual computer pp 

mirtich brian impulse dynamic simulation rigid body systems ph thesis university california berkeley december 
michael 
geometric modeling john wiley sons new york pp 

les wayne 
nurbs book 
springer verlag berlin 

ponamgi manocha lin incremental algorithms collision detection solid models proceedings acm siggraph symposium solid modeling pp 

quinlan sean 
efficient distance computation non convex objects ieee int 
conference robotics automation pp 

quinlan real time modification paths ph thesis stanford university 
sato efficient collision detection fast distance calculation algorithms convex non convex objects proceedings ieee international conference robotics automation 
minneapolis april 
pp 

snyder john interactive tool placing curved surfaces interpenetration proceedings computer graphics pp 

snyder john interval analysis computer graphics computer graphics pp july 
snyder john interval methods multi point collisions time dependent curved surfaces computer graphics 
pp 
aug thompson ii johnson cohen direct haptic rendering models proc 
symposium interactive graphics providence ri april pp 

kelley representation fast distance computation robotic applications proceedings ieee int 
conf 
robotics automation april 
pp 

stewart paul cad data representations haptic virtual prototyping proceedings detc asme design engineering technical conferences sept sacramento california 
von herzen brian barr alan harold 
geometric collisions time dependent parametric surfaces computer graphics vol 
number 
august proceedings siggraph pp 

