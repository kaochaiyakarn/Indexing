ado shared michael norman research england thomas zurek peter dept computer science edinburgh university scotland shared parallel computer processor memory disks processors communicate passing messages interconnect 
academic researchers vendors assert shared consensus architecture parallel dbmss 
alleged consensus justification simulation models algorithms research prototypes marketing campaigns 
argue shared longer consensus hardware architecture hardware resource sharing poor basis categorising parallel dbms software architectures wishes compare performance characteristics parallel dbms products 
parallel computer shared architecture processor memory disk sub system pro tel 
fax email makespan demon uk king buildings edinburgh eh jz scotland tel 
fax email dcs ed ac uk cessors communicate passing messages interconnect 
brand leader parallel database machines shared architectures dewitt gray able assert consensus parallel distributed system architecture emerged 
architecture shared hardware design 
dewitt gray dewitt gray assertion quoted paraphrased times alleged existence consensus justify research projects simulations analytical modelling prototype building academic world basis marketing campaigns commercial dbms products db parallel edition pe sybase navigation server informix online xps :10.1.1.104.8594
come phrase white sales literature parallel database vendors 
view shared longer consensus hardware architecture 
common think shared software architecture dbms products argue distinctions resource sharing useful way categorise dbms architectures wishes understand dbms performance characteristics particularly looking differentiating generalpurpose parallel dbms products market 
section give traditional categorisation parallel architectures hard soft terms hardware resource sharing 
section examine extent said consensus hard soft 
concluding remarks section 
traditional categorisation parallel databases traditionally architectures parallel dbms categorised way processors share hardware resources disk devices memory stonebraker 
categorisation facilitate discussion appropriate parallel hardware architectures dbms 
researchers participated ensuing discussion see hua dewitt gray valduriez baru base arguments :10.1.1.104.8594
summarise briefly describe architectural categories shared memory sm sd shared sn 
basic arguments characteristics architectures 
necessarily arguments place credence 
shared memory shared memory system disks memory modules shared processors see 
global address space main memory disks equally accessible pro 

interconnect shared memory architecture cessors 
said sm simple dbms vendors program global address space main memory 
load balancing arranged relatively easily processor equal access disks 
interprocessor communication fast incurs low overhead cooperate main memory 
system costs high particular interconnect large number components connected 
conflicting accesses main memory decrease performance 
argued access main memory reason sm architectures scale stonebraker showed certain number processors access main memory bottleneck limits system processing speed 
sm systems limited small number processors valduriez cf 
baru 
shared disk shared disk system processor private memory access disks shared processors see 
argued costs sd system relatively low interconnect bus system standard technology 
argued load balancing relatively easy reason 
interconnect 
shared disk architecture interconnect shared architecture sm case availability data higher sn system see crash processor result data particular disk unavailable 
side sd systems said relate increase complexity caused cache coherency control mechanisms needed maintain consistent disk pages processors individual caches 
limits scalability sd system 
access shared disks result bottleneck due limited bus capacity 
shared shared system processor private memory disks acts server data disks see 
said costs sn system low constructed commodity components 
availability considered serious problem see section 
data skew cause serious load imbalance 
load imbalance caused execution operations predetermined data placement disks necessity avoid huge data shipping network processors 
arguments shared initially architectural discussion described previous section related parallel hardware 
years discussion optimal software architecture parallel dbms 
section question suitability shared hardware architecture 
discuss appropriate value shared software architecture 
advantages dewitt gray dewitt gray claimed shared follows :10.1.1.104.8594
partitioning allows multiple processors scan large relations parallel exotic devices 
memory disk owned processor acts server data 
commercially available parallel hardware platforms currently standard commodity disk components typically single scsi disks scsi raid devices 
problem basic shared architecture availability fault tolerance case processor fails 
data corresponding disk unavailable 
practice sn systems multiply attached disks redundancy mechanisms data replication guarantee availability 
results problem keeping multiple copies data item consistent 
practice sn sd systems algorithmic mechanisms hardware features achieve availability 
distinction approaches simply software systems involved guaranteeing redundancy provided operating system shared disk dbms shared 
architectures move large quantities data network 
shared design moves questions answers network 
considers ideal case tables collocated ideally placed processing 
describing ibm db pe baru describe techniques join expensive operator distinguishing collocated direct broadcast joins necessary strategies 
cause table intermediate result shipped network 
typically intermediate result gets shipped network tend larger inputs join large table joined small tables 
interesting note parallel dbms products advertised shared reality server access disk controller 
example informix dsa servers retrieve metadata part system order discover table partitioned 
shared architectures minimize interference minimizing resource sharing 
non sequitur 
shared architectures simply determine interference specifying certain operations occur certain points parallel architecture 
practice tend increase interference dbms unable dynamically change location operations 
interference minimised shared system usage interconnect 
today commercial hardware architectures earlier ones aggregate interconnect bandwidths extremely high scale linearly processors added system 
aggregate interconnect bandwidths typically times higher aggregate disk bandwidths difficult saturate bandwidth interconnect simply data come 
systems demonstrate near linear speedup scale relational queries 
practice ideal linear scale achieved 
notions speedup scale come scientific parallel computation simple applicability parallel database processing 
speeding plugging nodes rarely simple matter running real workloads 
general require re partitioning data re configuring machine 
teradata staff determining optimal clique configuration mix 
time black art involves application specific complex trade faulttolerance price performance 
practice shared rarely scales speeds linearly interconnect saturated certain volume communication 
life cycle parallel computer practical considerations processor clock rates double years 
replace old processors new faster ones improve quality components way 
various studies demonstrated strategy leads superior performance possible see hua 
essentially trick un parallel possible order minimise interprocessor communication overhead 
teradata systems may processors 
may physically feasible practice teradata staff state bandwidth scalable maximum processor board configuration 
network type limitation apply case newer networks net 
expected issues similarly limit new machine 
convergence parallel hardware hybrid architecture comprising levels 
systems sm smp nodes inner level combined sn manner hua see sm smp nodes inner level combined sd manner outer level valduriez 
hybrid architectures combine advantages previously discussed types compensate respective disadvantages hua 
new versions traditionally sn machines converging hybrid type example tandem machines teradata gis developments ibm rs sp 
developments technology meant distinctions hardware resource sharing longer particularly useful 

bus 
bus interconnect hybrid level architecture want gain insight relative performance parallel dbmss 
preparing analysis commercially available parallel dbms implementations norman simple shared disk vs distinction helpful differentiating products 
necessary develop new generic model parallel dbms architectures order categorise parallel dbms products 
model way processes threads organised cooperate transaction complex query processing 
baru goyal hsiao padmanabhan copeland wilson 

db parallel edition 
ibm systems journal 
valduriez 

overview parallel architectures databases 
computer journal 
stonebraker 

performance comparison architec tures fast transaction processing 
proc 
th international conference data engineering los angeles ca usa pages 
dewitt gray 

parallel database systems high performance database systems 
communications acm 
hua lee 

interconnecting shared systems efficient parallel query processing 
proceedings st international conference parallel distributed information systems miami beach fl usa pages 
norman 

parallel database technology evaluation comparison scalable systems 
research group uk 
isbn 
stonebraker 

case shared 
ieee data engineering 
valduriez 

parallel database systems open problems new issues 
distributed parallel databases 
valduriez 

parallel database systems case shared 
proc 
th international conference data engineering vienna austria pages 


ncr generation industrial database computer 
proceedings th international conference large data bases dublin ireland pages 
