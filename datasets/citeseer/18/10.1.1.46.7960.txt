design implementation secure auction service matthew franklin michael reiter design implementation distributed service performing sealed bid auctions 
service provides interface clients bidders issue secret bids service advertised auction 
bidding period ended auction service opens bids determines winning bid provides winning bidder ticket claiming item bid 
novel cryptographic techniques service constructed provide strong protection auction house correct bidders despite malicious behavior number bidders fewer third servers comprising auction service 
specifically guaranteed bids correct bidders revealed bidding period ended ii auction house collects payment winning bid iii losing bidders money iv winning bidder collect item bid 
discuss techniques enable anonymous bidding 
keywords distributed systems security byzantine failures electronic commerce sealed bid auctions verifiable signature sharing technology replaced human procedures electronic ones 
unfortunately tradition culture law developed provide protection human procedures readily adapted afford protection electronic procedures 
study cryptographic protocols viewed technical response loss traditional means protecting 
diffie argued communication security fundamental social mechanisms world face face meetings pen ink communication world electronic mail video conferences electronic funds transfers electronic data interchange distant digital money electronic voting 
statement hints human procedure protections threatened electronic advances commerce 
proposals put forward guide transition electronic commerce proposals provide simple transactions involving little negotiation competition buyers sellers 
contrast financial vehicles auctions exchanges general markets conform simplistic view commerce 
believe transition electronic commerce preclude vehicles accessible 
begun effort examine financial vehicles understand required adequately implement electronic systems 
approach implement vehicle sealed bid auctions 
sealed bid auction secret bids issued advertised item bidding period closes bids opened winner determined publicly known rule highest bidder wins 
sealed bid auctions example auctioning mineral rights government owned land sale artwork real estate auctioning government procurement contracts 
study sealed bid auctions motivated practical importance novel security problems pose 
central fairness sealed bid auction secrecy sealed bids prior close bidding period 
timing disclosure bids crucial 
second auctions require nonrepudiation mechanisms ensure payment collected winning bidders evidenced fact fcc auction interactive video data service licenses winning bidders defaulted bids forcing second auction held 
third due secrecy requirements surrounding sealed bid auctions may difficult outsiders confidence validity auction 
fourth types sealed bid auctions enable bidders remain anonymous 
problems exacerbated considers implementation auctions distributed computer systems possibility corrupt insider auction house collaborating bidders 
secure distributed auction service supports submission monetary bids auction ensures validity outcome despite malicious collaboration arbitrarily bidders fewer third auction servers comprising service 
auction service addresses security issues mentioned 
particular auction service guaranteed declare proper winning bidder collect payment form digital cash bidder 
guaranteed bid revealed prior close bidding period 
possible bidders submit anonymous bids 
resilience service malicious auction servers leveraged provide resilience auction house insiders 
individual allowed access fewer third servers spatial administrative separation corrupting insider provides advantage bidder auction 
reduces incentive buying insiders auction house 
focus efficient practical approach performing auctions 
implemented prototype service demonstrate feasibility 
performance implementation indicates approach feasible shelf workstations auction servers large auctions involving hundreds bids 
order achieve level performance service employs range old new cryptographic techniques secure efficient integration primary challenge 
resulting system demonstrates novel efficient methods protecting electronic currency competitive environments 
provides insights addressing similar issues competitive financial vehicles types auctions appearance internet markets electronic gaming 
rest organized follows 
section ii describe security policy govern sealed bid auction 
section iii give preliminary definitions 
section iv describe new cryptographic primitive called verifiable signature sharing important enabler efficient implementation secure auctions 
auction protocol section discuss security performance sections vi vii respectively 
modify protocol protect bidder anonymity section viii conclude section ix 
ii 
secure auctions informally sealed bid auction consists phases execution 
bidding period arbitrarily bidders submit arbitrarily sealed bids auction 
point bidding period closed initiating second phase bids opened winner determined possibly announced 
general rule winner determined publicly known deterministic rule 
convenient assume rule dictates highest bidder chosen winner 
mentioned section numerous possibilities corruption misbehavior sealed bid auction 
possibly difficult counter involve misbehavior insiders charge executing auction employees auction house especially behavior involves collaboration certain bidders 
examples behavior yield improper auction may feasible naive electronic implementation auctions 
ffl prior close bidding period insider opens submitted bids informs collaborator amounts collaborator submit bid minimum amount needed win auction 
ffl insider manipulates closing time bidding period 
example insider attempts prematurely close bidding period effort exclude bids 
ffl bids auction diverted second auction earlier closing time causing amounts revealed prematurely insider 
ffl close bidding period bidder arranges withdraw bid insert bid collaboration insider 
ffl insider awards auction item winning bidder goes undetected bids public 
ffl insider collects payment losing bidders informing won collects payment winning bidder fails provide means bidder obtain item bid 
ffl winning bidder refuses pay auction house bid claiming lacks sufficient funds 
worth noting naive electronic implementation sealed bid auction problems arise simply due benign failure auction service bidding process 
example problem arise auction service fault tolerant collects money winning bidder fails granting item bidder 
similarly problem arise bidding process submits bid fails 
auction service prevents behaviors attacks auctions aware despite malicious behavior arbitrarily bidders fewer third auction servers comprising service 
describe properties provided auction service categories validity properties secrecy properties 
process bidder server said correct follows specified protocols 
faulty process may deviate specified protocols fashion whatsoever byzantine failures allowed 
validity 
bidding period eventually closes correct auction server decides closed 

winning bid auction dictated deterministic publicly known rule applied formed bids received bidding period 

auction service collects payment winning bidder equal amount winning bid 

correct losing bidders money 

winning bidder collect item bid 
secrecy 
identity correct bidder amount bid revealed party bidding period closed 
addition auction protocol modified allow submission anonymous bids 
class attacks auction service address involve collaboration bidders fix price wins auction 
example bidders collude bid certain amount 
address attacks messages bidders intercepted delayed manip transit 
example guarantee bid submitted correct bidder included auction received intact close bidding period 
emphasize attacks discussed paragraph effect validity secrecy properties described 
iii 
preliminaries section review primitives auction protocol 
notation remainder 
encryption public key denoted decryption private key gamma denoted hmi gamma digital signature message process private key denoted oe 
introduce additional notation sections necessary 
group multicast group multicast class interprocess communication primitives messages multicast group processes 
auction service employs types group multicast primitives unreliable reliable atomic 
multicast primitives enables process multicast message members weakest multicast primitives unreliable multicast 
denote unreliable multicast message process group unreliable multicast provides property correct correct members receive sequence unreliable multicasts sequence unreliable multicasts initiated particular unreliable multicasts authenticated protect integrity communication 
guarantees regarding unreliable multicasts faulty second multicast primitive called reliable multicast known byzantine agreement 
denote reliable multicast message process group reliable multicast provides properties unreliable multicast 
addition strengthens properties ensuring correct members receive sequence reliable multicasts regardless correct faulty 
reliable multicasts different members received different orders member third strongest multicast primitive atomic multicast 
denote atomic multicast message process group atomic multicast provides guarantees reliable multicast strengthens ensuring correct members receive sequence atomic multicasts regardless senders 
processes executing auction protocol block awaiting receipt reliable atomic multicasts necessary provide degree failure detection guarantee progress case faulty member multicast message waiting 
correct group members concur set messages multicast member prior failure 
reliable atomic multicast protocols implemented provide properties 
addition multicasts process group auction protocol requires ability arbitrary process atomically multicast messages denote multicast message atomic multicasts outside group provided total ordering guarantee group 
correct members receive sequence atomic multicasts regardless origin multicasts 
atomic multicasts group atomic multicasts outside group authenticated anonymous indicate senders 
failure detection processes outside group provided 
multicast protocols implemented tolerate failure members group size number non member failures provided 
described section iv factor limiting fault tolerance auction protocol 
threshold secret sharing schemes threshold secret sharing scheme informally method breaking secret shares sh shares sufficient reconstruct fewer shares yield information polynomial secret sharing scheme due shamir 
scheme secret element finite field th share sh degree polynomial coefficients chosen uniformly random interpolation shares reconstructs secret typically taken integers modulo prime larger secret 
scheme works threshold observed feldman results obtained applying public way function share known process attempting reconstruct secret verify share altered prior reconstruction 
way alteration gamma gamma shares tolerated 
auction protocol observation 
precisely multicast protocols employ timeouts methods failure detection satisfy stated specifications despite failures group size provided messages correct members induce timeouts correct members sufficiently infrequently 
see details 
electronic money basic form electronic money digital cash scheme set cryptographic protocols customer withdraw electronic money bank ii customer money purchase vendor iii vendor deposit money account bank 
protocols protect security interests parties involved ensuring customer identity linked purchase anonymity party accepts valid electronic money customer reuse forge money 
purposes consider cash schemes require physical assumptions tamper proof smart cards 
money scheme said line purchase protocol involve bank scheme said line 
typical line scheme vendor queries bank determine coin customer attempting purchase spent 
line scheme bank consulted purchases reuse prevented 
customer identity embedded coin way accessible coin purchase 
copies eventually deposited bank learn identity reuser 
consider line cash schemes 
auction protocol line cash schemes 
reason stating protocol away implementation digital cash simply describe digital coin consisting triple hv oe bank description coin oe bank signature bank description auxiliary information accompany coin purchase 
description typically include value coin embedding customer identity described 
auxiliary information typically hint enable extraction embedded identity include certain freshness information vendor detect replay coin 
auction protocol requires procedure vendor determine validity deterministic function values compute locally 
iv 
verifiable signature sharing addition primitives reviewed section iii auction protocol employs new cryptographic primitive protecting digital signatures called verifiable signature sharing sigmas 
informal description sigmas sigmas enables holder digitally signed message need original signer share signature group processes correct group members reconstruct 
sharing phase member verify valid signature message reconstructed original signature holder members malicious 
addition malicious members gain information prior reconstruction signature held correct sharer 
sigmas applications signed document valid certain conditions power attorney exchange contracts 
verifiably sharing document signature group processes trigger instructions ensures signature released correct members believe triggering events occurred 
develop simple efficient sigmas schemes signature schemes discrete logarithm problem including elgamal schnorr digital signature algorithm 
sharing requires single group multicast signature holder group processes signature shared followed single round multicasts group members 
reconstruction requires interaction single message sent member process performing reconstruction 
protocols tolerate malicious sharer malicious members group size 
protocols elgamal schnorr signatures ensure secrecy signature strong sense related simulatability dsa provide weaker heuristic notion secrecy 
proposed sigmas schemes exponentiation signature schemes rsa rabin 
discovered flaw proof security sigmas schemes 
provably secure efficient sigmas scheme rsa obtained distributed function sharing techniques 
description sigmas choice sigmas scheme auction protocol depends signature scheme bank sign digital cash 
generality describe sigmas form 
holds signature oe message oe oe begins sigmas protocol generating types values oe public value sigmas pub oe process group signature shared private value sigmas priv oe 
atomically multicasts sigmas pub oe group members communicates sigmas priv oe privately say encrypted public key sigmas pub oe fhv sigmas priv oe gs receipt atomic multicast performs local computation determine th private value decrypts gamma consistent weaker multicast see atomic multicast consistency protocol section due nuances multicast specifications section iii 
public value 
reliably multicasts status computation denoted sigmas stat group sigmas stat received reliable multicast detected faulty performs local computation allows accept reject attempt share oe 
local computation deterministic function reliably atomically multicast values correct group members accept correct members reject 
accept guarantees oe reconstructed information collectively possess 
oe shared correctly correct members accept faulty members gain information oe 
point correct members choose reconstruct oe member forwarding private value oe possibly auxiliary information reconstructing party easily reconstruct signature 
example sigmas schnorr signatures example sigmas scheme outline sigmas scheme schnorr relies techniques verifiable secret sharing due pedersen feldman 
schnorr signature public key large prime large prime factor gamma order mod private key signature document oe mod random message digest function md wx mod signature publicly verified checking gammaw mod 
share oe group fs sn sharer chooses values random lets sigmas pub oe fw mod mod mod pg sigmas priv oe mod executes mod fg mod pg jt fhf mod pi suppose receives atomic multicast form fu jt fv values fu jt fv gs computes sigmas stat sigmas stat allow hv gamma jt mod complain reliably multicasts sigmas stat collects status values servers 
accepts uy gammaw mod mod processes complained 
auction protocol auction service constructed auction servers 
parameter defines fault tolerance service maximum number servers fail affecting correctness service 
protocol requires 
intuitively auction protocol works follows 
bidder submits bid certain value service sharing pieces digital coin hv oe bank value auction servers 
description auxiliary information shared standard threshold secret sharing scheme see section iii signature oe bank shared sigmas scheme see section iv 
bidding period closed servers reconstruct bid received bidding period perform sigmas protocol determine acceptance rejection bid determine collectively possess oe bank 
servers choose winning bid acceptable bids declare winner 
subject auction house controls bank signature coin winner bid reconstructed sigmas scheme coin deposited 
secrecy bid ensured bidding closed correct servers cooperate reconstruction bidding closed 
oe bank reconstructed losing bid coins losing bids spent faulty servers 
section describe protocol depth 
section discuss alternative designs considered compare protocol 
protocol detailed section carefully describe auction protocol 
auction servers denoted sn organized process group processes multicast messages reliably atomically 
associated server public key deterministic public key cryptosystem rsa 
assumed available servers bidders corresponding private key gamma known addition assume global identifier aid auction known servers bidders 
description jj denotes concatenation 
remind reader multicasts servers members authenticated sh denotes th share produced shamir threshold secret sharing scheme 
submitting bid suppose bidder wishes submit bid auction 
loss generality assume bidder possesses digital coin hv oe bank amount desired bid 
freshness information included see section iii aid 
bidder submits bid single atomic multicast follows aid jjw sigmas pub oe bank fhv sigmas priv oe bank gs closing bidding period server decides bidding closed executes aid close received atomic multicast close messages auction aid different servers considers bidding closed ignores bids subsequently received 
note properties atomic multicast correct servers agree set bids auction aid received prior closing 
opening bids suppose th bid auction aid received atomic multicast form aid fc gs pub gs values fc pub gs suppose total bids received auction aid 
bids opened steps 
server computes ae hc gamma executes aid fs ll 
receives message form aid fs ll server verifies hs hold discards ignores message note occurs faulty 

completes opening th bid follows 
messages form receives different servers pass verifications step messages say jk finds degree polynomial determined hf discards th bid 
discards th bid form jjv jjw proper syntactic form messages form receives messages say jk 
note th bid discarded submitted faulty bidder 
checking validity bids checks validity remaining bids follows 

remaining bid performs validity checks dictated electronic money scheme discarding bid invalid replay 
properties line cash scheme choice freshness information embedded tests involve local deterministic computations 
remaining bids 
computes sigmas stat gamma pub see sigmas scheme executes aid fv sigmas stat ll collects reliable multicasts servers determines acceptance rejection remaining bid sigmas scheme see section iv 
rejected bids discarded 
declaring winner server chooses winning bid remaining bids 
winning bidder determined executes aid oe denotes point point send necessarily authenticated communication channel 
message conveys declares winner auction aid 
messages servers collectively serve ticket claiming auctioned item 
point correct servers erase information hold losing bids 
properties sigmas scheme correct servers possess information reconstruct bank signature coin winning bid 
procedure coin reconstructed deposited bank outside scope protocol 
caution servers reconstructing signature lest faulty server reconstruct deposit coin account correct servers deposit coin auction account 
discussed section viii enabling faulty servers reconstruct coin signature allow frame bidder reusing coin bidder take recommended precautions 
reconstruction deposit coin occur time auction day range manual electronic procedures possible performing operations safely 
particularly convenient solution server forward private sigmas value coin signature bank bank perform reconstruction 
alternative designs design auction protocol considered numerous alternatives section instructive discuss 
eliminating sigmas possible eliminate sigmas scheme having bidder share oe bank servers standard threshold secret sharing scheme verifiable secret sharing scheme 
case auction servers way verifying hold shares proper signature reconstructing 
reconstructing leave coin vulnerable theft faulty server depositing coin account correct servers deposit auction account 
deemed acceptable simply minimize number coins exposed theft doing require servers locate highest bid containing valid coin reconstructing signatures sorted bids time bid 
approach message complexity finding highest valid bid proportional number invalid bids submitted 
susceptible explosion communication costs malicious bidders submit large number invalid bids 
attack difficult prevent punish especially bids authenticated identities bidders bidding closed may anonymous see section viii 
problems avoided sigmas scheme 
protocol coins exposed theft faulty servers validity bids checked total reliable multicasts 
sigmas possible extend auction protocol perform auctions amount winner pays function valid bids second price sealed bid auctions 
implementing auctions mechanism described force servers reconstruct coins bids exposing theft 
line digital cash conceivable protocol modified accommodate line digital cash 
online cash scheme checking validity bid involve bank typically determine coin bid previously spent 
unfortunately obvious approaches performing interaction bank expose coins theft faulty server result message complexity depends number invalid bids 
possible overcome difficulties doing require substantial changes interface provided bank typical line cash scheme 
bidding requiring bidders submit bids containing digital cash full amount bid service accept bids containing cash portion bid amount 
bid serve promise complete payment bid wins cash portion serve faith deposit 
alternative may preferable auctions drawing large bids 
offers opportunity winning bidder default payment bids opened 
addition complicates collection winning bid requiring protocols collect payment determine new winner case original winning bidder defaults 
message complexity determining actual winner proportional number bids submitted 
threshold cryptography auction protocol technique keep bids secret prior close bidding share value bid auction servers threshold secret sharing scheme 
alternatively threshold public key cryptosystem encrypt bids public key auction house decrypted cooperation threshold number servers 
correct servers prevent premature disclosure bids cooperating decryptions bidding closed 
primary drawback approach threshold cryptosystems aware large modular exponentiation required server bid 
modular exponentiations computationally intensive expose service substantial computational overheads induced malicious bidders submitting large numbers bids 
attack effective protocol open bids main costs server bid polynomial interpolations re encryptions relatively inexpensive appropriate choice encryption algorithm rsa reasonably small encrypting exponent 
threshold signature scheme cooperation threshold number servers required sign message auction house private key useful declaring winner 
sending separate signed messages winning bidder step servers construct single ticket bearing auction house signature send winner 
decrease size ticket winner claim auctioned item existing threshold signature schemes increase computational load servers construct ticket 
mental games mental games known cryptographic techniques securely performing wide variety tasks including secure auctions special case 
mental games construct auction service provides stronger properties values bids disclosed bidding closes service built techniques perform worse 
protocol sacrifices property interest efficiency protocol modified allow bidder identities remain secret bidding closes see section viii 
non malleable cryptography intuitively encryption scheme non malleable infeasible modify ciphertext known relationship hold new plaintext original plaintext 
motivating examples non malleable encryption contract bidding attacker try low bidder manipulating competitors bids upward 
scheme inclusion digital cash particular attack irrelevant 
malleability lead weaknesses enable attacker divert bid auction earlier closing time 
auction protocol precludes non malleable encryption exploiting determinism servers encryption schemes steps opening bids theoretical definition non malleability requires encryption probabilistic 
existing encryption schemes provably non malleable prohibitively inefficient purposes 
vi 
security section discuss protocol section va achieves security properties stated section ii 
arguments informal intended constitute rigorous proof security 
validity 
bidding period eventually closes correct auction server decides closed 
bidding period eventually closes correct servers correct servers atomically multicast close messages 
bidding period closes server received atomic multicast close messages servers bidding period closes server received close message correct server 

winning bid auction dictated deterministic publicly known rule applied formed bids received bidding period 
due properties atomic multicast correct servers agree bids received close bidding period 
correct server sends th bid discarded correct servers correct server receive values determine notice hf correct correct server determine correct server detect discrepancies values fc gs correct servers agree bids remaining opening bids 
include formed bids bad provided faulty discarded step opening bids 
remaining bids correct servers agree subset pass validity checks properties digital cash sigmas schemes 
correct servers select winning bid acceptable bids public rule determining winner 
correct servers sign message announcing winning bid enabling winner claim item bid 

auction service collects payment winning bidder equal amount winning bid 
properties sigmas scheme correct servers protocol possession shares sufficient reconstruct bank signature coin contained winning bid 
signature reconstructed sigmas reconstruction protocol auction house policy 

correct losing bidders money 
money losing bid worthless bank signature 
properties sigmas information signature leaked coalition faulty servers faulty servers unable deposit money 
money effectively transferred back bidder reuse money chooses 

winning bidder collect item bid 
winning bidder obtains signed declarations different auction servers stating won auction 
winning bidder collect item bid supposing possession declarations necessary 
secrecy 
identity correct bidder amount bid revealed party bidding period closed 
precisely identity bidder amount bid revealed bidding period closed correct server 
prevents bids submitted previously disclosed contents bids properties atomic multicast bidding closed correct server set bids considered correct server fixed 
showing stated property straightforward depends additional properties sigmas digital cash schemes 
intuitively coalition faulty servers reconstruct value jjw shared bid shares value properties threshold secret sharing schemes 
sigmas implementations proposed public private sigmas information available coalition yield message digest dependent typical digital cash scheme includes large unpredictable component string identity embedded 
message digest reveals useful information amount bid 
lastly attempt attacker redirect bid earlier auction result correct server contributing bid opening bid rejected amount source bid revealed 
vii 
performance implemented research prototype auction service protocol section effort understand factors limit performance 
implementation uses multicast protocols rampart employs basic cryptographic operations 
implementation includes optimizations protocol described section 
example avoid sharing entire value jjw submitting bid share smaller key symmetric cipher specifically des include bid encryption jjw key 
addition server receive shares key recover jjw servers multicast shares fact shares distributed bidder bid 
similarly servers multicast close messages suffices ensure correct server receives close messages servers 
approximate latency numbers milliseconds stages auction protocol case failures shown table 
numbers derived tests network moderately loaded sparcstation 
tests rsa public key encryption bit moduli bit encryption exponents schnorr signatures bit modulus bit prime factor gamma 
result sigmas scheme schnorr signatures see section iv 
auction servers minimum number servers required tolerate failure auction server 
order isolate costs auction protocol numbers table reflect operations specific form digital cash 
particular latencies labeled submitting bid table checking validity bids include costs creating checking validity respectively 
purposes interpreting test results viewed single opaque byte string size comparable modern offline cash schemes bit modulus 
table operations constant latency operation latency ms submitting bid closing bidding period declaring winner table shows operations latencies relatively constant function number bids submitted auction 
latency labeled submitting bid includes latencies bidder creating bid atomically multicasting server group server decrypting portions message private performing local computations possible associated sigmas scheme 
decryptions sigmas operations consume just milliseconds server implies service process bids second bidding period 
closing bidding period includes latency servers initiating atomic multicasts close messages parallel waiting receive messages 
declaring winner includes latencies server parallel signing message declaring winner sending winner receiving verifying signatures messages 
milliseconds number bids opening bids checking validity bids fig 

latencies grow number bids shows operations latencies increase function number bids submitted 
opening bids includes latency servers parallel multicasting messages containing previously decrypted shares value jjw bid servers receiving messages reconstructing values described section 
checking validity bids includes latency server parallel reliably multicasting sigmas stat values completing verification bid accepted rejected 
note checking validity bids reflects local sigmas computations depend values 
implementation sigmas computations performed immediately bid received reflected submitting bid table reiterate latencies table approximate due difficulty precisely measuring distributed events 
latencies stages involving auction servers closing bidding period opening bids checking validity bids computed average latencies stages measured server individually 
order measure latency submitting bid modified auction server reply point point message bidder processing bid 
obviously bidder atomic multicasts anonymous assumed section iii 
latency submitting bid measured elapsed time bidder initiating bid receiving replies servers 
latency declaring winner simply sum measured latencies schnorr signature schnorr verifications message transport 
factor limiting performance stage auction protocol cryptographic operations 
true stages involving little computation involved reliable atomic latencies multicast protocols dominated cryptography 
performance numbers sensitive choices cryptographic algorithms key lengths 
improve substantially powerful server machines 
viii 
anonymity discussed section iii goal approaches electronic money provide anonymous spending customers prevent vendor bank associating purchases individuals 
section discuss ability bidder retain anonymity auction protocol 
requirement achieving bidder anonymity remove identity bidder protocol section 
simple approach achieve bidder prior submitting bid generate large random number pseudonym bid message digest function md 
bid submitted aid jjv jjw gs sigmas pub oe bank fhv sigmas priv oe bank gs auction proceed winner announced follows broadcasts aid oe aid note knowing identity location bidder submit bid pseudonym simply broadcast declaration winner 
alternatively place signed declaration location retrieved winning bidder 
winner employ declarations number knows ticket claiming auctioned item 
may ensure bidder anonymity steps may required due properties line digital cash 
discussed section iii line cash schemes require customer case bidder identity embedded value way reveals identity bank coin spent multiple times 
proposed line cash schemes bidder submit coin auctions submit coin lose auction submit coin identity bidder inferred coalition faulty auction server auction 
worse oe bank leaked coalition faulty servers due weakness procedures coin reconstructed deposited wins second auction deposit uses coin revealing bidder identity bank framing bidder reusing coin 
possible modify proposed line cash schemes identity information embedded encrypted key known bank bidder 
bank cooperation required reveal identity bidder 
approach enables coalition auction servers link coin unknown bidder auctions prevent framing attack described 
steps bidder take guard attacks 
specifically bidder coin bid 
bid unsuccessful bidder deposit coin bank withdraw new 
case multiple bids linked bidder frame bidder reuse identity bidder revealed coalition involving bank faulty auction server 
clear bidder conceal identity coalition current line schemes 
ix 
design implementation practical distributed auction service tolerate malicious behavior fewer third servers number bidders 
design cryptographic primitives old multicast secret sharing digital cash new verifiable signature sharing implementation service suggests approach performs sufficiently useful wide range settings 
described section part larger effort understand implement common financial vehicles distributed systems 
continuing effort plan extend techniques developed address general types auctions financial vehicles 
hope report papers 
author stuart haber early discussions cryptographic auctions 
anonymous referees helpful suggestions 
diffie impact secret cryptographic standard encryption privacy law enforcement technology subcommittee telecommunications finance committee energy commerce house representatives third congress session april june serial pp 

chaum security identification transaction systems big brother obsolete communications acm vol 
pp 

neuman design practical electronic currency internet proceedings st acm conference computer communications security nov pp 

esprit project cafe high security digital payment system computer security esorics lecture notes computer science gollmann ed 
springer verlag 
mcafee mcmillan auctions bidding journal economic literature vol 
pp 
june 
fcc takes licenses denies time bidders ap dow jones news august 
lewis auction internet new york times may 
lamport shostak pease byzantine generals problem acm transactions programming languages systems vol 
pp 
july 
reiter secure agreement protocols reliable atomic group multicast rampart proceedings nd acm conference computer communications security nov pp 

safeguarding cryptographic keys proceedings afips national computer conference pp 

shamir share secret communications acm vol 
pp 
nov 
feldman practical scheme non interactive verifiable secret sharing proceedings th ieee symposium foundations computer science oct pp 

goldreich yacobi electronic wallet proceedings crypto 
plenum press 
chaum fiat naor untraceable electronic cash advances cryptology crypto proceedings lecture notes computer science goldwasser ed 
pp 
springer verlag 
franklin reiter verifiable signature sharing advances cryptology eurocrypt lecture notes computer science quisquater eds 
pp 
springer verlag 
hoffman new power attorney form introduced new york times october 
elgamal public key signature scheme discrete logarithms ieee transactions information theory vol 
pp 
july 
schnorr efficient identification signatures smart cards advances cryptology crypto proceedings lecture notes computer science brassard ed 
pp 
springer verlag 
nist fips pub digital signature standard department commerce national institute standards technology 
rivest shamir adleman method obtaining digital signatures public key cryptosystems communications acm vol 
pp 
feb 
rabin signatures public key functions intractable factorization tech 
rep mit lcs tr laboratory computer science massachusetts institute technology jan 
coppersmith franklin reiter low exponent rsa related messages advances cryptology eurocrypt 
springer verlag appear 
de santis desmedt frankel yung share function securely proceedings th acm symposium theory computing may pp 

pedersen distributed provers applications undeniable signatures advances cryptology eurocrypt proceedings lecture notes computer science davies ed 
pp 
springer verlag 
rivest rfc md message digest algorithm internet activities board apr 
chor goldwasser micali awerbuch verifiable secret sharing achieving simultaneity presence faults proceedings th ieee symposium foundations computer science oct pp 

desmedt threshold cryptography european transactions telecommunications related technologies vol 
pp 
july 
goldreich micali wigderson play mental game proceedings th acm symposium theory computing may pp 

dolev dwork naor non malleable cryptography proceedings rd acm symposium theory computing may pp 

lacy mitchell schell cryptography software proceedings th usenix security workshop oct pp 

data encryption standard national bureau standards federal information processing standards publication government printing office washington 
brands untraceable line cash wallets observers advances cryptology crypto lecture notes computer science stinson ed 
pp 
springer verlag 
matthew franklin received degree mathematics college degree mathematics berkeley ph degree computer science columbia university 
currently principal investigator member technical staff research bell laboratories research interests include cryptography distributed computing 
michael reiter received degree mathematical sciences university north carolina chapel hill ph degrees computer science cornell university respectively 
currently principal investigator member technical staff research bell laboratories 
research interests include security faulttolerance distributed computer systems 
