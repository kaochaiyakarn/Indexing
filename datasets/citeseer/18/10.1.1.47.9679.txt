recursive types kleisli categories alex simpson department computer science university edinburgh king buildings edinburgh eh jz august show enriched version freyd principle holds kleisli category commutative strong monad fixed point object 
gives general categorical setting possible model recursive types involving usual datatype constructors 
goals axiomatic domain theory give categorical account datatype constructions terms suitable universal properties 
show recursive types involving usual type constructors modelled kleisli category strong monad satisfying certain assumptions 
datatype free type variables naturally interpreted bifunctor oe op theta lack true covariant functoriality interpretation recursive types quite difficult corresponding situation inductive types interpretable covariant functors oe simpler inductive types easily interpreted initial algebras 
series articles peter freyd shown certain conditions simple methods interpreting inductive types applied recursive types 
central freyd approach requirement initial algebras terminal coalgebras canonically isomorphic 
technically requirement exactly suited purpose dealing contravariance 
intuition freyd justifies requirement appeal calls principle datatypes equally input output universal definitions equivalent duals 
relation technical requirement computational intuition compelling 
requirement inconsistent standard properties categories distributivity cartesian closure pre ordering name 
clearly requirement apply able interpret products sums categorical analogues 
desirable find setting accounts usual datatypes freyd requirement follows sweeping intuitive axioms 
supported serc fit freyd general categorical setting interpreting usual type constructors 
build moggi suggests programs naturally interpreted kleisli category strong monad :10.1.1.26.2787
moggi approach gives elegant account usual datatypes sums products interpreted base category monad genuine categorical counterparts lifted inclusion functor kleisli category 
order incorporate recursive types give conditions monad derived feature kleisli category property initial algebra suitably enriched endofunctors equivalent property terminal coalgebra 
main requirement ensures existence fixed point object definitions due crole pitts 
structure follows 
section reviews elementary properties initial algebras terminal coalgebras important ideas freyd 
section introduce structure category monad shall assume 
section useful results fixed points proved 
applied section give enriched setting desired equivalence initial algebras terminal coalgebras 
section shown kleisli category considered suitably enriched category results section applicable 
sketch theory applied give models recursively typed calculi 
section suggest possible developments including theory may applicable category 
initial algebras terminal coalgebras endofunctor category algebra morphism tx gamma 
invariant object algebra isomorphism 
homomorphism tx gamma 
ty gamma 
morphism gamma 
diagram commutes 
tx ty algebras homomorphisms form category identities composition inherited initial algebra just initial object category 
initial algebras determined isomorphism 
known lemma attributed lambek 
lemma initial algebra invariant object 
functor theta ob endofunctor gamma initial algebra ax ff gamma 
ax functor defined follows 
object part defined ax gamma 
ax gamma 
defined unique morphism initial algebra property ff making diagram commute 
ax ff ax ay ay ff ay routine check defined functor 
coalgebra just op gamma algebra 
gamma 
tx gamma 
ty morphism gamma 
op op homomorphism op op terminal coalgebra terminal object category coalgebras 
equivalently terminal coalgebra just initial op algebra 
duality analogues lemma holds terminal coalgebras 
category called algebraically complete endofunctor category initial algebra 
called algebraically compact algebraically complete tx gamma 
initial algebra gamma gamma 
tx terminal coalgebra isomorphism lemma 
notions due freyd defines algebraic compactness terms canonical initial algebra terminal coalgebra 
examples algebraically complete compact categories 
algebraic compactness aspects existence aspect duality aspect 
duality interest right 
accordingly say category consistently algebraically compact endofunctor tx gamma 
initial algebra gamma gamma 
tx terminal coalgebra 
consistent algebraic compactness freyd principle 
sketch consistent algebraic compactness important 
outline fiore plotkin unpublished see 
consider category op theta category involution delta 
establishes isomorphism categories op call endofunctor symmetric clearly symmetric endofunctors correspondence bifunctors op theta correspondence enables representing type constructor covariant endofunctor note notion symmetry extends easily functors similar correspondence multi arity bifunctors 
suppose consistently algebraically compact symmetric endofunctor 
fiore plotkin shown initial algebra initial algebra form gamma canonical solution recursive domain equation bifunctor generating importantly result extends theta symmetric exists constructed symmetric 
stated terms functors definitions algebraic compactness consistent algebraic compactness normally understood setting suitable category categories functors 
examples algebraically compact categories particularly forthcoming various categories cpo enriched categories cpo understood flexibly include subcategories pers 
dealing enriched versions definitions see section 
category predomains category predomains assume structure 
cartesian necessarily cartesian closed distinguished faithful strong monad respect kleisli exponentials fixed point object gamma 
phi oe gamma phi 
spell requirements 
write xy gamma gamma gamma theta xy gamma gamma gamma 
distinguished product structure denoting pairing hf gi gamma gamma gamma 
theta symmetry isomorphism theta cxy gamma gamma gamma 
theta associativity isomorphism theta theta gamma gamma gamma gamma gamma 
theta theta 
write gamma 
terminal object universal morphism 
strong monads strong monad monad natural transformation strength xy theta ty theta satisfying diagrams see :10.1.1.26.2787
definition due kock 
strong monad faithful faithfulness easily seen equivalent moggi mono requirement components monos see 
write ct kleisli category standard adjunction gt ct write eilenberg moore category adjunction cartesian products theta theta theta ffi ht fourth category defined ob ob identities composition inherited fact kleisli category obvious comonad clearly forgetful functor gives choice equivalence categories full subcategory obtained image reason preferring kleisli inclusion gives distinguished subcategory easy see cartesian products case cartesian closed fact exponential ideal 
strength monad enables natural transformations defined 
xy tx theta ffi ffi theta xy tx theta ty ffi ffi theta xy tx theta ty ffi ffi theta say monad commutative call morphism gamma 
linear algebra homomorphism 
ffi ffi equivalently image morphism theta gamma 
called right linear diagram commutes theta ty theta tz theta theta intuitively right linear argument fixed resulting morphism second argument linear 
called left linear diagram commutes tx theta theta tz theta theta called bilinear right linear left linear 
variations notion linearity defined kock gave equivalent definitions utilizing 
kleisli exponentials say kleisli exponentials ob functor ffi gamma theta ct right adjoint gamma property having kleisli exponentials essentially equivalent model due moggi :10.1.1.26.2787
require moggi requirement terminology prefer refer extraneous lambda calculus 
note cartesian closed ct automatically kleisli closed right adjoint gamma ffi gt write xy induced natural isomorphism theta tz 
write ffl xy maps theta gamma 
ty giving components counit defining adjunction kleisli exponentials equivalent statement diagram commutes theta ffl tz theta gamma gamma gamma gamma gamma gamma theta consider kleisli exponentials making stronger assumption cartesian closure reasons 
spirit axiomatic domain theory weakest assumptions possible desired results follow 
second want correspondence possible category theory typed calculi modelled 
standard recursively typed calculi plotkin metalanguage partial function spaces corresponding kleisli exponentials suitable strong monad total function spaces 
admitted real world models cartesian closed possible exception rosolini oe domains 
fixed point objects fixed point object object phi arrows gamma 
phi oe gamma phi 
phi oe gamma 
phi initial algebra 

gamma 
phi phi gamma 
phi phi gamma gamma gamma 
phi 
fixed point objects introduced crole pitts 
follow making global element phi 
definition easily shown equivalent original 
lemma oe isomorphism 
define oe phi oe ffi ffi oe gamma phi routine calculation shows oe eilenberg moore algebra 
easy see oe oe gamma morphisms phi phi oe 
observations remove hypotheses theorem 
lemma gives important property fixed point object require proof theorem 
lemma theta ty gamma 
unique theta phi gamma 
making diagram commute 
theta phi tx ffi ti theta ty theta oe theta phi proof 
consider diagrams theta phi ffi ffi ti theta ty theta oe ffi theta phi ty phi tw ty oe ffi ffi ffi ffl ffi phi show ffi gamma fx theta phi gamma 
gamma 
fx theta phi gamma 
ty gamma ffi fx theta phi gamma 
ty gamma 
phi gamma 
defined bijections 
lemma follows initial algebra property phi oe gamma 
phi ensures phi gamma 
singleton set 
show commute ffi commute 
ffi theta oe ffi tx ffi ti iff ffi ffi theta oe ffi ffi tx ffi ti mono ffi ffi ffi tj ffi tx ffi ti unit law monad ffi ffi ffi ffi ffi ti making commute ffi ffi ffi ffi ffi oe gamma form ffi necessarily unique mono 
established ffi gamma bijection sets 
similarly show commute ffi commute 
ffi ffi oe ffi ffi ffi ffl ffi ffi ffi iff ffl ffi ffi theta ffi oe theta ffl ffi ffi ffi ffi ffl ffi theta ffi ffi theta iff ffi ffi oe theta ffi ffi ffi ffl ffi ffi ffi theta iff ffi theta oe ffi ffi ffi ffl ffi ffi ffi theta ffi ffi ffi ffi ffl ffi ffi theta ffi ffi ffi ffi ffi ffi ffi ffi ffi ffi ffi ffi ffi ffi ci ffi ffi ffi ffi ti gamma ffi bijection obvious bijection isomorphism 
note proof uses kleisli exponentials components monos 
cartesian closed proof simpler idea rely mono requirement 
property expressed lemma meaningful strong endofunctor categories cartesian closed defining property parametrised notion initial algebra endofunctors cartesian closed categories property automatically satisfied usual initial algebras 
example distributive category gamma functor strong 
definition parametrised initial gamma algebra derive usual parametrised notion natural numbers object non cartesian closed categories see 
examples motivating example 
category cpos complete partial orders possibly element continuous functions 
monad take lift functor adds new element cpo associated commutative strong monad 
category cpos partial continuous functions 
category dom 
cpos element strict 
element preserving continuous functions 
incidentally dom 
equivalent categories true general category dom cpos continuous functions 
known dom cartesian closed category endomorphism fixed point 
notions linearity right linearity coincide dom usual notions strictness right strictness left strictness 
cartesian closed kleisli exponentials 
fixed point object vertical natural numbers 
categories deliberately named allow easy reinterpretation 
similar examples lift monad category predomains 
domains need partially ordered see phoa example 
known dom 
algebraically compact cpo enriched functors easily shown results 
show considerations leading consistent algebraic compactness fact quite general 
fixed points presence fixed point object gives rise behaved fixed points section prove basic properties fixed points 
generalise properties fixed points dom 
section inspired 
parametrisation results new 
basic result canonical fixed point operator 
delta ob indexed family functions delta gamma 
definition fixed point operator delta fixed point operator ffi gamma 

definition generalises property known plotkin axiom domain theory 
algebraic generalisation essentially internal version algebraically strong dinaturality 
call property uniformity terminology domain theoretic setting forthcoming book gunter 
definition uniformity delta uniform gamma 
gamma 
linear gamma 
diagram commutes 
ffi canonical fixed point operator theorem essentially theorem adapted situation 
theorem unique uniform fixed point operator 
proof 
prove existence 
take morphism gamma 
note gamma 
tx gamma 
morphisms phi ae gamma 
unique morphism initial algebra property phi making diagram commute 
phi ae tx oe ffi phi ae show 
ae ffi uniform fixed point operator 
fixed point operator follows commutativity diagram left hand triangle commutes defining property top squares naturality bottom rectangle definition ae right hand triangle object 
phi ae gamma gamma gamma gamma gamma gamma phi ae tx tf tx oe gamma gamma gamma gamma gamma gamma phi ae uniformity suppose gamma 
gamma 
linear gamma 
ffi ffi diagram commutes left hand rectangle definition ae upper square ffi ffi lower square linearity 
phi ae tx th ty tf tg oe tx th ty phi ae definition ae unique phi gamma 
ffi oe ffi ffi diagram ae ffi ae 
ae ffi ffi ae ffi proves uniformity 
uniqueness delta uniform fixed point operator 
take gamma 

show ae ffi 
note phi oe ae gamma gamma gamma 
linear ae ffi tf ffi ae ffi oe gamma composite linear maps 
omitting left hand triangle diagram proof see ae ffi oe ffi ffi ae 
uniformity delta ae ffi oe ffi delta fixed point operator definition unique fixed point oe ffi oe ffi 
ae ffi required 
henceforth write delta unique uniform fixed point operator 
canonical parametrised fixed point operator 
delta ob theta ob indexed family functions delta theta gamma 
definition parametrised fixed point operator delta parametrised fixed point op erator theta gamma 
diagram commutes 
theta definition parametrised uniformity delta parametrically uniform morphisms theta gamma 
theta gamma 
right linear theta gamma 
diagram commutes 
theta fi theta hi theta ffi canonical parametrised fixed point operator theorem mirroring theorem 
theorem unique parametrically uniform parametrised fixed point operator 
proof theorem theorem kleisli categories comonads form theta gamma write kleisli category theta gamma comonad inclusion functor show structure require 
surjective objects preserves limits left adjoint 
cartesian products inherited define strong monad action objects inherited action morphisms takes morphism morphism theta gamma 
morphism ty tz theta ty tf ffit gamma gamma gamma gamma gamma 
tz 
components readily checked give natural transformations satisfy axioms strong monad 
faithfulness show components monos 
image components monos preserves limits monos 
kleisli exponentials easiest way see give kleisli exponential define isomorphism zw mapping theta theta gamma 
tw theta tw theta ffia gamma gamma gamma gamma gamma gamma 
define maps ffl ffl yz routine check appropriate universal property giving adjunction 
fixed point object phi morphisms oe oe 
phi oe gamma 
phi initial algebra follows straightforwardly lemma 
property follows preserving limits 
proposition summarises sketched far 
proposition cartesian faithful strong monad respect kleisli exponentials fixed point object 
fact clearly preserves structure 
proposition closely related functional completeness result 
proceed give proof theorem applying proposition 
write analogous category obtained monad note object object write delta unique uniform fixed point operator define evident parametrised fixed point operator ffi theta gamma 

see parametrically uniform suppose theta gamma 
theta gamma 
right linear theta gamma 
satisfying hypothesis parametrised uniformity 
easy see linear map hypothesis uniformity satisfied required equation parametrised uniformity delta follows directly uniformity delta see delta unique parametrically uniform parametrised fixed point operator necessary inspect proof proof theorem delta unique uniform fixed point operator proof shows restriction delta unique uniform fixed point operator full subcategory containing object phi oe 
particular holds full subcategory objects form object statement appropriate restriction delta unique uniform fixed point operator full subcategory easily seen equivalent statement delta unique parametrically uniform parametrised fixed point operator completes proof theorem 
sequel shall simple lemma relating delta delta lemma gamma 
ffi thetay ffi 


proof easy 
algebras categories distinguished cartesian structure gives symmetric monoidal category 
consider categories enriched 
category class ob objects object ob families morphisms gamma 
theta abc gamma gamma gamma 
identities composition instances coherence diagrams commute expressing left right unitary properties identities associativity composition 
dual op category defined ob op ob op op op abc cba ffi similarly product theta category defined category obvious way 
functor function ob ob morphisms fab gamma gamma gamma 
fa fb diagrams commute expressing functorial preservation identities composition 
determines obvious functor op op op functor evident functor theta theta theta functor theta object induces obvious functor gamma note category trivially category 
category hom objects eilenberg moore algebra construed possibly non equivalent ways category 
functor functor associated categories 
point considering categories algebra structure associated object category 

object eilenberg moore algebra write algebra structure confusing object underlying object 
say composition linear left linear right linear bilinear abc linear left linear right linear bilinear respectively 
easy see composition right linear composition op left linear 
composition theta right linear composition right linear category determines underlying ordinary category objects hom sets identities composition defined abc obvious way 
similarly functor determines ordinary functor obvious action morphisms 
endofunctor terms algebra homomorphism initial algebra coalgebra terminal coalgebra invariant object mean corresponding concept example algebra morphism ff gamma 
fa category algebras category 
case possible category algebras shall pursue 
sense talk initial algebras functors categories non enriched notions 
show composition category right linear non enriched notion initial algebra corresponds self dual enriched property 
property leads appropriate form consistent algebraic compactness categories composition bilinear 
functor 
invariant object fa ff gamma 
algebra fb fi gamma 
write fi ffi gamma ffi ff gamma morphism composite 
ff gamma ffi fb theta fa fb theta fa ffi theta lemma fi ffi gamma ffi ff gamma homomorphism ff fi 
proof 
delta fixed point operator fi ffi fi ffi gamma ffi ff gamma ffi ff gamma fi ffi gamma ffi ff gamma obvious notation clearly fi ffi fi ffi gamma ffi ff gamma fi ffi gamma ffi ff gamma ffi ff required 
call invariant object fa ff gamma 
special ff ffi gamma ffi ff gamma definition generalises due peter freyd 
theorem similar generalisation theorem page 
theorem composition right linear equivalent 
fa ff gamma 
special invariant object 

fa ff gamma 
initial algebra 
proof 
suppose fa ff gamma 
initial algebra 
lambek lemma ff iso 
ff invariant object 
initiality unique homomorphism ff ff 
lemma ff ffi gamma ffi ff gamma homomorphism 
ff ffi gamma ffi ff gamma conversely suppose fa ff gamma 
special invariant object 
fb fi gamma 
algebra 
show unique homomorphism ff fi 
existence homomorphism fi ffi gamma ffi ff gamma lemma 
uniqueness suppose gamma 
arbitrary homomorphism 
show fi ffi gamma ffi ff gamma write xffi gamma gamma gamma gamma gamma gamma 
composite 
ffi ffi gamma linear follows easily right linearity homomorphism diagram commutes 
ff ffi gamma ffi ff gamma ffi gamma ffi gamma fi ffi gamma ffi ff gamma uniformity ffi gamma ffi ff ffi gamma ffi ff gamma fi ffi gamma ffi ff gamma ff ffi gamma ffi ff gamma ff special invariant object 
ffi gamma ffi fi ffi gamma ffi ff gamma required 
corollary composition left linear equivalent 
fa ff gamma 
special invariant object 

ff gamma gamma 
fa terminal coalgebra 
addition composition right linear equivalent 
fa ff gamma 
initial algebra 
proof 
duality 
particular composition bilinear consistently algebraically compact 
working category cat understanding functors mean functors 
composition preserved opposite categories products op op theta consistently algebraically compact 
application results model datatypes categories bilinear composition 
long type constructors yield enriched functors consistent algebraic compactness applicable 
show important way type constructor preserves enrichment 
see discussion page application 
theta functor ob exists special gamma invariant object ab ff gamma gamma gamma 
ab assume furthermore application right linear 
theorem initial gamma algebra ob conditions satisfied defining section 
show functor enriched sense underlying ordinary functor associated functor call 
ob write theta ab ac ff ffi gamma ffi ff gamma ab ac composite 
theta ab ac ffi theta ffi ffi gi ff gamma ffi ab ac define bc ff ffi gamma ffi ff gamma ab ac lemma morphism gamma 
unique gamma 
ab ac diagram commutes 
hf xi theta ab ac psi gamma gamma gamma ff ffi gamma ffi ff gamma gamma gamma gamma ab ac proof 
existence define ff ffi gamma ffi ff gamma ffi theta ff ffi gamma ffi ff gamma ffi theta ff ffi gamma ffi ff gamma ffi theta ffi xi parametrised fixed point operator ff ffi gamma ffi ff gamma ffi hf xi uniqueness suppose morphism making diagram commute 
show ff ffi gamma ffi ff gamma ffi theta note diagram commutes 
theta ab ab theta ff ffi gamma ffi ff gamma theta ab ab ffi theta ffi theta theta ab ac ff ffi gamma ffi ff gamma ffi theta ab ac note right linearity ffi theta easy consequence right linearity equation follows parametrised uniformity ffi theta ffi ff ffi gamma ffi ff gamma ffi ff ffi gamma ffi ff gamma ffi theta ffi hx ffi ffi theta ffi ffi ffi theta ffi ff ffi gamma ffi ff gamma ffi ff special gamma invariant object ffi theta ffi ff ffi gamma ffi ff gamma ffi lemma ff ffi gamma ffi ff gamma ffi theta theorem functor proof 
preservation identity show diagram commutes 
ab bb ab ab lemma unique gamma 
ab ab making diagram commute 
xi theta ab ab psi gamma gamma gamma ff ffi gamma ffi ff gamma gamma gamma gamma ab ab easy see diagram commutes ab preserves identities 
show preservation identity need prove diagram commutes bb ffi bb ffi ff ffi gamma ffi ff gamma ffi definition bb ff ffi gamma ffi ff gamma ffi bb ffi parametrised fixed point operator ff ffi gamma ffi ff gamma ffi bb ffi composition show diagram commutes 
theta cd theta bc bd ac ad theta ab ac ab ad lemma unique theta gamma 
ab ad making diagram commute 
theta hm xi theta ab ad psi gamma gamma gamma ff ffi gamma ffi ff gamma gamma gamma gamma ab ad preservation composition check diagram commutes bd ffi ffi cd theta bc 
bd ffi ff ffi gamma ffi ff gamma ffi definition bd ff ffi gamma ffi ff gamma ffi bd ffi parametrised fixed point operator ff ffi gamma ffi ff gamma ffi hm bd ffi ffi cd theta bc ffi ff ffi gamma ffi ff gamma ffi cd theta ff ffi gamma ffi ff gamma ffi bc expanding definitions applying parametrised fixed point property ffi ff ffi gamma ffi ff gamma theta ff ffi gamma ffi ff gamma ffi cd theta bc ff ffi gamma ffi ff gamma ffi theta ffi cd theta bc composing applying preservation composition ff ffi gamma ffi ff gamma ffi hm ffi cd theta bc remains show morphism gamma 
show diagram commutes ab ff ab ac ac ff ac easy consequence definition abac parametrised fixed point 
kleisli category category section apply results section showing kleisli category category 
monad commutative composition kleisli category bilinear 
conditions kleisli category consistently algebraically compact functors sense interpret recursive types setting 
object corresponding algebra kleisli exponential structure map ty gamma 
algebra obtained applying composite ty theta ffi ffl ffi ty proposition eilenberg moore algebra 
proof 
show diagrams commute 
ty ty ty ty left hand diagrams commutes shown top diagram appendix 
middle bottom diagrams show respectively ffi ffi applied theta ffi ffi ffl ffi ffi ty right hand diagram commutes 
define identity composition maps 
define ex gamma 
applied theta ffi tx define theta gamma gamma gamma gamma gamma 
applied theta theta ffi ffl ffi ffi theta ffl ffi tz proposition data gives category underlying ordinary category isomorphic proof 
data give category show diagrams commute 
theta oe effi theta psi gamma gamma gamma gamma gamma gamma theta theta theta theta theta theta theta theta just give proof lower diagram commutes 
proofs triangles forming upper diagram easier 
show lower diagram commutes show sides diagram applied theta theta theta ffi ffl ffi ffi ffi theta ffl ffi ta ffi ffi theta ffl ffi tw diagram appendix shows top leg second diagram shows bottom leg 
remains show isomorphic underlying ordinary category established category 
isomorphism hom sets ty gamma ffi easy check identities required 
henceforth refer category confusing enriched category underlying ordinary category 
proposition composition right linear 
proof 
show ffi theta ffi tm ffi theta ty gamma gamma gamma 
second diagrams appendix show respectively left hand right hand sides equation applied theta ty theta ffi ffl ffi ffi ffi ffi theta ffl ffi theta ffi tz equal 
proposition monad commutative composition left linear 
proof 
show ffi theta ffi tm ffi tz theta gamma gamma gamma 
diagram appendix shows left hand side equation applied tz theta theta ffi ffl ffi ffi theta ffl ffi tz second diagram shows right hand side applied tz theta theta ffi ffl ffi ffi theta ffl ffi tz equality sides immediate commutativity 
monad commutative composition bilinear results section ct op op theta consistently algebraically compact 
assume monad commutative 
sketch define recursive types involving standard type constructors 
products monad functor kleisli exponentials lift naturally functors theta ct theta tt ct op theta ct ct respectively 
theta general cartesian product computationally genuinely useful smash product 
categorically theta tensor product inheriting monoidal structure cartesian product folklore result see theorem 
incidentally functor theta exists general commutative strong monads 
consider type constructors bi functors assumption commutativity forced 
computationally tt lifting constructor gives computational function spaces 
order sums demand finite coproducts 
lift trivially surjective objects preserves colimits finite coproducts interesting distributivity follow impose moggi requirement 
importantly bi functors theta tt enriched easily shown give enrichment 
type constructors lift multi arity functors consistently algebraically compact op theta having observations easy see kleisli category model recursively typed call value calculi plotkin metalanguage 
type oe free type variables modelled symmetric functor oe op theta ct op theta ct oe free type variable variables denotation oe op theta theta op theta op theta behaviour second argument models instantiations 
model recursive types want define oe oe op theta ct op theta ct remarks page symmetric theorem functor required 
order model recursive types necessary op theta ct initial algebras equivalently terminal coalgebras oe functor definable 
demand algebraically compact respect functors example shows consistent 
general sufficient require initial algebras necessary modelling syntactically definable types 
approach leads possibility having essentially algebraic notions model languages plotkin metalanguage 
interesting fully develop induced equational calculus language 
merit characterisation initial algebras terminal coalgebras special invariant objects theorem property initial algebra reduced equations expressing isomorphism invariant object expressing defining property special 
usual real world models example initial model fully closed term model obtained quotienting operational equivalence 
conclude section application results yield information phi 
functor referred inherits behaviour objects behaviour objects 
morphisms maps morphism ct gamma 
ty morphism tx ty tx jffi ffit gamma gamma gamma gamma gamma 
routine check functor tt functor enrichment morphisms tt gamma 
ty tx defined applied theta tx ffi ffi ffl ffi lemma phi ft oe gamma gamma gamma 
phi initial tt algebra ct proof 
take morphism tx gamma 
ct tx gamma 
tx consider diagrams ct second phi tx phi tx ft oe oe ffi phi phi tx show commute commute reason type mismatch diagrams considered qua kleisli morphism 
ffi ffi oe iff ffi ffi ffi ffi tx ffi tx ffi ffi oe translation iff ffi ffi ffi ffi tx ffi ffi ffi oe naturality iff ffi ffi tx ffi oe monad unit law follows initiality phi oe gamma 
phi unique making commute 
theorem phi oe gamma gamma gamma gamma 
phi terminal coalgebra proof 
lemma phi ft oe gamma gamma gamma 
phi initial tt algebra ct consistent algebraic compactness functors phi ft oe gamma gamma gamma gamma gamma gamma 
phi terminal coalgebra ct prove theorem take morphism gamma 
tx consider diagrams second tx tx phi tx tt phi oe gamma ft oe gamma phi phi show fx gamma 
phi gamma 
fx gamma 
phi ct defined bijection 
phi oe gamma gamma gamma gamma 
phi follows phi ft oe gamma gamma gamma gamma gamma gamma 
phi ct note tx ft commute commute image ft defined function sets 
function injective faithfulness follows easily faithfulness remains show making commute obtained making commute 
note ffi ty right hand side consider gamma 
phi qua morphism 
commute ft oe ffi tt ffi ft ft oe ffi ft ffi ty ffi ft ft oe ffi ffi ty ffi setting oe ffi ffi ffi assumption commutes tx ffi ft oe gamma ffi 
faithfulness tx ffi oe gamma ffi commute 
known strong monad initial algebra phi oe gamma 
phi oe gamma terminal coalgebra gives phi fixed point object see 
theorem shows monad commutative faithful fixed point object arises way 
light freyd natural define notion fixed point object terminal coalgebra requirement global element 
conditions category strong monad freyd principle holds suitably enriched endofunctors kleisli category 
mean assuming initial algebras exist model recursively typed calculi kleisli category 
kleisli category keeping moggi approach semantics reasons interested eilenberg moore category :10.1.1.26.2787
certain conditions eilenberg moore category bicartesian symmetric monoidal closed comonad models intuitionistic linear logic observation due gordon plotkin bart jacobs see details 
eilenberg moore category potential model quite sophisticated type systems 
order model recursive types apply analysis section eilenberg moore category 
kock leads believe cartesian closed finite limits commutative construed category bilinear composition 
conditions case necessary obtaining model intuitionistic linear logic treatment lines section possible interesting open problem find general conditions ensure initial algebras model recursive types colimits chains starting initial object classical case categories 
ideally obtain consistent algebraic compactness limit colimit coincidence lines theorem 
question general conditions ensure existence initial algebras solve recursive type equations 
initial algebras obtainable colimits sufficient require cocompleteness dually completeness terminal coalgebras 
fact internally small complete categories respect topos question trivial answer 
reasons small complete category bi algebraically complete internal endofunctors initial algebras terminal coalgebras 
setting quite simple requirement suffices obtain algebraic compactness hom sets category objects topos endomorphism fixed point 
approach applicable categories suitable internal strong monads small complete categories reasons eilenberg moore categories small complete lift monad small complete category predomains 
situation internal algebraic compactness obtained resorting analysis 
am indebted bart jacobs particularly helpful discussions strong monads marcelo fiore discussions algebraic compactness martin hofmann drew lemma attention 
philip gordon plotkin david pym 
paul taylor diagram macros 
barr 
free triples 
math 
crole 
programming fixpoint type 
phd 
thesis university cambridge 
available cambridge university computer laboratory technical report 
crole pitts 
new foundations fixpoint computations 
proceedings th annual symposium logic computer science pages 
fiore plotkin 
compactness cpo enriched categories 
winskel editor proceedings workshop march pages 
computer science department aarhus university 
freyd 
recursive types reduced inductive types 
proceedings th annual symposium logic computer science pages 
freyd 
algebraically complete categories 
carboni rosolini editors category theory proceedings como volume lecture notes mathematics 
springer verlag 
freyd 
remarks algebraically compact categories 
fourman johnstone pitts editors applications categories computer science number london mathematical society lecture note series pages 
hyland 
small complete category 
annals pure applied logic 
jacobs 
semantics weakening contraction 
submitted manuscript forthcoming 
kelly 
basic concepts enriched category theory 
number lecture notes 
london math 
soc 
kock 
monads symmetric monoidal closed categories 
archiv der mathematik 
kock 
cartesian closed monads 
math 
scand pages 
kock 
closed categories generated commutative monads 
australian math 
soc pages 
moggi :10.1.1.26.2787
computational lambda calculus monads 
proceedings th annual symposium logic computer science pages 
moggi 
notions computation monads 
information computation 

strong monads algebras fixed points 
fourman johnstone pitts editors applications categories computer science number london mathematical society lecture note series pages 

phoa 
term models domains 
proceedings theoretical aspects computer software sendai number lecture notes computer science 
springer verlag 
final version appear information computation 
plotkin 
denotational semantics partial functions 
lecture notes summer school 
rom 
recursive principles cartesian categories 
matem 
rosolini 
continuity effectivity topoi 
phd thesis university oxford 
smyth plotkin 
category theory solution recursive domain equations 
siam journal computing 
appendix appendix contains diagrams proofs propositions section 
basic properties strong monads reader referred :10.1.1.26.2787
list gives keys explanations individual commuting squares 

naturality 
naturality 

unit law monad 

associative law monad 

naturality 
basic property 
derivable property 
definition 
definition theta ffl ty theta ty theta theta ffl ty theta theta theta ffl ty ty theta ffl ty oe theta ty theta theta ffl oe ty theta theta ffl theta theta theta theta ffl ty theta ty theta theta ffl theta theta ty theta theta ffl diagrams proof proposition 
delta delta theta ffl delta delta ta delta theta ffl delta theta theta theta theta theta delta delta theta ffl delta delta ffl theta delta oe delta oe ffl delta delta ffl tw oe delta oe ffl delta delta delta theta ffl delta delta theta ta delta delta theta delta theta theta ffl delta theta delta delta theta ffl theta ffl theta theta theta theta delta delta theta delta delta theta ffl delta theta delta ffl tw oe delta oe ffl delta oe delta diagrams proof proposition 
theta ty theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta ffl ffl theta ffl theta theta theta ty theta ty theta theta ffl tz theta ty theta theta theta theta tm theta tz theta theta theta theta ty theta theta theta theta theta ffl theta ta ffl theta theta theta theta tz theta ffl theta ffl ffl ffl theta theta ty theta theta diagrams proof proposition 
tz theta theta theta theta theta theta theta theta tz theta theta theta theta theta theta ffl theta ffl tz theta ty theta theta ty ffl tz theta theta theta ffl theta ffl theta ffl tz tz theta theta theta theta theta tm theta tz theta theta theta theta theta theta theta ffl ta ffl tz theta theta theta theta tz theta ffl theta ffl ffl ffl tz theta ty theta ty theta theta diagrams proof proposition 
