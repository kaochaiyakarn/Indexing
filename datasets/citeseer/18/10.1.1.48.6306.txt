give users access program parameters setting choice links 
html forms changed web tool browsing tool building distributed user interfaces kind simple interactive systems 
user interface programmers variety widgets users specify programs invoked 
user conceptual model complex ontology consisted pages links notion page incorporated fill forms 
current generation web browsers gives user interface designers control users see 
java applets designers implement interfaces chi community talking years 
interfaces allow users point objects having name explicitly 
applet systems java provide means build direct manipulation interfaces level user interface technology single user systems 
design previous gui systems shaped environment pc workstation different characteristics heterogeneous distributed environment net 
experience building direct manipulation interfaces building distributed interfaces raises new challenges 
example domain draw icon representing remote service addition normal manipulations user perform need show state network remote service 
explore direct manipulation build user interface distributed information system 
dlite digital library interface gives user control task context provides smooth integration services supports services run different speeds supports sharing re persistence 
developing dlite user interface assuming eventually able widely deploy direct manipulation drag drop style interface 
versions interface implemented python tk windows java simple windowing toolkit awt 
implementations netscape digital library integrated task environment dlite steve cousins andreas paepcke terry winograd eric bier ken pier stanford university xerox parc computer science department coyote hill rd stanford ca usa palo alto ca usa cousins paepcke winograd cs stanford edu bier pier parc xerox com describe case study design user interface digital library 
design stems vision library channel vast array digital information document services available 
published studies library scenarios developed metaphor called customized users tasks 
due scenarios prior chi community chose direct manipulation realization metaphor 
system called dlite designed easy users interact different services focusing task 
users reacted favorably interface design pilot testing 
conclude describing approaches problem 
keywords digital library user interface direct manipulation world wide web 
stanford digital library project focused creating technology allow user access digital resources static document citations dynamic information exploration management services having know details format document mechanics service 
technology loosely called provides unifying framework bring services provided worldwide web traditional information retrieval document services new kinds information services developed 
technology access resources possible accompanied interface provides consistent model users deal plethora offerings 
web brought distributed systems need powerful metaphors systems help handle new capabilities 
dlite result task oriented user centered design process 
system person interact services pursuit complex goal 
spectrum simplicity versus power played development world wide web 
web began hypertext ontology consisted pages links user interface simple 
pages contained formatted text images 
programs invoked parameters limited encoded link 
user interface designers web browser auxiliary input display mechanism 
corba distributed objects omg distribution framework implemented xerox parc inter language unification ilu system 
section describe workcenter metaphor 
briefly discuss objects exist workcenter background extended example system 
summarize interaction modalities system discuss user reactions pilot study 
discuss issues surfaced dlite relates systems 

introduce notion workcenter inspired rooms 
workcenter place tools task ready hand 
kitchen real world example workcenter tools cooking handy 
kitchen kitchen set 
suggest activities done just kitchen subtle reminder cook breakfast 
dlite tools called components 
example dlite workcenter contain component automated summarization documents 
component designer workcenter put reason previous user workcenter useful 
expect dlite created people expertise information exploration management librarians editors expert users tailor needs colleagues patrons 
example workcenter terminal public library designed anonymous users access free advertising supported services 
similar search oriented workcenter research firm component accessing knight ridder commercial dialog information service prominent location 
librarian workcenter components powerful efficient require training effectively 
user access number appropriate specific task 
digital library support publishing tasks retrieval tasks 
workcenter publishing papers include components routing documents intellectual property approval automatically adding approved works list publications 
experiment building workcenter help task producing high quality digital document printed color document 
contents persist time allowing users come back continue task date 
consistent reading library literature marc 
persistence reinforces notion workcenter place supports sharing 
dlite designed multiple users interact workcenter different physical locations time 
collaboration mechanism 

components objects workcenter components 
dlite components fall basic categories documents collections queries services representations people 
document components may simple citations complex entities hundreds metainformation fields multiple content representations 
environment common document types results searches dialog databases library bibliographic holdings world wide web documents users upload local disks processing microsoft word documents text files scanned images 
collections containers components 
basic collections build sets interesting information displayed processed services 
common sub type collection result set filled search services course processing 
result sets interesting contain partial results 
empty search put initial results 
users ask result sets results point underlying protocols necessary reconnect continue search 
queries expressions user information need range simple lists keywords complex boolean expressions 
query translation system built query sent different search services chan 
hci perspective challenge help users construct queries sense sources current workcenter 
queries represent encapsulated retrieval expertise 
class objects dlite easily re shared people 
contains different services 
hundreds collections accessible search services types services including summarization optical character recognition query expansion format translation bibliography processing 
services commonly implemented building proxy objects translate native protocol service protocol integrate service components user interface 
architecture provides great flexibility bringing services line allows transparent integration independent services provides potential points failure accounted user interface 
representations people interface allow user manage concerns access control communication payment authorization 
example simple icon person bottom workcenter indicates currently logged workcenter responsible payment query sent fee service 
underlying mechanism automatically send account information service accessed 

dlite workcenter bibliography processing 
workcenter template processing starts 
user creates query authors day jeffries 
user sends query search service dropping service 
service responds creating result set object attaching query moving result set away search service 
results come search service attached result set small document icons 
user activates collection see summary web browser 
summary contains buttons affect objects workcenter 
ontology digital library differs typical desktop drag drop 
documents differ files number ways 
example documents necessarily associated disk storage may citations information objects exist digital form 
collections services differ folders application programs similar ways 
collection components visualizations collection objects may stored remote computer accessed network 
folders file directories usually associated disk storage 
service components may correspond application programs may associated objects running remote sites 
contain additional meta information form defaults service invoked particular task applications programs conventional interfaces usually customized user basis best 

leveraging web browser taken advantage fact web browsers netscape navigator controlled remotely designing dlite alongside browser 
particular browser display documents may retrieved search services generated parts system 
view includes meta information controls allow documents marked workcenter access document content 
marking mechanism particularly useful allows keep visual representation documents small workcenter saving valuable screen real estate 
integration standard web browser allows users move smoothly searching browsing document processing 
section show components interact walk typical workcenter 

example common practice writing research papers delay formatting bibliography process 
researchers leave comments cite day jeffries text intending replace final step marker add appropriate 
tools help task existed long time bibtex refer typically assumed researcher access large database citations right format 
researchers spend time maintaining extending files citations manually format bibliographies writing process 
new bibliography generating tool developed paepcke 
exists free service web 
fill html form upload citation databases incomplete document wait resulting document returned 
differs predecessors accept input different formats 
interface accept input collections result sets returned search services 
example query dialog proxy return result set passed directly 
format entire result 
user searches collects relevant documents personal collection 
personal collection dropped creates bibliography object 
resulting bibliography uniformly formatted form suitable inclusion technical 
set bibliography result set collections search processing citations 
combined growing set collections accessible provides complete tool finishing research 
pieces interact smoothly dlite existing html interfaces 
generally tasks require multiple services direct manipulation approach gives users power forms approach provide 
advantage dlite short results operation directly passed operation need save copy clipboard reformat manual processing 
workcenter designed task completing bibliographies 
component labelled create query simple query creation tool 
field labels correspond typical search attributes kind task 
components oval shaped input places represent search services stanford university library resource serving inspec bibliographic database altavista general purpose world wide web search service 
component round circle user maintained collection documents 
component represents service 
complete bibliographic task user begins filling fields query constructor 
example authors day jeffries query 
shows clicking button constructor creates query component labelled 
query component may dragged screen 
collaborative workspaces shared users 
shows happens user drags query component oval input place service 
result set created system query component attached upper corner result set 
entire result set animated away source 
animation happens query sent search service proxy object uses query translation system translate query forward native form search service 
result messages returned search service cause information display updated 
initially message appears result set user know results available 
soon results appear message changes accordingly 
dlite adds document icons result set results arrive 
fast services results appear instantaneously slower services add results time 
default dlite initially requests documents returned searches 
dragging query result set altavista component input place begins similar activity altavista service 
searches may occur parallel 
user clicks result collection results summarized web browser 
browser window user mark relevant document turning related document icon workcenter dark 
user copies drags selected document collection relevant articles marked results 
citations placed collection collection dropped input place bit processing collection resulting bibliography move 
user views resulting bibliography web browser clicking adds formatted bibliography document 
add bibliography directly document simplified interaction purposes example 
query yield proper results user edit replace information query constructor create new query 
services accept entire documents queries relevance feedback user drop relevant document icons service component input place implemented proxies services 
imagine required accomplish task existing tools 
web page searching gave results machinereadable format user combine results altavista single file go third web page upload file processing 
contrast task completed dlite requiring user change focus tools ready 

interaction modalities dlite affords basic operations point activate drag drop 
uses animation show user happening leverages web browser handy document viewer assume users 
describe concepts look result set component detail discussion concrete 

pointing basic affordance dlite pointing 
user moves mouse dlite object icon small yellow box appears short description object 
done reduce screen real estate required display objects allows display objects small area screen 
information object user activate affordance 

activate current prototype activate invoked clicking right mouse button general double clicking icon standard desktop interface 
component receives activate message arbitrary action component gets information part activated take different actions different parts 
components dlite contain visible graphical elements 
components icon represents component 
default response activate message icon hide rest component icon visible 
default response activate message parts component display information component web browser 
example activating body collection display summary collection web browser activating folder icon associated collection shrink representation collection screen 

drag drop drag drop dates back xerox star gui john desktop file system interfaces exploit power technique 
document may dropped application program mechanism ends application program starts icons covered application windows seen 
programs process documents directly drag drop user action necessary 
example utilities documents way 
unfortunately users left guessing results went resort clues menu application bars see program finished 
animation indicate service begun processing finished processing raised exception 
allow components attached 
subcomponent dragged semantics may remove copy drag link 
generalization situation attendant problems desktop file systems systems attachment possible involves objects folders 
users icon upper left components components interest screen real estate 
drag icon component pass component service copy component 
affordance powerful potentially confusing users watching reactions closely find ways provide functionality non confusing way problem conventional uses drag drop requires recipient components single inputs 
context services represented components input parameter 
allow intermediate objects queries class objects iterative technique solve problem creating objects parameters fixed provided parameters services 

animation animation extensively dlite convey user action progress 
drag drop object receiving drop normally moves dropped object geographical center processing moves standard output location processing finished 
input dropped handled moving back forth quickly animates back place dragged 
avoided pop dialog boxes focus conveying information style 
adding text interface needed basis determined experience users 

example result set component result set created query dropped search service 
operation provides example illustrate interaction techniques described 
result set contains types icons folder icon query create number documents represent results 
user points icons descriptions objects displayed yellow boxes 
example pointing query shows query text pointing result item shows title 
different activations invoked result set depending click occurs 
user activates folder icon collection folder icon visible 
query activated view query displayed web browser 
intend view support query refinement implemented feature 
document icon activated document viewed web browser 
background collection activated entire collection summarized browser 
numbers center result set activated result set requests documents search service 
activation hidden affordance particularly problematic users invoke intend summarize collection browser central location 
particular feature changed version interface 
icons attached result set may copied 
user drags document collection copy remain 
tried move documents way ad hoc collections need behave doing destroyed integrity result collection documents removed result set longer represented results query 
reason dropping components result sets allowed 
copy query proven quite helpful 
facilitates query reuse refinement combined behavior queries dropped query constructors cause fields constructor filled query 
animation mainly result set creation 
current implementation creates result set top search service animates query upper right result set attaches animates entire set away service search initiated 
results come rendered result set 
resulting animation imagined text description gives strong impression query accepted processing begun 

walk user training approaches explored techniques helping users find way dlite interface web 
means word phrase stand long text 
hypertext community refer concept expanding link place bier user interfaces dates back early hans 
implemented components progressively disclose instructions components 
model mind user begins short list instructions summarizing steps task 
step step name activated reveal details part task 
task step finished collapsed step expanded 
shows component task accessing fee document processing service 
users step simple instructions familiar environment instructions embedded soon able manipulate environment need specific instructions 
system integrated web browser approach walk users assume see web pages 
approach effectively puts dlite environment conceptual box thing accessed clicking specific link 
allows ensure documentation comes accessible web affordance interface 
course approach combined required desirable 

pilot study dlite prototype development years undergoing continuous evolution basis feedback users observers project outside 
initial pilot usability study conducted novice users 
subject copy short research citations raw informal shape described example 
subjects asked find bibliographic relevant citations replace informal citations document automatically generated keys cause bibliography attached document 
gave subjects short explanation components workcenter short demonstration affordances 
goal pilot study learn general explanations enable users complete specific task dlite 
wanted learn aspects interface confusing 
sample consisted women men ranging age early late 
engineer programming experience internet experience administrative associate formal computer training day day experience netscape teacher netscape computer programming experience librarian extensive training traditional information retrieval systems computer science graduate student government administrator limited computer experience 
subjects able successfully complete task minutes 
small number subjects generalizations noted interesting common actions users took advantage fact multiple searches performed parallel 
users clicked number results asking results intended summarize collection web browser 
documents displayed web browser document icon included remind user page seeing originates dlite 
user tried repeatedly drag icon workcenter 
users dragged documents collections dragged folder icon search service intending reuse attached query 
cases wondering didn subjects realized happened continued 
right click double left click cause activate event 
unfortunately netscape uses single left click links essentially activate 

interface items open 
result users repeatedly clicked wrong button application waited happen 
test subjects remember novel affordances dlite study plan test 

discussion preliminary results show dlite particularly useful providing user level uniformity interacting heterogeneous services allowing intuitively obvious parallel activities interacting digital library services 
important user productivity matches multi track working style required digital library users paepcke 
parallelism way user surface important different services take significantly different amounts time complete 
design considerations lessons pilot study pertaining particular aspects dlite 

notion workcenter necessary partition space available resources 
just resources digital libraries span internet user time 
equally important services useful particular tasks consume valuable screen space user attention displayed time 
alternative design managing large number services fisheye view technique 
advantage services peripheral view user shown explicitly placed workcenter 
decided design reasons expect systems easy organizations wish develop standard collections tools tasks order help sophisticated users ensure resources properly organization tasks 
designed individual users provided departments organization research library centers expertise 
case fisheye view approach 
second reason part expertise task discrete entity system 
collection tools combined workcenter may carefully thought may re users 
fact component included reminds user existence ready hand 
workcenter may suggest order activity placement components 

components big challenge components find small set preserve simplicity introduce span space services notions needed users gain access 
arrived set straight forward requirements analysis 
set taken far may add components carefully digital library grows richer services 
strong preference keep number different component types minimum 
extreme simplicity components asset liability 
worked hard keep number inputs components minimum 
general allowing users construct class objects queries parts objects inputs services 
proved understandable useful limited examples explored may need revisited sophistication available services users knowledge calls minimalist approach allowing user specify details resources carrying particular search time cost user context 
difficulty interface helps users deal large numbers items maintenance display 
example problem decision distinct component types 
reduces confusion means identical looking objects screen 
alternative introduce distinctions types different images different kinds documents increasing information increasing visual clutter 
currently provide simple means color marking individual items low overhead label display just moving cursor item 
experiments determine sufficient 
correspondence visible components remote services provides simple way distinguish error sources component attachment point error indicator cases simple red component 
indicators updated continuously user attending processes 

animation animating components dlite interface possible users track results actions attention drawn salient events document added result set 
order avoid confusion important animate components long distances screen 
animation required significant engineering effort support design goal allowing users simultaneously share dlite workcenter different machines potentially separated wide area networks 

web browser exemplified mouse button issue pilot study findings differences web browser dlite interaction conventions cause problems 
difficult provide completely consistent mechanisms interfaces web browsers different kinds functionality 
problem arises example ordinary guis single clicking desktop document select opening consistent single clicking link browser 
exploring alternative conventions selecting activating dragging dlite component objects usability studies examining ways users understand integrating activities browser operating system 
commercial web browser companion dlite proven advantageous 
browser course covers navigation needs web users familiar facilities 
java implementation web browser deliver dlite 

scalability scalability interface issue 
graphical facilities dlite inherently suffer potential screen real estate problems 
scrolling solution feels clumsy text scrolled 
mechanisms deal scalability strains 
web browser surface summarize entire result collections arbitrary size 
result collection components limited number document icons hold collection summaries linearly appended extracts may scrolled naturally browser 
document attributes author title url summaries large degrees sophistication improve simple scheme 
point collection summarization scale 
developing special tools dealing large result sets unwieldy interface 
tools clustering large result sets decreases space needed display 
see bald details 

related years attempts give users direct manipulation interfaces multiple services information system 
xerox star successors allow simple document objects dropped applications programs simple services printers john 
metaphor computer developed capsules gave users ability link multiple application programs 
rose experimented extending traditional desktop pile metaphor rose 
virtual notebook system developed late gave users ability combine text images disparate sources new shared notebook artifact 
shipman marshall moran experimented extensively systems manipulating understanding information objects arranged ship 
rao system emphasized document space visualization management rao mackinlay butterfly experimented handling asynchronous requests services take varying amounts time respond mack 
chang ungar experimented animation techniques user interface self programming language chan 
maloney smith incorporate extensive animation morphic user interface malo 
hendry harper described system called reifies documents services 
uses dataflow flavor interactions dlite emphasize variety services 
compare systems detail 

dlite goes existing direct manipulation interfaces bringing distribution services asynchronous processing multiple representations interface unified way 
metaphor containing components experimented affordances drop feedback mechanisms animation context functioning digital library prototype 
resulting design supports users coherent tasks allowing multiple services invoked parallel results smoothly integrated user environment 

michelle comments early draft scott hassan tom schirmer help integration issues 
alan implemented java awt interface 
material supported national science foundation cooperative agreement iri 
funding cooperative agreement provided darpa nasa industrial partners stanford digital libraries project 
opinions finding recommendations expressed material author necessarily reflect views national science foundation sponsors 
bald winograd information exploration interface supporting contextual evolution user interests 
appear chi 
available www stanford 
edu cgi bin wp get wp 
bier bier supporting buttons documents 
acm transactions information systems oct vol 
chan chang 
ungar animation cartoons user interface 
proceedings acm symposium user interface software technology uist 
acm press 

chan chang boolean query mapping heterogeneous information sources 
ieee transactions knowledge database engineering august 
cousins managing multiple payment mechanisms digital libraries 
proceedings digital library austin tx june csdl tamu edu dl papers cousins cousins html 
cousins distributed interface digital library 
stanford university 
www stanford edu cgi bin wp get wp 
cutting ilu manual 
xerox parc 
dec 
ftp ftp parc xerox com pub ilu ilu html 
experience virtual notebook system abstraction hypertext 
proceedings cscw chapel hill nc october acm press 
hans hansen user engineering principles interactive systems 
proceedings fall joint computer conference las vegas november afips press 
henderson rooms multiple virtual workspaces 
acm transactions graphics july 
hendry harper architecture implementing extensible seeking 
proceedings sigir zurich 
john johnson xerox star retrospective 
computer 
mack mackinlay organic user interface searching citation links 
proceedings sigchi denver may addison wesley 
malo maloney smith directness liveness morphic user interface construction environment 
proceedings uist 
acm press 
marc marchionini information seeking electronic environments cambridge univ press 
nardi day intelligent agents learned library 

omg object management group 
common object request broker architecture specification 
december 
www omg org 
day jeffries orienteering information landscape information seekers get 
proceedings interchi amsterdam nl may ios press 
paepcke interoperability digital libraries overview selected highlights stanford digital library project 
ieee computer magazine may 
www stanford 
edu cgi bin wp get wp 
paepcke information needs technical settings implications design computer tools 
computer supported cooperative 
paepcke bibliography related services 
www stanford edu testbed 

rao rao information grid framework information retrieval centered applications 
proceedings uist nov 
rose rose mander oren salomon wong content awareness file system interface implementing pile metaphor organizing information 
proceedings sigir 
