paraconsistent relational data model rajiv department computer science state university ks tel fax email cs edu generalisation relational data model valued paraconsistent logic 
data model capable manipulating incomplete inconsistent information 
model define algebraic operators generalisations usual operators union selection join ordinary relations 
data model underlie database management system deals incomplete inconsistent information 
application model algebra bottomup method constructing weak founded model general deductive databases 
method simply extended construct founded model 
keywords paraconsistent relations relational algebra general deductive databases weak founded model 
categories 
important features relational data model databases value oriented nature rich set simple powerful algebraic operators 
strong theoretical foundation model provided classical order logic 
combination respectable theoretical platform ease implementation practicality model resulted immediate success model enjoyed database management systems 
systems described commercial purposes supporting relational features 
limitation relational data model lack applicability nonclassical situations 
situations involving incomplete importantly inconsistent information 
representing manipulating various forms incomplete information relational databases concern researchers relational model 
null values relational databases studied extensively 
codd distinguished applicable inapplicable null values 
generalised concept applicable nulls introducing partial values 
imielinski explored marked nulls relations allow equating null values 
disjunctive information studied 
information context null values focus 
distinguished definite knowledge context partial information 
study fuzzy uncertain information conducted 
incomplete information inconsistent information enjoyed research attention 
may argued true knowledge systems contain inconsistent information contradictions common belief systems 
experts domain strongly 
logics dealing inconsistent information called paraconsistent logics studied detail de costa belnap 
blair subrahmanian proposed logic programming paraconsistent logic subrahmanian extended disjunctive deductive databases 
generalisation relational data model 
model valued paraconsistent logic capable manipulating incomplete inconsistent information 
incompleteness tuple level particular tuple belongs relation may known 
notion incompleteness different null values related notions mentioned earlier 
similarly inconsistency tuple level particular tuple may considered relation 
introduce paraconsistent relations fundamental mathematical structures underlying model 
paraconsistent relation essentially contains kinds tuples ones definitely belong relation definitely belong relation 
structures strictly general ordinary relations ordinary relation paraconsistent relation information content vice versa 
define algebraic operators paraconsistent relations extend standard operators selection join union ordinary relations 
addition answering queries databases show application algebra paraconsistent relations 
bottom method construct weak founded model general deductive databases model proposed fitting 
rest organised follows 
section introduces paraconsistent relations notions generalising usual relational operators union join projection relations 
section presents actual generalised algebraic operators paraconsistent relations 
operators specifying queries database systems built relations 
interesting application operators section gives method weak founded model general deductive databases 
important step construction translate database clauses expressions involving algebraic operators paraconsistent relations 
section contains concluding remarks directions 
paraconsistent relations section construct set theoretic formulation paraconsistent relations 
ordinary relations model worlds tuple known hold certain underlying predicate hold paraconsistent relations provide framework incomplete inconsistent information tuples 
naturally model belief systems knowledge systems generalisation ordinary relations 
operators ordinary relations generalised paraconsistent relations 
generalisation operators maintain belief system intuition paraconsistent relations 
section develops different notions operator generalisations 
relation scheme just scheme sigma finite set attribute names attribute name sigma dom non empty domain values tuple sigma map sigma sigma dom dom sigma 
sigma denote set tuples sigma 
definition ordinary relation scheme sigma subset sigma 
sigma set ordinary relations sigma 
usual definition relations 
call ordinary relations distinguish kinds relations introduced 
definition paraconsistent relation scheme sigma pair hr gamma gamma subsets sigma 
sigma set paraconsistent relations sigma 
intuitively may considered set tuples believed true gamma set tuples believed false 
note contradictory beliefs possible assume gamma mutually disjoint condition holds important class paraconsistent relations 
paraconsistent relations may contain contradictory information model belief systems naturally knowledge systems 
furthermore gamma may cover tuples sigma 
definition paraconsistent relation scheme sigma called consistent relation gamma 
sigma set consistent relations sigma 
called complete relation gamma sigma 
consistent complete gamma sigma gamma total relation sigma set total relations sigma 
observed positive parts total relations essentially ordinary relations 
relationship explicit defining correspondence sigma sigma sigma sigma hr gamma correspondence frequently discussion 
operator generalisations easily seen paraconsistent relations generalisation ordinary relations ordinary relation paraconsistent relation information content vice versa 
natural think generalising operations ordinary relations union join projection paraconsistent relations 
generalisation intuitive respect belief system model paraconsistent relations 
construct framework operators kinds relations introduce different notions generalisation relationship operators 
ary operator ordinary relations signature sigma sigma function theta sigma theta delta delta delta theta sigma sigma sigma sigma schemes 
similarly ary operator paraconsistent relations signature sigma sigma function psi sigma theta delta delta delta theta sigma sigma 
definition operator psi paraconsistent relations signature sigma sigma totality preserving total relations schemes sigma sigma respectively psi total 
definition totality preserving operator psi paraconsistent relations signature sigma sigma weak generalisation operator theta ordinary relations signature total relations schemes sigma sigma respectively sigma psi theta sigma sigma definition essentially requires psi coincide theta total relations correspondence ordinary relations 
general may operators paraconsistent relations weak generalisations operator theta ordinary relations 
behavior weak generalisations theta just consistent relations may general vary 
require stronger notion operator generalisation restricted consistent relations behavior generalised operators 
develop notion need completions paraconsistent relation 
associate consistent relation set ordinary relations corresponding total relations obtainable throwing missing tuples 
map comps sigma sigma sigma comps sigma fq sigma sigma gamma gamma set comps sigma contains ordinary relations completions consistent relation observe comps sigma defined consistent relations produces sets ordinary relations 
observation immediate 
proposition consistent relation scheme sigma comps sigma singleton set fr iff total 
gives pictorial view different kinds relations maps sigma comps sigma need extend operators ordinary relations sets ordinary relations 
operator theta sigma theta delta delta delta theta sigma sigma ordinary relations theta sigma theta delta delta delta theta sigma sigma map sets ordinary relations defined follows 
sets ordinary relations schemes sigma sigma respectively theta theta ng words theta set theta images tuples cartesian product theta delta delta delta theta ready lead stronger notion operator generalisation 
definition operator psi paraconsistent relations signature sigma sigma consistency preserving consistent relations schemes sigma sigma respectively psi consistent 
sigma sigma sigma sigma sigma sigma comps sigma classes relations definition consistency preserving operator psi paraconsistent relations signature sigma sigma strong generalisation operator theta ordinary relations signature consistent relations schemes sigma sigma respectively comps sigma psi theta comps sigma comps sigma operator theta ordinary relations behavior weak generalisation theta controlled total relations 
hand behavior strong generalisation controlled consistent relations 
suggests strong generalisation stronger notion weak generalisation 
proposition precise 
proposition psi strong generalisation theta psi weak generalisation theta 
proof sigma sigma signature psi theta total relations schemes sigma sigma respectively 
total relations consistent psi strong generalisation theta comps sigma psi theta comps sigma comps sigma proposition gives comps sigma singleton set fr sigma theta comps sigma comps sigma just singleton set theta sigma sigma psi total sigma psi theta sigma sigma psi weak generalisation theta 
may strong generalisations operator ordinary relations behave restricted consistent relations 
section propose strong generalisations usual operators ordinary relations 
proposed generalised operators paraconsistent relations correspond belief system intuition paraconsistent relations 
algebraic operators paraconsistent relations section strong generalisation usual ordinary relation operators union join projection 
reflect generalisation dot placed ordinary relation operator obtain corresponding paraconsistent relation operator 
example denotes natural join ordinary relations denotes natural join paraconsistent relations 
set theoretic operators introduce fundamental set theoretic algebraic operators paraconsistent relations definition paraconsistent relations scheme sigma 
union denoted paraconsistent relation scheme sigma gamma gamma gamma complement denoted gamma paraconsistent relation scheme sigma gamma gamma gamma gamma intuitive appreciation union operator may obtained interpreting relations properties tuples 
property 
sets tuples properties respectively believed hold set tuples property believed hold clearly gamma gamma sets tuples properties respectively believed hold set tuples property believed hold similarly gamma gamma informal symbolic notation ft gamma ft ft similarly gamma ft ft gamma gamma definition complement operators paraconsistent relations defined understood way 
proposition operators unary gamma paraconsistent relations strong generalisations usual operators unary gamma ordinary relations 
proof consistent relations scheme sigma 
comps sigma set fq sigma gamma gamma gamma set set fr sigma gamma gamma sigma gamma gamma comps sigma comps sigma 
result unary gamma shown similarly 
sake completeness define related set theoretic operators paraconsistent relations definition paraconsistent relations scheme sigma 
intersection denoted paraconsistent relation scheme sigma gamma gamma gamma difference denoted gamma paraconsistent relation scheme sigma gamma gamma gamma gamma gamma obtain intuitive grasp definitions consider difference operator 
interpret gamma property 
tuples definitely property exactly gamma gamma gamma tuples definitely property ones gamma gamma gamma gamma informal symbolic notation gamma ft gamma similarly gamma gamma ft ft gamma independent definitions intersection difference operators derived fundamental operators union complement intuitively expected 
proposition paraconsistent relations common scheme gamma gammar gammas gamma gamma gammar proof gamma gammar gammas gammar gammas gamma gammar gamma gammas gamma similarly gamma gammar gammas gamma gamma second part result shown similarly 
table gives algebraic laws involving set theoretic operators 
symbols phi table denote empty universal total relations respectively phi sigma sigma table laws algebra paraconsistent relations commutative laws associative laws distributive laws idempotent laws phi phi phi identity laws gamma gamma double complementation gamma gamma phi gamma phi gamma phi gamma gamma gamma gamma gamma gamma de morgan laws relation theoretic operators sigma delta relation schemes sigma delta tuple sigma delta denote set ft delta sigmag extensions extend notion sigma defining delta delta define relation theoretic algebraic operators paraconsistent relations 
definition paraconsistent relations schemes sigma delta respectively 
natural join just join denoted paraconsistent relation scheme sigma delta gamma gamma sigma delta gamma sigma delta usual natural join ordinary relations 
instructive observe gamma contains extensions tuples gamma gamma believed false extended tuples 
proposition straightforward 
proposition strong generalisation 
proof consistent relations schemes sigma delta respectively 
comps sigma delta set fq sigma delta sigma delta gamma gamma sigma delta gamma sigma delta comps sigma comps delta fr comps sigma comps delta comps sigma delta 
sigma comps sigma sigma usual projection sigma ordinary relations 
similarly delta comps delta 
comps sigma comps delta 
comps sigma comps delta 
gamma sigma delta gamma sigma delta consistent 
comps sigma delta 
definition paraconsistent relation scheme sigma delta scheme 
projection delta denoted delta paraconsistent relation delta delta delta sigma delta delta gamma ft delta sigma delta gamma sigma delta delta usual projection delta ordinary relations 
noted contrary usual practice definition projection just 
delta sigma coincides intuitive projection operation 
case delta gamma consists tuples delta extensions gamma define relation theoretic operation 
definition paraconsistent relation scheme sigma logic formula involving attribute names sigma constant symbols denoting values attribute domains equality symbol negation symbol connectives selection denoted oe paraconsistent relation scheme sigma oe oe oe gamma gamma oe sigma oe usual selection tuples satisfying ordinary relations 
proposition operators oe strong generalisations oe respectively 
proof similar proposition 
example strictly speaking relation schemes sets attribute names example treat ordered sequences attribute names tuples viewed usual lists values 
fa cg common domain attribute names paraconsistent relations schemes hx hy zi respectively gamma gamma paraconsistent relation scheme hx zi gamma observe gamma blows contain extensions tuples gamma gamma hx zi paraconsistent relation scheme hx zi hx zi hx zi gamma tuples negative component projected paraconsistent relation extensions negative component original paraconsistent relation 
oe hx zi paraconsistent relation scheme oe hx zi oe hx zi gamma tuples satisfy selection condition negative component selected paraconsistent relation 
application section give application algebra paraconsistent relations 
briefly bottom method constructing weak founded model general deductive database 
somewhat detailed exposition general deductive databases reader referred weak founded model 
general deductive databases deductive databases extension relational databases addition manipulating explicitly represented facts deductive databases provide ways deduce facts facts database 
give brief deductive databases 
details underlying language finite set constant variable predicate symbols function symbols 
term variable constant 
atom form predicate symbol terms 
literal positive literal negative literal atom 
literal denote complementary literal positive definition deductive database finite set clauses form atom 
term atom literal clause called ground contains variables 
herbrand universe underlying language set ground terms herbrand base language set ground atoms herbrand interpretation language subset herbrand base 
ground instance term atom literal clause term atom literal clause respectively obtained replacing variable constant 
deductive database denote set ground instances clauses note underlying language function symbols logic programs finite 
way give semantics definite deductive database fixpoint immediate consequence function herbrand interpretations definition herbrand interpretation deductive database herbrand interpretation fa clause fb ig known possesses fixpoint respect partial order set inclusion 
fixpoint shown minimal model model known ordinal powers defined follows definition ordinal ff ff ff ff gamma ff successor ordinal fi ff fi ff limit ordinal 
expressive power clauses deductive databases increased allowing negated atoms bodies 
results general class deductive databases defined 
definition general deductive database finite set clauses form atom literal 
weak founded model general deductive databases semantics general deductive databases described 
originally logic programs 
definition partial interpretation pair hi gamma gamma subsets herbrand base 
partial interpretation consistent gamma 
partial interpretations partial interpretation hi gamma gamma partial interpretation hi gamma gamma say gamma gamma definition set partially ordered 
map monotonic implies 
general deductive database recall set ground instances clauses weak founded model fixpoint immediate consequence function consistent partial interpretations defined follows definition partial interpretation 
partial interpretation fa clause positive negative gamma gamma fa clause positive gamma negative shown preserves consistency possesses fixpoint 
fixpoint called weak founded model model shown ordinal powers defined follows definition ordinal ff ff ff ff gamma ff successor ordinal fi ff fi fi ff fi gamma ff limit ordinal 
upward closure ordinal immediate consequence function defined ordinal ff ff fixpoint observation deductive databases relevant proposition general deductive database upward closure ordinal finite number 
mechanism computes ordinal powers employed construct weak founded model construction weak founded model describe method constructing weak founded model general deductive database model paraconsistent relations semantic objects associated predicate symbols occurring method involves steps 
step convert set paraconsistent relation definitions predicate symbols occurring definitions form dp predicate symbol dp algebraic expression involving predicate symbols paraconsistent relation operators 
second step iteratively evaluate expressions definitions incrementally construct paraconsistent relations associated predicate symbols 
scheme sigma herbrand scheme dom herbrand universe sigma 
schemes paraconsistent relations associate predicate symbols set internally 
gamma infinite sequence distinct attribute names 
gamma herbrand scheme scheme renaming operators 
definition sigma fa herbrand scheme 
paraconsistent relation scheme gamma paraconsistent relation ft sigma ng ft sigma gamma ng scheme sigma paraconsistent relation scheme sigma paraconsistent relation ft gamma ng ft gamma gamma ng scheme gamma describing method convert database set definitions predicate symbols look example 
suppose clauses predicate symbol heads clauses algebraic definition constructed symbol gammap conversion exploits close connection attribute names relation schemes variables clauses pointed 
expression constructed arrive better approximation paraconsistent relation approximations algebraic expression predicate symbol union expressions obtained clause containing symbol head 
suffices give algorithm converting clause expression 
algorithm convert input general deductive database clause form form ik form ik 
set variables occurring output algebraic expression involving paraconsistent relations 
method expression constructed steps 
argument ij literal construct argument ij condition ij follows ij constant ij brand new variable ij ij 
ij variable ik ij ij ij ij true 
ij variable ik ij ij brand new variable ij ij ij 
atom ik conjunction delta delta delta ik positive literal expression oe 
expression gamma oe 
syntactic optimisation conjuncts true arguments distinct variables oe reduced identity operations dropped expression 
example gammap 

natural join obtained output expression oe set variables occurring step conjuncts true oe dropped output expression 
dropped clause body may contain variables algebraic expressions obtained algorithm convert clauses general deductive database construct system equations defining paraconsistent relations follows 
definition general deductive database eqn set equations form dp predicate symbol dp union expressions obtained algorithm convert clauses symbol head 
algebraic expression dp called definition evident predicate symbol may definitions 
shown method converting general deductive database definitions predicate symbols terminates definitions produced mimic map defined 
second final step model construction process incrementally construct paraconsistent relations defined database 
general deductive database pe denote extensional intensional portions respectively 
pe essentially set clauses empty bodies set clauses loss generality assume predicate symbol occurs pe recall set ground instances clauses pe construction algorithm straightforward 
treats predicate symbols database imperative variable names may contain paraconsistent relation value 
variable set valued fields gamma algorithm construct input general deductive database output paraconsistent relation values predicate symbols method values computed steps 
initialisation compute eqn algorithm convert clause 
predicate symbol pe set fha gamma arity predicate symbol set gamma 

equation form dp eqn compute expression dp set resulting paraconsistent relation 

step involved change value goto 
output final values predicate symbols pe omit proof termination algorithm construct constructs weak founded model database 
generalisation relational data model capable manipulating incomplete inconsistent information 
paraconsistent relations belnap valued logic form mathematical structures underlying model 
paraconsistent relation essentially contains kinds tuples ones underlying predicate believed true ones predicate believed false 
structures strictly general ordinary relations ordinary relation paraconsistent relation information content vice versa 
paraconsistent relations capable containing contradictory information structures model belief systems naturally knowledge systems 
developed notions generalising operators ordinary relations paraconsistent relations 
stronger notion guarantees generalised operator behaved paraconsistent relation operands contain consistent information 
known operators ordinary relations union join projection introduced generalised operators paraconsistent relations 
generalised operators maintain belief system intuition paraconsistent relations shown behaved sense mentioned 
data model represent relational information may incomplete inconsistent 
usual algebraic operators construct queries database systems retrieving paraconsistent information 
application paraconsistent relations algebra method constructing weak founded model general deductive databases 
method requires translating clauses database expressions involving generalised operators introduced earlier 
minor modification method tailor constructing founded model databases 
interest studying extended logic programs head clauses literals 
leads notions negation implicit negation corresponding negative literals body explicit negation corresponding negative literals head 
possible direction research extend paraconsistent relational model include disjunctive tuples providing framework semantics extended logic programs constructed bottom manner 
allowing explicit negation disjunctive deductive database logic program usually cuts number minimal models quite drastically consequence increases efficiency query processing 
main motivations exploring possibility paraconsistent relations disjunctive tuples 
bezem van emden 
downward closure ordinals logic programs 
fundamenta informaticae xiii 
belnap 
useful valued logic 
eppstein dunn editors modern uses valued logic pages 
reidel dordrecht 
biskup 
foundation codd relational operations 
acm transactions database systems december 
blair subrahmanian 
paraconsistent logic programming 
theoretical computer science 
codd 
relational model large shared data banks 
communications acm june 
codd 
missing information applicable inapplicable relational databases 
sigmod record december 
da costa 
theory inconsistent formal systems 
notre dame journal formal logic 
das 
deductive databases logic programming 
addison wesley new york 
fitting 
kripke kleene semantics logic programs 
journal logic programming 
gallaire minker nicolas 
logic databases deductive approach 
acm computing surveys june 

probability model databases 
proceedings international conference data engineering 
ieee computer society press 

partial values tabular database model 
information processing letters august 
nski 
incomplete information relational databases 
journal acm october 

semantic issues connected incomplete information databases 
acm transactions database systems 

liu 
representing indefinite information relational databases 
proceedings fourth international conference data engineering los angeles california february pages 

liu 
indefinite information relational databases 
acm transactions database systems 
lloyd 
foundations logic programming 
springer verlag second edition 
maier 
theory relational databases 
computer science press 
minker ruiz 
extended disjunctive logic programs 
komorowski ras editors proceedings seventh international symposium methodologies intelligent systems pages 
lecture notes ai springerverlag new york june 
majumdar 
fuzzy functional dependencies lossless join decomposition fuzzy relational database systems 
acm transactions database systems 
reiter 
logical reconstruction relational database theory 
brodie mylopoulos schmidt editors conceptual modeling pages 
springer verlag berlin new york 
subrahmanian 
paraconsistent disjunctive deductive databases 
theoretical computer science 

deductive databases conditional facts 
worboys grundy editors advances databases pages 
lecture notes computer science springer verlag 
proceedings th british national conference databases 
ullman 
principles database knowledge base systems volume 
computer science press 
van gelder ross schlipf 
founded semantics general logic programs 
journal acm 
