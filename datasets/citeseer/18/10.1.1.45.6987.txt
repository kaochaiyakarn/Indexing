representing interschema knowledge cooperative information systems tiziana catarci maurizio lenzerini dipartimento di informatica sistemistica universit di roma la sapienza salaria roma italy mail catarci lenzerini ing uniroma managing interschema knowledge essential task dealing cooperative information systems 
propose logical approach problem expressing interschema knowledge reasoning 
particular set structured representation language expressing semantic interdependencies classes belonging di erent database schemas method reasoning interdependencies 
language associated reasoning technique possible build logic module draw useful inferences need arises comparing combining knowledge represented various schemas 
notable examples inferences include checking coherence interschema knowledge providing integrated access cooperative information system 
supported cnr progetto sistemi linea di ricerca linea di ricerca 
extended appears proceedings international conference intelligent cooperative information systems ieee computer society press 
understanding semantics data stored di erent databases essential task dealing cooperative information systems 
interoperability see example points individual information systems interoperate basis mutual understanding information resources provide 
obviously order achieve mutual understanding forms interschema knowledge expressed reasoned 
important note interschema knowledge needed cooperative information system independently architecture system 
distinguish basic approaches accessing cooperative information systems 
approach global schema describing information individual databases way users applications illusion single centralized information system 
second approach avoids constructing global schema relies various tools sharing information users applications 
evident interschema knowledge essential element approaches provides necessary information building global schema understanding content di erent databases share relevant information 
investigate possibility logic expressing interschema knowledge reasoning 
assume individual information systems components cooperative information system defined terms data model class oriented model 
assumption allows hide technical problems related treatment heterogeneous databases deserve details 
exist formal translations virtually data models see example language approach valid relax assumption 
basic idea approach propose logic language express interdependencies classes belonging di erent schemas 
interdependencies allow designer cooperative information system establish relationships intensional definition set instances classes represented di erent schemas 
example assert language concept represented class schema concept represented assertion implies sort intensional equivalence classes imply set instances set instances 
hand assert set instances class teacher schema disjoint set instances class tutor exists form intensional inclusion 
set assertions mentioned kinds may benefit ways possibility reasoning 
distinguishing feature provide inference mechanisms allow reasoning carried 
formal semantics language devise suitable reasoning procedures allow draw useful inferences interschema knowledge 
example check class represented cooperative information system incoherent empty extension state deduce extension class schema subset extension class accessing useless want retrieve instances stored information systems concept represented papers literature share general goal representing interschema knowledge 
method supporting integrated set information systems proposed global schema managed cyc representation system 
basic di erence approach need global schema represents sort background knowledge set information systems 
shall see approach valid common knowledge available 
di erence distinction intensional extensional interdependencies classes 
problem providing tools techniques integrated access cooperative information system global schema information sharing addressed 
objectbased common data model similar adopted expressing interschema knowledge 
main di erences extensional interdependencies classes considered reasoning play important role interschema knowl edge 
advocate second order language representing types interschema dependencies 
particular main focus fully cope representational providing suitable means representing constructs di erent data models main goal provide language features order deal interoperable databases schematic discrepancies 
problem addressed papers general aspects studied 
hand compared concerned representing intensional extensional interdependencies classes developing specialized reasoning techniques allow automatically exploiting interschema knowledge various tasks 
interschema knowledge subject problem maintaining consistency related data multidatabase environment studied 
mention papers aim developing methods tools supporting discovery interschema dependencies 
techniques assume set interschema assertions issue complementary addressed 
organized follows 
section describe basic class representation language expressing intensional level individual information systems 
section set logical language expressing semantic interdependencies classes belonging di erent information systems 
section address problem reasoning interschema knowledge section illustrate interschema knowledge associated reasoning mechanisms dealing important tasks checking interschema coherence providing integrated access cooperative information system 
discussion development section 
class representation language section describe formalism adopt expressing various schemas cooperative information system 
formalism basic structure schema expressed terms entity notation 
logic language denoting complex class expressions representing rich variety properties entities relationships 
subsection describe basic elements formalism second subsection language denoting class expressions third subsection discuss expressive power formalism 
basic elements representation language data models model universe discourse partitioned levels called instance level class level 
basic elements instance level objects atomic things identified unique symbol 
symbol plays role object identifier object oriented data models 
shall see objects grouped classes objects belonging class called instances order reflect relevant associations objects aggregated tuples 
number objects components tuple called arity tuple 
tuples arity grouped sets called relationships 
tuples belonging relationship called instances class level specified terms called schema constituted alphabet class symbols specification classes related 
alphabet simply list symbols names partitioned entity relationship role attribute value domain symbols 
entity abstraction class objects called instances 
properties entity modeled terms set attributes set relationships entities 
relationship class tuples objects arity described set roles 
relationship associated arity arity tuples instances role denotes component relationship 
relationship roles arity 
example relationship marriage arity associated roles husband wife 
tuple instance relationship component role relationship 
instance marriage components role husband role wife 
domain set values 
assume suitable set constructs enumeration interval basic domains integer string style type definitions conventional programming languages available specifying structures domains 
assume collection symbols representing values elements domains 
attribute relation entity relationship domain 
worth noting model attributes relationships declared functional example attribute age entity person 
sake simplicity consider feature 
term class abstraction entity relationship attribute domain 
class expressions assertions model provides rich variety mechanisms specifying meaningful properties classes objects represented schema 
idea knowledge basic elements schema specified terms set assertions 
syntactically assertion statement form expressions suitable language denoting class 
informally assertion form states instance class denoted expression instance class shall se assertional mechanism allow specify interesting features classes 
suppose alphabet symbols schema specified previous subsection 
assume includes special entity symbols meaning clear 
term class expression denote expression formed symbols syntactic rules describe 
kinds class expressions entity domain relationship attribute expressions 
discuss entity expressions 
simplest type entity expression called atomic expression formed simply name entity 
complex entity expressions built means suitable constructors 
fact characteristics constructors form entity expressions resemble called terminological frame languages introduced artificial intelligence see example connections databases investigated ways 
syntactic point view entity expression alphabet schema formed means rules implicitly define domain expressions 


metavariables 
denote symbols alphabet particular denotes name entity name relationship 
denote names roles name attribute name domain denote entity expressions denotes domain expression 
denote symbols values belonging domains intuitive meaning entity expressions follows represent universal entity entity instances objects schema empty entity entity instance respectively denotes set instances entity represents set instances represents union set instances set instances represents set objects instances 

represents set objects tuple component component belongs extension 

represents set objects exists tuple component component belongs extension represents set objects associated values attribute represents set objects associated value attribute provide example entity expression 
suppose student entity symbols enrolled relationship symbol associated roles student enrolled denotes set students graduate students enrolled graduate course 
turn attention relationship attribute expressions 
relationship expression simply expression form 
relationship name 
rol roles associated attribute expression simply attribute name formal semantics class expressions notion interpretation 
interpretation schema alphabet consists nonempty set universe assumed include values elements domains schema function maps value element way function interpretation function maps entity expression subset attribute subset relationship set labeled tuples particular relationship set associated roles rol 
um set labeled tuples form 
um um 
um formally labeled tuple instance defined function rol instance write denote value associated component tuple order interpretation equations satisfied 




note notion interpretation schema corresponds notion database state notice definition interpretation provided semantics class expressions schema particular semantics class expression schema respect interpretation simply ready formally specify meaning set assertions 
said assertion statement form class expressions type entity relationship attribute alphabet schema semantics conditions entity attribute expressions assertion satisfied interpretation just case 

tm relationship expressions case assertion satisfied tuple 
tuple 
interpretation called model set assertions assertion set satisfied summarize conceive schema model pair alphabet symbols set assertions semantics formally characterized interpretations satisfy assertions models expressiveness representation language representation formalism introduced allows expressing interesting properties classes schema 
goal subsection provide account properties 
example assertions concerned possibility specifying type various components relationship 
fact want impose component instance relationship instance entity assertion notation shorthand 
example referring schema concerning information organization conference assertions writer author publication specify relationship typed entity author role writer entity role publication 
data models classes organized hierarchies specified means binary relation entities called isa relation 
fact class related class means isa relation schema specifies set instances subset set instances interpretation database state easy see isa relation directly represented model terms assertions 
example represent authors referees sta members persons assertions author person referee person person 
examples isa relation established entities worth mentioning formalism assertions stated relationships 
results richer mechanisms isa relation schema compared existing data models 
contrast approaches proposed literature model allows negative information represented schema 
notable example negative information stating sets instances entities disjoint 
example schema represent fact entities author referee disjoint means assertion author referee 
example negative information stating certain relationship meaningless entity instances entity participate relationship role expressed assertion 
kinds indefinite information expressed means assertions 
important kind indefinite assertion related disjunction 
example represent person male female means assertion person male female 
example suppose want state persons authors referees sta members interest application 
represented person author referee 
model allows specify necessary su cient conditions object instance class 
combined necessary su cient conditions enables designer provide sort definition entities closely related notion view databases 
example assertions conference event sponsor publication author italian order define entities 
observations show interesting modeling constructs available model notion class generally recognized central notion existing representation models 
carrying analysis main constructs available di erent models possible show data models proposed literature subsumed model 
particularly important context assume case cooperative information system adopt di erent data models translation step carried expressing various schema terms class representation language 
specification interschema knowledge section describe method specifying interschema knowledge terms interdependencies classes belonging di erent schemas 
describe form interschema assertions intuitive meaning introduce notion cooperative information system context formal semantics determines semantics interschema assertions 
interschema assertions suppose cooperative information system individual information systems called component information systems schemas 
alphabets 
assume schema expressed representation formalism section 
want keep separated symbols various schemas assume elements subscripted example teacher denotes class schema named teacher 
term class expression denote class expression alphabet schema example student woman entity symbols student woman entity expression 
notice symbols class expression belong alphabet schema called common knowledge schema cooperative information system symbols subscripted 
intuitively represents general properties classes considered common knowledge cooperative information system interest 
obviously applications knowledge available set assertions empty 
sense framework di ers approaches interschema properties established background knowledge see example various component information systems conform 
hand common knowledge schema nonempty reasonable require schemas coherent 
come back issue section 
please note notion common knowledge schema di erent global schema context schema integration intended represent integrated view classes interest collection information systems specify knowledge independent views world reflected individual schemas 
consequence said common knowledge schema may empty global schema non empty 
interschema knowledge approach specified terms set called interschema assertions 
kinds assertions forms int int ext ext assertion represents class expression represents class expression way class expressions types entity domain relationship attribute expressions relationships expressions constraint set roles appearing cardinality set roles appearing words interschema assertion represents typed interdependency class expressions belonging di erent schema 
discuss intuitive meaning kinds interschema assertions introduced formal semantics 
sake simplicity observations intuitive meaning interschema assertions refer assertions entities 
assertion states entity expression intensionally equivalent intuitively means referred unique set objects real world extension extension assertion intended state extension may di erent extension concept represented fact concept represented simple example entity declared intensionally equivalent entity student reflect instances expressions may di erent various states cooperative information system concept schema fully captured entity expression schema second assertion states entity expression say schema intensionally general entity expression schema 
means sort containment containment conceptual necessarily reflected instance level 
words intensional relationship intended state referred unique set objects real world extension subset example tutor may declared intensionally general teacher concept tutor represented schema subsumed concept teacher schema third assertion states extensionally equivalent 
case asserting state cooperative information system set objects instances set objects instances fourth assertion states extension subset extension example entity student refers students university department schema refers university may assert student extensionally general student semantics interschema assertions order assign formal semantics assertions introduce notion cooperative information system notion interpretation 
cooperative information system intended precisely characterize knowledge represented cooperative information system 
class level cooperative information system 
constituted collection schemas 
various information systems common knowledge schema may empty set interschema assertions forms 
interpretation 
built starting interpretations 

respectively 
particular defined triple union various 
extensions union various respectively way symbol extension state conditions interpretation satisfy interschema assertion 
interpretation 

assume assertion int ext class expression class expression 
assertion int entity expressions satisfied implies assertion 
int 
relationship expressions satisfied 

implies 
assertion int class expressions satisfied int int satisfied assertion ext entity expressions satisfied implies assertion 
ext 
relationships satisfied 

implies 
assertion ext class expressions satisfied ext ext satisfied analogous definitions hold semantics assertions attribute expressions 
interpretation cooperative information system 
called model assertion satisfied interschema assertion say logical consequence written satisfied model reasoning interschema assertions reasoning want perform cooperative information system reduced problem checking assertion 
section describe technique devise solution problem 
show technique order build called interschema knowledge network sort semantic network representing relevant knowledge interdependencies holding classes di erent schemas 
basic reasoning technique reasoning technique idea translating set assertions form ext advantage correspondence sets assertions language formulae variant propositional dynamic logic 
particular element assertion alphabet union alphabets schemas 
translation done follows class expression class expression include assertions schemas 
include assertions ext ext order reflect semantic constraint union various 
assertion form ext include assertion form ext include assertions ext ext assertion form int include assertions ext ext assertion form int include assertion ext possible show 
correctly captures relevant semantics assertions 
problem reason check assertion 
establish interesting correspondence set assertion formula special propositional dynamic logic 
similar correspondence noticed schild terminological languages modal logics programs 
method allows prove reasoning language decidable 
propositional dynamic logic pdl extension propositional logic order reason program schemes 
language pdl includes special operators forming programs special modal operators stating true states resulting execution programs 
semantic point view formulae pdl interpreted set states programs correspond transitions states formulae represent conditions true false states 
refer particular converse deterministic pdl extension basic pdl deal backward computations inverse transition function corresponding program 
roughly speaking associate formula way models corresponds models viceversa 
correspondence models mapping objects interpretations states interpretations roles recall roles connect entities relationships programs 
approach logical implication problem reduced analogous problem 
size polynomially related size reasoning formulae exponential time upper bound follows reasoning decidable exponential time worst case complexity 
details method 
interschema knowledge network technique described basis reasoning cooperative information system useful knowledge represented compact structure reflecting relevant interdependencies holding classes di erent schemas 
particular approach relevant interschema knowledge expressed terms called interschema knowledge network defined directed graph nodes represent classes arcs represent extensional containment classes 
construction interschema knowledge network associated cooperative information system described reasoning technique proceeds follows 
select schemas 
classes associated nodes 
pair selected classes draw arc node corresponding node corresponding ext 
compute transitive reduction iteratively remove arcs node node node arcs 
cycle merge nodes belonging single node 
comparing interschema knowledge network point main characteristics refers selected subset necessarily classes various schemas constituting possibility selection 
example may select atomic entities various schemas may include atomic entities plus important complex entities may want represent entities denoted expression interschema assertions 
note choice entities represented determines complexity completeness information carried 
second flat collection interschema assertions reflects structure interdependencies classes making explicit extensional inclusions selected classes implied note structure results partial order selected classes 
arcs reflect important inferences drawn particular existence path nodes implies instances class represented instance class represented mutual extensional equivalence set selected classes explicit merging corresponding nodes 
section devoted discussion interschema knowledge network order support types tasks accomplished cooperative information system interschema knowledge section show interschema assertions associated reasoning mechanisms order draw interesting inferences knowledge represented cooperative information system 
discuss issue distinguish main aspects reasoning play important role interschema consistency integrated access cooperative information system 
interschema consistency providing information correspondence classes different schemas interschema assertions constitute declarative specification consistency requirements di erent databases 
example interschema assertion ext student specifies update operation inserting new instances class schema ensure instance class student schema obviously interschema knowledge incoherent state cooperative information system may exists satisfying interschema assertions 
checking coherence basic activities verifying correctness cooperative information system 
framework coherence verification corresponds checking satisfiability said satisfiable admits model task directly done exploiting reasoning technique described previous section 
set interschema assertions globally satisfiable may case cooperative information system su ers types incoherence 
call class incoherent extension invariably empty models class coherence checked interschema knowledge network 
easy see fact class incoherent reflected existence path node corresponding node associated aspect related consistency interschema knowledge concerned schema integration 
argue framework provides formal setting schema integration aspect neglected existing integration methodologies 
want integrate schemas belonging cooperative information system benefit knowledge expressed phases integration process see 
particular activity conflict detection fully approach 
allows single forms redundancies integrated schemas explicit links included integrated schema order reflect meaningful relationships classes coming di erent schemas 
notice issue interschema consistency checking relevant global view cooperative information system constructed 
fact checking coherence interschema knowledge required time information shared databases 
reason issue important approaches building global schema avoided 
integrated access term integrated access mean querying operation may require accessing di erent component information systems 
pointed typical needs requiring integrated access include pose queries intention component informations system pose queries spanning component information systems provided unified view cooperative information system 
goal section show interschema assertions associated reasoning mechanisms play important role supporting integrated access particular allowing forms intensional reasoning performed query expressions 
assume queries complex expressions atomic components class expressions language described section 
atomic components called query expressions elements system reason 
assume symbols may appear query class expressions users applications refer selected schemas classes objects specific informations system requested common knowledge schema general classes independently location corresponding instances needed 
example query may refer student enrolled denoting classes objects common knowledge schema instances student enrolled course instance class schema notice formal semantics query class expression easily derives semantics cooperative information system intensional reasoning performed query class expression classifying interschema knowledge network associated cooperative information system analysing result classification order deduce relevant information query answering strategy 
classifying means 
introducing new node corresponding network 
drawing arc node ext 
drawing arc node ext 
computing transitive reduction network merging nodes corresponding equivalent obtaining network resulting network carries interesting information analyze interesting cases system take advantage information 

node placed node associated meaning query represents class incoherent evident information allow system avoid accessing cooperative information system saving processing time 

node merged node associated class belonging schema 
case query class extensionally equivalent answer query obtained simply accessing component information system schema 
cases occur 
immediate successors 
di erent 
immediate predecessors 
di erent 
basic observation possible redundancies 

classes cooperative information system explicit structure example clear accessing class predecessor 
useless retrieving instances illustrate case means example 
suppose schema refers university schema refers computer science department consider interschema assertions student ext student ext ext enrolled int enrolled enrolled ext enrolled tutoring int tutoring tutoring int tutoring tutoring int student enrolled ext student assertions state class tutors advanced computer science courses intensionally general class students interest computer science department instances class student schema enrolled advanced computer science course instances class student schema classify query class expression student enrolled tutoring interschema knowledge network turns subset student query refers symbols su cient access order compute answer 
observations show fact various nodes associated classes correspond classes instances located particular component information system system take advantage order decide minimal collection component information systems accessed order retrieve instances required query 
types reasoning deciding accessing set component information systems su cient answering reformulating query class expression terms symbols alphabet carried exploiting information provided formal framework representing interschema knowledge cooperative information systems 
interschema knowledge specified terms special language allowing expressing forms semantic interdependencies classes represented di erent schemas 
distinguishing feature provide inference mechanisms allow reason assertions 
discussed inference procedures various tasks related cooperative information systems 
assumed schemas interest expressed representation model class oriented model order logic 
said approach extended case multiple models 
believe framework constitute sound basis studying various issues related interschema knowledge representation reasoning 
time clear aspects deserve investigation 
point important aspects 
issue ciency reasoning procedure addressed 
said worst case computational complexity procedure exponential 
worth analyzing detail behaviour practical cases devising optimizations 
notice high complexity concerned task checking logically imply assertion necessary building constructing reasoning cient 
focused complete logical sense reasoning procedures observe interesting kinds reasoning needed framework cooperative information systems carried incomplete cient inference algorithms approximating complete answer 
believe direction promising ectively practical settings logic underlying approach 
challenging problem consider related need going realm order logic expressing interschema knowledge 
particular useful designer cooperative information system express forms default assumptions interschema assertions 
simple important example assumptions stating default classes explicitely linked interschema knowledge network fact disjoint 
sort closed world assumption regarding schema level cooperative information system generalize usual closed world assumption traditional databases 
generally interesting study extent existing approaches nonmonotonic reasoning developed artificial intelligence suited dealing default knowledge cooperative information systems 
abiteboul kanellakis 
object identity query language 
proceedings acm sigmod international conference man agement data 
barsalou 
dm open framework interoperation multimodel multidatabase systems 
proceedings th ieee data engineering conference 
batini lenzerini navathe 
comparative analysis methodologies database schema integration 
acm computing surveys 
beck navathe 
classification query processing technique candide semantic data model 
proceedings th ieee data engineering conference 
bergamaschi 
subsumption complex object data models 
proceedings international conference database theory 
bergamaschi 
taxonomic reasoning conceptual design 
acm transactions database systems 
borgida brachman mcguinness resnick 
classic structural data model objects 
proceedings acm sigmod international conference management data 
brachman schmolze 
overview kl knowledge representation system 
cognitive science 
ceri 
intelligent cooperative information systems workshop summary 
international journal intelligent cooperative information systems 
catarci lenzerini 
reasoning entities relationships 
submitted publication 
chen 
entity relationship model unified view data 
acm transactions database systems 
huhns shen 
resource integration large knowledge base carnot 
ieee computer 
donini lenzerini nardi nutt 
complexity concept languages 
proceedings nd international conference principles knowledge representation reasoning 
fang hammer mcleod 
identification resolution semantic heterogeneity multidatabase systems 
proceedings st ieee international workshop interoperability database systems 
perl neuhold 
structural schema integration heterogeneous multi database systems dual model 
proceedings st ieee international workshop interoperability database systems 
hull king 
semantic database modeling survey applications research issues 
acm computing surveys 
krishnamurthy litwin kent 
language features interoperability databases schematic discrepancies 
proceedings acm sigmod international conference management data 
li mcleod 
object oriented approach federated databases 
proceedings st ieee international workshop interoperability database systems 
litwin mark roussopoulos 
interoperability multiple autonomous databases 
acm computing surveys 

classes instances 
international journal intelligent cooperative information systems 
nebel 
reasoning revisions hybrid representation systems 
lecture notes artificial intelligence springer verlag 
papazoglou sellis 
organizational framework cooperating information systems 
international journal intelligent cooperative information systems 
rusinkiewicz sheth 
specifying dependencies multidatabase environment 
ieee computer 
schild 
correspondence theory terminological logics preliminary report 
proceeedings international joint conference artificial intelligence 
sheth kashyap 
far schematically near semantically 
proceedings ifip ds conference semantics interoperable database systems elsevier publisher 
spaccapietra parent dupont 
model independent assertions integration heterogeneous schemas 
vldb journal 
vardi wolper 
automata theoretic techniques modal logics programs 
journal computer system science 
yu sun dao 
determining relationships attributes interoperability multi database systems 
proceedings st ieee international workshop interoperability database systems 
