complexity timetable construction problems tim cooper jeffrey kingston basser department computer science university sydney australia shows timetable construction np complete number quite different ways arise practice discusses prospects overcoming problems 
formal specification problem ttl timetable specification language 
show np completeness arises students wide subject choice meetings vary duration simple conditions imposed choice times meetings requirements double times spread week 
realistic cases assignment meetings just teacher times fixed np complete 
suitable times assigned meetings involving student group simultaneously corresponding problem student groups np complete 
keywords timetable construction specification complexity 

timetable construction problem assign times teachers students rooms collection meetings participants attend meetings simultaneously 
basic requirement augmented concerning limits workload teachers constraints way meeting times spread week 
different techniques applied timetable construction problem 
previous authors attempted break subproblems hope efficiently solvable 
detailed understanding inherent complexity timetable construction needed broad statement problem np complete gives guidance prospects solving particular subproblem 
fills details identifying independent np complete subproblems discussing prospects solving practice 

specification timetable construction problem section specification timetable construction problem timetable specification language called ttl 
language formal flexible specify instances encountered practice 
earlier version ttl appeared 
ttl instance consists time group resource groups meetings 
formal grammar appears 
typical time group times mon mon mon mon mon mon mon mon tue tue tue tue tue tue tue tue wed wed wed wed wed wed wed wed thu thu thu thu thu thu thu thu fri fri fri fri fri fri fri fri conditions omitted times lists names times available meetings followed conditions see 
typical resource group group teachers subgroups english science computing smith english computing jones science computing robinson english teachers group contains resources smith jones robinson available attend meetings subgroups subsets set resources defining functions resources qualified perform teach english resource may number subgroups 
typical instances teachers rooms students resource groups 
groups come meetings collections slots assigned elements various groups subject certain restrictions 
example typical meeting expressing science classes meet simultaneously times week meeting science year science times science slot contain year resource students group slots contain resources science subgroup resources subgroup rooms group times times group satisfy condition defined follows double times pairs adjacent times times spread days week possible times nice day 
conditions defined time group lack space prevents explaining detail 
formally instance meeting group subgroups meeting meeting number number number integer 
grammar ttl language 
means zero 
means optional 
time conditions unimportant extensions required practice omitted 
meaning eleven selected resources occupied times fact clear year students split groups 
meetings similar science exceptions example faculty meetings meeting english times meetings ensure teacher teaches possible times week say meeting smith times condition defined mean time day included 
real instances may meetings altogether 
completes presentation ttl language 
successfully authors unimportant extensions specify high school instances easily extended accommodate multiple sections needed university timetabling express preferences selections 
requirements amenable expression ttl include relations meetings consecutive conditions set meetings assigned resource senior courses teacher minimize walking distance 
denote timetable construction ttc decision problem determining assignment times resources slots exists satisfies various conditions resource assigned share time 
polynomial time equivalent problem producing assignment ttc construct solution exists trying possible assignment slot ttc indicates solution exists repeating slots turn 

np completeness results determining complexity ttc problem defined section formally sufficient prove ttc np obvious demonstrate transformation known np complete problem ttc 
wish show ttc np complete independent ways arise practice 
necessary find transformations construct ttc instances resemble special cases ttc problem arise real instances 
known formulation timetable construction problem assumes meeting contains exactly nominated student group nominated teacher number times may freely chosen 
showed problem teachers initially available times itai shamir showed np complete teacher may assumed initially unavailable arbitrary subset times 
relevant practice karp showing graph colouring np complete 
time connection graph colouring timetable construction revisited known 

intractability owing student choice known result relating timetable construction graph colouring 
student granted free choice wide range subjects characteristic university timetable construction 
theorem 
graph ttc 
proof 
recall np complete graph problem asks possible assign colour vertex graph way adjacent vertices colour distinct colours allowed 



construct ttc instance group meeting meeting resources 
selected meeting exactly resources adjacent suppose colouring 
exists assign condition guarantees meetings share resource receive different times ttc instance solved 
conversely successful time assignment defines successful graph colouring 
represent student transformation shows assigning times university classes students attend choices np complete meeting occupies time student chooses just meetings teacher room constraints ignored 
demonstrates university examination timetable construction np complete 
universities avoid problem publishing timetable advance requiring students choose combinations subjects permitted timetable 
large classes divided sections alternative offerings subject run different times 
choosing appropriate sections just student times fixed np complete section sections provide sufficient freedom practice solutions fairly easy find 
high schools known author student choice limited deciding advance certain groups meetings occur simultaneously inviting students choose meeting group 
decision meetings group way influenced preliminary survey student preferences course np complete graph colouring problem 

intractability owing varying meeting size meetings occupy time 
typical pattern high schools times english mathematics science sport 
meetings varying sizes assigned teachers difficult assign exactly say times comprise teacher workload 
overloading forbidden industrial agreement teacher implies overloading 
leads np completeness disregarding restrictions imposed teachers qualifications need avoid clashes theorem 
bin packing unary encoding ttc 
proof 
recall np complete bin packing problem asks set items 
positive integer size packed bins capacity way bin 
assume numbers encoded unary binary bin packing np complete strong sense version np complete 
transform ttc instance group meeting meeting initial unary encoding transformation clearly polynomial complexity 
suppose bin packing instance solution 

assign meeting total time requirements meetings containing resource may assign disjoint sets times meetings 
conversely solution ttc instance may deduce bin packing assigning contains high schools known author meetings junior years split way order create small fragments fill bins meeting meeting allowing teachers share meeting 
called split assignment major form compromise permitted high school timetable construction 
universities subject problem face face workloads lighter flexible 

intractability owing time incoherence bin packing np completeness just explained vanish meetings equal size aligned time teacher workload multiple meeting size 
meeting sizes workloads control timetable construction programs alignment meetings time called time coherence shown powerful heuristic practice question naturally arises possible guarantee time coherent solution meeting sizes vary 
show answer 
ways define time coherence formally 
simple way define time incoherence set meetings number pairs meetings share time 
define decision problem ttc tc ttc augmented requirement exceed bound unfortunately ttc tc np complete underlying ttc instance trivial theorem 
bin packing unary encoding ttc tc 
proof 
remind reader purpose theorem just prove result done theorem construct ttc instance establishes independent source np completeness 
previously described np complete bin packing problem asks set items 
positive integer size packed bins capacity bin 
transform ttc tc instance groups bc group meetings 

meeting meeting jc bound suppose bin packing instance solution 

meeting choose times chosen set 
kc 
possible guarantees times chosen requirements satisfied overlaps exactly conversely suppose ttc tc instance solution overlap overlaps exactly setting defines bin packing reasonable definition time coherence permit transformation 
practice meeting sizes vary expect maintain time coherence 
inevitable loss time coherence causes severe problems practice 
illustrate transformation shows absence time coherence problem assigning meetings just teacher np complete theorem 
exact cover sets ttc 
proof 
recall np complete exact cover sets problem follows 
set 
collection subsets called 
problem asks exact cover subcollection element occurs exactly element 
transform instance exact cover sets ttc instance groups group meetings 

meeting meeting suppose exact cover assign feasible time appears elements takes care meetings remaining meetings assign leaves free times may assign times converse similar solution ttc instance assigned exactly define exact cover constructed instance amounts assigning meetings resource times fixed maximize number times 
importance discussed relation bin packing section find time incoherence problem np complete bin packing problems absent 

intractability owing conditions times explained section choice meeting times constrained requirements double times spread times week 
authors experimented method specifying time conditions ttl sufficiently general permits transformation archetypal np complete problem containing exactly meeting resources complex condition choice times 
simpler method provides fixed finite list allowed time conditions 
case real instances difficulty arises complex time conditions need satisfy simple time conditions meetings simultaneously 
transformation establishes np completeness theorem 
exact cover sets ttc 
proof 
remind reader purpose construct independent np complete instances ttc merely prove result done theorem 
previously described np complete exact cover sets problem follows 
set 
collection subsets called 
problem asks exact cover subcollection element occurs exactly element transform instance exact cover sets ttc instance groups group meetings 
meeting addition impose time condition times chosen suppose initial instance exact cover sets solution 

exactly elements 
assign times meeting collection sets times pairwise disjoint required presence meeting meeting times satisfy time condition 
conversely solution ttc instance defines collection disjoint sets times satisfies time condition obtain solution exact cover sets instance 
ttl instance constructed small meetings time condition simple list alternative time patterns occurs example university timetabling 
evidence intractability practice 
special cases solved efficiently 
pairwise disjoint problem obviously trivial 
generally exact cover sets solvable polynomial time appears 
identify second easy special case concept simple time selection define time selection time condition requiring times chosen arbitrary subset set times 
problem assigning times number time disjoint meetings containing number simple time selections solved bipartite matching graph edges connect nodes representing time slots nodes representing times 
special cases observation heuristic methods usually succeed problem restricted version exists encompasses cases encountered practice solvable polynomial time sets time disjoint meetings 
heuristics certainly adequate occasional violations conditions acceptable 
incidentally reinterpret assignment times meeting assignment student section meeting shows assignment sections university courses single student discussed section np complete 

intractability assigning forms simultaneously useful line attack discover large subproblems solved efficiently 
matching subproblem introduced de werra generalized meta matching cooper kingston assigns times meetings form meetings having nominated student group common simultaneously way demand various types teachers rooms exceed supply time 
question naturally arises possible assign suitable times forms simultaneously polynomial time 
proof np completeness mx 
mx stand meetings assigned previously 
mz 
mz meetings forms wish assign times 
theorem 
dimensional matching ttc 
proof recall np complete dimensional matching problem sets containing elements set problem determine contains matching subset element occurs exactly transform ttc instance groups group meetings mx 
mx 
mz 
mz meetings form typified meeting mx mx mx select select mz select triple complement create new resources resource subgroup members add selection mx mz completes transformation 
suppose contains matching triple assign time mx mz contains exactly mx assigned exactly time times distinct required presence 
similar remarks apply mz remains check selections satisfied 
elements possible violation meetings mx mz scheduled time contained particular construction imply contradicting conversely ttc instance solution presence ensures mx assigned different times similarly mz follows solution expressed set triples mx mz meetings occur simultaneously 
replacing meeting corresponding element arrive matching mx mz occur simultaneously contain selection particular construction corresponding element complexity set easily achievable real instances owing meetings select number teachers rooms arbitrary types 
rule hope assigning forms simultaneously 

demonstrated timetable construction problem np complete quite independent ways 
explains timetable construction difficult 
instances constructed transformations occur practice 
important ensures intractability real merely artifact method specification 
known indicated special cases compromises may problems 
negative results set limited size timetable construction instances 
high schools teachers rare week times rare 
university larger easier 
ingenuity increase timetable construction feasible practice 
tim cooper jeffrey kingston 
solution real instances timetabling problem 
computer journal 
tim cooper jeffrey kingston 
program constructing high school timetables 
international conference practice theory automated timetabling 
napier university edinburgh uk 
url ftp ftp cs su oz au pub tr tr ps 
investigations 
ph thesis school graduate studies university toronto 
itai shamir 
complexity timetable multicommodity flow problems 
siam journal computing 
garey johnson 
computers intractability guide theory np completeness 
freeman 

construction class teacher timetables 
proc ifip congress pages 
karp 
reducibility combinatorial problems 
miller thatcher eds complexity computer computations pages 
plenum press new york 
schmidt str 
timetable construction annotated bibliography 
computer journal 
welsh powell 
upper bound chromatic number graph application timetabling problems 
computer journal 
de werra 
construction school timetables flow methods 
infor canadian journal operations research information processing 
