finite state constraints lauri karttunen xerox palo alto research center center study language information stanford 
report application finite state methods phonological morphological analysis brought spectacular progress computational morphology years 
review fundamental theoretical underlies progress discuss relevance linguistics 
central problems morphology word formation morphological alternations 
study word formation principles govern combinations stems affixes types morphemes 
problem morphological alternations arises fact morpheme may alternate realizations depending phonological environment composition word 
finite state morphology attempt account phenomena context regular sets regular relations 
claim problems solved finite state state domain entail problems certainly related 
concentrate morphological alternations put aside question word formation 
primarily concerned type rules describing morphological alternations principles application question morphemes ideally represented 
examples involve segmental representations main points apply equally feature multi tiered architectures 
main strains finite state phonology sequential parallel 
sequential systems surface forms derived underlying lexical forms means ordered rules series intermediate representations 
parallel description rules constrain realization lexical forms directly intermediate stages 
parallel rule apply sense changing representation simply true false pair forms 
case parallel rule takes precedence mean application temporally ordered 
parallel descriptions straightforwardly declarative systems procedural flavor 
important lesson learned styles description phonology formally equivalent 
difference sequential parallel approaches add subtract phenomena described may important reasons 
start issue 

origins finite state phonology johnson discovery fundamental insight finite state phonology originally due douglas johnson 
book formal aspects phonological description author uc berkeley dissertation johnson demonstrated phonological rules powerful notation suggests 
phonological rules usually stated form contextsensitive rewrite rules generative power phonological rules drastically reduced simple constraint application 
johnson observed derivations involve repeated applications rule required domain application moves left right string 
phonological rewrite rules reapply output cycle 
rule derive subsequent application rule cycle leave unchanged affecting johnson demonstrated effect constraint pairs inputs outputs produced phonological rule constitute regular relation 
regular relation finite state language expressions composed symbol pairs single symbols mapping regular set 
simple finite state languages regular sets correspondence ordinary finite state automata regular relation corresponds finite state transducer 
johnson takes finite state machine pushdown store automaton turing machine model phonological rewrite rule 
illustrate effect constraint consider simple rule 
ab optional rule optionally inserts string ab front converting string ab aabb 
illustrates happens rule reapplied times 
italicized portion string newly inserted substring arrow marks place application 
column rule applied exclusively substring ab results previous application violation constraint column domain application drifts right insertion site 


ways applying ab easy see forbidden way applying rule column maps input string ab strings aa context free language conventional method application column derives regular language ab fact nested rule column give rise context free language deduce general case constraint output language context free 
consequently rule describes regular relation rule constrained apply output 
finite state transducer respects ordinary finite state automaton considers strings 
conceived network consisting states labeled arcs 
final states represented double circles non final states single circles 
simple automaton arc labels single symbols transducer labels symbol pairs representing phonological rules follow convention member pair upper symbol belongs input string second lower symbol part output follows fact intersection output language regular language leaves regular string 
members pair identical simplify notation writing pair single symbol 
transducer single label means transducer implementing rule shown 

transducer implementing ab convention state initial state 
final state states 
special null symbol epsilon allows transducer change states moving position string question 
example arc linguistic terminology case epenthesis output symbol correspond symbol input 
traces mapping string ab aabb 
symbols upper side match member arc label symbols lower side match corresponding second member pair numbers middle refer states 
transducer doesn block ends final state demonstrates transducer allows ab realized aabb 
transducer transducer mapping ab aabb 
vice versa equivalently may just say transducer analyzing aabb ab 
modelling application rule derivation start state symbols upper side derive output lower side finding path arcs matches input leads final state 
case input output identical example aba mapping aba say rule applied vacuously 
transducer accepts pair strings contain sequence terminating immediately followed essential property implementation rule 
kaplan kay rediscovery johnson received little notice time 
early seventies widely accepted finite state context free grammars general adequate linguistics especially syntax 
context uninteresting implausible phonological rule systems power notation imply 
case don know attempt take advantage fact independently rediscovered lsa acl meeting new york ronald kaplan martin kay designed algorithm compiling rewrite rules transducers 
meeting handbook published 
kaplan kay important observation johnson noted passing regular relations closed serial composition 
model rules applying sequence constructing pair transducers output transducer input side second produce single equivalent transducer composition 
composed machine maps input transducer output second generating intermediate result 
corresponding composition operation rewrite rules 
illustrate simple ordered rules 
stands underspecified nasal realized labial dental depending environment 

applying order rules convert lexical string surface string intermediate representation 
figures show individual transducers 
transducer transducer traces derivation transduction 
numbers refer states transducers 
transducer transducer lexical string intermediate string surface string label stands symbols alphabet explicitly shown 
derivation transduction examining transitions figures easy see transducers correctly block realization np sequence conform rules 
example transducer requires pair realized 
step derivation compressed single step composing transducers 
basic idea composition algorithm finite state transducer quite simple 
state new machine corresponds pair original states transducers starting initial states 
arc new machine corresponds arc upper transducer arc lower transducer 
matching middle symbol eliminated 
destination new arc state corresponds destinations original arcs 
general composite transducer larger components 
worst case number states composite machine product sizes original transducers 
presents composite transducer derived rules 
maps lexical form directly intermediate representation shown 
composition transducers figures transducer lexical string surface string transduction single transducer transducer encodes exactly lexical surface relation sequence original transducers 
allows realization follows lexical side realizes just case precedes unchanging comes required feeding order rules 
constraint induced transducer easily expressed words corresponding rewrite rule exists realization lexical required licensed output context environment applies treatment cases bit complicated 
input side 
come back point shortly discussion koskenniemi twolevel formalism 
regular relations closed composition system ordered phonological rules applying sequence describes regular relation regardless rules involved 
intermediate stages phonological derivation eliminated composing cascade individual rule transducers single automaton recognizes levels lexical level surface level 
illustrates possibility 
lexical string fst intermediate string surface string intermediate string intermediate string fst fst lexical string surface string single transducer derived fst fst fst composition replacing cascade single transducer point view phonological theory situation represented means objective phonological description characterize surface realization lexical forms intermediate forms phonological derivation add descriptive power system 
formal point view mapping regular relation characterized purely declarative way single possibly complex transducer 
hand argued individual rules cascade linguistically psychologically important complex relation comprehensible decomposing series simple elementary relations 
classical argument key features generative phonology particular rule ordering 
shall see shortly similar decomposition accomplished unordered rules different sort 
kaplan kay possibility composing single transducer cascade transducers just interesting theoretical result 
looking efficient computational method word recognition 
service goal converting rewrite rules transducers useful transducers bidirectional 
important possibility composing 
single transducer far efficient recognition inverted cascade individual rule transducers inherent asymmetry phonological rewrite rules 
rule obligatory input string contains mp string way surface mm place mp 
converse hold 
follow rule occurrence context comes underlying analysis generation obligatory rules optional 
lexical string rules generate single surface string inverse mapping amount nondeterminism introduces recognition quickly multiplies proportion number rules involved 
uncertainty resolved potential underlying strings matched actual lexical forms 
advantage single transducer recognition possible analyses multiply upwards upper side single transducer maps directly lexicon 
kaplan kay solved problem converting individual phonological rules transducers composition large rule systems single transducer turned unfeasible practical limitations 
single transducer encoding complexities language finnish large computers available early 
koskenniemi level model kimmo koskenniemi solution problem dissertation level morphology 
knowing correspondence lexical surface forms case regular relation proposed way decomposing set rules feed parallel constraints 
koskenniemi model surface realization lexical forms determined set unordered constraints corresponding transducer 
rule contains partial information aspect mapping surface form realization lexical form just case transducers accept pair 
general architecture level model illustrated 
lexical string surface string fst fst fst 
transducers working parallel linking transducers suggests koskenniemi model presupposes transducers act tandem 
character pair seen simultaneously transducers accept time 
linkage possible combine set important consequence requirement epsilon transitions synchronized 
transducer move string keeping place transducers 
constraint guarantee relations described individual transducers add regular relation considered 
general intersection regular relations regular 
example relation relation 
corresponds finite state transducer maps number number followed number trailing matches number allowing number preceding 
intersection generated finite state automaton maps regular set context free language 
koskenniemi machines single automaton intersection general intersection defined finite state transducers 
far problem recognition concerned compelling practical need combine transducers single automaton 
twolevel arrangement involves nondeterminism cascade transducers relate surface strings directly possible lexical strings 
transducers parallel arrangement practical purposes insignificant comparison effect depth cascade rule transducers linked vertically 
appendix dissertation koskenniemi presents transducers constitute twolevel description morphological alternations finnish 
automata constructed hand rules 
encode constraints expressible rewrite rules 
pointed discussing transducer possible example write single rule realization lexical surface depend surface environment simple matter construct transducer implements constraint 
main theoretical contribution koskenniemi thesis declarative rule formalism capable expressing constraints directly encoded automata description finnish 
salient feature formalism distinguishes classical rewrite rules context specifications refer lexical surface context name level rule 
level rules declarative derivation ordering 
important aspect level formalism rules effect modal statements form realized 
discuss characteristics level formalism section set state discussion expressive power vis vis types rule systems 

level rules simple level rule contains pieces information correspondence cp rule operator op left context lc right context rc schematically cp op lc rc 
correspondence part typically pair characters principle complex expression 
upper symbol part lexical representation lower symbol part surface form symbol question epsilon symbol 
context expressions level expressions 
rule operators fundamental aspect level rules deontic statements correspondences possible necessary prohibited certain environment 
modal force rule expressed operator 
operators proposed koskenniemi shown table 
operator example translation realized context realized context realized realized context table rule operators left arrow rule closest analogue obligatory rewrite rule classical generative phonology 
rules right arrow operator similar optional rewrite rules koskenniemi system transducers agree location running tandem 
consequently acting just map empty set 
relation course regular 
allow require correspondence environment 
comparisons exact standard rewrite rules refer upper part twolevel context 
practice useful rule operator combines effect 
constraints pertain side lexical surface relation written correspondence expression leaves side unspecified 
example constraint lexical forms 
level contexts consider simple example familiar realizations figures 
illustrates rules say 
lexical level surface level lexical vs surface context missing modal force rule 
idea realization licensed required followed lexicon realization conditioned preceding surface side 
koskenniemi notation rules written 
instructive compare rules corresponding transducers rewrite rules 
location colon indicates lexical symbol surface realization relevant 
refers lexical context practical purposes equivalent rewrite rule 
colon left indicates surface symbol 
different rewrite rule 
independent apply simultaneously application ordered 
transducers level rules correspond closely automata seen figures 
fact transducers shown identical 
transducer subtle way different 
difference arcs leading state controls realization reach state encountering surface realization lexical side 
allows possibility 
difference relevant arc loops back state going back initial state 
means realization spread right sequence adjacent 
transducer trace parallel application rules mapping intermediate representation seen 
transducer transducer lexical string surface string transduction parallel transducers transducers operating tandem block non final state mapping fail 
example realization fails point shown transducer transition state included explicitly mentioned arc machine 
blocks 
lexical string surface string transducer transducer non allowed correspondence possible construct single transducer equivalent operating tandem 
fact seen 
complex relation equivalently decomposed pair ordered rewrite rules pair declarative level rules 
important realize level rules refer lexical surface contexts implicitly explicitly 
changing change meaning 
right hand context lexical realized surface 
case hand wrong allow realized 
advanced features context specification level rule may complicated simple examples considering regular expression 
rule compiler formalism developed karttunen koskenniemi kaplan allows construction complex regular expression operators listed table 
operator example translation concatenation followed lexical side alternation lexical surface conjunction lexical coinciding surface kleene star zero kleene plus negation single term negation element difference ignoring zero disregarding intervening surface containing string contains surface table operators constructing regular expressions table suggests context specifications may include symbols character pairs assuming defined regular expression 
set symbols behave alike respect rules may useful define set 
part facility lack distinctive features current implementations twolevel formalism 
important enhancements rules multiple contexts rules variables 
examples 
rule says initial final operator multiple contexts disjunctive effect realized located word boundary 
operator multiple contexts equivalent conjunction lexical realized initially 
variables level formalism analogous valued features generative phonology 
rule inserts copy preceding vowel hn cluster 
vx vx vx example maps vice versa 
similar enhancements basic level formalism effect formal power system just convenient express constraints typical phonology orthography languages 
help rule compiler converts level rules transducers comprehensive rule systems developed number languages 
include english lauri karttunen finnish kimmo koskenniemi russian french carol annie zaenen unpublished far 
kenneth beesley developed extensive level analysis arabic 

discussion sequential vs parallel descriptions far discussed strains finite state phonology original johnson kaplan kay cascade models sequential rewrite rules koskenniemi parallel formalism inspired realization systems kind describe regular relations 
details mapping lexical surface forms language complex sure ways decomposing relationship set primitive relations 
algorithm convert cascade rewrite rules equivalent equally elegant set level rules vice versa substantive difference respect complexity phenomena described 
computational point view level model practical advantage reasons discussed section answer question style better linguistic description 
absence persuasive psychological evidence sequential parallel application phonological principles settle issue ask phenomena common natural languages easier describe formalism 
crux matter question role intermediate representations play generative phonology 
insight language captured ordered application rewrite rules 
enormous body literature topic ranging developed course constructing spelling checkers morphological analyzers languages 
article halle reiterates classical arguments chomsky halle 
problem standard arguments valid competing descriptions similar respect having ordered rules 
force respect rules different sort level constraints koskenniemi style system 
consider cases 
examples type lakoff 
simple extrinsic order best known single example favor rule ordering contrast words writer rider canadian english 
involves raising ay front voiceless element merger voiceless flap standard account lack rider raising rule applied voiceless 
simplifying somewhat key idea rule precedes rule 
ay stands feature voiced vowels 
equally simple way describing contrast say ay correspondence controlled lexical environment 
unordered level rules equivalent sequence ordered rules 
ay composition transducers implementing intersection automata corresponding 
addition equivalent respect writer rider contrast modified simple way describe canadian dialects writer rider pronounced way 
case order application reversed case context part replaced indicate ay correspondence required surface element voiceless 
case typical textbook examples explain rules ordered 
rests implicit assumption adequate formal description phenomenon necessity involves sequence structure changing operations constrained representation apply 
overlooks possibility input output relation characterized constraints limited way 
disjunctive order common type example rule ordering involves pair rules pertain element environment rule subsumes environment 
example finnish consonant gradation generally disappears weak grade 
formalism lakoff different strikingly similar 
constraints expressed semi formal style graphs similar easily translated notation 
lakoff recognizes levels equally simple level analyses constructed examples 
reduction levels accomplished simple composition constraint refers levels 
vertical bar means disjunction 
means occurs vowels realized 
high labial vowels realized consequently genitive taste genitive dress 
problem description just stated instance rules contradict 
case subsumption situation problem derivational rule turns specific context ordered deletion rule applies general environment 
known disjunctive ordering 
rule specific environment precedence general rule rules conflict 
common state affairs disjunctive ordering considered part phonological theory exceptions allowed 
level framework seemingly problem 
rules formulated intended 
ordering rules fatal conflict 
genitive dress says 
result contradiction realized genitive 
course simple undesirable fix 
general rule bit specific subtracting context specific rule solves technical difficulty provides argument derivational 
clearly complicated original version 
rule lost generality 
simpler formulation maintained imposing order rules stipulation general principle 
symbol stands word boundary 
context specification clumsy way expressing idea consonant gradation involves closed syllables 
suffice 
actual conditions consonant gradation finnish case complicated 
operator realization specific environment indicates environments deleted finnish 
contexts needed cover environments 
context requires deletion cases sian pig second words taste third comb 
sides dress exempt rule 
parallel solution open objection 
avoid conflict just easily rephrasing 
difference 
says gradation context deleted realized clearly complication original version simpler 
informative rule replaces relation expressed literal sense subset relation expressed 
change complication simplification 
note general rule depends specific produce right outcome 
case taste allows genitive 
possibility permitted leaving correct form 
simplest descriptive solution problem posed conflicts general rule general 
context koskenniemi level formalism obvious move 
takes advantage underspecification useful option declarative system constraints 
responsibility single rule get right rules say 
free ride underspecification natural solution overlapping harmony systems turkish 
turkish suffixes contain types vowels 
low vowel represented realized depending preceding vowel 
high vowel preceding vowel roundness contextually determined realizations 
encode basic harmony facts level constraints convenient define auxiliary terms lack sophisticated representation 
give epsilon symbol status high vowel reasons clear moment 
help somewhat cumbersome definitions harmony rules easier state 
rounding harmony fact shown easily compiling rules transducers quickly determine language accepted finite state automaton subsumes language machine languages question infinite 
test subsume vice versa 
argument simpler simpler information proposition contains situations true 
level rule compiler locates resolves problems type automatically 
particular compile rules user turns option 
useful complicated rules conflict arises certain assignment value variable cases 
compiler care special case general rule stated concisely 
back harmony vx vy vx vy matched case corresponding transducers look simpler rules 
just state automata 
initial state harmonic vowel seen second state situation surface round vowel surface back vowel encountered 
initial state vowel default realization front vowel state established harmony spreads 
rounding harmony back harmony easy see figures transducer completely specifies quality vowel 
rounding harmony rule allows requires realized rounded vowel specify back harmony rule allows requires realized back vowel completely determining outcome 
taken rules cover cases completely correctly 
example genitive case letter lexically represented realized correspondence realization satisfies constraints word 
getting harmony right lexically specified vowels part problem 
turkish certain consonant clusters broken vowel subject harmony rules lexically specified example stem name may lexically specified ism sm cluster shows forms paradigm objective form syllable final 
similarly 
system ordered rules behavior vowel respect harmony problem 
going details relevant consonant clusters specify epenthesis rule simply cx cy matched means assignment values variables vx vy synchronized vx th value vy bound th value 
see details 
sake argument ignore alternative analysis contrast due deletion epenthesis 
cx cy constitute cluster relevant type 
epenthesis rule ordered vowel harmony inserted vowel gets free ride rules pertain lexically specified 
epenthesis rule duplicate effect harmony rules 
apparent point favor rule ordering 
turns virtually identical analysis stated terms unordered constraints 
fact done grouping definition 
figures show addition specifying correct realization vowels rules select appropriate pair type surface environment 
level version epenthesis rule intended effect ordering statements 
cx cy fact simpler contains information 

preceding discussion examined examples typical kind arguments advanced order demonstrate best way characterize mapping lexical surface forms terms ordered rules 
cases studied argument clearly fails think better ones 
fundamental problem arguments look alternative solutions space rewrite rules rules constrain realization element terms neighbors input side 
raised generative linguist difficult see rules privileged status 
important lesson learned exercise converting rewrite rules transducers simple constraints regular relations rewrite rules capture 
insights koskenniemi rule formalism lakoff cognitive phonology 
fact phonological rule systems cases reduced level system loss descriptive adequacy need insist level description 
reasons think example morphology languages naturally described level system 
levels needed formalization representations 
known phenomena described means representations reduced regular level relations way classical rewrite systems reduce level relations looks conjecture type 
case rules simultaneously constrain elements planes tiers implemented simple generalization level transducers finite state automata tuple labels 
demonstration classical phonology deals regular relations important benefits 
hand semantics rule formalism 
precise answers questions descriptions equivalent 
rule general 
secondly mathematical properties formalism known means compile linguistic descriptions efficiently functioning programs recognition generation regardless complexity description 
respect true correspondence part equivalent disjunction 
mentioned issue cyclic ordering depends assumptions word formation go 
simply state opinion arguments cyclic ordering weaker ones discuss 
clear lakoff realizes system describes version finite state phonology 
address issue 
see ch 
kornai demonstration rules express finite state constraints 
phonology different areas linguistics quite halle mind 
johnson douglas 
formal aspects phonological description 
mouton 
hague 

kaplan ronald martin kay 
phonological rules finite state transducers 
linguistic society america meeting handbook 
sixth annual meeting december 
new york 
chomsky halle 
sound pattern english 
harper row 
new york 

koskenniemi kimmo 
level morphology 
general computational model recognition production 
department general linguistics 
university helsinki 

karttunen lauri kimmo koskenniemi ronald kaplan 
compiler level phonological rules 
dalrymple tools morphological analysis 
center study language information 
stanford university 
palo alto 

beesley kenneth finite state description arabic morphology 
proceedings second cambridge conference bilingual computing arabic english 
sept 
cambridge 
sylvain morris halle 
phonology different 
linguistic inquiry 

lakoff george 
cognitive phonology 
berkeley conference phonology 
may 
kay martin 
finite state morphology 
proceedings rd conference european chapter association computational linguistics 
copenhagen 

goldsmith john metrical phonology 
blackwell 
london 
kornai andr formal phonology 
doctoral dissertation 
stanford university 
stanford 
