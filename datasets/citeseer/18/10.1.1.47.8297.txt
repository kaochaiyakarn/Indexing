slightly revised proceedings user interfaces theorem provers sophia antipolis september pages 
algebraic semiotics distributed cooperative proving joseph goguen akira mori kai lin dept computer science engineering univ california san diego la jolla ca describe new approach interface design called algebraic semiotics combining semiotics algebraic specification give rigorous theory representation quality apply tatami distributed cooperative proving project 
project uses standard html java remote proof browsing servers remote proof execution protocol maintain truth distributed cooperative proofs tool combining proof assistance website editing 
proof paradigm reduces theorems problems solvable proof servers 
integrate browsing execution animation informal explanation formal proofs design driven semiotic ideas 
landscape theorem proving seen main peaks great plane 
peaks represent fully automatic theorem provers proof checking theorem provers plane represents difficulty combining virtues 
peaks steep dark hard systems complexity non trivial formal proofs hard users machines navigate understand improve 
proof need better climbing tools 
describes tatami project seeks build moderate size transparent mound peaks building flexible construction equipment support rapid system evolution exploiting existing tools html java netscape javascript proofs hypermedia websites 
users hard proof planning machines routine reducing theorems tractable subproblems proof servers obj term reduction engine paradigm allows combination proof engines internet 
tatami system far proof checker automatic theorem prover target application behavioral proofs concurrent distributed systems new coinduction proof methods 
tremendous progress theorem proving system performance arguable pressing open problems concern user interfaces 
technology driven approaches interface design common graphical user interfaces popular 
hci research shows graphics better text multimedia combination better single medium 
example clickable proof graph difficult smallest proofs considers serious users may prefer command line interfaces direct manipulation 
general insights hci give insight need specific nature proving 
tackles user interface problems semiotics study signs 
unfortunately area developed mathematically rigorous way systematically addressed quality representation taken sufficient account social context 
address problems algebraic semiotics combines algebraic specification social semiotics sense :10.1.1.16.1071
built proof planning website construction tool called 
building research reported supported part cafeobj project information promotion agency ipa japan part advanced software technology program 
tatami natural fiber mats traditional japanese homes feet 
tatami room tatami proof pretty small tatami room proof large probably subdivided 
experiments far times inferences introduced machines users including non equational inference rules applied automatically ratio improve learn 
learned jape obj systems oxford 
websites complex interaction buttons complex links difficult build difficult maintain 
website editing different webpage editing supported commercial products microsoft website editor generator generate new versions accelerate evolutionary tool development cycle 
unfortunately short give overview try tatami system lex ucsd edu links information available 
tatami conventions major concept data structure integrate formal proofs information needed understand tatami conventions 
central narrative webpages called tatami pages describe proof steps detail automatically generated user supplied proof scores 

user supplied informal explanation page linked tatami page discussing proof strategies obstacles 
major proof part homepage major subproofs traditionally called lemmas 

proof homepages explanation pages graphics applets course text 

formal proof step linked tutorial background page application quantifier elimination webpage explaining proof rule 

major proof parts optional closing webpage sum learned 

formal proof score generated tatami page workers request executing scores remote server results returned local site 

frame navigation buttons provided kind webpage 

different kinds webpage different kinds format background frames consistent way 
conventions evolve gain experience abstraction current structure specified section 
shows typical tatami pages shows structure typical 
built far show promising convergence web capabilities ways proofs interesting understandable 
description second major concept 
dag stands directed acyclic graph generalization tree allows nodes shared detail 
evolving approach organizing proof information precise data type distributed cooperative proving 
browsed internet executed remote servers constructed locally 
tatami pages appear fixed master window 
navigation buttons include left right plus prev follow order predetermined proof author 
web browsers netscape provide local search capability lemma lookup 
status proof part proved unknown untrue displayed status window popup locally updated propagating changes 
status window supports proof navigation mouse click 
third part current status window 
interactive java applets illustrate basic intuitions problem key proof steps allowing users explore issues 
important reading specifications proofs written painful 
example readers doubt need behavioral properties homepage simplest behavioral proof applets motivates behavioral specification satisfaction see 
fact website interactive tutorial hidden algebraic formal methods 
logic basic proof planning paradigm reduces problems combinations problems solvable existing theorem provers 
proof tasks form sigma specification proof goal 
inference rules reduce tasks 
uses hidden order sorted order predicate logic address cross page issues link maintenance website wide design conventions fact issues difficult address ways 
website editor greatly reduce effort involved doing mechanical tasks filling slots predefined templates 
helps proof planning produces executable proofs 
typical tatami pages behavioral ordinary equality ordinary order logic special case paradigm general 
reduces general proof tasks equational proof tasks inference rules ffl elimination rules ffl lemma case analysis substitution proof contradiction ffl rewriting equational deduction ffl induction data types natural numbers lists ffl coinduction behavioral properties 
yields correctness proofs relatively 
simple handle typical features object paradigm including classes subclasses inheritance attributes methods local state concurrency distribution nondeterminism plus logical variables logic programming data types generic modules 
hidden algebra generalizes process algebra transition system approaches take advantage equations non monadic methods attributes 
hidden specifications characterize objects systems behave implemented 
coinduction new proof technique effective proving behavioral properties behavioral refinement 
sorts ways hidden logic data values attributes states objects 
dual induction establishes properties data types coinduction establishes properties objects states 
similarly initiality important data types finality important states 
data type implementations need initial object implementations need final important best implementations lie 
see information 
assistant distributed cooperative proving complex html mathematics interaction hyper links buttons 
website editor greatly reduce effort automatically filling predefined templates links explanations proof code combines capability proof assistant 
example sigma automatically applies conjunction elimination updating tatami page new subtasks hand lemma requires user state point lemma records subtask proving lemma isn proved 
tatami pages non automatic rules users choose 
runs batch interactive modes incremental supports evolutionary proof development 
truth maintenance status windows tatami supports cooperative proving internet 
requires keeping careful track proof tasks specifications 
consistency maintained storing ownership truth status nodes displayed status window popup 
users pick unfinished nodes 
alternative proofs goal additional complexity handled data structure call dimensional dag dag short structure blend proof status ownership information 
incomplete proofs registered submit button updates proof status concerned site 
registration proofs ghosts available locally 
users delete proofs deleted subproof ownership reassigned 
ideas constitute tatami protocol 
proof servers putting proof servers internet means tatami users need locally 
proof local remote checked pressing execute button tatami page java client applet downloaded server security client come server socket proof score url passed server server fetches proof score executes sends result back client applet 
obj server running ucsd servers added provers presburger arithmetic sites 
call general java server italian person serves coffee 
cinema cafeobj project aims help ordinary software engineers important specifications proofs understandable interesting possible 
typical modern proofs hide considerable conflicts involved construction 
finding non trivial proof requires exploring misconceptions errors may subtle 
published proofs bury exhibiting tricks conquered obstacles showing tricks needed 
human proofs omit details highlight main ideas mechanical proofs generally bury proof structure mass trivial detail features exhibit large grain proof structure motivation absent 
suggest approach proofs understandable interesting recording local conflicts motivate difficult proof steps aristotle said drama conflict 
field screen writing books give precise naive dramatic structure hollywood plots acts setup conflict resolution minutes plot points move action act 
proofs structured way easier understand 
resource theory stories 
labov says oral narratives precise structure involving sequence narrative clauses describing events order corresponds order story interleaved evaluative material evaluate events sense relating socially shared values optional opening closing sections 
motivated linking informal explanation pages formal proof pages study evaluative material connects narrative material give ideas structuring proof motivation 
study embedded stories useful making proofs easier understand 
sign systems semiotic morphisms tatami pages status windows compound signs 
basic insight saussure sign considered part system interrelated signs 
rigorous foundation discussing structure representations omit detail :10.1.1.16.1071
definition sign system consists 
set sorts signs necessarily disjoint 
partial ordering called subsort relation denoted 
set data sorts information signs colors locations truth values 
partial ordering sorts level data sorts lower sign sorts 
set level constructors build level signs signs levels written indicating ith argument sort jth parameter data sort result sort constants allowed 
priority partial ordering 
relations functions signs application conditions 
set axioms constraining possible signs 
sign system data type enriched levels priority specified initial algebra semantics exploit obj section 
consider movement mapping translation interpretation representation signs system signs 
example tatami pages status windows result translating 
proof structures map field sign system easier understand fact structure flag conflict arises failure reduction resolved appropriate lemma provided see 
gives foundation making considerations rigorous 
definition sign systems semiotic morphism consists partial functions denoted 
sorts sorts 
constructors constructors 
predicates functions predicates functions 

constructor function constructor function defined 
predicate defined predicate 
identity sorts operations data semiotic morphism gives representations compound signs extending preservation constructors terms 
class semiotic morphisms fixed sign systems ordered various ways measure representation quality 
level preserving iff function levels levels constructor level level 
priority preserving iff implies 
axiom preserving iff axioms translation logical consequence axioms 
defined written iff constructor defined intuition structure preserved way retrieve data values stored structure 

preserves content written ae iff defined preserves selector morphism preserves selector iff selector sign defined 
may preserves strictly example preserve constructors preserves content 
orderings morphisms may useful applications example priority constructors play role special measures certain levels phonological complexity effort pronunciation 
designer orderings combine various preservation properties specific way may useful specific applications 
experiments reported show preserving high levels important preserving priorities turn important preserving content 
show strong tendency preserve higher levels expense lower levels 
may surprising emphasis cognitive psychologists basic level lexical concepts bird see rosch 
sentential level natural language long considered basic research shows discourse level higher technical sense important 
suggests general principle preserving form important preserving content call principle definitions allow quite precise saying form content preservation mean preserving constructors selectors respectively 
principle counterintuitive soon see examples design 
principle really asserts tradeoff form content form heavily weighted content right balance determined information representation 
design decisions semiotic considerations guided decisions advance construction cases fact better understand decisions suggest improvements 
basic insight tatami implementation seen morphism tatami sign system section website sign system semiotic morphisms correspond obj views partial morphisms views sub sign system illustrated view stat section 
background patterns 
main content bearing sorts proof steps informal explanations tutorials executable proof scores 
tatami pages tatami mat background explanation pages pink marble background tutorial pages yellow marble background proof score pages blue background 
sorts arguments constructor spec section preserved tatami implementation 
persistent 
kind important auxiliary information tutorials lemma proofs proof scores appears persistent netscape window bonus back button retrieves information previously seen 
design choice justified detailed specification needed 
separating form content 
uniform multi frame layout helps reduce confusion 
top title frame names current current node button frame supports navigation third frame holds content tatami pages proof steps 
uniform look feel consistent transition 
persistent window fixed layout frames backgrounds 
tatami document page button returns page requested 
navigation buttons change master window 
mathematics 
formulae difficult current html proposals exist notation standard 
gif files mathematical symbols distinctive color blue mathematical signs come system quite distinct text 
tatami project progressed different versions status window developed shown 
section shows obsolete versions admit semiotic morphisms sign system 
data type partial algebraic specification sign system obj modules 
proof status values proved obj tatami base sorts pf dfn name qid dfn rule qid dfn lpf list pf 
dfn lrule list rule 
dfn obj qid dfn qid ops 
endo obj tatami pf pr tatami base sort hpg dfn goal qid dfn rule qid op hpg name goal pf 
hpg op goal lrule lpf obj 
pf op alt lpf 
pf op pf 
rule endo obj tatami pr tatami pf sort tatami dfn list hpg 
op tat 
tatami endo top level signs system sort tatami primary constructor tat takes argument sort turn primary constructor concatenation operation lists proof homepages secondary constructor empty list denoted 
hpg primary constructor hpg arguments sorts name goal pf technically fourth level sorts tatami hpg just unary constructor agree call sorts second level 
interesting pf proofs primary constructor lpf lists proofs argument sort pf secondary constructor alt lpf argument sort allows multiple proof attempts single goal 
pf recursive sign sort different ways sort tatami pages 
third level sorts lrule obj rule list explanation page obj code respectively 
rule fourth level sort constructor allows introducing new results usually called lemmas 
proved argument sort pf giving recursion 
give structures proofs web test cases shows trees 
operations nat argument just provide collection named objects target sort 
obj pr tatami op ex nat 
op pf nat 
pf op nat 
goal op obj nat 
obj flag hpg flag pf sum hpg sum pf tat flag sum 
eq pf ex pf pf alt pf pf obj eq pf red ex nil obj 
eq pf pf red ex nil obj eq pf ind ex pf pf obj eq pf red ex nil obj eq pf red ex nil obj endo red sum red flag red running obj code gives exactly terms trees shown large dot nodes indicate list concatenation operation 
note flag structure alt constructor proofs third step coinduction uses just reduction fails giving truth status second succeeds making lemma 
forms represent situation different ways 
left display gives little information proof represents alt prime failed subproof notation generalize multiple attempts fail succeed 
middle display gives information goals represents alt way left display fails indicate initial coinduction proof step giving goals idea complex instance principle displays redundant proof status information proved color green indicates proof homepage 
right display gives generic proof step names uses black print green representing gray yellow representing 
goals lists proof rules represents initial step way subgoals fails preserve constructor 
displays instance semiotic morphism tatami spec case key constructor preserved 
various status window designs partially specify status window structure current prototype give flag proof test case 
note alt constructor module 
obj pr tatami base sorts dfn list 
dfn list 
op name 
op lrule 
op alt 
op 
rule endo obj pr op nat 
flag eq eq red nil eq alt red nil 
red nil 
endo red define window view single tatami pf spec tatami spec partial semiotic morphism tatami typical necessary application status window displays information proof time 
view tatami pf sort hpg sort pf sort lpf var goal var lr lrule var var obj var var lp lpf var name var pf op lr lp lr lp op hpg obj code runs gives expected results 
informal arguments complexity representations noted subgoals long formalized practice filter needed rules 
example principle important preserve proof structure support proof overview navigation long lists rules interfere clarity structure rules cut eliminated display 
framework space explain 
flag ex pf pf red ex obj pf red ffl ex obj ffl alt ffl obj hpg sum ind ex red ffl ex obj red ffl obj ffl obj hpg ffl tat flag red red red ffl ffl alt ffl structures typical status window current status research hope evidence scientific approach semantic issues user interface design possible avoids tedious expensive methods experimental psychology ad hoc assumptions may useful new area cognitive psychology 
case algebraic semiotics useful designing tatami system 
website applets tutorials executable proofs obj server servers provers sites world course proofs including correctness tatami protocol optimizing compiler obj 
prototype available web 
sato building generator systems implementing tatami protocol experiment distributed cooperative proofs 
constructing uc san diego semiotic zoo contain examples bad design arises preservation failures semiotic morphisms lex ucsd edu zoo including status window examples section 
members links group support comments laborious development material particularly ro su diaconescu help formalization described eric discussions social issues duncan shand comments :10.1.1.16.1071
special futatsugi encouragement support cafeobj project 
field 
foundations 
dell 
third edition 
joseph goguen :10.1.1.16.1071
semiotic morphisms 
technical report cs dept computer science engineering university california san diego 
early version intelligent systems semiotic perspective vol 
ii ed 
james albus alex richard national inst 
science technology md october pages 
joseph goguen 
social ethical theory information 
geoffrey bowker les gasser leigh star william turner editors social science technical systems cooperative great divide pages 
erlbaum 
joseph goguen kai lin akira mori ro su sato 
distributed cooperative formal methods tools 
michael lowry editor proceedings automated software engineering 
nasa 
lake tahoe ca november 
joseph goguen charlotte linde 
optimal structures multi media instruction 
technical report sri international 
office naval research psychological sciences division 
joseph goguen malcolm 
algebraic semantics imperative programs 
mit 
joseph goguen malcolm 
hidden agenda 
technical report cs ucsd dept computer science engineering may 
early version proceedings conference intelligent systems semiotic perspective vol 
ed 
james albus alex richard national inst 
standards technology md october pages 
lutz hamel 
behavioural verification implementation optimizing compiler obj 
phd thesis oxford university computing lab 
william labov 
transformation experience narrative syntax 
language inner city pages 
university pennsylvania 
eric 
ethnomethodology mathematics 
routledge kegan paul 
nicholas merriam michael harrison 
wrong guis theorem provers 
yves editor proceedings user interfaces theorem provers pages 
inria 
sophia antipolis september 
marian petre price 
computer interfaces paintings user deliberate reader 
proceedings east west hci vol 
pages 
int 
centre scientific technical information moscow 
eleanor rosch 
internal structure perceptual semantic categories 
moore editor cognitive development acquisition language 
academic 
eleanor rosch 
cognitive points 
cognitive psychology 
appendix words master desire mathematics easier long history shown extract letter descartes girard dated june quoted geometrical girard field gray springer pages intention write people interested learned subject understood people useful accessible common people easily understood studies book steel explain fully clearly distinctly study book exert imagination understand proposition geometry turn page look letters find discourse easy understanding description novel 
