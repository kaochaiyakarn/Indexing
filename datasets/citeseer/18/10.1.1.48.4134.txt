massachusetts institute technology artificial intelligence laboratory memo november direct methods estimation structure motion views gideon stein amnon shashua gideon ai mit edu shashua cs huji ac il publication retrieved anonymous ftp publications ai mit edu 
describe new direct method estimating structure motion image intensities multiple views 
extend direct methods views 
adding third view enables solve motion compute dense depth map scene directly image spatio temporal derivatives linear manner having find point correspondences compute optical flow 
describe advantages limitations method verified simulation experiments real images 
copyright fl massachusetts institute technology report describes research done artificial intelligence laboratory massachusetts institute technology 
support research provided part advanced research projects agency department defense office naval research contract 
supported darpa automatic target recognition project darpa match module project 
supported binational science foundation european acts project ac 
new method computing motion dense structure views 
method viewed extension direct methods horn views motion views motions 
methods dubbed direct methods require prior computation optical flow 
gradient methods assume small image motions order pixels 
applying constant brightness constraint trilinear tensor shashua werman results equation relating camera motion calibration parameters image gradients order 
get equation point image fixed number parameters results highly constrained set equations 
starting general uncalibrated model proceed hierarchy reduced models assuming calibrated cameras assuming higgins prazdny small motion model 
described section 
show solve simplified model motion parameters section 
method advantages optical flow methods feature methods 
combine information points image avoid aperture problem computation optical flow difficult 
need explicitly define feature points 
points little gradient simply contribute little squares estimation 
information points gradients 
advantages highlighted scene set vertical bars front set horizontal bars uniform background 
case optical flow methods fail straight bars aperture problem 
point feature methods fail intersections lines image detected features correspond real features space 
natural scenes tree branches man objects window frames lamp posts fences give rise problems 
section describes implementation details needed method 
sections show results applying method simulated real images 
method shown produce useful results camera motion depth estimation 
section discusses open questions suggests possible solutions 
previous direct methods pioneered horn 
single image pair equations unknowns number points image added constraint needed 
horn closed form solution assuming planar quadratic surface 
shows assuming pure translation model subset image points nonzero spatial derivative zero time derivative gives direction motion 
foe line perpendicular gradient points 
subset points throwing away information image 
heel uses multiple images image sequence 
employs kalman filters build structure model image pair core computation fundamentally single image pair computation 
shashua hanna 
describe results implementing ideas practice 
course implementation various subtleties limitations discovered 
mathematical background notations pin hole camera model homogeneous coordinates represented theta camera matrix producing relation ax varies space varies image plane denotes equality scale 
relative camera positioning recovered image measurements camera matrix camera represented 
pair views ax left theta minor stands projective transformation chosen plane infinity fourth column stands epipole projection center camera image plane camera 
particular calibrated setting projective transformation rotational component camera motion epipole translational component camera motion 
occasionally tensorial notations briefly described 
summation convention point object coordinates specified superscripts 
called contravariant vectors 
element dual space representing hyperplanes lines called covariant vector represented subscripts 
indices repeated covariant contravariant forms summed known contraction 
example represent coincident point line 
vectors called valence tensors 
valence tensors matrices indices transformation represent depends covariant contravariant positioning indices 
example mapping points points hyperplanes hyperplanes matrix form ap ij maps points hyperplanes ij maps hyperplanes points 
viewed matrix row column positions determined accordingly ji index runs columns runs rows ki ba matrix form 
outer product valence tensors vectors valence tensor entries note matrix form ba matching image points views denoted coordinates referred alternatively non homogeneous image coordinates 
stratification direct motion models views ax bx known produce trilinear forms coefficients arranged tensor representing bilinear function camera matrices ff jk gamma theta left minor fourth column 
tensor acts triplet matching points way ae ff jk lines intersecting ae lines intersecting free indices ae range trilinear equations unique linear combinations 
details 
geometrically trilinear matching constraint produced contracting tensor point image line coincident image line coincident image 
particular may tangent iso brightness contour respectively 
words recover principle camera matrices views context aperture problem noticed 
alternatively represent tangent corresponding iso brightness contours instantaneous spatio temporal derivatives shown get constraint equation involving unknowns ff jk spatio temporal derivatives pixel constraint linear unknowns 
constraint introduced name tensor brightness constraint 
briefly derived 
describe line particular line linear combination vertical gammax horizontal gammay lines 
coefficients linear combination components image gradient image line form gammax gamma contribution removed constant brightness equation due gamma gamma discrete temporal derivative gammai image intensity values second images respectively 
substitution obtain gamma xi gamma yi likewise tangent iso brightness contour gamma xi gamma yi temporal derivative images 
tensor brightness constraint ff jk equation point image computed image gradients projective image coordinates point image 
wish solve ff jk combines motion camera parameters starting general model parameter model constraint equation introduce hierarchy reduced models follows 
enforcing small angle rotation camera motions angular velocity vectors delta skew symmetric matrix vector products tensor brightness constraint reduced parameter model matrix form looks gamma gamma theta gammai gamma xi gamma yi gamma gamma xi gamma yi xi gamma yi theta gammai gamma xi gamma yi gamma gamma xi gamma yi xi gamma yi addition enforce infinitesimal translational motion higgins prazdny motion model results image motion equations gamma xt gamma gamma xy gamma yt gamma xy simpler form gamma yi gammai gamma xi yi xi yi xi gamma yi obtain parameter model form gamma gamma equation point image 
set bilinear equations unknowns solving camera motions described solve dense depth map equations ks ks denotes inverse depth pixel location 
equations obtained substituting eq 
equation rearranging terms 
see details 
solving bilinear equation pure translation case pure translation case equation gamma equation image point write matrix form gamma delta theta matrix th row corresponding th pixel wish avoid trivial solution add constraint ktk 
squares problem maps problem finding ktk minimizes solution eigenvector corresponding smallest eigenvalue 
general small motion case general case confronted bilinear equation 
standard way solve bilinear problems chosen treat translation parameters outer product terms gamma intermediate parameters 
independent act solved section theta matrix recovering intermediate parameters compute gamma computed translation 
general idea simple 
consider theta matrix note columns independent 
lemma matrix rank 
proof th th th elements row add zero 
delta delta theta vector null space correct solution vector null space null space rank rank 
matrix theory rank 
suppose vector null space theta 
vectors span null space desired solution vector linear combination ffc order find ff apply constraint 
choose enforce constraint matrix gamma rank 
clearly choice ff affect elements vector arrange elements corresponding theta matrices looking ff rank gamma ffc case identity matrix solution ff eigenvalues choose smallest absolute value 
vector eigenvector corresponding second smallest eigenvalue matrix 
vector corresponds smallest 
previous arguments algorithm finding motion parameters follows 
compute theta matrix equation 

find eigenvector corresponding second smallest eigenvalue matrix 
elements translations 
arrange elements theta matrix 
construct rank matrix gamma ffi 
solve gamma step 
singular case method fails motions opposite directions 
obvious pure translation case 
second translation vector proportional translation vector equation simply scaled version equation adding new information 
current research way overcome problem section initial results look promising 
implementation details iterative refinement coarse fine processing constant brightness constraint linearized form sum square difference ssd criteria 
linear solution thought single iteration newton method applied problem 
iterative refinement performed follows calculates motion depth equations 
depth motion images warped image 
correction depth motion computed warped images 
ideal case final result warped images appear nearly identical image 
careful 
iteration compute correction motion trying compute small values ffi point equations badly conditioned highly affected noise 
idea devise iterations way computing gradually improving estimate translation incremental improvements temporal derivatives closer closer images 
psi psi psi image 
assume previous iteration 
image motions computed equation 
warp images psi psi psi psi warping images satisfy brightness constraint equation du dv du dv temporal derivatives pixel psi gamma psi psi gamma psi du dv unknown differences computed image motions real image motions du gamma dv gamma ff written ff ks substituting equations equation get gamma ff gamma ff substituting equation equation get modified versions equations ks gamma ff ks gamma ff start iteration zero ff 
order deal image motions larger pixel gaussian pyramid coarse fine processing 
computing depth smoothing interpolation 
recovering camera motions equations give way computing depth point non zero 
order combine information images interpolate areas image gradients small chose interpolation scheme called local weighted regression 
method chosen simple implement replaced methods rbf splines thin plate interpolation 
texture image simulated depth map simulation experiments 
equation shows cost function compute depth point min arg fi js ks sum region motions 
windowing function fi allows increase weight closer points 
function created convolving box filters 
crude approximation gaussian 
js term reduces weight points small gradient gradient perpendicular camera motion cases highly affected noise 

size region depends amount smoothing interpolation required 
iteration process region theta theta 
order get results iteration replaced locally constant depth model locally planar model increased region support theta 
simulation test method took theta texture image fig 
defined depth point image equation sin sin depth map shown 
warped motions equation 
original image warped images input algorithm computed motion depth 
motion chosen image motion pixels 
image warped translation rotation 
second image warped rotation translation 
rotation translation chosen combined reduce motion 
focal length 
levels coarse fine processing iterations level 
shows reconstructed depth map finest level 
shows rendering surface local constant depth fit local planar fit respectively 
apart outliers edges surface qualitatively correct 
table shows motion depth map local constant fit 
local constant fit 
local planar fit 
estimated inverse depth simulation 
table estimated camera motion simulation experiments translation real estimate foe foe inf rotation real estimate table image coordinates example points images image image image head cork resulting motion estimates 
results shown theta region depth estimation 
varying size region theta theta effect motion estimation 
experiments real images experimental procedure images taken phillips inch ccd video camera mm lens 
image capture performed sgi indy built frame grabber theta pixel resolution 
shows images experiment 
depth image ranged mm mm 
camera mounted lightweight tripod 
image camera lowered mm second image taken 
tripod moved millimeters right third image 
special care taken ensure precise motion 
image motions gamma pixels 
table shows measured image coordinates points images head cork panel image left 
results results shown case images processed levels coarse fine processing iterations level 
varying number iterations qualitative impact single iteration caused small change resulting motion estimates 
theta region local constant depth fit levels 
table shows estimated camera motions 
shows motion axis second motion axis cases rotation negligible 
qualitatively correct 
accurate ground truth estimates 
shows recovered depth map fact shows 
shows rendering surface 
values scaled 
rendering uses orthographic projection 
order get smoother visually table motion estimates real images 
foe foe pleasing results local planar fit final stage theta region support 
results shown figures 
noticeable smoothing overshoots depth discontinuities tip nose 
texture removed clarity 
discussion new method recovering structure motion views 
method require feature correspondence optical flow 
shown simulation experiments real images method qualitatively recover depth motion general small motion case 
results promising experiments needed test accuracy motion estimation 
occlusions pose significant problem motion estimation take small part total image area 
depth estimates obtained occlusion boundary inaccurate 
general obtain depth estimate gradient 
order get dense depth map perform form interpolation 
local constant linear fit superficially similar smoothness assumptions employed optical flow techniques overcome aperture problem 
benefit details techniques adaptive window size 
main difference smoothness affect motion estimation cosmetic reasons optical flow methods smoothness assumption key process 
difference smoothing depth image sense assume local planar quadratic model 
application dependent 
important theoretical questions left open 
involves solving bilinear equation 
chosen enforce rank constraint matrix gamma possible constraints 
furthermore matrix rank subtracting ffi ff eigenvalue closest zero 
eigenvalues 
practical side best solve equation nonlinear optimization problem linear solution initial guess 
second open problem deals current limitation motions collinear shown section singular case 
hand limitation exists discrete case 
question general phenomena resulting constant brightness equation specific lh model 
avenues proceed 
go back input images estimated inverse depth map rendering surface scaled 
uses theta region local constant depth model 
rendering estimated surface inverse depth scaled 
uses theta region locally planar depth model 
note overshoot depth discontinuities head 
complex motion models described section parameter model full parameter tensor brightness constraint equation 
alternatively look constant brightness equation 
implementation calculate image 
vector image pairs 
derivatives computed image image equations give independent equations collinear motion case 
acknowledgments left blank blind review 
avidan shashua novel view synthesis tensor space published siggraph 
bergen anandan hanna hingorani hierarchical model motion estimation proceedings santa margherita ligure italy june burt adelson laplacian pyramid compact image code ieee transactions communications hartley linear method reconstruction lines points proceedings iccv cambridge ma june heel direct estimation structure motion multiple frames ai memo march horn determining optical flow artificial intelligence horn direct methods recovering motion ijcv analog vlsi chip estimating focus expansion higgins prazdny interpretation moving retinal image 
proceedings royal society london lucas kanade iterative image registration technique application stereo vision proceedings ijcai vancouver horn direct passive navigation 
ieee transactions pattern analysis machine intelligence shashua algebraic functions recognition ieee transactions pattern analysis machine intelligence 
shashua anandan trilinear constraints revisited generalized trilinear constraints tensor brightness constraint proceedings arpa image understanding workshop february palm springs ca 
shashua hanna tensor brightness constraints direct estimation motion revisited technion technical report haifa israel november shashua werman perspective views associated tensor proceedings iccv boston ma usa june aloimonos unified theory structure motion proceedings image understanding workshop 
wang adelson representing moving images layers 
ieee transactions image processing special issue image sequence compression september 
