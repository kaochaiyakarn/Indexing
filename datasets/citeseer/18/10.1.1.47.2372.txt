key establishment large dynamic groups way function trees david alan sherman cryptographic technologies group tis labs network associates maryland email tis com may analyze new algorithm establishing shared cryptographic keys large dynamically changing groups 
algorithm novel application way function trees 
comparison previously published methods algorithm achieves new minimum number bits need broadcast members order re key member added evicted 
number keys stored group members number keys broadcast group new members added evicted computational efforts group members logarithmic number group members 
algorithm provides complete forward backwards security newly admitted group members read previous messages evicted members read messages collusion arbitrarily evicted members 
algorithm offers new scalable method establishing group session keys secure large group applications electronic conferences multicast sessions military command control 
keywords 
conference keying cryptography cryptographic protocols key agreement key establishments way functions way function trees secure conferences secure group applications 
support research provided defense advanced research projects agency contract 
leave department computer science electrical engineering university maryland baltimore county umbc 
efficiently managing cryptographic keys large dynamically changing groups difficult problem 
time member evicted group group key change may required change new members added 
members group able compute new key efficiently arbitrary coalitions evicted members able obtain 
communication costs considered 
real time applications secure audio visual broadcasts pay tv secure conferencing military command control need fast re keying changes group membership disruptive 
deal large group sizes members seek solutions re keying operations scale sense time space broadcast requirements method grow logarithmically group size 
key management applications able take advantage efficient broadcast channels radio broadcast internet multicast 
analyze new practical algorithm establishing shared keys large dynamic groups 
algorithm novel application way function trees scales logarithmically group size 
comparison previously published methods algorithm achieves new low required broadcast size 
rest organized sections 
section briefly reviews previous approaches group key establishment 
section describes proposed method sections respectively analyze security performance 
section discusses extensions basic method manage subgroups 
section gives implementation notes section summarizes 
previous variety solutions proposed including methods simple key distribution center information theoretic approaches group diffie hellman gdh hybrid approaches trade information theoretic security storage requirements logical key hierarchy lkh 
simplest solution group manager shares secret key group member sequentially uses member key communicate secret group key member 
time member added evicted group members group manager perform encryptions transmit keys 
information theoretic approaches satisfy memory lower bounds blundo storage exponential group size 
previously published hybrid approaches achieve perfect forward secrecy scale linearly group size 
gdh approaches including burmester desmedt steiner require linear number public key operations slow software relative encryption way function operations 
lkh method achieves logarithmic broadcast size storage computational cost 
hierarchy keys created group member secretly keys bottom hierarchy 
interior key encrypted children keys ciphertexts broadcast group 
member decrypt keys path leaf root root key group key 
interior keys associated logical physical security domains 
system allows group re key addition eviction broadcast lg keys 
way function trees new group keying method uses way functions compute tree keys call way function tree oft algorithm 
keys computed tree leaves root approach reduces re keying broadcasts lg keys example key tree 
member leaf labeled knows keys black nodes including root key group key blinded keys grey nodes 
believe bottom way function trees group keying novel idea way functions tree structure new 
merkle proposed authentication method trees 
fiat naor way function top fashion group keying method purpose reducing storage requirements information theoretic group key management 
group manager maintains binary tree node associated cryptographic keys node key blinded node key 
blinded node key computed node key way function blinded sense computationally limited adversary know find manager uses symmetric encryption function communicate securely subsets group members 
structure oft interior nodes tree exactly leaves 
leaf tree associated group member 
manager assigns randomly chosen key member securely communicates key member external secure channel sets node key member leaf member key 
interior node keys defined rule left right left right denote left right children node function way function mixing function 
properties discussed detail section 
node key associated root tree group key group communicate privacy authentication 
security system depends fact member knowledge current state key tree limited invariant system invariant 
member knows node keys path node root blinded node keys siblings path root blinded keys 
fact maintained operations add members delete members group 
example oft shown illustrates group member knows 
group member maintains key leaf associated list blinded node keys siblings nodes path node root 
enables compute keys path root including root key stores 
blinded node keys changes told new value recompute keys path find new group key 
security group key results primarily mixing function addition way function blind internal node keys gains important functionality internal node key communications subgroup key subgroup descendent members 
functionality important efficiency add evict operations 
adding evicting member operations adding evicting members rely communication new blinded key values manager members node key associated leaf changed 
blinded node key communicated appropriate subset members maintain security 
blinded key changes new value communicated members store 
members associated descendants sibling know node key manager encrypts broadcasting group providing new value blinded key appropriate set members keeping members 
new member joins group existing leaf node split member associated associated left new member associated right 
members new keys 
old member gets new key sibling member knows old blinded node key information collusion group member find key path root 
new values blinded node keys changed broadcast securely appropriate subgroups described 
number blinded keys broadcast group equal distance root plus 
addition new member set blinded node keys unicast transmission external secure channel 
order keep height tree low possible leaf closest root split new member added 
member associated node evicted group member assigned sibling reassigned parent new leaf key value 
sibling root subtree moving subtree closer root leaves subtree new key longer knows blinded key associated root subtree 
new values blinded node keys changed broadcast securely appropriate subgroups described 
number keys broadcast equal distance root 
multiple addition eviction broadcast size computational effort multiple additions evictions substantially reduced operation evicts adds multiple members 
operation relies communication new blinded node keys appropriate members leaf nodes change 
nodes blinded keys change tree ancestors changed leaves call tree common ancestor tree cat 
size tree number blinded node keys recomputed broadcast group 
algorithm propagating changes tree computing broadcast information post order traversal cat lowest level highest 
cat easily computed traversal 
security analysis evicted members information key tree compute directly node key 
importantly arbitrary coalitions evicted members directly compute node keys 
unpredictability oft group keys depends random selection manager leaf keys 
definition 
security oft method secure computationally infeasible adversary compute node key non negligible probability 
note adversary compute node key decrypt blinded node keys 
require node keys uncomputable protect group key 
member evicted keys path node root change 
system invariant described section knows blinded keys siblings path parent root 
blinded keys insufficient compute directly keys 
evicted member gain advantage colluding previous valid blinded key known previous eviction 
sibling valid blinded key know eviction changed eviction 
multiple members evicted simultaneously keys nodes cat change 
sum total knowledge key tree blinded keys nodes siblings nodes cat cat call nodes cat siblings 
evicted members know keys sibling nodes compute node keys compute group key directly 
security advantage oft manager selects leaf keys 
doing prevents enemy maliciously trying create collisions way function 
functions section define important properties functions simplicity assume commutative 
property 
encryption function secure ciphertext attacks 
set ciphertexts encryption unknown plaintext unknown key computationally infeasible find information plaintext non negligible probability 
property prevents attacker discovering blinded keys decrypting ciphertexts broadcast group 
necessary security system 
property 
function way computationally infeasible find non negligible probability 
property impossible find node key blinded key 
necessary security system 
property 
sequence gamma computationally infeasible find nonnegligible probability chosen random value max property impossible evicted member distance root max find node key 
conjecture sufficient security system 
system invariant member node evicted knows blinded keys sibling nodes path root label 
knowledge state key tree eviction second property insufficient violate security system 
property requires height key tree max property prevents complete set finding node keys collusion gains useful knowledge collusion 
multiple eviction arbitrary set members combined knowledge state key tree blinded keys cat siblings 
cryptanalytic problem colluding set multiply evicted members face difficult single sequence blinded keys extends leaf root 
discussion cryptanalytic challenge property similar problem guessing th iterate function chosen random 
construction time password system key protocol implements 
cryptosystems group key management method section rely similar construction 
sufficiently large construction weak 
iterated times construction bits security set possible outputs includes elements overwhelming probability 
construction appears secure tree construction half random inputs assuming balanced tree function evaluations iterated construction input 
fact suggests tree construction oft secure iterated construction mentioned 
theoretical implications choosing appropriate value max interesting open question 
conjecture property holds phi property holds max 
choice standard number iterations key protocol sufficient handle users 
computational transmission storage requirements section analyze compare time space communication requirements new oft method lkh methods 
tables summarize comparisons focusing measures broadcast size unicast size manager computation maximum member computations manager storage member storage 
methods objectively compared quantitative comparison criteria decision method best particular application depend requirements application 
rest section distill important differences methods revealed tables 
tables give complexities group initialization key establishment re keying tasks 
tasks independent final step carrying secure group communications established key 
terminology analysis assumes trees lkh oft binary broadcast sizes increase branching ratio trees binary trees minimize communication cost practical choice 
values neglect constant additive factors readability 
express values terms constants represent basic requirements size key bits 
ce respectively computational cost evaluation encryption function generating key cryptographically secure random source evaluation number members group lkh oft methods member notify members changes topology tree requirement reflected analysis 
number bits required specify node binary tree equal height tree 
performance lkh oft depends height key tree 
minimize new members added close root possible 
evictions occur resulting tree may unbalanced height may greater lg rebalancing operation performed restructure tree height greater lg 
results broadcast size re key addition eviction keys hk bits lkh hk oft 
oft achieves smaller broadcast lkh bottom approach 
extra factor lkh comes fact separate encryptions needed internal node children 
lkh oft term specify node added evicted 
oft security timing analysis flows invariant properties preserved oft operation 
particular compute group key member needs know key blinded ancestral sibling keys 
eviction evicted slot pruned leaf node resulting path changed 
changes propagate tree 
broadcast keys required update members depended blinded node keys changed 
needs broadcast changed blinded keys evicted party knew useless 
oft add situation similar slightly different 
add new member expand leaf node announce addition give new member key interesting steps evict new member key propagates tree need broadcast depends information new blinded ancestor keys 
evict unicast new member blinded ancestral sibling keys needs know 
factor savings broadcast add evict add evict requires additional keys unicast 
broadcast size initialize lkh oft require twice size broadcast key binary tree leaves communicated 
storage requirements lkh oft members lg keys members exactly keys 
storage requirement lkh oft managers managers exactly 
advantage oft lkh oft requires significantly fewer random bits 
particular add member oft manager generate new random key 
contrast lkh manager generate new keys 
key generation performed software difference yield oft significant time advantage lkh practical applications entropy precious resource 
lkh oft distribute computational cost re keying group group manager burden comparable group member 
algorithms especially appropriate line system 
initializing group lkh oft broadcast size bits nk nk nk manager comp 
ce ce ce nc max 
member comp 
ce hce hce adding member lkh oft broadcast size bits nk lg hk hk unicast size hk manager comp 
nce ce ce max 
member comp 
ce hce ce adding members lkh oft broadcast size bits lh lh unicast size manager comp 
lc ce gamma ce gamma max 
old member comp 
ce hce ce evicting member lkh oft broadcast size bits nk lg hk hk manager comp 
nce ce ce max 
member comp 
ce hce ce evicting members lkh oft broadcast size bits gamma gamma lh lh manager comp 
gamma gamma cr ce cr max 
member comp 
ce hce ce table comparison maximum computational transmission requirements important group keying methods 
numbers approximate 
number members group height key tree size cat leaves change 
size key bits 
ce respectively computational cost evaluation encryption function generating key cryptographically secure random source evaluation lkh oft manager storage nk nk nk member storage hk hk table storage requirements group manager group members important group keying methods 
keys broadcast leaves changed re initialize time worst case multi change average case multi change best case multi change number keys broadcast oft method re key addition eviction function number changing leaves group members balanced tree 
graph drawn log log scale data legible 
multi change refers multiple eviction addition 
multiple addition eviction set eviction set addition operations broadcast size computational effort depend size cat 
upper lower bounds size cat leaf nodes computed allowing bounds put broadcast size computational effort 
minimum value occurs cat size gamma subtree lowest level attached root length blog path 
maximum value occurs cat size gamma subtree paths length blog leaves downward 
size satisfies gamma blog gamma powers bounds slightly tight general case 
leaves selected random set highly clustered 
minimum value attained changing leaves adjacent reason expect average value closer maximum 
shows maximum average minimum values function expected average value close maximum value smaller 
cat size set addition operation come close achieving lower bound group manager choose locations new members adjacent 
set add set evict operations broadcasts communicate changes topology cat 
members know current topology tree information completely specified list leaves changing 
leaves change group members identities leaves specified blog nc bits 
alternatively broadcast message identify blinded key node 
composing groups groups unnecessary assumption members group individuals group may composed individuals subgroups 
subgroup added group node key tree split assigned right child node 
group manager communicates leaf key node encrypted group key ka words oft secure external channel mentioned section communicate 
unions intersections new groups union intersections subgroups created subgroups retain identities subgroups sub group keys 
create group key group create new key tree leaves give encrypted group key kg give encrypted group key kh group key kg 
set intersection operation assigns subgroup node give blinded node key sibling node 
create group key group define key kg give encrypted group key kg give encrypted group key kh members compute kg membership changes kg changes kg kg change 
importantly key management method allows efficient re keying composite groups composite tree balanced re keying require broadcast logarithmic size total group 
simple rules groups created arbitrary unions intersections subgroups 
facilitates group management providing efficient means composing groups terms groups 
implementation notes implementation oft method straightforward important engineering decisions 
decisions choice representation tree time space tradeoffs member involving store ancestor keys format broadcasts manager 
believe function cryptographic hash function md sha 
possible root key need large output size underlying function 
example md sixteen byte output des keys bytes long 
case md output reduced discarding data done key node keys broadcasts smaller 
function need way needs mix inputs 
fact suggests phi choice 
group key oft computed composition way functions way permutations coalescing effective entropy 
important size parameters appropriately achieve desired effective entropy 
full system support variety additional operations 
example allow members leave group temporarily losing security privileges 
allow newly added member able read limited amount previous group communications 
suggest functionality effected separate key repository mechanism independent key establishment algorithm 
analyzed new practical hierarchical algorithm establishing shared cryptographic keys large dynamically changing groups 
algorithm novel application way function trees 
previously proposed solutions information theory public key cryptography hybrid approaches single key distribution center oft algorithm communication computation storage requirements scale logarithmically group size add evict operation 
aforementioned approaches scale linearly worse 
comparison proposed hierarchical method logical key hierarchy lkh oft algorithm reduces half number bits broadcast manager add evict operation user time space requirements oft lkh roughly comparable 
applications including multicasts minimizing broadcast size especially important 
security analysis oft raises interesting questions security function iterates bottom way function trees 
oft algorithm offers practical approach low broadcast size manage demanding key establishment requirements secure applications large dynamic groups 
acknowledgments acknowledge contributions colleagues trusted information systems 
grateful michael harding significant contributions original algorithm discussing implementation strategies 
dennis principal investigator dynamic cryptographic context management project suggested problem provided constructive recommendations technical guidance 
jay turner helpful comments sharon osuna caroline editorial suggestions 
blundo carlo alfred de santis amir herzberg kutten ugo vaccaro moti yung advances cryptology proceedings crypto ed lncs springer verlag 
burmester mike desmedt secure efficient conference key distribution system advances cryptology proceedings eurocrypt de santis ed lncs springer verlag 
fiat amos moni naor broadcast encryption advances cryptology proceedings crypto stinson ed lncs springer verlag 
flajolet philippe andrew odlyzko random mapping statistics advances cryptology eurocrypt proceedings quisquater vandewalle eds lncs springer verlag 
haller neil key time password system proceedings internet society symposium network distributed system security internet society 
hugh carl thomas rivers group key management protocol architecture request comments rfc internet engineering task force march 
lamport leslie password authentication insecure communication communications acm vol 
november 
menezes alfred paul van oorschot scott vanstone handbook applied cryptography crc press boca raton 
merkle secrecy authentication public key cryptosystems technical report information systems laboratory stanford university palo alto ca 
fips publication secure hash standard nist department commerce washington 
april 
rivest ronald md message digest algorithm request comments rfc 
steiner michael gene tsudik michael waidner diffie hellman key distribution extended group communication proceedings rd acm conference computer communications security march 
pages 
steiner tsudik waidner cliques new approach group key agreement ibm research report rz december 
pages 
wallner eric harder ryan key management multicast issues architectures internet draft progress internet engineering task force july 
pages 
wong chung kei mohammed gouda simon lam secure group communications key graphs technical report tr dept computer science univ texas austin july 
pages 
appendix pseudocode oft algorithms algorithm 
manager input oft new member action modify broadcast blinded ancestor sibling keys members member split assign assign broadcast add unicast note receipt broadcast member recomputes shared group key recomputing storing changed blinded ancestors 
algorithm 
manager input oft member action modify broadcast new blinded keys members leaf parent sibling leaf assign member endif member broadcast evict algorithm 
manager input oft list members evict action modify broadcast new blinded keys members broadcast 
