explanation similarity unifying approach integrating domain knowledge case reasoning diagnosis planning tasks ralph bergmann gerd wolfgang wilke university kaiserslautern dept computer science box kaiserslautern germany mail informatik uni kl de 
case problem solving significantly improved applying domain knowledge opposition problem solving knowledge acquired reasonable effort derive explanations correctness case 
explanations constructed levels abstraction employed basis similarity assessment adaptation solution refinement 
general approach explanation similarity applied different real world problem solving tasks diagnosis planning technical areas 
presents general idea specific completely implemented realizations diagnosis planning task 
motivation underlying principle case reasoning idea remember solutions known problems reuse novel problem solving 
case similar current problem retrieved case base solution modified solution current problem kolodner althoff benefits case reasoning reduce need acquire explicitly represent general knowledge problem domain overcome knowledge acquisition bottleneck feigenbaum avoid acquisition explicit domain knowledge similarity cases assessed numeric computation selected surface features problem description 
knowledge problem similarity implicitly encoded formula defines similarity measure 
attention paid case adaptation requires large amount knowledge 
want argue knowledge acquired reasonable effort similarity assessments solution adaptation 
additional knowledge required planning diagnosis tasks order achieve powerful domain tailored case problem solvers 
current experience knowledge acquisition traditional knowledge systems distinguish different types knowledge newell domain knowledge problem solving knowledge wielinga problem solving knowledge describes process problem solving terms steps basic inferences subtasks kads executed efficiently derive solution 
hand domain knowledge consists descriptions elements available construct problem solution knowledge interaction elements solution problem 
consequently domain knowledge sufficient determine proposed solution really solves problem 
easier acquire problem solving knowledge especially technical domains 
domains systems machines constructed human engineers known functioning interaction components system consists 
blueprints generally document design product consequently appropriate information source knowledge acquisition 
want assume domain knowledge sufficient derive explanation case acquired formalized 
levels abstraction explanation show correctness solution problem 
explanatory information similarity cases assessed adaptation process focused relevant portions solution 
rest describe approach detail show application diagnosis faults technical machines production planning mechanical engineering 
section demonstrates explanations built represented similarity assessed 
section approach solution adaptation refinement demonstrated results 
final sections discuss related summarize characteristics proposed approach 
explanation similarity diagnosis planning core idea approach domain knowledge acquired easy set similarity assessment adaptation profound basis founded explanation case 
explanation describe solution derived require problem solving knowledge solutions solves problem proof correctness solution 
really important keep distinction mind approach different derivational analogy carbonell veloso carbonell hand domain knowledge employ explaining case stronger just causal relations approaches mark explanations strong domain knowledge easily derived automatically need constructed case methods example kass leake similarity cases judged similarity explanations 
purpose relevant domain knowledge modeled levels abstraction 
modeling allow switch different levels transforming representational terms level 
explanation lower level abstraction detailed consequently composed larger number specific rules facts explanation higher level abstraction 
explanations cases differ lower level abstraction may identical higher level 
observation leads rating similarity explanations lower level abstraction explanations identical higher assessment similarity 
representation explanations similarity assessment single level explanations 
diagnosis planning explanation isolated level abstraction represented graph structure see fig 
different kinds labeled nodes rule nodes fact nodes 
rule explanation represented rule node labeled name rule 
fact nodes represent case specific facts explanation problem description derived rule 
fact nodes rule nodes linked directed edges 
incoming edges rule node starting fact node reflect premises rule outgoing edges leading fact nodes stand 
problem solution explained usually represented set initial fact nodes set final fact nodes 
initial fact nodes starting point explanation graph derived rules 
final fact nodes points graph premise rule node 
solution explained directly linked rules explanation 
case explanations easily constructed starting initial fact nodes applying rules indicated solution 
final fact nodes problem reached solution called correct respective explanation 
note explanation proof correctness solution 
identity explanations 
single level explanations called identical graphs identical labeling fact nodes vary 
corresponding rule nodes labeled rule name 
instantiations rules part labeling rule nodes consequently different identical explanations 
multi level explanations 
introduced explanations constructed levels abstraction 
consecutive levels explanation graphs linked different kinds abstraction mappings 
fact abstraction fact fact fact rule fact rule fact fact level fact rule fact fact abstraction rule abstraction level initial facts final facts fig 

multi level explanation structure relates level fact nodes single fact node level 
required knowledge different possibilities fact abstractions assumed part available domain knowledge 
second kind abstraction called rule abstraction occurs subgraph containing rule fact nodes mapped single rule node higher level 
usually different abstractions focusing different aspects case indicated domain knowledge 
similarity explanations 
similarity complete multi level explanations determined level abstraction single level explanations identical 
higher level abstraction respective explanations identical lower similarity rating 
similarity complete case problem 
definition explanation similarity far requires complete explanations cases compared 
similarity assessment case reasoning process complete case case base compared current problem description 
explanation problem available problem solved 
enable explanation similarity assessment single level explanations case case base attempted mapped current problem description 
mapping achieved different ways 
starting initial facts problem description relevant rules re applied structure explanation explained case indicates 
rules original explanation applied final facts problem description reached mapping successful abstraction level 
alternatively single level explanation structure compiled traditional explanation learning mitchell set sufficient conditions initial final facts 
compiled generalization instantiated current problem hand 
details topic bergmann procedure similarity assessment complete case problem starts attempt map explanations highest level abstraction 
mapping successful process proceeds concrete level 
lowest level explanations mapped indicates degree similarity case current problem 
example technical diagnosis system general idea applied diagnosis technical systems 
model case adaptation system wess existing fully implemented realization approach diagnosis cnc machine consists components attributes 
goal diagnostic problem solving identify faulty component called diagnosis system shows unintended behavior 
partially unintended system behavior usually described set symptoms 
complete case consists collection known symptoms problem description diagnosis solution sufficient explain observed symptoms 
diagnosis usually determined observed symptoms case 
order explain diagnosis domain knowledge correct functioning system components interaction system required 
complex components called compound components may composed sub components parts interact certain way achieve functioning 
reasons simplicity want assume component specified interface input output ports clearly distinguished 
modeling diagnostic domain knowledge 
rules model general behavior components 
precondition rule describes certain conditions input ports consequences specify respective components reaction assigning values output ports 
hierarchical part decomposition compound components lead natural description system behavior multiple levels abstraction 
behavior explained high level abstraction just rules describe compound component 
detailed level behavior explained behavior interaction sub components compound component consists 
way abstracting components provided hierarchical structure kinds components organized 
abstraction motor light bulb electrical machine see fig 

different thing electrical machine light bulb motor component hierarchy behavior description components light bulb voltage high light voltage low dark motor current high rotation fast current low rotation stationary electrical machine supply operate supply operate fig 

domain knowledge technical diagnosis rules associated motor light bulb describe specific behavior 
different behaviors abstracted general rule valid electrical machines 
example cases 
simple example technical domain shown fig 

generator supplies light bulb wire relay see case 
case want assume wire broken diagnosis 
consequence lamp stays dark generator supplies voltage relay closed 
symptoms assumed observed 
different case case appears situation motor light bulb considered 
want assume wire broken causes motor stand 
relay wire case relay wire case fig 

cases technical diagnostic domain explanation similarity 
explanation graph certain input output value represented fact node 
actual behavior device transforming input values output values represented rule node 
diagnosis indicated rule explanation structure describes unintended behavior rule broken wire 
example cases modeling leads explanation structures shown fig 

explanations case case turn identical lowest level abstraction different rules describe behavior motor bulb 
look explanation higher level behavior different components abstracted rule reflects doesn operate behavior electric machines 
explanations cases identical second level abstraction 
consider case diagnosis process involving mapping explained section level explanation case problem description case generator works relay closed bulb stays dark achieve mapping faulty component wire case related component wire 
situation see diagnosis adaptation completely achieved explanation mapping 
general closed switch stay dark broken electric bulb case relay dark stand closed switch broken motor case relay rotation stationary closed switch operate broken electrical machine component relay general operate level level wire wire wire fig 

explanation structures diagnostic cases mapped solution needs refined concrete diagnosis rules abstracted single rule 
kind refinement adaptation addressed section 
example planning paris system describe explanation similarity realized paris system plan abstraction refinement integrated system bergmann wilke planning goal problem solving derive sequence actions operators applied transforms initial state desired goal state 
initial state goal state constitute description planning problem operator sequence forms desired solution 
production planning example domain 
demonstrate application explanation similarity approach case planning example field production planning mechanical engineering adapted caplan system wess approach veloso carbonell goal generate process plan production rotationally symmetric workpiece lathe 
problem description may derived cad drawing contains complete specification especially geometry desired workpiece goal state specification piece raw material called mold produced initial state 
shows examples rotationally symmetric workpieces manufactured operator sequence case case operator sequence 
chuck 
raw cut 
groove 
chuck 
raw cut 
groove fig 

example cases production planning rotationally symmetric workpieces cylindrical mold 
produce piece case mold needs lathe 
may cover certain part workpiece area case parts piece remain accessible subsequent cutting operations 
second step production plan long cylindrical area removed raw cut mold 
area completely processed small area accessible manufactured groove operation 
operations executed mentioned order 
modeling planning knowledge 
domain knowledge required planning described operators available states manipulated 
planning operators usually represented strips manner fikes nilsson preconditions refer state descriptions effects describe state transition function 
operators domain modeled levels abstraction idea intensively investigated research hierarchical planning sacerdoti knoblock lowest level abstraction require description raw cut area 
operation 
operation applicable area 
accessible cutting tool area 
specifies part mold removed 
effect operation area 
removed additionally areas may accessible 
higher level abstraction operator cut range 
assumed ability remove material larger range entire right side workpiece step 
explanation similarity 
case fig 
corresponding level explanation structure depicted fig 

rule node structure reflects operation solution plan 
fact nodes represent states workpiece execution plan 
explanation level composed rules representing operation 
explanation fact abstraction rule abstraction occur simultaneously 
fact abstraction specifies example mold mold abstracted mold right 
rule abstraction hand aggregates raw cut groove operation relates cut operation 
want assess similarity case second problem case see explanation completely mapped new problem lowest level abstraction 
consider third problem grooves groove manufactured side workpiece 
turns explanation level mapped concrete level explanation mapped 
case similar second problem third problem 
mold mold mold chuck access access groove removed mold mold mold removed removed level fix left cut right left access right removed right mold right level mold right fact abstraction rule abstraction fig 

explanation structure case case adaptation refinement result explanation similarity assessment process assessment similarity adapted solution possibly high level abstraction 
goal subsequent adaptation refine solutions full solution original problem required level detail 
refinement achieved standard hierarchical search methods employ exactly knowledge utilized similarity assessment 
general search methods suitable solving complex problems 
solution available imposes strong constraints search space small sub problems refinement single step solved 
computational cost search strictly depends number abstraction levels bridged consequently degree similarity current problem case case base 
similarity low search space traversed large solution reasonable time 
situation seen strong indication new case added case base 
see explanation similarity assessment estimates adaptation costs 
refinement adaptation diagnosis case diagnosis refinement diagnosis means specializing known fault compound component fault sub components 
requires limited search model diagnosis techniques kashyap space sub components faulty compound component consists 
example recall fig 
consider new third case differs case wire complex compound component infrared sender receiver involved 
explanation mapping appropriate level abstraction come mapping broken wire compound component 
refinement adaptation planning case planning refinement adaptation means specializing operator solution plan sequence concrete operators 
planning task performed limited search space assumed tractable similarity high 
refinement process planning tasks usually complex diagnosis problems 
planning solution steps need consistently refined see bergmann diagnosis step solution component shows unintended behavior needs specialized 
reason empirically investigated computational complexity refinement process planning 
experimental setting 
case base complete cases described planning domain randomly generated 
case planning system fed run random selection cases second run available cases 
runs system prepared store explanations cases 
system solve problems described cases 
concrete level explanations available refinement adaptation required problem solution 
problem solving amount search time required refinement recorded problem 
additionally problem solving time required pure search method determined comparison 
results 
results experiment depicted fig 

average solution time plotted respect problem complexity solution length 
pure search methods diagram shows required solution time increases exponentially problem complexity 
problems require solution plan longer steps solved 
case approach required refinement time rises slower problems harder 
solutions length operators easily generated problems require operators solved anymore 
analyzed situation turned longer problems operators need refined sequence concrete operators 
subproblems large exponential nature search space comes fore 
seen indication finer differentiation modeling abstraction levels required 
solution time sec problem complexity solution length pure search cbr cases cbr cases fig 

empirical results planning search vs explanation similarity observation number cases train system big influence refinement time 
strong indication number known cases required achieve certain competence system drastically reduced domain knowledge case reasoning 
discussion currently approaches favor integration additional problem solving knowledge veloso carbonell simple causal relationships mark case problem solving aim integration different reasoning paradigms aamodt task specific manner 
want focus discussion related favors general knowledge explanations case reasoning 
protos creek 
protos bareiss creek aamodt general domain knowledge construct explanations basis similarity assessment 
approaches focus open domains aamodt weak domain theories available 
approach appropriate domains strong domain knowledge acquired technical domains 
derivational analogy 
derivational analogy carbonell veloso carbonell general problem solving knowledge case reasoning planning tasks 
approach requires strong model planning process learn cases solved system 
cases come human expert complex re solved prodigy planning component analogical reasoning 
explanation similarity hand explain problem solving process handle cases solved learning 
explanation learning abstraction 
relations lot explanation learning mitchell similar approach strong domain theory assumed explanation learning 
examples usually generalized independently generalizations indexed may lead utility problem minton additional source power explanation similarity approach comes ability explanations basis domain knowledge 
descriptions transformed completely new language 
abstraction knoblock focuses abstraction dropping parts description assumed relevant view 
explanation similarity allows integration general domain knowledge case reasoning process similarity assessment solution adaptation integrated fashion 
similarity assessed basis domain knowledge comparing mapping explanations levels abstraction 
shown similarity new problem case case base high refinement adaptation search feasible 
furthermore scope case employed increased depending amount domain knowledge entered system 
knowledge engineer applying method may decide enter cases case base spend additional domain knowledge elaborated levels abstraction achieve competence see holte 
general approach diagnosis planning task real world domains 
fully implemented systems accomplish approach performs case diagnosis task including described type solution adaptation cnc machine consists components 
paris domain independent implementation solving planning tasks 
system works example domain mechanical engineering 
authors want aamodt jaime carbonell manuela veloso reviewers michael richter members research group helpful discussions remarks earlier versions 
research partially funded commission european communities esprit contract project 
partners prime contractor france germany irish medical systems ireland university kaiserslautern germany 
aamodt aamodt 
knowledge intensive integrated approach problem solving sustained learning 
phd thesis university trondheim 
aamodt aamodt 
explanation driven retrieval reuse learning cases 
richter wess althoff maurer editors preprints european workshop case reasoning ewcbr volume ii pages 
university kaiserslautern germany 
althoff 
althoff stefan wess bartsch maurer voss 
welche fur systeme 
ki kunstliche intelligenz december 
bareiss ray bareiss 
exemplar knowledge acquisition unified approach concept representation classification learning 
academic press 
mark mark 
explanation indexing cases 
kolodner editor proceedings darpa workshop case reasoning pages san mateo california 
morgan kaufmann publishers bergmann bergmann 
knowledge acquisition generating skeletal plans 
strube th 
editors contemporary knowledge engineering cognition pages heidelberg 
springer 
bergmann bergmann 
integrating abstraction explanation learning multiple examples hierarchical clustering performance component planning 
plaza editor proceedings ecml workshop integrated learning architectures ila vienna austria 
kashyap kashyap 
generating fault hypotheses functional model machine fault diagnosis 
applied artificial intelligence 
carbonell carbonell 
derivational analogy theory reconstructive problem solving expertise 
michalski carbonell mitchell editors machine learning artificial intelligence approach volume chapter pages 
morgan kaufmann los altos ca 
feigenbaum feigenbaum 
fifth generation 
addison wesley reading ma 
fikes nilsson fikes nilsson 
strips new approach application theorem proving problem solving 
artificial intelligence 
holte holte 
commentary protos exemplar learning apprentice 
kodratoff michalski editors machine learning artificial intelligence approach volume chapter pages 
morgan kaufmann publishers 
wess 
goal driven similarity assessment 
ohlbach editor th german workshop artificial intelligence volume springer lecture notes ai 
kass leake alex kass david leake 
case reasoning applied constructing explanations 
janet kolodner editor proceedings casebased reasoning workshop pages san mateo california 
morgan kaufmann publishers 
knoblock knoblock 
learning abstraction hierarchies problem solving 
mit press editor proceedings eighth national conference artificial intelligence volume pages london 
mit press 
kolodner janet kolodner 
case reasoning 
morgan kaufmann 

reasoning evidence causal explanations 
kolodner editor proceedings darpa workshop case reasoning pages san mateo california 
morgan kaufmann publishers minton minton 
results concerning utility learning 
artifical intelligence 
mitchell mitchell keller kedar 
explanation generalization unifying view 
machine learning 
newell allen newell 
knowledge level 
artificial intelligence 
wess jurgen stefan wess 
und bei der 
editor age zum 
workshop und number der gmd pages 
wess wess 
combining model approaches case reasoning similarity assessment case adaptation applications 
richter wess althoff maurer editors preprints european workshop case reasoning ewcbr volume ii pages 
university kaiserslautern 
sacerdoti sacerdoti 
planning hierarchy abstraction spaces 
artificial intelligence 
veloso carbonell veloso carbonell 
scaling machine learning case study derivational analogy prodigy 
steven minton editor machine learning methods planning chapter pages 
morgan kaufmann 
wielinga wielinga schreiber akkermans 
unification knowledge modelling approaches 
proceedings th banff knowledge acquisition knowledge systems workshop 
wilke wilke 
entwurf und implementierung eines zum lernen von nach der pabs methode 
universitat kaiserslautern 
