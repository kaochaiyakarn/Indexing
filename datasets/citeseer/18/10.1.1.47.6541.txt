algebraic view structural induction claudio hermida bart jacobs propose uniform category theoretic account structural induction inductively defined data types 
account understanding inductively defined data types initial algebras certain kind endofunctors bicartesian distributive category regarding predicate logic fibration consider logical predicate lifting total category predicate inductive precisely carries algebra structure lifted endofunctor 
validity induction principle formulated requiring truth predicate functor initial algebras 
show fibration admits comprehension principle analogous set theory satisfies induction principle 
consider appropriate extensions formulation deal initiality induction arbitrary contexts stability property induction principle 

inductively defined data types understood categorically initial algebras polynomial endofunctors bicartesian distributive category cs jac 
category semantic category types functional programs modelled cpo set 
show initiality canonically endows data types induction principles reason 
induction property logic theory induction property logic theory categorically logic corresponds fibration written pis category predicates proofs types terms endowed appropriate structure intended model certain logical connectives quantifiers bicartesian distributive preserves structure 
possible lift functor endofunctor pred tp 
key point algebra tx predicate pp inductive meaning premise structural induction principle type structure precisely pred algebra structure pred px observation leads definition induction principle relative fibration preservation initial algebras truth predicate functor assigns object type constantly true predicate usual induction principle natural numbers set know valid initiality respect inductive subset fx determined inductive predicate wish prove 
argument depends crucially fact perform comprehension 
categorical terms comprehension 
fx amounts right adjoint law 
formulation induction show admits comprehension sense induction principle holds analogously situation set 
fact comprehension entails induction hinges fact adjunctions adjunctions associated categories algebras alg pred alg respectively assuming appropriate additional structure 
categorical property functoriality construction alg inserter sense kel 
see theorems 
important aspect consideration frequently ignored stability induction principle context weakening means able computer science department aarhus university dk denmark 
mail daimi aau dk 
author acknowledges funding ii esprit project 
cwi kruislaan sj amsterdam netherlands 
mail cwi nl reason induction data type type occurs data turn may subject certain hypotheses 
technically amounts requirement initiality algebras preserved addition indeterminates 
primary aim give technically precise categorical formulation logical principle structural induction 
formulation principle amenable purely algebraic manipulation 
relevant literature particularly ls pit 
emphasise points highlight differences understanding predicate logic fibration central 
provides appropriate level generality right technical framework 
particular relationship inductive predicates logical predicates best setting logical predicates type constructors adjoints arise uniformly intrinsic property adjunctions fibrations cf 

ii categorical framework takes explicit account proofs entailments predicates 
seen generalisation induction principles usual proof irrelevant setting type theoretic constructive 
see 
iii categorical reasoning essential get conceptually uniform formulations 
instance just inductive datatypes understood initial algebras endomorphism cat category small categories associated induction principles formulated terms distinguished initial algebras endomorphisms cat similarly stability data types associated induction principles context weakening means preservation initial algebras addition indeterminates cat amounts kind preservation fib category fibrations 
see 
background material fibrations jac pav 
indeterminates fibrations relevant discussed hj 
kel play purely technical role essential understand 
relegate relevant definitions properties appendix material essentially extension combined jac 
follow hj deals dual coinduction principle holds presence quotients mixed induction coinduction principle mixed variance type constructors cf 
pit 

setting section lay setting required formulation structural induction 
define kind endofunctors initial algebras understood inductively defined datatypes recall initial algebras may obtained suitable cocompleteness conditions 
basic properties fibrations required give categorical counterpart logic suitable describe structural induction including description logical products logical coproducts 

inductive data types bicartesian category cs jac consider inductive data types bicartesian category category finite products coproducts 
consider additional distributivity irrelevant consider stability preservation initial algebras weakening arbitrary contexts 
write unique morphism terminal object thetab oo product diagram omitting subscripts convenient 
dually write oo coproduct diagram 
clearly categories set cpo strict continuous functions bicartesian 

inductive data types bicartesian category specified endofunctors give signature type 
endofunctor write alg category objects called algebras pairs tx morphisms ffi ffi tf category inserter ins see definition 

definition 
distributive category finite set functor regarding discrete category 
tm set endofunctors ffl identity functor tm ffl constant functor 
written km tm ffl constants functors tm ffl tm theta 

thetat 
respectively 
operations product coproduct functor category cat 
ii inductive data type specification functor functor tm write tm specification refer simply polynomial functor 
iii model atm tm algebra 
iv initial model specification tm initial algebra 
set definition called parameter set role specify functor objects parameters data type specified 
examples clear 
see jac general type theoretic formulation data types distributive categories 
initial algebra functor need exist 
possible guarantee existence initial algebras suitable cocompleteness conditions shown ls initial algebra obtained colimit chain preserves colimits 
chain functor 
poset category natural numbers usual ordering 
initial algebra colimit chain unique morphism initial object 
set cpo preserves colimits chains polynomial functor categories initial model 

important observation due lambek cf 
ls instance initial algebra constr td constr isomorphism 
regard fixed point illustrated chain 
isomorphism constr provides constructors data type familiar examples illustrate 

examples 
bicartesian category 
natural numbers object consider polynomial functor tx parameter set 
algebra ta object carrier type morphisms initial model precisely natural numbers object lawvere sense see ls part 
set set natural numbers usual zero successor operations 
initiality means iterator produces unique morphism ffi ffi ffi set corresponds function defined primitive recursion 

write 
ii lists object jb consider polynomial functor tax thetax singleton parameter set fg algebra object morphisms theta initial model set precisely set list finite lists elements usual operations nil list empty list cons theta list list list returns list element appended head 
example lists shows role parameter functor specification data type type lists list parameterised type elements list 

logic bicartesian category bicartesian category model inductive datatypes want categorical formulation logic predicate logic types terms order consider induction principles 
proper categorical version predicate logic category embodied notion fibration 
refer jac pav exposition point view 
predicate logic corresponds fibration written category predicates proofs types terms precise internal language fibration vein cartesian closed category associated simply typed calculus internal language cf 
ls 
specifically fibration associated predicate logic internal language regarding simple type theory product coproduct types see jac object pp construed predicate indexed proposition type prop written emphasize dependency variable usually leave implicit 
morphism ph corresponds unique vertical morphism domain cartesian lifting predicate logic vertical morphism corresponds proof entailment predicate corresponding reindexing fibration corresponds substitution logic prop gamma 
prop 

usually omit proof term entailments reader bear mind approach truly constructive takes proofs account 

fibrations organized category fib objects fibrations morphisms commuting squares fflffl fflffl preserves cartesian morphisms 
morphisms cell pair natural transformations oe oe oe oe qoe 
fib sub category cat objects arbitrary functors morphisms commuting squares preservation properties 
analysis structural induction depends crucially relationship logical structure fibration categorical structure total category specifically want lift endofunctor belonging tm functors tm essentially expressible bicartesian structure need structure leads consider kind fibrations 
assume choice cartesian liftings assume fibration choice possible appeal axiom choice 

definition 
bicartesian fibration fibration bicartesian category bicartesian strictly preserves structure 


bicartesian fibration bicartesian object fib category fibrations described 
see details matters 

examples 
classical logic 
fibration corresponding classical order logic subobject fibration sub set cod set category sub set category subobjects objects pairs morphisms functions fibration simply forgets subsets 
cartesian liftings inverse images 
gamma bicartesian structure sub set described terms logical predicates 
ii admissible subsets 
related example fibration cpo cod cpo cpo category admissible subsets objects pairs cpo subset containing bottom element closed lub chains morphisms strict continuous functions respect subsets preceeding example 
category cpo bicartesian reflective subcategory fibred category sub set obtained classical logic fibration change base forgetful functor cpo set 
see details 

logical predicates order convey logical significance bicartesian structure recall finite products coproducts induced fibred ones ones base 

proposition 
ffl bicartesian category ffl fibred bicartesian category fibre bicartesian category reindexing functors preserve finite products coproducts ffl functors coproduct injections jb bicartesian category strictly preserves finite products coproducts 
proof 
objects pp py product theta thetaj product theta theta thetaj product fibre thetaj dually coproduct 



oo oo cocartesian lifting 
terminal initial objects obtained similarly 

internal language construction products reads follows prop prop logical product prop logical coproduct prop predicate defined cases 
expression coproducts relies presence equality predicate satisfying certain exactness conditions commonly satisfied see law 
additional structure fibration irrelevant arguments description emphasise logical significance coproduct relationship categorical structure pand logical predicates analysed 
example fibration sub set cod set satisfies hypothesis proposition 
fibred products coproducts intersection union respectively 
cocartesian liftings arbitrary morphisms lifting direct image 
induction principle inductive data types relative fibration 
set parameters functors polynomial functor tm induces polynomial functor pred fibred bicartesian structure formal definition pred proceeds induction construction tm instance jp tax theta induces pred thetay consider pred algebras initial models call pred logical predicate lifting tm get endomorphism cat pred fflffl fflffl tm bicartesian fibration fibred terminal object truth predicate functor fibred right adjoint fibred terminal object give notion provability logic predicate pp provable exists morphism fibre internal language cf 
amounts proof entailment usually omit left hand side sequent 

polynomial functor tm def consider logical predicate lifting functor write pred functor pred obtained 
endomorphism pred cat writing identity consider inserter ins pred cat write alg pred alg alg fibration obtained 
pred alg category pred algebras endofunctor pred agreement convention 
functor alg action 
pp px pq py ph furthermore adjunction adjunction alg alg alg pred alg theorem 
elementary terms functor alg alg pred alg acts follows 
pred 
ti fact terminal fibre functor alg pred alg alg right adjoint preserves initial algebras 
pred alg initial algebra may assume lies initial algebra alg 
position state main definition 

definition induction principle fibration 
bicartesian fibration tm polynomial functor parameter set functor fibration satisfies induction principle alg alg pred alg preserves initial algebras constr initial model alg constr initial pred model 
definition means object order give morphism sufficient endow pred algebra pred 
note predicate condition necessary morphism gives pred algebra pred td constr general case definition condition necessary assume image factorisation algebras set 
illustrate logical import definition polynomial functor natural numbers lists 
assume bicartesian structure obtained proposition 
internal language case includes logical connectives functors coproduct injections 
simplify presentation consider entailment relation internal language disregarding proof terms 
note predicates prop prop morphism 
corresponds adjunction morphism 
amounts entailment 

examples 
proposition 
polynomial functor tx corresponding pred polynomial functor pred jp initial model give pred algebra pred amounts give algebra induces morphism vertical morphism pred 
examine vertical morphism internal language corresponds sequent 

decomposed sequents 

turn correspond sequents corresponds usual induction principle natural numbers prove elements generated prove 
validity induction principle asserts existence uniqueness morphism desired proof previously mentioned validity image 
ii polynomial functor tax theta jb get polynomial functor pred thetay nil cons initial model jp note modulo isomorphism nil cons theta predicate corresponds predicate theta theta 
predicate determines predicates nil cons 
give vertical global element proof property lists amounts give morphism pred nil cons theta corresponds sequent theta 

thetap nil cons decomposed sequents simplified antecedent second sequent thetal 
get usual structural induction principle finite lists 

validity induction principle presence comprehension set show ordinary set theory logic admits comprehension induction principle valid 
important 


structure map constr td initial algebra constr isomorphism cf 
follows definition satisfies induction principle condition hold pred td isomorphism notice morphism instance cell ae pred 
tm condition ae isomorphism amounts requiring ffl initial object initial object terminal fibre terminal category 
ffl pair objects 

condition essentially means union images coproduct injections cover object note conditions satisfied instance ffl consider internal logic fibrations fibrations predicates subobjects base category coproduct injections monic 
ffl generally presence comprehension preserves coproducts right adjoint 
ffl consider logic relative stable factorisation system pav predicates interpreted equivalence classes formal monos 
assume condition satisfied 
recall jac definition comprehension fibration essentially law hyperdoctrines 

definition 
fibration fibred terminal object admits comprehension right adjoint object write fx pg value definition means morphism predicate jp provable iff image lies fx pg 
set comprehension usual operation 
fx clearly fibrations examples admit comprehension second case notice admissible subset cpo cpo 

theorem 
bicartesian fibration satisfies condition admits comprehension 
satisfies induction principle polynomial endofunctor proof 
condition give data satisfying hypothesis theorem 
conclude alg right adjoint alg preserves initial objects 
import theorem polynomial functor tm functor alg turns pred algebra predicate algebra extent predicate essential role comprehension plays showing validity induction principle set predicate natural numbers inductive initiality conclude inductive subset fn predicate provably true 

stability initial algebras weakening context far considered inductive data types associated induction principle terms initiality empty context instance initiality allows define functions endowing set algebra structure 
want method inductive data type occurs arbitrary context define addition add theta induction second argument 
requires initiality preserved move empty context context argument add 
operation called context weakening technically say initiality stable addition indeterminates indeterminate similar extension needed associated induction principle perform context weakening gamma 
gamma element may subject propositional hypothesis 
generally interested proving relative entailments absolute assertions instance may want prove add case induction parameters 
abstractly extensions instances phenomenon category finite products object terminal object global element consider object indeterminate element 
object equipped cell ff universal objects data 
endomorphism consider object algebras alg inserter identity similarly induces consider object alg induced morphism alg alg alg 
stability means alg preserves initial objects follows theorem stability guaranteed object functionally complete right adjoint 
spell detail categories fibrations subsections 
details indeterminates functional completeness hj 
refer str relevant definitions comonads associated morphisms kleisli objects category 
anyway concepts essential understand follows 

stability initial algebras distributive bicategory material subsection jac formulations proofs different 
just preliminary treatment stability induction principles 
bicartesian category object denotes universal bicartesian category global element type morphism universality means dimensional level bicartesian category functor preserving finite products coproducts morphism unique functor preserving finite products coproducts category characterised kleisli category comonad theta written distributive theta preserves finite coproducts 
logically think theory types terms parameter type terms form gamma interpretation obtained considering internal language kleisli category comonad theta functor lifts functor ffi ffi endowed appropriate additional structure 
technically structure exactly morphism comonads essentially requiring strong formulation leads misleading considerations 
specifically require natural transformation theta theta satisfying coherence conditions ffi fj thetai ffi theta ffi hid fj hid fj ffi object polynomial functor admits structure lifted 
definition 
distributive category polynomial endofunctor admits stable initial algebras admits initial algebra object functor alg alg alg preserves initial objects 
recall hj functionally complete object right adjoint 
bicartesian case precisely bi cartesian closed 
easy consequence theorem result 

proposition 
functionally complete distributive category equivalently bicartesian closed 
initial algebras stable 

stability initial algebras distributive fibration just require inductive data types stable addition indeterminates initial algebra property arbitrary context require analogous stability associated induction principles 
order express stability consider fibration logic associated parameters base total categories 


treatment indeterminates fibrations follow parallels categories subtle technical difference 
concepts previously defined universal properties cat considered variants fib equivalence isomorphism 
pseudo functorial nature fibrations allows existence cocompleteness properties required kleisli objects categorical versions previously mentioned 
strict categorical version apply restrict attention split fibrations splitting preserving morphisms 
bicartesian fibration object fibration indeterminate written hx hi pp universal fibration hx hi global element pp global element universality means bicartesian fibration morphism preserving finite products coproducts global elements pp 
hp unique isomorphism morphism hx hi preserving finite products coproducts oe ffi oe hp canonical comparison isomorphism fibration easy extend proposition distributive category base fibres functors satisfy beck chevalley condition frobenius reciprocity formulated law 
call distributive fibration 
case characterise hx hi kleisli fibration comonad thetap theta pp fib hj 
logically think fibration hx hi logic types propositions terms parameter type pp form gamma pp entailment relation allows additional hypothesis entailments form gamma pp theta assuming presence additional element type predicate type instance provably true 
elements represent additional data associated properties forming context working instance carrying inductive proof 
semantically interpretation hx hi obtained internal language kleisli fibration comonad thetap theta pp polynomial morphism pred considered induces endomorphism pred pp hx hi hx hi pred pp pred induced morphism alg pred alg pred pp alg endomorphism cat fibration alg fibration obtained inserter identity base category alg total alg 
formulate stability induction principle inductive data type 

definition 
polynomial functor distributive fibration satisfies stable induction principle alg alg pred alg preserves initial algebras jpj morphism alg pred alg pred pp alg preserves initial algebras base total categories 


definition equivalently expressed requiring fibration indeterminate hx hi satisfy induction principle induced morphism pred pp hx hi hx hi provided base category admits stable initial algebras 
logical sense want reason induction fibration hx hi indeterminate type pp satisfying hypothesis exactly formulation means 
analogy ordinary categories say fibration functionally complete jpj hx hi right adjoint fib 
holds instance admits models universal quantifiers implication model order logic 
apply theorem show 

theorem 
jp hx hi functionally complete distributive fibration satisfies induction principle polynomial endofunctor satisfies stable induction principle fibrations example functionally complete sub set cod set models cpo cod cpo functionally complete model 
formulation capture better kind example purely syntactic approach 
functional completeness logic level implicitly ls xii show validity induction natural numbers topos 

aim give precise account structural induction data types presenting relevant technical machinery 
pay account precise relationship logical predicates induction 
relationship elucidated sequel hj give account coinduction principles lines induction 
case equality predicate functor takes role fact functor preserves relevant structure instance reynolds identity extension lemma 
considerations extent approach cope order obtain induction principles recursive data types line domain theoretic account pit 
mention approach applied formulate induction principles data types equational constraints standard kind algebraic specification 
categorical aspects data types described jac 
briefly put data types described called distributive signatures sigma models correspond distributive functors sigma distributive category sigma classifying category associated signature 
logical predicate model distributive functor pred sigma cf 
induction stated requiring sigma initial models 
case admits comprehension 
furthermore jac parametrized specifications correspond morphisms oe sigma sigma semantically interpreted functor sending model sigma distributive left kan extension oe sigma sigma 
logical level expect similar action logical predicates suitable counterpart induction parametrized specifications 
preserves distributive left kan extensions presence comprehension 
generalisation pay categorical approach taken 
course topic requires investigation assess suitability applications program development 
development ideas account semantic features missing treatment notably partiality type dependency 
cs cockett spencer 
strong categorical datatypes proceedings category theory 
canadian mathematical society 
hermida 
fibrations logical predicates indeterminates 
phd thesis university edinburgh 
tech 
report ecs lfcs 
available aarhus univ daimi tech 
report pb 
hj hermida jacobs 
fibrations indeterminates contextual functional completeness polymorphic lambda calculi 
book abstracts category theory computer science september 
extended version appear mathematical structures computer science 
hj hermida jacobs 
induction coinduction subset types quotient types 
types workshop january 
jac jacobs 
categorical type theory 
phd thesis nijmegen 
jac jacobs 
parameters parameterization specification distributive categories 
fundamenta informaticae appear 
kel kelly 
elementary observations categorical limits 
bulletin australian mathematical society 
law lawvere 
equality hyperdoctrines comprehension scheme adjoint functor 
heller editor applications categorical algebra 
ams providence 
ls lehmann smyth 
algebraic specification data types synthetic approach 
math 
systems theory 
ls lambek scott 
higher order categorical logic volume cambridge studies advanced mathematics 
cambridge university press 
ma reynolds 
types abstraction parametric polymorphism 
brookes editor math 

prog 
lang 
sem volume lecture notes computer science pages 
springer verlag 
pav pavlovi 
predicates fibrations 
phd thesis university utrecht 
pav pavlovi 
maps relative factorisation system 
draft dept math 
stat mcgill university 
pit pitts 
relational properties recursively defined domains 
tech 
report tr cambridge computing laboratory 
str street 
formal theory monads 
journal pure applied algebra 
str street 
fibrations yoneda lemma category 
category seminar volume lecture notes mathematics 
springer verlag 
functoriality notion inserter category taken str kel 

definition inserter 
morphisms category inserter consists morphism ins cell fp gp universal data cell oe fh gh unique morphism ins ph oe pair data oe fh gh fk gk cell ff gff ffi oe ffi fff unique cell ff ff 
cat inserter pair functors category ins objects pairs fa ga object morphism morphisms gf ffi ffi ff order exhibit functoriality assignment 
ins need appropriate notions morphisms cells parallel morphisms 

definition 
category category delta objects pairs morphisms domain codomain displayed morphisms ae ffi ae bf ffi bg shown fflffl fflffl oo fflffl ae ffi oo cells ff fi ae ffi ae ffi cells ff fi satisfying fif ffi ae ae ffi ff ff ffi ffi ffi ffi fig identities composition inherited horizontal composition cells defined interchange law state desired functoriality 

proposition 
assignment 
ins extends functor ins delta proof 
ffl morphism ae ffi get morphism ins ins induced universality ins ap ins cell ffi ffi ffi aep ap cp shown ins ae ffi gamma gamma gamma gamma gamma gamma gamma gamma oeoe fflffl ffl cells ff fi ae ffi ae ffi get cell oe induced universality ins cell ffp ap satisfies ffb ffi ffip ffi ffi aep ffi ffi ffi ae ffi ffp definition cells delta interchange law 

recall adjunction category data gf ffl fg satisfying triangular laws fflf ffi fj ffi jg write data ffl say right adjoint equational nature adjunction category implies preserved functors just ordinary functors preserve isomorphisms 
easy corollary ins 

corollary 
adjunction delta induces adjunction corresponding 
notice adjunction delta ffl ffl ae ffi ae ffi consists adjunctions ffl ffl definition cells delta follows adjoint mate ae ffl ffi bae ffi inverse ae similarly adjoint mate ffi inverse ffi adjoint situation ae ffi isomorphisms 

theorem 
diagram fflffl fflffl ff ff isomorphism right adjoint ffl adjoint mate ff gamma gt ffl ffi ff gamma ffi tg gt induces morphism ins ins right adjoint morphism ins ins induced diagram 
proof 
induced morphisms arise applying functor ins proposition data construed morphisms delta morphisms adjoints delta result follows cor 

cat morphism ins ins corollary action ta 
fa fa fta fa ff fa ins ins action tb 
gb gb gb ff 
