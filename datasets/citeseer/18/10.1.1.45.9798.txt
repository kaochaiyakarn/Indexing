efficient retrieval similar time sequences time warping kee yi jagadish christos faloutsos october fast similarity searching large time sequence databases attracted lot research interest :10.1.1.40.4034:10.1.1.45.9405
euclidean distance variation metrics 
metrics lead efficient indexing feature extraction keeping dft coefficients subsequent fast spatial access methods points feature space 
examine popular field tested dissimilarity function time warping distance function permits local accelerations rate signals sequences 
function natural suitable applications matching voice audio medical signals indexing viewpoint presents major challenges lead natural features precluding spatial access methods quadratic len len length sequences involved 
show overcome problems propose modification called fastmap map sequences points trading tiny amount recall typically zero large gains speed 
provide fast linear test help discard quickly false alarms fastmap typically introduce 
ideas cascade proposed method consistently outperformed straightforward sequential scanning real synthetic datasets achieved time speed 
doctor watching looking pattern indicative problem 
computer watch readings cause alert take appropriate action pattern observed characteristic particular type heart failure 
database terms query response expected sequence approximately matches patterns database 
cs dept univ maryland college park md cs umd edu labs murray hill nj 
jag research att com research partially supported inst 
systems research univ maryland nsf 
eec iri iri 
applications approximate sequence matching abound financial time sequences find stocks move microsoft digital audio voice clips find clips sound person scientific databases find times past similar solar magnetic wind patterns ones today 
area speech recognition problem studied extensively called dynamic time warping 
virtually speech recognition systems speed slow portions speech samples matched 
standard techniques accomplish dynamic programming quadratic complexity proportional product lengths sequences matched 
ideas matching database context prove expensive 
fast matching technique ideally indexing technique purpose 
propose techniques 
technique fastmap 
idea distance measures map sequences points space build index structure 
technique propose defines new distance function uniformly underestimates original distance function 
function computed faster original distance filter help discard quickly non qualifying sequences 
rest organized follows 
section provides survey related works 
section lay basic framework define problem study 
section proposed techniques detail 
discuss combine techniques variants basic techniques 
section empirical results comparing performance techniques 
section concludes 
related works similarity matching time sequences attracted lot attention signal processing area specifically speech processing 
assumed small dataset tens phonemes concerned precision efficiency presence large datasets 
speed main focus database sequence matching 
examined euclidean distance suggest discrete fourier transform dft 
argued real signals need dft coefficients approximate 
proposed indexing mechanism called index takes coefficients regards point euclidean space possible readily available spatial access methods sams 
proposed method may allow false alarms removed post processing stage guarantees false dismissals 
method proposed matching sequences equal length 
generalized approach subsequence matching 
follow goldin kanellakis suggested normalize sequences allow differences level scale 
approaches assume euclidean distance underlying similarity measure 
agrawal introduce new distance function time sequences aiming capture intuitive notion sequences considered similar non overlapping time ordered pairs similar subsequences :10.1.1.40.4034
model allows amplitude sequences scaled suitable amount offset adjusted appropriately 
allows non matching gaps matching subsequences 
rafiei mendelzon extend previous proposing techniques handle moving average time scaling globally stretching shrinking time axis time warping 
develop domain independent framework defining queries terms similarity objects 
framework components pattern language transformation rule language query language 
framework tuned needs specific application domain time sequences molecules text strings images choice languages 
suggest new data model algebraic language sequences general 
propose sophisticated optimization technique mention similarity sequences query processing technique similarity 
topic articles tackled problem indexing local transformations allowed 
difficult problem dft methods 
exactly focus rest 
background assume sequences sampled time intervals samples real numbers hx theta deltat unknown real valued function denote sequence hx table gives list symbols rest 
consider metric family distance functions 
sequences hx hy distance defined formula jx gamma reduces manhattan city block distance popular euclidean distance 
time warping transformation sequence hx head denote rest denote hx want allow stuttering transformation sequence possibly penalty cost ffl stutter repeats shifts elements right 
non null sequences dynamic time warping distance defined follows 
symbol definition distance function base base distance function time warping distance lb distance function lower bound time sequence hi null time sequence th element xj length head element rest rest database size dimension euclidean space ffl tolerance range query table list symbols definition time warping distance sequences defined hi hi hi hi base head head min rest gamma stutter rest gamma stutter rest rest stutter hi denotes null sequence 
base distance functions defined previously primary concern city block distance 
note definition require sequences length 
case time warping distance allow stuttering needed cost 
defined recurrence time warping distance computed dynamic programming algorithm see appendix complexity xj theta yj 
see details variants basic algorithm 
shows time sequences time warping 
sequences mixtures similar harmonics sin sin sin sin respectively 
proposition satisfy triangle inequality 
proof counter example consider 
completes proof 
time warping input spectra input spectra second time warping input spectra warped illustration similar sequences time warping fact significant implication method indexing indexing technique assumes triangle inequality implicitly explicitly avoid producing false dismissals 
strict requirement spatial access methods methods distance metric vantage point trees avoid false dismissals 
method guarantees false dismissals sequential scanning prohibitive large collection long sequences quadratic nature algorithm 
resolve issue propose method trades tiny percentage false dismissals significant speed 
goal provide efficient retrieval technique keeping false dismissals possible 
proposed techniques suppose database containing time sequences arbitrary length user wants find sequences similar certain query sequence sequences ffl units time warping distance 
type query effectively range query 
straightforward way process query scan sequences compute scanned sequence select qualify 
simple slow ffl reads sequence database scales poorly ffl computes expensive time warping distance sequence database 
unique problem cost case matters computation cost second case 
consequently promising techniques address problems 
solve problems propose techniques 
ffl fastmap build index structure speed query processing 
technique may result false dismissals 
discuss reduce false dismissals 
ffl new distance function uniformly underestimate time warping distance 
approach guarantees false dismissals 
ffl combination techniques 
techniques independent combined pipelined manner 
subsequent sections describe precisely proposed techniques 
fastmap technique technique propose method called fastmap 
works follows objects distance function maps objects points gammad space original distances preserved 
parameter may user tuned better system performance application 
key idea pretend objects points unknown dimensional space try project points mutually orthogonal directions distance information 
objects mapped gammad points spatial access method organize search range queries 
fastmap linear number objects sequences 
takes time map query sequence gammad point time constant respect database size method see proposition fastmap may introduce false dismissals triangle inequality obeyed 
observed avoid false dismissals square root original distances 
technique rest 
algorithm fastmap range search fg response set filtering step foreach sequence database ffl add post processing step foreach ffl remove report algorithm algorithm pseudo code ffl range query fastmap algorithm describes range queries handled fastmap 
fastmap applied square rooted distances search range square rooted 
note denotes gammad coordinates sequence filtering step sequences compared terms gammad euclidean distance time warping distance 
irrelevant sequences filtered step 
non qualifying sequences may included removed post processing step 
algorithm faster naive method reasons 
scans fewer sequences 
second filtering step faster smaller sequence length usually fixed constant say 
filtering may remove qualifying sequences resulting false dismissals guarantee euclidean distance gammad space lower bounds time warping distance 
case square root time warping distance probability false dismissals low practice see 
lower bounding technique sequences hx xm hy max max denote maximum values respectively 
min min defined similarly minimum values 
pair hmax min defines range sequence fluctuate 
loss generality assume max max 
proposed method motivated observation observation jmax gamma max 
checking validity straightforward 
max match element say assumed max max jmax gamma max jmax gamma consequence observation absolute difference maximum values serve distance lower bounds time warping distance 
true may useful may underestimate 
goal find tighter lower bound 
enclose rx ry ry rx rx ry disjoint overlap possible arrangements consider possible arrangement ranges sequences compared 
switch roles 
observation ranges hmax min hmax min possible arrangements ranges see 

overlap min max min min 

encloses min min 

disjoint min max 
observations define new distance function lb follows definition new distance function lb lb max jx gamma max min jy gamma min overlap max jx gamma max min jx gamma min encloses max jx gamma max jy gamma min disjoint note minimum maximum values sequence calculated sequence registered database scanning stored sequence uses 
arrangement ranges sequences determined constant time simple comparisons 
definition lb requires just scan sequence calculate lb distance sequences linear time length sequences 
may result great improvement lb underestimates 
verify claim experiments 
claim lb uniformly lower bounds sequences theorem lower bounding sequences hx xm hy lb proof see appendix direct consequence theorem obtain corollary 
corollary false dismissals sequences hx xm hy ffl lb ffl 
shown previous lower bounding actual distance distance condition guarantees false dismissals range queries nearest neighbor queries 
algorithm describes range queries processed 
types queries handled similarly 
filtering step irrelevant sequences filtered quickly lb distance computed fast linear time dimensionality typically 
non qualifying sequences may included result step lb lower bounds object distance non qualifying sequences removed post processing step 
algorithm lower bound search fg filtering step foreach sequence database lb ffl add post processing step foreach ffl remove report algorithm algorithm ffl range query lb note algorithm reduce number sequences scanned 
speedup comes faster distance calculation 
applications length sequences long quadratic time distance calculation avoid possible 
fact justifies effectiveness algorithm 
combining techniques careful consideration techniques proposed previous sections lead efficient algorithm 
algorithm compare filtered sequences time warping distance 
lower bounding distance calculating time warping distance 
may require extra cost sequence really qualifying sequence may save great amount computational cost 
observation leads flexible multi stage query processing system shown fastmap lb serve primary secondary filter respectively 
post processing optional bypass bypass optional filter index distance computation sequence query sequences matching filter fastmap index fastmap sequences proposed system structure consists stages connected pipelined manner 
input stage list sequence id database concern query output list id qualifying sequences stage 
stage filters irrelevant sequences fastmap index 
filtering stage reduces cost cpu cost 
sequences pass filtering stage compared query sequence lb stage 
post processing stage selects sequences really match query sequence 
filtering stages bypassed depending desirable time recall trade 
experimental results show effectiveness proposed methods performed experiments real time sequences human ecg daily stock price data artificially generated sequences sinusoids 
range queries varying query objects search ranges tolerances performed sequences 
compared proposed methods sequential scanning method terms average response time average recall 
methods implemented pentium mhz pc mb memory gb seagate scsi disk msec average seek time running freebsd bsd lite 
measured wall clock time dedicated system 
designed experiments answer questions ffl proposed techniques variant shows best performance terms response time false dismissals 
ffl method scales sequence length size grows 
experimental parameters definitions summarized table 
parameter definition number sequences database average length sequences database dimensionality target space table summary experimental parameters definitions experimental settings experiment prepared datasets 
samples time sequences plotted 
ffl sine dataset synthetic time sequences 
generated sine curves follows 
sin delta ffl number sinusoids 
denote amplitude frequency phase th sinusoid respectively chosen randomly ranges 
ffl small white noise term 
sequences generated 
sequence length 
ffl ecg sequences human ecg data 
lengths vary 
ffl stock stock price time sequences generated extracting daily high values stocks 
time sequences normalized subtracting average done 
time synthetic amplitude time ecg time stock sine ecg stock sample time sequences building fastmap index determine dimensionality target space 
experiments reported brevity observed choice datasets 
parameters summarized table 
dataset database size sequence length sine ecg stock table experimental parameter settings range query methods algorithms compared 
include ffl naive straightforward method bypassing filters 
ffl fm algorithm bypassing lower bounding distance filter 
ffl lb algorithm bypassing fastmap index filter 
ffl fm lb proposed combined method enables filters 
measure false dismissals introduced fastmap recall concept information retrieval 
definition recall defined follows recall retrieved relevant relevant ideal recall value means false dismissals recall value means relevant objects retrieved 
average response time recall compare various proposed method performed range queries randomly selected query objects calculated average response time recall 
search ranges chosen average number matching sequences approximately best match case minimum range database size maximum range 
compared basic techniques lb fm straightforward method naive 
results shown 
methods response time grows search range 
observe search range little effect recall 
response time fm fastest methods 
lb comparable fm stock 
recall value lb expected 
fm value case ecg 
conclude proposed methods outperformed straightforward method response time little compromise recall 
compared fm fm lb 
introduce false dismissals compared terms average response time 
shows result comparison 
cases combined technique performed consistently faster basic counterpart 
summarize speed proposed techniques naive method minimum maximum search ranges table 
values report ratio response time naive respective competitor 
notice proposed method achieves order magnitude times better response time real datasets stock order magnitude times synthetic sine dataset 
scalability test section scalability test results fm lb method 
fm lb chosen proposed techniques clear previous section promising method 
tests performed ways 
generated extra synthetic datasets varying lengths way previously performed range queries search range sequences dataset retrieved 
shows result 
see proposed technique performs times faster naive method 
generated sequences length ran range queries fixed search range sequences dataset 
see proposed technique scales smoothly database size increasing performance gap naive method 
average response time sec naive lb fm average response time sec naive lb fm sine ecg average response time sec naive lb fm stock comparison basic techniques lb crosses fm squares naive method naive diamonds 
search range fm fm lb search range fm fm lb sine ecg search range fm fm lb stock comparison fastmap fm diamonds combined technique fm lb crosses 
response time versus tolerance 
method speed speed min range max range lb fm fm lb sine method speed speed min range max range lb fm fm lb ecg method speed speed min range max range lb fm fm lb stock table speed proposed techniques ratio response time naive method competitor 
remarkably cases recall value proposed method false dismissals 
sequence length naive fm lb database size naive fm lb scale sequence length scale database size scalability fm lb response time versus average sequence length database size naive diamonds fm lb crosses 
focused fast similarity search large collection time sequences dissimilarity function time warping distance happens audio biological time sequences 
major contribution idea trade tiny amount recall typically zero achieve significant speed time real data proposed combined methods ffl fastmap square root time warping distance map sequences points ffl lower bounding linear distance function accelerate post processing 
minor contributions include ffl time warping distance database audience pointers related speech processing literature 
ffl implementation proposed methods experimental results real synthetic datasets rakesh agrawal christos faloutsos arun swami 
efficient similarity search sequence databases 
proceedings fodo conference il usa october 
rakesh agrawal king ip lin sawhney kyuseok shim :10.1.1.40.4034
fast similarity search presence noise scaling translation time series database 
proceedings st vldb conference zurich switzerland 
faloutsos jagadish mendelzon milo 
signature technique similaritybased queries 
proceedings sequences italy june 
christos faloutsos king ip lin 
fastmap fast algorithm indexing data mining visualization traditional multimedia datasets 
proceedings acm sigmod conference san jose ca usa june 
christos faloutsos ranganathan yannis manolopoulos 
fast subsequence matching time series databases 
proceedings acm sigmod conference may 
dina goldin paris kanellakis 
similarity queries time series data constraint specification implementation 
proceedings constraint programming september 
jagadish alberto mendelzon tova milo 
similarity queries 
proceedings acm pods conference san jose ca usa june 
flip korn christos faloutsos 
fast nearest neighbor search medical image databases 
proceedings vldb conference pages bombay india september 
lawrence rabiner hwang juang 
fundamentals speech recognition 
prentice hall 
rafiei alberto mendelzon 
similarity queries time series data 
proceedings acm sigmod conference tucson az may 
salton mcgill 
modern information retrieval 
mcgraw hill 
david sankoff joseph kruskal 
time warps string edits macromolecules theory practice sequence comparisons 
addison wesley publishing reading ma 
praveen seshadri miron livny raghu ramakrishnan 
query processing 
proceedings acm sigmod conference pages minneapolis mn usa may 
dimitris vassiliadis 
input state space approach prediction activity solar wind variables 
int 
workshop applications artificial intelligence solar terrestrial physics september 
appendix time warping distance algorithm give pseudo code compute time warping distance sequences idea build auxiliary matrix store cost matching samples samples desired cost lengths respectively 
algorithm time warping distance initializations xj yj compute partial results base minf gamma gamma gamma gamma return algorithm algorithm time warping distance appendix proof theorem theorem lower bounding sequences hx xm hy lb proof warping functions domains delta delta delta mg jx gamma exist warping functions may unique 
show theorem holds possible arrangement ranges 
overlap arbitrary possibilities 
case max min jx gamma jx gamma max jy gamma min case max min jx gamma jx gamma max case max min jx gamma jy gamma min cases possible irrelevant contributes lb note cases mutually exclusive 
adding sides inequalities proves theorem 
encloses arbitrary possibilities 
case max jx gamma jx gamma max case min jx gamma jx gamma min similarly adding sides inequalities proves theorem 
disjoint arbitrary max min consequently jx gamma jx gamma max jx gamma jy gamma min jx gamma max jx gamma max jy gamma min case analysis theorem holds 
contents related works background time warping transformation 
proposed techniques fastmap technique 
lower bounding technique 
combining techniques 
experimental results experimental settings 
average response time recall 
scalability test 
appendix time warping distance algorithm appendix proof theorem 
