proceedings usits nd usenix symposium internet technologies systems boulder colorado usa october james pitkow peter pirolli advanced computing systems association usenix association rights reserved information usenix association phone fax email office usenix org www www usenix org rights individual papers remain author author employer 
permission granted noncommercial reproduction educational research purposes 
copyright notice included reproduced 
usenix acknowledges trademarks 
mining longest repeating subsequences predict world wide web surfing james pitkow xerox parc palo alto ca usa pitkow parc xerox com modeling predicting user surfing paths involves tradeoffs model complexity predictive accuracy 
explore predictive modeling techniques attempt reduce model complexity retaining predictive accuracy 
show compared various markov models longest repeating subsequence models able significantly reduce model size retaining ability accurate predictions 
addition sharp increases predictive capabilities models achievable modest increases number predictions 

users surf world wide web www navigating hyperlinks connect islands content 
predict surfers going seeking able improve surfers interactions www 
research industrial thrusts attempt generate utilize predictions 
technologies include searching www content recommending related www pages reducing time users wait www content downloads systems analyzing designs web sites 
previous attempted characterize basic empirical properties user surfing paths web sites 
studied properties include distribution number clicks surfers web site complexity path structures consistency change paths time 
explore pattern extraction pattern matching techniques predict surfing paths 
expect may exploit modeling techniques applications www search recommendations latency reduction analysis web site designs 
peter pirolli xerox parc palo alto ca pirolli parc xerox com modeling predicting user surfing paths involves tradeoffs model complexity predictive accuracy 
explore predictive modeling techniques attempt reduce model complexity retaining predictive accuracy 
techniques merge methods web mining method extracts significant surfing patterns identification longest repeating subsequences lrs patternmatching method embodies principle weighted specificity 
lrs technique serves reduce complexity model focusing significant surfing patterns 
technique explored connection areas user interaction 
weighted specificity principal exploits finding longer patterns past surfing paths predictive 
techniques motivated results previous predictive models prior empirical characterization surfing data 
shall show compared base standard different markov model representations lrs pattern extraction weighted specificity pattern matching techniques able dramatically reduce model complexity retaining high degree predictive accuracy 

surfing paths models diffusion surfers web site users surfing web site starting different entry pages surf web site users arrive specific web pages having traveled different surfing paths users choose traverse possible paths leading pages currently visiting surfing number pages users go web site 
research number application areas assumes explicitly implicitly information surfing paths observed past provide useful information surfing paths occur 

applications predictive models search enter exit ability accurately predict user surfing patterns lead number improvements user www interaction 
instance google search engine assumes model surfing lead improvements precision text search engine results 
conceptually google models surfers pursuing random walks entire www link structure 
distribution visits www pages obtained model 
distribution re weight re rank results search engine 
model surfer path information viewed indicator user interests text keywords entered standard search engine 
line reasoning assume surfing models higher predictive accuracy yield better search engines models provide realistic view real world usage 
approach propose aims informed random walk model implicit google 
extent surfing predictions improve text search results expect informed approach yield better improvements random walk model 
users enter website various pages surfing users arrive pages having traveled different paths continuing users distribute various paths number page visits users leave web site 
conceptual model depicting various stages users traversing web site 
recommendation related pages tools available suggesting related pages surfers 
related tool button netscape browser developed alexa provides recommendations content link structure usage patterns 
similar tools specific repositories www content provided autonomy 
think tools making prediction surfers come page site interested pages sites predictive model surfing proposed enhance recommendations systems 
web site models producers www content interested improvements web site design 
research developed visualizations show flow users web site 
businesses emerged web techniques www com send simulated users existing web sites provide data web site design 
predictive models surfer paths help move state web site analysis post hoc modeling past user interactions current web site predictive models accurately simulate surfer paths hypothetical web site signs 
web site designers explore different arrangements links promote desired flows surfers content 
latency reduction predictive models significant potential reduce user perceived www latencies 
year year users report www delays number problem www 
emerging strand research aims improve www access times grown research improving file access time prefetching caching methods 
particular interest research griffioen appleton file system prediction introduced notion automatic prefetching evaluated effectiveness hop markov model 
number methods markov models methods proposed prefetching caching www pages :10.1.1.34.4398:10.1.1.43.33
roughly idea system predict content surfer going visit little cost involved system prefetch content 
user processes page content pages prefetched high latency remote sites local storage 
kroeger long mogul explored potential improvements www interaction latencies gained predicting surfer paths 
current proxy servers typically mediate www access accepting requests user client applications 
requests serviced delivering content cached prefetched retrieved caches retrieved directly origin web servers 
proxies typically accessed faster clients www servers accessed proxies 
usually occurs proxies located local area network client proxies access www servers external network connections 
assuming standard configuration kroeger divided user www latencies internal latencies caused computers networks utilized clients proxies external latencies caused computers networks proxies external www servers 
examining www user traces collected digital equipment www proxy kroeger external latencies accounted total amount latency seen users geographically close proxies 
analyses kroeger suggest observed external latencies reduced improved caching prefetching methods 

predictive surfing models predictive models surfing developed order improve www latencies 
instructive review effectiveness varies 
review plus review prior empirical characterizations surfing patterns motivate pattern extraction pattern matching techniques section 
path profiles schechter krishnan smith utilized path point profiles generated analysis web server logs predict requests 
predictions explore latency reductions pre computation dynamic web pages 
profiles constructed user session 
single session user interacting www traverses sequence urls 
single sequence set possible subsequences extracted paths 
time period say day frequency observed paths recorded 
resulting path profile consists set ordered pairs paths observed frequencies 
schechter propose method predicting move surfer matching surfer current surfing sequence paths path profile 
ranking matches determined kind specificity heuristic maximal prefixes path elements length path compared element wise length suffixes user path size prefix matched elements user path paths profile highest number element wise matches returned 
partial matches disallowed 
words surfer path indicating user visited url url url path better matched path profile 
paths profile match highest observed frequency selected prediction 
example best match frequently observed path profile predict user just visited visit url schechter storing longer paths profile offered improvements prediction study systematically 
schechter concerned reducing model complexity 
pointed session consists ordered sequence urls visited user worst case scenario na algorithm store decomposition path order reduce model size schechter maximal prefix trie minimal threshold requirement repeating prefixes 
order markov models order markov prediction method described file prediction padmanabhan mogul constructed dependency graph containing nodes files accessed particular www server :10.1.1.43.33
dependency arcs nodes indicated file accessed number accesses file 
arcs weighted reflect access rates 
padmanabhan mogul predictive prefetching method dependency representation reduced www latencies reductions increased increased 
method estimates conditional probabilities transitioning directly page page time tw server log file analysis 
padmanabhan mogul order markov model approximation predicting surfer paths forward window measured time number pages 
approach developed speculative service method substantially reduced server loads latencies 
architecture allows server client initiate retrieval resources predicted requested near 
systems generally referred systems 
explore effects longer surfer paths higher order markov models predictive model 
summary regardless transitions recorded proxy server prefetching methods essentially record surfing transitions data predict transitions 
interesting note methods schechter padmanabhan mogul improve predictions stored longer path dependencies 
order motivate rational specificity principle path matching summarize results empirical analyses performed server log files 
section introduce longest repeating subsequence lrs method technique adheres principles path specificity model complexity reduction evaluate surfing path data section 
empirical analysis surfing paths th order markov models systematically evaluated predictive capabilities th order markov days log files collected xerox com web site 
things results analysis suggest storing longer path dependencies lead better prediction accuracy 
section reviews methods results study 
gram representation paths surfing paths represented grams 
grams formalized tuples form xn indicate sequences page clicks population users visiting web site 
components gram take specific values xi xi specific surfing path taken specific user specific visit web site 
users surf page web site 
may record surfing grams xn length observable practice 
assume define grams corresponding individual surfing sessions individual users 
surfing session comprised sequence visits surfer significantly long pauses 
course data collection period say day finds lengths surfing paths distributed inverse gaussian function withthe mode distribution length 
appears universal law predicted general assumptions foraging decisions individual surfers 
practice typically finds majority users visit page web site click web site 
th order markov approximations order markov model padmanabhan mogul concerned page page transition probabilities :10.1.1.43.33
inverse gaussian distribution heavily skewed distribution log normal distribution predicts bulk recorded paths short long paths 
estimated grams form yield conditional probabilities pr 
want capture longer surfing paths may wish consider conditional probability surfer transitions th page previous page visits pr 
conditional probabilities known th order markov approximations th order markov models 
zero th order markov model unconditional base rate probability pr probability page visit 
estimated proportion visits page period time 
summary prior empirical analysis data collected xerox com dates may may systematically tested predictive properties th order markov models 
site received requests day period 
period files xerox com web site pages html 
reliable identification user paths web site complicated site specific task 
xerox com web site issued cookies users entry xerox splash page recorded user agent referer field request 
user paths identified cookies set fallback heuristics cookies exist xerox server permitted caching resources 
get modified headers included construction user paths 
certain client proxy configurations xerox com caching policy resulted missed client navigation user clicked back button 
result user paths constructed heuristics contained transitions pages linked current page 
days study user paths observed 
exact methods tradeoffs effects counting ip user described greater detail 
models estimated surfing transitions extracted training sets www server log file data tested test sets data occurred training set 
prediction scenario assumed surfer just observed making page visits 
order prediction page visit model estimate xn xn xn training data required path visits xn xn penultimate path observed training data 
penultimate path match paths training test data model examined conditional probabilities xn xn xn available pages xn predicted page having highest conditional probability occurring fact requested 
observed surfer predicted visit hit tallied 
model prediction matching path model exist 
important examine performance model making correct predictions incorrect predictions incorrect predictions result undesirable costs mitigate benefits 
table presents subset analyses predictions training set collected day tested data collected day 
define pr match probability penultimate path xn xn observed test data matched penultimate path training data pr hit match conditional probability page xn visited xn xn penultimate path highest probability conditional path xn xn xn pr hit pr hit match pr match probability page visited test set estimated training occur accordance method scenario pr match conditional probability page xn visited xn xn penultimate path highest probability conditional path xn xn xn pr pr match pr match probability page visited test set estimated training occur accordance method scenario table 
probability matching path length pr match conditional probability accurately predicting page visit surfer path match pr hit match accuracy predicting surfer page visit pr hit 
conditional probabilities pr match rate pr hit ratios pr hit pr provided 
training data test data collected successive days 
matching predictions conducted paths length 
predictions absence match 
order pr pr pr pr pr pr hit markov model match hit match hit match pr pr hit pr probability correctly predicting page divided probability making incorrect prediction transitions 
metric provides coarse measure benefit cost ratio 
benefit cost pr hit pr vary represent relative weights associated benefits costs application 
naturally different applications different inherent tradeoffs associated benefits making correct prediction versus costs making incorrect prediction require complex metric encode true tradeoffs 
table seen lower order models higher pr match 
indicates chances seeing short surfing paths days higher longer surfing paths 
higher order models higher pr hit match 
find match longer surfing paths better predictors shorter surfing paths 
lower order models higher pr hit 
indicates hit rate dominated probability finding penultimate path match pr match 
xerox com data assumes benefit making correct hit equals cost making incorrect prediction th order model optimal 
included analysis prediction stability time entropy analysis improvements due increasing size training data set 
results analyses lead explore methods improve pattern extraction pattern matching 
section introduce notion longest repeating subsequences lrs identify information rich patterns modifications lrs improve pattern matching 
models compared different markov models section 
model prediction methods schechter discuss explosive growth storage requirements path profiles discuss analysis detail 
producing accurate predictive model amount space computational benefits practical benefits 
imagine model compact reside memory thread handling requests busy www server 
solution reduce model space compact data structures tries schechter issue great interest complexity treat efficient data structure solutions 
solution attack problem core remove low information elements model 
lrs technique treats problem datamining task paths considered noise 
hinges insight paths occur infrequently result erroneous navigation 
identifying repeating subsequences enables common sub paths extracted 
benefit preserving sequential nature paths robust noise 
lrs storage requirement reduced saving information rich paths 
second method explore specificity heuristic pattern matching 
shown results schechter padmanabhan mogul table higher order markov models result higher prediction rates penultimate path match 
principle specificity encourages higher order path matches possible maximize hit rates 
drawback approach likelihood higher order path match quite small resulting lower hit rates 
decreased likelihood long path match part function inverse gaussian distribution path lengths distribution accounted paths length 
function exponential growth combinations possible paths length path base exponent average number links page web site 
example site average links page path length possible combinations assuming forward traversals 
due limitations ability server logs completely capture user navigation recorded paths limited forward links set possible combinations larger 
longest repeating sequences case lrs ab longest repeating subsequence sequence items subsequence means set consecutive items repeated means item occurs threshold typically equals longest means subsequence may part repeated subsequence case lrs ab abd case lrs abc abd occurrence subsequence longest repeating 
help illustrate suppose case web site contains pages contains hyperlink contains hyperlinks shown users repeatedly navigate user clicks user clicks case longest repeating subsequence ab 
user clicks case ab abd longest repeating subsequences 
event ab lrs occasion ab followed abd 
case abc abd lrs occur longest subsequences 
note ab lrs longest repeating subsequence case lrs abd 
lrs interesting properties 
complexity resulting grams reduced low probability transitions automatically excluded analysis 
reduction happens transitions occur times cases result prediction 
example threshold penultimate match lrs ab case 
case prediction pages requested 
reduction complexity typically results slight loss pattern matching evident experiments 
contrast nd order markov approximations predictions path ab observed system randomly case lrs abd 
examples illustrating formation longest repeating subsequences lrs 
thick lined arrows indicate traversal thin lined arrows indicate traversal 
case resulting lrs listed 
select equally probable 
hint prefetching system set predictions server passed client contents currently requested page 
case list returned contains equal probability 
study effect varying result list size section 
note case seeing ab lrs predictive model predict just nd order markov approximations 
manner lrs model viewed proper subset th order markov approximations 
interesting property lrs model bias specificity 
single page page transition repeated part longer sequences included lrs model 
web sites transition popular entry points usually results forward links followed threshold predictive purposes reduces number penultimate matches lrs model shorter paths direct result lowers hit rate model 
hybrid lrs markov models propose straightforward hybrid models lrs subsequences extracted training data 
hybrid lrs model extract lrs patterns training data estimate firstorder markov model 
decompose lrs pattern series corresponding hop grams lrs abcd result ab bc cd grams 
call model hop lrs model 
section compare hop lrs model order markov model estimated paths training data set 
second hybrid lrs model decomposes extracted lrs subsequences possible grams 
resulting model reduced set grams various lengths 
call th order lrs model orders able predictions 
main advantage model incorporates specificity principle pattern matching utilizing increased predictive power contained longer paths 
test th order lrs model th order markov model 
th order lrs model th order markov model constructed decomposing possible subsequences varying length grams 
model complexity reduction schechter note profiling method requires path length decomposed subpaths 
point store profile single path length necessary subpaths requires storage grows 
note distinct paths length necessarily require storage 
distinct paths length share redundant subpaths length problem schechter analysis fails incorporate combinatorics surfing paths 
worst case needs store distinct paths distinct subpaths 
may goal storing needed aim lrs pattern extraction method 
amount space required models lrs markov depends combinatorics redundancy user paths 
basically need know number patterns paths subpaths grows process surfing 
model path combinatorics formulated understood underlying path generating process 
unfortunately process generates user paths web sites characterized detail see beginnings may site site time time 
absence informed surfing process model explore simple model 
assume surfing paths average branching factor surfers may start places page move pages average 
assume surfers move random generating random paths 
surfing paths length divided subpath partitions length subpath partition length patterns assuming randomly chosen paths branches 
complexity cost terms number patterns function subpath length noted newell rosenbloom closed form solution show derivative log noted random process model longer path patterns recur shorter path patterns 
hop models worst case complexity hop markov model number pages web site page connected page 
practice connectivity web pages sparser evidenced low number hyperlinks page 
sparse connectivity graphs suited adjacency list representations require number edges pages mentioned previously worst case storage requirements th order markov approximations 
result applying lrs set path data possible pruning resulting markov models 
extent pruning depends amount redundancy value selected repeating threshold worst case amount storage required lrs models equal worst case equivalent markov models 
shall see practice reduction quite significant note amount reduction vary web site web site sites depending traffic patterns 

evaluation order test hybrid lrs models help achieve goal reducing complexity maintaining predictive power conducted set experiments data previous study summarized 
analyses consecutive weekdays chosen starting monday may training data thursday may test day 
user paths training days paths test day 
previous evaluation predictions model contain matching pattern 
hop markov lrs comparison hop markov models derivatives important study empirically conceptually simple easy implement 
developing rich understanding models helps frame results tradeoffs complex models 
experiment hop markov hop lrs models built training days 
path test day path decomposed set sequential transitions 
model tested see matching prefix match path correct transition predicted hit 
probability match pr match probability hit match pr hit match hit rate transitions pr hit ratio pr hit pr computed corresponding probabilities 
table displays results hop markov model hop lrs model 
unique hops training data lrs model reducing set nearly third unique hops 
hit probabilities table slightly higher table 
discrepancies result weekday weekend traffic differing significantly xerox com data table contained weekday data training testing sets 
table 
results comparing hop markov model hop lrs model 
hop hop markov lrs number hops model size bytes total transitions test data matches hits pr match pr hit match pr hit pr match pr pr hit pr hop lrs model produces reduction total size required store model satisfying complexity reduction principle 
expect sharp reduction model complexity result equally sharp reduction predictive ability 
case hop lrs model performs nearly hop markov model terms total number predictions hop markov versus hop lrs total number hits hop markov versus hop lrs probability correctly predicting page pr hit hop markov versus hop lrs 
models produced similar probabilities markov model resulting incorrect prediction rate lrs model 
benefit cost ratio model nearly identical 
hop lrs model able significantly reduce model complexity preserving predictive ability 
models simple leverage greater predictive abilities longer paths 
th order markov approximation th order lrs comparison order adhere principle specificity longer paths possible greater predictive power 
mind set explore differences th order markov model th order lrs model 
hop analysis th lrs subset th order markov approximations expect see better predictive capabilities wanted examine tradeoffs complexity reduction model predictive power 
table 
results testing th order markov th order lrs models 
th order markov th order lrs number hops model size bytes total transitions test data matches hits pr match pr hit match pr hit pr match pr pr hit pr experiment training days test day 
training day path decomposed corresponding grams th order markov model 
th order lrs model lrs computed lrs decomposed set gram subsequences 
evaluation transition path test data broken corresponding subsequence suffixes 
resulting suffixes checked see matching gram model 
prediction greatest specificity number element wise matches training test paths weighted conditional probability selected prediction 
weighted specificity measure differs slightly previous study percent kth order markov kth order lrs hop markov hop lrs pr match pr hit match pr hit 
summary likelihood able prediction pr match correct prediction match pr hit match hit rate pr hit model 
schechter prediction suffix match 
table shows results experiment 
previous experiments test data consisted transitions 
expect complexity storing th order markov significant close quarter ngram sequences naive representation require kbytes 
th order lrs model reduces model space order magnitude decreasing total number grams consume kbytes space nearly double hop markov model times hop lrs model 
th order markov model able match nearly transitions resulted correct prediction time 
performance model better hop markov model tested earlier highlighting specificity principle 
th order lrs model performed nearly correctly predicting page request time rate compared markov model 
benefit cost ratio markov model exceeds lrs model versus 
summarizes results experiments respect hit rates 
certain cases difference predictive power th may outweigh considerable space savings hop models 
th order markov model provides highest hit rate hop markov model provides predictive power consuming space 
true hop lrs predictive power accomplished space 
parameterization prediction set restricting prediction guess imposes stringent constraint 
predict larger set pages surfed click user 
certain applications aim reduce user latency hint architectures important understand tradeoffs systematic manner 
section explores hit rate varies considering larger sets predictions 
evaluated model performance returning sets predictions 
set constructed ranking predictions page visit decreasing order likelihood selecting topmost predictions 
hop models predictions ranked probability predicted transition 
th order models predictions ranked weighted specificity principle 
shows probability model correctly predicting page visit different prediction set sizes 
previous experiments th order models performed better hop models due increased information contained longer paths lrs models performed slightly worse markov models fraction model space 
increasing prediction set dramatic impact predictive power predictive power method nearly doubling increasing set size elements 

motivated principle weighted path specificity complexity reduction shown small compact models user surfing behavior exist retain predictive power 
clearly methods exist predict access resources 
focused enhancements various markov models believe concept lrs successfully applied markov models domains suffix methods 
experiments subsequences occurred considered repeating 
theory repeating defined occurrence threshold hypothesize model complexity reduced maintaining acceptable predictive power raising threshold determining ideal threshold depend specific data intended application 
pr hit match kth order markov kth order lrs hop markov hop lrs size prediction set 
effect making correct prediction function number predictions model 
variable parameterized experiments confidence level prediction 
inspection data revealed cases model making predictions 
modified pattern matching algorithm restricted predictions probability making successful prediction achieved 
lowering probability match pr match reduced hit pr hit rate offset increased likelihood correct pr hit match 
especially appropriate applications cost wrong outweighs benefits right 
application lrs models prefetching latency reduction interest 
compact size lrs models imagine server threads issuing hint lists clients maintaining model memory 
preference system server provides client list suggested items 
client decides items prefetch 
require benefit greatly modifying current precomputed static lrs model adaptive real time model especially optimal hint set size vary server server page page server 
effectiveness application modifications needs evaluated 
similar manner lrs provides compact method store user paths data analysis 
psychological perspective note lrs may represent common navigational sub units chunks users documents web site 
repeating subsequences may appropriate logical unit encode paths traveled 
postulate chunks suited document user clustering preserve sequential nature surfing robust noise reduce computational complexity 
exact space reduction achievable lrs web surfing requires generating function underlying web surfing identified traces examined 

clearly exists tradeoff model complexity predictive power 
initial exploration predictive capabilities user paths led postulate principles complexity reduction specificity 
employed notion longest repeating subsequences produce subset paths 
showed simplest case modeling paths hop markov model reduced hop lrs model able match performance accuracy hop markov model reducing complexity nearly third 
showed hit rates raised including principle specificity th order lrs model performance th order markov model reducing complexity order magnitude 
showed varying size prediction set results large gains predictive 

usenix reviewers shepherd jeff mogul helpful comments suggestions 




speculation reduce server load service time www 
proceedings th acm international conference information knowledge management cikm baltimore md 
bray 

measuring web 
proceedings fifth international www conference paris france 

brin page 

anatomy large scale hypertextual web search engine 
proceedings seventh international www conference brisbane australia 

cao felten karlin li 

implementation performance integrated file caching prefetching disk scheduling 
acm transactions computer systems 

chi pitkow mackinlay pirolli card 

visualizing evolution web ecologies 
proceedings conference human factors computing systems chi los angeles ca 

clement flajolet valle 

analysis hybrid trie structures 
proceedings th annual acm siam symposium discrete algorithms 

cohen krishnamurthy rexford 

improved performance web server volumes proxy filters 
proceedings acm 

crow smith 

db habits comparing minimal knowledge knowledge approaches pattern recognition domain user computer interactions 
beale eds neural networks pattern recognition human computer interaction pp 

new york ellis horwood 

cunha 

trace analysis applications performance enhancements distributed information systems 
unpublished thesis boston university boston 

dean henzinger 

finding related pages world wide web 
proceedings eighth international world wide web conference toronto canada 

griffioen appleton 

reducing file system latency predictive approach 
proceedings summer usenix technical conference cambridge ma 

huberman pirolli pitkow lukose 

strong regularities world wide web surfing 
science 

kroeger long mogul 

exploring bounds web latency reduction caching prefetching 
proceedings usenix symposium internet technologies systems usits monterey ca 

newell rosenbloom 

mechanisms skill acquisition law practice 
anderson ed 
cognitive skills acquisition pp 

hillsdale nj lawrence erlbaum 

padmanabhan mogul 

predictive prefetching improve world wide web latency 
computer communication review 

pirolli pitkow rao 

silk sow ear extracting usable structures web 
proceedings conference human factors computing systems chi vancouver canada 

pirolli pitkow 

distributions surfers paths world wide web empirical characterization 
world wide web 

pitkow pirolli 

life death electronic frontier 
proceedings conference human factors computing systems chi atlanta ga 
pitkow 

gvu tenth www user survey 
online publication www gvu gatech edu user surveys 

schechter krishnan smith 

path profiles predict requests 
proceedings seventh international world wide web conference brisbane australia 
