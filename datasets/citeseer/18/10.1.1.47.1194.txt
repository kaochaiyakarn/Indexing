procs 
th annual int symp 
computer architecture comparison adaptive wormhole routing algorithms boppana suresh chalasani div 
math 
computer science ece department univ texas san antonio univ wisconsin madison san antonio tx madison wi 
improvement message latency network utilization torus interconnection networks increasing adaptivity wormhole routing algorithms studied 
proposed partially adaptive algorithm new fully adaptive routing algorithms compared known cube algorithm uniform hotspot local traffic patterns 
simulations indicate partially adaptive algorithm causes unbalanced traffic network performs worse nonadaptive cube routing algorithm traffic patterns 
result study performance necessarily improve full adaptivity 
particular commonly discussed fully adaptive routing algorithm uses virtual channels physical channel ary cube performs worse cube uniform hotspot traffic patterns 
fully adaptive algorithms give priority messages distances traveled perform better cube partially adaptive algorithms traffic patterns 
study adaptivity full partial necessarily benefit wormhole routing 
keywords adaptive routing deadlocks multicomputer networks ary cubes message routing forward routing wormhole routing 
point point ary cube related networks experimental commercial multicomputers multiprocessors 
ary cube network dimensional grid structure nodes processors dimension node connected nodes dimension direct communication links 
routing algorithms specify messages sent processors crucial efficient operation parallel computer 
maximum system performance routing algorithm high throughput exhibit important features low latency message delivery avoidance deadlocks livelocks starvation ability various traffic patterns 
message latencies increase increase number hops consider minimal routing algorithms message moves closer destination hop taken advantage minimal routing livelocks avoided 
issue starvation avoided allocating resources channels buffers fifo order 
ensuring deadlock freedom difficult depends heavily design routing algorithm 
store forward saf wormhole wh popular switching techniques interconnection networks 
saf technique message latency product number hops taken sum average queuing delay transmission time message hop 
wh technique message divided sequence fixed size units data called flits 
communication channel transmits flit message transmit remaining flits message transmitting flits message 
time flits corresponding message occupy contiguous channels network 
method message latency proportional sum number cycles spent waiting suitable channels route message flits number hops message length 
avoid deadlocks multiple virtual channels simulated physical channel pre defined order enforced allocation virtual channels messages 
minimal fully adaptive algorithms impose restrictions choice shortest paths routing messages contrast minimal algorithms allow subset available minimal paths routing messages 
adaptive routing algorithm fully partially adaptive 
known cube routing algorithm example non adaptive routing algorithms flexibility routing messages 
adaptive routing algorithms disadvantages 
complexity routing algorithm hardware cost increase increase adaptivity 
furthermore routing algorithms favor paths cause highly uneven utilization early saturation network 
fully partially adaptive algorithms deadlock free wormhole routing proposed 
fully adaptive algorithm ary cubes linder uses gamma virtual channels physical channel 
fully adaptive wormhole algorithm berman ary cubes uses gamma virtual channels physical channel 
designed fully adaptive wh routing algorithm tori ary cubes uses virtual channels physical channel 
dally proposes augmenting multicomputer networks express channels facilitate adaptive routing reduce network diameter message latencies 
results performance algorithms uniform hotspot local traffic patterns ary cubes 
compare proposed partially adaptive fully adaptive wh routing algorithms commonly cube algorithm 
north algorithm member partially adaptive algorithms proposed glass ni elegant turn model 
fully adaptive algorithms study total number possible directions taken message 
improvement reduces number virtual channels results linder generalization result dally mesh networks 
fully adaptive algorithms derived store forward algorithms number hops taken messages 
routing messages algorithms form priority information addition full adaptivity 
algorithms employs load balancing virtual channels 
design algorithms result designing deadlock free wh routing algorithms saf routing algorithms 
self contained method briefly explained section 
certain cases algorithms require fewer virtual channels previously proposed fully adaptive algorithms 
rest organized follows 
section describes routing algorithms performance study 
section compares performance different wh routing algorithms 
section concludes 
routing algorithms section discuss different deadlock free wormhole routing algorithms study 
algorithms fully adaptive partially adaptive non adaptive 
fully adaptive algorithms derived corresponding saf routing algorithms results developing deadlock free wh routing algorithms saf algorithms 
describe fully adaptive routing algorithms collectively referred hop schemes 
hop schemes notation 
rest denote ary cube 
dimensions numbered gamma nodes numbered dimension gamma 
node uniquely indexed tuple numbers obtained dimensions 
assume adjacent nodes connected unidirectional communication links 
node gamma outgoing links nodes xn gamma gamma xn gamma gamma gamma dimension addition subtraction operations performed respect modulo node xn gamma termed respectively odd gamma respectively odd 
communication channel communication link taken mean physical channel 
physical channel virtual channel message originating node unique number address node 
construction wh algorithms 
illustrates construction wh routing algorithm saf algorithm 
shows node model saf routing 
saf routing buffers node critical resources 
deadlocks saf routing avoided partitioning buffers classes placing constraints set buffer classes message occupy node 
technique avoiding saf deadlocks known buffer reservation technique 
derive wh algorithm saf algorithm proceed follows 
physical channel network wh routing provide virtual channels corresponding flit buffers see 
message occupy buffer class intermediate node go communication channel saf network see wh network message reserve virtual channel see 
words saf algorithm specifies message occupy buffer class node take channel set physical channels complete hop corresponding wh algorithm specifies message node take hop virtual channel class physical channels set construction allows design wh routing algorithm saf algorithm node node physical channel virtual channels derivation wh routing saf routing 
degree adaptivity 
wh algorithm derived procedure need deadlock free 
lemma presents general condition wh routing algorithm designed saf algorithm deadlock free 
lemma saf routing deadlock free buffers occupied message successive hops monotonically increasing ranks wh routing algorithm derived saf algorithm deadlock free 
see proof 
known fully adaptive saf schemes number hops taken satisfy lemma wh routing 
positive hop saf wh routing algorithms 
known positive hop saf algorithm number buffer classes node equals diameter network plus 
message placed buffer class source node 
routing message placed buffer class intermediate node completed hops far 
maximum number hops message take equals diameter network maximum number buffer classes required node saf routing equals diameter network plus number equals 
corresponding positive hop brevity wh routing algorithm designed providing virtual channels physical link 
example virtual channels provided physical link 
message reserves virtual channel intermediate node complete hop 
example suppose message source destination takes path 



message reserves virtual channel link 
wh scheme deadlock free due argument see details 
saf scheme assign buffer class rank easy see buffer classes occupied message monotonically increasing ranks 
applying lemma conclude wh routing algorithm deadlock free 
negative hop saf wh routing algorithms 
negative hop saf algorithm network partitioned subsets subset contains adjacent nodes graph coloring problem 
assume subsets labeled node subset label labeled hop negative hop node higher label node lower label positive hop 
message occupies buffer class intermediate node message taken exactly negative hops reach intermediate node 
negative hop saf scheme message currently buffer class wait buffer class waiting positive hop class waiting negative hop 
gopal proves saf routing deadlock free 
structure bipartite graph nodes partitioned subsets colored colors adjacent nodes distinct partitions maximum number negative hops message takes half diameter equals 
negative hop schemes buffer classes node designed straightforward manner 
example buffer classes node sufficient negative hop scheme 
odd negative hop schemes require number buffer classes node designed design negative hop schemes odd quite involved considered 
order derive negative hop wh routing algorithm corresponding saf algorithm provide virtual channels physical link message generated total number negative hops taken set zero current example illustrate negative hop scheme host set source node 
pseudocode describes message routed negative hop scheme 
current host destination 
select host 

reserve virtual channel class number negative hops taken current host host 

current host odd increment number negative hops taken 

current host host 
message moves node odd node reserves virtual channel class reserved previous hop reserves virtual channel class higher reserved previous hop 
lemma shown negative hop wh algorithm 
example negative hop scheme shown 
message originates source node routed destination easily shown negative hop scheme message take shortest paths fully adaptive nature negative hop algorithm 
suppose path taken message 



hop node node positive hop message reserves virtual channel order complete hop recall virtual channels need multiplexed physical channel order implement wh scheme 
node current host number negative hops taken zero value host 
message reserves virtual channel hop node numberof negative hops taken zero 
hop negative hop message reserves virtual channel node 
similarly message reserves virtual channel final hop node node 
negative hop scheme bonus cards nbc 
negative hop positive hop scheme described utilize virtual channels evenly virtual channels lower numbers utilized virtual channels higher numbers 
example messages virtual channels numbered messages diametrically opposite nodes virtual channels numbered variation negative hop scheme attempts achieve uniform utilization virtual channels 
negative hop bonus cards nbc scheme message bonus cards number negative hops take approximately half total number hops take reaching destination 
number bonus cards message receives source node formula 
bonus cards maximum possible negative hops gamma negative hops taken message bonus cards routed exactly case algorithm 
routing message bonus cards virtual channels numbered hop message 
message bonus cards wider choice virtual channels choose congested hop 
routing message hop case scheme 
message arrives intermediate host node virtual channel class uses virtual channel class took negative hop reach node leave node 
flexible version nbc scheme described 
fully adaptive routing enumeration directions fully adaptive deadlock free wh routing scheme ary cube respectively mesh uses respectively gamma virtual channels physical channel derived various researchers 
refer algorithm power pn algorithm 
gamma dn gamma source destinations message routed 
bit tag gamma created follows 
description algorithm 
fully adaptive deadlock free routing virtual channels physical channel network 
virtual channels bit number 
message routed tag computed 
hop message tag chooses virtual channel number links uncorrected dimensions shown algorithm power routes messages free deadlocks ary cubes 
north algorithm glass ni proposed north algorithm multi dimensional meshes tori 
algorithm works follows 
destination index source index dimension message correct dimension hops dimension links routed fully adaptively 
prohibits adaptive routing messages example routing message node upper left node lower right node path nodes regardless traffic conditions network 
edges twodimensional network labeled west east north south messages going north adaptivity 
name 
simulation results compare performance routing algorithms developed event driven simulator 
simulator ary cubes multidimensional tori multi dimensional meshes wormhole routing 
compare performances wormhole routing algorithms hop schemes positive hop negative hop negative hop bonus cards north algorithm proposed glass dimensions message needs take hops order reach destination current node 
ni known non adaptive cube algorithm 
consider minimal routing messages 
limit search space fixed important parameters performance comparisons 
high radix commonly dimensional networks 
conducted simulations tori 
literature fixed length messages flits commonly considered 
considered flit messages study 
message interarrival times geometrically distributed 
traffic patterns 
considered uniform hotspot local traffic patterns 
uniform random traffic pattern representative traffic generated massively parallel computations array data distributed nodes hashing techniques 
realistically traffic pattern tends random coupled local hotspot type traffic 
reason performed simulations uniform traffic coupled moderate hotspot traffic completely local traffic 
hotspot traffic pattern simulated particular node receives hotspot traffic addition regular uniform traffic 
example hotspot percentage newly arrived message directed probability hotspot node probability node 
hotspot node receives times traffic node network 
multiprocessors traffic pattern representative computations critical sections corresponding locks placed single node 
software techniques distribute hotspot traffic representative hotspot traffic obtained simulating multiple hotspot nodes receiving hotspot traffic addition regular uniform traffic 
consider hotspot traffic hotspot node 
local traffic pattern traffic generated node directed equal probability node theta mesh consisting nodes gamma gamma 
theta torus corresponds locality factor 
local traffic pattern slightly different considered agarwal 
parameters interest latency normalized throughput 
interested average channel utilization ae average latency message 
average latency message gamma theta average wait time average length message flits average number hops taken message time transfer flit neighbors respectively 
uniform traffic average number hops average diameter network 
ary cube approximately nk average diameter uniform traffic 
number flits message fixed 
takes clock cycle transmit flit neighbor nodes 
multiple virtual channels mapped physical channel share bandwidth time multiplexed manner 
average channel utilization refers fraction physical channel bandwidth utilized time interval network steady state 
called network utilization factor normalized throughput network 
average channel utilization denoted ae computed ratio network bandwidth utilized raw bandwidth available 
ae theta number nodes number channels average message interarrival time 
simplified ae numerator computes average traffic generated node denominator gives available bandwidth due physical channels originating node 
congestion control 
restrictions placed message injection network unusable saturation occurs 
simple congestion control proposed store forward routing computer networks 
method node allowed inject message network number messages class node certain specified limit 
type congestion control feasible simulate network traffic rates cause saturation lead unbounded delays 
convergence simulations need checked carefully 
convergence criteria 
better randomness separate sequences random numbers maintained distribution message interarrival time selection destination purpose congestion control class message determined follows 
case hop schemes pn message class virtual channel number 
case cube schemes message class particular virtual channel intends 
simulation sufficient warmup time provided allow network reach steady state 
warmup time network traffic sampled periodic intervals 
counters statistics gathering reset sampling period 
statistics gathered sampling time analyzed convergence 
sampling period new streams random numbers destination selection message interarrival time statistics gathered period time 
independent convergence criteria minimum samples maximum samples taken simulation 
simulation terminated exceeds maximum time limit convergence criteria met 
purpose checking convergence partition messages various classes number hops require reach destinations 
convergence check variance latencies reported messages hop class 
check population mean hop class stratum message population described 
stratum average latency variance computed 
proper weights stratum population average message latency variance average latency oe computed 
confidence interval average latency gamma oe oe 
value oe bound error estimation check variance average message latencies latest samples 
case bound error estimation computed 
error bounds respective averages simulation terminated 
points saturation criteria easily satisfied 
longer warmup sampling times needed achieve convergence points near saturation 
simulation average number messages received sampling periods convergence criteria computed 
bound error estimation 
weights hop class frequency appear traffic pattern simulated 
example uniform traffic hop class weight hop class weight node neighbors diametrically opposite node 
case local traffic number hop classes classes weight classes weight classes weight 
xxx offered channel utilization fraction capacity average latency cycles uniform traffic flit worms pn xxx offered channel utilization fraction capacity achieved channel utilization pn performance routing algorithms uniform traffic 
simulation uniform traffic average latency normalized throughput achieved plotted offered traffic uniform traffic flit messages 
low traffic load ae algorithms latency 
hop schemes algorithms behave differently saturation 
algorithms derived saf routing similar throughputs slightly better better latency throughput saturation 
particular nbc saturate shows signs saturation 
latencies algorithms rise abruptly point saturation bounded values high traffic loads ae due congestion control 
furthermore achieved throughputs algorithms increase steadily 
nbc algorithms achieve peak throughputs normalized throughputs considered performance comparisons 
respectively offered load 
meaningful compare saturation latencies hop schemes algorithms ones lower throughputs 
fully adaptive pn lower peak throughput cube saturates quickly 
cube algorithm peak throughput occurs offered traffic 
observation cube performs better algorithm consistent results glass ni mesh networks 
effect congestion control cube saturation limit rate latency increases maintain throughput close maximum throughput slightly point saturation 
congestion control effective pn respect throughput keeps message latencies low 
abrupt falls plateau throughput curve indicate congestion control effective certain traffic loads 
different congestion control feasible maintain peak throughput 
glass ni report peak throughput approximately algorithm theta mesh 
simulation hotspot traffic performances algorithms hotspot traffic hotspot traffic 
hotspot node chosen node 
experimented various different choices hotspot nodes yields best results hotspot node performances cube hop schemes unaffected choice hotspot node 
compared uniform traffic increase latencies due hotspot traffic negligible traffic low applied load 
hotspot verify validity simulations cube compared peak throughput reported indicated various previous studies 
song reports peak channel utilizations cube routing mesh networks bidirectional half duplex channels 
shows unidirectional channels connect adjacent nodes results lower throughputs 
simulate unidirectional channels connections nodes results correspondingly lower 
torus slightly different dimensional mesh experiments indicate cube yields similar normalized throughputs networks parameters network size message length kept 
berman simulate variant cube allows non minimal routing report peak throughput message population consisting mix flit messages theta torus 
reported network utilization obtained cube mesh networks bisection bandwidth width gives better upper bound available bandwidth meshes uniform traffic 
value compare channel utilizations 
offered channel utilization fraction capacity average latency cycles hotspot traffic flit worms hotspot traffic pn oo xx offered channel utilization fraction capacity achieved channel utilization pn performance routing algorithms hotspot traffic 
traffic causes early saturation latencies saturation higher compared uniform traffic case 
cube pn algorithms saturate earlier hop schemes 
cube best algorithm yielding maximum normalized throughput 
consistently better pn algorithms 
peak normalized throughput realized nbc slightly 
actual saturation algorithms begins 
due congestion control latencies controlled normalized throughputs increase steadily 
simulation local traffic presents performances algorithms local traffic locality fraction 
case pn peak performs better cube throughput 
hop schemes higher normalized throughput controlled latencies saturation xx xxx offered channel utilization fraction capacity average latency cycles local traffic flit worms locality fraction pn xxx offered channel utilization fraction capacity achieved channel utilization pn performance routing algorithms local traffic locality factor 
region 
noteworthy point nbc peak throughput performs better uses virtual channels due bonus cards routing messages 
lowest latency hop schemes applied traffic load 
discussion partially adaptive algorithm exhibit better performance simpler cube algorithm 
causes early saturation network traffic patterns 
requires complicated routing logic increase node complexity node delay hop 
main problem algorithm skews uniform traffic 
glass ni report class algorithms perform better cube types nonuniform traffic matrix transpose 
results indicate fully adaptive hop schemes nbc yield better throughputs traffic patterns considered study 
due virtual chan nels physical channel balancing traffic virtual channels 
example uniform traffic gives better throughput uses virtual channels algorithm 
case hotspot traffic nbc gives better throughput despite fewer virtual channels 
possible explanation load virtual channels balanced nbc algorithms 
fully adaptive pn scheme performs worse non adaptive cube algorithm uniform hotspot traffic 
trying explain unexpected low performance pn algorithm closely looked algorithms nbc pn 
light simulated pn nbc algorithms routing flit packets uniform traffic 
pn algorithm performed nbc better cube respect latency peak throughput 
pn scheme routes message hop local knowledge available current host node 
contrast nbc uses local knowledge kind priority information number hops taken route message 
case packet routing lack information severe handicap pn employs hop lookahead known yield close optimal performance uniform traffic penalty choosing best path severe 
case wormhole routing critical resources channels held longer time 
penalty choosing path turns congested severe wormhole routing saf routing 
indicates priority beneficial wormhole routing 
concluding remarks evaluated effectiveness wh routing algorithms various degrees adaptivity 
considered fully adaptive nbc pn algorithms algorithm known nonadaptive cube algorithm 
fully adaptive algorithms pn uses fewest virtual channels tori 
remaining fully adaptive algorithms nbc obtained hop packet routing algorithms 
algorithm uses virtual channels physical channel theta tori 
algorithms nbc virtual channels physical channel 
hop schemes different algorithms sort priority information routing messages 
furthermore algorithm nbc tries balance load virtual channels feature attention previously 
purpose study see improvements network throughput message latency adaptivity features 
observations summarized follows 
fully adaptive algorithms necessarily yield better throughput non adaptive algorithms 
case point pn fully adaptive algorithm 
dimensional tori looks attractive provides full adaptivity virtual channels physical channel 
simulation results show cube algorithm outperforms uniform hotspot traffic patterns 
hand fully adaptive algorithms hop schemes nbc algorithms require virtual channels improve throughputs substantially 
traffic patterns hop schemes better algorithms 
comparison nbc algorithms indicates balancing traffic virtual channels yields higher throughput lower message latency throughput 
point observation algorithms compare cube hop algorithms 
routing logic complexity comparable fully adaptive algorithm performance similar worse non adaptive cube algorithm 
observation apply planar adaptive routing proposed chien kim entirely different type partially adaptive algorithm 
conducting simulations routing algorithms multidimensional tori meshes 
intend communication traces obtained computations parallel processors evaluate performances routing algorithms 
issue interest evaluation improvements throughputs addition virtual channels 
dally shows additional virtual channels improve performance cube uniform traffic 
indicates priority beneficial fully adaptive routing 
needed example see extensive amount priority information necessary 
issue balancing load virtual channels needs explored 
number virtual channels hop schemes concern ways reduce number substantially algorithms 
studying implementation aspects algorithms 
authors profs 
raghavendra panda discussions comments ear draft prof ram tripathi discussions convergence criteria simulations francis ho help developing simulator 
author research supported nsf ccr second author research graduate school uw madison 
simulations performed workstations cs lab antonio supported nsf ili program 
agarwal 
limits interconnection network performance 
ieee trans 
parallel distributed systems oct 
agarwal mit alewife machine largescale distributed multiprocessor 
proc 
workshop scalable shared memory multiprocessors 
kluwer academic publishers 
callahan cummings koblenz porterfield smith 
tera computer system 
proc 
int 
conf 
supercomputing 
berman gravano 
adaptive deadlock livelock free routing minimal paths torus networks 
proc 
fourth symposium parallel algorithms architectures pages 
bertsekas gallager 
data networks 
prentice hall 
boppana chalasani 
design wormhole routing algorithms reduced virtual channel requirements 
preparation 
boppana chalasani 
comparison wormhole routing algorithms adaptivity 
technical report cs university texas san antonio division math comp 
sci statistics san antonio texas nov 
boppana chalasani 
new wormhole routing algorithms multicomputers 
technical report univ wisconsin madison dept electrical computer engineering madison wi 
results th int 
parallel processing symposium 
borkar integrated solution high speed parallel computing 
proc 
supercomputing pages 
chien kim 
planar adaptive routing low cost adaptive networks multiprocessors 
proc 
th ann 
int 
symp 
comput 
arch pages 
dally 
network processor architecture message driven computers 
editors vlsi parallel computation chapter pages 
morgan kaufman publishers san mateo california 
dally 
express cubes improving performance ary cube interconnection networks 
ieee trans 
computers sept 
dally 
virtual channel flow control 
ieee trans 
parallel distributed systems mar 
dally seitz 
deadlock free message routing multiprocessor interconnection networks 
ieee trans 
computers 

design deadlock free adaptive routing algorithms multicomputers theoretical aspects 
parle parallel architectures languages pages 
gravano sanz 
routing packet switching performance wormhole algorithms 
proc 
supercomputing pages 
gravano sanz 
routing techniques massively parallel communication 
proceedings ieee 
glass ni 
adaptive routing networks 
proc 
int 
distributed computing systems pages 
glass ni 
turn model adaptive routing 
proc 
th ann 
int 
symp 
comput 
arch pages 
gopal 
prevention store forward deadlock computer networks 
ieee trans 
communications com dec 
kleinrock 
virtual cut new computer communication switching technique 
computer networks 
lam reiser 
congestion control store forward networks input buffer limits analysis 
ieee trans 
communications com jan 
linder 
adaptive fault tolerant wormhole routing strategy ary cubes 
ieee trans 
computers 
pfister norton 
hot spot contention combining multistage interconnection networks 
ieee trans 
computers oct 
elementary survey sampling 
duxbury press north mass edition 
seitz 
concurrent architectures 
editors vlsi parallel computation chapter pages 
morgan kaufman publishers san mateo california 
song 
design network concurrent message passing systems 
master thesis department electrical engineering computer science mit 

