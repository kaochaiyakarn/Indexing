draft notion proof hardware verification cohn university cambridge computer laboratory new museums site pembroke street cambridge cb qg england 
advances field hardware verification raised fresh familiar issues scope limitations formal proof 
note considered context viper verification project 
viper microprocessor designed royal signals radar establishment ministry defense safety critical applications 
credit designers intended start viper formally verified viper specifications language suitable formal reasoning placed design public domain 
viper microprocessors currently marketed verified chips 
formal proof aspects verification carried computer laboratory university cambridge 
date important properties register transfer level model viper relative functional specification proved author hol proof generating system 
verified systems viper commonplace near 
whilst proofs models systems obviously vital contribution trust important safety critical applications limitations approach understood 
material note appears 
verification hardware systems attractive application area theorem provers reasons 
hardware verification ways tractable problem software program verification easier write clear specification captures functionality system hardware software hardware proofs tend certain uniformity structure suited mechanical treatment 
second compelling economic reasons trying get hardware correct early correcting errors chip involve expensive re fabrication merely editing text 
increasingly important invest time effort verification hardware intended safety critical applications 
issues pertaining scope limitations verification raised project formally verify aspects viper microprocessor university cambridge 
note issues discussed done context viper remarks may general 
intention encourage intelligent understanding sense piece hardware called verified undermine research verification vital 
devices appear market verified mathematically proved possibly implication fail sharp watch kept unqualified claims failures convey sense extent nature verification effort 
applies particularly hazardous applications nuclear power plant control 
various computing systems years claimed verification proof akin fact doing distinct valuable formal proof explicit understood logic 
done simulation reasoning ad hoc logical systems informal reasoning purposes verification taken mean formal proof usual mathematical sense sequence valid inference steps 
viper microprocessor viper microprocessor designed royal signals radar establishment ministry defense henceforth safety critical applications civil aviation nuclear power plant control 
viper chips commercially available 
currently finding uses areas deployment weapons tactical aircraft 
support safety critical applications viper particularly simple design example interrupts usual sense permitted instruction set kept minimum machine designed detects error illegal configuration 
stopping feature intended support running simultaneously increased reliability 
simplicity design amenable formal analysis current techniques 
aspects formal mechanical verification viper hardware verification group university cambridge early late 
results project reported 
pilot study main proof reported 
hol verification system verification viper approached hol higher order logic theorem proving system derived milner lcf system logic computable functions version higher order logic formulated church 
hol implemented gordon university cambridge currently hardware verification group cambridge sites world 
verification understood viper designers lcf hol communities mean complete formal proof explicit understood logic 
proofs hol normally constructed interactively combining machine assistance user guidance fully automatically extent function user designed proof strategies 
models viper designers viper deserve great deal credit promotion formal methods intended start viper formally verified 
approach specify viper hierarchy levels concentrated specific aspect design 
level specification level implementation 
verification effort simplified structured abstraction levels 
levels description characterized design team 
levels part third written logical language amenable reasoning proof predecessor hol higher order logic 
systematic study abstraction hierarchies mechanisms modelling hardware discussed melham 
highest level specification viper simple state transition function describing way state representing viper memory visible registers changes viper executes possible instruction types see details 
specification operational semantics instruction set 
characterizes fetch decode execute cycle viper specify possible behaviours actual microprocessor 
particular capacity viper reset externally operator registers cleared outside covered capacity timing due memory failure fixed number clock cycles 
discussed verification concrete model relative top level specification consequently limited behaviour manifest top level 
proof establish viper resets times acceptable way 
concrete level called major state level 
level instruction processed sequence events single step 
event may affect visible registers memory top level specification internal registers comprise internal state 
internal registers part view viper necessarily correspond parts actual viper chip 
event sequence determined current event visible state internal state events terminal initial sequences 
new state transition function extracted properties established proof 
particular cumulative result sequence events processes instruction types inferred compared result corresponding high level state transformation function 
block model concrete level considered formal verification project design continues gate level circuit design principle formally verified 
block model designers form partly pictorial partly textual functional 
model consists blocks computational units viper instruction decoder arithmetic logic unit alu memory 
information passes blocks outside world fixed clock cycles 
functional specifications describe internal combinational logic various blocks 
behaviour time delay units give memory connections separate blocks covered functional specifications pictorial specification fills rest information 
major state level concept single instructions processed sequences steps built block model 
addition smaller steps implement major step 
block definitions pictorial information supplied designers fully formal description constructed sources block machine behaviour patterns logically inferred formal description 
block model isolates computational behaviour viper relate specifications top level specification major state model computational behaviours additions shifts negations comparisons considered detail 
block model specifies actual behaviours viper behaviour resets time outs appear top level formal specification 
block level begins approach functional units connectivity actual circuit way 
viper verification project correctness proof major state level viper relative top level specification straightforward lengthy hol possible execution sequences model explicitly 
conditions event follows explicitly defined 
proof consisted number cases instruction type cumulative effects sequence events processing instruction type inferred definition model 
case effects proved equivalent effects specified top level components appearing levels 
proved possible execution sequence considered justify case analysis 
correctness block model difficult establish 
task verification effort derive functional specification block model formal logic suitable reasoning proof obvious reason formally schematic diagram indicating transfer information sub units simultaneously 
second task infer behaviour block model functional representation 
major state level proof inferred instruction type accumulated effects registers block model steps process instruction performed 
involved extracting formal representation conditions step lead ii assumptions initial states normal behaviour order resolve state transitions 
implicitly determined functional representation block model major state level conditions explicitly assumptions required 
normal behaviour means behaviour scope high level specification 
example mentioned assumed verification viper block model machine reset time course processing instruction block machine timeout facility invoked 
initial conditions example include assumptions start processing instruction time counter set maximum value ii errors signalled 
shown state transition conditions covered logical possibilities ensure possible instruction types omitted analysis 
third task verify results block model relative results top level transformation function instruction type 
second tasks block model verification completed date giving provably correct complete description behaviour formal representation block model assumptions mentioned practical reasons third task completed 
tasks discussed 
limitations proof hardware verification notion formal proof began receive serious attention right just age computing 
computers assist formal proofs renewed discussion proof ensures 
may part prior reason insist machines construct proofs way mathematicians agreed standard evidence proof successfully completed machine sort mathematicians required supply 
section attention drawn fresh concerns raised viper verification project 
chips intentions verified ideally prove chip viper correctly implemented intended behaviour circumstances claim chip behaviour predictable correct intended 
reality actual device intention objects logical reasoning applied 
intended behaviour rests mind architects accessible 
course reported formal language checkable accuracy 
similarly material device observed measured verified 
device described formal way description verified intentions way assure accuracy description 
description bound inaccurate respects hoped mirror entire physical situation instant evolves time model device necessarily abstraction cation 
short verification involves pair models bear possibly imperfect relation intended design actual device 
points obvious merely philosophical 
errors top level specification viper major state model intended designers evident manufactured viper chips 
errors discussed 
errors fairly minor quickly repaired presence highlights limited sense actual product said verified architect intended design actual chip remains danger secure proof may models may wrong 
complete solution problem avenues approach explored 
particular produce clearer concise readable specifications intuitive plausibility increased 
extreme devise realistic detailed models correspondence actual devices convincing 
attention drawn points melham 
links designer verifier manufacturer actual viper chips appear suffer errors models illustrates quite nature research described 
chips process built time verification began major state model cambridge built advertised time block model undertaken 
whilst possible theory error specification reflected circuit design manufacturers specifications doubt architects minds designed circuit indirect links designers specifications circuit design process manufacturers verifiers problems specification propagate chip problems 
fact case manufacturers worked different design texts verifiers 
common models common language adopted studying models bear informal connection devices modelling 
respect reason hope common language agreed integrated approach taken 
lack fully formal description concrete levels description situation may complicated fully formal descriptions 
example viper top level specification major state level supplied logical language block level model partly formally partly pictorially natural 
combining parts required ingenuity guesswork 
guesses incidence line names names bound variables function definitions annotations text definitions 
notational devices regarded formal specification 
verification meaningfully applied cases fully formal description produced 
accuracy checked new formal description may flawed translation pictorial specification flawed combination picture text rigorously tested 
may proving properties formal description bearing imperfect relation intended design possibly know 
fact problem block level representation viper author attempt formal representation viper block diagram pair interchanged line names 
flawed description subsequently deduce plausible looking block results 
error representation discovered proof inspection 
problem accuracy representation appear gate level transistor level level linguistic description constructed creatively pictorial diagrams usual natural mode specification 
limits sense system called verified 
problem partly addressed previous section designers example position read formal description derived informal specification may able spot mistakes particularly require deep understanding design 
level completeness models verification relates implementation specification important explicit level abstraction degree completeness models question 
say device verified major state level register transfer level say simply verified 
example viper major state machine fully verified respect top level specification proof establishing equivalence sets results depends flow control models depend computational behaviours viper 
formal expression represents arithmetic logic unit levels expression evaluated 
fact viper verified major state level ensure essence microprocessor behaviour alu stage treated 
viper certainly basis usefully called verified 
block model viper concern viper arithmetic logical operations transfer information registers memory 
verifying viper block level significant step verified microprocessor 
case proof fully completed level 
block model concern gate layout transistors electrical effects timing problems similar areas errors particularly appear 
areas enormous amounts research remain done finding useful tractable models verify 
term verified properly indication levels models involved 
level abstraction properties included ignored 
addition models involved may incompletely specified 
example viper highest level specification complete processing instructions cover features resetting timing machine possible behaviours specified block level 
outset restricts analysis high level behaviour missing subtle issues 
normality assumptions discussing proved viper verification project indicated certain assumptions initial normal behaviours order infer cumulative effects processing instructions 
assumptions perfectly natural reflect fact devices intended operate certain conditions 
cause concern assumptions ignored claims proved 
formal correctness statement course persistent assumptions appear explicitly antecedents implication 
informal summaries advertising material assumptions easily overlooked 
example effect viper instructions registers block model deduced 
done assuming machine initialized reasonable way assuming run certain ideal conditions 
effect deduced say assuming reset operation occur useful effect specified top level 
fully verified block design remain incorrect resetting behaviour error propagate despite proof chip 
illustrates importance knowing conditions block model analyzed 
putting formal proof context correctness representation system placed context talk reliability safety critical applications 
author claims expertise field reliability obvious limited sense correctness example viper equivalence register transfer level specification functional specification fetch cycle issues considered collectively 
aside possible problems concrete levels description discussed safety depend factors outside world formal description range issues social administration communication staff training group behaviour performance mechanical chemical parts 
contemplate mass catastrophes years perceive predominant role played extra logical factors 
author guess expert opinion sort design correctness discussed importance relatively minor contribution reliability real systems 
state research representation proof weak links designer verifier manufacturer 
hardware design verified fairly level idealized operating conditions part control system hazardous applications large populations land masses may destroyed significantly safer design 
number extra logical factors involved word verified circumstances allowed confer false sense security 
various limitations word verified obscured claims taken promotional material viper commercially available 
formal specification proof chip conforms 
unique feature viper instruction set specified mathematically 
gate level logic design proven conform specification 
discussed chip verified just imprecise words 
second example depending interpretation proven called false claim formal proofs viper author knowledge far done near gate level 
gate level design viper checked innovative simulation method called intelligent exhaustion formally verified 
assertions quoted taken assurances impossibility design failure safety critical applications catastrophic results 
summarize ffl intended behaviour physical chip object word proof meaningfully applies 
intention chip may may inadequately represented formal language verifiable 
ffl weak links designer verifier manufacturer obvious errors deduced specifications manifest actual products 
ask extra security verification currently affords 
argument continued research verification 
ffl verification effort necessarily limited behaviours specified level 
clearly stated system called verified actual features covered 
ffl clearly stated level concreteness specifications extend 
fair expect concrete models greater likelihood finding errors design particularly errors propagate actual product 
model abstraction material device correct call system verified level models 
ffl working assumptions initial states normal behaviours appear verifications claims 
particularly informal descriptions assumptions may evident 
ffl proof specification implements despite completely rigorous expressed explicit understood logic checked system viewed context extralogical factors affect correct functioning hardware systems 
addition design system operators mechanical parts function correctly correctly avoid catastrophe 
long time mechanical theorem proving sufficiently difficult researchers frequently drew simple occasionally simple mathematical problems exercise mechanical proof systems 
advances theory technology proof efforts feasible appeared large labour intensive 
sophisticated theorem proving environments modern stations operating systems editors supported progress 
proofs example basic theorems arithmetic correctness schematic compiling algorithms choose examples challenging problems time current verification efforts focusing properties realistic commercial hardware designs 
viper microprocessor examples include verification hunt boyer moore system fm computer designed hunt purpose verification verification hol joyce computer designed gordon purpose verification verification hol herbert ecl chip network interface designed hopper part cambridge fast ring verification hol melham ring simple ring network designed burrows 
able verify real hardware designs useful levels detail 
remarks note taken pessimistic just cautious 
verified hardware begins life critical applications include fly wire aircraft bomb deployment systems nuclear power stations medical equipment automotive braking systems railway signallers increasingly important insist word verified synonyms modified qualified explained know exactly claims assess intelligently 
section problem mentioned establishing standard evidence having achieved proof mechanical theorem prover 
capacity long chains primitive inferences proofs comprise particular procedures constructed proofs far favour 
viper block model proofs consist primitive inference steps example procedures generate comprise dozens pages code functional programming language ml 
question proof evidence typical variety foundational issues note point addressed 
example consistency special purpose logic established standard problem easy 
worse asked basis place confidence implementation theorem proving methodology operating system runs hardware host machine built 
pragmatic answer topic planned research cambridge reduce number systems trust agreeing standard proof deliverables 
agree proof output format proofs produced site independently mechanically checked 
idea context hardware verification due hanna 
part attraction proof checking generally difficult proof construction 
research goal find uniform representation language involved producing hardware device designers clients verifiers help integrate various communities reduce danger example models verified differ plans manufacturers 
increase chances errors turned verification actual errors physical devices 
higher order logic proposed purpose standard logic candidate 
large step reliable systems verification effort extending way software level gate level 
research currently planned area jointly university cambridge sri international cambridge ii computational logic texas 
research continuing various places models realistic levels representation hardware hope expressing locating subtle worrying errors digital systems 
models appears shortage theorem proving tools verify 
tom melham mike gordon helpful comments discussions 
thomas forster 
opinions expressed author 
viper verification cambridge supported 
preparation note suggested larry wos supported science engineering research council 
boyer moore computational logic academic press gordon melham hardware verification higherorder logic proceedings ifip wg working conference descriptions guaranteed correct circuit designs grenoble september ed 
north holland amsterdam church formulation simple theory types journal symbolic logic cohn machine assisted proofs recursion implementation ph thesis dept computer science university edinburgh cohn gordon mechanized proof correctness simple counter university cambridge computer laboratory tech 
report cohn proof correctness viper microprocessor level vlsi specification verification synthesis eds 
birtwistle subrahmanyam kluwer university cambridge computer laboratory tech 
report cohn correctness properties viper block model second level proceedings conference hardware verification banff canada published springer verlag university cambridge computer laboratory tech 
report viper microprocessor formal specification report oct viper correspondence specification major state machine report jan implementing safety critical systems viper microprocessor vlsi specification verification synthesis eds 
birtwistle subrahmanyam kluwer forthcoming book viper computing devices computing devices hastings viper project viper weapons stores management viper microprocessors high integrity systems enq 
issue september viper technologies worcester england gordon milner wadsworth edinburgh lcf lecture notes computer science springer verlag gordon hol machine oriented formulation higher order logic university cambridge computer laboratory tech 
report gordon hol proof generating system higher order logic university cambridge computer laboratory tech 
report revised version vlsi specification verification synthesis eds 
birtwistle subrahmanyam kluwer cambridge consultants computer module viper microprocessor viper microprocessors high integrity systems enq 
issue july august september viper technologies worcester england herbert gordon formal hardware verification methodology application network interface chip iee proceedings computers digital techniques special issue digital design verification vol 
part draft version university cambridge computer laboratory tech 
report hunt jr fm verified microprocessor university texas austin tech 
report joyce formal verification implementation microprocessor vlsi specification verification synthesis eds 
birtwistle subrahmanyam kluwer viper microprocessor safety critical applications memo 
dec melham abstraction mechanisms hardware verification vlsi specification verification synthesis eds 
birtwistle subrahmanyam kluwer melham forthcoming ph thesis university cambridge computer laboratory paulson logic computation cambridge university press viper electronic block model report july formal proof correspondence specification hardware module gate level implementation report nov viper microprocessor verifiable integrated processor enhanced reliability development tools charter technologies publication 
issue dec application admission registration form second viper symposium england september 
