appear journal visualization computer animation press 
genetic programming articulated motion hahn department ee cs george washington university nd street nw room washington dc email seas edu summary approach articulated motion motion tasks defined terms goals ratings 
agents dynamically controlled robots behavior determined robotic controller programs 
controller programs robots evaluated time step yield torque values drive dynamic simulation motion 
ai technique genetic programming gp automatically derive control programs agents achieve goals 
type motion specification alternative key framing allows highly automated learning approach generation motion 
method motion control general applied type motion allows specifications types specific motion desired high quality animation 
show complex specific physically plausible aesthetically appealing motion generated methods 
key words computer animation genetic programming evolutionary computation learning robotics tradeoff control automation known problem computer assisted character animation 
goal researchers allow automation agents maintaining control 
despite professionals key framing automatic motion control schemes allowed sufficiently specific control agents 
laborious tedious process professionals high quality motion difficult achieve skilled animators 
propose new technique animating articulated figures highly automates animation process extremely general variety motion tasks allows user quite specific motion generated 
find humans may know specify motion easily recognize bad motion see 
technique adapted strengths weaknesses 
guiding principle system generate motion human provide determination 
method employs ai technique genetic programming gp 
gp technique thought perspectives 
agents dynamic robots actions determined controller programs 
gp allows find controller program action want agent perform 

animator need provide controller programs metric motion 
suspected may easier quantify rate motion fact generate description motion 
turned case particularly people professional animators 

process developing controller programs thought learning process planning process 
surprising number interesting motion control problems stated problems program induction 
know solution problem appropriate formula computer program sure write program 
gp allows find appropriate controller program agents achieve goals 
related witkin kass proposed spacetime constraints method automatically generating motion enhanced cohen 
goal see principles animation outlined derived automatically principles 
spacetime constraints generates kinematic motion satisfies high level goals jump appears physically plausible 
resulting motion tended exhibit principles traditional animation squash stretch anticipation follow 
method involves optimizing kinematic positions articulated energy consumption objective function constraining solution order ensure motion physically plausible 
unfortunately method suffers drawbacks numerically unstable solution depends initial guess provided optimizer solution easily local minimum energy may best criteria optimize method appears need significant amount hard coding mathematical sophistication 
researchers proposed methods automatically generating walking motion search optimization techniques 
gave impressive results yielding physically plausible motion automatically finding number walking methods 
resulting motion high specialization walking gaits general motion low specificity simply walked forward having specific instructions walk position 
methods optimizing structures fixed complexity network fixed topology stimulus response table respectively 
believe disadvantage 
chose different representation mathematical description computer program describing joint forces vary time changes state simulation 
believe representation offers advantages 
representation appropriately optimized gp technique 
interesting note karl sims gp process evolve procedural textures fitness metric human evaluation 
sims wrote describing evolutionary programming design entire creatures creature topology evolved walking swimming contrast deals figures fixed topology geometric structure expect character animation 
genetic programming genetic programming gp evolutionary metaphor similar genetic algorithms ga 
major difference ga usually operate fixed length binary strings gp operates computer programs varying complexity 
advantage approach complexity optimal solution problem known priori 
ga complexity length binary strings specified start 
hand gp evolve complexity level appropriate problem 
basic gp algorithm simple may explained briefly 
particular optimization problem solution computer program 
operate programming language representation simplicity operate program parse trees 
parse trees represented lisp expressions 
shows typical parse tree associated 
parse tree expression correspond formula algebraic notation parse tree corresponding expression 
note parse tree consists root node may optionally special function list functions arguments terminals leaves tree numerical constants named variables functions take arguments 
gp paradigm requires problem dependent inputs 
set terminals constants named variables set functions parse trees generated 

fitness function returns measure performance arbitrary individual program 

termination criteria recognizes come individual program adequately solves problem hand 

number individuals population maximum number generations calculate miscellaneous variables control workings gp run 
generation start population randomly generated individuals programs fitness function rate performance 
expect fitness values random individuals quite low chances slim random computer program solve problem exactly 
form populations subsequent generations genetic operators reproduction copies alteration individuals previous generation high fitness values 
crossover combines individuals previous generation yield new individuals 
typically done swapping randomly chosen subtrees programs see 
mutation replaces randomly selected subtree new randomly generated subtree 
individuals involved operations typically selected type fitness proportionate manner unfit individuals tend generation highly fit individuals tend survive 
alterations resulting crossover result individual programs fit programs seen previous generations 
parse trees crossover left side 
bold regions denote subtrees selected crossover 
resulting parse trees crossover right side 
cycle repeated generation maximum number generations reached individual adequately solves problem hand meets termination criteria 
generation tends individuals higher fitness previous generation results finding optimal individuals blind random search 
highest level gp algorithm formalized population size maximum number generations run create random programs generation gen fitness individual individual solves problem adequately terminate endfor construct generation gen reproduction crossover mutation endfor report best individual 
genetic programming paradigm driven stochastic processes initial population random programs probabilistic selection individuals reproduction crossover guaranteed solution problem solved particular run 
perform multiple independent runs different random number seeds run find solution adequate 
system overview conceptual layout system shown 
perspective animator gp dynamics subsystems may treated black boxes 
abs abs abs abs controller program gp system fitness metric articulated dynamics simulation model input supplied user system black box output input output system animation system needs understand dynamics articulated figures agents involved simulation 
information supplied dynamics computed properly 
model includes connectivity geometry masses various links descriptions capabilities joint limits force torque ranges muscles pressure sensors 
information generally change course entire animation 
motion sequence animator supply fitness metric words formula rate motion sequence 
rating low number prospective motion sequence close wanted user higher number deviates goals 
nature fitness metric discussed 
gp run finished final output gp subsystem single controller program 
controller program govern actions simulated agent resulted best rated agent user supplied fitness metric 
controller program may generate motion control needed animation 
dynamics subsystem dynamic system simulates physics articulated bodies 
dynamics methods outlined model articulated figures trees rigid links 
joint controlled internally damped angular spring 
joint neutral desired orientation 
spring pushes joint desired orientation torque proportional angle actual desired orientations 
called proportional derivative pd controller common technique computer animation robotic control 
rigid link rigid link joint deg 
freedom actual position desired position link torque joint proportional angular difference actual desired orientations links desired angle output controller program 
time step integration robotic controller program evaluated 
controller program interpreted list desired orientation angles joints 
differences desired angles actual angles yield torques forces drive 
structure system system dynamics performs collision detection response guaranteed resulting motion appears physically plausible 
simulation motion sequence controller evaluate controller yielding desired joint angles integrate dynamics forward time dt dt endwhile gp subsystem gp subsystem runs basic gp algorithm described earlier 
time evaluate fitness individual dynamics subsystem invoked simulate situation particular individual robot controlling program 
simulation user supplied fitness evaluation function rates performance statistics collected dynamics program 
earlier alluded notion gp system needs appropriate set functions terminals parse tree leaves constructs controller programs 
large extent customizable requires careful judgment 
want terminals functions needed solve problem slow search correct solution 
hand particular problem unknown solution requires function set find correct solution 
short want minimal set basis functions allow controller perform duties 
functions parse trees minimally consist basic arithmetic functions 
critical include operator takes subtrees arguments evaluates value evaluate return second subtree evaluate return third subtree 
consider set primitives minimal sufficient 
certain models motion tasks may advantageous add mathematical functions cos aid generation internal oscillators abs control functions functions specific model task hand distance nearest obstacle functions produce side effects evaluated release grip 
functions add depends largely functionality built models controlled intuition designer considering particular motion tasks 
terminals controller programs correspond internal state variables agent outputs sensors accessible agent 
example may terminals named variables correspond agent position velocity joint angles external forces limbs terminals look sensor outputs state variables evaluated 
words variables continually updated dynamics subsystem contain different values controller evaluated integration step 
possible variables contain status subgoals variable may nonzero subgoal met allowing statements controller program switch behaviors point 
addition named variables useful numerical constants 
know constants useful simply initial random population parse trees randomly chosen floating point values 
known gp technique called ephemeral random constant described detail 
indicates protected division identical cause exception division zero 
structure controller program naturally reflects model task hand 
case want torque values joints root nodes parse trees lists length number degrees freedom controllable agent 
element list controller program particular degree freedom 
case trees constrained topology original random trees lists crossover operation guaranteed disturb structure 
evolved program consists mini programs controlling joint 
mini programs joints evaluated independently built primitives may consist state variables agent controller programs different joints may produce coupled actions 
nature gp paradigm tends produce coupled motion advantageous independent motion approach productive 
lack externally imposed structure controller solution works advantage gp naturally evolve solution structure appropriate problem solved 
constructing fitness measures system understands dynamics capabilities agent run dynamics simulations 
gp subsystem generates controller programs potential solutions motion control problem hand 
controller programs passed time fitness function responsible generating rating controller 
fitness function uses dynamics system simulate motion particular controller program uses statistics supplied dynamics system compute fitness rating 
evaluate fitness controller simulate motion controller fit main goal style points return fit generating actual motion fitness metric results motion seeking specified small amount code 
conceptually divide fitness measure main goal style points 
main goal simple metric primary task motion sequence fulfilled 
example point motion sequence move main goal simply distance time remember lower numbers correspond better performance 
controller list expr expr expr expr expr dof dof dof controller programs lists giving mini control programs degree freedom agent 
motion grossly underconstrained gp system find ways meeting simple fitness requirement 
example goal point hopping 
find useful add style points thought additional rewards penalties granted individual performance 
examples style points include 
penalties hitting obstacles violating safety rules don hit head floor 

rewards performing action quickly slowly 

penalties inefficient behavior long way obstacle sitting long time rushing gets close time limit 

rewards neutral positions remaining control don want actor tangled laid floor completes action 

rewards minimizing energy consumption useful times 
time improve quality motion significant way 
energy considerations useful effects tended subtle important style considerations 

problem dependent terms certain subgoals met 
section clarify role terms fitness function discussing specific examples 
results revisited example returns desk lamp 
appropriate film jr completely key framed dependent exhausting labor highly skilled animator considered computer animation quality 
wanted teach lamp able move 
considered success simply move forward wanted generate controller program bring rest particular spot show perform intricate scripted motion desired 
lamp model fully dimensional articulated body links internally controllable degrees freedom 
dynamics simulated 
geometry masses system 
lamp access position relative goal point velocity amount force imparted base contact floor 
set terminals consisted state variables described time random selection floating point constants 
function set consisted 
choices suggested prior gp research especially 
experimented fitness measurements 
successful blend constraints 
main goal distance base center goal point time 

style points weighted sum bonus completing motion early time take get 
penalty excess movement goal met keep got done 
penalty hitting head falling 
bonus joints neutral angles 
formula computed fitness metric access statistics computed dynamics subsystem surprisingly small half dozen lines code 
immediately placing style considerations motion give gp process best opportunity discover fit individuals simply restrictive 
solved problem rating controller programs main goal generations 
slowly phased style considerations generation generation 
effect teach get regard fell afterward ended neutral position 
mastered task placed restrictions 
time got th generation motion included full set style considerations 
manner allowed motion start crudely get progressively stable generations 
easier system requiring optimal motion start 
example ran gp system generations population individuals 
new generation new individual programs generated crossover remaining generated reproduction 
mutation examples described significant compared crossover 
parameters suggested experiments indicate results particularly sensitive changes values 
resulting controller program produced hopping motion brought lamp exact spot desired see 
motion appeared smooth physically realistic efficient surprisingly organic 
note solution involved hops 
solution severe discontinuities collisions local gradient optimization method spacetime constraints 
shows sample controller program successful jump 
controller programs usually opaque human interpretation generally concerned robot internal mechanisms movement 
list pz pz pz vx vx vz pz pz px vx vx vx vx vz vz sample successful controller program 
named variables correspond angle force position velocity sensors 
resulting programs generally easy humans interpret 
particularly enlightening view progress learning process generation generation 
views motion sequences best individual generation easy believe single lamp learning trial error 
evolved controller programs enable lamp wanted see system handle obstacles severely constraining conditions 
decided teach lamp limbo 
genetic system single additional style term large penalty hitting head limbo pole able produce series motions various heights limbo pole 
motions animated short film xo learns limbo 
resulting motion convincing 
motion slight imperfections times incorporated seemingly clever strategies appeared organic robotic see figures 
lamp jumping motion 
primary task target point shown 
note resulting motion brings lamp specific target point desired illustrating high level control 
humanoid test intended see paradigm scale models degrees freedom 
modeled articulated humanoid taught variety simple tasks 
total degrees freedom 
degrees freedom controlled genetic controllers time depending motion task simple dynamic control 
genetic programming step left function set 
terminal set expanded include internal joint angles force sensors positions effectors 
depending motion task genetic runs generations comprised individual controller programs 
similar goals style points described able train humanoid perform number simple nontrivial motion tasks 
included pointing gesturing touching objects parts body 
shows sequences learned motions 
discussion propose guidelines determining system successful 
generate complex general motion 
lamp learn avoid obstacles additional constraints added system 
herman learns variety tasks 
touching grasping targets gesturing touching nose 
animator retain control easily generate motion specific tasks 

motion physically plausible 
physically implausible motion viewer 

motion appeal 
look organic 
imagine emotional content 
believe technique satisfies criteria generating variety motion tasks 
way hard coded particular type motion able generate motion matches specific goals 
motion physically biologically believable construction agents 
resulting motion sequences pass hardest test entertaining watch 
xo learns limbo video prime example 
motion fluid believable constructed fitness metric dozen lines code 
feel efficient method task key framing 
development fitness metrics skill easier skill develop motion specification 
fitness metrics developed trial error subsequent fitness metrics different tasks models substantially similar needed little tweaking different motion tasks 
admit choices fitness metrics function terminal sets somewhat ad hoc 
continuing research addresses issue exactly fitness measures best members function terminal sets essential choice parameters affects efficiency learning 
learning process takes time proportional number generations number individuals generation amount time simulate trial accuracy integration 
individual controller program evaluated simulation dynamics 
simulation calculated faster real time performed roughly different individuals 
examples computation time order minutes generation mips processor 
may particularly fast technique terms cpu time quite efficient human animator time 
addition gp algorithm easily lends massive mimd parallelization simulation evaluation individual controller program performed independently 
currently exploring parallelization scheme 
clear deficiency scheme brittleness resulting controller programs 
learning process produces controller particular task general skill controller sensitive initial conditions 
currently exploring ways robust controllers 
just begun promising area 
possible extensions including putting intuitive interface package allow automatic construction tuning fitness metrics evolving robust controller programs complex tasks walking uneven terrain obstacles building libraries hierarchies controller programs 
explore relationship key framing automatic motion generation 
clearly situation 
key frames may hints constraints automatic motion generation automatic motion may starting point key framing 
addition suspect advantageous degrees freedom generated automatically key framed 
acknowledgments partially supported nasa gsfc ncc 
members graphics lab helpful discussions reviews 
witkin andrew michael kass 
spacetime constraints computer graphics august 
cohen michael interactive spacetime control animation computer graphics july 
john 
principles traditional animation applied computer animation 
computer graphics proceedings siggraph pp 

ngo thomas joe marks 
spacetime constraints revisited proceedings siggraph pp 

van de panne michiel eugene fiume 
sensor actuator networks proceedings siggraph pp 

sims karl 
artificial evolution computer graphics 
computer graphics 
sims karl 
evolving virtual creatures computer graphics proceedings annual conference series proceedings siggraph pp 

koza john genetic programming 
mit press 
goldberg david genetic algorithms search optimization machine learning 
addisonwesley 
davidor yuval 
genetic algorithms robotics heuristic strategy optimization 
world scientific 
davis lawrence ed 
handbook genetic algorithms 
van nostrand reinhold 
steele common lisp language 
digital press 
armstrong william mark green 
dynamics articulated rigid bodies purposes animation visual computer springer verlag pp 

hahn james realistic animation rigid bodies computer graphics august 
wilhelms jane 
dynamics computer graphics tutorial siggraph course notes human animation approaches applications pp 


jr 
computer animated film 
xo learns limbo 
