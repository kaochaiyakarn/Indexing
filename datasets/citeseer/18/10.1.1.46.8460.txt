memoir software agents finding similar users trails dept informatics university athens gr di uoa gr hall reich dept electronics computer science university southampton uk wh srg ecs soton ac uk hill southampton uk com parallel applications centre southampton uk mas pac soton ac uk researchers working vast quantities information geographically distributed manner confronted problems finding relevant information colleagues related interests 
memoir project aims assisting collaboration applying agent technology user trails documents 
memoir open architecture existing web infrastructure contrast web treat links trails class objects 
agents mine users trails links perform resource discovery tasks searching web 
describes design communication mechanism implementation memoir agent system currently user organisations 
finding people similar interests difficult efficiently accessing documents related information 
especially true research oriented globally distributed organizations pharmaceutical companies 
memoir project managing enterprise scale multimedia open framework information re addresses problems supporting user extra assistance provided set software agents 
approach memoir takes twofold firstly advanced hypertext technology order allow users manage associations different types documents independent flexible way 
secondly take documents user trails data source agents exploit 
users similar interests follow similar paths trails leave compared 
matching trails find similar users 
links advanced hypermedia architectures information links multimedia documents stored managed separately documents remain native formats 
links objects right link data consisting set associated anchors endpoints locations documents related information 
links kept called linkbases corresponding servers named 
web link consists embedded url class links describe thought collections urls associated source anchor destination associated information 
trails trails seen threads different user activities 
opening viewing document link url common type activity 
interesting activities users perform printing document indicate special interest high priority mailing document similar indications 
distinguish basic entities trail marks trails trail composed number trail marks user decides contained trail 
dim agents adopting separate links important advantages authors readers alike see especially working complex distributed information system 
trail information provides means answering questions seen document read 
systems class links trails complex engineer 
agent paradigm suited working class links trails 
defining term agent controversial unfinished task 
purposes define agent software entity responds request user agent 
problem domain address distributed information management call agents dim agents 
fact tackle dim applications weak agents perspective agents autonomous reactive proactive social ability appropriate mobile intelligent 
addition resource discovery emphasise role dim agents resource maintenance integration 
structured follows 
section characterises agents memoir describes architecture agent system different layers agents 
underlying algorithms agent communication section 
section deals related 
finish summary section 
memoir agent system section describe agents system memoir framework 
memoir agents provide single multiple responses user request 
example consider case user wants know seen particular url 
single reply returned user reactive agent mines persistent repository users trails order satisfy request 
hand agent monitors status specific url returns response time url changes status 
agents capable answering multiple stages called persistent agents 
approach agent answer user request providing increasing degree refinement results stage 
persistent agents may call non persistent ones necessary 
memoir persistent agents adopted building user profiles monitoring urls tasks including simple database queries keyword extraction documents accomplished non persistent agents 
turns certain cases user want interact agent order provide input corrections 
persistent non persistent agents may possess certain degree user interaction 
agents primarily mine linkbase order accomplish user initiated tasks 
issue simple complex database queries linkbase extract user document related parameters users trails links 
keyword extraction considered operation acts urls aiming enhance content addition keywords 
similarly building user profiles viewed operation extracts user model parameters users trails links 
additionally agents may check integrity data link integrity agent checks format structure urls correct documents attempt repair links documents move 
agents may accept input user initiation process mode depending designed agent functionality 
agent architecture order understand embedding agent system memoir framework give brief overview different components interaction see 
key component message router acts hub system services register 
component services available registering details services message router turn route particular requests components newly registered 
messages querying currently available services part set message router services 
model servicing component allows system dynamically tailored specific needs 
new services easily added multiple providers service possible 
adopted particular solution service broker simple flexible dynamically extensible uses standard tools infrastructure requirements target installations 
standard java enabled web browsers serve user interface memoir system order minimize installation maintenance overhead 
configuration necessary set called interface manager proxy server connect interface manager proxy server web document management message router agent server user authentication interf 
www browser application key memoir component rd party component non components memoir framework 
order log 
shows sample session basic memoir browsing panel additional browsing window 
interface manager behaves proxy server able listen user requests commands 
configured caching proxy 
interface manager users view web document management systems linkbases 
existing data re stored system meta data document keywords extracted stored data repository 
authentication component responsible managing user authentication 
far possible component relies existing user management systems 
distributed object oriented database system underlying data repository 
provides framework agents implemented directly lisp data manipulation language 
communication protocol interface component provided allowing communication database see 
interface component server process provides access database translating commands lisp function calls 
agent server current agent system architecture conforms principles modularity distribution openness characterise memoir project 
result apart set agents considered necessary add component named agent server accomplish tasks ffl act agent service broker provides provides list available agent services rest memoir 
ffl hide agent implementation details memoir components 
memoir user interface 
ffl control flow messages agents agent agent communication needed 
ffl control flow messages agents memoir components message router interface manager agent server multi threaded server entirely implemented java talks 
chose java implementation language mainly due portability features 
exist multiple agent servers 
case different agent servers assigned possibly overlapping sets agents 
agent server registers set services message router 
message router decides redirect user request agent related task accomplished see 
community agents layer designed implemented hierarchical layer architecture memoir agent community 
layer consists non intelligent non persistent reactive agents performing simple tasks database queries relatively low complexity 
example consider search agent receives input list urls looks published trails similar input list 
order compute similarity score trail agent counts urls trail common input list 
agent receives input user agent 
set usage multiple agent servers 
agent server assigned set consisting agent agent server aware set agents 
case sets agents non overlapping 
case user explicitly triggers agent receives results case results subsequently processed agent provided input 
preliminary result user evaluation layer consists expanding set agents 
followed modular approach new agents added redesigning existing ones 
crucial time new agent added agent servers aware addition 
current phase project agents automatically register agent server startup 
registration performed human intervention 
phase restriction removed kqml approach 
second layer second layer includes intelligent complex possibly persistent agents considered information brokers 
suggest documents reading find users similar interests agents call layer agents retrieve returned results combine way give intelligent answers see section 
agent algorithms section gives overview representative algorithms adopted design agents second layer 
due user requirement real time response times computational complexity algorithms kept low possible reducing usefulness returned results 
example second layer agent recommends reading set urls input 
numbers arcs demonstrate sequence complex agent calls agents layer 
algorithms layer agents section introduces layer search agents find trails similar set urls people trails similar set urls people trails contain set keywords respectively 
agents receives list urls input provides set urls similar input 
agent compares input list published trails 
comparison matching score computed 
matching score equal number urls input common trail compared 
trails resulting matching costs exceed pre defined threshold rejected irrelevant 
similar trails ordered matching cost returned 
second agents employs similar technique described order mine users similar trails 
input list urls 
list representative interest user compiled 
user input list compared trails 
comparison matching cost generated 
sum matching costs provides similarity measure user compiled input list user trails examined 
similar users ordered similarity measure calculated 
previous agent thresholding mechanism employed order shorten length returned list users 
third agent retrieves user trails keywords provided input users 
memoir keywords stored metadata url part published trail 
user calculates matching cost number occurrences input keywords published trails user 
resulting users ordered previously calculated matching score 
thresholding employed agent 
algorithms agents second layer second layer agents previously described agent functionality intelligent processing results 
section describes agents recommend reading assist user order find colleagues experts particular domain interest 
agents complex agent directly invoked user 
input list urls representative user interest 
step agent calls previously described layer agent order find trails similar input 
returned set similar trails turn input search agent returns ordered list frequently appearing urls set trails 
possible ordered list contains urls user gave input suggested reading agent 
urls filtered 
remaining ones comprise set suggestions shown user 
additionally web browsers user interface launch window replace current top window content new document 
second complex agent intended retrieve experts certain domain 
experts domain characterized people owning trails domain relevant keywords 
user describes set keywords topic wishes find expert 
step agent examines queries kept order determine similar queries asked users past 
assumption user option queries publicly available 
agent detects similar queries returns names people queries 
user opportunity contact people order ask know expert secondly agent examines home pages users find home page contains keywords describe topic 
examines users trails contain specified keywords final stage links contain specified keywords 
results stage may returned separately user agent perform filtering operation order combine results various stages 
agent agent communication memoir framework peer peer agent communication desired feature 
means bi directional communication feasible agents 
implemented agents lisp java 
lisp chosen agents data manipulation language wanted reduce communication overheads 
java mainly chosen reasons platform independence 
communication agents implemented language done function calls method invocation 
communication example lisp java agents done memoir message format tunneled 
sample request suggested reading look follows get memoir msg 
sendmessage www pac soton ac uk memoir memoir ecs soton ac prototype demonstrates routing message 
message sent message router 
message router turn know component able deal message case agent server 
agent server assign agent 
agent query database web intelligent weighing results return answer look document follows server suggested documents www pac soton ac uk memoir content html www pac soton ac uk memoir intro html memoir message format open extensible structure earlier open hypermedia project microcosm 
format uses simple tag value pairs required set tags normal operation system additional tags easily added extend information carried suit new functions 
current implementation format data carried url form data supports textual information readily extended accommodate binary data necessary encoding message body method 
openness framework allows straightforward integration existing information infrastructure may document management systems databases 
necessary newly added components provide interface 
stateless protocol 
order able deal stateful information allow user asynchronous fashion allow agents report results back user quit session 
extended memoir set messages additional tags 
mainly include query id request id rid flag expressing asynchronous behaviour 
query id composed component id simple string number managed component order keep record sent received messages 
allows example user interface group user requests answers identifying refer id exactly task request id component answers request incoming message id request id sends reply message new message id case result delivered user logged system result stored message box database 
related area agent systems systems prototypes considered relevant 
section describe systems approaches lisp agent java agent communication numbers arcs demonstrate sequence communication events take place 
address respect idea supporting user collaboration internet 
grouped various systems categories ffl information filtering systems ffl systems users browsing behaviours ffl recommender systems note systems fall category categories overlapping 
describe systems category believe fits 
information filtering systems information filtering systems apply different algorithms pattern matching contextual analysis order provide users information specified textual way 
news services input 
users define preferences giving keywords voting pages 
category systems includes atlas server beehive 
memoir mainly differs systems higher degree automation users express interests simply documents viewing storing trails 
agents process data order extract similarity scores 
systems users browsing behaviours category systems provides tour guide agents accompany users page page providing assistance browsing navigating 
agent knowledge learning previous tours hypertext structure 
systems category webwatcher letizia care collaborative agent systems group recommender systems :10.1.1.31.3135:10.1.1.147.3204
memoir project done experiments trail information generating guided tours providing users interface creating guided tours 
main difference approach taken memoir systems mentioned implements notion trails class objects 
recommender systems recommender systems stand exemplary category systems idea users face problem having choices sufficient experience rely people recommendations 
recommender systems assist process 
user trails main source providing assistance recommender systems intelligent agents weighing user votes instances usenet articles general music albums artists mail 
fab uses user votes content filtering techniques 
memoir described recommender system 
implicit information automatic extraction user profiles 
mentioned trails links serve source agents 
mentioned memoir different focus recommender systems memoir finding people similar interests matching trails recommender systems deal issue giving users suggestions users experience 
summarising obvious simply number related systems quite interest including commercial interest exploiting idea supporting collaboration people analysing information people looking 
may similar ideas systems systems fully exploits idea trails 
re paths followed users intelligent analysis user browsing behaviour explicitly implement notion user trails 
probably closest memoir aims finding similar people 
follow idea user trails systems support openness flexibility memoir 
idea open flexible framework easily extended agent technology input data supported systems 
notable exceptions 
summary described agent architecture memoir 
defined agents inter operate memoir framework explained agents communicate algorithms base 
memoir prototype currently evaluated corporate users participating project 
sub groups evaluation organisations include researchers typically need browse search large numbers documents prior selecting wish read 
technical support people need access similar information typically way leads rapidly possible particular information sources participate evaluation 
evaluation process split phases ffl phase installation primary testing ffl phase intensive user centred evaluation ffl phase wide availability 
evaluation currently starting phase undertaken 
firstly open extensible architecture memoir general proven successful 
additional modified agent functionality easily introduced system simply registering new service message router 
proxy approach tracing user data shown successful minimal installation overhead easiness introducing new functionality mine data 
secondly treating trails links class objects allows find similar users users actual browsing behaviour additionally links class objects held separate linkbases embedded documents allows users structure documents share structures users 
believe approach taken expert finder find similar users matching user queries innovative promising 
lastly agreed set textual messages communication agents system components allowed implement agent functionality different languages appropriate application domain 
agents mainly mine database implemented lisp agents crawl internet implemented java 
confirms open approach 
editors members memoir project contributed 
particular andrzej alastair roger james steve richard miller roger rowe eric christophe jacques hal gerard hutchings chris scott parallel applications centre 
acknowledge support european union esprit programme funds memoir project 
reich supported austrian fonds zur der wissenschaftlichen forschung fwf 
inf 
acknowledge support epsrc project 
gr 
autonomy 
tech 
rep autonomy university avenue suite palo alto ca 
available www com 
atlas server 
tech 
rep development south mary ave suite sunnyvale ca 
available www com products atlas pdf 
personal knowledge manager 
tech 
rep limited third avenue waltham ma 
www dlib com products html 
atkins ball benedikt cox ladd integrated web telephone service creation 
bell labs technical journal software 
shoham fab content collaborative recommendation 
communications acm 
benford brown reynard ingram visualising populating web collaborative virtual environments browsing searching inhabiting 
proceedings th joint european networking conference edinburgh scotland may may 
billsus pazzani learning probabilistic user models 
sixth international conference user modeling chia laguna sardinia june june 
carr hall hill distributed link service tool publishers authors readers 
proceedings fourth international world wide web conference web revolution boston massachusetts usa dec 
davis hall heath hill wilkins integrated information environment open hypermedia systems 
european conference hypertext technology echt milano italy pp 

hall davis dale agents distributed multimedia information management 
international conference practical application agents multi agent technology london uk apr pp 

falk jonsson 
paws agent www retrieval filtering 
practical applications intelligent agents multi agents paam london apr pp 

foner multi agent referral system matchmaking 
practical applications intelligent agents multi agents paam london apr pp 

furuta shipman marshall brenner hsieh hypertext paths world wide web experiences walden paths 
proceedings hypertext southampton 
pp 

genesereth ketchpel software agents 
communications acm 
hall tyranny button 
ieee multimedia 
hill hutchings james hal exploiting serendipity users provide support hypertext navigation 
proceedings hypertext southampton 
pp 

huberman kaminsky beehive system cooperative filtering sharing information 
tech 
rep dynamics computation group xerox palo alto research center aug 
available www parc xerox com spl groups dynamics www beehive html 
huhns singh agents web 
ieee internet computing sept 
sa 
distributed object database management system 
release technical summary 
france 
irish trigg supporting collaboration hypermedia issues experiences 
society text 
hypertext hypermedia social construction information 
mit press pp 

joachims freitag mitchell webwatcher tour guide world wide web :10.1.1.147.3204
international joint conference artificial intelligence ijcai nagoya japan aug 
konstan miller maltz herlocker gordon riedl grouplens applying collaborative filtering usenet news 
communications acm 
krulwich agent learning user interests heuristic phrase extraction 
ieee expert intelligent systems applications sept 
lamacchia internet fish 
phd thesis mit artificial intelligence laboratory 
report cambridge ma 
lieberman letizia agent assists web browsing :10.1.1.31.3135
international joint conference artificial intelligence ijcai montreal canada aug 
maes interview software agents global computer 
ieee internet computing july 
nwana ndumu agent technology 
bt technology journal oct 
petrie agent intelligent 
ieee internet computing july 
resnick varian recommender systems 
communications acm 
scott tools lexical analysis software data driven learning research 
tech 
rep university liverpool 
available www liv ac uk ms htm 
shardanand maes social information filtering algorithms automating word mouth 
conference human factors computing systems chi 
may denver colorado usa pp 

shneiderman maes direct manipulations vs interface agents 
interactions nov 
scott wolf collaborative browsing world wide web 
proceedings th joint european networking conference edinburgh scotland may may 
starr ackerman pazzani care collaborative web agent 
conference human factors computing systems chi 
april vancouver canada usa 
terveen hill amento mcdonald phoaks system sharing recommendations 
communications acm 
wooldridge jennings intelligent agents theory practice 
knowledge engineering review june 
zellweger scripted documents hypermedia path mechanism 
proceedings hypertext pittsburgh pennsylvania pp 

