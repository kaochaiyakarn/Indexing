integrating classification association rule mining bing liu hsu yiming ma department information systems computer science national university singapore lower kent ridge road singapore nus edu sg classification rule mining aims discover small set rules database forms accurate classifier 
association rule mining finds rules existing database satisfy minimum support minimum confidence constraints 
association rule mining target discovery pre determined classification rule mining predetermined target 
propose integrate mining techniques 
integration done focusing mining special subset association rules called class association rules cars 
efficient algorithm building classifier set discovered cars 
experimental results show classifier built way general accurate produced state art classification system 
addition integration helps solve number problems exist current classification systems 
classification rule mining association rule mining important data mining techniques 
classification rule mining aims discover small set rules database form accurate classifier quinlan breiman 
association rule mining finds rules database satisfy minimum support minimum confidence constraints agrawal srikant 
association rule mining target mining predetermined classification rule mining pre determined target class 
classification rule mining association rule mining indispensable practical applications 
great savings conveniences user result mining techniques integrated 
propose integrated framework called associative classification 
show integration done efficiently loss performance accuracy resultant classifier 
integration done focusing special subset association rules right hand side restricted classification class attribute 
refer subset copyright american association artificial intelligence www aaai org 
rights reserved 
rules class association rules cars 
existing association rule mining algorithm agrawal srikant adapted mine cars satisfy minimum support minimum confidence constraints 
adaptation necessary main reasons 
transactional database normally association rule mining agrawal srikant associations classification data tends contain huge number associations 
adaptation existing association rule mining algorithm mine cars needed reduce number rules generated avoiding combinatorial explosion see evaluation section 

classification datasets contain continuous numeric attributes 
mining association rules continuous attributes major research issue srikant agrawal wang tay liu 
adaptation involves discretizing continuous attributes classification predetermined class target 
discretization algorithms purpose fayyad irani dougherty kohavi sahami 
data mining proposed associative classification framework consists steps discretizing continuous attributes generating class association rules cars building classifier generated cars 
contributions 
proposes new way build accurate classifiers 
experimental results show classifiers built way general accurate produced state art classification system quinlan 

association rule mining techniques applicable classification tasks 

helps solve number important problems existing classification systems 
discuss point greater detail framework helps solve understandability problem clark matwin pazzani mani classification rule mining 
rules produced standard classification systems difficult understand systems domain independent biases heuristics generate small set rules form classifier 
biases appeared kdd new york aug may agreement existing knowledge human user resulting generated rules sense user understandable rules exist data left undiscovered 
new framework problem finding understandable rules reduced postprocessing task generate rules 
techniques liu hsu liu hsu chen employed help user identify understandable rules 
related problem discovery interesting useful rules 
quest small set rules existing classification systems results interesting useful rules discovered 
example drug screening application biologists interested rules relate color sample final outcome 
unfortunately classification system just find rules rules exist discovered system 
new framework database reside disk main memory 
standard classification systems need load entire database main memory quinlan done scaling classification systems agrawal rissanen 
problem statement proposed framework assumes dataset normal relational table consists cases described distinct attributes 
cases classified known classes 
attribute categorical discrete continuous numeric attribute 
treat attributes uniformly 
categorical attribute possible values mapped set consecutive positive integers 
continuous attribute value range discretized intervals intervals mapped consecutive positive integers 
mappings treat data case set attribute integer value pairs class label 
call attribute integer value pair item 
discretization continuous attributes discussed existing algorithms machine learning literature see dougherty kohavi sahami 
dataset 
set items set class labels 
say data case contains subset items class association rule car implication form rule holds confidence cases contain labeled class rule support cases contain labeled class objectives generate complete set cars satisfy user specified minimum support called minsup minimum confidence called minconf constraints build classifier cars 
generating complete set cars proposed algorithm called algorithm cba classification associations 
consists parts rule generator called cba rg algorithm apriori finding association rules agrawal srikant classifier builder called cba cb 
section discusses cba rg 
section discusses cba cb 
basic concepts cba rg algorithm key operation cba rg find support minsup 
form set items class label 
support count called number cases contain 
support count called number cases contain labeled class basically represents rule support size dataset confidence 
satisfy minsup called frequent rest called infrequent 
example attributes 
support count support count total number cases support confidence 
minsup satisfies minsup criterion 
say frequent 
highest confidence chosen possible rule pr representing set 
highest confidence randomly select 
example 

assume support count 
support count second 
confidence confidence produce pr assume class confidence greater minconf say rule accurate 
set class association rules cars consists prs frequent accurate 
cba rg algorithm cba rg algorithm generates frequent making multiple passes data 
pass counts support individual determines frequent 
subsequent pass starts seed set frequent previous pass 
uses seed set generate new possibly frequent called candidate 
actual supports candidate calculated pass data 
pass determines candidate frequent 
set frequent produces rules cars 
denote items 
denote set frequent 
element set form 
set candidate 
cba rg algorithm 
large car car data case candidate class class minsup car car cars car cba rg algorithm line represents pass algorithm 
counts item class occurrences determine frequent line 
set set cars called car generated line see previous subsection 
car subjected pruning operation line optional 
pruning done subsequent pass car line 
function uses pessimistic error rate pruning method quinlan 
prunes rule follows rule pessimistic error rate higher pessimistic error rate rule obtained deleting condition conditions rule pruned 
pruning cut number rules generated substantially see evaluation section 
subsequent pass say pass algorithm performs major operations 
frequent th pass generate candidate function line 
scans database updates various support counts candidates line 
new frequent identified form line algorithm produces rules car function line 
rule pruning performed line rules 
function similar function apriori gen algorithm apriori 
function takes set candidate data case find supported operations line similar algorithm apriori 
difference need increment support counts separately algorithm apriori count updated 
allows compute confidence 
useful rule pruning 
final set class association rules cars line 
remaining rules pruning line 
building classifier section presents cba cb algorithm building classifier cars 
produce best classifier set rules involve evaluating possible subsets training data selecting subset right rule sequence gives number errors 
subsets number rules mention different rule sequences 
clearly infeasible 
proposed algorithm heuristic 
classifier builds performs compared built 
presenting algorithm define total order generated rules 
selecting rules classifier 
definition rules called precedes higher precedence 
confidence greater 
confidences support greater 
confidences supports generated earlier set generated rules cars training data 
basic idea algorithm choose set high precedence rules cover classifier format default class default class default class 
classifying unseen case rule satisfies case classify 
rule applies case takes default class 
naive version algorithm called building classifier shown 
steps step line sort set generated rules relation 
ensure choose highest precedence rules classifier 
step line select rules classifier sorted sequence 
rule go find cases covered satisfy conditions line 
mark correctly classifies case line 
id unique identification number correctly classify case marked potential rule classifier line 
cases covers removed line 
default class selected majority class remaining data means selecting rules classifier class default class line 
compute record total number errors current default class line 
sum number errors selected rules number errors default class training data 
rule training case left rule selection process completed 
step line discard rules improve accuracy classifier 
rule number errors recorded cutoff rule 
rules rule discarded produce errors 
rules default class rule form classifier 
sort rule sequence temp case satisfies conditions store id temp mark correctly classifies marked insert delete cases ids temp selecting default class current compute total number errors find rule lowest total number errors drop rules add default class associated return classifier 

na algorithm cba cb algorithm satisfies main conditions condition 
training case covered rule highest precedence rules cover case 
sorting done line 
condition 
rule correctly classifies remaining training case chosen 
due line 
algorithm simple inefficient especially database resident main memory needs passes database 
improved version algorithm called slightly pass key point making pass remaining data rule find best rule cover case 
consists stages see liu hsu ma details stage 
case find highest precedence rule called correctly classifies highest precedence rule called wrongly classifies case covered 
satisfies condition 
mark indicate classifies case correctly 
complex decide rule rule eventually cover order decide keep data structure form unique identification number case class denote collection set set higher precedence corresponding 
stage algorithm shown 
function finds highest precedence rule covers case set rules having different class id class represent identification number class respectively 
remember cases covers class field rule 
case class mark class cba cb stage stage 
case decide rule cover stage go find rules classify wrongly higher precedence corresponding line 
reason say method slightly pass details follows entry marked case rule replace replace cba cb stage marked means case line clear cover case represented 
satisfies conditions 
numbers data cases cover need updated line 
line finds rules wrongly classify case higher precedences note need rules 
done function 
rules returned rules may replace cover case higher precedences 
put information replace field rule line 
line increments count indicate rule may cover case 
contains rules build classifier 
stage 
choose final set rules form classifier 
steps step line choose set potential rules form classifier 
sort relation 
ensures condition satisfied final rule selection 
line initializations 
function counts number training cases class line initial training data 
records number errors far selected rules training data 
line rule longer correctly classifies training case discard 
rule classifier 
satisfies condition 
line try replace rules replace precedes 
case covered previous rule current replace cover case 
replace cover case fields updated accordingly line 
selected rule update line 
choose default class majority class remaining training data computed line 
default class chosen know number errors called default class remaining training data line 
total number errors denoted selected rules default class line 
step line discard rules introduce errors return final classifier 
sort rule sequence class entry replace case covered previous update insert default class find rule lowest discard rules add default class associated return default class cba cb stage empirical evaluation compare classifiers produced algorithm cba produced tree rule release 
datasets uci ml repository merz murphy purpose 
execution time performances cba rg cba cb shown 
experiments minconf set 
minsup complex 
minsup strong effect quality classifier produced 
minsup set high possible rules satisfy minsup high confidences included cars may fail cover training cases 
accuracy classifier suffers 
experiments observe minsup lowered classifier built accurate built 
experiments reported set minsup 
set limit total number candidate rules memory including cars dropped rules satisfy minsup minconf 
marked table datasets reported completed limit 
shows classification data contains huge number associations 
discretization continuous attributes done entropy method fayyad irani 
code taken mlc machine learning library kohavi 
experiments parameters default values 
error rates dataset obtained fold cross validations 
experimental results shown table 
execution times datasets reside main memory 
column lists names datasets 
see liu hsu ma description datasets 
column shows rules mean error rates complete fold cross validations original datasets discretization 
show tree detailed results average error rate datasets higher 
column shows rules mean error rate discretization 
error rates tree average error rate higher 
column gives mean error rates classifiers built algorithm minsup cross validations cars infrequent rules dropped rules satisfy minconf 
infrequent rules want see affect classification accuracy 
value error rate classifier built rules subjected pruning rule generation second value error rate classifier built rules subjected pruning rule generation 
column shows error rates cars classifier construction rule pruning rule generation 
clear datasets cba produces accurate classifiers 
average error rate decreases rules discretization 
cba 
furthermore system superior rules datasets 
observe rule pruning accuracy resultant classifier 
pruning sufficient building accurate classifiers 
note compared error rate rules discretization cba superior 
see rest columns give number rules generated run time performances system running mb dec alpha 
column gives average numbers rules generated algorithm cba rg cross validation 
value number cars 
second value number pruning 
see number rules left pruning smaller 
column gives average time taken generate rules cross validation 
value time taken pruning performed 
second value time taken pruning 
pruning algorithm cba rg runs slightly slower 
column shows average times taken build classifier 
value running time method second value method 
see efficient 
column gives average number rules classifier built cba cb 
generally rules classifier produced shown 
problem rules classify cases 
understandable useful rules cars 
rules may may generated generate rules 
summarize important results 
find rules datasets limit classifiers constructed discovered rules quite accurate 
fact limit reaches datasets experimented different limits accuracy resulting classifiers starts stabilize 
proceeding generate rules conditions hard understand difficult 
ran cba algorithm datasets disk main memory increased number cases datasets times largest dataset reaches cases 
experimental results show cba rg cba cb linear scaleup 
related system clearly different existing classification systems quinlan cart breiman produce small rules rules cba cba 
run time sec run time sec 
datasets discr 
discr 
cars cars cars cba rg cba cb rules 





anneal australian auto breast cleve crx diabetes german glass heart hepatitis horse hypo ionosphere iris labor led lymph pima sick sonar tic tac toe vehicle waveform wine zoo average table experiment results set biased rules 
proposed technique aims generate complete set potential classification rules 
researchers schlimmer webb murphy pazzani tried build classifiers performing extensive search 
uses association rule mining techniques 
classifier building technique related covering method michalski 
covering method works follows 
class turn finds best rule class removes training cases covered rule 
strategy recursively applied remaining cases class training case left 
searching rule done heuristically 
webb quinlan cameron jones large scale beam search search best rule 
results encouraging 
method different 
find rules select best rules cover training cases 
test results show classifier performs better built 
best rules global best rules generated training data best rules covering method local best rules removes covered cases best rule 
implemented covering method framework performance 
believe local best rules tend overfit data 
research closely related association rule mining agrawal srikant 
apriori algorithm agrawal srikant adapted discovering cars 
cba rg itemset set items algorithm apriori 
consists set items class 
rule pruning technique quinlan prune non predictive overfitting rules 
association rule mining 
addition build accurate classifier prediction generated rules 
association rule discovery concerned building classifiers 
bayardo uses association rule miner generate high confidence classification rules confidence 
ali srikant uses association rule miner form rules describe individual classes 
works concerned building classifier rules 
shown possible build accurate classifier prediction set generated rules 
proposes framework integrate classification association rule mining 
algorithm generate class association rules cars build accurate classifier 
new framework gives new way construct classifiers helps solve number problems exist current classification systems 
focus building accurate classifiers sophisticated techniques mine cars pre discretization 
agrawal srikant 
fast algorithms mining association rules 
vldb 
ali srikant 
partial classification association rules 
kdd 
bayardo 
brute force mining classification rules 
kdd 
breiman friedman olshen stone 
classification regression trees 
belmont wadsworth 
clark matwin 
qualitative models guide induction learning 
icml 
dougherty kohavi sahami 
supervised unsupervised discretization continuous features 
icml 
fayyad irani 
multi interval discretization continuous valued attributes classification learning 
ijcai 
kohavi john long manley pfleger 
mlc machine learning library 
tools artificial intelligence 
liu hsu 
post analysis learned rules 
aaai 
liu hsu chen 
general impressions analyze discovered classification rules 
kdd 
liu hsu ma 
building accurate classifier association rules 
technical report 
agrawal rissanen 
sliq fast scalable classifier data mining 
proc 
fifth int conference extending database technology 
merz murphy 
uci repository machine learning database 
www cs uci edu mlearn mlrepository html 
michalski 
pattern recognition rule guided induction inference 
ieee transaction pattern analysis machine intelligence 
murphy pazzani 
exploring decision forest empirical investigation occam razor decision tree induction 
ai research 
pazzani mani 
concise colorful learning intelligible rules 
kdd 
quinlan 
program machine learning 
morgan kaufmann 
quinlan cameron jones 
oversearching layered search empirical learning 
ijcai 
schlimmer 
efficiently inducing determinations complete systematic search algorithm uses optimal pruning 
icml 
srikant agrawal 
mining quantitative association rules large relational tables 
sigmod 
wang tay liu 
interval merger numeric association rules 
kdd 
fukuda morimoto morishita 
computing optimized rectilinear regions association rules 
kdd 
