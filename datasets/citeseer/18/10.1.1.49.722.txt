experimental robotics iii proceedings rd international symposium experimental robotics kyoto japan october springer verlag london pp 
mobile robot tool investigation control algorithms 
francesco mondada paolo swiss federal institute technology laboratory ch lausanne mail francesco mondada di epfl ch di epfl ch paolo di epfl ch interaction autonomous mobile robot real world critically depends robots morphology environment 
building model aspects extremely complex making simulation insufficient accurate validation control algorithms 
simulation environments efficient tools experimenting real robots inadequate 
traditional programming languages tools seldom provide support realtime experiments hindering understanding control algorithms making experimentation complex time consuming 
miniature robot cylindrical shape measuring mm diameter mm height 
due small size experiments performed quickly cost effectively small working area 
small peripherals designed connected basic module take advantage versatile communication scheme 
serial link provided run control algorithms workstation debugging giving user opportunity employing available graphical tools 
debugged algorithm downloaded robot run processor 
experimentation groups robots hardly possible commercially available hardware 
size price described robot open way cost effective investigations collective behaviour 
aspect research drives design robot described 
experiments units planned near 

today mobile robotics field receives great attention 
wide range industrial applications autonomous mobile robots including robots automatic floor cleaning buildings factories mobile surveillance systems transporting parts factories need fixed installations fruit collection harvesting 
mobile robot applications reach current technology show inadequacy traditional design methodologies 
new control approaches attempted improve robot interaction real world aimed autonomous achievement tasks 
example subsumption architecture proposed brooks supports parallel processing modular robust 
approach solutions systematically implemented real robots success 
researchers propose new computational approaches fuzzy logic artificial neural networks 
interest mobile robots directed industrial applications 
biologists psychologist interested mobile robots validate control structures observed biological world 
uses robot validate structure retina observed fly beer replicate mechanism coordinates leg movements walking insects deneubourg get better understanding collective behaviour ant colonies 
research activities mobile robot experimentation 
simpler way validate control algorithms simulations simplifications involved important results conclusive 
control algorithm embedded robot consider morphology properties environment operates 
real world features anomalies complex difficult implying experimentation control algorithms simulation preliminary study prove success control algorithm real world 
sole way validate algorithm deal problems test real robot 
robots designed perform experiments control algorithms experiments possible 
brooks designed robots effective electronics mechanics 
control algorithms programmed subsumption behavioural language account software modularity real time parallel processing 
unfortunately experiments tools available improve understanding control process 
custom programming language code portability algorithm diffusion difficult 
steels uses video camera record robot actions experiments data concerning robot control process available experiment 
platforms nomad robot real time interaction possible radio link standard programming languages size robot environment requires experimentation uncomfortable 
lack experimentation mobile robot single robot experiments means impossible today perform collective behaviour experiments 
programming environment realtime visualisation tools totally insufficient purpose 
development miniature mobile robot khepera addresses problems mentioned 
hardware designed small operation time small areas example desk top 
modularity allows new sensors actuators easily designed added basic structure 
versatile software structure provided help user debug algorithms visualise results 

hardware important challenge industry cd players computers video cameras watches consumer products need implement functionalities small volume 
robotics field applications need small actuators small teleoperated machines tiny autonomous robots 
dario gives comprehensive description research field available technology 
khepera design key factor making cost effective experimentations possible single multiple robot configurations 

generalities robot step direction 
dario define category robots miniature robots 
measure cubic generate forces comparable applied human operators incorporate conventional miniature components 
step needs special fabrication technologies today development 
khepera uses electronic technology available today new family xx microcontrollers motorola design complete bit machines extremely compact 
surface mounted devices allow important increase component density printed circuit boards 
new compact sensors including signal preprocessing sensing chip reduce need additional circuitry 
mechanical parts wheels gears manipulator built expressly khepera magnetic sensors counting wheel revolutions 
design robots demands great effort spanning fields 
result complex compromise functionalities implemented available volume current technology power requirements khepera composed main boards 
eps theta mm 
khepera robot 
architecture eps theta mm motor pwm multi microcontroller extension network mc mhz bit microcontroller kbyte ram analog inputs bit resolution asynchronous serial link control motors incremental sensors imp turn ir proximity sensors accumulators synchronous multi microcontroller link serial link rs vision processor ram power simple cpu board master sensory motor board manipulator inter robot communications intelligent slaves cpu core cpu core hc microcontroller memory extension smart sensor interfaces debugging basic configuration parallel main processor bus 
khepera hardware architecture 
topology eps theta mm master basic configuration khepera slave hc communication slave hc manipulator slave hc vision slave hc 
khepera communication network topology 
application specific extension vision inter robot communications equipped manipulators directly controlled khepera extension busses 
khepera powered external supply connected long time visualisation software tool board accumulators provide khepera minutes autonomous power supply 

distributed processing interesting features khepera possibility connecting extensions different busses 
parallel bus available connect simple experimentation 
alternative sophisticated interface scheme implements small local communication network allows connection intelligent equipped local microcontroller migration conventional neural pre processing software layers closer sensors actuators 
communication network uses star topology main microcontroller robot acts master centre star 
intelligent considered slaves periphery star communication network requested master 
topology possible implement distributed biological controls arm movement coordination feature extraction pre processing vision observed large number insects 
multi microcontroller approach allows main microcontroller khepera execute high level algorithms attaining simpler programming paradigm 

basic configuration new generation motorola microcontrollers particular mc possible build powerful systems suitable miniature neural control 
khepera takes advantage microcontroller features manage vital functionality 
basic configuration khepera composed cpu sensory motor boards 
cpu board complete bit machine including mhz microcontroller system user memory analogue inputs extension busses serial link allowing connection different host machines terminals visualisation software tools 
microcontroller includes features needed easy interfacing memories ports external interruptions 
large number timers ability association ports indicate device important component design 
sensory motor board includes dc motors coupled incremental sensors analogue infra red ir proximity sensors board power supply 
motor powered khz pulse width modulation pwm signal coming dedicated unit microcontroller 
signals boosted complete quadrant nmos bridges 
incremental sensors realised magnetic sensors provide quadrature signals resolution wheel revolution 
ir sensors composed emitter independent receiver 
dedicated electronic interface built multiplexers sample hold operational amplifiers 
allows measurement absolute ambient light estimation reflection relative position object robot 

additional experiments involving environment recognition object detection object capture object recognition possible intelligent designed built stereoscopic vision containing manipulator 
stereoscopic vision turret employs pixel linear arrays dedicated optical element 
analogue value pixel coded grey levels 
obtain useable data wide spectrum conditions additional sensor perform automatic iris integration time necessary arrays piggy back eps theta mm mm sensory motor cpu vision bus 
khepera physical structure basic sensory motor cpu vision boards 
controlled intensity ambient light 
mondada proved validity stereoscopic vision robot navigation spatial frequency filtering obstacle detection avoidance 
manipulator turret khepera capable interaction objects environment 
dc motors control movements manipulator elevation 
different classes objects detected gripper sensors measure sizes 
robots displaying collective behaviour need means perform inter robot communications localisation 
providing khepera functionalities study time writing 
software eps theta mm mail box external interruption stand process motion control ir control protocol visualisation software tool turret communications main board high level main application high level turret control communication network gripper board gripper control arm control object control hardware link 
hierarchical software structure 

software managing khepera resources complex task 
large number asynchronous events control necessity share critical interfaces led development complete low level software organised collection basic primitives 

hierarchical software structure multi microcontroller approach complex tasks manage required hierarchical approach software structure 
concept chosen applies intelligent equipped microcontroller 
software structures implemented single high level application program number stand local processes 
stand local processes ir sensor sequencing motion control wheel incremental sensor counting executed cyclically event timer possibly association external interruptions 
high level application software run control algorithm communicate stand local processes mailbox mechanism 
decoupling low highlevel tasks development complex applications quick easy 

control khepera experiments khepera performed different ways running algorithms autonomous robots connection visualisation software tools 
mentioned details basic input output activities managed library stand processes 
development standard rs link generic high level protocol communicate processes workstation 
application software run workstation calls basic primitives possible monitor robot activity possible 
standard specialised visualisation tools employed simplify control algorithm debugging 
application software written standard language debugged algorithms easily converted run khepera cpu 
applications downloaded khepera robot autonomous development environment 

experimentation environment quality measurements obtained robot experiments efficiency experimentation process critically depends structure working environment 
tools currently available simulation far better developed experimenting real robots 
real time interaction control process continuous visualisation parameters possible faster better understanding mechanisms involved 
reasons necessary develop better visualisation interactive software tools adapted experimentation tasks 
simplest way implement comprehensive graphical interface scientific workstation 
connected robot collect data display communicate orders coming user 
physical arrangement elements involved experiment compact allowing complete comfortable control 
obtained illustrated entire configuration including robot en environment eps theta mm 
khepera experimentation environment 
vironment workstation conveniently arranged normal table 
arrangement shown serial link cable disturb movement robot 
device prevent cable rolling placed mid length serial cable 
experiments involving robot wired serial link longer 
special radio communication modules developed purpose 
additional module provide means control khepera time 
wired radio serial link data flow workstation robot little possible 
minimise flow restricting user ability control algorithm runs workstation communicates robot data concerning sensors motors 
configuration optimal important number parameters displayed controlled 
programming visualisation tools perform experiments khepera 
programming styles uses classical programming language build standalone applications second complete graphical programming interface third compromise previous making best 

complete applications programming possibility code control algorithm user interface traditional way 
choice software engineers researchers developed visualisation control interface instance simulation environment 
case researcher starts perform real robot experiments simulator developed preliminary studies 
situations simulator easily adapted replacing simulated actions calls interface real robot 
usually modifying user interface 
interesting results achieved approach neural networks simulator developed ph 
gaussier 
simulator tool design neural networks robot control 
real time visualisation interface permits verifiable step step learning process robot 
similar experience interfacing khepera simulator progress simulator developed institute fur informatik university zurich 
case control interface complemented measurement system enables user plot trajectory robot real time host screen 

labview software package labview commercial product national instruments runs host machines pc macintosh sun workstations 
labview developed environment design virtual instruments vi 
vi comprises control panel interconnection diagram 
panel user interactively specify graphical devices input sliding cursors buttons text controls output gauges images graphs 
diagram user graphically enters functionality vi 
library standard functionalities available perform task icons performing numerical functions string treatment matrix computations linked design algorithm 
icon associated complete vi hierarchically diagram instrument allowing modular approach 
modules written standard programming languages pascal 
sample experiment shown 
diagram represents computation algorithm 
modules collide turn wall take inputs sensors bottom left icon connected feed appropriate commands motors right icon 
sensors motor icons communicate robot wired serial link 
graphs panel visualise state motor sensor 
modules top right part diagram evaluate period required recompute algorithm displayed bottom left panel 
labview optimal tool design experimentation environments programming languages 
complete graphical inter labview eps theta mm 
labview display 
face helps specifying interaction items panel inefficient designing complex control algorithms 
case efficient design modules standard programming languages 
disadvantage labview version display possibilities limited 
version provide interactive capabilities better design tool mobile robot experimentation 

grapher grapher experimentation tool developed esprit elena project 
due code optimisation improve performance software package available sun 
grapher environment experiment defined interconnecting modules perform sub tasks pure computation visualisation control 
programming modules done language 
interconnections graphically specified user 
wiring diagram single level preventing hierarchical approach 
reason avoid complicated wiring schemes modules perform quite complex tasks 
facilitate development large number standard modules available making best available hardware possibilities performance flexibility visualisation particularly impressive 
comparing grapher labview intuitive needs programming knowledge complex experimentation efficient 
experiment described section illustrates aspect 

experimentation distributed adaptive control example development techniques outlined environment evaluate control architecture section 
control mechanism developed design methodology distributed adaptive control 
approach turn derived distributed model behavioural phenomenon classical conditioning 
example involves autonomous agent learn avoid obstacles collision proximity sensors 
control structure consists neural net groups neurons named unconditioned stimulus conditioned stimulus cs motor actions 
neurons group directly connected collision sensors simulated saturation proximity sensors 
connection groups implements robot basic reflex avoiding obstacles time collision 
neurons cs group obtain inputs proximity sensors 
learning grapher eps theta mm 
grapher display 
performed hebbian rule connections cs 
weights connections updated deltak delta gamma ffl delta delta defines number units cs learning rate ffl decay rate average activation group 
way robot develop conditional response learning avoid obstacles proximity sensors producing collisions 
experimentation interesting observe evolution learning process matrix depends ffl 
software environment experiment grapher see section 
shows experiment display sun sparcstation 
principal window top left illustrates functional diagram experiment dac module centre top performs computation algorithm interacts module khepera centre bottom control robot 
modules permit user interface 
panel module top right allows user control ffl algorithm computation period means sliding cursors 
module displays matrix centre bottom window 
cgraph module bottom right displays sensor state trajectory robot visible rightmost window 
control algorithm source display capabilities available experimental set designed day 
user gains complete control physical robot development environment parameters algorithm real time obtaining optimal visualisation process 

khepera compact efficient experimentation environment possible 
associated effective software tools robot dac eps theta mm conditioned stimulus hebbian rule unconditioned stimulus reflexes avoid right avoid left go forward default collision detectors proximity sensors motor actions cs 
distributed adaptive control experiment architecture 
optimal platform test control algorithms 
modularity hardware software control tools levels gives user necessary flexibility perform accurate experiments quickly 
example experimentation environment 
reduced size cost miniature robots described possible experimentation collective behaviour groups robots 
main research activity near 
authors andr important design khepera paul claude philippe gaussier st ephane zrehen yves laurent help testing algorithms development experimentation tools 
supported swiss national research foundation project pnr 
brooks 
robust layered control system mobile robot 
ieee robotics automation ra march 
heller 
mit fuzzy logic 

smithers 
motor actions location recognition 
varela bourgine editors proceedings european conference artificial life pages paris 
mit press 


real time visuomotor control flies robots 
proceedings fifth international conference advanced robotics pages pisa june 
beer quinn larsson 
distributed neural network architecture robot locomotion 
neural computation 
deneubourg goss franks franks 
dynamics collective sorting robot ant ant robot 
mayer wilson editors simulation adaptive behavior animals animats pages 
mit press 
brooks 
intelligence representation 
artificial intelligence 
mondada 
modeling system environment interaction complementary roles simulations real world artifacts 
proceedings second european conference artificial life brussels 
brooks 
elephants don play chess 
robotics autonomous systems 
special issue 
steels 
building agents autonomous behavior systems 
biology technology intelligent autonomous agents 
nato advanced study institute trento 
lecture notes 
nomadic technologies palo alto calif nomad robot 
data sheet 
dario 
critical survey 
journal 

low level bios khepera 
internal report epfl lausanne 
gaussier 
simulation un syst eme plusieurs aires application analyse de sc 
phd thesis paris xi orsay paris november 
national instruments 
labview january 
user manual 

task unified graphic environment 
esprit elena basic research project june 
pfeifer 
distributed adaptive control self organization structured behavior 
robotics autonomous agents 

adaptive fields distributed representations classically conditioned associations 
network 
pavlov 
conditioned reflexes 
oxford university press london 
