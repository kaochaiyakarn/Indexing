synchronization logics mixed rules completeness preservation am sernadas cristina sernadas carlos caleiro departamento de matem atica instituto superior av 
pais lisboa portugal email facs css math ist utl pt 
mechanisms combining logics appeared literature 
synchronization simplest language combined logic disjoint union languages class models resulting logic subset cartesian product classes models interaction logics imposed constraining class pairs models 
give model theoretic proof theoretic account synchronization categorial construction coproducts cocartesian liftings prove soundness preserved possibly constrained synchronization state sufficient conditions preservation model existence strong completeness 
provide application combination dynamic logic linear temporal logic 
keywords combination logics synchronization logics model existence completeness dynamic logic temporal logic 
growth interest problem combining logics obtaining results preservation logical properties soundness completeness decidability existence finite models inter alia see instance 
related motivated applications software engineering addressed problem relating combining institutions 
relevance applications clear software development process usually carried heterogeneous environment methods languages formalisms platforms 
instance may project temporal logic dynamic logic specifying verifying envisaged software 
previous proposed simple forms combining logics synchronization formulae synchronization models 
continue development mechanism providing proof model theoretic categorial characterizations synchronization 
furthermore prove synchronizations preserve soundness model existence completeness suitable assumptions 
mechanism simple useful explain example combining dynamic logic linear temporal logic 
synchronization adequate form combination cases compared forms combination fibring 
synchronization language combined logic disjoint union languages class models resulting logic subset cartesian product classes models interaction logics imposed constraining class pairs models 
section adopt relevant notion logic system tuple composed language models satisfaction inference rules setting category rest 
section propose basic mechanism free synchronization logic systems interaction whatsoever 
synchronization interaction interesting se section definition useful mechanism synchronization presence interaction rules 
section showing free synchronizations coproducts 
section presenting synchronization constrained mixed inference rules show extract hilbert system logic system forgetting semantic components 
show forgetful functor allows cocartesian liftings 
categorial definition constrained form synchronization 
section concentrate finding sufficient conditions proving synchronizations preserve model existence completeness preservation soundness comes sections 
illustrate proposed combination mechanism showing establish useful combination dynamic logic linear temporal logic section remaining propositional context sake economy presentation preliminaries interested proof model theoretic characterizations synchronization need notion logic system including aspects 
hand need models satisfaction 
hand need inference rules 
need improper model satisfies order able preserve completeness shall see 
implies loss generality add logic improper model exist impact semantic entailment 
assume improper model exists collapsed 
arrive notion definition 
logic system tuple hl fl ri set pointed class selected element fl theta relation fl iff fin theta clearly elements formulae elements models improper model 
relation fl satisfaction relation 
element hp rem conc inference rule rem finite set premises conc 
rem said axiom 
entailment derivation closures defined usual 
briefly review basic definitions mainly freeze notation 
definition 
logic system entailment closure ffl defined follows psi ffl fl fl psi definition 
logic system say derivation psi iff sequence formulae formula ffl element psi ffl conc provided element rem occurs sequence gamma definition 
logic system derivation closure defined follows psi derivation psi definition 
logic system sound iff psi psi ffl psi strongly complete iff psi ffl psi psi definition 
rule logic system said sound iff conc rem ffl proposition 
logic system sound iff rules sound 
proof assume rules sound psi show psi ffl induction length derivation psi base psi course psi ffl step conc rem psi induction hypothesis rem psi ffl conc psi ffl soundness qed sequel need notions consistency model existence 
definition 
set psi formulae said consistent respect derivation iff psi definition 
logic system said model existence property iff consistent set psi formulae proper model fl psi proposition 
strong completeness implies model existence property 
proof assume psi completeness exists fl psi 
proper result follows 
qed shall need results concerning logic systems negation 
just require negation usual semantics fl iff proper model fulfils usual metatheorem psi psi 
proposition 
hl fl ri logic system negation psi psi psi consistent 
proof easily psi qed proposition 
logic systems negation completeness equivalent model existence 
proof assume model existence holds psi follows psi consistent exists proper fl psi psi ffl qed proposition 
hl fl ri sound logic system negation psi psi consistent iff psi proof psi inconsistent trivial formula negation derivable psi hand psi soundness psi proper models 
psi inconsistent 
qed proposition 
hl fl ri logic system negation psi chain consistent sets 
psi psi consistent 
proof suppose psi inconsistent 
psi derivations finite sequences psi psi exist psi psi psi max psi max inconsistent 
qed conclude section definition category sound logic systems shall rest 
definition 
logic system morphism hl fl ri hl fl pair 
conc rem 

fl iff fl 
condition 
imposes preservation inference rules 
condition 
states improper model preserved 
condition 
known satisfaction condition 
note morphisms preserve entailment derivation proposition 
hl fl ri hl fl logic system morphism 
psi ffl psi ffl psi psi proof 
assume psi ffl fl psi fl psi fl fl psi ffl 
assume psi prove result induction length derivation psi base 
psi psi psi step conc rem psi induction hypothesis rem psi conc psi qed proposition 
sound logic systems morphisms constitute category 
note logic systems concentrating sound ones 
results hold sound systems cocartesian lifting section 
anyway interested unsound logic systems 
free synchronization presenting main construction synchronization logic systems additional mixed rules worthwhile look free synchronization interaction logic systems 
basic idea follows 
language disjoint union languages class models cartesian product classes models 
satisfaction componentwise 
rules just put 
definition 
free synchronization logic systems hl fl hl fl logic system hl fl phi hl fl hl fl ri phi disjoint union injections omega cartesian product projections improper model hz fl iff fl fl iff fl 
notation chose free synchronization justified categorial characterization proposition 
free synchronizations coproducts 
proof 
soundness 
just prove rule sound 
assume hm fl rem 
fl rem soundness fl conc hm fl conc 

injections hi hl fl hl fl phi hl fl hi hl fl hl fl phi hl fl 
universal property hl fl hl fl hl fl hl fl morphisms 
unique morphism hl fl phi hl fl hl fl ffi hi ffi hi phi omega qed synchronization constrained mixed rules basic idea enrich free synchronization additional mixed rules imposing interaction logic systems 
go directly categorial definition cocartesian lifting elegant 
need introduce category hilbert systems forgetful functor logic systems hilbert systems 
definition 
hilbert system pair hl ri set fin theta clearly extract derivation closure hilbert system 
definition 
hilbert system morphism hl ri hl map conc rem proposition 
hilbert systems morphisms constitute category 
proposition 
maps hl fl ri hl ri constitute functor 
proposition 
hl fl ri morphism hl ri hl bijective morphism hhi hl fl ri hl fl subclass fl gamma conc fl gamma rem fl iff fl gamma hhi hh inclusion cocartesian hl fl ri 
proof 
hl fl sound logic system comes directly definition 
hhi morphism 
satisfaction condition holds account definition fl 
universal property 
hl fl ri hl fl morphism hl hl morphism ffi hg morphism 
show assume fl gamma rem 
satisfaction condition get fl gamma rem 
fl rem soundness get fl conc 
fl gamma conc satisfaction condition get fl gamma conc 
hg unique morphism hg ffi hhi direct consequence 
qed denote hl fl ri codomain cocartesian morphism 
ready introduce synchronization constrained mixed rules 
start making precise mean mixed inference rule 
definition 
context free synchronization logic systems hl fl hl fl mixed rule pair hp rem conc rem fin conc 
definition 
hl fl hl fl sound logic systems set mixed rules set mixed rules free synchronization 
synchronization logic systems constrained sound logic system hl fl phi hl fl id hl fl phi hl fl corresponding cocartesian lifting identity map id phi taken morphism id hl phi hl phi shall see useful distinguish special case way constrained synchronization instance 
case mixed rules type preservation results seen soundness preserved synchronization free constrained 
state theorem 
soundness preserved free constrained synchronization 
remains investigate preservation completeness 
start looking preservation model existence property free synchronization lemmas 
lemma 
hl fl ri hl fl phi hl fl psi psi psi psi proof assume psi prove induction length derivation psi psi 
base 
psi psi psi 
step conc rem psi induction hypothesis rem psi 
rem psi conc psi conc psi 
qed free synchronization conservative extension components 
immediate corollary get lemma 
hl fl ri hl fl phi hl fl psi psi psi psi prove model existence completeness preserved free synchronization 
proposition 
logic systems model existence property free synchronization model existence property 
proof phi hl fl phi hl fl hl fl ri assume psi psi psi consistent 
psi psi model existence exists fl psi hm fl psi analogously psi qed similar argument completeness 
proposition 
strongly complete logic systems free synchronization strongly complete 
proof phi hl fl phi hl fl hl fl ri assume psi psi psi psi psi completeness exists fl psi hm shows psi ffl analogously psi qed constrained case harder 
start looking simpler case way constrained synchronization 
proposition 
logic systems model existence property set rules synchronization constrained model existence property 
proof phi hl fl phi hl fl hl fl assume psi psi psi consistent 
consider cases 

psi psi consistent model existence property exists proper fl psi hm satisfies rule hm fl psi 
psi clearly psi rules added phi psi conc xg consistent model existence exists proper fl phi fl psi hz satisfies rule hz fl psi qed far completeness concerned shall need logics negation recall case model existence equivalent completeness 
require constrained logic satisfies metatheorem required negation may logic negation 
furthermore require set mixed rules introduced countable 
note applies way synchronization shall proof general case 
proposition 
logic systems negation model existence property set rules set rules countable metatheorem negation fulfilled phi model existence property 
proof phi hl fl phi hl fl hl fl assume psi psi psi consistent 
consider cases 

psi psi set phi psi conc xg consistent model existence exists proper fl phi fl psi hz rule satisfied 
hz fl psi analogously psi psi 
psi psi psi psi consistent 
enumeration proceed follows 
define phi psi phi psi inductively ffl phi phi phi phi rn rem rn phi phi ffl phi phi phi phi chosen rem rn phi phi mutatis mutandis clearly phi phi phi phi chains consistent sets consistent 
model existence exist proper models fl phi fl phi construction hm hm fl psi qed similar argument prove completeness preservation 
proposition 
strongly complete logic systems negation set rules set rules countable metatheorem negation fulfilled phi strongly complete 
proof phi hl fl phi hl fl hl fl psi psi psi assume loss generality psi consider cases 

psi phi psi conc phi completeness exists fl phi hm rule satisfied hm shows psi ffl 
psi psi psi consistent 
enumeration proceed previous proof 
phi psi phi psi inductively ffl phi phi phi phi rn rem rn phi phi ffl phi phi phi phi chosen rem rn phi phi mutatis mutandis clearly phi phi phi phi chains consistent sets consistent 
model existence exist proper models fl phi fl phi construction hm hm fl psi qed theorem 
model existence preserved free way constrained synchronization way constrained synchronization logics negation countable set rules metatheorem negation holds 
theorem 
strong completeness preserved free synchronization constrained synchronization logics negation countable set rules metatheorem negation holds 
application illustrate proposed mechanism constrained synchronization weakest propositional dynamic logic see instance propositional linear temporal logic see instance 
sake simplicity remain propositional realm problem greater practical significance order setting 
assume set propositional symbols pi finite set action symbols delta fffi ffi ng pi delta 
problem combine logic systems hl fl dynamic logic system signature pi deltai hl fl linear temporal logic system signature pi delta 
respect recall pi delta proper model triple hs non empty set states delta 
theta pi satisfaction straightforward just note ffl hs fl ffi iff hs fl hs ffi rules straightforward instance normality follows ffl ffi ffi ffi respect recall pi delta xl gl proper model map 
pi delta satisfaction straightforward just note ffl fl iff fl ffl fl iff fl rules straightforward instance induction follows ffl idea temporal action logic fl ffi means action ffi happens instant need write specifications formulae logics synchronization constrained rules ff propositional formula signature pi hfi ff ff hfi ffi ff ffi ff ffi ffi rule imposes propositional assertions carry second rule brings properties actions specified third rule nature closure rule important proving temporal invariants properties imposed example synchronization constrained derive set fi ffi fi ffi assumptions 
opposite direction want impose rules ff propositional formula signature pi hfi ff ff hfi ff ffi ff ffi ff note rules directions proof combination may carried reasoning alternatively logics 
concluding remarks motivated software engineering applications investigating alternative mechanisms combining logics 
detail modeltheoretic proof theoretic accounts simplest mechanisms constrained synchronization 
form combination language combined logic disjoint union languages class models resulting logic subset cartesian product classes models interaction logics imposed constraining class pairs models mixed inference rules 
show usefulness synchronization plain meaningful example putting propositional dynamic logic propositional linear temporal logic 
course setting desired set mixed rules depends particular desired interplay pair logics considered particular intended application synchronized logic scope 
way give categorial characterizations free synchronization coproduct constrained synchronization cocartesian lifting 
establish preserve soundness give sufficient conditions preservation model existence strong completeness 
results general assumed logic systems combined exception model existence completeness preservation general constrained synchronization 
sufficient conditions necessary open problem 
related effort investigating categorial characterizations widely known form combination fibring 
single form combination sufficient deal problems practitioners face software development 
believe deep understanding forms combination identified literature needed 
useful establish results relating different forms combination 
interesting line research aimed computability issues combination logics 
obvious question concerning preservation semi decidability computability problems appear concerning morphisms relating logics 
acknowledgments grateful colleagues acl initiative discussions role categorial techniques computing 
grateful colleagues group astesiano cerioli jos fiadeiro till mossakowski pawlowski reggio giuseppe scollo andrzej tarlecki uwe wolter elena zucca discussed idea combining logics institutional setting 
partially supported praxis xxi program praxis xxi projects mat mat acl plus tit esprit iv working groups aspire fireworks 

fiadeiro 
unifying theories different institutions 
haveraaen owe 
dahl editors trends data type specification pages 
springer verlag lncs 

blackburn de rijke 
combine logics 
studia logica 
print 

cerioli meseguer 
may borrow logic 
transporting logical structures maps 
theoretical computer science 

finger gabbay 
adding temporal dimension logic system 
journal logic language information 

finger gabbay 
combining temporal logic systems 
notre dame journal formal logic 

gabbay 
overview fibred semantics combination logics 
baader schulz editors frontiers combining systems pages 
kluwer academic publishers 

goguen burstall 
institutions model theory specification programming 
journal acm 

goldblatt 
logics time computation 
csli 
second edition 

harel 
dynamic logic 
gabbay guenthner editors handbook philosophical logic vol ii pages 
kluwer 

kracht wolter 
properties independently axiomatizable bimodal logics 
journal symbolic logic 

sernadas sernadas caleiro 
fibring logics categorial construction 
research report section computer science department mathematics instituto superior lisboa portugal 
submitted publication 

sernadas sernadas caleiro 
synchronization logics 
studia logica 
print 

tarlecki 
moving logical systems 
haveraaen owe 
dahl editors trends data type specification pages 
springerverlag lncs 

thomason 
combinations tense modality 
gabbay guenthner editors handbook philosophical logic ii pages 
kluwer academic publishers 
article processed macro package llncs style 
