uml ontology modelling language stephen martin department information science university po box new zealand mail ac nz current tools techniques ontology development traditions ai knowledge representation research 
research led popular formalisms kif kl style languages 
representations little known outside ai research laboratories 
contrast commercial interest resulted ideas object oriented programming community maturing industry standards powerful tools object oriented analysis design implementation 
standards tools wide rapidly growing user community 
examines potential object oriented standards ontology modelling particular presents ontology representation language subset unified modeling language associated object constraint language 
years number subfields artificial intelligence aiming increase ability systems interact humans external agents developing sharing ontologies formally specified models bodies knowledge defining concepts describe domain relationships hold 
research areas investigating design ontologies include agent software interoperability genesereth ketchpel knowledge acquisition smi natural language processing bateman 
various formalisms developed expressing ontologies notably knowledge interchange format kif knowledge representation languages descended kl brachman schmolze 
examine alternative formalism representing ontologies subset object management group unified modelling language uml associated object constraint language ocl 
objectoriented analysis design implementation maturing field industry standards emerging distributed computation 
large user community commercial support object oriented standards warrants investigation standard object modelling techniques ontology development 
motivated primarily consideration role ontologies play agent infrastructures supporting queries open dynamic collections heterogeneous distributed information sources 
systems sims knoblock ambite infosleuth bayardo observer mena ontologies model semantic structure individual information sources describe models domain independent particular information source 
challenges systems support construction user queries domain ontologies may initially unfamiliar user allow queries span multiple information sources representing computing mappings domain ontologies ontologies supported individual information sources 
common ontology modelling languages common formalisms represent ontologies knowledge interchange format kif kl style knowledge representation languages brachman schmolze 
kif provides lisp syntax expressing sentences order predicate logic provides extensions representing definitions metaknowledge 
kif highly expressive low level language representing ontologies stanford university knowledge sharing laboratory ontology editing tool ontolingua farquhar allows users build kif ontologies higher level description importing predefined ontologies defining concepts sets standard units time simple geometrical functions 
particular frame ontology ksl allows ontologies defined terms relations classes subclasses functions sets 
research ontology design performed researchers knowledge representation tools descended kl brachman schmolze 
kl basis field knowledge representation 
implemented structural inheritance networks networks containing descriptions named concepts generalisation specialisation links 
descendants kl include loom isi family logics called description logics terminological logics donini 
frame ontology discussed allows type specification conjunction general kif sentences 
description logic concepts introduced simply naming specifying fit generalisation specialisation hierarchy 
examples adapted nebel human set represents concept specialisation predefined concept representing class things 
new concepts defined terms existing concepts operations concept conjunction operator specify new concept common specialisation number concepts male student man student new roles may introduced represent possible relationships may hold instances concept individuals world example member represents class relations 
concepts may specialised operations value restriction operator restrict role possible values instances certain class number restriction operators atleast atmost restrict possible number values role may 
example states team set values member role instances human concept cardinality member role 
team set member human atleast member systems kl loom structure knowledge bases allow certain types inferences performed efficiently user defined concepts list paraphrased subsumption concept description general specific relation established 
coherence concept description logically coherent instance term 
identity concept descriptions refer concept 
compatibility concept descriptions common instances 
common specialisation properties common specialisation concept descriptions 
types deduction designed help user incrementally designing coherent set concepts instances describe domain 
description logics provide formal characterisation representational deductive capabilities kl style systems allow computations studied terms completeness computational complexity domain knowledge represented order predicate logic benefit specialised representation special purpose data structures algorithms support efficient reasoning 
addition structured knowledge base supports efficient processing declarative queries defined concepts 
uml ontology modelling knowledge representation kr systems loom large complex systems steep learning curve little known outside ai laboratories 
technology authors investigating mainstream rapidly growing arena object oriented technology construct distributed information retrieval processing system 
currently counterpart deductive capabilities kr systems current object oriented technology distributed information systems capabilities necessarily needed 
benefits kr systems occur process designing ontology 
support undoubtedly useful object oriented world support available design models mature commonly languages methodologies tools available 
function kr systems store highly structured data answer queries issue distributed information systems 
point systems sims infosleuth observer allow disparate databases information sources integrated 
assumed underlying databases information storage systems 
particular assumed information sources implemented kr systems 
systems loom implement key components distributed information system infrastructure query planning agents certainly possible reasoning engines 
authors view system uses ontologies constructed tool loom inherently intuitive appealing description logic formalism represent ontologies 
ontology representation formalism subset unified modeling language uml rumbaugh object management group omg omg associated object constraint language ocl omg warmer kleppe 
benefits uml ocl include uml large rapidly expanding user community 
users distributed information system infrastructures familiar notation kif description logics 
issue overlooked importance gaining acceptance distributed information systems technology new user communities 
description logic formalisms standard graphical representation models expressed uml 
graphical representation important allow users distributed information systems browse ontology discover concepts appear queries 
contrast description logic linear syntax standard graphical representation 
uml currently standard linear syntax omg process adopting xmi xml model interchange standard stream model interchange dstc 
object constraint language ocl powerful allows expression constraints described description logic 
course trade expressive power language computational complexity reasoning 
issue discussed section 
overview uml ocl uml defines types diagram model static dynamic behaviour system 
chosen model ontology static model consisting class diagram depict classes domain relationships object diagram show particular named instances classes 
sample class diagram appears 
section explains classes relationships shown diagram 
section describe uml notation 
class diagram classes represented boxes parts name class attributes class specified name type visibility operations class specified name argument list return type visibility 
purposes representing ontologies attributes considered public visibility ontology shared public view domain 
operations ontologies conjunction ocl postcondition constraints specify result operation 
operations included possible declare queries change state object operation invoked 
shows types relationship may classes generalisation represented lines large hollow arrow heads pointing super class see classes role top association represented solid lines classes optionally named ends roles class realisation middle association class right aggregation association diamond aggregate link class cd left aggregation relationship right 
uml includes stronger type aggregation composite aggregation notated solid black diamond implies ownership parts aggregate 
distinction types aggregation ontologies 
ends association aggregation relationships may annotated multiplicity indicators giving range numbers representing infinity denoting instances class relationship associated instance class 
small barbed arrow head may specify association aggregation relationship may navigated direction feature 
constructs uml 
class top right corner association class class attached association 
associations require attributes association classes student assignment grade attribute 
case association classes associations participate association class 
large rectangles folded corners notes uninterpreted pieces text may anchored dashed lines model elements provide informal clarification 
case notes attach ocl constraints classes associations 
necessary diagram produced rational rose provide general facility placing ocl constraints model 
diagram depicts objects links objects instances relationships hold linked objects respective classes 
class object included diagram specified object may optionally named 
values object attributes shown 
uml define standard set primitive types attribute operation declarations object constraint language proposed ontology modelling uml 
class diagram ocl may constrain attribute values possible instances relationships 
scope give comprehensive discussion ocl brief overview follows 
ocl expression written context instance specific type 
name self refer instance 
value instance attribute expressed expression naming instance dot attribute name 
dot notation traverse association aggregation relationship 
case dot followed name class far relationship initial letter changed lower case name role relationship named 
resulting expression represent single instance multiplicity role upper limit set instances traversing roles multiplicity indicators sequence instances roles labelled constraint ordered 
expression representing collection set sequence bag arrow operator invoke number standard functions predicates collection collection size 
example shows example uml class diagram modelling concepts relationships catalogue system clas role successor prev 
item track invariant sequence integer self collect movements size sequence integer iterate elt integer acc sequence integer sequence acc including elt acc subsequence size self collect movements size creator agent interpreter individual group movement numbers consecutive starting invariant self movement number sequence self movement size ensemble movements item subset realisation aren repeated invariant self realisation movement self movements self movements size self movements asset size track item numbers consecutive starting invariant self track number sequence self track size invariant self item number sequence self item size creation interpretation title string realisation string date date cd title string string number integer movements sequence integer integer ordered ordered movement number integer movements realisation subset invariant self movement number self movement number ordered ordered ordered form tempo track number integer label name string uml class diagram cd publisher catalogue specify tracks correspond movement realisation invariant item sequence integer iterate elt pos integer pos elt item pos pos endif pos endif max self track number self movement number self track movements self track specify tracks belong item invariant self track number number sequence self 
self self movements size music compact disc publisher 
model concentrates classes class located centre right represents piece music art 
aggregation movement objects ordered sequentially starting relationships associating agent role instances include roles name composer 
better represented ternary relationship association class association role rational rose support uml ary relationship notation 
realisation class located left represents particular recording part recording 
consists objects turn associated movement objects 
relationships associate agent conductor performer narrator 
cd class centre left consists ordered sequence objects class 
object represents partial instance appearing cd 
note realisation part may occur cd acd aggregate ordered track objects 
ocl constraint lower left corner specifies cd tracks belong item cd constraint restricts possible instances aggregation relationship label 
cd associated recording label 
classes diagram incomplete containing attributes full version ontology show details name attributes classes agent role tempo form 
required extensions uml ocl uml allows ends roles association aggregation links annotated constraint ordered meaning navigating role object results sequence objects set 
syntax defined object diagram specify actual ordering instances relationship 
simple include allowing new constraint type precedes relate association links object diagram 
ocl contains predefined functions collections objects simple mapping function bags sets sequences called iterate 
iterates collection expression involving current element modify single accumulator value step 
function highly frustrating due support single accumulator value 
problem solved tuple type introduced ocl 
accumulator tuple different values 
ocl lacks facility temporary variables functions avoid having repeat subexpressions expression 
example uses non standard con struct solve problem 
need construct noted number shortcomings ocl proposed solutions 
semantics uml ontology formal model domain important language describe formal semantics 
unfortunately official omg document defining semantics uml gives informal description english omg 
shortcoming currently addressed number researchers proposed various different forms semantics uml including direct mathematical model system described uml breu description specification language evans operational semantics describing uml model evolves new elements added 
semantics ocl necessarily include semantics class diagrams proposed richters gogolla 
reasoning ontologies uml choosing ontology representation language sufficient consider ease language describe domain 
necessary consider types automated reasoning ontologies may required 
known tradeoff representational power formalism tractability solvability reasoning levesque brachman 
example kif provides expressive power order predicate logic reasoning ontologies plain kif requires general theorem proving capabilities 
contrast description logic provides structured general language describing ontologies specialised inferences performed ontologies described description logic 
research undertaken investigate computational properties various types inferences different variants description logic nebel 
ontology representation language uml class diagram containing ocl constraints conjunction object diagram contains highly structured model support automated reasoning basic class object model ignoring ocl constraints expressive language practical attempt general purpose reasoning reason 
research needed clarify types inference desirable possible support ontologies represented uml 
partly depends type system ontologies intended 
suggest uml considered alternative description logic formalisms situations 
example kr tool inadequate ontology modelling medical expert system uml provide straightforward alternative modelling ontologies form part deductive system 
necessary express semantics uml class diagrams deductive system logic increase complexity length deductions hybrid system constructed inferences due implicit semantics ontology integrated explicit deductive reasoning system 
systems required type reasoning ontologies restricted answering specific specialised questions uml stronger candidate 
remains identify questions answered ontologies 
consider example distributed information retrieval system stages particular inferences ontologies may needed initial construction ontology 
area supported description logics provide inference mechanisms checking integrity ontology constructed 
similar capabilities useful object oriented modelling uml reason current object oriented modelling methodologies included mechanisms 
assisting users form queries ontology 
example may useful system help users discover concepts appear queries finding displaying shortest navigation paths class classes attributes names matching user supplied pattern 
decomposing translating queries expressed high level domain ontologies query plan involving ontologies specific data sources 
requires representation relationships ontologies mechanism reasoning 
expect sort reasoning required distributed information systems performed class object diagrams 
cases ocl constraints regarded extra detail specifying systems implement ontology behave 
example class diagram states cd contains objects tracks 
object contains subset cd tracks 
ocl constraint specifies cd tracks associated item 
constraint important part ontology viewed specification 
implemented system claims support ontology respect constraint 
purposes information retrieval constraint ignored implementation detail 
alternatively may possible define set standard ocl constraints forming language supported automated reasoning types slot constraints provided description logic 
equivalent frame ontology ontolingua kif plus frame ontology seen higher level language translated structured formalisms loom provided plain kif sentences included ontology 
important subject research 
uml described mof model metamodel ontology modelled uml mof model meta metamodel ontology modelling language described mof model ontology modelled uml mof ontology repository supporting multiple ontology languages single ontology representation language necessarily convenient modelling domains 
may useful ontology representation languages available ontology designer 
infosleuth project interesting approach supporting multiple modelling languages bayardo 
simple frame language define specific ontology representation languages object models entity relationship diagrams 
actual ontologies expressed instances languages 
layer model frame layer acting meta metamodel definitions ontology representation languages metamodels ontologies models 
similar facility offered omg meta object facility mof omg dstc 
mof defines standard corba services manage meta information distributed environment 
defines model fact meta meta model describe modelling languages uml 
defines interfaces populate query repositories models defined various languages 
intend framework build ontology server agent similar capabilities infosleuth project 
shows structure mof ontology server 
omg currently selecting standard stream model interchange format omg interchange mof models metamodels 
xmi xml model interchange adopted dstc 
investigated uml ocl representation information system ontologies constructed example ontology domain cataloguing system classical music compact discs 
uml ocl show promise representing kinds relationships constraints familiar systems builders 
research includes investigating potential reasoning ontologies expressed uml ignoring ocl constraints recognising specific forms constraints amenable automated reasoning 
bateman john bateman fabio rinaldi 
generalized upper model 
www darmstadt gmd de publish komet html 
bayardo bayardo jr brice cichocki fowler helal kashyap martin nodine rashid rusinkiewicz shea unruh woelk 
infosleuth agent semantic integration information open dynamic environments 
joan editor proceedings acm sig mod international conference management data sigmod record pages june 
brachman schmolze brachman schmolze 
overview kl knowledge representation system 
cognitive science april 
breu ruth breu radu grosu franz huber bernhard rumpe wolfgang 
precise semantics object oriented modeling techniques 
haim kilov bernhard rumpe editors proceedings ecoop workshop precise semantics object oriented modeling techniques pages 
technische universit nchen tum 
stephen simon mcbride kerry raymond 
meta object facility tutorial draft 
www dstc edu au meta object facility tutorial html 
donini donini lenzerini nardi schaerf 
reasoning description logics 
brewka editor principles knowledge representation reasoning studies logic language information pages 
publications 
dstc distributed systems technology centre 
meta object facility frequently asked questions 
www dstc edu au meta object facility html 
dstc distributed systems technology centre 
xmi spec recommended 
news item meta object facility information web page www dstc edu au meta object facility january 
evans andy evans robert france kevin lano bernhard rumpe 
developing uml formal modelling notation 
pierre alain muller jean zivin editors proceedings uml international workshop france june pages 
france 
farquhar adam farquhar richard fikes james rice 
ontolingua server tool collaborative ontology construction 
proceedings th knowledge acquisition knowledge systems workshop kaw 
genesereth ketchpel genesereth ketchpel 
software agents 
communications acm july 
ira ramesh patil peter szolovits 
representing medical knowledge terminological language difficult 
proceedings symposium computer applications medical care pages 
ieee computer society press 
ali franco john stuart kent richard mitchell 
reflections object constraint language 
pierre alain muller jean zivin editors proceedings uml international workshop france june pages 
france 
ali john stuart kent 
interpreting object constraint language 
proceedings th asia pacific software engineering conference 
ieee press 
isi information sciences institute 
loom project home page 
www isi edu isd loom loom home html 
knoblock ambite knoblock ambite 
agents information gathering 
bradshaw editor software agents 
aaai mit press 
ksl knowledge systems laboratory 
frame ontology 
ftp ftp ksl stanford edu pub ontologies html frame ontology frame ontology 
lisp html 
levesque brachman hector levesque ronald brachman 
fundamental tradeoff knowledge representation reasoning revised version 
ronald brachman hector levesque editors readings knowledge representation pages 
morgan kaufman 
mena mena illarramendi kashyap sheth 
observer approach query processing global information systems interoperation pre existing ontologies 
distributed parallel databases 
appear 
national committee information technology standards technical committee information interchange interpretation 
draft proposed american national standard knowledge interchange format 
logic stanford edu kif html 
nebel nebel 
reasoning revision hybrid representation systems 
lecture notes artificial intelligence number 
springer verlag 
omg object management group 
uml semantics version 
ftp ftp omg org pub docs ad pdf september 
omg object management group 
object constraint language specification 
ftp ftp omg org pub docs ad pdf september 
omg object management group 
mof specification 
www omg org meetings schedule technology html tbl mof specification 
omg object management group 
omg homepage 
www omg org 
omg object management group 
model interchange web page 
www 
omg org meetings schedule model interchange html 
gunnar 
formal approach relationships unified modeling language 
manfred broy derek coleman tom maibaum bernhard rumpe editors proceedings workshop precise semantics modeling techniques 
technische universit nchen tum 
bernd 
general characterisation term description languages 

bl sius ck editors sorts types artificial intelligence lecture notes artificial intelligence number pages 
springer verlag 
richters gogolla mark richters martin gogolla 
formalizing uml object constraint language ocl 
tok wang ling ram li lee editors proc 
th int 
conf 
conceptual modeling er 
lecture notes computer science number springer verlag 
rumbaugh james rumbaugh ivar jacobson grady booch 
unified modeling language manual 
addison wesley 
smi stanford medical informatics 
prot project 
smi web stanford edu projects protege 
warmer kleppe jos warmer kleppe 
object constraint language precise modeling uml 
addison wesley 
