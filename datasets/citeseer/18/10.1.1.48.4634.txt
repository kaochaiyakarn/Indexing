glomosim library parallel simulation large scale wireless networks xiang zeng bagrodia mario gerla department computer science university california los angeles los angeles ca number library parallel sequential network simulators designed 
describes library called glomosim global mobile system simulator parallel simulation wireless networks 
glomosim designed extensible composable communication protocol stack wireless networks divided set layers api 
models protocols layer interact lower higher layer apis 
modular implementation enables consistent comparison multiple protocols layer 
parallel implementation glomosim executed variety conservative synchronization protocols include null message conditional event algorithms 
describes glomosim library addresses number issues relevant parallelization presents set experimental results ibm sp distributed memory multicomputer 
experiments models constructed library modules 
rapid advancement portable computing platforms wireless communication technology led significant interest mobile computing mobile networking 
primary forms mobile computing popular mobile computers continue heavily wired network infrastructures 
hardwired single location ip address computer dynamically move multiple locations maintaining application transparency 
protocols mobile ip suggested handle message routing scenario 
somewhat analogous cellular telephony mobile subscribers communicate single hop base station subsequently routes call fixed network 
second form called ad hoc networking communication set mobile units established fly existing network infrastructure 
general form ad hoc networking supports transmission multimedia traffic multi hop transmissions network mobile communicating devices 
fairly easy devise mobile networking scenarios mobile multi hop wireless network interfaced wired network performance determined characteristics wireless wired network components 
protocols designed kind environment complex evaluate analytically due factors complex channel access protocols node mobility channel propagation properties radio characteristics 
excessive execution time detailed models forms barrier effective simulation 
explore parallel discrete event simulation reduce execution time composable detailed simulation model wireless networks 
glomosim library sequential parallel simulator wireless networks 
designed set library modules simulates specific wireless communication protocol protocol stack 
library developed parsec parallel simulation language 
new protocols modules programmed added library language 
glomosim designed extensible composable 
implemented shared memory distributed memory computers executed variety synchronization protocols 
focus parallel performance study distributed memory multicomputer ibm sp 
remainder organized follows section discusses related area network simulation 
section outlines wireless system architecture considered 
section describes primary simulation design approach 
section discusses number issues relevant parallel simulation large scale mobile networks 
section presents experimental results parallel performance study section 
related existing research parallel network simulation done context wired networks include atm networks lan simulators interconnection networks parallel computers 
relatively little research done evaluate feasibility parallel simulation wireless networks 
wireless wired networks differ fundamental ways example signal interference attenuation concerns inherently complicated typically computationally intensive wireless wired 
broadcast nature wireless radio transmission communication topology simulation models relatively denser equivalent wired network 
research described studied performance parallel simulation specific protocol clustering algorithm mobile multi hop wireless networks 
attempts develop entire set protocols designing library containing parallelized modules simply composed evaluate performance different implementations protocol stacks large networks 
closely related effort parallel simulation pcs networks 
significant differences network characteristics simulation research issues 
pcs cell centralized communication system node talk base station assigned cell 
wireless networks considered include multi hop networks 
second wireless communication medium modeled differing detail involves different complexity parallel simulation 
third pcs models communication limited cell mobility may cause inter cell inter processor communication parallel execution 
parallel simulation wireless network node mobility ordinary communication may cause inter processor communication signal interference neighboring cells propagation explicitly modeled dramatically increases inter processor communication topology 
network architecture focus simulation ad hoc networks 
networking stack decomposed number layers shown 
number protocols developed layer models protocols layers developed different levels granularity 

glomosim architecture example channel propagation layer includes free space model calculates signal strength distance source receiver pair analytical model computes signal attenuation log normal distribution fading channel model computationally expensive incorporates effect multi path shadowing fading calculating signal strength 
example alternative protocols consider data link mac layer number protocols suggested including carrier sense multiple access csma multiple access collision avoidance maca floor acquisition multiple access fama 
modeled glomosim library 
network layer flooding protocol flat distance vector routing protocol dsdv contained library 
developing hierarchical routing protocol handle scaled network routing 
transport layer tcp ip simulator free bsd implementation built library 
common api neighboring models protocol stacks predefined support composition 
apis specify parameter exchanges services neighboring layers 
example interfaces data link mac layer network layer defined message passing formats simulation library packet handling apis packet nw type dest source payload size packet nw type dest source payload size propagation model mobility model radio model data link mac clustering optional wireless network layer routing wireless network layer vc support ip mobile ip transport layer tcp udp rtp application traffic generator type refers type packet data packets control packets dest source refer respectively source destination node parameters required packet processing quality service support 
protocol module layer required comply apis defined layer 
simulation design wireless model library glomosim aims develop modular simulation environment protocol stacks described previous section capable scaling networks thousands heterogeneous nodes 
protocol models obey strict apis defined layer feasible simply swap protocol models certain layer say evaluate impact csma maca media access control protocol having modify models remaining layers stack 
glomosim library written parsec parallel simulation environment complex systems simulation environment derived simulator 
parsec adopts message approach discrete event simulation physical processes modeled simulation objects called entities events represented transmission time stamped messages corresponding entities 
visual programming environment called pave parsec visual environment developed support visual design parsec programs visually configure simulation models pre defined components library specific application domain glomosim 
requirements scalability modularity library design challenging issue 
straightforward approach map network node single simulation object parsec entity instance 
previous experience indicated large number simulation objects considerably increase simulation overhead design scalable 
example order simulate networks mobile nodes entity instances created 
untenable impractical 
glomosim assumes network decomposed number partitions single entity defined simulate single layer complete protocol stack network nodes belong partition 
interactions entities obey corresponding apis described previous section 
syntactically interactions may specified messages function calls entity parameters appropriate 
method supports modularity parsec library entity representing layer protocol stack largely self contained 
encapsulates complexity specific network behavior independently ones 
method supports scalability node aggregation inside entity able reduce total number entities improve sequential performance dramatically parallel performance 
number protocols implemented library mentioned section 
composition library entities complete protocol stack group mobile nodes described textually initialization entity called driver visually pave subsequently generates corresponding driver entity 
addition parallel conservative execution necessary map entities processors specify communication topology information required corresponding protocol 
information may specified pave front textually driver entity 
parallelization efficient parallel simulators address sets concerns efficient synchronization reduce simulation overheads model decomposition partitioning achieve load balance efficient process processor mappings reduce communications overheads parallel execution 
synchronization protocols performance glomosim library evaluated function different conservative synchronization algorithms null message protocol conditional event protocol accelerated null message protocol anp combination preceding schemes 
parsec visual front pave allows choice specific conservative runtime selected simply option execution command 
null message protocol known omit descriptions 
conditional event protocol distinguishes definite conditional events 
definite events scheduled locally entity instance departure job fifo server conditional events require communication lps entities identify globally earliest conditional event converted definite event 
synchronous asynchronous algorithms defined identify earliest conditional event algorithms similar compute gvt optimistic synchronization protocols 
primary advantage conditional event algorithm performance sensitive lookahead properties model 
anp algorithm uses null messages conditional event algorithm expected perform models lookahead properties understood change dynamically 
sequential simulation model typically refined ways parallel execution entities comprise model mapped processors mapping issues addressed section 
second improve parallel performance conservative protocols exact communication topology lookahead properties specified model 
glomosim library entities added related optimization codes appropriate parsec constructs 
briefly described sub sections 
communication topology specification 
parsec entity contains default variables called destination set respectively refer set entities send receive messages entity 
specifying sets precisely entity synchronization overheads null message conservative method reduced significantly 
purpose parsec provides functions called inside entity respectively add delete entities source destination sets 
add source entity identifier list add dest entity identifier list delete source entity identifier list delete dest entity identifier list parsec run time system guarantees execution entity synchronized entities belonging source set 
entity receives message entity declared source appropriate error messages generated 
current glomosim implementation models assume static communication topology specified initialization entity called driver 
user defined lookahead 
seeing lookahead exploitation essential improve performance conservative protocol try extract lookahead parsec entity semantic information 
specifically entity output message time stamp increment compared entity current simulation clock say lookahead obtained 
example channel propagation model specify lookahead propagation delay guarantee output message timestamp increment value entity current clock 
generally regard entity simulating network protocol fcfs server lookahead obtained pre computing service time 
parsec provides function called lookahead specify dynamic lookahead 
partitioning primary goal partitioning decompose simulation model number components keep computational load approximately balanced minimizing communication overheads 
glomosim attempted assigning approximately equal number network nodes partition equal number entities partitions processor 
application complete load balance decomposition initial static network topology impossible due non uniformity traffic directed partition neighbors 
example assume network nodes placed region 
region partitioned number ways consider partitions respectively referred partition shown 
various partitions potentially different number neighbors communication topology asymmetric implies cross border message traffic computational load unbalanced 
partition partition may improve load balance factor number neighboring partitions differ dramatically various partitions partition 
experimental results parallel performance different partitioning schemes section 
note models typically appropriate assume toroidal region form communication irregularity 

partition 
partition 
partition proper selection partition units may reduce interprocessor messages 
application inter partition message sent simulated network packet transmitted radio power strong border partitions 
message just local computation partition 
select partition equal effective transmission range mobile radio 
hand increasing partition unit size ratio cross border messages local messages reduced 
hand decreasing partition size allow nodes distant partitions computed relatively independent 
mapping glomosim partition consists set entities simulates certain network model executed group mobile nodes 
partitions layers implies entities 
typically larger available number processors entities aggregated processors scheme 
evaluate impact horizontal vs vertical mappings aggregation entities 
scheme entities partitions simulate network layer mapped processor scheme entities simulate different layers partition mapped processor 
considering simple experiment includes different layers protocol stacks channel radio mac traffic generator partitions sequential processor parallel performance mapping schemes shown table 
mappings yield parallel performance improve vertical aggregation efficient evaluated synchronization protocols 
follows messages simulating data flow control flow passed frequently entities simulate corresponding layers 
vertical mapping assigns entities simulating layered protocol stack region processor lower communication overhead compared horizontal mapping 
mapping gel sec null sec cond sec anp sec horizontal vertical table execution time comparison aggregation schemes concern distribution partitions processors 
view partitions forming twodimensional matrix 
typical strategies decomposing matrix include random mapping assigns entities randomly processors block mapping assigns block neighboring entities processor cyclic mapping assigns entities cyclically processors 

block mapping 
cyclic mapping table presents parallel execution time cyclic block mapping partition processors respectively 
network configuration table 
block mapping achieves better performance cyclic mapping null anp protocol conditional protocol significant difference seen 
processors null sec cond sec anp sec block block cyclic cyclic table parallel performance vs mapping schemes results indicate performance null message anp algorithms considerably sensitive specific mapping scheme block vs cyclic conditional event algorithm 
obviously model includes communication primarily neighboring entities block mapping better exploiting locality 
reduce inter processor real message piggybacked null message passing 
conditional algorithms benefit mapping choice identification earliest event requires global communication entities processors regardless specific communication topology model 
subsequent experiments reported sections block mapping vertical aggregation 
experiment configurations results configuration configuration subsequent experiments investigate parallel performance raw packet traffic generator poisson distribution maca csma protocol data link mac layer spread spectrum radio capture ability node free space channel propagation model 
parameters experimental configuration adjusted simulation complete reasonable period 
typically include number network nodes specified dimensions region nodes randomly deployed static network topology assumed traffic pattern poisson process pkt sec node specified radio transmission range additional parameters defined appropriate models individual entities 
parallel architecture ibm sp distributed memory multi computer 
consists set rs workstation processors connected high speed switch 
node main memory megabytes 
ensure consistent meaningful comparisons parallel performance speedup processors reported computed respect partitioned sequential implementation global event list algorithm implemented splay trees partitioned parallel algorithm processors 
partition load balance experiment set experiments identify suitable partitioning strategy 
shows variation speedup processors partition schemes discussed section 
conservative algorithms null message null conditional event cond combination approach anp case 
consider impact partitioning scheme seen general linear partitioning yields best performance 
linear partitioning simplest communication topology entity communicating entities 
communication null message ratio partitions greatly reduced 
secondly partitioning schemes running processors performance conditional event algorithm slightly superior null message algorithm 
speedup measurement different partition schemes number processors increases situation reverses performance gap algorithms gets deeper 
attributed high overhead global communication required conditional event algorithm compute earliest event 
processors global computation conditional event protocol requires inter processor conditional event messages broadcast 
performance anp algorithms close null message algorithm number processors increases substantially 
situation overhead due conditional event computations degrades performance 
thirdly note number network nodes partitions speedup increase significantly number processors increased 
analysis indicates increasing number processors leads dramatic increment inter processor messages cancels partial potential benefits increased concurrency 
partition number processors partition number processors partition number processors null cond anp partition gel sec null sec cond sec anp sec table execution time sequential node conservative algorithm note sequential algorithm gel slower node conservative algorithms 
exact execution times table 
relatively worse performance gel primarily due larger entity scheduling queue management overheads 
gel executes events strictly timestamp order entities cause numerous unnecessary context switches 
case conservative algorithms processes lookahead number events may executed entity events lower timestamp executed different process 
result fewer context switch operations 
second gel sort entities order earliest message timestamp input queue 
entity queue implemented splay tree sorted queue operation involves overheads unsorted entity lists exploited conservative algorithm implementation 
parallel performance network characteristic dependency speedup comparison csma maca expected different protocol models yield different parallel performance due respective characteristics 
presents parallel simulation speedup networks identical respects uses carrier sense multiple access csma uses multiple access collision avoidance maca protocol mac layer 
dramatic differences apparent experiment 
analysis indicates models similar lookahead properties maca involves real messages negotiate channel acquisition nmr ratio null message number real message number obviously smaller csma table 
know smaller nmr indicates model greater ratio computation synchronization overhead potentially concurrency exploited parallel speedup 
model nmr maca csma table 
nmr comparison models considering maca protocol usually requires longer simulation execution times performs better larger wireless networks subject hidden terminal problems remaining experiments channel acquisition strategy course fact parallel performance numbers better 
impact network characteristics traffic load node density parallel simulation performance 
experimental configurations largely specified section vary traffic arrival rate network node packet sec packets sec node density vary assigning different network nodes fixed geographical area 
figures parallel execution results processors partition scheme null message synchronization protocol 
clear increasing traffic rate node density monotonically improves parallel performance 
reason seen reduced nmr scenarios shown table table 
number processors csma maca 
speedup vs traffic load number processors pkts sec pkts sec pkts sec pkts sec 
speedup vs node density number processors speedup traffic load pkt sec nmr table nmr various traffic loads node number nmr table nmr various node densities progress describes glomosim modular library parallel simulation wireless network 
designed extensible composable communication protocol stack wireless networks divided set layers apis defined layer 
architecture allows implement alternative protocols layer evaluate performance consistent manner 
parallel model execution provided users transparent manner 
user typically configures experiment visually placing icons represent nodes select sequential available conservative synchronization algorithms 
parallel algorithm selected analyst additionally indicate mapping strategy number processors 
set experimental results distributed memory multi computer compare parallel performance different conservative synchronization algorithms partitioning schemes entity processor mapping network characteristics dependency 
current progress aimed expanding library new protocol modules thorough investigation parallel performance impact different parallel architecture environment node mobility suitability optimistic synchronization algorithms 
research supported domains contract funded darpa ito contract 

special reviewers valuable comments parsec group implementation support 
assistance preparing copy 
bagrodia gerla kleinrock short adaptive mobile multimedia networks 
ieee personal communications june 
bagrodia liao 
language design efficient discrete event simulation 
ieee transactions software engineering 
april bagrodia chen parallel simulation high speed wormhole routing network proceedings pads bagrodia parsec parallel simulation environment complex system ucla technical report 

christopher richard fujimoto yi bing lin paul england distributed simulation large scale pcs networks chandy sherman 
conditional event approach distributed simulation 
distributed simulation conference miami 
clearly tsai conservative parallel simulation atm networks proceedings pads fujimoto 
parallel discrete event simulation 
communications acm october 
holvoet agents simulating implementing petri nets proceedings pads 
jha bagrodia transparent implementation conservative algorithms parallel simulation languages 
winter simulation conference december 
karn maca new channel access method packet radio arrl amateur radio th computer networking conference arrl 
liu parallel simulation environment mobile wireless networks wsc kumar gupta karypis benjamin parallel computing martini tolle tolerant synchronization distributed simulations interconnected computer networks proceedings pads misra distributed discrete event simulation acm computing surveys march 
nicol parallel discrete event simulation fcfs stochastic queuing networks 
parallel programming experience applications languages systems 
acm sigplan july 
