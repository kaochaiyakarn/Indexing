diagram editing hypergraph parser support minas lehrstuhl fur programmiersprachen universitat erlangen 
erlangen germany email minas informatik uni erlangen de copyright ieee 
published proceedings vl september capri italy 
personal material permitted 
permission reprint republish material advertising promotional purposes creating new collective works resale redistribution servers lists reuse copyrighted component works obtained ieee 
contact manager copyrights permissions ieee service center lane box piscataway nj usa 
telephone intl 

diagrams communicating complex situations 
diagram editors support user editing diagrams computer 
creating diagram editors expensive time consuming 
frameworks customized specific diagram classes considerably reduce costs 
previous framework diagen internal hypergraph model offering syntax directed editing introduced 
presents incremental hypergraph parser extension diagen allows editing diagrams drawing tool 
hypergraph parser detects correct sub diagrams online notifies user incorrect diagram parts 
allows editing temporally inconsistent diagrams supports natural editing style 
nearly problem domain complex situations best usually frequently represented diagrams 
understood graphical means expressing multidimensional structures specific problem domain 
known examples shneiderman diagrams flowcharts context programming connection diagrams electrical engineering 
context visual languages diagrammatic languages special interest 
diagram class particular syntax visual appearance rules diagrams composed simple components diagrams look 
diagrams means constructing modifying graphical editor 
tool general purpose drawing tool user task keep diagrams syntactically correct diagram editor customized specific diagram class 
diagram editors offer specific diagram editing support user 
creating diagram editor particular diagram class expensive time consuming 
order reduce costs editor frameworks applied 
particular editor created adding custom components specific basic diagram blocks visual representations 
automatically generating custom components formal specification leads greatest possible simplification creating specific diagram editor 
describes framework diagram editors 
generator support offered components custom components created manually cf 
sec 
main feature described free editing diagram blocks drawing tool allowing inconsistent diagrams 
diagram editing support offered online parsing diagram structure editing sessions providing continuous visual feedback correct incorrect diagram parts 
rest organized follows current development diagram editor framework generator diagen 
section gives brief overview features 
basic notion hypergraphs hypergraph grammars represent diagrams introduced sec 

sections hypergraph parser detect correct sub diagrams context free hypergraph grammars restricted context sensitive ones 
section describes drawing tool behavior parser support integrated diagen framework 
related discussed sec 

section contains 
diagen framework development diagen consisting framework generator automatically creating custom components formal specification 
main diagen features interest details see diagrams internally represented hypergraphs see sec 
diagram class hypergraph language mapping hypergraphs visual representation diagrams 
context free hypergraph grammar language describe hypergraph language 
diagrams described context free grammar additional graph transformations serve means create context sensitive shares 
nodes hyperedges carry attributes grammar productions augmented layout constraints attributes accessible production 
constraint solver provides automatic user adjustable layout diagrams 
text text cond cond text text text hypergraph representation nsd depicted fig 

diagrams syntactically edited transformations derivation trees hypergraphs described specification 
hide details user interactions user editor described certain interaction automata offering editing diagrams direct manipulation 
diagen state successfully applied create diagram editors 
examples offered drawbacks correct editing states possible experience generated editors shows pure syntactic editing restrictive intermediate inconsistent diagrams editing process easier 
inconsistent states comprehensive set complex transformations specified allow comfortable editing 
admitting inconsistent states clearly reduce number transformations specified 
specification transformations user interaction requires major share entire specification approx 
specification 
share reduced transformation necessary anticipated 
solution problems diagen extended drawing tool behavior parser distinguish correct diagram parts incorrect ones 
specification transformations restricted basic set convenient transformations 
free editing allows unspecified diagram modifications 
extreme case specification transformations completely omitted 
sections discuss basic mechanisms support free editing online parsing combination existing diagen features 
hypergraph representation diagrams hypergraphs proved intuitive means internally representing diagrams 
hypergraph generalization graph edges hyperedges connected fixed number nodes nsd nsd stmt nsd nsd stmt text cond nsd nsd stmt context free hypergraph grammar 
nonterminal hyperedges depicted white ovals terminal hyperedges gray rectangular structures connected nodes 
note abbreviated representation productions lhs 

hyperedge type number connection points determine nodes hyperedge connected 
say hyperedge visits nodes 
familiar directed graph seen hypergraph hyperedges visit exactly nodes 
example representing shneiderman diagram hypergraph consider figs 
nodes hypergraph stand points plane hyperedges diagram elements position nodes visited hyperedge 
diagram class described terms hypergraphs 
order define hypergraph language hypergraph grammars appropriate means 
time context free hypergraph grammars restricted context sensitive grammars considered sec 
analogously defined context free string grammars similar properties 
expressiveness higher context free string grammars 
terminal nonterminal hyperedges hypergraph grammars alphabet symbols string grammars 
contrast string grammars hypergraphs represent multidimensional relationships directly 
production context free hypergraph grammar consists left hand side lhs single nonterminal hyperedge nodes visited see fig 

lhs production starting graph grammar 
production rhs arbitrary hypergraph 
application production hypergraph similar string grammars lhs subgraph hypergraph subgraph removed replaced rhs 
resulting hypergraph said derived 
hypergraph language diagram class context free hypergraph grammar set derivation nsd stmt nsd text stmt nsd text derivation steps hypergraph fig 
grammar depicted fig 

graphs derivable starting graph consist terminal hyperedges 
order specify rhs node replaces lhs node corresponding nodes lhs rhs labeled letters 
sample derivation sequence shown fig 

syntactic structure similar string grammars represented syntax tree nonterminal hyperedges hyper nodes inner nodes terminal edges hyper nodes leaves 
context free hypergraph parsing section describes hypergraph parser contextfree hypergraph grammars 
parser constructs syntactic information hypergraph searches maximal subgraphs syntactically correct creates syntax trees 
parser works modes create syntactic information scratch incrementally update syntactic information hypergraph modifications 
parser especially suited online parsing editing sessions 
basic context free hypergraph parser idea parser inspired kasami parser cyk context free string grammars 
original cyk parser context free grammar chomsky cnf productions rhs consisting exactly terminal exactly nonterminal symbols 
restriction context free grammar transformed cnf 
special case empty word grammar language omitted 
cnf context free hypergraph grammars similarly defined rhs production consists hypergraph exactly terminal hyperedge terminal production exactly nonterminal hyperedges nonterminal production 
starting graph consist exactly nonterminal hyperedge start ing edge 
context free grammar transformed cnf 
shows hypergraph grammar cnf equivalent nsd grammar fig 

hypergraph parser constructs syntactic information bottom similar original cyk parser starts terminal hyperedges creates nonterminal hyperedges derived terminal productions 
parser creates additional hyperedges derivable hyperedges created previously 
syntax trees syntactically correct subgraphs inherently constructed storing directly derivable hyperedges nonterminal hyperedge 
efficient organization bottom construction nonterminal hyperedges successively create sets number terminal hyperedges nonterminal hyperedges derived terminal subgraph exactly hyperedges 
filled hyperedges derivable terminal productions 
sets successively created 
new nonterminal hyperedge visited nodes inserted exist hyperedges gammai derived hypergraph consisting corresponding nodes nonterminal production 
terminal subgraphs disjoint hyperedge sets 
termination sets hyperedges derived child hyperedges contain complete syntactic information hypergraph 
entire hypergraph syntactically correct contains starting edge 
grammar ambiguous starting edge instance contained 
assume non ambiguous grammars enforced additional application conditions attached productions 
general hypergraph entirety syntactically correct contains number correct representing diagrams unconnected hypergraph 
sets easy find set maximal correct subgraphs consisting hyperedges possible syntactically correct sets gamma gamma searched occurrences starting edges 
hyperedge selected conflicts previously selected starting edge instance 
edges said conflicts terminal subgraphs common terminal hyperedges 
termination selected starting edge instances syntax tree roots correct subgraphs specifying correct sub diagrams 
note classification general ambiguous set contains starting edge instances overlapping terminal subgraphs selected sequence checking starting edge instances may influence selection 
incremental parsing parser algorithm described far constructs hypergraph syntactic information scratch 
keeping syntactic information sets date call terminal subgraph derived hyperedge simply terminal subgraph nsd cond stmt nsd nsd nsd cond cond nsd text nsd nsd stmt text nsd nsd chomsky normal form hypergraph grammar fig 

hypergraph modifications gain incremental parsing algorithm 
hypergraph modification divided basic modifications kinds splitting hypergraph unconnected subgraphs nonterminal hyperedges invalid terminal subgraphs split splitting entire hypergraph 
updating sets means check nonterminal hyperedge remove terminal subgraph split 
joining previously unconnected subgraphs merging hypernodes existing nonterminal edges remain valid parser create additional ones 
done parsing scratch pairs processed nonterminal edges may remain 
adding isolated hyperedge hypergraph additional empty set established extended nonterminal hyperedges derived new terminal 
examples hypergraph parser applied different diagram classes 
mentioned nsd class grammar cnf shown fig 

class consists structured flowcharts flowcharts representing structured programming style 
order demonstrate applicability parser online parsing timing measurements diagram classes tab 

parser written java applied hypergraphs various numbers terminal hyperedges 
parsing performed pentium pc 
assume syntactically correct subgraphs connected nsd example 
corresponds grammar production connected rhs 
similar argumentation applies 
compared preliminary report hypergraph parsing parser completely rewritten 
explains noticeable improvement parsing time 
edges time fcs edges time table parsing time measurements fcs various size 
times measured milliseconds 
context free parsing context free grammars allow simple parsing algorithms possess limited expressiveness 
known class petri nets described context free hypergraph grammars 
briefly discuss expressive class hypergraph grammars called restricted context sensitive hypergraph grammars 
offering expressiveness able apply hypergraph parser sec 
minor modifications reasons choose grammar class 
idea restricted context sensitive hypergraph grammar regular context free hypergraph grammar defined sec 
extend certain embedding productions consist hypergraph lhs rhs additional hyperedge embedded hyperedge rhs 
goal embedded productions insert additional hyperedges certain context 
shows restricted context sensitive hypergraph grammar petri nets 
upper box contains context free productions lower embedding productions insert edges transitions places vice versa 
hypergraph parser easily extended kind grammar 
parsing performed steps hypergraph parsed grammar context free productions 
nonterminal hyperedge em pn pn pn restricted context sensitive hypergraph grammar petri nets nets 
hyperedge automatically created 
step occurrences right hand sides embedding productions searched context graph belong single subgraph correct step 
subgraph gets granted terminal subgraph embedded hyperedge 
diagram editing diagen section gives brief overview drawing tool behavior hypergraph parsing integrated diagram editors created top diagen 
common features editors current diagen framework discussed 
sample nsd editor 
diagram editor architecture diagram editors built top diagen common architecture predefined diagen framework 
shows main components editor data flow control flow dashed arrows 
active components depicted ovals data structures gray rectangles 
central part diagram editor hypergraph hyperedges representing diagram blocks visualized screen 
diagram blocks hyperedges temporally augmented selection sub diagrams groups 
corresponding syntactic information diagram created hypergraph parser described sec 

syntactic information hypergraph mark syntactically correct sub hypergraphs 
markings visualization part give feedback user correctness diagrams editing see section 
interaction control task communicate user gestures commands editor components 
important editing actions creating modifying diagrams 
modification transformation component performs modifications directly hypergraph drawing tool behavior primarily syntactic information consequence hypergraph syntax directed editing 
syntactic information provide automatic user adjustable layout 
component animation component offers possibility animate diagram actions movie fashion 
components customized specific diagram editor 
customization drawing tool visualization syntactic information animation modifications transformations user parser detection correct sub diagrams layout algorithm interaction control hypergraph diagram blocks selection groups components data control flow diagram editors built top diagen 
behavior parser support consists solely presenting hypergraph grammar parser providing diagram specific visualizations 
editor specific features offered components customizations described provided 
current diagen implementation 
completely rewritten 
previous version written osf motif non standard libraries diagen hardly portable 
furthermore system evolved period time making new necessary 
new version completely implemented java obvious advantages portability built www support 
new framework contains features old version new version provide full generator support old 
diagen framework properties diagen framework realized java class hierarchy extended object oriented way create specific diagram editors 
editor run stand application offering full functionality may embedded applet web page 
applet editor functionality restricted java security mechanism 
main deficiency able load save diagrams local disc 
editor created top diagen consists main window offering functions loading saving diagrams creating multiple views single canvas creating new instances diagram blocks canvas 
user manage view independently choosing zoom factor visible detail 
view offers full drawing tool behavior diagram blocks selected moved resized 
way actions influence diagram blocks customizable see 
diagram blocks internally represented hyperedges 
diagen framework offers mechanism automatically keep internal hypergraph synchronized diagram 
diagrams created positioning rearranging resizing diagram blocks 
level hypergraphs editing means adding deleting hyperedges merging nodes connecting subgraphs 
order node merging simple task nodes represented invisible areas certain types canvas called 
hypernodes merged corresponding matching types overlap canvas 
attaching diagram blocks giving appropriate types specific diagram class diagram blocks 
functions available diagen framework customized result hypergraph parser identification correct incorrect subgraphs 
diagen offers possibility color corresponding incorrect diagram parts certain color red correct diagram parts colors overlapping sub diagrams colored differently 
automatic user adjustable layout offered previous diagen version 
diagram block belonging correct sub diagram resized layout entire sub diagram updated described 
resizing diagram blocks belonging correct sub diagram handled block 
diagram blocks may contain text 
diagen offers editing window text contents may modified 
nsd editor new diagen framework create sample editor 
shows snapshot web page embedded editor applet consists main window 
contains image buttons create new nsd blocks new views cf 
figs 

creating new nsd block pushing corresponding image button newly created block selected placed canvas drag drop editors views 
figures show visual feedback correct incorrect sub diagrams 
diagram fig 
correct nsd colored white 
shows result tearing previously correct nsd apart moving block block belong correct sub diagram colored red 
remaining blocks fall apart correct sub diagrams 
colored differently white yellow distinguish 
note having overlapping necessary condition representing node 
previously hypergraph parser deal problems 
www informatik uni erlangen de diagen nsd editor screenshot web page supplying nsd editor diagen hypergraph support 
related diagen allows free editing parser support especially related designing visual language editors 
exist approaches visual language specification 
complete overview scope 
closely related approaches constraint multiset grammars visual language environment proposed rekers schurr generalization context free hypergraph grammars single lhs nonterminal token recognized rhs multiset tokens long satisfy production specific constraints spatial relationships 
recognize diagrams diagram represented multiset tokens 
incremental parsing algorithm similar allows free style editing diagrams providing feedback recognized diagrams 
automatic layout complex syntax directed editing operations supported 
connectivity tokens defined terms constraints simple representation diagrams hypergraphs 
parse tree main internal data structure 
object oriented generic graphical editor user define domain specific syntax semantics 
provides free form editing comprises incremental parser spatial relations 
supports complex syntax directed editing screenshot view containing correct nsd operations automatic layout 
description logic allows reasoning diagrams 
closely related approach proposed rekers schurr realized 
kinds graphs internal representations diagrams spatial relationship graph srg abstracts physical diagram layout represents higher level spatial relations 
additionally syntax graph asg kept date srg representing diagram logical structure 
context sensitive graph grammars define syntax graphs 
free editing diagrams planned modify graph syntax directed editing going modify second 
graph modified accordingly 
kind diagram semantics available asg 
differences diagen proposal hypergraphs allow natural representation diagrams user interaction features direct manipulation support animation diagrams created specification 
related graphical parsing approaches classified main classes approaches class deal visual expressions directly grammars visual symbols spatially related 
approaches second class graph representation visual expression analyzed 
graph parser applied graph 
approach falls second class 
example class wittenburg proposed unification grammars visual symbols spatially related 
production context free symbol replacement rule additional constraints symbols spatial relations 
bottom tabular parsing method constructs derivation trees 
earley style predictive parser proposed efficient parsing 
context freeness required 
golin picture lay screenshot view tearing nsd fig 
apart 
note coloring incorrect block correct sub diagrams correct single nsd 
grammars provide context free rewriting spatially related symbols 
grammars expressive additional non context free productions may take account terminal context 
replace derivation trees 
parser offline cyk style bottom parser similar proposed 
jorge glinert extended notion picture layout grammars introducing adjacency grammars provide certain adjacency operators contains intersects unbound productions productions constrained spatial relations rhs symbols 
incremental online parsing algorithm uses bottom top phase similar ideas incremental hypergraph parser graph representation 
example second class lutz chart parser flowgraphs special kind diagrams 
flowgraphs considered special case hypergraphs 
chart parser top bottom context free flow grammars 
rekers schurr proposed graph parser restricted context free grammars 
parsing algorithm uses bottom top phase re construct derivation sequences graph 
opposition parser proposed focussed incremental parsing analyzing syntactically incorrect graphs correct sub graphs 
advantage class approaches visual expressions directly dealt additional interpretation terms intermediate graph needed 
second class possible efficient parsers edges explicitly linked nodes 
checking spatial dependencies relations related edges immediately checking nodes edges visiting 
furthermore graph representation reasoning visual expressions easier 
described general framework customized order create specific diagram editors 
main feature discussed drawing tool behavior allows user arbitrarily position diagram blocks 
diagram editing support supplied hypergraph parser detecting correct incorrect diagram parts 
main results consist observations hypergraph parser constructing syntactic information online user edits diagrams feasible 
describing diagram editor easier approach rapid prototyping supported order create prototype hypergraph grammar basic diagram blocks provided 
additional optional features added 
possible syntax directed editing possible editing action anticipated 
free editing drawing tool style getting feedback correctness edited diagrams allows natural editing 
supported preventing temporally incorrect diagrams 
drawback approach lack guidance user syntax directed editing forces user create correct diagrams 
user task know correct diagrams created 
editor tells user parts correct incorrect 
diagen leaves sufficient topics current current investigates animation component added framework diagram actions movie animations 
current consequence current diagen version supporting context free parsing expressive grammar types restricted context sensitive grammars described sec 
supported diagen 
eventually provide full generator support customizing diagen framework 
favorable support offering means visually specifying diagram editor generating editor visual specification 
minas diagen generator diagram editors providing direct manipulation execution diagrams vl pp 

minas interaction really graphical user interfaces vl pp 

minas specification diagram editors providing layout adjustment minimal change vl pp 

minas high level visual language generating web structures vl 
berge hypergraphs north holland amsterdam 

kreowski note hyperedge replacement proc 
th int 
workshop graph grammars application computer science lncs pp 

kasami efficient recognition syntax analysis algorithm context free languages technical report air force cambridge research laboratory bedford mass 
younger recognition parsing context free languages time information control vol 
pp 

marriott automatic construction user interfaces constraint multiset grammars vl pp 

haarslev wessel editor generic semantics formal reasoning visual notation vl pp 

rekers schurr graph framework implementation visual environments vl pp 

wittenburg unification grammars tabular parsing graphical languages journal visual languages computing vol 
pp 

wittenburg earley style parsing relational grammars vl pp 

golin parsing visual languages picture layout grammars journal visual languages computing vol 
pp 

jorge glinert online parsing visual languages adjacency grammars vl pp 

lutz chart parsing flowgraphs proc 
th int 
conf 
artificial intelligence ijcai detroit michigan pp 
aug 
rekers schurr graph grammar approach graphical parsing vl pp 

ieee workshop visual languages seattle washington 
ieee computer society press 
ieee symp 
visual languages bergen norway 
ieee computer society press aug 
ieee symp 
visual languages st louis missouri 
ieee computer society press oct 
ieee symp 
visual languages darmstadt germany 
ieee computer society press sep 
ieee symp 
visual languages vl boulder colorado 
ieee computer society press sep 
