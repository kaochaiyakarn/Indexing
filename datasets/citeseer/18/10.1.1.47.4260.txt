reasoning varying uncertain resource constraints eric horvitz medical computer science group knowledge systems laboratory stanford university stanford california describe decision theory optimize value computation uncertain varying resource limitations 
research motivated pursuit formal models rational decision making computational agents centering explicit consideration preferences resource availability 
focus importance identifying multiattribute structure partial results generated approximation methods making control decisions 
simple algorithms control decision theoretic inference described 
computation uncertainty investigating decision theoretic control problem solving varying constraints resources required reasoning time memory 
motivated pursuit formal models rational decision making resource constraints goal extending foundational normative rationality computational agents 
describe portion research centers reformulating traditional computational problems strategies generating reasoning spectrum partial results characterized multiple dimensions value 
describing solution classical problems uncertain varying resource constraints shall return briefly larger motivating problem computational rationality focusing pursuit optimal strategies computing beliefs actions resource constraints 
rational agent applies inference strategy intention performing analysis net benefit 
usually uncertainty best way solve problem incompleteness knowledge value alternative computed results supported nasa fellowship ncc national science foundation iri national library medicine ro lm 
computing facilities provided aim resource nih rr 
published proceedings seventh national conference artificial intelligence minneapolis mn 
august 
morgan kaufmann san mateo ca 
pp 

particular situation difficulty generating results problem instance costs availability resources time required reasoning 
investigating decision theory alternative problem solving strategies uncertainty 
define components computational value terms expected utility 
decision theory guide allocation computational effort proposed decades ago 
computational utility term computational utility refer net value associated commitment computational strategy 
decompose components object level utility inference related utility object level utility strategy benefit attributed acquiring result regard costs associated computation 
example objectlevel utility medical expert system inference strategy value associated information generates entities medical problem alternative treatments likelihoods possible outcomes 
inference related component cost reasoning 
includes disutility delaying action waiting reasoner infer recommendation 
decomposition computational utility focuses attention explicitly costs benefits associated problem solving activity 
general case consider dependencies object value 
assume existence function relates additional information problem specific dependencies may exist components value ff fi fl ff fl fi fl ff fi represent parameters influence respectively object inference related utilities fl represents parameters influence object inference related utilities 
multiple attributes utility real world applications object level utilities frequently functions multiple attributes 
dimensions value acquired consultation computer users 
computational utility may assessed numerical quantities particular outcomes may described function represents relationships costs benefits associated alternative outcomes 
functions assign single utility measure computation status tuple attributes 
assume decompose set object level attributes captures dimensions value result accuracy precision defines object level attribute space sequence computational actions applied initial problem instance yields result oe may described vector components inference related cost computation time memory applications time required explain machine reasoning human define resource attribute space simplify scalar quantity time 
assume combined addition cost delay say gamma continuum value analysis algorithms directed proving results time required computing solution defined simple goals termination conditions 
perspective imposes useful simplification biased synthesis analysis solution policies indifferent variation utility result costs availability resources 
wish increase value computation limited varying resources identifying characterizing classes approximate partial results produced fraction resources required best available methods generating final results 
refer sequence primitive computational actions 
define subclass sequences computational actions oe transform specific problem instance randomly mixed file records final result oe total ordering records assistance omniscient oracle oe oe 
define oe resource required oe generate oe majority traditional algorithms generate specific oe halting reaching queried oe 
partial results wide variations value result agent availability cost suggest focus time complexity termination final results limited analyses centering solution time available crucial 
traditional approach part tendency assign measures utility computational behavior final solution computed maximum object level utility oe solution time available effort considered worthless expenditure 
construct sequences produce approximate partial results fraction oe 
introduce flexibility computation defining class computational actions operate instances produce partial results requiring fraction reasoning resources needed oe generate oe 
resource required generate 
partial results may viewed transformations desired final results dimensions utility oe maps real valued object level utility attributes oe 
context query oe object level utility equal utility oe 
reasoning costs preferable available oe particular contexts 
associate partial result vector space oe 
purposes summarization useful define context independent distance metric theta points space 
relate difference utility oe function context distance 
general meaningful distance metric difference utility oe gamma 
example widely context independent distance results numerical approximation simple unidimensional measure precision result taylor series carried particular term 
case oe separated distance space reals 
sophisticated partial results move familiar numerical approximation consider cases represents divergence oe higher dimensional properties computational result 
classes sophisticated partial results known 
suggest new directions research reasoning resource constraints 
dimensions result reflect human preferences 
richer partial results include output monte carlo simulation methods 
methods partially characterize probability interest probabilistically visiting portions problem yield sequence probability distributions set states additional computation 
class partial result generated randomized approximation algorithms 
results statements form probability divergence greater oe randomized algorithms may produce valuable partial results response queries oe ranging bin packing probabilistic entailment 
research classical algorithmic problems move traditional analysis results completion sorting records file examination manner alternative strategies refine valuable dimensions partial re sult additional resource expended 
manipulation partial results alternative approximation strategies essential reasoning beliefs actions varying resource constraints 
examples partial results may generated increasing abstraction propositions decreasing completeness dependencies decision model 
may useful develop metric represents distance conceptual space describing properties inference 
example component value probability result consistent axiom set axioms 
named computational strategies manage complexity computing computer scientists defined characterized computation terms strategies 
computational policies include familiar named sorting searching algorithms 
strategy typically defined repetitive pattern computational activity conjunction set simple control rules apply large class inputs 
majority strategies generate intermediate states object level value terminate specific queried oe produced 
oe refer strategies 
partial result strategies ability generate transformations iterative nature strategies allows represent result produced strategy function problem instance amount resource applied 
endow termination criteria costs benefits continuing compute 
subclasses ability refine attributes object level value continuous monotonically increasing function allocated resource 
incremental refinement policies yield immediate object level returns small quantities invested computation reducing risk dramatic losses situations uncertain resource availability 
availability continuous range partial results range resource control reasoners flexibility optimize tradeoff varying object level utilities resource constraints 
particularly flexible spanning converge oe demonstrate continuous monotonically increasing refinement applied resource ranges zero quantity resource required convergence 
may desirable generate results converge near oe quantities resource equal resources required efficient known oe produce oe 
unfortunately may case agent frequently pay resource penalty having access times preferred oe generate oe 
bounded discontinuity refers policy ability perform specified ffl refinement attributes ao ffi expenditure specified range desirable properties bounded resource strategies discussed 
uncertain resources challenges issues surrounding computation varying uncertain resource limitations explored protos project 
seek develop design time inexpensive methods selecting strategies realtime reasoning 
assessing prototypical utility resource contexts designing control decision rules 
particularly interested control rules fraction available resource examine context instance construct select valuable strategy 
prototypical classes resource constraints classes functions describing examined including urgency deadline urgent deadline situations 
cost functions common realworld applications universal interactions lost opportunity competition limited resources 
functions vary form depending nature criticality situation 
urgency refers general class inference related utility functions assign cost monotonically increasing function delay 
deadline pattern refers cases insignificant certain level resource reached 
point computation halt maximum object level utility attained halt reported immediately 
result worthless 
urgent deadline requires consideration cost availability time 
rational decisions computation rational computation policy decision optimizes computational utility frequently optimization done uncertainty 
wish probabilistic knowledge 
explicitly introducing uncertainty move notion control reasoner believer committed making best guesses strategy apply problem problem solving context background state information 
conditioning statement probabilities denote dependence belief background information 
may include computer scientist beliefs performance strategy logical knowledge empirical experience policy intuition 
beliefs updated empirical data system experience grows 
performance policy represented probability distribution partial results generated policy instance quantity resource 
protos experiments assumed set prototypical contexts associated specific object level protos partial acronym project computational resources tradeoffs 
position key graphical representation incremental refinement selection sort left shellsort right 
inference related utility functions 
computational utility partial result policy urgent situations max gammau strategies limited generating final results optimization considers likelihood generating maximum object level value oe range resources 
urgent situations rational controller choose strategy highest expected value arg max agent immersed world deadline situations grapple uncertainty amount time available computation 
assume agent probability distribution time available computation situation 
set strategies optimal strategy 
define amount resource maximizes expected utility policy max arg max consider cases deadline occurs max deadline occurs max urgent deadline situation arg max rmax max pure deadline situation set equivalent substituting equation 
similar integrations yield utility cases knowledge computation encoded terms uncertainty resources required generate specified results uncertainty time dependent variation sorting resource constraints research directed primarily control decision theoretic inference 
problems generalized computational tasks 
classic problem sorting file records issues reasoning varying resource constraints 
analysis centers identifying valuable dimensions partial results applying value functions capture preferences results characterizing ability alternative strategies refine results certain uncertain time constraints 
shall return briefly problems belief action exploring resource considerations sorting algorithms 
multiple dimensions value constructed prototype system named protos algo exploring value structure alternative reasoning strategies 
system reports partial result generated 
gain intuition help assessment preferences experimented graphical representation partial results trajectories 
system probe value structure sorting algorithms 
defined alternative attribute spaces sort explored trajectories partial results produced named sorting policies 
experimented object level inference related utility models map points sorting space computational utility 
sample dimensions value may useful characterizing partial sort include ffl disorder average distance current locations expected final locations records file specified portions file ffl high low completion contiguous length positions starting high low file contains records currently positions occupy file completely sorted ffl bounded disorder upper bound distance current position final position record file attributes formulated working user partial sort 
example introduce attribute representing proportion records satisfy particular level bounded disorder probability partial sort satisfy specified value high completion bounded disorder 
seek characterize manner algorithms refine values probability distributions attributes interest 
extend attribute bounded disorder guide search resource constraints 
alternative trajectories multiattribute space multiattribute nature partial results adds additional richness control decisions resource constraints decisions depend details problemsolving trajectories taken multiattribute partial result space 
different ways refine result application resource 
alternative associated characteristic patterns refinement 
may define distinct sets points curves surfaces response expenditure help visualizing refinement trajectories sorting protos algo display partial sorts represented set points cartesian space axes represent index array value key sorted 
indicated sequences randomly mixed initial problem instance transformed alternative sequences partial results depending strategy applied 
left side shows partial result trajectories selection sort right side shellsort pictured 
final result sort oe represented diagonal line 
shellsort striking ability refine gracefully bounded disorder 
selection sort efficient refining low completion 
sensitivity resources preferences trajectories decisions best sorting policy apply sensitive availability cost resources nature object level risk preferences agent structural details describing refinement results strategies 
uncertain varying resource constraints algorithm slower completion time may preferred efficient algorithm 
utility analysis demonstrate comparative value alternative sorting procedures different combinations weightings dimensions partial sort described section prototypical resource contexts 
sample analyses task sorting list randomly arranged keys select oe shell oe selection sort efficient generating total ordering 
utility model places high value low completion exists range deadline times selection sort dominates faster shellsort 
changes resources available object inference related utility functions change dominance 
example diminishing importance low completion object level utility increasing importance disorder increases expected utility shellsort sort 
expected value shellsort boosted distribution deadline time skewed greater values utility continuity sorting strategies continuously refine object level attributes partial sort 
example shellsort continuously refines disorder selection sort refines completeness 
contrast traditional versions algorithms log complexity including mergesort heapsort quicksort valuable intermediate results available may dominated polynomial approaches conditions uncertain poor resource availability high cost reasoning 
experiments comparing graceful shellsort quicksort heapsort instances randomly arranged records shellsort dominate algorithms shell oe quick oe 
see usefulness continuous refinement easily inspecting computational utility equations section 
heapsort may log runtime deadline occurs time completion oe 
fact wait costly 
resource constraints valuable result generated committing conservative graceful shellsort 
belief action resource constraints research sorting resource constraints undertaken show universality resource constraint issues gain insight sophisticated problem solving 
touch issues bring perspective sorting 
see additional discussion 
focused problems control decision theoretic inference making recommendations action complex high stakes domains medicine aerospace 
domains losses associated suboptimal decisions tend render simple satisficing approaches inadequate provide incentive optimizing computational utility 
complexity rationality inception years ago decision theory accepted disciplines normative basis decision making 
research focused computational complexity probabilistic reasoning lies heart decision theoretic inference 
centered reasoning directed graphs called belief networks 
belief networks special cases general graphical representations called influence diagrams allow actions utilities alternative outcomes represented addition beliefs 
belief network topologies resisted tractable algorithmic solution 
example difficult class problems called multiply connected network 
inference graphs shown np hard 
problems complex areas medicine require representation multiply connected networks 
rational beliefs actions may demand intractable computation 
addressing intractability naive models normative rationality decision theory metalevel reason valuable decision model inference policy 
discussions decision theory reasoning value analysis example see 
particular directed attention development partial result strategies inferring valuable actions 
longterm dream motivating research protos related projects automated decision theoretic inference construct integrated system akin macsyma belief action resource constraints 
current real world problems centers decision analysis designing control policies decision theoretic inference constraints tissue pathology lab protos pf operating room protos 
partial result strategies computing optimal action problem instance composed belief network deemed complete representation problem specific query belief action formulate represents dimensions value 
apply intelligent control techniques attempt maximize belief 
exploring generation partial results modulating abstraction completeness analysis 
techniques modulating completeness include probing inference problem directed probabilistic search 
methods produce probability distributions bounds probabilities interest 
modulate completeness belief network model deleting consideration propositions dependencies propositions 
addition model reformulated report relevant qualitative answers 
severe time pressure general default beliefs policies may expected value new inference 
partial result strategies display interesting multiattribute trajectories commitment additional resources 
sorting example structure trajectories alternative strategies influence selection optimal reasoning strategy 
see discussion trajectories belief refinement view default reasoning resource constrained partial result strategy 
discussion experimentation analysis highlighted issues reasoning varying uncertain resource constraints 
appears interesting dimensions value partial results overlooked attention directed techniques computing targeted oe 
clearly value exploring rich multidimensional structure partial result strategies 
rational decisions computation selection new strategy decision cease computing sensitive details refinement trajectories object level utility function uncertainties functions describing cost availability reasoning resources 
wide range research efforts may benefit pursuing development reflective strategies sensitive varying resource utility conditions 
strategies continuously refine value partial results time desirable reasoning situations uncertain resource availability reduce losses introduce additional flexibility computational decision making 
new opportunities decisions frequently translate increased expected utility resource constraints 
ability incremental refinement strategies intermediate problem solving states available useful creating new policies sequences strategies apply selection sort low completion efficiently shellsort refine bounds disorder 
sequence strategies generating oe greater computational utility general predefined policies 
introduce flexibility reasoning moving level analysis strategies actions consider control opportunities microstructure computational activity 
task complex finer patterns computation control possible may enable reasoner generate ideal refinement trajectories 
research may elucidate control strategies implicit familiar policies stimulate creation general decision theoretic strategies implement familiar policies special cases 
identifying useful dimensions utility computation examining refinement partial results function invested resources direct attention new classes approximation 
example opportunity developing inexpensive strategies transforming intermediate states traditional oe algorithms valuable partial results states handed methods control reasoner 
example realm sorting techniques useful concatenating log strategies reaction specific problem instance intermediate states observed real time problem solving trends 
current centers construction inexpensive policy selection procedures best control strategies control strategies maximize may expensive 
clearly evaluation best policy decision formulae section involves costly searching practice limit analysis tractable number policy options infinite number possibilities move expensive analysis design phase 
set constraints hardware knowledge time may beneficial agent allocate significant fraction scarce problem solving resources metalevel analysis computational policy control strategy 
expending effort recognize problem instance context plan solution moni tor redirect reasoning coordinate components metareasoning may important customizing default control policies developed design time learned resource rich idle time analyses 
possible optimality expensive varying allocation resource control brings light significant questions multilevel analysis focus attention reflective decisiontheoretic architectures strategies formalisms 
suggests decision theoretic inference may rely point poorly characterized assumptions 
summary preliminary analyses multiattribute utility structure partial results suggest endowing agents knowledge multiple dimensions value computed results increase expected utility problemsolving behavior 
generally decisiontheoretic design computational policies problem classes highlighted promise developing techniques maximizing value computation constraints knowledge hardware time 
pursuing bounded optimality problem solving appears particularly important developing agents act dynamic competitive high stakes domains 
acknowledgments david heckerman gregory cooper provided useful comments earlier draft 
am grateful bruce buchanan john breese george dantzig ronald howard nils nilsson stuart russell edward shortliffe patrick suppes providing feedback research 
aho hopcroft ullman 
data structures algorithms 
addison wesley menlo park ca 
cooper 
probabilistic inference belief networks np hard 
technical report ksl knowledge systems laboratory stanford university stanford california may 

year plan automatic chess 
machine intelligence london oliver boyd 
horvitz 
decision theoretic control problem solving uncertain resources challenges 
technical report ksl knowledge systems laboratory stanford university stanford california february revised november 
horvitz 
reasoning beliefs actions computational resource constraints 
proceedings third aaai workshop uncertainty artificial intelligence pages seattle wa 
association uncertainty artificial intelligence mountain view ca august 
howard matheson 
influence diagrams 
readings principles applications decision analysis chapter pages strategic decisions group menlo park california 
von neumann morgenstern 
theory games economic behavior 
princeton university press princeton new jersey 
knuth 
art computer programming sorting searching 
addison wesley reading massachusetts 
matheson 
economic value analysis computation 
ieee transactions systems science cybernetics ssc 
pearl 
fusion propagation structuring belief networks 
artificial intelligence 
