ieee transactions analysis machine intelligence vol 
september comparing images hausdorff distance daniel huttenlocher gregory william rucklidge hausdorff distance measures extent point model set lies near point image set vice versa 
distance determine degree resemblance objects superimposed 
provide algorithms computing hausdorff distance possible relative positions binary image model 
focus primarily case model allowed translate respect image 
consider extend techniques rigid motion translation rotation 
hausdorff distance computation differs shape comparison methods correspondence model image derived 
method quite tolerant small position errors occur edge detectors feature extraction methods 
show method extends naturally problem comparing portion model image 
index terms distance transforms model recognition voronoi surface 
ion central problem pattern recognition computer vision determining extent shape differs 
pattern recognition operations correlation template matching cf 
model vision methods cf 
ll viewed techniques determining difference shapes 
investigating functions determining degree shapes differ 
goal investigations develop shape comparison methods efficient compute produce intuitively reasonable results firm underlying theoretical basis 
order meet goals argue important shape comparison functions obey metric properties see related arguments 
algorithms efficiently computing hausdorff distance possible relative positions model image 
hausdorff distance max min distance defined 
primarily focus case model image allowed translate respect briefly consider extensions handle general case rigid motion 
theoretical algorithms efficiently computing hausdorff distance function translation manuscript received december revised august 
supported nsf iri matching funds general electric kodak xerox contract afosr natural sciences engineering research council canada scholarship 
recommended acceptance associate editor blake 
authors department computer science come uni versity ithaca ny 
ieee log number 
rigid motion 
provide provably approximation algorithms highly efficient theory practice 
methods operate binary rasters making particularly suited image processing machine vision applications data generally raster form 
key advantages approach follows relative insensitivity small perturbations image simplicity speed computation natural allowance portions shape compared 
discuss different methods computing hausdorff distance function translation model respect image 
methods similar ways binary correlation convolution hausdorff distance nonlinear operator 
second method extends definition distance function enable comparison portions model portions image 
third method improves certain properties hausdorff distance rule possible relative positions model image having explicitly consider 
speeds computation orders magnitude 
methods sped special purpose graphics hardware particular buffer 
number examples real images 
examples illustrate application method scenes portion object identified hidden view 
show methods adapted comparing objects rigid motion translation rotation 
hausdorff distance finite point sets 
ap bl 
hausdorff distance defined ieee maxmin ila aea beb underlying norm points euclidean norm 
function called directed hausdorff distance identifies point farthest point measures distance nearest neighbor norm 
effect ranks point distance nearest point uses largest ranked point distance mismatched point 
intuitively point comparing images hausdorff distance distance point point exactly distance nearest point mismatched point 
hausdorff distance maximum 
measures degree mismatch sets measuring distance point farthest point vice versa 
intuitively hausdorff distance point distance point vice versa 
notion resemblance encoded distance member near member vice versa 
methods comparing shapes explicit pairing points points example points may close point 
function trivially computed time pq point sets size respectively improved log 
known hausdorff distance metric set closed bounded sets cf 
restrict finite point sets necessary raster sensing devices 
noted hausdorff distance allow comparing portions sets point set required near point set 
natural extension problem measuring distance subset points subset points section 
hausdorff distance measures mismatch sets positions respect 
primarily interested measuring mismatch possible relative positions sets value hausdorff distance function relative position group define minimum hausdorff distance mg min gla 
group points gx ll need consider transforming sets mg minh gb 
property holds group translations norm group rigid motions euclidean norm 
cases consider translations rigid mo tions minimum hausdorff distance obeys metric properties shown function positive properties identity symmetry triangle inequality 
properties correspond intuitive notions shape resemblance shape identical order comparison shapes matter shapes highly dissimilar similar third shape 
final property triangle inequality particularly important pattern order comparison matter psychophysical studies 
interesting property hausdorff distance regard fact directed distance symmetric 
fig 

sets points illustrating distances mj 
matching applications stored model shapes compared unknown shape 
shape comparison functions applications obey triangle inequality report highly dissimilar model shapes similar unknown shape 
behavior highly counterintuitive example reporting unknown shape closely resembles elephant desirable shapes highly dissimilar 
focus primarily case relative positions model respect image group translations 
loss generality fix set allow translate 
minimum value hausdorff distance translation defined mt min hausdorff distance defined standard minkowski sum notation tlb 
example fig 
shows sets points set illustrated dots set crosses 
large points near points vice versa 
mt small translation point nearly coincident point vice versa 
generally refer set image set model natural view model translating respect image 
turn problem efficiently computing mt 
organization remainder follows 
discuss compute finite sets points plane 
basic idea define set functions measuring distance point closest point vice versa function translation set section show extend method problem comparing portions sets occurs instances partly occluded 
section iv discuss implementation hausdorff distance computation raster data sets represented terms binary rasters 
implementation ways similar binary correlation 
section show improve basic implementation ruling possible translations explicitly considering 
examples contrast method binary correlation 
consider case rigid motion ieee transactions analysis machine intelligence vol 
september translation rotation example problem 

computing mt definition hausdorff distance maxmin ila maxmin ila bll aea beb aea define ila max maxd maxd aea beb obtained computing respectively 
graph surface called voronoi surface 
surface gives location distance nearest point points plane visualize surface sort egg local minimum height zero corresponding cone shape rising minimum 
locations cone shapes intersect define local maxima surface 
note local maxima equidistant local minima name voronoi surface analogy voronoi diagrams specify locations equidistant points set 
graph similar shape cone shape rising point voronoi surface set referred distance transform lo gives distance point nearest point set source points fig 
illustrates set points top view corresponding voronoi surface brighter portions image correspond higher portions surface 
norm lz 
turn calculating hausdorff distance function translation max max min aea beb max min ila til beb aea maxmin il bl maxmin ila ll aea beb beb aea maxd beb simply maximum translated copies voronoi surfaces sets respectively 
define fa upper envelope pointwise maximum copies function translated relative gives translation distance point farthest point bet fa bet directed hausdorff distance 
fig 

set points corresponding voronoi surface 
directed hausdorff distance fb defined analogously 
simply maximum directed distance functions 
define max max maxd maxd aea hausdorff distance defined function specifies hausdorff distance sets function translation set efficient theoretical algorithms computing developed 
shown contain respectively points plane function computed time pq 
la norm 
running time improved pq norms 
methods quite complicated implement substantially efficient practice rasterized approximation methods investigate sections iv 
comparing portions shapes machine vision pattern recognition applica tions important able identify instances model partly visible due occlusion failure sensing device detect entire object 
wish extend definition hausdorff distance allow comparison portions shapes 
allow scenes contain multiple objects objects partially hidden view 
comparing images hausdorff distance partial distances ranking properties precisely need understand hausdorff distance naturally extended problem finding best partial distance model set image set simplicity consider directed hausdorff distance 
computation simply determines distance point model farthest point image point ranked distance nearest point largest ranked point farthest point determines distance 
natural definition distance model points kth ranked point largest ranked subsets achieve minimum partial distance claim hlk exist sets bk bk bk exactly min elements 
large subsets achieve distance claim hlk exist sets bk bi ia max lbi max 
proofs claims see appendices follows immediately identity symmetry properties hold respect bi obeys properties 
intuitively means partial distance order comparison denotes kth ranked value set matter distance zero exactly distances corresponding element minimizing subsets bi 
point distance closest point triangle inequality minimizing subsets may computed points ranked different comparing comparing respective values distance 
kth ranked value general triangle inequality tells model points distance violated 
restricted case subset bi image point points considered value simply directed hausdorff minimizer hlk hkm definition bi bi cb ai cl 
distance 
definition distance nice intuitively means sets compared property automatically selects best matching third set denoted bi points identifies subset model triangle inequality holds 
practical purposes size minimizes directed hausdorff distance 
reasonable definition models match part general order compute partial directed distance specify fraction image expect models similar 
hand match different parts points considered 
points ranked distance nearest point image expectation 
kth ranked value gives partial distance 
kth ranked value iv 
minimum hausdorff distance grid points computed time standard methods 
practice takes twice long computing maximum 
partial distance measures difference portion model image points model set closest points image set 
key property method require part model compared image 
computation directed hausdorff distance determines far model point nearest image point automatically selects points model closest image points 
section vi illustrate partial matching capability contrast correlation 
find directed partial hausdorff distance works partial matches images correlation 
partial bidirectional hausdorff distance naturally defined turn case point sets lie integer grid 
appropriate computer vision pattern recognition applications data derived raster device digitized video signal 
assume sets points 
bl 
bp point integer coordinates 
denote cartesian coordinates point az ay analogously bz characteristic function set represented binary array ith entry array nonzero exactly point standard practice 
set analogously defined array representation 
function clearly obey metric properties obey weaker conditions provide intuitively reasonable behavior 
conditions effect metric properties obeyed subsets size respectively 
order specify continuous case previous section wish compute hausdorff distance function translation pointwise maximum set voronoi surfaces 
case point sets surfaces derived represented arrays nonzero elements arrays correspond elements sets 
sets compute rasterized approximations respective voronoi surfaces 
distance arrays distance transforms specify pixel location distance nearest nonzero pixel respectively 
notation ieee transactions analysis machine intelligence vol 
denote distance transform denote minimizing value 
words matches distance transform array cost exact rasterized cases zero locations cost nearly exact minimum cost 
practice specify distance nearest nonzero point 
generally enumerate minimizing translations 
number methods computing rasterized function rasterized approximation voronoi surface distance transform specify hausdorff distance bet function discuss briefly 
translation directed hausdorff distance proceeding analogy continuous case useful comparing bitmaps 
particular order compute pointwise maximum translated identify possible instances model cluttered arrays determine hausdorff distance function image desirable simply ensure translation limited rasterization portion model near portion image accuracy integer grid necessarily vice versa 
denote fb directed hausdorff distance function translation fb maxd 
beb order small translation yo distance transform small locations yo small locations yo 
words point nonzero pixel translated model array yo near point nonzero pixel image array vice versa 
input points integer coordinates straight measures degree resembles translation nonzero pixel near nonzero pixel distance small 
hand nonzero pixel far nonzero pixels distance large 
directed distance analogously ay 
note simply pointwise maximum directed distance functions 
forward show minimum value close minimum value exact function 
computing voronoi surface array words rasterization introduces small error methods computing distance transform compared true distance function 
specifically rasterized approximation voronoi surface 
claim section summarize approaches claim yo translation minimizes computing distance transform binary 
may translation array denote nonzero pixels minimum value 
tl yl translation point set 
minimizes tl exact measure 
yo differs norm method computing local distance transform algorithm lo 
norm 
practice pass serial algorithm approximates proof claim see appendix note distance transform local mask propagate distance translation integer coordinates values array 
better distance rasterized function simply values obtained method sampling exact function 
produces distance transform values exact minimum value rasterized approximation norms exact machine specifies minimum hausdorff distance trans precision lz norm 
algorithm processes lation accuracy unit quantization 
row independently 
row calculates noted translation minimizing distance nearest nonzero pixel row necessarily close translation minimizes finds ax 
ax 
see example odd number ax ax minimum nonnegative set 
set value true 
scans 
translation minimizes column independently ax values look exact case mt 
rasterized case mt translations generate minimum value 
may table depends norm determine 
method compute distance transforms takes advantage specialized graphics hardware minimizing translations rasterized case rendering buffering 
form arbitrarily far away minimizing translation noted section egg lower envelope exact case 
problem value collection cone shapes cone shape point translations ej nonzero pixel point ej 
value translation exact exact form cone shapes depends norm comparing images hausdorff distance 
norm shapes pyramids sides slope fl oriented respect coordinate axes 
norm pyramids oriented parallel coordinate axes 
norm cones slope 
computation simply take pointwise minimum lower envelope cone shapes rendered described 
consider operations performed graphics rendering engine set perform orthographic perspective projection view collection surfaces render cones perform visibility calculations quickly buffer 
suppose location yo buffer contains value closest surface viewer intersects line yo away 
means lower envelope egg height simply render described buffer doing orthographic projection view 
running time method number points set source point results rendering single cone buffering operation constant time 
current graphics hardware tens thousands polygons second rendered buffer possible compute fraction second 
norms computed exactly lz norm may error computed depends resolution buffer 
fb max max 
maximization performed rapidly specialpurpose graphics hardware doing pan buffer operations 
simply pan accumulate pointwise maximum upper envelope buffer 
practice current graphics hardware operation fast involves repeatedly loading buffer array memory 
second way compute standard array operations arises viewing computation slightly differently 
note simply equivalent maximizing product relative position fb 
words maximization performed positioning location computing maximum product 
order compute fb method array simply positioned centered pixel distance transform 
value fb maximum value obtained multiplying entry corresponding entry 
simply binary array amounts maximizing entries selected nonzero pixels view nonzero model pixels probing locations voronoi surface image fb maximum probe values position model 
form computing directed hausdorff distance translation similar binary correlation arrays yl 
differences array correlation replaced distance array distance nearest pixel summation operations correlation replaced maximization operations 
noted directed hausdorff distance insensitive small errors pixel locations computing hausdorff distance array voronoi surface reports distance nearest hausdorff distance function translation point 
pixels slightly perturbed value defined computed changes small amount 
binary correlation graphics hardware standard array operations 
simplicity notion spatial proximity 
pixels discussion focus computation directed directly superimposed 
binary distance model image fb compu correlation commonly tools image tation fa analogous 
recall simply processing examine relation maximum directed distances 
method correlation section vi 
previously saw fb defined maximum values distance transform matching portions model image selected elements partial distance hlk translation alternately viewed define version allows portions maximization shifted location takes nonzero value model image compared 
translation fractions representing fraction nonzero model image pixels considered respectively redefine fb hk fa hl th ad ay hlk ma fa fb 
fl old version 
considering partial distance image model model considerably smaller image reflecting fact tasks instance model image occupy small portion image 
case definition partial ieee transactions analysis machine intelligence vol 
september distance ideal directed distance image model hl define number image pixels close model pixels 
number depend objects image 
natural way compute partial distance image model consider image points near current hypothesized position model farther away probably parts imaged objects 
practice sufficient consider image pixels lie underneath current position model 
computing model pixels compute different version fa considers just points model position nb 
array principle infinite extent minimum value attained translated model overlaps image location consider portion mb ma nb 
property slope exceed function decrease rapidly fa max 
linearly 
fb circle radius point yl 
actual shape circle depends norm true circle 
words value fb large location small large area location 
fact rule possible translations near yl 
formally claim claim zl yl translations mb ma nb yl 
fb il ll il 
thisis true note definition comparing just portion values fraction nonzero model image model possible compute pixels considered 
partial distance portion image proof claim see appendix model 
done combining definition fact algorithm detailed order speed ranking partial distance 
adjusting computation 
value depending image pixels lie property necessarily hold fa 
model position computing considering portion image model partial distance just portion image 
section iv location moving words lf number nonzero model pixel shifts image points image pixels underneath translated model window change value current translation 
definition fa large amount 
implies property modified lth max 
necessarily hold 
practice issue generally image efficient computation naive approach computing described take significant time run considers possible translation model array wish skip parts large array ruling circles 
model array usually small need technique 
ranges developed pruning early scan termination techniques decrease running time significantly 
techniques take advantage fact typical applications computed generally scanned find entries threshold generate values directly generating 
techniques useful 
effects speed techniques vary depending image model 
effective image sparse model large number points 
seen speedups factor lo approach 
image model pairs take fractions second compare illustrative timings examples 
may obtain speedup computing fb completely deduce computation greater recall fb computed maximizing locations selected nonzero pixels nonzero pixel effect probes location voronoi surface maximize probe values 
single probe value threshold translation know maximum probe values 
computing fb translation threshold 
analogous result holds partial distances 

value hk kth ranked value taken locations 
probe ruling circles places maintain count number values exceed count exceeds wish compute hausdorff distance function know kth ranked value greater translation binary image fb need probe model 
bounds ma locations translation 
fact bounds mb determine minimum possible value fb comparing images hausdorff distance location assuming values calculating kth ranked value set values 
eliminate nearby values consideration 
method works best large values 
skipping forward third technique relies order space possible translations scanned 
scan distance transform array order assume order row time increasing direction 
words consider fb mb fb mb fb 
case possible quickly rule large sections row variant distance transform 
distance increasing direction nearest location location practice jx set large value location value greater width array sufficiently large 
formally wl ax 
ae st techniques may combination 
technique may affect efficiency 
interactions noted follows early scan termination greatly degrades effect ruling circles skipping forward 
early scan termination generally give value fb small amount greater locations ruled continuing scan increase value computed saving 
possible solution terminate scan fb shown greater value terminated scan circle radius ruled similarly terminate scan gb shown value arbitrary adjusted best performance 
order translations considered arbitrary skipping forward 
optimal order may consider adjacent translations successively tend consider translations edges ruled circles neighborhood ruled 
considering translation clear area provide opportunity ruling translations 
algorithm observations give algorithm produce list values quite efficiently 
algorithm input binary image arrays fractions fl fl threshold generate list translation value pairs tj note determine far move increasing fractions translation direction find place fb greater 
consider fraction part covered translated 
bounds ma bounds mb gg values probed values probed computation fg gb ax know fb fb 
fb ax 
proof similar proof claim omitted 
immediately increment 
compute array specifies distance closest nonzero pixel making size 
compute array specifies distance closest nonzero pixel making mb ma mb nb nb ax skip section row 
note see section iv 
need compute fb compute gb compute array specifies nonzero 
early scan termination applied tance closest pixel increasing direction computation 
equal method advantage ruling circles size 
require auxiliary data structures maintained computed immediately incremented 
ruling circles method number model pixels considered 
create array size keep track translations ruled 
contain minimum possible value updating map time consuming 
interactions speed methods fb information accumulated 
initialize zero 
create lists 
initialize empty 
translation number image pixels considered number nonzero pixels covered current position 
translation blk scanned reading order top bottom left right need consider translation proceed 
go set zero 
consider 
greater increment 
addition consider 
process 
exceeds ieee transactions analysis machine intelligence vol 
september take smallest values seen exceeded 
call ax 
ii 
take smallest values seen exceeded call 

value set max ii ll 
needs done radius need done previously considered step 
iv 
skip translation ax ax ma go start row 
exceeds kth ranked value values generated step 
values greater add list 
list contains translation value pairs fb list consider values ay ay points mb ay nb compute lth ranked value 
recall fir number points lie current translation described section iv 
call value 
know max 
equal add max list algorithm produce list translations directed hausdorff distance model image halting step list 
vi 
examples consider examples order illustrate performance hausdorff distance methods developed image data camera laboratory 
test image shown fig 

binary image produced applying edge operator similar grey level camera image 
computation hausdorff distance translation done implementation written algorithm described 
model compared test image shown fig 

outline delineates boundary bitmap representing model 
model pixels 
comparing model image pixels fi takes approximately fig 

test image 
fig 

object model 
fig 

test image overlaid best match 
sun sparcstation 
produced matches 
fig 
shows match overlaid image 
comparison approach section iv takes approximately perform comparison process 
ran algorithm image model shown figs 
fl 
image model 
matches 
fig 
shows match overlaid image 
computation took approximately huttenlocher comparing images hausdorff distance fig 

second test image 
fig 

second object model 
fig 

second test image overlaid best match 
third test case consists image model shown figs 
fl fi 
image model 
model digitized different held approximately orientation distance camera 
matches 
fig 
shows match overlaid image 
computation took approximately fig 

third test image 
fig 

third object model 
fig 

third test image overlaid best match 
models compared image distance transform image need computed 
implementation takes compute distance transform image sun sparcstation 
computed comparisons take little model images model 
time taken depends values larger smaller values increase time taken 
cluttered image increase time 
order compare directed hausdorff distance correlation computed correlation stump model fig 
second test image 
defined match translation correlation function local peak 
image correlation performed poorly 
incorrect matches higher correlation value correct match correct match peak value largest peak 
incorrect matches close spatially correct match 
see support examples theoret ical claim partial hausdorff distance works images locations image pixels perturbed 
images handled correlation 
vii 
hausdorff distance rigid motion methods described computing distance translation naturally extended computing hausdorff distance rigid motion trans lation rotation 
case require norm euclidean norm 
fix set allow set move case rotate translate 
minimum value hausdorff distance rigid euclidean motion gives best transformation respect ieee transactions analysis machine intelligence vol 
minh reb hausdorff distance defined equation reb reb tlb re standard rotation matrix 
distance small exactly euclidean transformation brings point near point vice versa 
compute rasterized approximation minimum hausdorff distance rigid motion 
basic idea compute hausdorff distance transforma tions model appropriate level rasterization find minima distance threshold translations appropriate level rasterization single pixels 
rotation want ensure consecutive rotation moves point model pixel 
point bj set rotated center rotation circle radius rj 
means rasterization interval arctan rk tk radius rotation point furthest center rotation 
current implementation restricted computing directed hausdorff distance model image analogous defined 
furthermore consider complete shapes partial distances 
recall hausdorff distance computation thought probing locations voronoi surface image corresponding transformed model points 
probe values transformation maximized order compute distance transformation 
rigid motion build structure gives model point list locations point moves rotates location rasterized 
locations relative center rotation model point list describes circle center rotation 
consider problem determining minimum directed hausdorff distance rotation fixed translation mine reb 
initialize zero array containing element value 
computation array contain minimum possible value hausdorff distance rotation basis points probed far 
point probe distance transform image relative rotated location maximize probe values corresponding values array points considered array gives directed hausdorff distance discrete rotation current translation perform computation rasterized translation algorithm analogous naive algorithm translation case 
translation case possible translations rotations may ruled explicitly consid ering 
begun investigate speed techniques euclidean motion describe methods proven successful 
choose center rotation point closest centroid model 
reduces number rasterized values need consider explicitly center rotation point useful center rotation move changes 
translation probe center point find distance transform point greater know rotations model translation 
points close center rotation pass distinct grid points rotate 
building model rotation structure store distinct grid points point rotates 
addition store range rasterized values distinct points corresponds 
compression rotation structure eliminates large number extraneous probes 
single probe may update consecutive entries techniques analogous ruling circles early scan termination space prune search transformations model 
find rotation point distance reb nearest point rotations bring circle radius centered rob may eliminated consideration 
rotations range cos radius rotation point values may ruled 
note conservative approximation range may expensive compute 
considering points order increasing radius rotation large ranges eliminated early single large probe value inner points rule values outer points 
maintaining list ruled regions space transformations resulting hausdorff distance greater quickly discarded 
noted section combining early scan termination ruling circles translation case may result small areas ruled 
problem holds space possible solution delay early termination comparing images hausdorff distance fig 

test image showing blocks 
guarantee terminated scan eliminates minimum radius circle 
possible pruning techniques rotation translation simultaneously 
possible technique array generated translation eliminate values adjacent translation 
slope distance transform exceed moving adjacent translation probe value worst decrease 
angle lower bound hausdorff distance greater current translation ruled adjacent translations 
practice extra overhead involved slowed computation 
illustrate performance current imple mentation image children blocks table 
example taken demonstration robot arm locates blocks table hausdorff distance rigid motion uses blocks build object user specified 
fig 
shows edge detector output grey level camera image blocks 
block model shown fig 
simply square pixels side 
matching model image pixels local minima threshold corresponding rotations blocks completely field view 
matches shown overlaid original image fig 

note computing directed distance model image blocks contain letters upward facing side recognized 
translation rotation model merely require image point pixels point transformed model 
exactly needed application large black areas image problems spurious matches 
matching takes approximately sparcstation 
advantage symmetry particular model allow fold increase speed application 
time spent optimizing pruning techniques running time greatly improved especially con improvement achieved algorithm translation case 
fig 

block model 
fig 

test image blocks overlaid matched block 
viii 
summary hausdorff distance translation measures extent point translated model set lies near point image set vice versa 
distance reflects degree resemblance objects translation 
discussed compute hausdorff distance translation efficiently binary image data 
method compares model bitmap image bitmap fraction second sparcstation 
computation directed hausdorff distance translation ways similar binary correlation 
method tolerant perturbations locations points correlation measures proximity exact superposition 
supported empirical evidence theoretical formulation problem 
partial hausdorff distance model image illustrated examples correlation fails 
extended algorithms rigid motion 
open problem develop efficient methods theoretically practice computing hausdorff distance transformation groups 
appendix proof claim points point ila bll 
similarly points point ia ib bll implies points closer ieee transactions pa analysis machine intelligence vol 
september point similarly points closer point 
addition symmetrical la bll neighbors point vice versa 
problem reduces finding bk having min points bk show possible building bk element time maintaining invariant bk element element bk vice versa 
base case pick point 
put find point ija bl 
put bk 
bk ila bll induction step suppose bk min elements bk cases suppose exist bk ila bll add bk increased size set maintaining invariant 
suppose exist 
pick point consider neighbors points member 
neighbors bk neighbor bk 
similarly point bk neighbor picking point point bk adding bk respectively increases size set maintains invariant point new ar neighbor new bk vice versa 
elements elements run elements bk achieving min elements bk 
process builds bk ensuring pair points added neighbors augmented sets maintains desired invariant 
appendix proof appendix proof claim proof see definitions integers 
minimum value smaller minimum value xo yo 
norm satisfies triangle inequality 
point 
distance nearest point point 
point 
ll la ll dll 
similarly points band 
translations ilt ll ilt ji 
max maxd maxd aea ti xi yi grid point closest tl yi integers minimize lit till 
norm lit till lit 
zo yo xo yo minimizes 
xo till td 
appendix proof claim proof proof claim know zl il ll 
fb fg 
suppose 
know nonzero model proof bk proof claim construct bl 
suppose loss generality pick points bk points min ib 
bl union bk points 
new points pick neighbors 
union neighboring points 
ia pixels nonzero image pixel exist 
bx bx yl consider computation 
probing values 
la neighbors members ia max 
point bl neighbor vice il yl il yl versa know bl equality bl strictly nonzero model pixels yl away nonzero image hlk strictly pixel model translated 
bl minimizing subsets sizes respectively 
computation computes kth ranked value distances 
comparing images hausdorff distance aho hopcroft ullman data structures algorithms 
reading ma addison wesley 
measuring resemblance polygonal shapes proc 
seventh acm symp 
comput 
geometry 
arkin chew huttenlocher kedem mitchell efficiently computable metric comparing polygonal shapes ieee trans 
patt 
anal 
machine intell vol 
pp 

besl jain dimensional object recognition acm comput 
surveys vol 
pp 

borgefors distance transforms digital images ieee trans 
patt 
anal 
machine intell vol 
pami pp 

canny computational approach edge detection ieee trans 
patt 
anal 
machine intell vol 
pami pp 

chew kedem improvements geometric pattern matching problems published proc 
scand 
workshop automata theory 
chin dyer model recognition robot vision acm comput 
surveys vol 
pp 

general topology 
bristol adam 
danielsson euclidean distance mapping comput 
graphics image processing vol 
pp 

grimson lozano huttenlocher object recognition computer role geometric constraints 
cambridge ma 
mit press 
huttenlocher kedem 
hausdorff distance point sets proc 
sixth acm symp 
computat 
geometry pp 

huttenlocher kedem kleinberg dynamic voronoi diagrams minimum hausdorff distance point sets euclidean motion plane published proc 
eighth acm symp 
computat 

huttenlocher kedem sharir upper envelope voronoi surfaces applications proc 
seventh acm symp 
computat 
geometry pp 

distance transforms properties machine vision applications comput 
vision graphics image processing graphical models image processing vol 
pp 

preparata shamos computational geometry 
new york springer verlag 

rosenfeld kak digital picture processing 
new york academic nd ed 
daniel huttenlocher received degree university michigan ann arbor ph degrees massachusetts institute technology cambridge respectively 
currently assistant professor com puter science department cornell university ithaca ny manager image un area systems practices lab xerox palo alto research center 
current research interests areas computer vision computational geometry 
dr huttenlocher received presidential young investigator award national science foundation 
received faculty year award cornell association computer science undergraduates 
greg received degree computer science come university ithaca ny may 
currently working degree computer science artificial intelligence laboratory massachusetts institute technology mit cambridge 
worked school year cornell computer science robotics vision laboratory model recognition techniques 
spent summers working ge aerospace advanced technology labs atl nj benchmarking parallel dsp architecture 
spent summer xerox palo alto research center parc palo alto ca worked character recognition degraded documents 
william rucklidge born toronto canada 
received sc 
degree computer science mathematics university toronto degree computer science cornell university ithaca ny 
currently working ph degree cornell 
summers worked xerox palo alto research center working aspects document recognition 
current research interests areas computer vision robotics 
