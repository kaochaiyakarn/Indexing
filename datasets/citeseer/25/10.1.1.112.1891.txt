universally composable notions key exchange secure channels extended ran canetti hugo krawczyk ibm watson research center canetti watson ibm com 
ee department technion hugo ee technion ac il 
canetti krawczyk eurocrypt formulated notion security key exchange ke protocols called showed notion suffices constructing secure channels 
model proofs suffice proving general composability properties sk secure ke protocols 
show notion sk security strictly weaker fully idealized notion key exchange security sufficiently robust providing secure composition arbitrary protocols 
particular sk security guarantees security key application desires set secret keys pairs parties 
provide new definitions secure channels protocols similarly strong composability properties show sk security suffices obtaining definitions 
obtain results proposed framework universally composable uc security new tool called oracles probably find applications case 
tools allow bridge seemingly limited indistinguishability definitions sk security powerful simulation definitions uc security general composition theorems proven 
furthermore composition theorems reduce analysis full fledged multi session protocol simpler analysis individual stand key exchange sessions 
keywords key exchange cryptographic protocols proofs security composition protocols 
authenticated key exchange protocols ke short protocols parties communicate adversarially controlled network generate common secret key 
protocols essential enabling full version appears ck 
supported irwin green detroit chapter career development chair 
knudsen ed eurocrypt lncs pp 

springer verlag berlin heidelberg ran canetti hugo krawczyk shared key cryptography protect transmitted data 
central piece building secure communications commonly cryptographic protocols 
popular examples include ssh ssl ipsec 
exist 
capturing security requirements key exchange protocol proven non trivial 
hand definition strong guarantee desired functionality protocol settings consideration 
hand overly strong impose unnecessary restrictions key exchange protocols 
simple easy possible 
numerous works studying cryptographic security key exchange protocols carried past quite different definitional approaches proposed 
partial list includes dow br bck ck see mov chapter background information 
canetti krawczyk ck building prior works notably br bck proposed definition attractive properties 
simple permissive shown suffice application key exchange providing keys symmetric encryption authentication algorithms order obtain secure communication channels 
words ck notion security called sk security guarantees composing key exchange protocol symmetric encryption authentication suffices specific purpose providing secure channels 
specific composability property sk security important 
able guarantee general composability properties key exchange protocols 
specifically able guarantee key exchange protocol remains secure application protocol may wish set secret keys pairs parties key exchange protocols runs concurrently arbitrary set protocols 
addition definitions task providing secure channels similar composability properties 
order provide strong composability properties needs general framework representing arguing arbitrary protocols 
proposed framework 
framework allows formulating definitions security practically cryptographic task 
furthermore shown protocols proven secure framework maintain security general composition operation called universal composition 
refer notions security formulated framework universally composable uc 
main result universally composable notion security key exchange protocols equivalent sk security 
allows combine relative simplicity sk security strong composability properties uc framework 
provide uc definition secure channels demonstrate notion uc key exchange suffices realizing uc secure channels 
universally composable notions key exchange secure channels additional advantage new definitions treat key exchange secure channel protocols protocols single session parties single exchange key single pairwise communication session 
contrast previous works treated protocol multi party protocols single instance protocol handles multiple pairwise sessions multiparty network 
top conceptually simpler single session treatment simplifies analysis protocols 
obtaining definitions especially proving equivalence sk security proves non trivial required new definitional techniques may useful 
elaborate 
bridging approaches defining security 
definition sk security follows definitional approach called security indistinguishability 
approach proceeds roughly follows 
order define security cryptographic task formulate games adversary interacts protocol consideration 
protocol considered secure feasible adversary distinguish case interacts game case interacts game 
definitional approach define semantic security encryption schemes gm definitions 
applied context key exchange protocols br 
contrast definitions uc framework follow different definitional approach referred security emulation ideal process 
approach proceeds roughly follows 
order define security cryptographic task formulate ideal process captures desired functionality task 
typically ideal process involves adding idealized trusted party system having trusted party compute desired output parties 
protocol considered secure adversary attacks protocol exists adversary simulator causes essentially effect system interacting ideal process task 
implies real protocol essentially secure ideal process 
approach formulate alternative equivalent notion semantic security encryption schemes see 
addition capturing security tasks zero knowledge general cryptographic protocols gl psw dm 
typical advantages definitions take approach relative simplicity 
hand definitions take second approach usually appear capture security requirements convincing way 
importantly second approach particular uc framework enables demonstrating general secure composability properties discussed 
case definitions follow approaches shown equivalent case semantically secure encryption chosen plaintext attacks gm 
cases approaches result distinct notions security emulation approach typically results strictly restrictive definition 
example case zero ran canetti hugo krawczyk knowledge versus witness indistinguishable protocols see fs 
example key exchange protocols protocols satisfy emulation definitions bck 
interestingly include natural protocols exhibit exploitable security weaknesses 
example original round diffie hellman protocol case ideally authenticated communication 
initial attempt formalizing uc definition secure protocols results definition restrictive bck strictly restrictive sk security 
relax uc notion equivalent sk security 
modify ideal process provide simulator additional information simulator complete simulation 
information call non information oracle property computationally independent exchanged key weaken notion security 
fact show resultant relaxed definition equivalent sk security 
see overview section section sketch relaxation technique non information oracles 
defining realizing secure channels 
contribution universally composable definition secure channels 
provides notion secure channels strong composability guarantees 
case key exchange protocols formulate intuitively immediate version uc secure channels 
demonstrate sk secure key exchange combined message authentication function certain class encryption mechanisms order realize secure channels 
provides assurance adequacy notion sk security 
turns natural encryption mechanisms result protocols realize notion uc secure channels 
encounter similar problem case uc secure key exchange insecure protocols exploitable security weakness 
problem stems different source symmetric encryption setting adversary adaptively corrupts parties 
particular problem persists strong uc key exchange protocols 
formulate relaxed version uc secure channels called weak uc secure channels variant non information oracles 
demonstrate sk secure key exchange combined encryption scheme semantically secure chosen plaintext attacks message authentication function results weak uc secure channels protocol 
organization 
section provides overview definition sk security uc framework results 
lack space include detailed technical exposition results extended 
full details reader referred ck 
universally composable notions key exchange secure channels overview sections provide background definitions ck uc framework respectively 
sections contributions 
section describe methodology reducing analysis protocol analysis simplified single session protocol 
section overviews results regarding universally composable key exchange protocols 
section overviews results regarding definition construction uc secure channels 
presentation remains high level ignores important details syntax key exchange protocols session id 
full details ck 
definitions ck briefly sketch ck definition sk security applicability secure channels refer precise description 
bck models computation defined unauthenticated links model um authenticated links model am 
models communication public asynchronous guaranteed delivery messages 
models protocols message driven party activated incoming message performs internal computation possibly generates outgoing messages waits activation 
furthermore models adversary may adaptively corrupt parties individual key exchange sessions parties obtain internal states 
um adversary arbitrarily modify messages delivering 
am adversary deliver messages sent parties deliver unmodified 
key exchange protocols treated multiparty protocols multiple pairwise exchanges handled single instance protocol 
instance key exchange protocol running party consists multiple ke sessions ke session invocation subroutine handles single exchange key peer session id define sk security game adversary parties running protocol formulated br 
adversary allowed invoke multiple ke sessions parties exchange keys 
deliver messages corrupt parties expose ke sessions parties um resp am 
adversary chooses announces specific ke session test session 
session completes random bit chosen adversary receives test value test value key generated session 
test value random value 
adversary continue usual interaction allowed expose test session matching session held test session partner 
run adversary outputs guess single bit 
adversary wins manages guess value key exchange protocol secure um resp am adversary cause partners exchange output different values session ran canetti hugo krawczyk key addition adversary win game probability non negligibly half 
secure channels protocol defined protocol secure network authenticator secure network encryptor 
definition secure network authenticators follows bck protocol secure network authenticator protocol am composed protocol sending message replaced activation protocol results composed protocol essentially functionality um 
definition network follows style definition indistinguishability 
game adversary parties running protocol formulated 
game captures requirement adversary unable distinguish encryptions adversarially chosen test messages session adversary sees encryptions messages choice decryptions ciphertexts choice decryptions result test message 
network encryptor deemed secure adversary win game non negligible probability 
consider generic protocol realizing secure channels key exchange protocol encryption scheme message authentication function order set secure channel partners run protocol obtain key 
sender encrypts message sends ciphertext tag computed applying message authentication function ciphertext 
encryption authentication done different portions obtained key keys derived exchanged session key 
verification decryption done analogously 
shown key exchange protocol secure encryption scheme semantically secure chosen plaintext attacks message authentication function secure protocol secure secure channels protocol 
counter mechanism added avoid replay messages 
universally composable definitions providing meaningful security guarantees composition arbitrary protocols requires appropriate framework representing arguing protocols 
treatment proposed general framework 
framework builds known definitions function evaluation general tasks gl dm psw allows defining security properties practically cryptographic task 
importantly framework security protocols maintained general composition operation unbounded number copies arbitrary protocols running concurrently system 
composition operation called universal composition 
similarly definitions security framework called universally composable uc 
briefly summarize relevant properties framework 
see details ck 
general definitions security requirements task functionality expected protocol carries task universally composable notions key exchange secure channels captured set instructions trusted party obtains inputs participants provides desired outputs iterations 
informally protocol securely carries task running protocol amounts emulating ideal process parties hand inputs trusted party appropriate functionality obtain outputs interaction 
call algorithm run trusted party ideal functionality 
order allow proving composition theorem notion emulation framework considerably stronger previous ones 
traditionally model computation includes parties running protocol adversary emulating ideal process means adversary exist ideal process adversary simulator results similar distribution outputs parties 
additional adversarial entity called environment introduced 
environment generates inputs parties reads outputs addition interacts adversary arbitrary way computation 
arbitrary interaction essential proving universal composition theorem 
protocol said securely realize ideal functionality adversary exists ideal process adversary environment tell interacting parties running protocol parties interact ideal process 
sense serves interactive distinguisher run protocol ideal process access see motivating discussion role environment 
universal composition theorem 
consider protocol operates hybrid model computation parties communicate usual addition ideal access unbounded number copies ideal functionality 
model called hybrid model 
protocol securely realizes sketched composed protocol 
identical exception interaction copy replaced call invocation appropriate instance 
similarly outputs treated values provided appropriate copy essentially input output behavior 
particular securely realizes ideal functionality ideal access securely realizes scratch 
additional composition operation called universal composition joint state proposed cr 
operation similar universal composition important difference multiple instances subroutine protocol may amount joint state 
contrast universal composition instance separate local state 
useful case key exchange protocols multiple protocol instances sessions access long term authentication module realized instance signature scheme uses signature key authenticating multiple sessions key exchange protocol run party case signature key represents joint state 
ran canetti hugo krawczyk extensions 
preliminary step study cast unauthenticated links model um authenticated links model am ck uc framework 
done casting models hybrid models access appropriate ideal functionality 
cases ideal functionality allows ideally authenticated transmission single message 
am parties access unlimited number copies 
party send single message party 
extend uc framework accommodate session state corruption operation ck allows adversary obtain internal data individual sessions parties 
single session vs multi session protocols contrast previous works treat key exchange secure channel protocols protocols instance handles single pairwise session single exchange key single pairwise communication session 
results greater conceptual analytical simplicity 
requires care issues 
multi session extensions 
order able compare definitions definitions ck define multi session extension single session key exchange protocol protocol handles multiple exchanges key exchange consists running instance original protocol 
multi session extension single session secure session protocol defined analogously 
way able state prove results sort single session protocol secure uc definition multi session extension secure ck 
long term authentication module 
typical key exchange protocols multiple pairwise sessions instance long term authentication mechanism 
instance mechanism may long term shared key parties public key infrastructure digital signatures asymmetric encryption 
pairwise key exchange secure channels sessions completely disjoint 
main bulk state pairwise session disjoint sessions treated separately 
order proceed follows 
restrict attention single session key exchange protocols explicitly specified long term authentication module 
module represents part key exchange protocol handles long lived information bind generated key identity party network 
typically part consists standard cryptographic primitive welldefined interface 
analyze key exchange protocols assumption functionality long term authentication module ideally provided 
hybrid model access appropriate ideal functionality 
particular means setting multiple instances key exchange protocols instance uses separate universally composable notions key exchange secure channels copy idealized long term module 
universal composition joint state see replace copies idealized long term module single instance protocol realizes module 
concreteness specify functionality long term authentication module digital signatures describe universal composition joint state case 
basically modeling results cr 
similar treatment done types long term authentication 
stress results general apply regardless specific long term authentication module 
uc key exchange order establish relationship notion sk security uc notions rephrase definition sk security uc framework 
done follows 
formulate specific environment machine carries game definition sk security 
expects interact protocol multi session extension protocol 
adversary asks invoke session party exchange key party 
adversary asks obtain session key generated session reveals key announces test session flips coin ifb hands real session key session 
gets random value 
outputs managed guess 
session partners output different values key lets determine output 
single session protocol said sk secure adversary skew output non negligibly away interacting multi session extension 
designed formulation sk security remains formulation ck 
refer notion security security indistinguishability 
turn defining uc secure key exchange 
done formulating ideal functionality captures security requirements single exchange key pair parties 
formulate functionality fke simply waits receive requests uncorrupted parties exchange key privately sends randomly chosen value parties halts 
partners exchange corrupted gets determine value key 
show known protocols satisfy notion theorem 
iso diffie hellman key exchange protocol authenticated digital signatures see ck securely realizes functionality fke um decisional diffie hellman assumption assuming security signature scheme 
show protocol securely realizes fke secure indistinguishability ran canetti hugo krawczyk theorem 
protocol securely realizes fke secure indistinguishability 
holds um am forward secrecy 
converse true 
specifically show surprisingly classic move diffie hellman protocol securely realize fke am protocol secure indistinguishability am 
examples 
proof insecurity protocol point exploitable security weakness protocol 
point technical loophole uc definition 
specifically problem arises party gets corrupted real life adversary expects see internal state party 
information needs match information value session key messages sent party past 
mimicking activity ideal process problematic simulator needs commit messages sent party knowing value key randomly chosen fke 
discussion mind relax ideal key exchange functionality follows 
define special type probabilistic interactive turing machine called non information oracle 
essentially non information oracle property local output computationally independent communication outside world 
functionality asked hand key pair uncorrupted parties invokes non information oracle lets interact simulator 
key provided parties set local output adversary corrupts partners session internal state hand guaranteed additional information provided simulator adversary ideal process compromise security session key long partners session remain uncorrupted 
follows fact non information oracle 
hand simulator corrupts partner obtains additional information internal state 
adequate choice information allows simulator complete task mimic behavior real life adversary 
call relaxed ideal key exchange functionality parameterized oracle protocol called weakly uc secure exists non information oracle securely realizes exemplify non information oracles sketching proof security classic move diffie hellman protocol 
dh denote protocol 
assume prime generator large subgroup prime order 
recall protocol instructs initiator choose zq send gx responder chooses zq sends gy parties locally output erase forward secrecy desired 
simulating interaction access fke chooses random session key gives parties possible 
informally reason case 
simulator come values messages sent parties 
say gets universally composable notions key exchange secure channels corrupted receiving message simulator learns random value fke chose session key come value gx chosen independently value exists negligible probability solve problem define non information oracle receiving defined chooses zq sends message containing gx gy locally outputs halts 
easy see decisional diffie hellman assumption local output computationally indistinguishable random communication outside world 
having access simulate protocol dh strategy 
recall order provide session key ideal process functionality runs lets simulator obtain messages sent sets session key local output case means simulator obtains gx gy session key set simulator say messages sent respectively 
corrupted simulator receives internal state contains show key exchange protocol secure indistinguishability weakly uc secure theorem 
key exchange protocol secure indistinguishability exists non information oracle securely realizes holds um am forward secrecy 
theorem provides characterization composability properties security indistinguishability key exchange protocol secure indistinguishability essentially ideal key exchange functionality provides adversary randomized information computationally independent exchanged key 
uc secure channels main application key exchange protocols providing secure channels 
ck provide definition secure channels protocols demonstrate sk secure key exchange suffices realizing definition secure channels 
see details section secure channels notion ck provide secure composability guarantees 
example guarantee protocol remains secure general application protocols assume idealized secure channels pairs parties 
formulate universally composable notions secure channels 
notions carry strong composability guarantees application protocol number protocols may running concurrently system 
addition contrast ck treat secure channel protocol ran canetti hugo krawczyk single session protocol protocol handles single communication session parties 
extension multi session case obtained general composition theorems 
formulating uc notion secure channels requires formulating ideal functionality captures security requirements secure channels protocol 
formulate ideal functionality fsc captures requirements straightforward way receiving request peers establish secure channel functionality fsc lets adversary know channel established 
peers asks fsc deliver message peer fsc privately sends peer lets adversary know message bits sent channel 
soon parties requests terminate channel fsc longer transmits information channel 
protocol securely realizes functionality fsc called uc secure channels protocol 
wish show weak uc key exchange protocol suffices build uc secure channels 
specifically recall generic protocol realizing secure channels key exchange protocol encryption scheme message authentication function order set secure channel partners run key exchange protocol obtain key 
sender encrypts message sends ciphertext tag computed applying message authentication function ciphertext 
encryption authentication done different portions obtained key 
verification decryption done analogously 
want show key exchange protocol weak uc secure encryption scheme semantically secure chosen plaintext attacks message authentication function secure chosen message attacks protocol constitutes uc secure channels protocol securely realizes fsc 
prove result special case encryption function certain form 
theorem 
mac secure message authentication code function weakly key exchange protocol 
exist symmetric encryption schemes enc sketched protocol mac enc securely realizes fsc um 
unfortunately statement true semantically secure symmetric encryption scheme 
exist natural encryption protocols semantically secure resulting protocol securely realize fsc regardless message authentication function key exchange protocol 
fact practical encryption protocols 
holds key exchange protocol strong uc secure securely realizes fke 
case key exchange protocols protocols fail realize fsc exploitable security weakness 
failure realize fsc stems technical loophole definition 
problem arises real life adversary adaptively corrupts party session wishes see plaintexts correspond previously transmitted ciphertexts 
mimicking behavior universally composable notions key exchange secure channels ideal process problematic simulator ideal process adversary commit ciphertext knowing plaintext decryption key 
proceed formulate relaxed version secure channels functionality 
relaxed functionality non information oracle order provide simulator randomized information plaintexts time secretly transmitted recipient 
specifically partners secure channel uncorrupted relaxed functionality wsc invokes non information oracle party wishes send message channel wsc secretly transmits party addition feeds output forwarded adversary 
channel peers corrupted wsc reveals internal state adversary 
security requirement non information oracle slightly different case key exchange 
specifically require messages generated non information oracle computationally independent messages received require interaction indistinguishable modified interaction message sent replaced zero string length handed rationale non information oracles case fact non information oracle guarantees information gathered simulator essentially independent secretly transmitted messages 
party gets corrupted simulator received additional information appropriately chosen oracle helpful completing simulation 
say protocol weak uc secure channels exists oracle defined securely realizes wsc 
show generic protocol weak uc secure channels protocol long key exchange protocols weak uc secure encryption scheme semantically secure chosen message attacks message authentication function secure theorem 
mac secure message authentication code function enc semantically secure symmetric encryption scheme key exchange protocol 
exists non information oracle encryption sketched protocol mac enc securely realizes sc um 
assurance adequacy weaker notion secure channels note weak uc secure channels protocol secure ck 
recall definition ck addresses secure channel protocols request transmit message party channel results single actual protocol message 
consequently implication holds protocols 
ran canetti hugo krawczyk beaver secure multi party protocols zero knowledge proof systems tolerating faulty minority cryptology 
bck bellare canetti krawczyk modular approach design analysis authentication key exchange protocols th stoc 
br bellare rogaway entity authentication key distribution advances cryptology crypto lecture notes computer science vol 
stinson ed springer verlag pp 

br bellare rogaway provably secure session key distribution party case annual symposium theory computing stoc 
bird gopal herzberg janson kutten molva yung systematic design party authentication protocols ieee journal selected areas communications special issue secure communications june 
preliminary version crypto 
blake wilson johnson menezes key exchange protocols security analysis proceedings sixth ima international conference cryptography coding 
canetti security composition multiparty cryptographic protocols journal cryptology winter 
line version ucsd edu html 
canetti universally composable security new paradigm cryptographic protocols nd focs 
full version available eprint iacr org 
ck canetti krawczyk analysis key exchange protocols building secure channels eurocrypt 
full version eprint iacr org 
ck canetti krawczyk universally composable notions key exchange secure channels iacr eprint archive eprint iacr org 
cr canetti rabin universal composition join state available eprint archive eprint iacr org 
dh diffie hellman new directions cryptography ieee trans 
info 
theory november pp 

dow diffie van oorschot wiener authentication authenticated key exchanges designs codes cryptography pp 

dm dodis micali secure computation crypto 
fs feige shamir 
witness indistinguishability witness hiding protocols 
nd stoc pages 
goldreich foundations cryptography cambridge university press 
prelim 
version available ucsd edu html gl goldwasser levin fair computation general functions presence majority crypto lncs springer verlag 
gm goldwasser micali probabilistic encryption jcss vol 
april pp 

goldwasser micali rackoff knowledge complexity interactive proof systems siam journal comput vol 
pp 

goldwasser micali rivest 
digital signature scheme secure adaptive chosen message attacks 
siam comput april pages 
universally composable notions key exchange secure channels mov menezes van oorschot vanstone handbook applied cryptography crc press 
micali rogaway secure computation unpublished manuscript 
preliminary version crypto 
psw pfitzmann waidner provably secure certified mail ibm research report rz ibm research zurich august 
shoup formal models secure key exchange theory cryptography library 
available ucsd edu html 
