linear logic authorization knowledge 
deepak garg bauer kevin bowers frank pfenning michael reiter carnegie mellon university 
propose logic specifying security policies high level abstraction 
logic accommodates subjective nature authorization knowledge compromising objective nature logical inference 
order accurately model consumable authorizations resources construct logic modal enrichment linear logic 
show logic satisfies cut elimination proof theoretic expression soundness 
demonstrate logic amenable meta reasoning specifications expressed examples 
develop logic specifying security properties high level abstraction 
difficulties domain security specifications nature depend individuals intent state knowledge 
addition logical inference regarding truth propositions need reason principals express intent knowledge principals 
addition need capture changes state transfer money goods linear logic 
arrive linear logic additional modal operators affirmation knowledge indexed principals 
combination linearity modalities affirmation knowledge original contribution new insights howto model possession consumable resources linear knowledge single authorizations linear show logic satisfies cut elimination proof theoretic expression soundness 
cut elimination theorem shows components logic orthogonal example coherent subsystem containing knowledge 
logic examples 
concerns student registration system demonstrates represent authorizations avoids knowledge 
second specification monetary instruments employs expressing authorization knowledge model possession supported office naval research daad army research office cns national science foundation 
resources 
examples show exploit formal logic order reason properties specifications expressed 
student registration example show various constraints asthe maximal number credits student sign respected 
monetary examples verify balance conditions total amount bank control principals 
meta theoretic analyses rely cut elimination somewhat deeper property focusing 
scope prior proof carrying authorization suggests fragments logic suitable basis policy enforcement distributed architecture 
logic steps reviewing affirmation new context linearity 
add possession knowledge followed brief sketch meta theory logic examples 
additional related plans 
constructive linear logic affirmation designing new specification logic consider range prop erties express 
realize need standard logical connectives conjunction implication 
concerned propositions judgment true 
hypotheses basic judgment form hypothetical judgment 
say constitutes objective part logic agrees laws logical reasoning meaning connectives 
second need way principals express intent information 
call judgment affirmation written affirms principal affirms proposition 
affirmation imply truth give access resource simply 
example principal may affirm access certain file disk 
expression intent truth access file security policy allows 
onthe hand true principals willing affirm principals rational verify evidence implementation imagine established ways cryptographically certificates containing signed deduction proving true 
combination signed logical proofs foundation proof carrying authorization 
go step allow may 
example personal check affirmation prepared pay sum 
allowed cash times 
logical terms means certificate linear logic enrichment linear logic 
linear logic characterized linear hypothetical judgment linear assumption represents consumable resource 
course need assumptions unrestricted reusable certificates 
view linear logic assumptions form valid depend linear resources 
putting observations obtain judgment forms gamma delta true gamma delta affirms delta consists linear hypotheses true gamma consists un restricted reusable hypotheses valid 
turns need consider form valid hypotheses form affirms eliminated set rules just captures nature hypothetical judgments 
true valid inferred position generally abbreviate judgments just short hand fl stands judgments consider right true affirms gamma init gamma delta fl gamma delta fl copy rules pertaining affirmation judgment 
con sider hypotheses form affirms rule states principal prepared affirm true proposition 
gamma delta gamma delta affirms affirms internalize affirmation propositional modal operator wecan combine logical connectives implication 
write proposition affirms sequent characterized left right rules 
gamma delta affirms gamma delta hir gamma delta affirms gamma delta affirms hil right rule straightforward left rule key understanding nature affirmation 
observe order apply left rule succedent sequent affirmation principal means move truth truth ifwe reasoning captures rational 
possession knowledge step introduce knowledge logic 
aware combine epistemic logic linear logic believe contribution independent interest 
assumption commonly knowledge monotonic may learn example inference forget 
linear knowledge 
returning usual interpretation linear logic linear assumption true resource may consumed 
linear knowledge possession resource may consumed proof 
write new judgment linear 
turns eliminate possession succedent sequent judgmental rule 
gamma delta fl gamma delta fl informally states possesses may resource 
wehave take care sure principals steal resource internalize possession proposition expressing possesses hypothetical nature sequents means tion succedent expresses potential possession proof corre sponds plan achieve position 
example sequent read means transform resource resource resource true obtain resource ofcourse resources consumed process obtaining resources linear right rule expresses order show obtain resource show resource obtained gamma delta possesses 
requires restriction removes context delta assumptions form similarly unrestricted context 
comparison left rule straightforward just transforming proposition 
gamma delta gamma delta gamma delta fl gamma delta fl restriction operator linear assumptions defined formally delta delta delta delta delta true delta means rule linear context premise contain assumptions form possibly distinct corresponding operator unrestricted assumptions gamma 
need traditional knowledge propositions subject reuse 
write judgment knows nature context gamma knowledge required assumptions rule pertaining directly judgment 
allows infer truth knowledge course converse prohibited 
gamma knows delta fl gamma knows delta fl knows internalizing knowledge way possession keeping mind un restricted nature obtain rules 
gamma gamma gamma knows delta fl gamma delta fl expresses obtain knowledge follows knowledge assumptions formally restriction defined follows 
gamma knows gamma knows gamma knows gamma gamma valid gamma concludes basic logic omitting linear non linear 
appendix summarizes sequent calculus including standard connectives 
include order need encode examples section 
results section extend order case easily 
cut elimination sequent calculus connectives explained right left rules propositions decomposed rules read premises justified saying meaning sitions determined proofs underlying interpretation sequent hypothetical judgment respected 
contents theorems admissibility cut identity principle 
admissibility cut expresses eliminate assumption true wecan supply proof true 
identity principle states need init rule gamma case atomic 
prove state general form account judgments logic 
properties weakening contraction immediate don state explicitly 
theorem admissibility cut 

gamma delta gamma delta fl gamma delta delta fl 
gamma gamma delta fl gamma delta fl 
gamma delta affirms gamma delta affirms gamma delta delta affirms 
gamma delta gamma delta fl gamma delta delta fl 
gamma gamma knows delta fl gamma delta fl 
proof 
nested induction structure cut formula size derivations 
theorem identity 
sequent calculus initial sequents re atomic propositions gamma proposition proof 
induction structure examples reasoning policies examples security policies expressed logic knowledge 
uses linear authorizations describe university course registration system 
second example authorizations represent system monetary instruments checks notes bank accounts 
reason systems correctness respect specification logic 
methods reasoning examples 
return point briefly section 
course registration example describes university registration system linear tions 
authorizations example may replaced linear possessions keep example simple 
main principals calendar authorizes free time slots available registrar controls entire registration process 
fol lowing table lists predicates intuitive meanings 
slot student free time slot credits student may register credits registered student registered course credits intime slot seats seats available course course course worth credits runs time slot wish enforce conditions registration 
student registers stipulated number credits 

student register courses time slot 

maximum registration limit course respected 
logic linear authorizations represented assumptions linear context delta authorizations meant unrestricted rep resented assumptions form context gamma implementa tion assumptions substituted certificates signed authorizing principals 
assume semester number certificates registrar calendar assume number authorization assumptions context start reasoning 

student linear certificate issued registrar 
certificate mentions number credits student permitted take 
possible time slot student gets certificate ofthe form calendar 
student course time slot course registrar issues linear certificate specifies number seats course registrar issues unrestricted certificate course cer specifies number credits course worth time slot runs 
form 
state policy rule governing registration courses 
rule quantified terms reg oeh oe oeh omega omega intuitively rule says course worth credits time slot seat available student reg credits semester free timeslot may register course rule consumes replacing similar credential ments number credits course worth 

rule consumes time slot credential correspond ing course time slot prevent registering runs slot 
enforces condition 
condition enforced rule replaces credential 
reduces number seats available 
observe condition rule represents intent stu dent register course interested security aspects system logic 
rule implemented say protocol necessary ensure rule student willing register course atomicity policy implementation 
realistic implementation policy essential policy rule reg atomically application rule pre conditions satisfied simultaneously 
significant due linearity proving pre conditions may utilize linear resources partial application rule may result situation linear resources incorrectly consumed 
simple example illustrates point 
suppose student wishes course worth credits time slot hold seat certificate student sufficient number available credits slot certificate 
permit non atomic policy rule consume linear certificates mentioned conclude omega omega student required time slot certificate proceed 
point stuck inconsistent state linear certificates mentioning number seats course student available credits con sumed 
student register course register course 
essential policy rule general policy rule uses linear resources enforced atomically implemen tation 
atomicity logic 
enforce atomicity policy rules logic reason faithfully consequences policies logic 
particular prove useful invariance properties ofthe system evolves particular policy 
atomicity artifact implementation method enforce logic logical consequence provability logic 
method focusing proof search technique combines number atomically affecting provability 
detailed description focusing scope 
appropriate purpose 
convert policy rule derived inference rule add logic 
atomicity forced implicitly pre conditions rule 


inference rule 
example rule reg converted rule 
gamma gamma delta gamma delta gamma gamma gamma delta gamma delta fl reg gamma delta delta delta delta bottom rule says conclude fl linear re sources delta delta delta delta prove preconditions rule reg delta delta delta delta authorizations produced reg prove fl 
exactly behavior rule reg implemented atomically 
system states steps 
formalize notion system state transition step example 
definitions prove certain properties system states invariant steps 
establish policy satisfies conditions mentioned example 
informally state system isa pair contexts gamma delta contains authorizations example 
definition state state system pair contexts gamma delta conditions 

assumptions gamma form 

assumptions delta forms orh 

student delta exactly assumption 

student time slot forms delta andh 

course exactly assumption gamma assumption delta 
student course assumption ofthe form delta define state change step system 
notion similar idea multi set rewriting 
definition step say pair contexts gamma delta steps pair gamma delta written gamma delta 
gamma delta derivation gamma delta fl gamma delta fl parametric fl derivation ofthe form correct fl 
gamma delta fl 
gamma delta fl definition 
transitive relation 

terms smaller inferences 
lemma characterization steps 
gamma delta state conditions definition 
suppose gamma delta 
gamma delta 
gamma gamma derivation definition form 
gamma delta fl reg gamma delta fl 
gamma delta fl reg gamma delta fl pairs gamma delta gamma delta states system satisfy definition 
proof 
proof lemma follows observing reason sequent gamma delta fl rule applies reg 
fl parametric right rule applies 
assumed gamma delta state assumptions form left rule applies form fl unknown 
argument repeated 
lambda lemma provides induction principle reasoning steps 
number reg rules derivation mentioned lemma method prove correctness proposition 
property correctness policy suppose gamma delta state gamma delta 
gamma delta 
hold 

student sum credits authorizations delta corresponding sum delta 
time slot student form delta delta 
course sum unique certificate number certificates context delta cor responding sum delta 
proof 
follow induction number reg rules corresponding gamma delta 
gamma delta lemma 
follows gamma delta state lemma state satisfies clause definition 
lambda observe start state gamma delta assumptions ofthe form statements proposition imply correctness conditions mentioned example state gamma delta 
formally proves rule reg correct respect conditions 
monetary instruments describe monetary system involving bank accounts checks items logic 
addition linear authorizations example uses linear possessions represent various monetary resources principals 
approach similar previous example 
describe system logic specific predicates policy rules convert policy rules inference rules order force atomicity 
define notion state step system 
manner analogous lemma prove properties monetary system 
property says total amount money inthe system remains unchanged system evolves 
second property says net assets principal remain constant 
assume existence principals bank cc 
assume principal account bank 
account balances principals assumptions linear possession assumption bank balance represents fact bank account 
particular bank maintains account 
represented bank balance bank 
check amount represented proposition check useful signed principal promises pay corresponding amount bearer possessed principal 
check dollars signed possessed represented 
observe difference affirmation knowl edge signature check represented affirmation realistically fact check intent payment fact holds check represented linear pos session 
note amount signed principal possessed represented assumption 
note check check bank note 
assume credit holds order keep representation simple write beneficiary check explicit argument predicate check 
ax bank balance bank balance oe bank balance omega bank balance ax bank balance bank balance bank oe bank balance omega omega bank balance bank ax cc cc omega ax hm item item omega hm ax cc oe cc omega cc ax fig 

rules monetary system section note form cc principal may zero owe credit 
items system 
item value possessed item 
various possible transactions system represented rules ax ax shown 
rules universally quantified terms 
ax says principal check amount signed may take bank get 
process bank increments balance decrements balance amount 
ax permits principal having account balance obtain banker amount 
bank transfers amount account gives signed check amount 
ax says willing sign checks principals notes 
principal possesses item worth sell provided produce check amount 
represented ax 
moves transaction 
ax permits principal pay credit check 
ax says principal check amount example convert policy rules add logic 
inference rules example shown appendix proceed define notion state step system example unrestricted resources omit context gamma definitions 
definition state state system context delta satisfying fol lowing conditions 

delta contains assumptions forms bank balance cc item 
principal exactly assumption delta bank balance cc 
definition transition step similar previous example 
definition step say context delta steps delta written delta 
delta derivation delta fl assumption delta fl fl 
state characterization lemma steps similar lemma 
lemma characterization steps 
suppose delta state conditions definition 
delta 
delta 
corresponding definition form rule marked inference rules ax ax see appendix 
delta fl delta fl 
delta fl delta fl delta delta states system satisfy conditions 
lemma gives induction principle steps 
prove property shown 
statement property says total amount money system measured sum balances principals remains constant 
second statement says net assets principal remain system evolves 
property consistency delta state delta 
delta 
follow ing hold 

sum bank balance exists delta corresponding sum delta 
principal sum amounts assumptions form bank balance item sum amounts assumptions form cc delta delta 
proof 
induction number rules marked derivation corre sponding delta 
delta lemma 
lambda generic description atomicity steps 
reasoning examples number similar concepts 
case inference rules derived policy rules force atomicity notion state notion step correctness conditions invariant steps properties 
definition state specific policy hard generalize describe atomicity step policies expressible logic building logic programming language logic 
discuss briefly 
enforcement atomicity inference rules focusing 
step relates quite naturally idea forward chaining proof search 
focusing forward chaining combined systematically build programming language logic 
language proof search proceed interleaving phases goal directed backward search chaining 
policies expressed language notions atomicity step arise semantics proof search 
technically new lax modality separate phases proof search 
prior experience language suggests feasible canbe implemented practice 
related logic combines major concepts affirmation knowledge linearity far aware time linear logic affirmation knowledge proposed investigated 
security perspective authorization knowledge specify intended flow information linear credentials linear possession consumable resources 
prior authors developed non linear logic authorization isa small fragment 
linearity single credentials enforcement mechanism proposed authors underlying logic fully developed properties investigated 
furthermore logic lacking treatment knowledge 
study authorization logical means initiated abadi logic classical axiomatic style studied kripke semantics 
proof theory meta theoretic properties cut tion described 
subsequently number authorization logics studied implemented 
logics linear proof theoretic explanation logical operators 
pointers line survey abadi non linear constructive authorization logic dcc quite similar fragment logic 
concepts possession knowledge related epistemic logics see survey epistemic logics describes knowledge held individuals similar operator far aware study epistemic logics operators restricted exclusively classical setting 
simultaneous knowledge described represent resources held principals appears new 
proof carrying authorization pca architecture specify enforce security policies 
believe pca architecture extended include linearity style proposed 
main enforcement single atomicity operations 
prior direction indicates contract signing protocols effectively 
believe possible implement entire logic proof carrying architecture proof authorization may depend knowledge held individuals verifying proof result breach security 
order effectively implement pca restrict certain fragments example authorizations principal depend knowledge 
new constructive linear logic develops logical con cepts affirmation knowledge judgmental principles 
logic yields clean proof theory analysis meanings connectives 
shown logic satisfies cut elimination demonstrated policies expressed logic amenable meta theoretic analysis re correctness 
believe logic foundation expressing policies involving linear authorizations resources held princi pals 
avenues mentioned 
construct implement logic programming language logic mentioned section 
avenue study non interference properties logic lines 
properties permit administrators explore consequences policies showing certain forms assumptions affect provability certain forms 
third direction extend explicit constructs distribution knowledge physical sites reason networked security systems slightly lower level abstraction 

mart abadi 
personal communication 

mart abadi 
logic access control 
proceedings th annual symposium logic computer science lics pages ottawa canada june 
ieee computer society press 

mart abadi anindya banerjee nevin heintze jon riecke 
core calculus dependency 
conference record th principles programming languages popl pages san antonio texas january 
acm press 

mart abadi michael burrows butler lampson gordon plotkin 
calculus access control distributed systems 
acm transactions programming languages systems october 

jean marc andreoli 
logic programming focusing proofs linear logic 
journal logic computation 

andrew appel edward felten 
proof carrying authentication 
tsudik editor proceedings th conference computer communications security pages singapore november 
acm press 

bauer 
access control web proof carrying authorization 
phd thesis princeton university november 

bauer kevin bowers frank pfenning michael reiter 
consumable credentials logic access control 
technical report cmu carnegie mellon university february 

elisa bertino barbara catania elena ferrari paolo 
logical framework reasoning access control models 
acm trans 
inf 
syst 


stefano cervesato gabriele fabio 
relating multiset rewriting process algebras security protocol analysis 
journal computer security february 

bor evan chang chaudhuri frank pfenning 
judgmental analysis linear logic 
submitted 
extended version available technical report cmu cs december 

jason george greg shea 
logic access control 
computer journal 

john detreville 
binder logic security language 
abadi bellovin editors proceedings symposium security privacy pages berkeley california may 
ieee computer society press 

deepak garg frank pfenning 
non interference constructive authorization logic 
proceedings th ieee computer security foundations workshop csfw 
ieee computer society press 
appear 

ninghui li benjamin grosof joan feigenbaum 
delegation logic logic approach distributed authorization 
acm trans 
inf 
syst 


ninghui li john mitchell 
datalog constraints foundation trust management languages 
padl proceedings th international symposium practical aspects declarative languages pages 
springerverlag 

pablo opez frank pfenning jeff kevin watkins 
monadic concurrent linear logic programming 
proceedings th international symposium principles practice declarative programming ppdp lisbon portugal 

frank pfenning 
structural cut elimination intuitionistic classical logic 
information computation march 

harald natarajan shankar 
introducing 
proceedings rd annual high confidence software systems conference baltimore maryland april 

van der hoek 
epistemic logic survey 
game theory applications 
summary sequent calculus appendix summarizes sequent calculus logic 
affirmation possession knowledge sequent calculus rules relating affirmation knowledge 
gamma init gamma delta fl gamma delta fl copy gamma delta fl gamma delta fl gamma knows delta fl gamma knows delta fl knows gamma delta gamma delta gamma delta fl gamma delta fl gamma gamma gamma knows delta fl gamma delta fl gamma delta gamma delta affirms affirms gamma delta affirms gamma delta hir gamma delta affirms gamma delta affirms hil standard connectives linear logic sequent calculus rules standard connectives linear logic omega oe shown 
ra rule fresh occur gamma delta gamma delta gamma delta gamma delta delta omega omega gamma delta fl gamma delta omega fl omega gamma delta gamma delta gamma delta gamma delta fl gamma delta delta fl gamma delta gamma delta oe oe gamma gamma delta fl gamma delta oe fl oe gamma gamma gamma delta fl gamma delta fl gamma delta gamma delta gamma delta fl gamma delta fl inference rules example section gamma delta gamma delta bank balance gamma delta bank balance gamma gamma delta bank balance bank balance fl ax gamma delta delta delta delta fl gamma delta bank balance gamma delta bank balance bank gamma gamma delta bank balance bank balance bank fl ax gamma delta delta delta fl gamma delta cc gamma delta cc fl ax gamma delta delta fl gamma delta gamma delta item gamma delta item fl ax gamma delta delta delta fl gamma delta gamma delta cc gamma gamma delta cc cc fl ax gamma delta delta delta fl gamma delta fl ax gamma delta fl 
