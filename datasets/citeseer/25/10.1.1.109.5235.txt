originally published proceedings th usenix security symposium san antonio texas january certificate revocation certificate update moni naor nissim weizmann institute science information usenix association contact 
phone 
fax 
email office usenix org 
www url www usenix org certi cate revocation certi cate update moni naor nissim dept applied mathematics computer science weizmann institute science rehovot israel wisdom weizmann ac il new solution suggested problem certi cate revocation 
solution represents certi cate revocation lists authenticated search data structure 
process verifying certi cate list updating list cient 
suggested solution gains scalability communication costs robustness parameter changes update rate 
comparisons solutions included traditional certi cate revocation lists micali certi cate revocation system crs kocher certi cate revocation trees crt 
scenario certi cates revoked frequently issued short term periods considered 
authenticated search data structure scheme certi cate update scheme certi cates updated message 
suggested solutions certi cate revocation certi cate update problems better current solutions respect communication costs update rate robustness changes parameters compatible certi cates 
wide public key cryptography requires ability authenticity public keys 
achieved certi cates serve mean transferring trust public key infrastructure pki 
certi cate message signed publicly trusted authority certi cation authority public key authenticity may provided means includes public key additional data expiration date serial number information regarding key subject entity 
research supported bsf 
certi cate issued validity limited expiration date 
circumstances private key revealed key holder changes liation position certi cate revoked prior expiration date 
existence certi cate necessary su cient evidence validity mechanism determining certi cate revoked needed 
atypical application credit card system credit may revoke credit card temporarily permanently prior expiration card reported stolen user bank account balance 
focuses problem creating maintaining cient authenticated data structures holding information validity certi cates 
store update retrieve authenticated information concerning certi cates 
main types parties involved certi cates 
certi cation authority ca trusted party having certi ed public key responsible establishing authenticity public keys including binding public keys users certi cates certi cate revocation 
ca provide line certi cate information services users 
updates directory periodic basis 
ca issues certi cates users signing message containing certi cate serial number relevant data expiration date 
certi cate sent directory user 
ca may revoke certi cate prior expiration date 

directory non trusted parties get updated certi cate revocation information ca serve certi cate database accessible users 

user non trusted party receives certi cate ca issues queries certi cate information 
user may query validity users certi cates denote users query users certi cates merchants get proof validity certi cate order certi cate proof transferable 
rest organized follows section brie review solutions aware crl crs crt memory checkers incremental cryptographic schemes 
section give basic de nitions theoretical background restate problem terms nding cient authenticated directories particular authenticated search data structures 
proposed scheme described detail section compared schemes section 
section consider model directory extracting certi cates certi cates updated periodically 
show simple modi cation revocation scheme works model 
related background section review solutions aware certi cate revocation list crl certi cate revocation system crs certi cate revocation trees crt 
continue reviewing memory checkers incremental cryptographic schemes relating problems certi cate revocation sections included theoretical background necessary understanding rest 
certi cate revocation list crl crl signed list issued ca identifying revoked certi cates serial numbers 
list concatenated time stamp indication freshness signed ca originally issued certi cates 
sent directory periodic basis changes prevent malicious replay new 
answer query directory supplies updated crl complete crl sent merchant 
main advantage scheme simplicity 
main disadvantage scheme high directory user communication costs may get long 
disadvantage user may hold succinct proof validity certi cate 
reasonable validity expiration period chosen certi cates 
expiration period short resources wasted certi cates 
expiration period long crl may get long causing high communication costs di culties crl management 
kaufman section suggested certi cates crl grows limit 
proposal certi cates marked serial number expiration date 
serial numbers incremented issued certi cate 
serial numbers reused certi cates reissued 
crl contains eld indicating rst valid certi cate 
certi cates reissued crl rst valid certi cate eld updated contain serial number rst reissued certi cate 
certi cate revocation system micali suggested certi cate revocation system crs order improve crl communication costs 
underlying idea sign message certi cate stating revoked line line signature scheme reduce cost periodically updating signatures 
create certi cate ca associates certi cate signed traditional certi cate data 
certi cate ca chooses pseudo randomly numbers computes way function 
stronger assumption required way iterates infeasible nd 
automatically guaranteed way permutation 
directory updated daily ca sending number certi cate follows 
non revoked certi cate ca reveals application daily incremented counter date issue 

revoked certi cate 
updated value serves short proof certi cate revoked directory may reply user query advantage crs crl query communication costs 
federal pki public key infrastructure estimates micali showed daily update crs expensive crl update cost crs querying lower 
estimated resulting fold improvement total communication costs 
exact parameters appear section 
advantage crs user may hold succinct transferable proof validity certi cate 
directory accesses saved users hold proofs presents certi cates 
main disadvantage system increase ca directory communication magnitude directory communication existence directory supposed decrease ca communication 
ca communication costs proportional directory update rate ca directory communication costs limit directory update rate 
complexity certi cate revoked proportional update rate 
example update hour user may apply function times order verify certi cate revoked making dominant factor veri cation 
complexity micali method verifying certi cate may improved follows 
collision intractable hash function 
issue certi cate ca creates binary hash tree follows tree leaves assigned pseudo random values 
internal node assigned value values assigned children 
ca signs root value gives part certi cate tree values speci cally pseudo random values assigned leaves revealed 
refresh certi cate ith time ca reveals values nodes path root leaf children veri er check nodes assigned correct 
note necessary explicitly give values nodes path values may easily computed values 
path serves proof certi cate validity 
amortizing number tree nodes ca send directory get nodes sent update user certi cate 
hash tree scheme sections 
certi cate revocation trees kocher suggested certi cate revocation trees crt order enable veri er certi cate get short proof certi cate revoked 
crt hash tree leaves corresponding set statements certi cate serial number issued ca 
set statements produced set revoked certi cates ca 
provides information certi cate revoked status unknown crt issuer 
statements specifying ranges unknown cas specifying certi cates range lower certi cate revoked 
instance ca revoked certi cates statements ca revoked produce crt crt issuer builds binary hash tree leaves corresponding statements 
proof certi cate status path hash tree root appropriate leaf statement specifying node path values children 
main advantages crt crl entire crl needed verifying speci certi cate user may hold succinct proof validity certi cate 
main disadvantage crt computational needed update crt 
change set revoked certi cates may result re computation entire crt 
checking correctness memories blum extended notion program checking programs store retrieve data unreliable memory 
model data structure resides large memory controlled adversary 
program interacts data structure checker 
checker may small reliable memory responsible detecting errors data structure behavior performing requested operations 
error occurs value returned data structure agree corresponding value entered data structure 
blum showed construct online checker rams variant merkle hash tree authentication scheme digital signatures 
universal way hash functions 
certi cate revocation may regarded variant memory checking 
memory checking unreliable memory storing retrieving data 
di erence memory checking program writes reads memory checker certi cate revocation exist distinct non communicating programs 
program ca writes unreliable memory directory user reads unreliable memory 
fact programs disconnected raises need mechanism prevent adversary replaying old data 
returning memory checking solution regarded checker dictionaries 
incremental cryptographic schemes high ca directory communication crs due fact ca update values certi cates status changed update certi cates 
fraction certi cates change status update expected small preferable scheme communication computational depending number certi cates change status 
issues addressed incremental cryptography 
incremental cryptography introduced bellare goldreich goldwasser :10.1.1.43.8746
goal incremental schemes quickly update value cryptographic primitive hash function mac underlying data modi ed 
informally set modi cation operators insert delete replace ideal incremental scheme computational needed depends number data modi cations 
ideal incremental authentication scheme search tree suggested 
informally family universal way hash functions chosen random infeasible nd 
scheme modi cation standard tree authentication scheme order allow cient insert delete block operations replace block operations 
scheme directly problem modify purposes section 
authenticated dictionaries section consider version problem translate problem nding cient authenticated data structures 
theoretically inclined readers may skip directly section presents self contained description data structure 
put framework problem deal nd protocol non trusted prover er non membership set nite set de ned trusted party ca known input prove trusted party dynamically assumed xed interact 
prover access data structure representing approved public information created trusted party prior setting non trusted prover ane cient procedure providing line short proof low order polynomial jxj log jsj appropriate claim de nitions universe set ds data structure representing membership query form hei 
response query string hai nog corresponding authenticated membership query form hei 
response query string ha pi nog proof authenticated ca 
update operations form 
ei element 
resulting data structure ds represents set feg 

ei element ins 
resulting data structure ds represents set 
de nition dictionary data structure ds representing supporting membership queries update operations 
de nition authenticated dictionary data structure au representing supporting authenticated membership queries update operations 
model set known ca prover veri er ca controls supplies information needed create authenticated dictionary representing authenticated dictionary dynamic mechanism proving authenticated proof updated needed 
dishonest directory may replay old proofs 
model may assume ca updates occur predetermined times user issuing query knows update occurred 
case veri er able check freshness proof parameters interested regarding authenticated dictionaries computational complexity 
time space needed authenticate dictionary creating updating 

time needed perform authenticated membership query 

time needed verify answer authenticated membership query 
communication complexity 
amount communication ca prover needed update dictionary 

length proof authenticated membership query 
implementing authenticated dictionaries small universe ord computational proportional ju trivial extremes respect number signed messages computation needed authentication veri cation prover veri er communication complexity ca signs appropriate message update ds ju signatures supplied regardless number changed elements ds 
example solution certi cate revocation system reviewed section 
ca signs message juj ui indicates ui expected small simple solutions ca signs intervals elements pair satisfying 
ca signs message containing list example certi cate revocation lists reviewed section 
solutions messages signed ca include time update 
describe generic method creating authenticated dictionary au dictionary ds 
overhead membership queries update operations roughly factor log 
construction collision intractable hash function 
de nition collision intractable hash function function computationally infeasible nd satisfying 
ds dictionary size representing set tq tu worst case time needed compute membership query update operation respectively 
collision intractable hash function th time needed compute instances consider representation ds may list variables values composing ds way ds represented random access memory 
authenticated dictionary au contains ds plus hash tree nodes correspond message signed ca containing tree root value time update 
hash tree constructed follows balanced binary tree created leaves assigned values 
internal node assigned value values assigned children 
membership query translated authenticated membership query supplying proof item ds accessed computation 
proof consists values nodes path root position children 
complexity authenticated membership query tq th log 
update portion hash tree corresponding elements changed re computed paths changed element root 
complexity ofan update operation tu th log 
authenticated search data structures general method section creating dictionaries logarithmic multiplicative factor overhead 
reason internal structure ds exploited authentication veri cation processes 
goal create authenticated dictionaries cient search data structures save logarithmic factor overhead 
denote authenticated search data structures 
crts reviewed section save logarithmic factor membership query complexity update amount computational function size revocation list 
section show create authenticated search data structures search trees 
interesting open question construct cient authenticated search data structures hash tables membership query processed roughly 
proposed scheme proposed scheme closer spirit crl crt crs maintains list revoked certi cates 
reduces ca communication feasible update directory periodically times day achieving ne update granularity 
revoked certi cates list maintained authenticated search data structure 
bene ts construction 
easy check prove certain certi cate serial number list sending complete list 

list update communication costs low 
underlying idea imitate search data structure constructing proof result search 
combine hash tree scheme sort tree tree leaves correspond revoked certi cates sorted serial numbers 
proving certi cate revoked certi cate revoked reduce proving existence certain leaves tree proving certi cate revoked equivalent proving existence leaf corresponding 
proving certi cate revoked equivalent proving existence certi cates corresponding neighboring leaves tree 
certi cates serial number queried certi cate higher serial number 
modify proof existence single leaf section 
authenticated search data structure maintain tree leaves corresponding revoked certi cates serial numbers increasing order 
tree interior node children paths root leaves length 
testing membership inserting deleting single element done logarithmic time inserting deleting element ect nodes insertion deletion path 
detailed presentation trees see pp 

property trees membership queries insertions deletions involve changes nodes search path 
change local number ected paths small 
tree may created inserting serial numbers revoked certi cates initially empty tree sorting list serial numbers building degree tree leaves corresponding serial numbers sorted list communication complexity minimal tree degree 
tree node assigned value procedure leaf stores revoked certi cate serial number value 
value internal node computed applying collision intractable hash function values children 
tree update procedure follows 
delete expired certi cate serial number tree updating values nodes deletion path 

insert newly revoked certi cate serial number tree updating values nodes insertion path 
tree update new nodes may created nodes may deleted due balancing tree 
nodes occur search path inserted deleted node 
certi cation authority authenticity data structure signing message containing tree root value tree height 
proof exists leaf tree certain value consists node values path length equal tree height root leaf plus values nodes children 
proof veri ed checking values tree nodes values path length 
finding fallacious proof existence leaf tree amounts breaking collision intractability possible choices include cient md md sha collisions md compress function md functions hardness assumption hardness discrete log subset sum cient 
note explicit serial number needed 
string easily computed certi cate hash certi cate may 
possible family universal way hash functions collision intractable hash functions letting internal node hold index function function randomly chosen lies deletion insertion path 
value node computed applying values children concatenated hash function indices 
motivation universal way hash functions collision intractable hash functions successful attacks md md 
universal way hash functions susceptible birthday attacks application function gx gx mod 
generator zp ca may generate gi ai compute single exponentiation mod mod 
may result smaller increase communication storage costs respect collision intractable functions 
bellare rogaway discuss methods creating practical universal way hash functions 
scheme may online revocation checking certi cates latency certi cate revocation crl update reduced 
result query line service supposed current certi cate status 
general line revocation checking requires certi cate validator trusted line checking directory non trusted party 
practice certi cate validator honestly informs user time updated ca may dishonest respect information 
needed ca update predetermined times ca may update directory status certi cate changed 
assumption plausible ca may authenticated search data structure number signatures compute signature computed certi cate status changed query 
data structures simpler implementation authenticated data structure random may trees 
binary trees nodes associated key priority pairs 
tree binary search tree respect node keys node keys left resp 
right subtrees small resp 
greater key heap respect node priorities node priority higher descendents priorities 
nite set key priority pairs unique representation 
random priorities drawn random large ordered set assumed distinct 
seidel aragon simple algorithms membership queries insert delete operations expected time complexity logarithmic size set stored 
random may easily converted authenticated search data structures similarly trees 
communication costs schemes similar expected depth random similar tree counterpart 
main advantage random implementation simple implementation trees 
drawback random performance guaranteed worst case 
users may low probability get long authentication paths 
drawback stronger assumption needed respect directory 
analysis random fact adversary know exact representation 
dishonest directory ability status certi cates may increase computational communication costs system 
scheme give details operations parties system 
ca operations creating certi cates ca produces certi cate signing message containing certi cate data user name public key certi cate serial number expiration date 
initialization ca creates tree set initially revoked certi cates 
computes stores values tree nodes sends directory sorted list revoked certi cates serial numbers signed message containing tree root value tree height time stamp 
updating ca updates tree inserting deleting certi cates 
insertion deletion ected tree node values re computed 
update directory ca sends di erence list stating certi cates added deleted previous list directory plus signature new root value tree height time stamp 
directory operations initialization receiving initial revoked certi cates list directory computes tree checks root value tree height time stamp veri es ca signature values 
response ca update directory updates tree di erence list received ca 
re computes values ected nodes checks root value tree height time stamp 
response users queries answer user query directory supplies user signed root value tree height time stamp 

queried certi cate revoked node path root leaf corresponding queried certi cate directory supplies user value children values 

queried certi cate revoked list directory supplies user paths neighboring leaves value resp 
smaller resp 
larger queried serial number 
note reduce communication costs directory need send node values path root values siblings nodes user may compute 
user operations user rst veri es ca signature certi cate checks certi cate expiration date 
user issues query sending directory certi cate serial number receiving directory answer query user veri es ca signature root value tree height time stamp 

directory claims queried certi cate revoked user checks leaf root path supplied directory applying hash function 
directory claims queried certi cate revoked user checks paths supplied directory checks lead adjacent leaves tree values user checks 
scheme communication costs verifying certi cate revoked may twice communication costs verifying certi cate list 
overcome tree may built node corresponds consecutive serial numbers having send path case 
number bits needed holding value tree node hash function security parameter hash notation twice bits needed holding certi cate serial number uence tree size 
evaluation ca directory communication costs scheme optimal proportional number changes revocation list enabling high update rates 
proof supplied directory length logarithmic certi cates 
allows user hold short transferable proof validity certi cate certi cate proof may ciently updated feature certi cate update scheme section 
compare communication costs crl crs system communication costs crt similar 
basing analysis show proposed system robust changes parameters allows higher update rates 
advantages proposed scheme ca keep smaller secret crs 
ca directory communication ca may communicate directory slow communication line secured breaking ca computer system security ability protect ca secrets 
base scheme tree need re compute entire tree update 
allows higher update rates crt 
consequence low ca communication ca may update directories avoiding bottlenecks communication network 
communication costs parameters consider estimated total number certi cates 
estimated average number certi cates handled ca 
estimated fraction certi cates revoked prior expiration 
assume certi cates issued year number certi cates revoked daily estimated number certi cate status queries issued day 
number updates day 
sn number bits needed hold certi cate serial number sn 
stat number bits needed hold certi cate revocation status numbers stat 
sig length signature sig 
hash security parameter hash function hash 
values sn stat taken micali sig hash speci scheme 
crl costs crl daily update cost sn ca sends crl directory update 
alternative update procedure ca sends directory di erence list serial numbers add remove previous crl costs sn crl daily query cost sn query directory sends crl querying user 
crs costs crs daily update cost sn stat certi cate ca sends stat bits certi cate revocation status 
crs daily query cost stat proposed scheme update directory ca sends di erence lists total daily length sig 
sn answer user query directory sends log numbers hash bits long totaling hash log bits 
table shows estimated daily communication costs bits schemes 
crl crs proposed costs costs scheme daily update ca directory daily queries directory users shown table proposed scheme costs lower crl costs ca directory directory users communication 
ca costs lower corresponding crs costs directory user communication costs increased 
note practice due communication overheads di erence crs proposed method directory users communication may insigni cant 
robustness changes scheme robust changes parameters crl crs 
bound change time due speci needs different implementations important system robust changes 
changes occur mainly total number certi cates update rate 
proposed method changes moderated factor changes moderated fact update communication costs proportional nt shows ca directory update communication costs methods depend update rate parameters held constant 
update communication costs limit crs update day factor limits update rate amount computation needed user order verify certi cate revoked 
proposed method robust allowing hour updates 
certi cate update scheme protocols avoid need revocation system short term certi cates 
protocols certi cate owner may cause limited damage 
certi cates issued daily expire day issue 
shorter periods desired main limit due increase certi cation authority computation certi cates users computed daily communication certi daily update costs bits crl crs proposed scheme update rate updates day daily ca directory update costs vs update rate 
cates sent owners short term certi cates cause 
line line digital signature scheme crs reduce computation ca perform reduce signi cantly communication costs ca send different messages di erent users making ca communication bottleneck 
calls solution ca performs simple computation say concerning new users users certi cates renewed sends common update message users 
message exactly users non revoked certi cates able prove validity certi cates 
suggest simple modi cation certi cate revocation scheme yields cient certi cate update scheme ca sends update message users 
solution assume existence directory information certi cates local directories may hold latest messages sent directory 
scheme scheme tree revoked certi cates created certi cation authority section 
way extract certi cates directory user gets initial certi cate may updated ca messages 
speci cally ca augments issued certi cate path proving validity part certi cate updated periodically 
update certi cates simultaneously ca updates copy tree publishes tree paths changed previous update 
user holding non revoked certi cate locates lowest node path coincides path updates path copying new node values root 
users holding revoked certi cate update path collision hash function information sent ca optimal factor hash 
insertions deletions previous update ca publish message length hash log bits 
ca communication reduced may update scheme say updating certi cates hour 
may cause users lag updating certi cates local directories save latest update messages aggregate updates combining update messages day enabling uses lag days update certi cates 
acknowledgments omer reingold helpful discussions diligent reading 
anonymous referees helpful comments 
aho hopcroft ullman 
data structures algorithms 
addison wesley 
seidel aragon randomized search trees 
proc 
th annual ieee symp 
foundations computer science pp 

blum evans gemmell kannan naor 
checking correctness memories 
algorithmica vol pp 
springer verlag 
bellare goldreich goldwasser 
incremental cryptography case hashing signing 
advances cryptology crypto 
ed 
desmedt 
lecture notes computer science springer verlag 
bellare goldreich goldwasser 
incremental cryptography application virus protection 
proc 
th acs symp 
theory computing 
bellare rogaway 
collision resistant hashing making practical 
advances cryptology crypto lecture notes computer science springer verlag 
brands 
cient line electronic cash system representation problem 
cwi technical report cs 
chaum van heijst 
cryptographically strong undeniable signatures unconditionally secure signer 
advances cryptology crypto lecture notes computer science springer verlag pp 


cryptanalysis md 
ed 
fast software encryption rd international workshop 
lecture notes computer science springer verlag pp 


cryptanalysis md 
rump session eurocrypt 
www iacr org conferences ec rump index html goldreich micali 
line line digital signatures 
journal cryptology springer verlag vol 
pp 

goldreich goldwasser halevi 
collision free hashing lattice problems 
eccc tr 
www eccc uni trier de eccc herzberg 
mini pay charging click web 
proc 
th international world wide web conference 
www com impagliazzo naor 
cient cryptographic schemes provably secure subset sum 
journal cryptology springer verlag vol 
pp 

kaufman perlman 
network security 
private communication public world 
prentice hall series networking distributed systems 
kocher 
quick certi cate revocation trees crts 
www com crt html merkle 
certi ed digital signature 
proc 
crypto lecture notes computer science pp 
springer verlag 
micali 
cient certi cate revocation 
technical memo mit lcs tm 
naor yung 
universal way hash functions cryptographic applications 
proc 
st acm symp 
theory computing pp 

national institute standards technology 
public key infrastructure government unclassi ed sensitive applications 
september 
national institute standards technology 
secure hash standard 
federal information processing standards publication 
rivest 
md message digest algorithm 
internet rfc 
rivest md message digest algorithm 
internet rfc 
