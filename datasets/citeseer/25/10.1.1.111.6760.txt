user specified adaptive scheduling streaming media network michael hicks nagarajan robbert van renesse department computer science department computer science univ maryland college park md cornell univ ithaca ny cs umd edu cs umd edu cs cornell edu disaster combat situations mobile cameras sensors transmit real time data operators analysis tools 
unfortunately face limited unreliable resources varying demands users may able get fidelity require 
describes medianet distributed stream processing system designed scenarios mind 
past approaches medianet users intuitively specify system adapt individual needs 
medianet uses local online global resource scheduling improve user performance network utilization adapts requiring underlying support resource reservations 
performance experiments show scheduling algorithm reasonably fast user performance network utilization significantly improved 
consider dangerous setting collapsed buildings caused earthquake terrorist attack 
novel recording devices cameras carried aerial vehicles uavs robots crawl may deployed explore area 
output devices interest operators 
operators may include rescue workers working people station press software creates say dimensional model scene 
different operators may require different views area may different fidelity requirements user priorities 
operators may independently share resources recording devices compute servers networks 
resources limited capacity allocated carefully 
resource reservation adaptivity essential 
conditions disaster situation unique 
applications consist multiple operators interested streaming data multiple sources adapt limited resources potentially applicationspecific ways 
examples include exchange aggregation sensor reports distribution media home network performing reconnaissance deployment military setting :10.1.1.116.345:10.1.1.161.2760
number projects explored provide improved quality service qos streaming media funded part darpa darpa afrl nasa ree program administered jpl nsf cise afrl information assurance institute afosr 
resource limited conditions 
systems place computations network routers application level overlay network employ system determined local adaptations priority video frame dropping :10.1.1.29.779
adaptations impose little overhead inefficient take account global information 
existing schemes typically consider user preferences making qos decisions 
study problems overcome developing system called medianet takes comprehensive view streaming data delivery 
medianet mainly differs past approaches ways 
qos adaptation system determined medianet allows users specify adapt overload conditions 
user contributes list alternative specifications associates utility value specification 
users color depth may important frame rate users preference may way 
primary goal medianet maximize user utility 
second addition local scheduling medianet employs global scheduling service divide tasks flows network components 
global point view benefits fairness performance service consider specifications multiple users accounting priority network efficiency challenge scalable manner 
different projects global schedulers medianet global scheduling service continuously looking improvements monitoring feedback 
medianet employs completely adaptive overlay network rely resource reservations adapts loads control 
experimental measurements prototype implementation promising users achieve better performance network efficiently utilized local adaptations 
hand system exact higher cost global adaptations terms overhead implementation complexity 
consider step exploring synergistically apply adaptations various levels scheduling hierarchy 
describe medianet architecture section ii prototype implementation section iii 
focus challenges implementing globally cameras sensors wireless user devices fig 

medianet architecture 
scheduling service compute servers workstations reconfigurable stream processing system show experimental evidence costs benefits section iv 
finish related section section vi 
ii 
medianet architecture medianet architecture defines computational network consisting compute nodes network links 
elements responsible receiving streaming data various sources computing data delivering 
shown compute nodes highly heterogeneous consisting cameras sensors workstations compute servers different computational power available memory hardware support video operations network links nodes wired wireless underlying network topology may change run time components physically move new parts infrastructure deployed 
user interface computational network global scheduling service architecture leaves implementation service 
service responsible scheduling various flows computations network user specifications current state network 
describe specifications followed discussion scheduling 
specifications users communicate requirements global scheduling service call continuous media network cmn directed acyclic graph dag representing computational dataflow 
job global scheduling service combine individual users single cmn partition cmn subgraphs executed various compute nodes 
act combining partitioning nodes takes account issues fairness performance user specified adaptation describe 
node cmn represents operation mapping zero input frames stream specific packets data video frames audio clips zero output frames 
operations simple data forwarding frame prioritizing frame dropping complex video frame cropping changing resolution color depth picture picture effects compression encryption need operations receive input send output components external dag perform devices video cameras players 
global scheduling service takes account bandwidth latency processing requirements operations 
operations number associated attributes 
important attribute interval indicates minimum time operations subsequent frames inverse rate 
better performance operations process input frames immediately forced execute specified intervals queued data 
case interval effectively specifies soft real time constraint processing frames frames arrive faster specified interval node process interval downstream congestion backpressure applied incoming flow frames dropped 
handle situation adaptively considered subsection 
cmn node fixed certain location actual network indicate network location particular video source left unspecified 
node considered optional meaning inserted mandatory nodes cmn scheduled multiple compute nodes 
operations maintain internal need operate packets 
requiring important allowing operations relocate reconfiguration 
user specification list cmn relative preference indicated corresponding utility value real number means desirable 
implementation encode user specifications consequently xml documents 
example specification shown depicted graphically user specifies having decreasing utility 
cmn mpeg video stream originates location pcs frames prioritized intelligent dropping optional indicated prio operation delivered user player pcd 
second cmn frame rate reduced proactively dropping frames third cmn frames dropped 
medianet scheduler decide specifications run run operations unspecified locations 
expect users author directly provide higher level preferences general adaptation methodology streams interest 
example user specify declarative format want mpeg stream location want adapt frame dropping weaving tool part global scheduling service index preferences database contains template stream specifications 
template basically mpeg streams frames essentially jpeg images frames frames exploit temporal locality including deltas adjacent frames 
frames rely temporally frame frames rely prior frame appearing frame 
frames important frames frames important 
utility cmn vid prio user pcs pcd pcs pcs vid vid fig 

user specification apis prio prio drop drop pb prio prio pcd pcd user user high level user template high level stream specs subscribe spec weaver stream db example user cmn medianet user api shown stream specific data stream location resource usage characteristics stream specifications include missing information 
weaver merges template stream specification requested movie create complete cmn utility values filled 
idea shown 
weaver set utility values share resources users potentially differing priority fairly 
utility values relative absolute effect 
user alternative specifications prioritized relatively ordering utilities particular magnitude utility value relates globally utility values users 
example higher priority user specification utility values respectively 
resources limited user forced adapt user having utilities assigned 
expect report implementation aspect medianet architecture implementation assumes utilities set fairly hand 
scheduling user provides specification global scheduling service schedules network conjunction existing user specifications 
schedules generated prototype implementation depicted 
combined user specifications equal priority varying user video locations scheduled network shown 
nodes correspond video sources pr nodes correspond frame operations node corresponds operation 
empty circles send receive operations inserted global scheduling service transport data nodes 
quality schedule evaluated provided user utility network wide utilization terms cpu memory bandwidth usage 
schedule evaluation absolute sense difficult scheduling problem certainly np complete generating optimal schedule comparison feasible 
user cmn publish gs assess schedules manually possible compare schedules different algorithms 
global scheduling service exploited commonality specifications sharing source creating multicast effect generalized 
service avoids wasted bandwidth locating bandwidth reducing computations far upstream possible video db node scheduled pc connected congested link avoids wasting bandwidth link 
shown user different utility values combined 
example combining utility cmn user cmn assuming shared source result split path way destinations drop operation operating arm split result sort rtp style mixer providing local resource adaptation shared stream :10.1.1.165.7150
architectures similar global scheduling services set initial computational flow reschedule rarely compute nodes network links fail medianet global scheduling service operates line performing continuous scheduling 
service needs regular reports current conditions including changes link cpu memory loads changes topology 
delays detecting reporting changing information changes schedule necessarily occur order seconds 
mitigate delays user specifications employ local adaptations intelligent packet dropping upstream 
iii 
implementation medianet architecture leaves details global scheduling service unspecified admitting possibility variety implementations 
current prototype implements straightforward approach single global scheduler gs computes cmn subgraph node sends local scheduler ls running 
ls implements cmn periodically reports local resource usage gs periodically recompute redistribute schedules necessary 
approach benefit scheduler consider entire network users achieve better fairness performance cost scalability 
conversely completely dis tributed approach improve scalability degrade performance 
believe best approach hierarchy gss responsible sub components network combined user 
users provide specifications top level gs aggregate specifications disseminate partitions child schedulers 
likewise ultimately single cmn provided ls implementation compute node 
conversely ls report available resources parent gs report aggregated resource amounts parent 
hierarchy best created fly depending size network current state 
small networks nodes users expected motivated disaster situation single gs ideal larger networks hierarchy reduce system wide effects reconfiguration reduce monitoring overhead section describe global scheduling algorithm implementation local schedulers monitoring methodology reconfiguration protocol 
aspects implementation extend naturally hierarchical arrangement leave extension 
global scheduling space restrictions prevent fully describing scheduling algorithm summarize key features complete details 
framework tied particular algorithm approaches adapted 
challenge line scheduling algorithm fast arriving schedule 
couple techniques 
consider entire search space assignments user operations nodes combinations users different utility levels break space coarse grained pieces locally optimal decisions 
example schedule derived multicast tree time consider possible combinations 
similarly consider possible user utility combinations find single optimal utility users optimize individual user utilities 
insert send receive operations user operations gs choose path follow shortest path computation maximum bottleneck bandwidth 
arrive optimal path recompute shortest paths user operations possible assignment expensive 
conversely outset scheduling fail discover alternate paths deficiencies 
compromise calculating shortest paths scheduling derived multicast tree effectively exploits alternate paths 
alternatively multi path algorithm best paths algorithm 
prototype gs written consisting lines code 
experiment section iv measured gs running times ms ms longer running times cases network loaded possibilities considered 
running time due constant factors implementation tune 
local scheduling ls responsible implementing cmn provided gs 
creates data structures represent cmn nodes sorts topologically data flow 
uses deadlines ensure operations run soon possible prescribed interval topological ordering 
operations data driven ls simply runs operations frames arrive 
lss written type safe systems language cyclone essentially safe comprising roughly lines code :10.1.1.127.7825:10.1.1.127.7825
allow legacy applications medianet seamlessly medianet transport protocol implemented inserted send receive operations needs meet api expected application 
example application uses tcp receive data medianet connect application tcp hop ensure data delivered receiver reliably order duplication 
udp application impose fewer requirements 
medianet support variety transport protocols send receive operations maximize performance system meeting minimal requirements application 
prototype implementation uses tcp exclusively plan support transport protocols udp rtp udp possibly :10.1.1.165.7150
benefit tcp medianet readily communicates bandwidth limitations mitigating need external available bandwidth detection facilities 
particular tcp send buffer fills application receives error queues frames bandwidth available 
application queue filled consequent action depends application semantics 
streams tolerate dropped frames video streams medianet start dropping frames priority 
user supplied operations set priority see supporting local adaptation 
stream tolerate lost data medianet exert backpressure sending application effectively throttle rate reconfiguration take place 
choosing reasonable queue size important reconfigurations mention 
monitoring adaptive reconfiguration profitable gs reasonably informed changes network particularly topology loads nodes links 
focusing bandwidth limitations experiments available bandwidth reporting implement cpu monitor 
available bandwidth detection ongoing area research clear general solutions :10.1.1.29.779
particular various techniques trade accuracy overhead measurement time 
example packet pair estimates quickly predict available bandwidth extremely low overhead just packets reliably single hop links including wireless links :10.1.1.15.2217:10.1.1.29.779:10.1.1.168.4807:10.1.1.168.4807:10.1.1.105.9822
hand jain dovrolis approach oneway delays works multi hop paths reasonably low overhead order packets estimation time typically couple mbps actual value :10.1.1.168.4807
limits accuracy speed constrain time scales magnitude changes global scheduling service 
implementation ls notes data sent dropped application level link sends information periodically gs 
reports provide low overhead highly relevant way assessing available bandwidth 
low overhead information piggy backed actual stream sent relevant directly reports value interest data node send particular link appropriate transport protocol 
observe link report indicate link support bandwidth imposed 
data intended sent sent frames dropped backpressure applied 
case gs knows link peak capacity sets estimate reported sent bandwidth broadcast links reports aggregated 
case knows capacity reported amount 
unfortunately approach provides upper bound available bandwidth link overloaded main drawback technique 
compensate gs receive link peak capacity report time assumes additional bandwidth available begins bandwidth estimate link regular intervals spirit tcp additive increase 
net effect eventually reconfiguration take place uses assumed available bandwidth estimation incorrect new configuration fail take place compensate 
currently increase estimate constant second seconds peak capacity report 
choice values essentially determines rapidly gs tries find unused bandwidth 
tension monitoring accuracy frequently monitoring information sent accurate gs network model overhead network links 
reduce traffic maintain accuracy ls sends non peak reports reported bandwidth increases 
peak reports sent seconds 
approach sending reports seconds reduces monitoring traffic roughly experiments 
plan incorporate forms feedback estimation link estimates improve accuracy gs network view 
example jain dovrolis technique finding increasing trend latencies sent packets incorporated measurements determine upper bound link overloaded 
general wish associate confidence measures link bandwidth estimates estimated links weighted highly measurements scheduling 
imagine link profiles estimate unmeasured links past usage 
consider testing unmeasured links new schedule determined configure network 
reconfiguration global reconfiguration initiated take effect quickly safely negatively impacting perceived user quality 
defining protocol allows old new configurations run parallel old configuration removed 
number mechanisms ensure old configuration removed quickly possible preserving application expected stream semantics 
protocol works follows 
gs calculates new schedule sends new cmn ls 
ls schedules cmn immediately receipt parallel existing configuration 
configurations interfere gs assigns different tcp port numbers inserted send receive operations 
operations establish connections connections video source receiver outside medianet ports delayed closed old configuration 
video source applications notified reconfiguration taken place tcp data downstream medianet node 
close connections medianet reconnect time connecting new configuration 
old configuration continue forward data destination ls old queues flushed old configuration removed 
bit old data sent video receiver new configuration able connect forward data 
protocol minimize time video source receiver disconnected medianet experiments time averages ms far typical video inter frame interval ms reduce total switching time reduce time old configuration stays connected receiving application time frames new configuration queue waiting connect receiver 
case frames dropped reduce old configuration lifetime quickly clearing application queues priority frame dropping described 
queues clear naturally suggests frames dropped application queue lengths relatively short permit quicker reconfigurations 
initiate frame dropping ways 
tie queue lengths connections link higher priority new packets force dropping api assumes applications able reconnect disconnected described proxies support legacy applications 
pc pc pc pc pc pc pc pc fig 

experimental topology emulab 
lower priority old ones sharing link 
second cases old new paths shared set drop timer currently going proactively drops increasingly higher priority frames old queues 
methods average reconfiguration time larger experiment section iv maximum time times easily buffering window video players 
stability global reconfigurations initiated reconfiguration window currently seconds 
larger window adaptive stable system 
currently experimenting different kinds windows limiting reconfigurations quality network model fixed timeout 
iv 
experiments section experiments measure media net delivering mpeg video stream various topologies load conditions 
show medianet consistently delivers performance efficient network utilization effectively utilizing redundant paths exploiting commonality user specifications carefully locating cmn operations 
configuration experiments performed emulab configured topology shown :10.1.1.11.3768
node mhz intel pentium iii processor running redhat linux having mb ram intel pro mbps ethernet cards 
emulab supports dynamic events scheduling dynamically inject traffic shaping events implemented dummynet nodes increase decrease available bandwidth various links experiments :10.1.1.57.2969
experiments ran ls node gs pc 
source video loop mpeg video stream frames appear twice second frames times second frames times second average sizes respectively 
video requires kb send full rate kb send frames kb send frames 
exploiting global adaptation demonstrate benefit local adaptation network load added benefit global adaptation compare different configurations adaptation configuration consists streaming data desired play rate oblivious network conditions 
implement medianet lss 
priority frame dropping configuration consists tagging frames successively higher priority overload lowest priority frames dropped 
approximates past approaches intelligent frame dropping 
proactive frame dropping configuration consists intelligently dropping video frames overload 
case ls observes frames start getting dropped particular link adapts proactively dropping frames frames 
dropping frames ls occasionally attempt improve configuration dropping frames try just dropping frames 
configuration approximates past approaches intelligent network frame dropping layered approaches frame type essentially defines layer :10.1.1.127.7825
particular path data changes just data sent path 
experiment implement approach gs preventing choosing alternate paths 
global adaptation configuration uses media net gs user specification depicted 
configuration ran experiment uses diamond portion topology single video sender pc receiver pc experiment measures video player performance terms received bandwidth decodable frames lower andl available bandwidth time 
graphs shown section format 
light gray circle frame black incorrectly decoded 
plots time versus bandwidth location time frame received location bandwidth seen player time aggregated previous second 
available bandwidth set dummynet shown dashed solid lines 
dropped frames shown 
shows adaptation case 
start route receiver fixed available bandwidth link drops video quality degrades 
application decode majority received frames temporally important frames frames dropped 
playback frame manifests glitch noticeable user 
case large constant clumping glitches quite disruptive 
shows priority dropping case 
case playback improves dropping frames remains poor highly loaded conditions 
roughly time player decode received frames large fraction frames decoded properly 
time frames dropped frame prevent downstream frames decoded 
contrast local adaptation path performance improves significantly shown bandwidth kb bandwidth kb decoded decoded time bandwidth kb decoded decoded time adaptation local priority frame dropping decoded decoded time bandwidth kb decoded decoded time local proactive frame dropping medianet fig 

user perceived performance diminishing bandwidth various adaptivity schemes 

glitches occur result sudden drop available bandwidth due attempts obtain better configuration resources available 
dropping frames avoid dropping frames lead temporal glitches 
proactive frame dropping adaptation significantly improves playback congested path fails alternative paths improve playback 
contrast medianet global scheduler reconfigures network utilize redundant paths 
shows medianet gs traffic pc congested roughly time utilizing 
bandwidth reduced causes medianet drop frames reaches level local case 
number times experiment gs optimistically assumes bandwidth available links attempts improve total utility 
time link bandwidth drops tries reroute flow link 
lower available bandwidth reconfiguration window expires set seconds gs returns configuration link utility dropping frames 
similar failed attempts occur times 
user configuration mitigates negative effects reconfigurations intelligently dropping frames network reconfigured 
ideally prevent spurious configurations conservative degenerate local adaptation possible approaches discussed section iii 
redundant paths occur frequently wide area mobile hosts multiple networks available laptops cellular ethernet :10.1.1.38.9273
emphasize medianet contribution simply multi path routing local adaptation explored prior contexts 
medianet global scheduling service encapsulates general way performing adaptation network wide basis individually specified adaptation preferences metrics 
doing effect employs local adaptations proactive frame dropping global adaptations path rerouting meet needs users network 
multi user sharing examine resources shared users configured medianet video sources clients 
video pc clients users user pc user pc user pc video pc clients users user pc user pc 
user specification varies shown specification video source user locations 
links fully available gs assigns operations shown 
unlabeled operations tcp sends receives pr operations assign frame priorities intelligent dropping 
combining user specifications gs essentially created multicast dissemination trees uses stream 
performance seen sets receivers shown 
time bandwidth link reduced kb gs reconfigures network flows go link maintain utility users 
time bandwidth link dropped kb making impossible carry bandwidth kb decoded decoded time fig 

user perceived performance multiple user scenario 
streams link 
gs reconfigures sent link frames dropped indicated db node pc utility cmn goes link utility users 
notice gs scheduled db dropping frames node source pc node connected congested link better network utilization 
time bandwidth drops kb results flows operating utility shown 
configuration essentially unloaded configuration db nodes video source hosts 
run gs guesses additional bandwidth available various links attempts improve configuration 
occurs time improve fails reverts back time 
similar attempt time go 
related distributed multi media research popular decades idea multi media processing network inspired problems digital video broadcasting heterogeneous networks 
goal providing adaptive qos streaming data shared number systems including active networks applications qos middleware substrates network processors :10.1.1.17.2974
projects targeted dissemination mobile wireless workstations odyssey 
systems focuses sharing resources users differing adaptation preferences adaptivity mechanisms resource models quite relevant 
systems considered efficient stream adaptations shared users 
layered multicast shares resources efficiently users contains decentralized protocols task distribution load balancing streaming data operations :10.1.1.29.779:10.1.1.127.7825
layered multicast layers coarse grained abstractions support computational adaptations transcoding 
similarly fails account user preferences scheduling adaptations 
medianet shares mechanisms certain overlay networks ron addition constructing flexible virtual network top physical networks bandwidth kb decoded decoded time users users provide improved network performance alternative paths conjunction bandwidth probing failure detection :10.1.1.38.9273:10.1.1.124.9552:10.1.1.161.2760
date systems concerned qos real time constraints streaming data sharing resources users 
alternative approach adaptive qos qos resources cpu bandwidth allocated applications advance :10.1.1.165.7150:10.1.1.57.2969:10.1.1.38.9273:10.1.1.27.14
drawbacks reservations underlying support widely available allocated resources underutilized resulting inefficiency 
number systems looked application specific scheduling reservation capable environments example omega system architecture 
number systems share goal supporting userspecified adaptive streaming data applications including cans conductor darwin media paths ninja paths :10.1.1.39.7289:10.1.1.105.9822
central systems notion paths stream transformers scheduled network presence centralized plan manager schedule paths network similar medianet gs 
systems plan manager initialization rarely medianet gs runs continuously 
attention paid exploring fast line scheduling algorithms effective needed scalable line system 
systems take advantage path user specified adaptation 
addition plan managers appear consider scheduling particular application flow opposed combination existing applications flows opportunities improve user network performance example aggregation re routing 
full contains additional comparisons related 
vi 
medianet architecture user specified qos distributed streaming data applications 
clear benefits 
adaptations user specified system determined 
second medianet global local scheduling approach results global local adaptations applied user flows experiments demonstrate better user system performance ways pc pc pc pc pc pc db pr pr pr pr pr pr congestion pc pc pc pr pr kb pr pr kb fig 

scheduling varying conditions multiple users 
gs aggregates users continuous media networks removing redundancy multicast fashion 
utilizes redundant resources alternative unloaded routing paths 
adapts proactively prevent wasted resources example dropping frames close source downstream congestion 
promising step interesting directions remain 
understand scalability architecture plan explore hierarchical implementation global scheduling service described section iii 
addition intend examine practical growth monitoring message overhead gs running times network instability understand possible tradeoffs 
mentioned earlier section iii interested employing additional monitoring techniques better heuristics weighing aggregating information 
plan explore automated means setting scaling user utilities systematically ensure fair sharing resources 
just scratched surface medianet possibilities experimenting network limited video plus frame dropping applications 
believe medianet generality quite useful considering cpu limited cases example streaming data embedded devices performing computationally intense transformations digital facial recognition motion analysis 
acknowledgments cyclone development team members greg morrisett dan grossman rapid response pr pr pc pc pc pc pc pc pr user pr pr pr pr pr user user pc pc pc pr pr pr user pr pr pr pr user pr pr pr pr user pc pc pc pc pc pc user user user user user user user user user cyclone related problems 
scott nettles jonathan moore bobby bhattacharjee anonymous reviewers helpful comments earlier versions 
intanagonwiwat estrin govindan heidemann impact network density data aggregation wireless sensor networks proceedings proceedings nd international conference distributed computing systems icdcs july :10.1.1.116.345
peterson constructing paths playing media objects proceedings ieee conference open architectures apr 
jbi joint infosphere www rl af mil programs jbi default cfm :10.1.1.161.2760
bhattacharjee calvert zegura active networking congestion college computing georgia tech tech 
rep git cc 
chandra fisher ng steenkiste takahashi zhang darwin customizable resource management network services proceedings ieee international conference network protocols icnp oct 
ramanujan active network design qos adaptive video multicast service proceedings workshop network operating system support digital audio video july 
amir mccanne hui application level video gateway proceedings third acm international multimedia conference exhibition multimedia nov 
ooi van renesse smith design implementation programmable media gateways proceedings workshop network operating system support digital audio video june :10.1.1.29.779
fu shi karamcheti cans composable adaptive network services infrastructure proceedings usenix symposium internet technologies systems usits mar 
schulzrinne casner frederick jacobson rtp transport protocol real time applications internet rfc :10.1.1.165.7150
hicks nagarajan van renesse user specified adaptive scheduling streaming media network department computer science university maryland tech 
rep cs tr jan available www cs umd edu papers arch extended pdf 
choi turner wolf configuring sessions programmable networks proceedings ieee infocom conference apr 
lee wu best paths algorithm highly reliable communication networks ieice transactions communications vol 
apr 
jim morrisett grossman hicks cheney wang cyclone safe dialect proceedings usenix annual technical conference june :10.1.1.127.7825
curtis mcgregor review bandwidth estimation techniques new zealand computer science research students conference vol :10.1.1.29.779
apr 
atkin birman evaluation adaptive transport protocol proceedings ieee infocom conference april :10.1.1.105.9822
hu steenkiste estimating available bandwidth packet pair probing school computer science carnegie mellon university tech :10.1.1.15.2217
rep cmu cs sept 
jain dovrolis available bandwidth measurement methodology dynamics relation tcp throughput proceedings acm sigcomm conference aug :10.1.1.168.4807
white lepreau stoller ricci hibler bard integrated experimental environment distributed systems networks proceedings usenix symposium operating systems design implementation dec :10.1.1.11.3768
rizzo dummynet simple approach evaluation network protocols acm computer communication review vol :10.1.1.57.2969
jan 
karr rodrigues loyall schantz krishnamurthy pyarali schmidt application quo quality service framework distributed video application proceedings international symposium distributed objects applications sept 
mccanne jacobson vetterli receiver driven layered multicast proceedings acm sigcomm conference aug :10.1.1.127.7825
savage collins hoffman snell anderson endto effects internet path selection proceedings acm sigcomm conference september :10.1.1.38.9273
turletti bolot issues multicast video distribution heterogeneous packet networks proceedings packet video workshop sept pp 

pasquale polyzos anderson filter propagation dissemination trees trading bandwidth processing continuous media networks lecture notes computer science vol 

tennenhouse wetherall active network architecture acm computer communication review vol :10.1.1.17.2974
apr 
li nahrstedt dynamic reconfiguration complex multimedia applications proceedings ieee international conference multimedia computing systems june pp 

middleware qos profiling services configuring adaptive applications proceedings ifip international conference distributed systems platforms open distributed processing middleware 
hutchison garcia qos filters addressing heterogeneity gap lecture notes computer science vol 

amir mccanne katz active service framework application real time multimedia transcoding proceedings acm sigcomm conference sept 
inouye cen pu walpole system support mobile multimedia applications proceedings workshop network operating system support digital audio video may 
noble satyanarayanan experience adaptive mobile applications odyssey mobile networks applications vol 

rejaie handley estrin quality adaptation congestion controlled video playback internet proceedings acm sigcomm conference 
andersen balakrishnan kaashoek morris resilient overlay networks proceedings acm symposium operating systems principles october :10.1.1.161.2760
byers considine mitzenmacher rost informed content delivery adaptive overlay networks proceedings acm sigcomm conference :10.1.1.124.9552
braden clark shenker integrated services internet architecture overview internet rfc :10.1.1.57.2969:10.1.1.27.14
blake black carlson davies wang weiss architecture differentiated services internet rfc :10.1.1.38.9273
braden zhang berson herzog jamin resource reservation protocol rsvp ietf tech :10.1.1.165.7150
rep rfc september 
nahrstedt smith design implementation experiences omega point architecture department computer information science university pennsylvania tech 
rep ms cis 
qos broker ieee multimedia vol 

reiher popek conductor framework distributed adaptation proceedings ieee workshop hot topics operating systems hotos mar 
gribble welsh van behren brewer culler czerwinski gummadi hill joseph katz mao ross zhao ninja architecture robust internet scale systems services computer networks vol :10.1.1.39.7289:10.1.1.105.9822
mar 
bj larsen scalable processing communication performance multi media related context proceedings ieee euromicro conference sept 
