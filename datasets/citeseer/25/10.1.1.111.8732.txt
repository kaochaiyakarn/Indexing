appeared proceedings computer measurement group cmg conference december pp 

generating representative synthetic workloads unsolved problem gregory ganger laboratory computer science www pdos lcs mit edu ganger ganger lcs mit edu synthetic disk request traces convenient popular workloads performance evaluation storage subsystem designs implementations 
develops approach validating synthetic disk request generators 
approach commonly simplifying assumptions workload characteristics uniformly distributed starting addresses poisson arrivals shown inappropriate leading inaccurate performance predictions 
workload characteristics require additional study identi ed 
largest di culty facing storage architects performance analysts identifying obtaining workloads toevaluate compare designs 
groups organizations small set traces benchmarks large set fewer share important tools 
di culty obtaining representative workloads pervasive researchers forced available commonly ad hoc synthetic workloads simplifying assumptions 
consequence open literature studies solid basis reality better workloads shown incorrect 
approach preferred storage subsystem researchers employs record real systems storage activity form disk request traces 
disk request trace represents accurate account really happened particular storage subsystem period time 
disk request traces limitations non technical reasons extremely di cult convince system administrators allow tracing 
traces tend large traces require gb compressed line storage stored line experiments 
trace represents single measure behavior making di cult establish statistical con dence results 
di cult distinguish real performance characteristics system test partially funded cmg graduate fellowship 
done jointly yale patt richard golding john wilkes hewlett packard laboratories 
credit go collaborative errors mine 
anomalous behavior trace 
di cult isolate modify speci workload characteristics arrival rate total accessed storage capacity trace 
traces support studies expected workloads trace exist 
alternative approach workload 
fundamentally disk workload synthesis simple task 
values set statistics generates series disk requests 
values derived expected behavior measured sequence trace disk requests hopefully pass characterization observation tracing 
di cult part task identify set statistics accurately uniquely characterizes workload 
generally speaking disk request de ned device operation read write start location size arrival time 
rst values identify access fth identi es disk subsystem 
refer sequence accesses access pattern sequence arrival times arrival pattern 
disk workload synthesis potential eliminate limitations disk request traces 
example capturing workload characteristics traces palatable system administrators probably interested characteristics capacity planning system tuning purposes 
synthetic traces manufactured stored 
applying di erent seeds random number generator generate request streams characteristics achieve statistical con dence 
changes workload readily real system extract stats os trace file loads representing expected environments generated 
main disadvantage trace synthesis danger generating trace poor match tothe original important way compromising validity results 
borrowing disk model calibration ruemmler develop approach synthetic disk request trace generators 
approach show commonly applied assumptions uniform starting addresses poisson arrivals inappropriate produce dramatically incorrect results 
identify speci areas additional understanding workload characteristics needed 
remainder organized follows 
section describes methodology evaluating synthetic workload generators 
isolate speci issues trace synthesis evaluate access pattern generation section arrival pattern generation section separately 
section concludes discussion problems standalone storage subsystem models possible source representative synthetic workloads 
evaluation methodology calibration synthetic workloads calibrate synthetic workload generator compare performance measurements system interest operating synthetically generated workload real workload attempts recreate 
performance comparison appropriate approaches ferrari limits applicability calibration results systems test 
result workload characteristics important overlooked 
example examines disk workloads individual disk disk basis ignoring correlations os system test performance stats system trace os performance synthesis test calibration disk request trace synthesis 
workloads observed di erent disks 
correlations important management approaches load balancing striping subsystems 
speci methodology illustrated gure 
statistics collected single pass timed sequence disk requests generated system software device driver 
statistics fed trace synthesis tool produces sequence requests characteristics including length time 
assuming synthesis tool errors successful statistics capture important information 
request sequences traced synthetic turn exercise sut disk simulator described 
performance measurements resulting sut activity evaluate closeness synthetic trace 
metrics try encapsulate number single value 
ruemmler plot response time distributions request sequences traced synthetic root mean squared rms horizontal distance curves metric call total error 
lower values indicate better matches 
synthetic traces generated single set statistic values simply changing seed value random number generator 
measure randomness error average rms distance response time distributions mean synthetic traces 
mean computed combining multiple distributions summing bin values 
main metric synthesis error trace generation approach amount total error exceeds randomness error max total randomness 
view reasonable total error randomness error claim statistically indistinguishable 
disk request traces trace length average percent percent name hours disks requests size reads seq 
reads cello kb snake kb air rsv kb sci ts kb order kb report kb experiments traces disk activity collected systems various industrial research installations 
describe traces brie described detail ramakrishnan ruemmler 
traced workloads span range user environments isat full hours length 
basic characteristics traces table 
vary widely read write ratios access sizes arrival rates locality burstiness 
traces come hewlett packard systems running hp ux tm aversion unix tm operating system ruemmler 
cello comes server hp labs program development simulation mail news 
snake le server university california berkeley primarily compilation editing 
traces months length report data single week long snapshot 
traces commercial vax tm systems running vms tm operating system ramakrishnan 
air rsv transaction processing environment inwhich approximately travel agents airline hotel reservations 
sci ts scienti time sharing environment inwhich analytic modeling software graphical statistical packages 
order report machine parts distribution 
order collected daytime hours representing order entry processing workload 
report collected night capturing batch reports day activities generated 
system test detailed validated disk simulator 
simulator accurately models recording spare regions defect slipping reallocation disk bu ers caches various prefetch algorithms fast write bus delays control communication overheads 
simulator con gured model hp series disk drives hp parameters table basic characteristics disk request traces 
hp disk drive formatted capacity gb rotation speed rpm data surfaces cylinders byte sectors zones sectors track interface scsi kb cache segments track reallocation table default characteristics hp 
described appendix worthington 
default speci cations hp drive platter member line listed table 
simulator validated exercising actual hp capturing traces scsi activity 
traced request stream run simulator observed request inter arrival delays 
process repeated synthetic workloads varying read write ratios arrival rates request sizes degrees sequentiality locality 
response times actual disk simulator match cases 
unpredictable disk view host delays partially account di erence 
greater insight comparing response time distributions ruemmler 
shows distributions measured simulated response times sample validation workload requests 
validation results barely see curves 
root mean square horizontal distance distribution curves validation run shown gure ms average response time 
largest value observed validation runs corresponding average response time 
members hp series drives simulator correctly models necessary information fraction requests measured simulated response time ms measured simulated response time distributions hp disk drive 
validation workload parameters reads sequential local normal sector variance kb mean request size exponential interarrival time uniform ms 
disks traced systems 
disk substitution raises di culty base disk hp di erent storage capacity disks traced systems 
better match size simulated disks traced systems modify number sci ts order report snake rsv create disks large contain active data excessive unused media 
feel reasonable approach production line disks di ers 
access patterns isolate ects access pattern arrival pattern replace inter arrival times constant value seconds 
eliminates queueing re ordering ects 
impact approach observed response times error values smaller queueing occurs 
impact small error values realistic arrival patterns magni ed 
single disk access de ned values operation type read write device number single disk subsystems starting location size 
various statistics characterize independently inter dependencies 
section evaluates options chosen highlight speci issues fraction requests trace simple nonuniform aggressive interleave response time ms access pattern synthesis snake 
access average total rand 
synth 
generation resp 
time error error error simple nonuniform aggressive interleave table access pattern synthesis snake 
average response time trace ms 
workload characterization synthesis 
figures tables compare synthetic generation schemes indicating recreate observed access patterns 
response times milliseconds values variances 
schemes shown 
trace observed sequence accesses 

simple uses measured read write percentage constant measured average access size 
starting locations independent uniformly distributed device storage capacity 

nonuniform simple starting locations generated measured distribution distances block accessed previous request start 

aggressive nonuniform uses state markov model decide read write measured values transitions 
uses fraction requests fraction requests trace simple nonuniform aggressive interleave response time ms access pattern synthesis order 
access average total rand 
synth 
generation resp 
time error error error simple nonuniform aggressive interleave table access pattern synthesis order 
average response time trace ms 
size previous request measured distribution 

interleave aggressive uses measured distributions inter access distances streams capture interleaved streams localized accesses 
depth interleave distributions sectors kb direction prev block 
measured distribution requests caught interleaves 
traces simple model results large synthesis error values 
seen comparing simple nonuniform error caused common assumption request starting locations independent uniformly distributed disk 
aggressive statistics operation type request size represented aggressive improve accuracy slightly 
addition interleave locality statistics improves accuracy workloads including snake indicating access streams locality interleaved workloads 
order interleave locality statistics reduces accuracy 
unable achieve close matches workloads order sci ts 
number approaches involving dependencies statistics separate locality statistics reads writes separate locality statistics reads reads reads writes 
complexity synthesis errors remain large 
remains understood area disk access patterns 
arrival patterns isolate ects arrival pattern access pattern request access time ms 
eliminates locality caching ects 
impact access times bursts estimated cases reduced due disk scheduling 
result queue times tend larger case real access patterns 
request arrival patterns ected anumber system speci details 
important characteristics arrival patterns feedback burstiness 
individual request response times subsequent request arrivals signi cant impact performance ganger 
possible extract feedback information disk request traces available pursue 
arrival pattern bursty exhibits interspersed periods high activity small inter arrival times low activity large inter arrival time 
bursty workloads exhibit longer intense periods high activity relative low activity periods 
quanti able de nitions metrics burstiness remain important area workload characterization research 
figures tables compare synthetic generation schemes indicating recreate observed arrival patterns 
response times milliseconds values parentheses variances 
schemes shown 
trace observed arrival times logical zero 

uses independent exponentially distributed inter arrival times mean set measured average 

uses independent inter arrival times taken measured distribution 

uses inter arrival times taken measured distributions depending immediately prior inter arrival time 
rst previous inter arrival time ms greater ms arrived values examining interarrival distribution selecting knee point 
fraction requests trace response time ms arrival pattern synthesis cello 
arrival average total rand 
synth 
generation resp 
time error error error table arrival pattern synthesis cello 
average response time trace ms 

uses inter arrival times taken measured distributions depending immediately prior inter arrival time 
inter arrival time ms ms ms greater ms arrival pattern synthesis schemes explored recreate observed behavior 
particular fail replicate long response times characterize intense bursts activity 
results highest error exponential distribution poor match observed inter arrival times 
largest problem appears assumption independence arrival times 
reduce synthesis error come close observed behavior 
needed understanding disk request arrival patterns achieved 
possible solution self similarity applied successfully characterization network tra leland 
fraction requests trace response time ms arrival pattern synthesis order 
arrival average total rand 
synth 
generation resp 
time error error error table arrival pattern synthesis order 
average response time trace ms 
rst step understanding disk workload demonstrate validity 
large synthesis error values indicate remains 
unable accurately recreate access arrival patterns traces 
results argue accurate synthesis impossible 
show commonly simplifying assumptions workload characteristics inappropriate lead erroneous 
particular request starting locations general independent uniformly distributed 
request arrival patterns match generated process 
fact independent exponentially distributed 
accurate synthetic trace generator may appropriate solution standalone subsystem models narrow scope ganger 
tend treat requests equally ignoring di erences individual requests ect system behavior 
result ignore simplify feedback ects tween individual request response times subsequent request arrivals 
predict performance changes subsystem performance metrics general correlate changes system performance 
ganger demonstrates problems proposes solution system level modeling 
system level approach may appropriate workload synthesis 
attempting recreate disk activity resulting particular system activity system activity drive models instances system 
promising approaches synthetic system benchmarks spec det benchmark gaede gaede ebling synthetic le generator 
richard golding yale patt john wilkes bruce worthington direct involvement inthe development 
partially funded cmg graduate fellowship 
storage subsystem research activity michigan bene ted greatly nancial technical support industrial partners including gis dec hewlett packard mti ses 
ebling ebling satyanarayanan extensible file generator acm rics conference may pp 

ferrari ferrari foundation arti cial workload design acm sigmetrics conference may pp 

gaede gaede tools research computer workload characterization experimental computer performance evaluation ed 
ferrari 
gaede gaede scaling technique comparing interactive system capacities th international conference management performance evaluation computer systems pp 

ganger ganger system evaluation subsystem performance ph dissertation university michigan ann arbor 
hp hewlett packard hp inch scsi disk drive technical manual part number edition september 
leland leland taqqu willinger wilson self similar nature ethernet tra acm sigcomm conference pp 

ramakrishnan ramakrishnan biswas analysis file traces commercial computing environments acm sigmetrics conference pp 

ruemmler ruemmler wilkes unix disk access patterns winter usenix conference january pp 

ruemmler ruemmler wilkes disk drive modeling ieee computer vol 
march pp 

worthington worthington ganger patt scheduling algorithms modern disk drives acm sigmetrics conference may pp 

full version scheduling modern disk drives non random workloads report cse tr university michigan ann arbor march 
