quickhull algorithm convex hulls bradford barber university minnesota david dobkin princeton university hannu configured energy systems convex hull set points smallest convex set contains points 
article presents practical convex hull algorithm combines dimensional quickhull algorithm general dimension beneath algorithm 
similar randomized incremental algorithms convex hull delaunay triangulation 
provide empirical evidence algorithm runs faster input contains points uses memory 
computational geometry algorithms traditionally assumed input sets behaved 
algorithm implemented floating point arithmetic assumption lead serious errors 
briefly describe solution problem computing convex hull dimensions 
output set thick facets contain possible exact convex hulls input 
variation effective dimensions 
categories subject descriptors computer graphics computational geometry object modeling geometric algorithms languages systems general terms algorithms reliability additional key words phrases convex hull delaunay triangulation halfspace intersection voronoi diagram 
convex hull set points smallest convex set contains points 
convex hull fundamental construction mathematics research supported part national science foundation nsf ccr nsf dms ccr ccr 
authors addresses barber geometry center university minnesota south second street minneapolis mn email shore net dobkin department computer science princeton university princeton nj email dpd cs princeton edu configured energy systems harbor lane north suite plymouth mn email hth ces com 
permission digital hard copy part personal classroom granted fee provided copies distributed profit commercial advantage copyright notice title publication date appear notice copying permission acm copy republish post servers redistribute lists requires prior specific permission fee 
acm acm transactions mathematical software vol 
december pages 
bradford barber computational geometry 
example boardman uses convex hull analysis spectrometry data weeks uses convex hull determine canonical triangulation hyperbolic manifolds 
problems reduced convex hull example halfspace intersection delaunay triangulation voronoi diagrams power diagrams 
review article aurenhammer describes applications structures mesh generation file searching cluster analysis collision detection crystallography urban planning cartography image processing numerical integration statistics sphere packing point location 
represent convex hull set facets set adjacency lists giving neighbors vertices facet 
boundary elements facet called ridges 
ridge signifies adjacency facets 
general position facets triangles ridges edges 
delaunay triangulation computed convex hull determine delaunay triangulation set points lift points paraboloid compute convex hull 
set ridges lower convex hull delaunay triangulation original points brown 
intersection halfspaces origin equivalent convex hull points dual space preparata shamos 
determine intersection halfspaces locate interior point linear programming personal communication teller translate interior point origin transform halfspaces points dividing offsets coefficients compute convex hull 
duality transform facet convex hull defines point intersection halfspaces 
convex hulls delaunay triangulations focused variations randomized incremental algorithm optimal expected performance chazelle ek clarkson edelsbrunner shah guibas joe mulmuley 
points processed time random order 
article propose analyze strategy processing points efficient order 
result faster algorithm distributions interior points 
incremental algorithm convex hull repeatedly adds point convex hull previously processed points 
particular interest beneath algorithm gr preparata shamos 
new point processed steps 
locate visible facets point 
boundary visible facets set horizon ridges point 
facet visible point facet 
second construct cone new facets point horizon ridges 
third delete visible facets forming convex hull new point previously processed points 
original randomized incremental algorithm build proposed clarkson shor 
dual space halfspace intersections 
algorithm adds halfspace intersecting polytope previous intersections 
randomly select halfspace add polytope 
unprocessed halfspace acm transactions mathematical software vol 
december 
quickhull algorithm convex hulls maintain list polytope edges intersect halfspace 
conflict graph set lists 
halfspace processed conflict graph identifies modified edges 
reduce memory requirements propose storing single modified edge unprocessed halfspace 
simple search adjacent edges identifies remaining modified edges 
quickhull algorithm variation clarkson shor algorithm 
variations space points convex hulls dual space halfspaces polytopes 
turns conflict graph outside set facet 
point facet outside set facet 
clarkson shor algorithm unprocessed point exactly outside set 
variation process furthest point outside set random point 
known quickhull algorithm eddy green silverman preparata shamos 
variations clarkson shor algorithm maintain conflict graphs outside sets 
retain old facets convex hull links new facets replaced 
hierarchy begins initial simplex formed input points 
algorithms find visible facet point searching chain visible facets hierarchy 
chain ends facet current hull facets current hull point point discarded 
algorithms implemented running times competitive algorithms fortune 
compare quickhull randomized incremental algorithms changing selection step quickhull 
quickhull selects random point furthest point randomized incremental algorithm 
empirical tests quickhull runs faster randomized algorithms processes fewer interior points 
quickhull reuses memory occupied old facets 
analysis strictly empirical 
define balance conditions guarantee behavior identical randomized algorithms points extreme 
balance conditions hold algorithm runs input size processed points time log nf ris maximum number facets vertices 
conjecture case input precision restricted log bits 
empirically number points processed quickhull proportional number vertices output 
output sensitivity important convex hull algorithms output size smaller worst case size 
kirkpatrick seidel optimal output sensitive algorithm convex hull runs log time output size 
clarkson shor give convex hull algorithm optimal output sensitive expected time derandomized chazelle ek 
higher dimensions best output sensitive algorithm seidel shelling algorithm log seidel gift wrapping nh acm transactions mathematical software vol 
december 
bradford barber kapur 
double description method dual beneath algorithm motzkin 
earliest incremental method computing convex hull 
excellent choice high dimensions number facets smaller maximum number facets vertices avis bremner fukuda :10.1.1.25.8914

quickhull algorithm assume input points general position set points defines flat convex hull simplicial complex preparata shamos 
represent dimensional convex hull vertices dimensional faces facets 
point extreme vertex convex hull 
facet includes set vertices set neighboring facets hyperplane equation 
dimensional faces ridges convex hull 
ridge intersection vertices neighboring facets 
quickhull uses geometric operations oriented hyperplane points signed distance hyperplane 
represents hyperplane outward pointing unit normal offset origin 
signed distance point hyperplane inner product point normal plus offset 
hyperplane defines halfspace points negative distances hyperplane 
distance positive point hyperplane 
processing point simplification gr beneath theorem gr theor 

randomized incremental algorithms theorem 
theorem simplified beneath 
convex hull point facet conv facet facet vertices vertices ridge incident facet incident facet central problem beneath determining visible facets efficiently 
facet linked neighbors locating visible facet allows rest located quickly 
randomized algorithms previously constructed facets locate visible facet point 
solution simpler 
initialization quickhull assigns unprocessed point outside set 
definition corresponding facet visible point 
quickhull creates cone new facets builds new outside sets outside sets visible facets 
process called partitioning locates visible new facet point 
point multiple new facets new facets selected 
new facets point inside convex hull discarded 
partitioning records furthest point outside set 
acm transactions mathematical software vol 
december 
quickhull algorithm convex hulls fig 

quickhull algorithm convex hull quickhull selects nondegenerate set points initial simplex 
possible selects points maximum minimum coordinate 
outline algorithm 
prove correctness quickhull prove point partitioned legal outside set 
extreme points input vertices output 
lemma 
extreme point input facets partition step quickhull added hull irrespective outside set assigned 
proof 
assume contrary consider extreme point assigned outside set added convex hull 
extreme point outside facet initial simplex 
assumption point visible outside sets new outside sets 
visible facet new facets implies inside convex hull extreme point 
theorem 
quickhull algorithm produces convex hull set points proof 
quickhull starts convex hull points 
quickhull partitions points outside sets picks furthest points processing 
lemma partitioning prevent extreme point processed 
quickhull processes point theorem 
retains facets part theorem constructs new facets specified acm transactions mathematical software vol 
december 
bradford barber part 
produces convex hull processed points 
processing point produces convex hull input set 
randomized incremental algorithms perform steps quickhull different order 
beneath random permutation points 
locate visible facet depthfirst search previous convex hulls 
consider sequence facets tested point 
quickhull may test sequence successive partitions point outside sets 
edelsbrunner shah joe boissonnat devillers similar method delaunay triangulations 
express algorithm terms triangulations sphere test 
correspondence delaunay triangulation convex hull triangle facet convex hull sphere test determines visible facets lifted point brown 

comparison quickhull randomized algorithms quickhull randomized algorithms perform essentially steps prefer quickhull 
quickhull uses space randomized incremental algorithms runs faster distributions points 
main costs algorithms creating facets computing distances 
isolate effect randomization time efficiency change processing order quickhull 
selecting furthest point outside set select random point outside sets 
section reports results experiments comparing versions quickhull randomization 
test average range trials 
quickhull partitions points visible facet 
randomized version starts random initial simplex 
previous report compared actual time space quickhull randomized incremental program barber :10.1.1.117.405
figures support results 
consider uniform random distributions projected sphere 
coordinate selected randomly interval 
sphere radius centered origin 
points extreme 
little difference operation counts randomization 
example consider convex hull uniform random points projected sphere 
quickhull created facets computed distance tests 
distributions randomized quickhull created facets computed distance tests 
delaunay triangulations show similar results points extreme 
quickhull uses memory randomized algorithms 
example quickhull uses memory proportional output facets algorithm retains old facets uses memory proportional created facets 
acm transactions mathematical software vol 
december 
quickhull algorithm convex hulls fig 

convex hull uniformly distributed points 
average range hyperplanes created trials 
figures show results uniform random distributions points unit cube 
trials convex hull random points facets vertices 
quickhull created facets randomized version created 
randomized version performed twice distance tests 
differences due number processed points 
quickhull processed points randomized version processed points 
consider case finding convex hull set uniform random points projected sphere radius centered origin 
points add vertices cube centered origin 
edge length cube increases number extreme points decreases 
consider situation cube edge length 
case sphere extends slightly facet cube 
convex hull points cube contains facets vertices 
quickhull created facets randomized version created facets 
difference due number processed points 
quickhull processed points randomized version processed points 
quickhull processes furthest point outside set processes cube vertices processing points 
randomized incremental algorithms perform significantly worse expected 
bad cases 
point create new facets search visible facet visit old facets 
acm transactions mathematical software vol 
december 
bradford barber fig 

convex hull uniformly distributed points 
average range distance tests trials 
fig 

convex hull uniformly distributed points 
average range processed points output vertices trials 
case occurs points spiral happen added order 
occur quickhull spiral added intermediate points 
acm transactions mathematical software vol 
december 
quickhull algorithm convex hulls quickhull second case corresponds assigning points outside set partitions 
conjecture occur restrict input precision log bits personal communication milenkovic 
point creates new facets 
quickhull processes furthest point outside set sequence partitions single facet produce facet small input precision 
similar restriction holds quicksort mean pivot 
quicksort unbalanced points consistently fall partitions 
mean pivot require bits precision 
conjecture quickhull iterations average iteration creates average number new facets outside sets average size 
defines balance conditions 
dimension number input points number processed points maximum number facets vertices 
klee 
definition 
execution quickhull balanced average number new facets jth processed point df average number partitioned points jth processed point test balance conditions statistically compute expected number new facets actual number facets 
similarly compute expected number partitioned points 
example iteration quickhull trials random points created fewer new facets expected standard deviation partitioned fewer points expected 
distributions randomized quickhull created fewer facets expected partitioned fewer points expected 
theorem 
number input points number processed points 
balance conditions hold worst case complexity quickhull log nf 
proof 
costs quickhull adding point hull partitioning 
dominant cost adding point create hyperplanes 
dominant cost partitioning compute distances 
total cost adding points proportional total number new facets created 
simplifies fr term dfr 
denominator fr subsumes 
cost partitioning point iteration proportional number new facets 
total cost fj 
expanding fj yields 
sum log 
term fr sum fr 
balance conditions hold cost quickhull log fn 
expected cost randomized incremental algorithms clarkson 
acm transactions mathematical software vol 
december 
bradford barber fig 

erroneous facets visible 
erroneous facets built ridges quickhull furthest point outside set furthest point facet cases furthest extreme point 
extreme point point delete 
extreme point deletes multiple vertices appears occur infrequently 
reasons conjecture 
conjecture 
number input points number output vertices 
precision input points log worst case complexity quickhull log 
coping imprecision far followed real ram model assumed input set nondegenerate 
implement quickhull floating point arithmetic roundoff error representation error may introduce degeneracies 
briefly describe heuristic extensions quickhull practice 
quickhull partitions point determines horizon facets computing point hyperplane 
assumed computations return consistent results 
existence roundoff errors calls assumption question 
example point may computed facets 
beneath step replaces new facets 
replace new facets contain serious geometric topological errors 
facets flipped upside facets meet ridge 
acm transactions mathematical software vol 
december 
quickhull algorithm convex hulls floating point arithmetic prevent errors occurring repair damage processing point 
brute force adjacent facets nonconvex facets merged neighbor 
quickhull merges facet minimizes maximum distance vertex neighbor 
example label new facets ridges quickhull handles ridges facets 
case facets meet ridge 
quickhull repairs fault merging closest facets say vertices facet facet contained merged facet bd quickhull merges 
merged facet bcd neighbors 
merged closer facets say occurs 
facet bcde facet clearly convex quickhull finished pair facets 
counterclockwise test test convexity facets test depends vertices coinciding intersection hyperplanes 
facets point centrum clearly hyperplanes neighboring facets 
large facets centrum average vertices projected hyperplane 
fixed large facets 
result merging thick facet defined positive negative offset facet hyperplane 
polytope defined negative offsets clearly excludes vertices polytope defined positive offsets clearly includes input points 
space polytopes contains boundaries possible exact convex hulls points 
determine offsets constructing hull testing points near boundary convex hull 
done quickhull reports maximum facet width guarantees neighboring facets clearly convex 
practice quickhull produces convex hull facet times thicker merging nonconvex simplicial facets 
ratio greater probably indicates error 
quickhull repairs faults order facets meeting ridge facet contained facet facet fewer neighbors facet flipped orientation newly processed point coplanar horizon facet concave facets coplanar facets redundant vertices 
removes coplanar facets independent sets merges sorted angle 
higher removes coplanar facets constructing hull 
may cause poor approximation hull may wider reported 
events appear 
quickhull handle faults degenerate distributions 
example faults occur furthest site delaunay triangulation points unit circle 
construction corresponding convex hull neighboring facets may span point set opposite orientations 
point may just facets remain acm transactions mathematical software vol 
december 
bradford barber distant precise convex hull 
coplanar point may far new facet 
occurs quickhull generates warning reports wide facet 
robust convex hull delaunay triangulation algorithms fortune guibas li milenkovic 
sugihara dey produce topologically robust convex hull delaunay triangulation 
algorithms variation beneath steps prevent topological anomalies 
output may contain unbounded geometric faults 
implementations computing convex hull precise arithmetic 
output triangulation 
input degenerate output may contain simplices zero volume 
clarkson hull implementation randomized incremental algorithm restricts input precision decimal digits 
implementation computes exact sign determinants clarkson 
practical solution precise convex hulls delaunay triangulations clarkson 
timed hull precursor hull exact arithmetic personal communication dorward triangle shewchuk dimensional delaunay triangulation program exact arithmetic implementation quickhull qhull silicon graphics mhz 
fastest implementations known authors 
sun sparcstation performance tuning qhull 
times average range user cpu seconds different trials 
hull computed delaunay triangulations uniform random points square seconds qhull merging computed seconds 
compare qhull merging corresponding figures respectively 
difference hull qhull merging largely due exact arithmetic 
specialized code dimensions faster 
triangle program computes delaunay triangulations seconds 
hull computed convex hulls uniform random points cube seconds 
computed seconds 
qhull merging computed seconds qhull merging computed seconds 
figures support previous comparison uniform random points 
hull computed convex hulls random points surface hypercube seconds 
facets average 
inputs qhull merging produced facets average seconds 
merged facets 
facet convex hull facet hypercube 
facets contained coplanar points average 
qhull merging produced facets average seconds 
larger ratios hull qhull merging qhull merging reflect increased exact arithmetic facet merging 
acm transactions mathematical software vol 
december 

summary goal practical algorithm general dimension convex hulls 
shown empirical evidence algorithm satisfies balance conditions performs randomized incremental algorithm output sensitive number vertices 
quickhull algorithm uses space randomized incremental algorithms executes faster inputs points 
addition quickhull uses merged facets guarantee output clearly convex 
algorithm implemented floating point arithmetic 
reports maximum width merged facet 
higher maximum width may wider reported 
implemented quickhull general dimension 
program qhull computes convex hulls delaunay triangulations voronoi vertices furthest site voronoi vertices halfspace intersections 
available www geom umn edu locate qhull ftp geom umn edu pub software qhull tar program includes options imprecise data arithmetic facet area hull volume partial hulls input transformations randomization tracing multiple output formats graphical output execution statistics 
program called application 
years copies qhull retrieved ftp 
support structures layered manufacturing allen dutta classification molecules biological activity vibration control geographic information systems neighbors origin lattice stress analysis stability robot grasps personal communications spectrometry boardman constrained control allocation durham robot navigation modeling porter invariant sets delta sigma modulators zhang 
acknowledgments albert victor milenkovic provided excellent environments completing 
referees comments greatly improved presentation content article 
quickhull algorithm convex hulls allen dutta 
determination evaluation support structures layered manufacturing 
des 


aurenhammer 
voronoi diagrams survey fundamental geometric data structure 
acm comput 
surv 

avis bremner 
convex hull algorithms 
proceedings th annual acm symposium computational geometry 
acm new york 
barber dobkin 
quickhull algorithm convex hull 
tech 
rep geometry center univ minnesota minneapolis boardman 
automating spectral unmixing data convex geometry concepts 
th jpl airborne geoscience workshop washington 
jpl pasadena calif acm transactions mathematical software vol 
december 
bradford barber boissonnat 

randomized construction delaunay tree 
theoret 
comput 
sci 

durham 
closed form solutions constrained control allocation problem 
guidance contr 
dynam 

brown 
voronoi diagrams convex hulls 
inf 
process 
lett 


convex hull finite set points dimensions 
inf 
process 
lett 

kapur 
algorithm convex polytopes 
acm 
chazelle matou sek 
randomizing output sensitive convex hull algorithm dimensions 
tech 
rep tr princeton univ princeton clarkson shor 
applications random sampling computational geometry ii 
discr 
comput 
geom 

clarkson 
safe effective determinant evaluation 
proceedings st ieee symposium foundations computer science 
ieee new york 
clarkson 
program convex hulls 
att murray hill available netlib att com netlib voronoi hull html 
clarkson mehlhorn seidel 
results randomized incremental constructions 
comput 
geom 
theory appl 

lecture notes computer science 
vol 
pp 

netanyahu rosenfeld 
learning navigation goal finding graphs 
tech 
rep car tr center automation research univ maryland college park md dey sugihara bajaj 
delaunay triangulations dimensions finite precision arithmetic 
comput 
aided geom 
des 

eddy 
new convex hull algorithm planar sets 
acm trans 
math 
softw 

edelsbrunner shah 
incremental topological flipping works regular triangulations 
proceedings symposium computational geometry 
acm new york 
fortune 
stable maintenance point set triangulation dimensions 
th annual symposium foundations computer science 
ieee new york 
fortune 
computational geometry 
directions geometric computing martin ed 
information fukuda 
double description method revisited 
lecture notes computer science vol 

springer verlag berlin 
available ftp ethz ch pub fukuda cdd 
green silverman 
constructing convex hull set points plane 
comput 

gr 
measure symmetry convex sets 
proceedings th symposium pure mathematics american mathematical society symposium convexity 
ams providence 
guibas knuth sharir 
randomized incremental construction delaunay voronoi diagrams 
algorithmica 
joe 
construction dimensional delaunay triangulations local transformations 
comput 
aided geom 
des 


convex hull algorithms higher dimensions 
unpublished manuscript dept mathematics univ oklahoma norman kirkpatrick seidel 
ultimate planar convex hull algorithm 
siam comput 

klee 
convex polytopes linear programming 
proceedings ibm scientific computing symposium combinatorial problems 
ibm 
li milenkovic 
constructing strongly convex hulls exact rounded arithmetic 
proceedings symposium computational geometry 
acm new york 
acm transactions mathematical software vol 
december 
quickhull algorithm convex hulls motzkin raiffa thompson 
double description method 
contributions theory games ii kuhn tucker eds 
annals mathematics vol 

princeton university press princeton 
mulmuley 
computational geometry randomized algorithms 
prentice hall englewood cliffs porter sullivan muller 
irregular grain structure simulation 
appl 
physics 
preparata shamos 
computational geometry 

springer verlag berlin 
seidel 
constructing higher dimensional convex hulls logarithmic cost face 
proceedings th acm symposium theory computing 
acm new york 
shewchuk 
triangle engineering quality mesh generator delaunay 
st workshop applied computational geometry 
acm new york 
available www cs cmu edu quake triangle html 
sugihara 
topologically consistent algorithms related convex polyhedra 
algorithms computation rd international symposium issac 
lecture notes computer science vol 

springer verlag berlin 
weeks 
convex hulls hyperbolic manifolds 
tech 
rep tr geometry center univ minnesota minneapolis aug zhang goodson schreier 
invariant sets general second order low pass delta sigma modulators dc inputs 
ieee international symposium circuits systems 
ieee new york 
received september revised june january accepted april acm transactions mathematical software vol 
december 
