exploiting semantic proximity peer peer content searching vrije universiteit amsterdam amsterdam netherlands cs vu nl lot dealt improving performance content searching peer peer file sharing systems 
attack problem modifying overlay topology describing peer relations system 
precisely create semantic overlay linking nodes semantically close mean interested similar documents 
semantic overlay provides primary search mechanism initial peer peer system provides fail search mechanism 
focus implicit approaches discovering semantic proximity 
evaluate compare candidate methods review open questions 

tremendous success file sharing peer peer systems napster gnutella kazaa motivates need optimise operation systems 
aspect received lot attention research community performance content search mechanisms :10.1.1.132.970:10.1.1.10.5444
specifically cohen shenker identify document replication strategies minimise number nodes queried document assuming requests submitted random target nodes 
lv compare different search strategies propagating queries system flooding expanding ring gradual flooding random walks :10.1.1.132.970
find random walks perform better minimising number queried nodes 
chawathe consider adapting overlay topology favour downloads nodes high capacity connection network :10.1.1.10.5444
anne marie kermarrec microsoft research cambridge uk microsoft com maarten van steen vrije universiteit amsterdam amsterdam netherlands steen cs vu nl laurent microsoft research cambridge uk microsoft com papers deal search performance improvements hold independently semantic structure document collections successive searches individual nodes 
contrast aim exploit semantic structure document sharing systems order improve search performance 
semantic structure ways 
approach pursued crespo garcia molina consists explicitly identifying distinct semantic groups documents building corresponding possibly overlapping overlay networks group 
document request handled overlay document presumably belongs 
unfortunately classifying content turns difficult problem practice requiring extensive manual intervention 
sripanidkulchai take alternative approach attempting cluster nodes sharing similar interests similar documents :10.1.1.12.7728
important difference clustering performed implicit manner requiring explicit identification distinct groups users :10.1.1.12.7728:10.1.1.12.7728
nodes try obtain documents semantic neighbours turning nodes 
experimental results suggest simple light weight techniques exploiting semantic structure implicit manner may yield significant gains search performance :10.1.1.12.7728:10.1.1.12.7728
aim push statement identify candidate methods 
consider architecture node maintains list semantic neighbours queries submitted turning default search mechanism semantic neighbour answer query :10.1.1.12.7728:10.1.1.12.7728
order investigate effectiveness different strategies maintaining semantic neighbours lists develop synthetic model semantic structure linking nodes documents system section 
section describes different strategies maintaining lists semantic neighbours 
section discusses performance evaluation results 
particular list contamination phenomenon identified shown called popularity strategy alleviates 
concluding section review section stimulating issues raised 

modelling semantic structure describe simple synthetic model request generation documents users model features semantic structure turn induces locality interest property observed real data traces :10.1.1.12.7728:10.1.1.12.7728
assume existence number semantic types labelled 
denoting number types 
assume documents system associated type 
dn denote number documents type assume users system associated semantic type 
number users associated type denoted un 
user periodically generates request 
target document satisfying request determined random distribution depends user type 
distribution specified components probability pn request generated type user targetted type document probability qm request document class target th document class 
zipf law natural candidate distribution qm see extensive list zipf law relevance number fields including document popularity take qm proportional take number documents class dn proportional rounding error imposing zipf distribution class document belongs 
critical component request model lies specification parameters pn 
choice select pn meet objectives ensure frequency queries documents collection class partition follows zipf distribution 
ii ensure document class proportion requests documents originates class user classes generate equal proportion requests 
intuitive description requirement ii users type place query docu sequel terms user node interchangeably 
query frequency document rank 
document query frequency class ment preferred class place general purpose query global collection 
parameter characterizes strong specific interest users documents corresponding class users classes behave extreme users class access documents class naturally interpreted measuring locality interest system 
specific choice meets requirements ii follows pn dn pn dm un dn dm parameter controls total number users zn normalising constant chosen pn equals 
shows request frequencies document documents sorted type 
distribution depend parameter 
aware limitations model particular fact captures pure specific interests users reality certainly expects users specific interests 
think constitutes adequate starting point capturing parsimonious manner number important features 

semantic overlay management 
system model user starts new document searches periodically requests generated model previous section 
stress user document types exposed system 
assume users document cache size managed lru policy assume availability peer peer system supporting semantic unaware searches 
experiments expanding ring search unstructured overlay built protocol 
addition user maintains list semantic neighbours 
basic search algorithm consists nodes sending document requests semantic neighbours list semantic neighbour able serve query semantic unaware search algorithm 

candidate strategies strategies described rely basic feedback 
node placed request provided set nodes possessing requested document initial phase involving semantic neighbours second semantic unaware phase 
lru natural strategy consists placing head semantic list node document obtained 
result semantic list contains nodes evicts semantic search fails 
essentially method :10.1.1.12.7728:10.1.1.12.7728
simulations document downloaded node provide positive answer 
real world scenario choice factors bandwidth traffic node load minimise download delays 
history shall see section semantic links created lru kinds links nodes class requesting node created querying document corresponding type links nodes provided requesting node popular document 
history approach aims maintaining semantic links kind useful 
requires node maintain counter node system 
node say increments counter maintained node say node requests document node provide 
semantic list consists nodes higher counter value 
method number drawbacks 
expensive terms storage number messages exchanged order update counter values 
addition environment user types may change time counters may take long time adapt new user preferences 
reasons may constitute practical solution 
result degree replication document roughly proportional popularity frequency requested see 
alternatively semantic neighbours contacted sequentially answer obtained 
provides benchmark ideal performance effective creating semantic lists populated nodes semantic type 
popularity describe approach tory aims create semantic lists populated nodes type retaining simplicity lru 
observation document popularity inferred results searches 
expanding ring searches failover mechanism number nodes answering positively query constitutes estimate replication ratio corresponding document turn reflects popularity document 
method works follows 
entries semantic list additional fields 
gives number positive replies obtained document request node entered semantic list 
gives time node offered provide requested document 
lease gap current time greater pre defined threshold lease associated node considered expired 
new request submitted semantic neighbours entries answer query set current time 
able serve query handled failover mechanism 
case denote corresponding number answers obtained 
node document obtained enter semantic list requesting node set current time respectively circumstances semantic list fully populated ii node leases expired 
case node smallest evicted list room new iii conditions met largest current list larger equal case node largest smallest evicted list room new 

performance evaluation experimental setup simulations discrete event simulator proceed follows 
overlay created 
run warm phase requests generated document caches semantic lists populated 
results report gathered subsequent phase searches 
explicitly stated results obtained system nodes documents semantic types parameter set 
semantic hit ratio semantic hit ratio document rank 
lru semantic hit ratio document rank 
history semantic hit ratio node cache size set documents semantic list size limited neighbours 
candidate strategies compared metrics semantic hit ratio hit ratio obtained semantic links quality semantic links proportion semantic links nodes belonging type 
semantic hit ratio distributions semantic hit ratios document lru history popularity depicted figures respectively 
sake comparison ran experiments semantic lists populated nodes chosen uniformly random population 
moving averages averaged documents hit ratios random lists lru history popularity reported 
semantic hit ratio averages lru history popular ity random respectively 
note unweighted averages taken document collection 
values indicative relative reduction numbers queries performed failover search mechanism 
number times document requested proportional popularity replication strategy number failover queries document located inversely proportional popularity biases cancel :10.1.1.132.970
semantic hit ratio history popularity history popularity semantic hit ratio document rank 
popularity semantic hit ratio psfrag replacements document rank 
summary history popularity lru random ran experiments set amounts making node types equivalent removes locality interest corresponding semantic structure 
corresponding hit ratios close resulting random neighbours expect 
strategies lru history popularity able exploit locality interest improve fail search mechanisms 
note strategies improvement random lists pronounced documents popular types 
explained fact fewer documents types likelihood finding document caches nodes semantic type increased 
popular ity strategy achieves trade simplicity lru performance history 
semantic link quality semantic link quality averages node type strategy plotted 
recall define quality semantic link nodes type zero 
previously mentioned note lru semantic links contaminated peers servicing popular documents 
history strategy captures accurately semantic similarities nodes clusters ex story arity story arity story arity percentage intra type links ements type random lru history popularity 
semantic links quality nodes belonging class 
popular ity strategy improves links quality lru extra cost 
data provides additional insight hit ratio results just described 
poor semantic ratio unpopular documents popular classes despite clustering nodes popular classes due factors 
replication documents remains low hardly queried 
second number semantic neighbours small compared size popular classes 
semantic search classes improved increasing radius semantic search semantic overlay query hop remote neighbours 
set radius constitutes interesting problem satisfactory answer 

open issues semantic list ordering context request model popularity algorithm managed lists semantic neighbours efficiently 
challenging issue consists finding algorithms managing lists perform arbitrary environments 
arbitrary environment described model essentially equivalent model proposed cohen 
node may place queries documents nodes labelled 

document search exists corresponding subset nodes may answer query 
assumed subsets corresponding successive searches random independent identically distributed drawn unknown distribution 
list ordering problem consists finding ordering 
nodes support efficient search 
assuming form semantic list size nodes list forward queries natural objective consists maximizing probability queries may served nodes 
alternatively may place queries tially nodes list answer obtained case natural objective consists minimising expected number queries generated 
cohen consider greedy strategy consists selecting probability answers query answered 
maximised 
show probability query answered nodes greedy optimal probability sequential search expected number queries performed greedy factor expected number queries optimal ordering 
important issue design list adaptation strategies achieve similar performance guarantees reactive expensive greedy strategy 
case sequential queries move front rule answering node placed head list achieves expected number queries optimal special case query single node treat see 
multiple nodes answer queries perform arbitrarily badly exhibit instances move front cost order queries optimal cost order 
natural candidate augment move front rule learning step request consisting placing extra query randomly selected node moving front list answers query 
loose coordination document caches far discussed maintenance list pointers nodes 
search performance may enhanced modifying document cache management 
previous experiments applying lru caches 
assume semantic peering relationships remain stable long period time may modify cache replacement policy take advantage fact 
specifically node uploads document semantic neighbours learns corresponding document replicated accessible time 
suggest information improve coordination document cache management distinct nodes 
instance uploading node move uploaded document back document cache effectively freeing cache space 
strategy may described joint move front move back may lead improvements hit ratios 
planning investigate quantitative manner 
guided search main goal exploit semantic properties requests completely implicit manner certainly true explicit treatment semantic information allow performance improvements guiding content search 
describe light weight approach doing see related method 
node obtains document node node adds front list semantic neighbours tags entry list semantic information describing tags guide search semantic similarities tags queries 
node places request document query forwarded neighbours chosen probability inversely proportional semantic distance query corresponding tag see description semantic distances common information retrieval community 
queries get forwarded manner served 
question evaluate performance random walk searches biased semantic hints 
important problem understand circumstances semantic hints going bring significant improvement compared implicit methods described previously 

observed peer peer file sharing traces exhibit locality interest :10.1.1.12.7728
investigate implicit techniques clustering nodes similar interests order improve content search file sharing systems 
node history query responses creates list semantic neighbours queries forwarded failover standard search algorithm 
consider candidate strategies managing semantic lists evaluate context synthetic request model captures locality interest 
find lists generated lru strategy contaminated nodes having served popular documents common interest requesting nodes 
investigate history popularity strategies fix issue 
evaluations suggest popularity strategy provides trade complexity efficiency approaches performance expensive history strategy retaining simplicity lru mechanism 
arrived context specific request model plan experiment real traces shortly order confirm refine observations 
particular try assess impact results dynamically changing user interests document collections user populations 
debate currently place research community relative merits structured versus unstructured overlays content searching worth noting semantic list approach described equally applicable contexts irrespective search random walks flooding techniques :10.1.1.10.5444
popularity requires estimate requested document popularity 
flooding techniques number answers query provides estimate random walks flooding number steps walked query served provides estimate reciprocal requested document popularity 
kapadia krishnan smith 
intelligent club management peer peer networks 
workshop economics peer peer systems 
chawathe ratnasamy lanham shenker :10.1.1.10.5444
making gnutella systems scalable 
sigcomm 
chung hajela seymour 
self organizing sequential search hilbert inequality 
th annual symposium theory computing 
cohen fiat kaplan 
associative search peer peer networks harnessing latent semantics 

cohen fiat kaplan 
efficient sequences trials 
th acm siam symposium discrete algorithms 
cohen shenker 
replication strategies unstructured peer peer networks 
sigcomm 
crespo garcia molina 
semantic overlay networks systems 
www db stanford edu crespo publications 
ganesh 
kermarrec 
peer peer membership management gossip protocols 
ieee transactions computers february 
kung wu 
content networks taxonomy new approaches 
oxford university press 
li 
zipf law 
linkage edu wli zipf 
lv cao cohen li shenker :10.1.1.132.970
search replication unstructured peer peer networks 
th acm international conference supercomputing new york usa 
sripanidkulchai maggs zhang :10.1.1.12.7728
efficient content location interest locality peer peer systems 
infocom conference 
tang xu dwarkadas 
peer peer information retrieval self organizing semantic overlay networks 
sigcomm 
