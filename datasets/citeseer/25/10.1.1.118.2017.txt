ieee transactions pattern analysis machine intelligence vol 
july linear object classes image synthesis single example image thomas vetter tomaso poggio need generate new views object single real image arises fields including graphics object recognition 
traditional approach relies models introduced simpler techniques applicable restricted conditions 
approach exploits image transformations specific relevant object class learnable example views prototypical objects class 
introduce technique extending notion linear class proposed poggio vetter 
linear object classes shown linear transformations learned exactly basis set prototypical views 
demonstrate approach artificial objects show preliminary evidence technique effectively rotate highresolution face images single view 
index terms object recognition rotation invariance deformable templates image synthesis 
iew approaches object recognition graphics may avoid explicit models exploiting memory views object ability interpolate generalize 
situations sufficient number views may available 
extreme case may real view 
consider instance problem recognizing specific human face different pose expression example picture 
visual system certainly able perform task performance levels lower expected introspection 
obvious explanation exploit prior information face images transform learned extensive experience faces 
idea see learn class specific image plane transformations examples objects class apply real image new object order synthesize virtual views additional examples view object recognition graphic system 
prior knowledge class objects may known terms invariance properties 
poggio vetter examined particular case bilateral symmetry certain objects faces 
prior information bilateral symmetry allows synthesis new virtual views single real simplifying task generalization recognition new object different poses 
bilateral symmetry face recognition systems vetter max planck institut kybernetik 
bingen germany 
mail vetter mpg de poggio center computational biological learning massachusetts institute technology cambridge mass mail poggio ai mit edu 
manuscript received may revised jan 
recommended acceptance daugman 
information obtaining reprints article please send mail computer org ieeecs log number 
ieee psychophysical evidence supports human visual system 
flexible way acquire information images objects certain class change pose illumination transformations learn possible pattern variabilities class specific deformations representative training set views generic prototypical objects class faces 
approach originates proposal poggio brunelli poggio vetter countering curse dimensionality applications supervised learning techniques similar approaches different motivations different fields 
computer graphics actor animation generate sequences views character warping available sequence similar character 
computer vision approach closest part active shape models cootes taylor cooper graham 
build flexible models known rigid objects linear combination labeled examples task image search recognition localization 
approaches underlying representation images new object terms linear combinations shape examples representative objects 
beymer shashua poggio beymer poggio developed demonstrated powerful version approach non linear learning networks generating new gray level images object objects known class 
beymer poggio demonstrated new textures object generated linear combinations textures different objects 
extend introduce technique linear classes generate new views object 
technique similar approach powerful relies correspondence prototypical examples new image 
ieee transactions pattern analysis machine intelligence vol 
july described idea linear object classes 
objects shape represented linear combination sufficiently small number prototypical objects 
linear object classes properties new orthographic views object class uniform affine transformations particular rigid transformations generated exactly corresponding transformed views known set prototypes 
training set consists frontal rotated views set prototype faces rotated view new face generated single frontal view provided linear class assumption holds 
show technique introduced shape objects extended graylevel color values call texture 
key approach representation object view terms shape vector texture vector see beymer jones poggio 
gives image plane coordinates feature points object surface second provides color gray level 
image plane shape vector reflects geometric transformation image due change view point texture vector captures photometric effects due viewpoint changes 
linear object classes new image object class analyzed terms shape texture vectors prototype objects pose 
requires correspondence established feature points prototype images frontal rotated done line stage need automatic 
requires correspondence new image prototypes pose need correspondence different poses required parallel deformation technique poggio brunelli beymer 
organized follows section formally introduces linear object classes objects defined shape vector 
section extend technique objects textures characterize surface reflectance models linear class approach valid 
section describes implementation technique synthetic objects linear class assumption satisfied construction 
section address key question assumption sufficiently approximation real objects 
consider images faces demonstrate promising results indirectly support conjecture faces linear class approximation 
discussion reviews main features technique extensions 
linear object classes dimensional objects differ shape texture 
derive object representation consisting separate texture vector shape vector components referring feature points usually pixels principle corresponding surface features 
assuming correspondence represent image follows code shape de formation field selected feature points corresponding limit pixel image serves origin coordinate system 
texture coded intensity map image feature points set correspondence image 
component shape texture vector refers feature point pixel 
setting shape texture treated separately 
derive necessary sufficient conditions set objects linear object class 
shape objects consider view dimensional object defined terms pointwise features 
view represented vector coordinates feature points factor translation 
assume linear combination views objects dimensionality linear combination vectors ndimensional space vector representing object pointwise features 
consider linear operator associated desired uniform transformation instance specific rotation 
define lx rotated view object linearity group uniform linear transformations follows ixi view object represented weighted sum views objects rotated view linear combination rotated views objects weights 
course arbitrary view projection view decomposition general imply decomposition rotated views necessary sufficient condition 
projections objects question want answer conditions projections objects satisfy answer clearly depend types objects projections allow 
define definition 
set views objects xi linear object class linear projection dim xi dim xi 
equivalent saying minimal number basis objects necessary represent object allowed change projection 
note linear projection restricted projections may drop occluded points 
assume px xi projections elements linear object class vetter poggio linear object classes image synthesis single example image px constructed knowing ai xi objects ixi relations suggest prototypical views projections basis linear object class known transformations synthesize operator transform view new view object linear combination prototypes 
words compute new view object explicitly knowing dimensional structure 
notice knowledge correspondence necessary rows linear equation system exchanged freely 
technique require computing correspondence views different viewpoints 
fact points may occluded 
fig 
shows simple example linear object class construction new view object 
corners cuboid features view defined element dimension class cuboids cuboid represented linear combination cuboids 
projection preserves dimensions apply 
projection fig 
projects corners orthographically image plane px preserving dimensionality 
notice orthographic projection exactly frontal view cuboid accidental view result rectangle image preserve dimensions guarantee correct result 
fig 
learning image transformation rotation dimensional cuboids orientation upper row new orientation lower row 
test cuboid upper row right represented linear combination dimensional coordinates example cuboids upper row 
linear combination example views lower row coefficients evaluated upper row results correct transformed view test cuboid output lower row right 
notice correspondence views different orientations needed different points object may occluded different orientations 
applying idea gray level images introduce helpful change coordinate systems 
absolute coordinate system represent views difference view object class terms spatial differences corresponding feature points images 
subtracting sides projection object gives xi change coordinate system evaluates new difference vector rotated view 
new view object constructed adding difference view 
texture objects section extend linear space model representation feature points full images objects 
assume objects isolated properly segmented background 
apply images difference vectors image object images objects computed 
difference vectors reflect spatial difference corresponding pixels images correspondence computed 
problem finding correspondence surface points images general difficult outside scope 
assume correspondence pixel image 
implementation see section approximated correspondence fields standard optical flow technique 
image pixels dx correspondence fields images im age dx computed correspondence images enables representation image separates shape texture information 
shape image coded vector representing deformation field relative image 
texture information coded terms vector holds pixel texture map results mapping image image deformation field 
representation images shape vector texture vector vectorized relative image 
texture image irradiance object general complex function albedo surface orientation direction illumination distinguish different situations 
consider easy case objects identical texture corresponding pixels image intensity color 
situation single texture map image sufficient 
assuming linear object class described earlier shape coefficients ai computed result correspondence field image second ieee transactions pattern analysis machine intelligence vol 
july fig 

gray level images artificial linear object class rendered 
correspondence images object dashed box examples computed separately orientation 
correspondence field test image image computed linearly decomposed fields upper row 
new correspondence field synthesized applying coefficients decomposition fields image examples lower row 
output generated forward warping image new correspondence field 
difference image new image image true model lower row right missing parts marked white parts existing image model black 
orientation new virtual image 
render virtual image image warped correspondence fields 
words image mapped image locations correspondence field 
fig 
method applied gray level images dimensional computer graphic models dog objects 
dogs shown orientations examples transformation orientation 
single test view different dog 
orientation correspondence chosen image dashed box images computed separately see section 
dogs created way dimensional objects form linear object class correspondence field test image decomposed exactly fields upper row 
applying coefficients decomposition correspondence fields second orientation results correspondence image new image showing test object second orientation 
new image output lower row created simply warping image correspondence field objects texture 
test dimensional model object available synthesized output compared model 
shown difference image small error attributed minor errors correspondence step 
example shows method combined standard image matching algorithms able transform image way shows object new viewpoint 
consider situation texture function albedo independent surface normal 
linear texture class formulated way equivalent 
possible textures objects mapped computed deformation fields image corresponding pixels images mapped pixel location image 
equation different equation implies iti assuming appearance texture independent surface orientation projection change dimensionality texture space 
nice situation separate shape texture space 
application coefficients shape coefficients texture computed separately 
face recognition experiments coefficients generation shape free virtual views 
fig 
shows test linear approach separated shape texture space combination approximated correspondence 
example faces shown different viewpoints rotation class faces dimensions synthetic face image test method 
synthetic face generated standard morphing technique upper left images 
ensures necessary requirements linear class assumption hold test image linear combination example images texture 
step orientation correspon vetter poggio linear object classes image synthesis single example image fig 

human example faces shown orientations left columns faces face dashed box 
synthetic face morph upper left images test face ensure linear combination constraint upper right 
procedure decomposing synthesizing correspondences fields described fig 

additionally textures orientation separately mapped face 
test texture decomposed example textures 
evaluated coefficients new texture synthesized second orientation face 
final output transformed test face generated warping new texture new synthesized correspondence field 
dence face dashed box faces computed 
procedure described earlier correspondence field test image decomposed fields evaluating coefficients different fig 
textures mapped face 
texture test face linearly decomposed textures example faces 
applying resulting coefficients textures example faces second orientation lower row fig 
generate new texture mapped face 
new texture warped new correspondence field 
new field evaluated applying coefficients correspondence fields examples face second orientation 
output procedure shown test image 
input synthetic result compared true rotated face observer judge quality applied transformation test image 
implementation implementation method gray level pixel images divided steps 
correspondence images objects computed 
second correspondence field new image linearly decomposed correspon dence fields examples 
decomposition carried new texture terms example textures 
synthesize new image showing object new viewpoint 
computation correspondence compute differences dx spatial distances corresponding points objects images correspondence points established 
means find pixel location image pixel located nose corresponding pixel location nose image 
general hard problem 
objects compared orientation assume images quite similar occlusion problems negligible 
conditions feasible compare images different objects automatic techniques 
algorithms known optical flow computation points tracked image 
coarse fine gradient method follow implementation described 
point image error term di minimized dx dy ix iy spatial image derivatives di difference intensity compared images 
coarse fine strategy refines computed displacements finer levels processed 
final result ieee transactions pattern analysis machine intelligence vol 
july computation dx dy approximation spatial displacement dx pixel image 
correspondence computed direction image example test images 
consequence vector fields common origin pixel locations image 
learning linear transformation decomposition correspondence field composition new field understood single linear transformation 
compute coefficients optimal decomposition sense square 
correspondence field dx new object decomposed example correspondence fields dx prototypes minimizing rewrite dx fa matrix formed vectors dxi arranged column wise column vector ai coefficients 
minimizing gives bg observation previous section implies operator transforms dx dx dx dx dx learned example pairs xi xij 
case layer linear network compare poggio learn transformation transform view novel object class 
examples linearly inde pendent cases solved svd algorithm 
decomposing new texture example textures textures mapped common basis 
correspondence warped images image 
representation decomposition texture performed described correspondence fields 
synthesis new image final step image rendering 
applying computed coefficients examples second orientation results new texture correspondence fields new image 
new image generated combining texture correspondence field 
possible coordinates image 
means pixel image pixel value vector pointing new location 
new location generally coincide equally spaced grid pixels destination image 
commonly solution problem known forward warping 
new pixel nearest points linearly approximate pixel intensity 
linear class assumption valid real objects 
human objects consist cuboids cylinders geometric primitives assumption linear object classes natural 
object classes linearly represented finite set example objects 
case faces clear example faces necessary synthesize face fact unclear assumption linear class appropriate 
key test linear class hypothesis case synthesized rotated face approximates true rotated face 
tested approach small set faces orientations 
fig 
shows tests technique described fig 

case face selected test face remaining faces examples 
test face shown upper left output image produced technique lower right showing rotated test face 
true rotated test face data base shown lower left 
show upper right synthesis test face example faces test orientation 
reconstruction test face understood projection test face shape texture space example faces 
perfect reconstruction test face necessary sufficient 
requirement faces linear object class 
results perfect considering small size example set reconstruction quite 
experiments cases human observers judged synthetic faces different original face images see fig 
synthetic imagery looks human face shows characteristics target faces 
general similarity reconstruction input test face allows speculate example set size order faces may sufficient construct huge variety different faces 
conclude linear object class approach may satisfactory approximation complex objects faces 
hand obvious reconstruction specific mole face requires infinite number examples 
overcome problem correspondence images taken different viewpoints map specific texture new orientation 
discussion linear combinations images single object successfully create new image object 
created new image object linear combinations images different objects class see 
single image object able generate additional synthetic images object assumption linear class property holds 
demonstrated objects purely defined shape smooth objects texture 
vetter poggio linear object classes image synthesis single example image fig 

examples artificially rotated human faces technique described fig 
shown 
test face upper left rotated different faces shown examples final results technique marked output 
comparison true rotated test face shown lower left face computation 
difference synthetic real rotated face due incomplete example set difference seen reconstruction input test face example faces upper right 
ieee transactions pattern analysis machine intelligence vol 
july fig 

additional worst case examples test described fig 
shown 
images show examples human observers judged synthetic images different original images persons 
test face upper left rotated different faces shown examples 
results marked output 
vetter poggio linear object classes image synthesis single example image approach dimensional models need depth information difficult step generating dimensional models twodimensional images superfluous 
correspondence necessary images representing objects different orientations fully automated algorithms applied correspondence finding step 
object recognition tasks approach implications 
technique provide additional artificial example images object single image 
hand coefficients result decomposition shape texture example shapes textures give representation object invariant affine transformation 
application approach confronted types problems 
approach flexible models problem finding correspondence model image 
implementation general method finding correspondence 
class objects known advance method specific object class 
case correspondence field linearly modeled known set deformations specific class objects 
second problem specific approach existence linear object classes completeness available examples 
equivalent question object classes defined terms human perception modeled linear object classes 
presently final answer question apart simple objects cuboids cylinders dimensionality mathematical definition 
application method small example set human faces shown provides preliminary promising results 
clear example faces sufficient accurately model human faces 
linear model allows test necessary conditions image member linear object class model detect images transformation fails 
test done measuring difference input image projection example space ideally vanish 
implementation described examples improved applying linear class idea independent parts objects 
face case new input face linearly approximated complete example faces example face single coefficient texture shape separately computed 
assume eyes span separated linear subspaces dimensionality space spanned examples multiplied number subspaces 
new image different parts approximated separately examples increasing number coefficients representation improving reconstruction 
open questions remain fully automated implementation 
separation parts object form separated subspaces done computing covariance pixels example images 
images high resolution may need thousands example images 
linear object class approach assumes orientation object image known 
orientation faces approximated computing correlation new image templates faces various orientations 
clear precisely orientation estimated yield satisfactory results 
beymer poggio face recognition model view proc 
fifth int conf 
computer vision 
beymer shashua poggio example image analysis synthesis memo artificial intelligence laboratory mit 
poggio brunelli novel approach graphics technical report mit media laboratory perceptual computing section 
biederman cooper extent recognition unfamiliar faces accounted representation direct output simple cell ann 
meeting research vision fla 
face recognition varying pose role texture shape vision research vol 
pp 

poggio vetter recognition structure model view observations prototypes object classes symmetries memo artificial intelligence laboratory mit 
schyns sparse observations cortical mechanisms object recognition learning memo artificial intelligence laboratory mit 
vetter poggio importance symmetry virtual views dimensional object recognition current biology vol 
pp 

cootes taylor cooper graham active shape models training application computer vision image understanding vol 
pp 

beymer vectorizing face images interleaving shape texture computations appear memo artificial intelligence laboratory mit 
jones poggio model matching line drawings linear combination prototypes proc 
th int conf 
computer vision 
neely feature image metamorphosis proc 
siggraph chicago ill pp 

bergen adelson hierarchical computationally efficient motion estimation algorithm opt 
soc 
am 
vol 

bergen hingorani hierarchical motion frame rate conversion technical report david sarnoff research center princeton 
poggio color algorithm examples science vol 
pp 

wolberg image warping 
los alamitos calif cs press 
ullman basri recognition linear combinations models ieee trans 
pattern analysis machine intelligence vol 
pp 

beymer face recognition varying pose memo artificial intelligence laboratory mit 
vetter poggio symmetric objects easy case object recognition spatial vision vol 
pp 

ieee transactions pattern analysis machine intelligence vol 
july thomas vetter received diploma mathematics phd degree physics university ulm germany 
held postdoctoral positions biophysical department university ulm center biological computational learning mit 
joined max planck institut kybernetik bingen germany 
current research interests image understanding image synthesis 
tomaso poggio received doctoral degree theoretical physics university genoa 
assistant max planck institut bingen germany 
professor mit affiliated department brain cognitive sciences artificial intelligence laboratory 
named helen whitaker founding director center biological computational learning 
professor poggio author papers areas ranging psychophysics biophysics information processing humans machines artificial intelligence machine vision learning 
editorial board interdisciplinary journals fellow american association artificial intelligence member neuroscience research program 
