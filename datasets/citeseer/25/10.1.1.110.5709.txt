time lock puzzles timed release crypto ronald rivest lambda adi shamir lambda lambda david wagner lambda lambda lambda revised march lambda mit laboratory computer science technology square cambridge mass lambda lambda weizmann institute science applied mathematics department rehovot israel lambda lambda lambda computer science department berkeley berkeley california theory lcs mit edu daw cs berkeley edu motivation notion timed release crypto goal encrypt message decrypted sender pre determined amount time passed 
goal send information 
problem discussed timothy may 
applications timed release crypto 
possibilities due may ffl bidder auction wants seal bid opened bidding period closed 
ffl wants give mortgage holder series encrypted mortgage payments 
encrypted digital cash different decryption dates payment usable bank successive month 
ffl individual wants encrypt diaries years 
ffl key escrow scheme timed release crypto government get message keys fixed period say year 
presumably applications 
natural approaches implementing timed release crypto ffl time lock puzzles computational problems solved running computer continuously certain amount time 
ffl trusted agents promise reveal certain information specified date 
trusted agents obvious problem ensuring agents trustworthy secret sharing approaches alleviate concern 
time lock puzzles problem cpu time required solve problem depend amount nature hardware solve problem computational problem solved 
note explore approaches 
note tim may suggested approach trusted agents 
time lock puzzles explore approach computational complexity study problem creating computational puzzles called time lock puzzles require precise amount time solve 
solution puzzle reveals key decrypt encrypted information 
approach obvious problem trying cpu time real time agree closely possible interesting 
major difficulty overcome noted computational resources able solve time lock puzzle quickly large parallel computers example 
goal design time lock puzzles greatest extent possible sequential nature solved substantially faster large investments hardware 
particular want puzzles property putting computers parallel doesn speed finding solution 
solving puzzle having baby women baby months 
propose approach building puzzles appears sequential desired manner 
course approach yields puzzles solution time approximately controllable different computers different speeds 
example underlying technology may different gallium gates faster silicon gates 
precise timing information release essential approach trusted agents preferable 
note approach puzzle doesn automatically solvable time computer needs continuously puzzle solved 
year puzzle needs dedicated workstation working away years solve 
computing doesn start years puzzle solution won years bit technology improved 
approach requires way computational resources approach trusted agents may best suited relatively simple puzzles time solution month say 
feel approach sufficient utility merit exposition 
unworkable approach presenting approach doesn 
denote information encrypted period time 
denote speed workstation measured decryptions second 
encrypt seconds choose conventional cryptosystem say rc key size approximately lg st bits encrypt bit key :10.1.1.133.1420
save ciphertext throw away key 
exhaustive search key space workstation take seconds average find key 
note merkle suggest method designing puzzles introduce notion puzzle research ultimately led invention concept public key cryptography 
problems way building time lock puzzle encrypting conventional cipher ffl brute force key search trivially parallelizable computers computation run times faster 
ffl computation time estimate seconds expected running time actual running time larger smaller depending order keys examined 
problems fixed proposal 
creating time lock puzzle show method creating time lock puzzles repeated squaring 
approach viewed application random access property blum blum shub mod pseudo random number generator 
propose scheme variation mod generator differences nonessential original scheme 
early version suggested different approach rsa current approach considerably simpler 
approach 
suppose alice message wants encrypt time lock puzzle period seconds 
ffl generates composite modulus pq product large randomly chosen secret primes computes oe gamma gamma ffl computes number modulo second performed solver 
ffl generates random key conventional cryptosystem rc 
key long say bits searching infeasible advances computing power expected lifetime puzzle 
ffl encrypts key encryption algorithm rc obtain ciphertext cm rc ffl picks random modulo encrypts ck mod efficiently computes mod oe computes ae mod ffl produces output time lock puzzle ck cm erases variables created computation 
add technical footnote chosen carefully guaranteed large order modulo oe guaranteed large order modulo see blum blum shub relevant discussion 
choosing randomly give desired level difficulty overwhelming probability precautions expected necessary practice 
practice choosing fixed value safe high probability 
risks approach adversary just guess aiming perfection number theory probably overkill 
solving puzzle design searching rc key directly infeasible fastest known approach solving puzzle determine mod 
knowing oe enables reduced efficiently modulo oe computed efficiently equation 
computing oe provably hard factoring alice publishes puzzle throws away key throws away factors faster way computing start perform sequentially time squaring previous result 
factoring certainly alternative attack solving puzzle large factoring approach far efficient repeated squaring 
number required solve puzzle exactly controlled 
create puzzles various desired levels difficulty 
importantly repeated squaring intrinsically sequential process 
know obvious way parallelize large degree 
small amount parallelization may possible squaring 
having computers better having 
having fast computer better slow 
degree variation long take solve puzzle depends variation speed single computers total budget 
speed hardware available individual consumers small constant factor available large intelligence organizations difference time solution reasonably controllable 
admit control desirable complexity approach done compensate different gate speeds 
trusted agents natural approach trusted agent store message desired release time extension idea message shared agents standard secret sharing techniques proposed shamir agree release shares time message reconstructed shares 
refinement agents asked store shares cryptographic key shares reduces storage demands agents 
encryption key kept publicly available location 
time key reconstructed decrypted yield ideas discussed briefly may related time lock puzzles verifiable partial key escrow developed bellare goldwasser 
suggest alternative related approach properties implementation ffl agents escrow agents may proposal store information user 
amount storage required agent fixed bounded independent number timed release user secrets asked help 
ffl main task agent periodically say hour publish previously secret value 
sit denote secret published agent time agent digitally sign secrets sit publishes standard digital signature scheme 
ffl task agent perform respond requests form values please return sit encryption secret key sit reveal time 
agent perform encryptions decryptions 
assumed encryption algorithm secure chosen message attacks adversary obtain encryptions various sit able deduce sit 
having received request agent return encrypted digitally signed copy message sit index agent time requested current time agent clock sit requested ciphertext 
message encrypted public key requestor signed agent private key 
agent need require normal case 
ffl set business trusted agent requiring coordination agents 
precisely sequence secrets published agent independent sequence secrets published agent 
ffl sequence secrets published agent property sit easily compute sit secret agent reveals time compute previously published secrets 
suffices ask agent latest secret order learn previously published secrets 
easily implemented having secrets satisfy recurrence si gamma sit suitable arbitrary way function way publishing sit reveal secrets sit 
agent precompute sequence secrets randomly chosen secret point distant working backwards chose trap door way function compute sit si gamma 
ffl message released time encrypted randomly chosen key conventional encryption algorithm yield ciphertext 
user picks number agents id publishes id rd rd timed release shares key allow reconstructed time reached agents publish secrets time ffl user may pick threshold reconstruct time release shares corresponding agents secrets time accomplish user splits shares yd standard secret sharing scheme threshold asks agent ij produce value rj yj encryption share yj secret agent ij revealed time request encrypted public key agent reply encrypted signed described earlier 
agents scheme extremely simple need ffl produce unpredictable sequence secrets satisfying equation ffl decrypt message form encrypted public key agent ffl encrypt values secret sit revealed agent time ffl return resulting ciphertext signed agent encrypted public key requestor ffl publish signed version sit time simple agent built small tamper proof device quite easily produce implementations agents highly secure 
fact scheme secret sharing threshold gives robustness possible corruption agents sell values secrets death disappearance agents 
long agents time message time time 
long fewer agents corrupted message revealed time scheme verifiable sense observer sees published material equation verify proper encryption particular 
secrets time published decrypt shares rj obtain corresponding yj values allow reconstruct obtain standard verifiable secret sharing techniques aren particularly applicable message junk verifiably shared 
note principle possible albeit difficult prove certain properties verifier having reveal agent includes current time signed reply encryption request acts simple time stamping service 
user give agent cryptographic hash value message ask agent sign encrypt sit value signed hash value time proving assuming agent trustworthy document existed time 
normally user choose cases 
example auction may required bids submitted time opened time 
user submit encryption key bid time ask encrypted sit 
line version previous protocol converted offline protocol follows 
trusted agent constructs public private keypair ei di time public key ei published immediately private key di published time 
course trusted agent digitally signs published master public key eliminate 
directly replace user perform encryption needing invoke trusted agent 
trusted agent entirely offline periodic publication 
hand offline formulation hard encode structure agent keys require storage store list public keys private keys revealed past 
bytes key storing key day years requires megabytes 
disadvantage line approach agents longer usable available time stamping agents 
suggested way create time lock puzzles require approximately certain amount time real time total cpu time solve 
discussed way trusted agents efficiently enable timed release crypto 
mihir bellare shafi goldwasser 
verifiable partial key escrow 
technical report cs dept computer science engineering san diego october 

factoring 
july 
blum blum shub 
simple unpredictable pseudo random number generator 
siam computing may 
shafi goldwasser 
personal communication 
haber stornetta 
time stamp digital document 
journal cryptology 
timothy may timed release crypto february 
www net html 
merkle 
secure communications insecure channels 
communications acm april 
ronald rivest 
remarks proposed cryptanalytic attack public key cryptosystem 
january 
ronald rivest :10.1.1.133.1420
rc encryption algorithm 
bart preneel editor fast software encryption pages 
springer 
proceedings second international workshop dec leuven belgium 
ronald rivest adi shamir leonard adleman 
method obtaining digital signatures public key cryptosystems 
communications acm 
shamir 
share secret 
communications acm november 
simmons michael norris 
preliminary comments mit publickey cryptosystem 
october 
williams schmid 
remarks concerning mit public key cryptosystem 
bit 

