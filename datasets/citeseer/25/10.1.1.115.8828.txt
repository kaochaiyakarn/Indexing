adaptive red algorithm increasing robustness active queue management ramakrishna gummadi research project submitted department electrical engineering computer sciences university california berkeley partial satisfaction requirements degree master science plan ii 
approval report comprehensive examination committee dr scott advisor date reader date acknowledgments material report joint dr scott shenker 
sally floyd 
possible tremendous support guidance dr scott shenker 
mentor guide lucky acquaintance 
owe completion 
dr sally floyd instrumental making project happen 
report drawn joint dr scott shenker dr sally floyd 
am grateful faculty students eecs 
parents lent moral emotional support 
red active queue management algorithm allows network simultaneously achieve high throughput low average delay 
resulting average queue length quite sensitive level tion red parameter settings predictable advance 
delay major component quality service customers network operators naturally rough priori estimate average delays congested routers predictable average delays red require constant tuning parameters adjust current traffic conditions goal report solve problem minimal changes red algorithm 
revisit adaptive red feng 
algorithmic modifications proposal leaving basic idea intact evaluate perfor mance simulation 
find revised version adaptive red implemented simple extension red routers sensitivity parameters affect red performance reliably achieve specified target average queue length wide variety 
extensive simulations believe adaptive red sufficiently robust deployment routers 
contents metrics scenarios motivation adaptive red illustrating red varying queue size 
adaptive red algorithms range maxp 
parameters ff fi 
setting red parameters maxth wq 
simulations exploring oscillations 
effects queue weight 
simulations routing changes 
tradeoffs throughput delay simulations exploring tradeoffs throughput delay 
related list figures delay utilization tradeoff red wq 
delay utilization tradeoff red wq 
delay utilization tradeoff adaptive red 
delay loss tradeoff normal red wq 
delay loss tradeoff adaptive red 
red increase congestion 
adaptive red increase congestion 
red decrease congestion 
adaptive red decrease congestion 
adaptive red algorithm 
red way long lived traffic wq 
red richer traffic mix wq 
adaptive red way long lived traffic wq 
adaptive red richer traffic mix wq 
red flows wq large 
red automatic setting wq 
red wq small 
average queue size variation routing change 
long lived traffic adaptive red 
long lived traffic droptail 
web long lived traffic adaptive red 
web long lived traffic droptail 
web long lived traffic reverse path delay adaptive red 
web long lived traffic reverse path delay droptail 
congestion control widely current internet prevent con gestion collapse 
data traffic inherently bursty routers provisioned fairly large buffers absorb burstiness maintain high 
downside large buffers traditional drop tail buffer management high queuing delays congested routers 
drop tail buffer management forces network operators choose high utilization requiring large buffers low delay requiring small buffers red buffer management algorithm manages queue active manner randomly dropping packets increasing probability average increases packet drop rate increases linearly zero average queue size red parameter denoted minth drop rate average queue size reaches denoted maxth red main goals combination queue length averaging bursty traffic early congestion notification reduces average queue length simultaneously achieve low average queuing delay throughput 
simulation experiments operational experience suggest red quite successful regard pointed places red main weaknesses average queue size varies level parameter settings 
link lightly congested maxp high average queue size near minth link maxp low average queue size closer maxth 
result average queuing delay red sensitive parameters predictable advance 
delay major component quality service delivered customers naturally rough priori estimate average delays congested routers achieve predictable average delays require constant tuning red parameters adjust current traffic conditions second related weakness red throughput sensitive traffic load red parameters 
particular red average queue larger maxth resulting significantly decreased throughput increased dropping rates 
avoiding regime require constant tuning red parameters 
proposals active queue management schemes avoid problems 
schemes represent substantial departures basic red design purpose look amore minimal change red alleviate problems variable delay parameter sensitivity mentioned think basic insight solution lies original adaptive red proposal feng 
proposal retains red merely adjusts parameter maxp keep average queue size red gentle mode employ dropping rate increases linearly maxp average queue size maxth average queue size theta maxth 
minth maxth 
report describe new implementation red incorporates substantial algorithmic changes original adaptive red proposal retaining basic intuition spirit 
new adaptive red algorithm automatically sets red parameters operators need set desired target average queue length implemented revised proposal ns simulator describe 
new version adaptive red achieves target average queue wide variety scenarios sacrificing benefits red 
leads predictable average queuing delay minimizes overshooting maxth adaptive red reduces packet loss rate variance queuing delay 
adaptive red appears problem setting red parameters red existence adaptive red algorithm appears promising claims proposal best way solve problems 
existence proof need abandon basic red design order stabilize average queue length auto tune 
adaptive red serious proposal deployment routers 
extensive simulations subset report fact adaptive red represents small change currently implemented red algorithm believe adaptive red deployment 
report sections starting section discusses simulation scenarios evaluating adaptive red 
section reviews preliminary simulation results illustrate red sensitivity show adaptive red address problem 
section describes details adaptive red algorithm including automatic setting wq queue averaging constant 
simulation results adaptive red variety settings section 
section dis inherent tradeoffs throughput delay difficult issue determining target average queue size 
related discussed section conclude section 
metrics scenarios section describe metrics range scenarios adaptive red 
primary goals red active queue management general pro vide low average queuing delay high throughput 
evaluations adaptive red report focus mainly metrics average throughput 
red secondary goals improving somewhat fairness drop tail queue management minimizing avoid confusion cumbersome terminology follows term original adaptive red refer proposal feng term adaptive red refer proposal described 
average queue length packet dropping marking rate 
fairness behavior adaptive red quite similar fairness behavior red 
briefly consider drop rate behavior red red degraded drop rate behavior generally reflected degraded throughput comments metrics order 
metrics router 
user metrics file transfer times packet de lays important measures algorithm validity user metrics interest adaptive red fairly easily derived router believe router metrics give direct insight dynamics aqm active queue management second consider metrics related worst case queuing delays goal aqm control worst case delays 
envision intended mainly traditional best effort traffic worst case guarantees provided simple packet multiplexing case 
worst case queuing delays needed controlled directly configuring queue buffer size router independent algorithm 
third consider metrics directly measuring queue length oscillations substantial interest queue length oscillations see example think oscillations harmful increase average queuing delay decrease throughput case effects measured primary metrics 
discuss impact primary metrics section 
evaluating adaptive red explored wide range traffic scenarios investigated sensitivity adaptive red simulation parameters 
verify robustness considered performance range workloads statistical multiplexing levels congestion 
workloads include long lived flows short web mice reverse path traffic 
presence data traf fic reverse path introduces ack acknowledgment compression loss ack packets increasing burstiness data traffic 
reverse path traffic forces range packet sizes forward path forward path shared data ack packets 
changes workload level congestion course simulation 
looked dynamics explicit tion notification ecn 
considered effect large window advertisements different data packet sizes 
motivation adaptive red delving details design performance adaptive red whichwe describe sections respectively review simulation results illustrating red sensitivity parameters showing adaptive red address problem 
section shows simulations illustrating red known characteristic average queue size performance varying function red parameters maxp wq 
section includes adaptive red showing adapting maxp keep target queue size target range minth maxth possible achieve thesame performance red value maxp tuned simulation scenario words adaptive red successfully auto tunes various achieve reliably results 
figures show set simulations single congested link topology number long lived tcp flows ranging 
long lived flows range round trip times ms andthe simulations include web traffic reverse path traffic 
congested link mbps simulations red ns default values wq maxp minth maxth set packets respectively 
run gentle mode simulations 
cross shows results single simulation axis showing average queuing delay second half second simulation axis showing link utilization second half simulation 
line shows results flows lines values ranging 
crosses line show results simulations maxp ranging onthe left right 
packet drop rate simulations ranges close zero simulations flows simulations flows 
shows performance varies number flows maxp poorer throughput simulations long lived flows 
simulations increasing number flows decreases link utilization increasing maxp leads lower queue lengths 
utilization low values maxp reflects cases average queue length overshoots maxth significant portion time 
link utilization average queue length flows flows flows flows flows flows flows flows flows flows flows delay utilization tradeoff red wq 
discussed section queue weight large mbps averages queue length fraction link utilization average queue length flows flows flows flows flows flows flows flows flows flows flows delay utilization tradeoff red wq 
typical ms round trip time 
simulations differ fig ure wq set 
apparent discussed thoroughly section red performance average queue size estimated small multiple round trip times fraction single round trip time 
figures red performance sensitive value parameter wq 
shows non adaptive red give quite performance value wq average queue size throughput function red parameter maxp 
particular throughput suffers maxp small relative steady state packet drop rate average queue size exceeds maxth value packets 
achieving reasonable average queue lengths red requires careful tuning wq maxp 
careful tuning adaptive red designed 
describe adaptive red algorithm detail section general design adaptive red easily summarized setting wq automatically link speed adapting maxp measured queue lengths 
section explore performance adaptive red detail show simulations sug gest adaptive red remove need carefully tune red parameters shows simulations adaptive red graph various values maxp initial values adaptive red adjusts response measured behavior 
note axes don match figures 
entire region depicted occupies small area performance region figures 
earlier graphs shows results second half clustering points curve shows results essentially independent initial value maxp 
link utilization average queue length flows flows flows flows flows flows flows flows flows flows flows delay utilization tradeoff adaptive red 
simulations show adaptive red setting wq automatically adjust ing maxp response current conditions effective achieving high throughput maintaining average queue size target interval range corresponds algorithm requirement maintaining average queue size pre determined range minth maxth section 
simulations average queue size outside range flows simulations packet drops smaller full link utilization 
simulations adaptive red high throughput upwards flows flows 
number flows choose static setting maxp non adaptive performance adaptive red 
catch static setting maxp function simulation scenario 
example flows performance adaptive red corresponds roughly performance non adaptive red maxp set sim flows performance adaptive red corresponds roughly performance non adaptive red maxp set figures show packet drop rates simulations figures 
show red adaptive red roughly rates particular set flows adaptive red keeping average queue size away maxth avoids higher packet loss red incurs queue size maxth 
explored fairness verified fairness properties similar simulations red adaptive red 
explored simulations range scenarios including range bandwidths mixes web traffic ecn queue measured units packets units bytes red byte mode account size packet bytes deciding drop packet packet mode 
simulations see link loss average queue length flows flows flows flows flows flows flows flows flows flows flows delay loss tradeoff normal red wq 
link loss average queue length flows flows flows flows flows flows flows flows flows flows flows delay loss tradeoff adaptive red 
performance adaptive red 
illustrating red varying queue size previous simulations showed steady state performance red adap tive red 
investigate red adaptive red respond rapid change congestion level 
simulations illustrate red swell understood dynamic average queue size varying congestion level resulting red fixed mapping average queue size probability 
adaptive red simulations focus transition period level congestion simulations simple dumbbell topology congested link mbps 
buffer accommodates packets byte packets corresponds size packets time seconds ave queue queue red increase congestion 
queuing delay seconds 
simulations wq set set packets maxth set packets simulation forward traffic consists long lived reverse traffic consists long lived tcp flow 
time new flows start seconds maximum window 
intended model realistic load simply illustrate effect sharp change congestion level 
graph adaptive red average queue size changing function packet drop rate 
dark line shows average queue size estimated red andthe dotted line shows instantaneous queue 
packet drop rate changes half simulation second half corre sponding changes average queue size 
graph shows simulation adaptive red 
shows similar sharp change average queue size time 
roughly seconds adaptive red brought average queue size target range packets 
simulations adaptive red slightly higher throughput non adaptive red slightly lower average queue size packets smaller packet drop rate 
simulations adaptive red il possible adapting maxp control relationship average queue size packet dropping probability maintain average queue size presence traffic dynamics 
shows related simulation new flows starting time time 
simulation non adaptive red shows decrease average queue size level congestion changes time time packet drop rates non adaptive red half simulation second half 
values wq maxth obtained guidelines section value minth policy choice 
size packets time seconds ave queue queue adaptive red increase congestion 
similar change average queue size simulation seconds adaptive red brought average queue size back target range 
simulation adaptive red non adaptive red slightly lower average queue size packets 
adaptive red algorithms guidelines adaptive red implemented original adaptive red adapting maxp keep average queue size minth maxth 
approach differs red ways ffl maxp adapted just keep average queue size minth keep average queue size target range half way minth maxth 
ffl maxp adapted slowly time scales greater typical round small steps 
ffl maxp constrained remain range equivalently 
ffl multiplicatively increasing decreasing maxp additive increase multiplicative decrease aimd policy 
algorithm adaptive red guideline adapting maxp slowly infrequently allows dynamics red adapting packet dropping probability response changes size packets time seconds ave queue queue red decrease congestion 
average queue size dominate smaller time scales 
adaption maxp needed longer time scales 
robustness adaptive red comes slow infrequent maxp 
price slow modification sharp change level congestion figures take time possibly maxp adapts new value 
ensure performance adaptive red unduly degraded transition period guideline restricts maxp stay range 
ensures transition period performance red average queue size target range average delay throughput suffer slightly claim algorithm adaptive red optimal close optimal wide range scenarios safely deployed red implementations internet 
result slow adaptation maxp design adaptive red gives wide range environments 
stated cost slow adaptation performance transient period sharp change congestion average queue size target zone 
adaptive red consciously positioned conservative robust aqm mechanisms aim avoiding finely tuned fragile dynamics aggressive spectrum adaptive red algorithm uses aimd adapt maxp 
experimented linear controls mimd multiplicative increase mul decrease proportional error controls suggested control theoretic analyses experiences aimd ap proach robust 
completes general description adaptive red algorithm 
algorithm detailed choices various parameters 
justify choices 
size packets time seconds ave queue queue adaptive red decrease congestion 
range maxp upper bound maxp justified grounds 
optimize red packet drop rates greater 
addition red gentle mode means packet drop rate varies average queue size varies minth maxth packet drop rate varies maxp average queue size varies maxth 
maxp set packet drop rate varies average queue size varies minth twice maxth 
give performance packet drop rates greater 
upper bound maxp means packet drop rate exceeds size exceed target range factor lower bound maxp motivated desire limit range 
believe scenarios small packet drop rates red perform fairly robustly maxp set object queue size target range 
parameters ff fi note takes ff intervals maxp increase seconds default parameters ff interval see 
similarly takes log log fi intervals maxp decrease default parameters seconds 
sharp change level congestion seconds upper bound onthe interval average queue size outside target range performance aqm somewhat degraded 
maxth minth target queue size minth packet drop rates approaching maxp set average queue size approaches maxth minth 
interval seconds avg target maxp increase maxp maxp maxp ff elseif avg target maxp decrease maxp maxp maxp lambda fi variables avg average queue size fixed parameters interval time seconds target target avq minth lambda maxth gamma minth minth lambda maxth gamma minth ff increment min maxp fi decrease factor adaptive red algorithm 
recommending values ff fi want ensure normal condi tions single modification maxp result average queue size moving target range vice versa 
assume maxp adapted steady state packet dropping probability remains average queue size avg simply shifts match new value 
assuming maxp maxp increases ff avg expected decrease minth maxth gamma minth minth ff maxth gamma minth decrease ff max ff pmax maxth gamma minth long maxth gamma minth average queue size target range target range single interval 
suggests choosing ff maxp ff equivalently ff maxp 
setting ff shown obeys constraint 
similarly check decrease maxp average queue size go target range single adjustment maxp 
similar analysis ff shows long asp gamma fi maxth gamma minth maxth gamma minth average queue size change target range range single interval 
suggests choosing gamma fi fi equivalently fi 
constraint satisfied default value fi see 
setting red parameters maxth wq described adaptive red removes red dependence 
reduce need parameter tuning red specify procedures automatically setting red parameters maxth wq automatic mode maxth set times minth follows recommendations case target average queue size centered theta minth determined red parameter minth 
considerations specifying target average queue size discussed section guidelines setting wq original red terms transient queue size accommodated red time required respond step change actual queue size 
queue size changes value takes gamma ln gamma wq packet average queue reach way new value 
refer gamma ln gamma wq time constant estimator average queue size time constant specified packet arrivals time 
default ns simulator wq set corresponds toa time constant packet arrivals 
gbps link byte packets packet arrivals corresponds small fraction round trip time th assumed round trip time ms 
clearly higher speed links require smaller values wq time constant remains order trip times fractions round trip times 
automatic mode set wq function link bandwidth red automatic mode set wq give time constant average queue size estimator second equivalent round trip times assuming round trip time ms set wq gamma exp gamma link capacity packets second computed packets spec ified default size 
mbps link configured mean bytes red automatic mode sets wq mbps link automatic mode sets wq 
simulations simulations section suggest adaptive red automatically continually adapting maxp achieves goals high throughput low average queueing delays wide variety conditions 
section closely examine aspects adaptive red behavior oscillations effects wq response routing dynamics 
ns simulator automatic mode maxth indicated setting maxth 
similarly automatic mode wq indicated setting wq chance haven followed recommendation simulations report recommendation change results 
average queue length time seconds red way long lived traffic wq 
average queue length time seconds red richer traffic mix wq 
exploring oscillations feedback nature tcp congestion control oscillations length common 
oscillations malignant degrade throughput increase variance queuing delay benign oscillations significantly effect throughput delay 
figures show average queue size simulation long lived flows round trip time ms congested link mbps 
flows ecn byte data packets 
red minth maxth 
simulation uses red factors queue size fixed overly small value maxp high value wq simple traffic mix way traffic long 
shows dramatic oscillations average queue size average queue length time seconds adaptive red way long lived traffic wq 
average queue length time seconds adaptive red richer traffic mix wq 
average queue size going minth maxth oscillation 
oscillations periods high packet drop rates periods packet drops results degraded throughput high variance 
exceeding maxth incurs non linearity form large packet drop corresponding decrease utilization forces average queue size sharply case minth 
average queue size falls minth average packet drop probability zero flows ramp congestion windows rtts sustaining oscillations 
case red achieves link utilization queuing delay 
packet loss rate ecn shows malignant oscillations significantly realistic traffic mix including reverse path traffic web traffic badly tuned non adaptive red worst effects oscillations decreased slightly realistic traffic load consider adaptive red lower value wq automatically adapting maxp fares traffic scenarios 
shows simple traffic mix way long lived traffic adaptive red able eliminate malignant oscillations turn benign oscillations 
spite high fixed rtt ms reverse traffic web traffic adaptive red achieves utilization average queuing oscillating target range packets loss rate 
recall traffic ecn 
note malignant adaptive red larger value wq adapting maxp choosing value wq required eliminating oscillations scenario 
shows slightly realistic traffic mix web traffic traffic benign oscillations replaced irregular variations average queue size generally target range packets 
utilization case slightly higher 
effects queue weight showed performance costs terms decreased throughput large value wq section illustrates costs terms increased queuing delay small value wq figures show results simple simulation long lived tcp flows round trip ms competing mbps link second tcp flow starts time second simulation 
tcp flows average congestion window packets 
sim non adaptive red differ wq 
simulations illustrate costs overly small value wq slow respond sustained increase instantaneous queue 
simulation uses red large value wq 
automatic settings minth maxth resulting minth set packets maxth set minth 
shows instantaneous average queue size estimated red 
second tcp cut slow start slightly reaches desired congestion figures show reasonable performance scenario contrast shows costs having wq set small 
simulation wq result red slow detect sudden congestion detect congestion building time queue packets built 
simulation sharp increase due slow start single high bandwidth tcp flow increase due flash crowd routing failure denial service attack simulation run large buffer size allowing spike queue reach packets 
buffer size smaller simulation reverted typical behavior drop tail queue management multiple packets dropped window data 
explored range scenarios cases steady state scenarios link utilization suffered smaller value wq suggested equation 
size packets time ave queue queue red flows wq large 
size packets time ave queue queue red automatic setting wq 
simulations routing changes section explores briefly transient behavior adaptive red environ ments sharp changes load due routing changes 
illustrates average queue size function time simulation output unavailable time time seconds 
simulation topology includes alternate path lower precedence half link capacity size packets time ave queue queue red wq small 
tcp connections continue send packets link outage 
comes back entire load shifted back original link 
link utilization reaches second period immediately repair second period 
scenario demonstrates dynamic behavior adaptive red 
tradeoffs throughput delay adaptive red algorithm automatic setting earlier critical parameter left specify red target average queue size 
adaptive red maintains average queue size target average queue size setting straightforward 
hard part determining desired average 
optimal average queue size router function relative trade throughput delay tradeoff necessarily question policy 
addition tradeoffs throughput delay characteristics aggregate traffic particular burstiness aggregate 
scenarios way traffic long lived flows short rtts anda high level statistical multiplexing allow high throughput low delay scenarios higher burstiness results way web mice scenarios low levels statistical multiplexing require harder tradeoffs throughput delay imagine configuring red optimize particular function throughput delay adding third slower control loop adaptive red slowly adapt minth find average queue size optimized specified function 
example policy decision average queue maximized power defined ratio throughput delay adaptive time seconds average queue length average queue size variation routing change 
control loop measure power queue slowly adapt minth power 
space possible tradeoffs throughput delay realistic traffic scenarios understood fact realistic traffic scenarios understood typical network traffic notoriously difficult characterize 
tackle fundamental problem choosing optimal average queue size adaptive red remains red key free parameter 
default minth ns simulator packets floyd clear optimal setting minth depends exactly desired tradeoff low average delay high link utilization 
leaving issue optimality jacobson scripts automatic mode set minth function link bandwidth 
slow moderate speed links setting packets works continue lower bound minth automatic mode 
high speed link average queue size small relative delay bandwidth product results severe loss throughput rule thumb plausible tradeoff throughput delay require average queuing delay router fraction trip time default value ms 
setting minth target average queuing delay seconds link capacity pkts sec 
ms automatic mode set minth tom ax packets 
translates setting mbps link packets mbps link 
simulations exploring tradeoffs throughput de lay section simulations explore various tradeoffs queuing delay adaptive red choose suitable minth value policy 
show tradeoff curve influenced workload judicious selection minth considering expected traffic mix 
tradeoff arises workload 
show tradeoffs virtual queue adaptive red virtual queue output rate slightly length bandwidth explore possibilities performance lower ranges queuing delay 
link utilization queue length flows flows flows flows flows flows flows flows flows flows flows long lived traffic adaptive red 
link utilization queue length flows flows flows flows flows flows flows flows flows flows flows long lived traffic droptail 
link utilization queue length flows flows flows flows flows flows flows flows flows flows flows web long lived traffic adaptive red graph shows simulations scenario adaptive red automatic settings wq maxth 
difference simulations value minth varies give wide range queue sizes 
web mice consist short connections second forward reverse direction transfer reverse path tcp connections constrained receiver advertised windows packets cross shows single simulation long lived flows ranging 
value simulations run values minth ranging giving range target average queue sizes packets 
shows tradeoffs delay simulations range values target delay adaptive red get performance average queue size shows delay throughput tradeoffs scenario droptail queue management queue size varying packets uses simulations adaptive red addition significant amount web traffic web traffic generator 
likewise uses simulations simple drop tail queue management similar amounts web traffic shows simulation exactly values reverse path queue default values packets small average queue reverse path values path queue 
high average queueing delay forward path queue reverse path queue configured allow queueing delay 
shows performance adaptive red case simulation scenarios high congestion 
long lived tcp connections reverse path constrained receiver advertised windows packets scenarios congestion reverse path link utilization queue length flows flows flows flows flows flows flows flows flows flows flows web long lived traffic droptail congestion forward path 
related parameter sensitivity red discussed number papers briefly discuss related section 
growing body research aqm builds observations earlier 
attempt evaluate proposals simply note don believe proposals full answer parameter sensitivity red 
particular believe proposals deployable mechanism adapting parameter maxp 
similarly proposals red believe provided robust deployable proposal realistic scenarios bursty way traffic range packet sizes link delays adaptive red proposal report original adaptive red proposed feng adapting maxp function size 
original adaptive red adjusts packet dropping probability maxp red keep average queue size greater 
particular original version adaptive red increased maxp multiplicatively average queue size went multiplicatively average queue size went 
jacobson early draft progress suggest self red parameters determined bandwidth output link 
draft uses notion calculated output times round trip time ms expressed units mtu sized packets 
average queue size estimated sampling queue fixed inter vals 
section parameter settings recommends setting filter gain link utilization queue length flows flows flows flows flows flows flows flows flows flows flows web long lived traffic reverse path delay adaptive red 
web long lived traffic reverse path delay droptail 
estimating average queue size inverse number samples ofthe queue size taken ms proposals include setting average queue size instantaneous queue size instantaneous size lessthan average setting ziegler explore stability red recommend settings average queue size converges minth maxth goal loosely converging certain queue size define convergence loosely achieving state bounded oscillation queue value minth maxth amplitude oscillation average queue size significantly smaller maxth gamma minth queue size remains greater zero smaller total 
recommends settings minth maxth wq maxp achieve 
ziegler set wq function link bandwidth give fixed time constant second estimator 
ziegler show red give performance 
may critical evaluation red summarizes follows red buffers improve significantly performance network parameter tuning red remains inexact science big impact performance 
red implementation cisco ios evaluated experimentally range values maxp minth maxth parameter testbed way data flow mix tcp udp traffic christiansen evaluated red experimentally laboratory scenario web traffic congestion forward path concluded red clear advantage tail drop fifo terms connection response times web users 
reports performance quite sensitive set ting red parameters 
explores effect changes set times 
observes scenario mbps congested link value packets give best performance 
concluded minth set larger values accommodate highly bursty character web traffic 
follow recommendation automatic setting 
explored ranges values wq maxp concluded strong arguments suggested default values 
con significant penalty choosing bad parameters red scenarios near saturation loads misra 
discuss difficulties tuning red parameters 
consider simulation mbps congested link way traffic long wq set means effectively computing average queue size seconds 
illustrate benign oscillations queue size say currently investigating tuning red parameters 
focus oscillations queue size starting point recommend values red parameters 
firoiu considered problems red oscillations size recommendations configuring red parameters 
recommended ideal rate sampling average queue size round trip time 
number papers proposed alternate mechanisms active queue man agement 
include ott stabilized red lapsley random early marking rem proportional integral pi controller avq proposals share adaptive red goal keeping stable average queue size changing congestion 
avq tries keep average queue size small high congestion uses token bucket fill rate link capacity 
primarily designed avoid oscillations queue size 
tackles goal stabilizing buffer occupancy estimating number 
dynamic red goal maintaining queue size close threshold value uses controller adapts dropping probability function average distance queue threshold value 
report reported adaptive red adapting red pa rameter maxp automatically setting red parameters wq maxth maintains predictable average queue size reduces red parameter sensitivity adaptive red leaves choice target queue size network operators policy tradeoff utilization delay 
plan explore adaptive red virtual queues goal providing small average queueing delays 
case virtual queue configured throughput slightly lower actual throughput link queuing delay determined solely traffic burstiness 
chapman 
enhancing load adaptive red mechanism 
international journal network management 
chapman 
control active queue management 
computer networks 
chapman 
optimization oriented view random early detection 
computer communications 
lapsley low 
enhanced random early internet flow control 
infocom 
christiansen jeffay ott smith 
tuning red 
sigcomm pages sep 
feng kandlur saha shin 
techniques eliminating congested tcp ip network 
michigan cse tr november 
feng kandlur saha shin 
self configuring red gate way 
infocom mar 
victor firoiu marty 
study active queue management control 
infocom 
floyd 
red discussions setting parameters november www aciri org floyd txt 
floyd handley padhye widmer 
tfrc web page www aciri org tfrc 
floyd jacobson 
random early detection gateways tion avoidance 
ieee acm transactions networking aug 
misra towsley gong 
control theoretic red 
infocom 
misra towsley gong 
designing improved con aqm routers supporting tcp flows 
infocom 
jacobson nichols red different light september 
draft www infn ferrari papers red light pdf 
srikant 
analysis design adaptive avq algorithm active queue management 
csl technical report university illinois january 
lapsley low 
random early marking internet congestion con trol 
proceedings globecom pages december 
may bolot diot lyles 
reasons deploy red 
proc th 
international workshop quality service iwqos pages june 
misra wei bo gong donald towsley 
fluid network aqm routers supporting tcp flows application red 
sigcomm pages 
ott lakshman wong 
stabilized red 
infocom 
ziegler 
stability criteria red data tcp traffic 
technical report august 
lip fr publications production html 
ziegler 
stability red tcp traffic may 
technical report www papers html 
ziegler 
red way tcp traffic october 
ieee icccn www papers html 

