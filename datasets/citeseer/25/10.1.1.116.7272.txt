frequently asked questions polyhedral computation contents www math ethz ch fukuda html fukuda swiss federal institute technology lausanne zurich switzerland fukuda math ethz ch version june polyhedral computation faq 
convex polyhedron convex polytope polyhedron 
faces convex polytope polyhedron 
face lattice convex polytope 
dual convex polytope 
simplex 
cube hypercube cross polytope 
simple simplicial polytope 
polytope 
best upper bound numbers dimensional faces vertices 
convex hull 
convex hull problem 
minkowski weyl theorem convex polyhedra 
vertex enumeration problem facet enumeration problem 
enumerate faces convex polyhedron 
computer models appropriate polyhedral computation 
measure complexity convex hull algorithm 
facets average polytope vertices 
facets polytope vertices 
hard verify polyhedron ph polyhedron pv equal 
efficient way determining point convex hull finite set points 
remove interior points conv large clouds points 
efficient algorithm remove redundant inequalities system linear inequalities 
efficient algorithm compute intersection polytopes efficient algorithm compute volume convex polytope 
voronoi diagram delaunay triangulation cell complex 
triangulation 
voronoi diagram 
delaunay triangulation 
computing delaunay complex voronoi diagram 
mean available software 
sample session cdd 
possible compute adjacencies voronoi cells voronoi diagram efficiently 
sample session cdd 
possible compute edges delaunay complex triangulation possible determine delaunay cell containing point efficiently 
sample session cdd 
best upper bound numbers simplices delaunay triangulation 
linear programming lp 
polyhedral computation codes polyhedral computation faq 
faq answer basic questions arising certain geometric computation general dimensional euclidean space 
main areas covered convex hull computation finite point set vertex enumeration convex polytope computation voronoi diagram delaunay triangulation illustrate typical solution processes small examples publicly available codes cdd lrs 
incomplete contains number typos mistakes moment try complete possible primary purposes 
intend discuss techniques algorithms specially designed particular dimensions 
interested primarily geometric computation lower dimensions consult comp graphics algorithms faq handbook discrete computational geometry ge 
please note polyhedral computation faq available formats ps html 
pdf version available soon 
html version created latex html advantage having html links documents 
aware fact conversion errors exist give wrong equation numberings missing figures 
please consider ps version reliable source 
refer document please fukuda polyhedral computation faq swiss federal institute technology lausanne zurich switzerland fukuda math ethz ch www math ethz ch fukuda html 
please send comments fukuda math ethz ch convex polyhedron convex polytope polyhedron 
subset called convex polyhedron set solutions finite system linear inequalities called convex polytope convex polyhedron bounded 
convex polyhedron polytope dimension called polyhedron polytope 
sequel omit convex convex polytopes polyhedra call simply polytopes polyhedra 
faces convex polytope polyhedron 
convex polyhedron polytope real vector real number linear inequality called valid holds subset polyhedron called face represented valid inequality definition empty set set faces 
faces called improper faces faces called proper faces 
define faces geometrically 
need define notion supporting hyperplanes 
hyperplane supporting closed halfspaces contains subset called face intersection supporting hyperplane 
faces dimension dim dim called vertices edges ridges facets respectively 
vertices coincide extreme points defined points represented convex combinations points edge bounded cases line half line starting vertex 
half line edge called extreme ray 
face lattice convex polytope face poset convex polyhedron set faces ordered set inclusion 
polytopes called isomorphic face posets isomorphic 
face poset convex polytope lattice 
face poset convex polyhedron referred combinatorial structure polyhedron 
expression polyhedra combinatorially equal means isomorphic 
dual convex polytope 
convex polytope convex polytope anti isomorphic upside called combinatorial dual definition dual polytope dimension duality theorem states convex polytope admits dual 
theorem duality polytopes nonempty polytope admits dual polytope particular construct dual polytope polar construction assumed contain origin interior 
contains origin interior polytope called polar easily show denote set vertices inequality representation minimal contains redundant inequalities 
simplex 
subset called simplex 
convex hull affinely independent points 
exactly vertices facets 
simplex simplex simplices dual see simplex simplex 
cube hypercube cross polytope 
subset called unit cube convex hull points components 
exactly vertices facets 
cube hypercube convex polytope isomorphic cube dual see cube called cross polytope 
simple simplicial polytope 
polytope called simple vertex contained exactly facets 
polytope called simplicial facet contains exactly vertices 
definition dual simple polytope simplicial simple respectively 
facet simplicial polytope simplex 
vertex simple polytope contained exactly edges 
cube simple polytope simplex simple simplicial 
polytope 
polytope called vertices words polytope convex hull subset point set 
best upper bound numbers dimensional faces polytope vertices 
fk denote number faces polytope 
exact upper bound fk terms known upper bound theorem 
convex hull distinct points moment curve 
known cyclic polytope 
known combinatorial structure face lattice see section uniquely determined write denote cyclic polytope vertices 
upper bound theorem shows maximum fk attained cyclic polytopes 
theorem upper bound theorem polytope vertices holds 
fk fk 
number faces cyclic polytope explicitely evaluate order upper bound terms theorem fk 
particular fd example 
upper bound theorem written dual form gives example maximum number vertices polytope facets 
theorem upper bound theorem dual form polytope facets holds 
fk fd 
original proof upper bound theorem mcm ms 
different variations see kal mul zie 
convex hull 
convex hull problem 
subset convex hull conv defined smallest convex set containing convex hull computation means determination conv finite set points 
usual way determine conv represent intersection halfspaces precisely set solutions minimal system linear inequalities 
amounts output matrix vector conv 
conv full dimensional nonredundant inequality corresponds facet conv 
convex hull problem known facet enumeration problem see section 
people define convex hull computation determination extreme points conv equivalently redundant points determine conv 
simpler computation convex hull problem 
fact done solving linear programs polynomially solvable see section 
better name redundancy removal point set 
minkowski weyl theorem convex polyhedra 
minkowski weyl theorem states polyhedron finitely generated finitely generated set polyhedron 
precisely subsets denotes minkowski sum 
theorem minkowski weyl theorem subset statements equivalent polyhedron real finite matrix real vector ax finite real vectors 
vn 
rs conv 
vn 
rs 
polyhedron representations type known halfspace representation vertex representation respectively 
polyhedron representation representation called polyhedron polyhedron 
vertex enumeration problem facet enumeration problem 
polyhedron extreme point full dimensional representations weyl theorem unique positive multiples inequality ray rj 
regularity conditions conversions representation representation defined fundamental problems 
transformation known vertex enumeration known facet enumeration 
addition bounded polytope facet enumeration problem reduces call convex hull problem see 
polyhedron satisfy assumptions easy transform polyhedron isomorphic lower dimensional polyhedron satisfying assumptions 
easy nondegenerate cases difficult degenerate cases 
simplicity assume bounded polytope 
vertex enumeration called nondegenerate point satisfies inequalities equality degenerate 
facet enumeration called nondegenerate points common hyperplane degenerate 
enumerate faces convex polyhedron 
convex polytope extend discussion unbounded case polyhedron adding face infinity simplicity assume bounded 
answer depend 
problem polytopes equivalent polytopes duality 
see sections 
algorithms rot sei flm generate faces 
backtrack algorithm flm easiest implement works directly unbounded case 
compact polynomial algorithm see needs little space run 
algorithms need store faces computation tend complicated implement needs manage complex data structure faces incidences 
approach generate faces consists steps 
firstly compute second representation representation conversion algorithm 
secondly combinatorial method faces 
part discussed section section presents existing implementation 
second part done efficiently purely combinatorial computation see fr 
explained fr polytope simple simplicial face listing duplication done implicitely sorting vertices facets generic linear function generic line interior point 
computer models appropriate polyhedral computation 
important computational models unit cost ram random access machine turing machine 
essential difference turing machine uses binary representations numbers computational time measured precisely number unit cost bit operations 
believe ram model elementary arithmetic operation takes unit time integer number takes unit space standard model polyhedral computation 
model despite simplicity illuminates critical parts algorithm reflects actual computation 
course ignoring number bits largest number arising computation dangerous control exponential growth bit lengths numbers terms input bit length 
warning kept mind design implementation 
furthermore certain cases need turing complexity 
example known polynomial algorithms linear programming see section turing polynomial ram polynomial 
may avoid problem pretending ram polynomial algorithm lp 
interested geometric computation interested analysis reflects reality simplex method lp practically ram polynomial equivalently strongly polynomial method 
refer book yap discussions 
measure complexity convex hull algorithm 
answer question assume unit cost ram model computational time essentially number elementary arithmetic operations storage integer number takes unit space 
see section 
approaches evaluate complexity convex hull algorithm 
algorithm computes minimal inequality description ax full dimensional convex polytope conv point set 
denote number inequalities output ax 
interprete discussion dual setting consider algorithm compute vertices convex polytope vertices 
people agree efficiency computing convex hull measured critical input parameters people see complexity fixing constant better evaluate terms fix 
measure employed computational bound worst case running time algorithm input points example means terminates time input points dimension set fixed constant algorithm said time complexity 
simply constant 
may call worst case input measure 
fixed dimension optimum algorithm cha convex hull terms worst case input measure runs time 
better largest output order upper bound theorem theorem 
worst case input measure quite popular little misleading 
example suppose algorithms time complexity respectively 
measurement algorithm superior 
potentially serious problem worst case input measure 
possible takes worst case time input points takes time proportional polynomial function note number inequalities varies wildly fixed upper bound theorem theorem 
diversity just big ignored 
furthermore input data leading worst case output hardly occurs practice 
fact random spherical polytope expected size linear see section 
worst case input optimal algorithm cha remarkable theoretical achievement far knowing best ways compute convex hull general dimensions 
order circumvent pitfall measure key variables generally measure time complexity terms size input size output 
say algorithm polynomial runs time bounded polynomial polynomiality coincides usual polynomiality output size polynomially bounded size input 
assumption see polynomial algorithm convex hull problem 
earlier polynomial algorithms pivot algorithms cch dye solving problem dual form vertex enumeration problem wrapping algorithm ck 
algorithm af reverse search technique af polynomial compact time 
say algorithm compact space complexity polynomial input size 
general case known polynomial algorithm 
abs article presenting various algorithms fail polynomial ingenious constructions nasty polytopes 
facets average polytope vertices 
clearly need define probability distribution points answer question 
interesting answer known uniform distribution unit sphere results show expected number facets 
important fact depends linearly essentially 
function defined recursively just see large slope linear function calculate 
facets polytope vertices 
denote maximum number facets polytope question function bounded exponential open just 
negative answer ny proved behavior 
theorem ny bp positive constant breakthrough theory polytopes 

log hard verify polyhedron ph pv equal 
fundamental complexity question associated minkowski weyl theorem theorem 
problem known polyhedral verification problem posed lovasz see 
simplify discussion assume ph pv bounded polytopes 
may assume representations contain redundant data removing redundancies just matter solving linear programs see sections 
verification consists questions pv ph ph pv question easy answer just checking generator vertex pv satisfies representation ph 
second question known conp complete due fo 
hard see belongs conp negative answer question succinct certificate vertex ph hyperplane separating pv complexity second question question positive answer known 
possible prove polynomial solvability problem implies polynomial solvability representation conversion problem general convex polytopes vertex enumeration facet enumeration problems 
polynomial solvability representation conversion problem means existence algorithm generates second minimal representation time polynomial size input output 
see section discussion complexity measures 
reduction 
assume polynomial algorithm verification design algorithm generate vertices polytope ph 
set vertices ph generated far 
take inequality representation ask generated vertices face intersection ph hyperplane inequality forced equality 
just application verification algorithm 
move second inequality repeat 
go lower dimensional face setting remaining inequality equality 
independent equalities compute unique vertex solving equation system 
key observation generate subproblem verification algorithm returns answer 
means subproblem created generates new vertex 
guarantees generation algorithm polynomial 
know recognize reduction 
consider belongs folklore 
repeat complexity polyhedral verification problem unknown 
conp complete 
important question polyhedral computation 
fascinating question 
efficient way determining point convex hull finite set points 
need careful 
give method recommend people 
method computes inequality representation ax conv matrix vector 
called convex hull computation 
system ax computed easy check satisfies system 
cases method expensive convex hull computation hard general impossible large data 
fact number inequalities system ax exponential 
method practical interests need remove lots redundant points clouds points small dimensions see 
standard method check conv uses linear programming lp technique 
lp problem formulated question 

pn 
find satisfying ipi 
problem objective function problem called linear feasibility problem 
look simpler problem solve polynomially equivalent general lp 
fact usually idea set equivalent lp solve 
specifically problem solution solution find satisfying pi 

geometrically meaning problem simple 
admits solution set hyperplane separating polytope conv inquiry point existence separation means 
solve problem set lp maximize subject pi 

inequality artificially added lp bounded solution 
easy see point non redundant optimal value lp strictly positive 
remove interior points conv large clouds points problem formally known redundancy removal 
set points say point redundant conv conv 
short redundant points unnecessary determine convex hull conv 
principle apply linear programming lp method remove redundant points 
amounts solving lps 
time complexity pure lp method polynomial additional techniques cla oss reduce size lps time consuming job large say 
technique useful remove obviously redundant points quickly preprocessing 
works small dimensions probably 
method picks nonredundant point set 
tk selecting nonredundant points done picking points maximizing minimizing linear function small relative say computation conv usually easy standard convex hull algorithm 
assume inequality system ax conv ax 
easy see point satisfying inequalities aq redundant 
repeat procedure different set nonredundant points long removes sufficient number redundant points 
efficient algorithm remove redundant inequalities system linear inequalities problem essentially equivalent redundancy removal point sets 
transform describe direct method 
ax system inequalities variables 
xd want test subsystem inequalities ax implies inequality inequality redundant removed system 
linear programming lp formulation checking straightforward maximize subject ax 
inequality redundant optimal value equal successively solving lp untested inequality remaining obtain equivalent non redundant system 
discussed able remove redundant inequalities technique dual form 
ax system high redundancy 
step select small subsystem non redundant inequalities original system 
typically system contains inequalities small say 
second step compute extreme points 
assume bounded generalize technique unbounded case 
known vertex enumeration computation 
clearly contains feasible region ax 
final step test original inequality satisfied extreme points rays 
inequality redundant subsystem redundant original system 
efficient algorithm compute intersection polytopes 
pk input polytopes pk polytope want compute 
problem computing needs specified 
representation input output 
input polytopes polytopes inequalities intersection represented union inequality systems 
get minimal intersection just redundancy removal section 
get minimal representation intersection vertex enumeration problem explained section 
interesting case input output polytopes polytopes vertices redundant points 
primitive way solve problem consists steps generate minimal representations input polytopes solve vertex enumeration problem union representations 
naive approach satisfactory small dimensions complicated polytopes 
polynomial algorithm special case input general position fll 
algorithm practical general position assumption easily simulated general case 
remarked dual version problem compute minimal representation convex hull polytopes 
fll treats dual problem 
efficient algorithm compute volume convex polytope known computing volume polytope polytope hard see df 
theoretically efficient randomized algorithms approximate volume convex body ls implementation available 
comparative study bef various volume computation algorithms convex polytopes 
indicates single algorithm works different types polytopes 
near simple polytopes triangulation algorithms efficient 
near simplicial polytopes sign decomposition algorithms better 
see justification claims 
voronoi diagram delaunay triangulation cell complex 
triangulation 
cell complex simply complex set convex polyhedra called cells satisfying conditions face cell cell cells intersection common face 
simplicial complex cell complex cells simplices 
body complex union cells 
subset body simplicial complex said triangulation finite set points triangulation simplicial complex conv 
voronoi diagram see 
set distinct points voronoi diagram partition polyhedral regions vo 
region vo called voronoi cell defined set points closer points precisely vo dist dist dist euclidean distance function 
different distance functions define various variations voronoi diagrams discuss 
set voronoi cells faces forms cell complex 
vertices complex called voronoi vertices extreme rays unbounded edges voronoi rays 
point nearest neighbor set nb set points closest euclidean distance 
alternatively define point voronoi vertex nb maximal nearest neighbor sets 
order compute voronoi diagram construction important 
point consider hyperplane tangent paraboloid rd xd hyperplane represented xd 
replacing equality inequality point obtain system inequalities denote ax 
polyhedron solutions system inequalities lifting voronoi diagram higher dimensional space 
words projecting polyhedron original space obtain voronoi diagram sense projection facet associated exactly voronoi cell vo 
vertices extreme rays project exactly voronoi vertices rays respectively 
delaunay triangulation see 
set points convex hull conv nb nearest neighbor set voronoi vertex called delaunay cell delaunay complex triangulation partition convex hull conv delaunay cells voronoi vertices faces 
delaunay complex general triangulation triangulation input points general position nondegenerate points equivalently point nearest neighbor set elements 
delaunay complex dual voronoi diagram sense natural bijection complexes reverses face inclusions 
direct way represent delaunay complex just voronoi diagram 
fact uses paraboloid xd called lower hull lifted points represents delaunay complex 
precisely conv unit vector component 
unbounded convex polyhedron consisting conv nonnegative shifts upper direction nontrivial claim boundary complex projects delaunay complex facet parallel vertical direction delaunay cell coordinate ignored delaunay cell represented way 
computing delaunay complex voronoi diagram 
mean available software 
set points computing voronoi diagram normally means generate set voronoi vertices computing delaunay complex essentially thing 
voronoi vertices generated nearest neighbor sets nb voronoi vertices easily computed fact algorithms generating voronoi vertices computes nearest neighbor sets time 
complexity computing voronoi diagram understood general 
example known algorithm runs polynomial size input output 
easier nondegenerate case algorithm known reverse search algorithm runs time nd 
dimension fixed particular analyse complexities various type algorithms terms input size 
plane log algorithms optimal fixed incremental algorithm see ge chapter 
large number vo output 
tight upper bound sei 
bound may far estimate expected behavior number output typically grows exponentially computation expected heavy 
take caution delaunay voronoi computation 
fact know quite people tried voronoi diagram computation codes order accomplish simpler task 
waste time computer resources leads prohibitively hard computation appropriate mathematical techniques resolves problem instantly 
example computations simpler solved linear programming techniques section points check voronoi cells adjacent voronoi diagram see 
point find delaunay cell containing see 
natural way compute voronoi diagram computing vertices extreme rays polyhedron 
ignoring component vertices obtain voronoi vertices 
sample session cdd consider simple dimensional case 
principle session computation time depends heavily size 
step write system linear inequalities variables explained xd 
example denote polyhedron solutions satisfying inequalities 
prepare input file cdd 
file polyhedra format system straightforward essentially codes coefficients system 
filename vo ine representation integer incidence input adjacency lines incidence input adjacency options cdd 
necessary listing vertices polyhedron generate nearest neighbor sets adjacency voronoi cells 
running cdd commands ine ine obtain files vo ext extreme points rays vo iad adjacency facet inequalities vo ecd incidence extreme points rays inequalities 
note runs rational exact arithmetic runs floating point arithmetic 
runs faster may give correct answer 
file vo ext final result number vertices rays rational hull output contains vertices extreme rays unbounded polyhedron row starting represents vertex 
second row represents vertex 
row starting represents extreme ray row represents ray 
ignoring components obtain set voronoi vertices voronoi rays 
option incidence cdd outputs vo ecd file row corresponds row vo ine file 
example second data says second data vo ine file voronoi vertex nearest neighbor set 
set corresponds delaunay cell 
similarly row indicates ray output vo ine file determined th halfspaces 
th halfspace artificial corresponding infinity 
ray determined input points going infinity 
index sets triples case containing infinity determine delaunay cells containing correspond voronoi rays 
look vo iad file file contains graph structure delaunay complex equivalently adjacency voronoi cells voronoi diagram 
line file says point adjacent neighbors point artificial infinity point considered adjacent input point voronoi cell unbounded 
remarked graph information computed efficiently linear programming 
see 
possible compute adjacencies voronoi cells voronoi diagram efficiently 
done efficiently linear programming lp importantly done large scale problems practically bounds size efficient lp solver 
method simple 
lifting technique described immediately gives idea 
recall voronoi diagram set points projection polyhedron space components 
xd 
simplicity denote ax matrix vector 

consider ith facet fi fi bi ai facets fi fj called adjacent intersection fi fj facet dimension 
equivalent definition adjacent facet fi larger facet fj removed polyhedron jth inequality removed system 
easy see voronoi cells vo vo adjacent corresponding facets fi fj adjacent polyhedron formulate lp distinct 
minimize bj aj subject bi ai equal jth component bj 
new inequality system simply modification original system obtained relaxing jth inequality little bit 
important definition fj fi adjacent objective value negative optimum solution 
formulated voronoi adjacency computation lp problem 
gain lp adjacency computation computing voronoi diagram 
lot 
hard exaggerate lp fact lp solvable polynomial time associated voronoi computation exponential standard simplex method time complexity solving lp polynomial practical complexity roughly nd 
sample session cdd cdd setup computing adjacency voronoi cells quite simple 
consider example 
input point write inequality system facet fi ax bi aix writing relaxed inequality 
example representation real negative th inequality facet listing inequality negative forth inequality force forth inequality equality 
code cdd option called facet listing 
apply option facet cdd check inequalities redundant essential associated lp inequality discussed inequality th th program cdd output file facet listing chosen 
means essential means redundant 
simply ignore th th row lists numbers colons 
consider set essential constraints set indices voronoi cells adjacent th cell 
course adjacency coincides adjacency input points delaunay triangulation 
see 
possible compute edges delaunay complex triangulation essentially question computing adjacencies voronoi cells see 
possible determine delaunay cell containing point efficiently 
possible find nearest point set associated delaunay cell containing point discussed section delaunay complex represented convex hull appropriately lifted points non vertical facets coincide delaunay cells projected original space 
problem determining delaunay cell containing point reduced finding facet polyhedron shoot ray 
precise rd lower hull lifted points conv represents delaunay complex 
unit component 
vector denote general inequality variable vector inequality represent valid inequality see section satisfied points points shifted vertically upwards 
inequality inequality equivalent yd 
delaunay cell projection non vertical facet looking inequality satisfying yd 
scaling yd may assume yd 
point 
determining delaunay cell containing equivalent finding inequality hit precisely find non vertical facet inequality point corresponding hyperplane half line highest possible 
substituting yd obtain denotes vector coordinate yd 
lp formulation minimize subject optimal solution lp may determine facet general simplex method returns optimal basic solution determines facet inequality case 
delaunay cell containing determined set points corresponding inequalities satisfied equality optimal solution 
lp solution degenerate dual variables positive dual optimal solution coincides set 
important note lp unbounded 
unbounded easily shown delaunay cell convex hull certificate unboundedness induces hyperplane strongly separating 

sample session cdd cdd reasonable lp code necessary step prepare lp file determination delaunay cell containing point consider example 
point lp file cdd representation rational minimize solution lp status dual pair optimal solutions 
primal solution dual solution optimal value facet inequality dual solution indicate points determine delaunay cell contains 
best upper bound numbers simplices delaunay triangulation 
see 
linear programming lp 
linear programming abbreviated lp find maximizer minimizer linear function subject linear inequality constraints 
precisely maximize subject bi 
aij rational matrix cj bi rational vector 
write lp matrix form maximize subject ax 
theoretically rational lp solvable polynomial time ellipsoid method see sch various interior point methods see kar 
known simplex method dantzig see dan chv known polynomial variants 
practice large lps solved efficiently simplex method interior point methods 
example easy standard unix station solve lp vertex enumeration convex hull computation size simply intractable 
commercial codes public codes available 
see lp faq fg 
excellent books lp textbook chv schrijver researcher bible sch 
polyhedral computation codes cdd cdd implementations double description method 
comments floating exact arithmetic 
efficient highly degenerate cases 
exact version slower 
remove redundancies input data built lp code 
library basic polyhedral conversion functions lp solvers 
compiled gmp rational mpq floating point arithmetic 
lrs avi implementation reverse search algorithm af 
parallel version prs developed see 
comments exact arithmetic efficient nondegenerate cases 
uses little memory available code deal problems generating huge output say vertices facets 
pd mar implementation primal dual algorithm 
comments exact arithmetic efficient dually nondegenerate cases 
qhull bdh bdh implementation beneath method see ede mul dual dd method 
comments floating arithmetic handles numerical problems 
highly efficient nondegenerate cases 
user call 
porta cl implementation fourier motzkin elimination method zie 
comments efficient combinatorial polytopes 
guarantees correct numerical results long double precision integer arithmetic overflow 
list integer solutions polytope 
gj computational environment algorithmic treatment polytopes polyhedra 
generate convex polytopes various computations convex polyhedra 
uses cdd porta lrs representation conversions 
extendable writing rules generate new structures data associated polyhedra 
implementation backtrack vertex enumeration algorithm polytopes bl 
comments general straightforward backtrack algorithm vertex enumeration problem solve np complete decision problems shown flm 
situation different polytopes problem strongly polynomially solvable 
code generate points general polytope 
relies commercial lp solver cplex 
pointers programs geometric computations stored ame eri 
linear programming check linear programming faq fg 
lists public open source commercial codes 
author expresses sincere dr vera read earlier version faq carefully numerous errors provided helpful suggestions 
abs avis bremner seidel 
convex hull algorithms 
computational geometry theory applications 
af avis fukuda 
pivoting algorithm convex hulls vertex enumeration arrangements polyhedra 
discrete comput 
geom 
af avis fukuda 
reverse search enumeration 
discrete applied mathematics 
ame amenta 
directory computational geometry 
www geom uiuc edu software 
avi avis 
lrs homepage 
cgm cs mcgill ca avis lrs html 
bdh bradford barber david dobkin hannu 
quickhull algorithm convex hulls 
acm trans 
math 
softw december 
bdh barber dobkin 
qhull version 
program report available www qhull org 
bef enge fukuda 
exact volume computation convex polytopes practical study 
kalai ziegler editors polytopes combinatorics computation seminar pages 
birkh user 
bremner fukuda 
primal dual methods vertex facet enumeration 
proc 
th annu 
acm sympos 
comput 
geom pages 
bl 
vertex set polytope strongly enumerable 
computational geometry 
br fukuda nievergelt 
parallel search bench applications 
technical report eth zurich may 
ller tichy 
approximation convex bodies 
math 
ann 
bp ny polytopes facets 
manuscript nyi institute mathematics hungarian academy sciences 
www renyi hu 
cch charnes cooper henderson 
linear programming 
john wiley sons 
cha chazelle 
optimal convex hull algorithm fixed dimension 
discrete comput 
geom 
chv 
linear programming 
freeman 
ck kapur 
algorithms convex polytopes 
assoc 
comput 
mach 
cl christof bel 
porta polyhedron representation transformation algorithm ver 

www zib de optimization software porta 
cla clarkson 
output sensitive geometric algorithms 
proc 
th annu 
ieee sympos 

comput 
sci pages 
cm com clarkson pubs html 
dan dantzig 
linear programming extensions 
princeton university press princeton new jersey 
df dyer frieze 
complexity computing volume polyhedron 
siam comput 
dye dyer 
complexity vertex enumeration methods 
math 
oper 
res 
ede edelsbrunner 
algorithms combinatorial geometry 
springer verlag 
eri erickson 
computational geometry pages list software libraries codes 
cs uiuc edu 
fg gregory 
linear programming frequently asked questions lp faq 
www unix mcs anl gov otc guide faq linear html 
fll fukuda th 

extended convex hull 
bremner editor proceedings th canadian conference computational geometry pages 
flm fukuda th 

analysis backtrack algorithms listing vertices faces convex polyhedron 
computational geometry 
ps file available ftp ftp math ethz ch pub fukuda reports ps gz 
fo freund orlin 
complexity polyhedral set containment problems 
math 
programming 
fr fukuda 
combinatorial face enumeration convex polytopes 
computational geometry 
fukuda 
fukuda homepage mcgill university montreal canada 
www cs mcgill ca fukuda 
fukuda 
cdd homepage 
mcgill university montreal canada 
www cs mcgill ca fukuda software cdd home cdd html 
ge goodman rourke eds 
handbook discrete computational geometry 
crc press 
gj 
version 
www math de www math tu berlin de 
kal kalai 
linear programming simplex algorithm simple polytopes 
math 
programming ser 

lectures mathematical programming lausanne ps file available www ma huji ac il kalai papers html 
kar karmarkar 
new polynomial time algorithm linear programming 
combinatorica 
khachiyan 
polynomial algorithm linear programming 
nauk sssr 
khachiyan 
complexity polytope volume computation 
pach editor new trends discrete computational geometry pages 
springer verlag berlin 
ls lovasz simonovits 
random walks convex body improved volume algorithm 
random structures algorithms 

vertex enumeration polytopes ver 

www math tu bs de mo research html 
mar 
pd implementation primal dual 
code available www cs ca profs bremner pd 
mcm 
maximum number faces convex polytope 
xvii 
motzkin raiffa gl 
thompson 
double description method 
kuhn tucker editors contributions theory games vol 

princeton university press princeton ri 
ms shephard 
convex polytopes upper bound conjecture 
cambridge university press 
mul mulmuley 
computational geometry algorithms 
prentice hall 
rourke 
comp graphics algorithms faq 
www faqs org 
oss th 
ottmann 
enumerating extreme points higher dimensions 
mayer puech editors stacs th annual symposium theoretical aspects computer science lecture notes computer science pages 
springer verlag 
rot rote 
degenerate convex hulls high dimensions extra storage 
proc 
th annu 
acm sympos 
comput 
geom pages 
roos terlaky ph 
vial 
theory algorithms linear optimization interior point approach 
john wiley sons 
sch schrijver 
theory linear integer programming 
john wiley sons new york 
sei seidel 
constructing higher dimensional convex hulls logarithmic cost face 
th stoc pages 
sei seidel 
exact upper bounds number faces dimensional voronoi diagram 
sturmfels editors applied geometry discrete mathematics victor klee festschrift dimacs series discrete mathematics theoretical computer science pages 
amer 
math 
soc providence ri 
seymour 
note hyperplane generation 
combin 
theory series 
yap yap 
fundamental problems algorithmic algebra 
oxford university press new york 
zie ziegler 
lectures polytopes 
graduate texts mathematics 
springer verlag 

