ieee transactions information theory vol 
may universal algorithm sequential data compression jacob ziv fellow ieee abraham lempel member ieee universal algorithm sequential data sion 
performance investigated respect nonprobabilistic model constrained sources 
compression ratio achieved proposed universal code uniformly ap proaches lower bounds compression ratios attainable block variable codes variable block codes designed match completely specified source 
situations arising digital data processing encountered strings data display various structural regularities subject certain constraints allowing storage time saving techniques data compression 
discrete data source problem data compression identify limitations source second devise coding scheme subject certain performance source 
criteria best compress relevant source parameters identified problem reduces minimum redundancy coding 
phase problem received extensive treatment literature 
priori knowledge source characteristics available statistical tests impossible unreliable problem data compression considerably complicated 
order overcome difficulties resort universal coding schemes coding process interlaced learning process varying source characteristics 
coding schemes inevitably require larger working memory space generally employ performance criteria appropriate wide variety sources 
describe universal coding scheme applied discrete source performance comparable certain optimal fixed code book schemes designed completely specified sources 
lack adequate criteria attempt rank proposed scheme respect possible universal coding schemes 
broad class sources defined section iii derive upper bounds compression efficiency attainable full priori knowledge source fixed code book schemes manuscript received june revised july 
pre ieee international symposium information theory ronneby sweden june 
ziv department electrical engineering technion israel institute technology haifa israel 
bell telephone laboratories murray hill nj 
lempel department electrical engineering tech israel institute technology haifa israel 
research center ma 
show efficiency universal code priori knowledge source approaches bounds 
proposed compression algorithm adaptation simple copying procedure discussed lo study complexity finite sequences 
basically employ concept encoding segments source output maximum length copying buffer containing past output 
transmitted codeword consists buffer address length copied segment 
predetermined initial load buffer information contained codewords source data readily reconstructed de coding process 
main drawback proposed algorithm susceptibility error propagation event channel error 
ii 
compression algorithm proposed compression algorithm consists rule parsing strings symbols finite alphabet substrings words lengths exceed pre scribed integer coding scheme maps substrings sequentially uniquely code words fixed length alphabet word length bounds allow bounded delay encoding decoding related log log xl integer smaller logarithm base cardinality alphabet length buffer employed encoding process stores latest symbols emitted source 
exact relationship discussed section iii 
typically 
line decoding buffer similar length employed decoding 
describe exact mechanics parsing coding procedures need preparation way notation definitions 
consider finite alphabet cy symbols say cr 
string word length ordered tuple sk symbols indicate substring starts position ends position write 
sj take null string length zero 
concatenation strings forms new string qr 
ieee transactions information theory may lj called prefix lj proper prefix 
proper prefix lj string positive integer denote largest non negative integer sg position max 
substring sg called extension integer called pointer reproduction 
example 
similarly 
reproducible extension pointer 
describe encoding process denote string symbols emitted source 
sequential encoding entails parsing successive source words sz 
assigning codeword ci si 
bounded delay encoding length si equal predetermined parameter 
ci fixed length 
initiate encoding process assume output source preceded string zeros store string bi zs buffer 
reproducible extension zs si cl 
de termine source word shift tl symbols buffer feed sym obtain string bz bi ci ai 
look reproducible extension bs bs set sz es symbol bz 
general bi denotes string source symbols stored buffer ready determine ith source word si successive encoding formally described follows 
initially set bi zero string length followed symbols having determined set si bi prefix length ei reproducible extension 
pi reproduction pointer determine si codeword cl si ci cii radix representation pi log radix representation ei log cis symbol si symbol occupying position 
bi 
total length cl ci log log accordance 
update contents buffer shift symbols occupying ei positions buffer feeding ei symbols source obtain bi ci hi ei hi position occupied symbol 
completes description encoding process 
easy verify parsing rule defined guarantees bounded positive source word length iteration fact allowing radix representation ei log symbols 
possible represent pi log symbols decoding performed simply reversing encoding process 
employ buffer length store latest decoded source symbols 
initially buffer loaded zeros 
di 
dn denotes contents buffer cl de coded si ei di obtained di ci follows 
determine pi log log symbols 
apply ci shifts feeding contents stage pi stage 
shifts change buffer contents 
dj dh 
dj 
similarly ci jth shift transform bij 
dj ii dfl 

il ls 
ei shifts completed shift feeding symbol ci stage buffer 
easy verify resulting load buffer contains si positions 
example serve illustrate algorithm 
consider ternary input string encoder parameters 
parameters chosen simplify illustration reflect design considerations discussed section iii 
corresponding codeword length logs logs 
initially buffer loaded zeros fol digits 
determine source word si find longest prefix bi lq ci bi ziv lempel sequential data compression matches substring starts position set si bi 
easily seen longest match case bi lo ll si 
pointer step integer choose set 
digit radix representation cii cl 
cis equal symbol si codeword si ci 
obtain buffer load bs second step shift di digits feed digits input string details steps tabulated pointer positions indicated arrows source words si indicated italic substring corresponding buffer load typically source defined specifying fi nite set strings forbidden appear 
substrings elements belonging am exceeding mo source associate sequence 
parameters called parameters log 
clear clear mh nondecreasing function sequence parameters usually avoid possible confusion se quel postulate property additional defining property source 
require log nonincreasing function bz cz bs lower bounds compression ratio consider compression coding scheme source bq cq 
employs block variable bv code book pairs xi yi words xi encoding infinitely long string iii 
code carried parsing blocks section investigate performance proposed compression algorithm respect nonprobabilistic model constrained information sources 
defining source model derive lower bounds length replacing block xi corresponding codeword yi 
assumed course code book exhaustive respect uniquely 
compression ratios attainable block variable variable block codes full knowledge source show compression ratio achieved universal code approaches bounds 
definition source model ly symbol alphabet max yi log lb 
denote set finite strings lsi string positive integer compression ratio pi associated ith set substrings length contained pair code denote cardinality 
yi cl jj bv compression ratio source defined minimax value pi maximization word pairs code min 
consisting set cbv bv code books word pairs 
subset denote cardinality 
min max qv yi subset called source properties hold log lb contains unit length strings implies ss implies 
log means base logarithm ieee transactions information theory may record result lemma 
lemma lb log consider compression scheme employs variable block vb code book word pairs xi yi yi 
case compression ratio associated ith word pair remarks value context lemma satisfies definition lm lemma fol lows bounds lemmas essentially despite basic difference respective coding schemes 
second defining property source word bounds derived apply indefinitely long messages message may consist repeated appearances worst case word 
nonincreasing property pa rameters form derived bounds confirms intuitive expectation increase size employed code book causes decrease lower bound attainable compression ratio 
similarly vb compression ratio pve defined minimax value pi word pairs performance proposed algorithm set cv vb code books word proceed derive upper bound 
pression ratio attainable algorithm section ii 
lemma consider worst case source message length prospective buffer length hkm maximal word length 
bound obtained lm max lj 
case obviously apply messages length greater 
assume parameters proof may assume loss generality source consideration known designer code consideration encoder 
discuss universal performance proposed algorithm show restricted 
priori knowledge source cv choosing buffer length inte max pi xl ger form mcu mu nt exhaustive respect ed uniquely nt arn mm log 
definition lm inequality lah integer part log ch property obtain 
lm specific determination value parameter left see proof theorem 
reasoning motivates log max pi form tions 
clear subsequent deriva lm consider string denote number words parsed algorithm lm encoding process 
recalling follows cve max pi lm 
words mapped codeword fixed length see follows compression ratio associated string pw 
ziv lempel sequential data compression compression ratio attainable algorithm source lc max 
sec ls suppose algorithm parses 
qn 
step encoding cycle follows qi qj qi qj 
note qj determined jth cycle encoding process qi stored buffer qj longest substring buffer precedes qj prefix qj length qj 
denoting number qi wehave 
argument property source km 
qn mk fixed clear mating values expense overestimate value am ob tain note despite rater rudimentary overestimation upper bound quite tight fact source word longer immediately implies 
state result 
theorem buffer length source known parameters chosen og log proof log log obtain rn cp log log 

am am ii 
log log ch 
lth ki am de obtain log lh rnk 
obtain kit ne 
substituting result obtain bound ne am il de theorem 
lo yields remarks value decreases tn mu quently compression ratio approaches value parameter associated second ffm largest word length processed encoder 
find integer 
magnitude acceptable de ieee transactions information theory may determines operational range 
code maps source words variable length codewords fixed length adopt comparison best vb code cvs discussed subsection iii 
counterpart block length write log lm code book size lower bound see lemma compression ratio cvs 
sufficiently large tl ws follows 
turn investigate universal performance proposed algorithm performance priori available 
knowledge source compressed hl hl cl positive integer satisfying pl loge log cl lk 
consider encoder el employs buffer length nl hl cl ob tained setting cl hl maximal word length equal 
follows theorem encoder applied source tl hl resulting compression ratio pl ul satisfies pi led hl 
suppose hl chosen fit pre scribed upper value hl prospective com pression ratio range po pl adjustment parameter determined 
shown encoder el matched exactly upper value prospective sion range 
order accommodate range propose employ slightly larger encoder eo buffer length nl ei nl cl parameters el integer greater solution ho equation satisfies nl tv lo ho po ho po 
noting lo nl el fixed clear increases ho decreases fact ee er imply po po po 
exist ho de cl satisfy 
analogy clear ee applied source ho resulting compression ratio po satisfies po uo hi ho 
po po 
po po po 
ho arbitrarily close po conse quently encoder es matches closely desired lower po compression range 
theorem source matched en coder achieves compression ratio range po 
compression ratio po achieved ct eo satisfies po ax 
el typically ho 
proof prove theorem shall consider obviously worst case applying eo source ui matched encoder el realizes pl po ul denote compression ratio achievable eo applied ui 
po leo 
ri ci ri ni wi ni uj maximum number words string uj ni parsed el 
cl er easy verify ne ui nl nl ud nl ud po ul ll spl nl el te el cl ll rb el ui ri ki assertion analogous lo theorem 
ieee transactions information theory vol 
may obtain complexity codeword length compression efficiency comparable po pl rbg kl 
optimal variable block match source 
code book designed obtain upper bound observe eo te ho reduces nl el cl el cfe hl ho ho 
max 
ho exponent right side nonnegative hl ho 
case theorems demonstrate efficiency uni proposed algorithm 
show encoder designed operate prescribed compression range performs practically designed match specific compression ratio range 
binary sliding block codes huffman method construction minimum redundancy codes proc 
ire vol 
pp 

karp minimum redundancy coding discrete noiseless channel ire trans 
inform 

theory vol 
pp 
jan varn optimal pp 

variable length codes inform 
contr vol 
perl gary efficient generation optimal prefix code equiprobable words unequal cost letters acm vol 
pp 
april 
lempel cohn algorithm optimal prefix parsing noiseless memoryless channel ieee trans 
inform 
theory vol 
pp 
march 
jelinek schneider 
variable block coding ieee trans 
inform 
theory vol 
pp 
nov 
gallager information new york wiley 
theory reliable communication 
ziv coding sources unknown statistics part proba bility encoding error ieee trans 
inform 
theory vol 
pp 
may 
pi davisson universal noiseless coding ieee trans 
inform 
theory vol 
pp 
nov 
lempel ziv complexity finite sequences ieee trans 
inform 
theory vol 
pp 
jan 
ill optimal coding case unknown changing message statistics prob 
inform 
vol 
pp 

toby berger senior member ieee joseph ka yin lau sliding block codes intriguing alternative block codes development classical information theory 
fundamental analytical problem associated sliding block code sbc source encoding respect fidelity criterion determining entropy coder output 
methods calculating bounding output entropy sbc 
local global behaviors designed sbc discussed 
called coder eliminates isolated zeros binary input plays central role 
provides specific example application techniques developed calculating bounding output entropy serves medium ob taining indirect insight problem characterizing manuscript received april 
supported part national science foundation gk john simon memorial foundation fellowship 
portions ieee information theory workshop massachusetts june 
authors school electrical engineering cornell university ithaca ny 
sbc 
easily implementable sbc subclass introduced outputs calculated simple logic circuitry 
study subclass shown closely linked theory group codes 
source coding development subject fidelity theory criterion dealt exclusively block coding mapping consecutive nonoverlapping fixed length blocks source data called code book containing constrained number entries 
fundamental theorems rate distortion theory relate optimal source code performance information theoretic minimization involve complicated random coding arguments general cases 
situations block coding structures exceedingly difficult implement 
