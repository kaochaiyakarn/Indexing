landmark selection vision navigation pablo university toronto robert sim university british columbia object recognition community yielded class interest point features stable significant changes scale viewpoint illumination making ideally suited landmark navigation 
features may visible view robot environment features necessary estimate robot position orientation 
address problem automatically selecting entire set features visible robot environment minimum optimal set robot navigate environment 
specifically decompose world small number maximally sized regions position region small set features visible 
introduce novel graph theoretic formulation problem prove np complete 
introduce number approximation algorithms evaluate synthetic real data 
domain exemplar opposed generic object recognition computer vision community adopted class interest point features 
features typically encode description image appearance neighbourhood interest point detected corner scale space maximum 
appeal features appearance predecessors invariance changes illumination scale image translation rotation minor changes viewpoint rotation depth 
properties ideally suited problem landmark navigation 
define set invariant features uniquely define particular location environment features turn define visual landmark 
features example adopt localization approach proposed basri rivlin wilkes lc linear combination views technique 
training phase robot manually shown views landmark environment robot navigate 
views positions acquired form database landmark views 
runtime robot takes image environment attempts match visible features various landmark views stored database 
match landmark view robot compute position orientation world 
major challenges approach 
viewpoint may hundreds thousands features 
union pairs landmark views may yield intractable number distinguishable features indexed order determine landmark robot may ali shokoufandeh drexel university sven dickinson university toronto viewing 
fortunately small number features required model view compute robot pose 
hundreds features visible model view small subset keep 
second challenge automate process robot automatically decide optimal set visual landmarks navigation 
constitutes landmark 
landmark distinguishable landmarks single floor tile example constitute bad landmark repeated floor widely visible landmark visible single location rarely encountered persistent 
goal formulated partitioning world minimum number maximally sized contiguous regions set features visible points region 
important connection challenges 
specifically region inside points see set features second challenge happens reduce set features visible point challenge 
represents weaker constraint region size region increase yielding smaller number larger regions covering environment 
mentioned earlier lower bound number features define region pose estimation algorithm degree want solution 
combining challenges arrive problem addressed set views acquired set sampled positions environment partition world minimum set maximally sized regions positions region set features visible defined pose estimation procedure overconstrained version 
introducing novel graph theoretic formulation problem proceed prove intractability 
absence optimal polynomialtime algorithms introduce different approximation algorithms solving problem 
constructed simulator generate thousands worlds varying conditions allowing perform exhaustive empirical evaluation algorithms 
comparison algorithms synthetic environments adopt effective algorithm test real world imagery real environment 
ii 
related previous visual robot navigation pointbased features little attention size landmark database number landmark lookups required localization 
lowe se little scale rotation invariant features landmarks extracted scale invariant feature transform sift 
robot automatically updates landmark map reliable landmarks seen current position 
position robot estimated odometry robot initial guess improved map 
vision estimate locations landmarks regions confidence reliable landmarks stored dense database 
view approach sim dudek consists line collection monocular images sampled space poses 
landmarks consist pca encodings neighbourhoods salient points images obtained attention operator 
landmarks tracked contiguous poses added database stable region reasonable size 
localization performed linear combination views technique finding matches visible landmarks database 
linear combination views technique introduced ullman basri applied vision navigation basri rivlin wilkes 
original applications lc method features comprising model views typically linear features extracted image 
approaches demonstrate robot localization performed set landmark observations consider issue eliminating redundancy landmark map times grow contain tens thousands landmark models 
authors considered problem landmark selection purpose minimizing uncertainty computed pose estimate 
sutherland thompson demonstrate precision pose estimate derived point features dependent configuration observed features provide algorithm selecting appropriate set observed features compute pose estimate 
maximizing precision clearly important issue concerned primarily selecting landmarks widely visible 
iii 
problem definition line training phase images collected known discrete points pose space accessible vertices points virtual grid overlaid floor environment 
collection known pose robot recorded image set interest pointbased features extracted stored database 
grid points know exactly features database visible 
conversely algorithms easily extended select sets features fulfill additional constraints 
fig 

simple world square perimeter green square blue obstacle center features red circles perimeter 
visibility areas features 
covering world features 
covering world features 
feature database know grid points visible 
consider example shown 
shows simple world having square perimeter square obstacle center features evenly distributed perimeter 
figures area visibility features shown coloured region 
feature visibility areas computed set images acquired set grid points world constitute input problem 
view localization approach current pose robot estimated input locations small number features current image matched locations training images 
set simultaneously visible features constitutes landmark 
minimum number features necessary task depends method employed pose estimation 
example features localization basri rivlin linear combination views technique uses weak perspective projection imaging model 
essential matrix method properly models perspective projection imaging process requires features estimate pose :10.1.1.33.4540
reduce effect noise larger number features solution 
presents trade accuracy estimation size features landmark 
requiring larger number features localization larger landmarks yield better pose estimation 
larger constrained landmark smaller region visibility 
define parameter number features employed achieve pose estimation desired accuracy number features constituting landmark 
robot localization position possible features extracted image taken position exists subset features exist database simultaneously visible known locations 
large environment database may large search may costly 
image feature search entire database matching feature matches features simultaneously visible separate positions grid points 
recalling typically far number features image approach reducing search complexity prune features database subject existence minimum features visible point features visible positions 
unfortunately complex optimization problem solution maintains features single database leading potentially costly search 
promising approach partition pose space number regions sets contiguous grid points region features simultaneously visible points region 
partitioning world turn partitions database features set smaller databases corresponding robot sees spatially coherent region 
return simple world depicted 
assuming single feature sufficient reliable navigation possible decomposition world set regions pose world sees feature achieved features shown 
clear features set needed cover world removing yield portion world remaining features visible meaning robot blind area 
decomposition optimal decompositions regions possible 
goal find minimum decomposition world case regions corresponding areas visibility features symmetric solution features shown 
minimum set maximally sized regions desired output allows discard database features 
features seen point pose space reliable navigation entire world possible 
partitioning world regions offers additional advantages 
navigating inside region corresponding features easily tracked images robot sees 
expected features visible current image may indicate robot left region navigating entering new region 
case visible features vote regions belong membership relationship computed offline 
new region robot moving votes 
input features matched model features defining candidate regions 
approach provides solution kidnapped robot problem robot blindfolded released arbitrary position estimate current pose 
iv 
graph theoretic formulation formally define minimization problem consideration introduce terms 
definition set positions robot time called pose space 
discrete subset pose space images acquired modeled undirected planar graph node corresponds sampled pose nodes adjacent corresponding poses contiguous space 
definition set computed features collected images 
visibility set set fv features visible pose definition world instance consists tuple fv graph models discrete set sampled poses set features fv collection visibility sets 
definition set poses said region iff poses path completely contained 
vh vi vi definition set regions 
rd said decomposition iff ri definitions define set inputs outputs interest problem 
view optimization problem world instance fv create minimum cardinality addition desirable solution optimization problem satisfy variety properties 
property interest ensuring minimum amount overlap regions decomposition 
purpose overlap ensure smooth transitions regions different sets features visible robot 
region features start fade border robot ensured boundary region new region landmark clearly visible 
definitions formalize property definition neighborhood pose set length shortest path nodes definition decomposition 
rd said overlapping iff ri 
definitions hand problem stated follows definition number features required reliable localization position localization method employed 
minimum overlapping region decomposition problem world instance fv consists finding minimum size overlapping decomposition 
rd regions ri fv note solution size problem total number features needed reliable navigation bounded consider complexity theorems indicating reduced solution reduced transformed back solution general 
theorems states overlapping decomposition features visible region certain world instance overlapping decomposition related problem features visible region 
theorem guarantees solution exists solution related 
second theorem states related solution solution presents method construct proofs theorems 
noted transformation back may create different overlapping decomposition cardinality decomposition step transformation remain optimality affected 
theorem 
rd overlapping decomposition world instance fv ri fv 

rd ri ri ri overlapping decomposition world instance fv fv fw fv ri 
theorem 
rd solution world instance fv 
ri solution world instance fv transformation applied theorem overlapping overlapping solution effectively shrinks regions reduces visibility set vertex correspond features visible entire neighborhood theorem assumes collection visibility sets fig 

instance minimum set cover problem input defined reduction overlapping instance problem overlapping instance transformation described theorem 
complexity presents instance 
optimal solution instance fact solution unique 
instance set cover decision problem integer consists determining set cover elements size decision version scp proven np complete karp 
theorem decision problem np complete 
proof clear np world instance fv 
rd verified time polynomial overlapping decomposition ri fv show instance scp reduced instance time polynomial 
instance 
sm minimum set cover problem construct world instance fv way element note graph generated planar 

fm fi si fv dummy vertex proof ensure elements belong subset si part region decomposition virtue mutual connection visibility set fv transformed problem instance corresponds list sets si scp instance element member 
show solution size build sc size 
rd solution transformed instance ri region 
ri ri fv 
claim 
cd ci ri fv set cover original problem returns element lexicographical order non empty set 
ci choice element show np complete 
proof reduction minimum set cover problem 
definition set set subsets 
sm minimum set cover problem consists finding minimum set element covered si si strictly speaking region reduction boundary effects boundary due definition 
ri fv arbitrary yields valid solution 
note ci defined ri fv 
proof show 
ci definition ci affirm ci fj 
ci sj ci definition fv fv ri ri ri definition ci ci ri ri ci ri ci ci ci show set cover size decomposition size 

set cover original scp instance 
claim 
overlapping region decomposition fv proof show region region definition graph connected nodes ri 
fv 
set cover 
sj sj fj fv vi 
heuristic methods previous section established intractability problem 
fortunately full power optimal decomposition necessary practice 
decomposition small number regions sufficient practical recall region corresponds subset vertices path exists vertices lies entirely purposes 
developed tested different greedy approximation algorithms divided classes realize decomposition 
class algorithms decomposes pose space greedily growing new regions poses selected different criteria 
new region started growth step consists adding pose vicinity region largest set visible features common region 
growth continued adding new pose cause region visibility set cardinality pseudocode class algorithms shown 
algorithms implement different criteria selecting pose new region grown 
algorithms differ implementation line selects pose number features visible arg minu fu 
selects pose greatest number features visible arg fu 
randomly selects pose cases ties lines algorithm broken randomly 
algorithms take incremental approach defining features starting large region sees feature iteratively shrinking region additional features added 
resulting region added decomposition new region started process continued world covered 
algorithms select new region set poses widely visible feature taken set seen poses assigned region 
algorithms differ criteria defined shown figures respectively 
case algorithm just set features algorithm systematically selects set features commonly visible circular area centered pose number uncovered poses circular area certain fraction size circular area size set selected current class comprises algorithms differ treatment decomposition adding new region line 
algorithm leaves algorithm greedily eliminates regions long total number poses uncovered monotonically decreasing value 
initialized algorithm 
new region added updated minimum previous value number uncovered cells 
algorithm adapted algorithm appearing empirically shown achieve approximation results set cover problem 
notice discarding rule ensures number covered poses strictly increases iteration algorithm terminates 
algorithms assumption set poses feature visible form connected region intersection feature visibility areas connected region 
assumption true feature visibility areas simple convex 
experiments real data observed visibility areas features generally convex small holes 
number extracted features quite large afford exclude decomposition process features significant holes visibility regions 
algorithm may terminate leaving poses unassigned region 
process applied cover areas 
process equivalent algorithm step making equal set unassigned poses 
algorithms terminate solution minimal 
redundancy eliminated solutions discarding regions minimal solution obtained 
process greedily selects elimination region solution largest minimum overlapping count value min minimum number regions overlap pose contained region 
worst case running time complexity algorithm bounded algorithms bounded 
sampled poses world count visible features required number generally case poses lie close walls object boundaries areas located far visible object visibility range features 
reason set poses decomposed regions include coverable poses sampled poses visibility set sizes decomposition tries cover coverable poses may include large number regions total regions serve cover small holes covered larger regions 
holes generally lie areas size close leaving features choose 
order avoid inclusion regions covering small holes implementations algorithms add region decomposition number uncovered poses greater certain value 
vii 
results performed experiments synthetic real data 
synthetic data produced simulator randomly generates worlds set distributions world parameter 
world consists top view pose space defined polygon internal polygonal obstacles collection features presence small holes prevent reliable navigation 
general robot point number visible features advancing short distance directions get point assigned region 
input world fv output decomposition fv select see text repeat 
fu fv arg maxw fw fv fig 

algorithm input world fv output decomposition fv arg max fv fv fv purge see text fig 

algorithm input world fv output decomposition fv max nr fu nr arg max fv fv fv fig 

algorithm fw polygons external internal 
feature defined parameters angle range visibility determining span area floor feature visible 
example randomly generated world visibility area features illustrated 
independent tests algorithms synthetic data performed different world settings 
settings combined different feature visibility properties different shape complexities world obstacle boundaries 
types features having visibility ranges angular fig 

randomly generated world 
green polygon defines perimeter world 
blue polygons interior define boundaries obstacles 
small red circles polygons features 
illustration visibility areas selected features shown coloured regions 
regions avg region area features experiment settings fig 

results experiments synthetic data 
axes charts represent world settings experiments 
rectangular worlds settings irregularly shaped worlds settings 
type features settings type features settings 
axes correspond average value experiments total number regions average number poses region total number features decomposition 
left right bars setting correspond algorithms range degrees type angular range degrees type normally distributed mean variance 
classes shapes tested world obstacles irregular rectangular 
case irregular worlds number sides perimeter generated mixture distribution number obstacles distribution 
number obstacles rectangular world generated mixture distribution 
generated worlds average diameter feature visibility sampled pose space points spaced cm intervals 
parameters experiments overlapping features commonly visible region 
basri rivlin showed reliable localization accomplished linear combination model views method point correspondences current image stored model views 
allowed maximum area hole set poses average hole diameter 
parameter algorithm set 
shows results experiments synthetic data 
performance algorithm settings described compared terms number regions decomposition average area region decomposition size set formed union features commonly visible region decomposition 
value average computed set randomly generated worlds 
decomposition world took seconds algorithm 
unsurprisingly average size region strongly dependent stability defining features pose space 
expected total number regions decomposition increases average size regions decreases 
tables ii show number regions average number poses region respectively achieved algorithm setting averaged randomly generated worlds 
case worlds widely visible features settings best results terms minimum number regions decomposition achieved algorithm closely followed algorithms worlds visible features settings algorithm outperformed rest 
table average number regions decomposition setting table ii average number poses region setting applied rectangular worlds algorithms produced decompositions significantly regions top algorithms applied irregularly shaped worlds 
reasons fact considerably features fig 

regions decomposition real visibility data collected space sampled cm intervals 
visible average pose irregular worlds settings rectangular worlds settings seen table iii 
due fact range visibility feature spans symmetric field view direction perpendicular side world obstacle feature located 
mind features visible pose located sides perpendicularly facing pose sides pose location point perpendicularly projects inside line segment defining 
case rectangular worlds restricts features visible pose come sides 
irregular worlds just sides facing pose larger number features visible 
table iii average number features visible pose setting average number features took algorithm algorithm achieved best results synthetic data evaluation applied real feature visibility data collected space sampled cm intervals total visible features 
images taken camera fixed orientation looking forward features extracted lucas tomasi klt operator 
parameters decomposition regions decompositions seen 
larger gray area images regions corresponds set coverable poses 
seen union regions covers completely coverable area world 
simulations obtained fairly big regions seen table ii 
pose corresponds sampled area cm cm averages achieved best algorithm correspond region areas features type features type 
results achieved features visible small world features reduced visibility world interestingly divided regions exemplify method 
general applications large environments alternate class features visibility larger chosen 
pose shown table iii average number features visible pose order 
real image data number stable features visible pose order feature visibility range close simulated features type see example 
findings lead predict technique successfully find decompositions useful robot navigation real environments 
viii 
novel graph theoretic formulation problem automatically extracting optimal set landmarks environment visual navigation 
intractable complexity prove motivates need approximation algorithms algorithms 
systematically evaluate test simulator vary shape world number shape obstacles distribution features visibility features 
promising algorithm tested real world data encouraging results 
acknowledgments authors wish individuals contributed earlier versions including david wilkes ehud rivlin ronen basri cowan james david rosenberg caroline 
authors gratefully acknowledge support nserc md robotics onr 
lowe object recognition local scale invariant features iccv greece pp 

se lowe little mobile robot localization mapping uncertainty scale invariant visual landmarks inter 
robotics research sage publications vol 
pp 

dudek robust place recognition local appearance methods icra san francisco ca usa pp 

sim dudek learning evaluating visual features pose estimation iccv greece pp 

jepson multi scale phase local features cvpr usa pp 

ronen basri ehud rivlin localization homing combinations model views ai vol 
pp 

wilkes dickinson rivlin basri navigation network images icpr pp 

sim shokoufandeh dickinson technical report optimal landmark acquisition vision navigation www cs toronto edu papers tr pdf sutherland thompson inexact navigation icra usa pp 

karp reducibility combinatorial problems complexity computer computations plenum press new york pp 

birchfield klt implementation kanade lucas tomasi feature tracker vision stanford edu birch klt zhang determining epipolar geometry uncertainty review ijcv pp :10.1.1.33.4540

grossman wool computational experience approximation algorithms set covering problem eur 
oper 
res vol 
pp 

