template patch driven image segmentation mi allan pattern recognition image processing group inst 
computer aided automation vienna university technology 
vienna austria tuwien ac method partitions single image layers requiring layer similar properties terms pixel colour variation provided template patch 
provides new view defining similarity function pixel small neighbourhood part texture described template patch 
results better description pixels near texture boundary 
second shown maximally stable extremal regions msers originally designed wide baseline stereo matching locally merge pixels having intensity reduce dimension graph representing image 
msers help texture description yield significant reduction memory computation time 
graph fed min cut max flow algorithm cut graph parts 
performance method images berkeley database 
restrictions method discussed 
fully automatic image segmentation known ill posed problem clear definition objective measure correct segmentation 
shown people produce similar segmentations images specification segmented detailed segmentation 
pointed doing semantically correct image segmentation essential take account priori information objects segmented 
information usually provided user specifying background foreground properties marking pixels image ii assuming object segmented moves iii learning object properties models mutual relation appearance manually labeled training database :10.1.1.23.7975:10.1.1.6.5769:10.1.1.35.2611:10.1.1.10.4157
case image segmentation object recognition done simultaneously 
supported austrian science foundation fwf sesame european union network excellence muscle fp 
examples segmentation textured surfaces 
top row input images 
middle row template patches detail 
bottom row segmented regions having similar properties template patch 
mentioned steps possible partition image regions coherent colour texture follow semantic cues 
psychophysics experiments shown human procedure leading scene understanding pre segmentation boundaries regions coherent texture colour performed 
humans huge object database brains tune segmentation handling large occlusions strong shadows geometric distortions 
implies rough pre segmentation done running iterative recognition segmentation algorithm 
focus group segmentation methods mentioned objects regions attention described advance case small representative template patch 
patch provided user salient texture detection method 
proposed method segments image layers similar patch terms pixel colour variation 
need background template patch omitted advantage compared previous :10.1.1.23.7975
excluding need background model foreground template patch search object images background changes 
compared similar previous approaches method viewed tool doing accurate manual segmentation driven user 
method oriented chain leading automatic segmentation detection object described template patch 
main contribution twofold 
introduce new view similarity measure arbitrary pixel small neighbourhood part foreground 
measure performs better boundary foreground background regions compared standard approaches 
currently measure colour variation pixels may fail cases discussed 
wq psfrag replacements edge cost region wq left graph representation pixel image table defining costs graph edges 
symbols explained text 
tuning parameter set 
important way measure formulated 
adding features done similar way 
second show maximally stable extremal regions msers originally designed wide baseline stereo merge pixels having intensity 
reduces size graph built image contributes better handling textures 
structure follows 
problem formulated sec 

building graph highlighting difference approaches described sec 

final algorithm summarized sec 
results sec 

discussion restrictions method complete 
problem formulation segmentation methods minimization known gibbs type energy :10.1.1.23.7975:10.1.1.6.5769:10.1.1.10.4157
form energy significant 
energy usually consists variously encoded data smoothness term keeps segmentation consistent 
gibbs energy formulate segmentation problem 
suppose image graph set vertices set edges connecting adjacent vertices 
gibbs energy segmentation edata xi zi esmooth xi xj zi zj 
corresponds vector label xi vertex 
concentrate bi layer segmentation label xi background foreground 
zi corresponds measurement th graph vertex colour vector 
weighting constant controlling influence smoothness term 
smoothness term describes strongly neighbourhood pixels bound 
usually set ising prior better colour gradient colour texture gradient adjacent pixels having different labels :10.1.1.23.7975
data term describes pixel part foreground background 
optimal segmentation obtained minimum energy possible argmin 
minimization problem equivalent searching minimum cut maximum flow graph see fig 
splitting graph parts 
exists efficient algorithm finding min cut max flow proposed method 
usually vertices graph correspond pixels image edges connect adjacent pixels local neighbourhood 
case correspondence pixels graph vertices violated pixels mser assigned just vertex described 
pointed matters segmentation methods form model data term really strategy obtaining segmentation segmentation searching min 
cut graph minimum energies optimal geodetic active region 
constructing graph fig 
shows graph split min 
cut max 
flow algorithm obtain final segmentation 
section explain difference construction graph setting data term compared standard approaches 
graph contraction assigning image pixel different node graph leads large graph impractical reasons large memory consumption ii longer computation time operations done graph min 
cut 
standard approaches reduce size image keep graph dimension reasonable bounds 
operation destroys details image specially texture structures 
take different approach 
reduce size image merge pixels having similar colours 
need edges image preserved msers suitable technique purpose 
msers regions stable multiple thresholds thresholding image minimum maximum intensity vice versa 
edges image usually boundaries regions lost merging pixels regions 
msers advantage compared doing watershed input image compress places image possible 
regions leave pixels assign individual nodes graph 
fig 
shows example detected msers image depicts principle graph node reduction 
pixels lying mser merged node graph preserving edges edges inside mser 
edges inside msers create self loops contracted node 
approach neglect self loops 
producing msers image thresholding preserves relation rt rt rt resp 
rt set pixels inside region level resp 
thresholding 
important property situations larger region contains smaller 
situations pixels smaller region assigned node graph pixels lying larger region smaller assigned node 
graph contraction 
image msers superimposed 
illustration image cutout standard regular grid representation 
gray polygons correspond msers 
contracted graph account msers point connectivity 
smoothness term point connectivity illustration shown fig 
general neighbourhoods 
implementation compute distance transform region take neighbours pre defined distance controlling size neighbourhood 
distance corresponds point neighbourhood point neighbourhood distances larger correspond non planar graphs 

generally larger neighbourhoods contribute better stability segmentation terms smoothness memory computationally demanding 
case large neighbourhood required msers cover pixels larger area 
essence larger area point neighbourhood creating graph edges captured 
pre merging pixels intensities msers reduces redundant edges 
important edges segmentation connect pixels different colours 
edges preserved contraction step 
smoothness term adjacent nodes computed euclidean distance colour space similarly wq exp zq zr tuning parameter implementation 
zq colour vector node node represents region zq mean colour pixels assigned region problem arising graph contraction node representing mser edges node corresponding single pixel see fig 

may cause sum weights edges going node large cut pixels surroundings correspond label 
solved problem normalizing weights edges 
divide edge weights going node sum wq 
obtain oriented graph indirectly takes account number neighbours 
normalization led better performance experiments shown 
data term form setting data term important segmentation consistency 
usually description background foreground region parametric gaussian mixture model gmm colour histogram non parametric colour histograms models built pixels marked background foreground employed 
avoid histograms describing background foreground propose new strategy 
assume query patch containing colour structure interest provided 
typically similar approaches feature vectors created interest points query texture input image 
feature vectors compared find potential matches 
depending number established matches decided query texture occurs input image 
problem standard approaches feature vectors known computed small neighbourhood pixel 
means pixels near boundary texture feature vector affected background pixels 
may lead poor matching inappropriate setting probability particular pixel belongs texture described query patch 
need evaluate measure pixel just pixels interest 
cope design strategy 
penalty pixel foreground defined follows exp zq represents provided template patch refers similarity function tuning parameter discussed 
msers detected template patch input image pixels inside msers merged 
nt denote number nodes template patch 
th node build feature vector composed sub features ti tmin tmax case vectors element colour vectors expressed colour space 
ti corresponds colour pixel mean colours pixels inside region tmin ci ti tmax argmax ci ti ci local neighbourhood th node 
take circle pre defined radius pixels case th point region 
pre compute feature vectors template patch 
cluster feature vectors close terms euclidean distance colour space 
arbitrary point zq formulate similarity function point foreground zq min ti zq min cq min min cq max ci ci number vectors belonging cluster number clusters constant controlling influence similarity nodes obtained experiment 
solve minimization problem brute force graph node texture description 
left texture example circle point near texture boundary 
right texture patch representative points 
eq 
says look area pixel region input image points closest min max points stored template patch feature vector 
strategy part circle input image may come background region remaining part circle min max colours closest template feature vectors see fig 

strategy guarantees better performance compute features node input image compare template features techniques 
algorithm shortly summarize steps leading final image segmentation 
find msers input image create oriented graph respecting weights wq eq 
perform normalization sum outgoing edges 
find msers template patch pre compute feature vectors ti tmin node 
cluster feature vectors obtain representative ones weights ci 
max 
process nodes input image graph searching closest template feature vector evaluate similarity function 
eq 

set data term penalties eq 


find final segmentation searching min 
cut max 
flow constructed graph algorithm 
experiments performed tests images berkeley dataset see results fig 

formulation data term simple returns reasonable results 
usually textures composed colour changes contributing performance proposed data term 
situation method fails different textures different structure colours image see fig 
row 
www robots ox ac uk research affine www cs berkeley edu projects vision grouping directly follows definition similarity function eq 

solve problem features simple colour changes taken account see discussion sec 

final segmentation sensitive parameter eq 
due poor formulation rb eq 

reason information background 
set expectation edges joining foreground node 
better segmentation obtained slightly changing value 
fig 
shows automatically obtained manually tuned segmentations 
open issue obtain correct value fully automatically 
method relatively slow simple comparisons required possible run gpu cpu 
current implementation takes pixel images pentium ghz optimized matlab implementation 
discussion major issues proposed strategy topics current ongoing research affine illumination colour invariance 
circle computing feature vectors template patch large circle searching closest min max values eq 

may done clever way trying circles changing circles ellipses get affine invariance 
increase computation time high 
trade accepted 
increase illumination colour invariance features colour differences taken account gradient magnitude orientation scale space searching pixel region neighbourhood 
method detection segmentation regions input image defined provided template patch 
introduced msers graph construction decrease dimensionality graph get better representation image 
designed new data term minimization process leading final segmentation 
main novelty formulation data term enabling suppression influence background segmentations points near foreground background boundary 
method requires features colour similarity 
features relatively simple method performs images 
fitzgibbon 
bayesian video matting learnt image priors 
proc 
cvpr pages 
blake brown perez torr 
interactive image segmentation adaptive model 
proc 
eccv pages 
boykov 
jolly 
interactive graph cuts optimal boundary region segmentation objects images 
proc 
iccv pages 
boykov kolmogorov 
experimental comparison min cut max flow algorithms energy minimization vision 
pami 
de freitas barnard 
statistical model general contextual object recognition 
proc 
eccv pages 
fowlkes martin malik 
learning affinity functions image segmentation combining patch gradient approaches 
proc 
cvpr pages ii 
kolmogorov blake cross 
probabilistic fusion stereo color contrast bi layer segmentation 
pami 
appear 
li sun 
tang 
shum 
lazy snapping 
acm transactions graphics siggraph 
lowe 
distinctive image features scale invariant keypoints 
ijcv 
martin ch 
fowlkes tal malik 
database human segmented natural images application evaluating segmentation algorithms measuring ecological statistics 
proc 
iccv pages 
matas urban 
robust wide baseline stereo maximally stable extremal regions 
proc 
bmvc pages 
mi 
automatic image segmentation positioning seed 
proc 
eccv pages ii 
paragios deriche 
geodesic active regions level set methods supervised texture segmentation 
ijcv 
ruzon tomasi 
alpha estimation natural images 
proc 
cvpr pages 
shi malik 
normalized cuts image segmentation 
pami 

joint appearance shape context modeling multi class object recognition segmentation 
proc 
eccv pages 
tu chen yuille zhu 
image parsing unifying segmentation detection recognition 
ijcv 
wexler fitzgibbon zisserman 
bayesian estimation layers multiple images 
proc 
eccv pages iii 
wolfson landy 
examining edge region texture analysis mechanisms 
vision research 
results 
st column input colour images 
nd column provided template patches 
rd column automatic segmentation results 
th column manually tuned segmentations parameter eq 

