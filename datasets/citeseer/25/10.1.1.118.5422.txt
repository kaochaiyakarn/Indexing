internet mathematics vol 
fast pagerank computation sparse linear system del corso antonio gull francesco 
research community devoted increased attention reducing computational time needed web ranking algorithms 
particular techniques proposed speed known pagerank algorithm google 
interest motivated dominant factors web graph huge dimensions subject dramatic updates terms nodes links pagerank assignment tends obsolete soon pagerank vectors need computed different choices personalization vectors adopting strategies collusion detection 
show pagerank computation original random surfer model transformed problem computing solution sparse linear system 
sparsity obtained linear system possible exploit effectiveness markov chain index reordering speed pagerank computation 
particular rearrange system matrix permutations apply different scalar block iterative methods solve smaller linear systems 
tested approaches web graphs crawled net 
largest contains millions nodes links 
web graph cost computing pagerank reduced terms mflops terms time respect power method commonly 

research community devoted increased attention reducing computation time needed web ranking algorithms 
fact web changes rapidly week links changed new content created cho roy 
result indicates search engines need peters page internet mathematics update link ranking metrics week old ranking may reflect current importance pages 
efforts devoted improve pagerank brin page page known ranking algorithm google 
core page rank exploits iterative weight assignment ranks web pages fixed point reached 
fixed point turns dominant eigenpair matrix derived web graph 
brin page originally suggested compute pair known power method golub van loan gave nice interpretation pagerank terms markov chains 
studies pagerank address different needs desire reduce time spent weighting nodes web graph takes days computation second need assign pagerank values web page 
necessary page rank personalization haveliwala haveliwala jeh widom google beta service see labs google 
com personalized heuristic collusion proof pagerank zhang algorithms requires computation different pagerank vectors different choices parameter 
previous approaches followed different directions attempt compress web graph fit main memory boldi vigna implementation external memory algorithms haveliwala chen 
interesting research track exploits efficient numerical methods reduce computation time 
kinds numerical techniques promising seen intriguing results years accelerate power iterations kamvar haveliwala lee 
literature arasu lee page models treat different way pages links 
consider original pagerank model see section numerical techniques show problem transformed equivalent linear system equations coefficient matrix sparse web graph 
new formulation problem natural investigate structure sparse coefficient matrix order exploit reducibility 
numerical iterative methods linear system solution benefit reordering coefficient matrix rearrange matrix increasing data locality reducing number iterations needed solving methods see section 
particular evaluate effect different permutations apply methods power jacobi gauss seidel reverse gauss seidel varga rearranged matrices 
disclosed structure permuted matrix possible block methods turn powerful scalar ones 
note del corso fast pagerank computation sparse linear system phase reordering matrix permutation requires extra computational effort time spent reordering matrix negligible respect time required solve system 
important consideration reordering solve pagerank problems different personalization vectors 
tested approaches web graph crawled net nodes links 
best result achieved block method reduction mflops time respect power method taken method compute pagerank vector 

definitions notations section give notations definitions useful rest 
matrix 
scalar nonzero vector eigenvalue corresponding right eigenvector mx way called left eigenvector corresponding eigenvalue 
note left eigenvector right eigenvector transpose matrix 
matrix row stochastic rows nonnegative sum row 
case easy show exists dominant eigenvalue equal corresponding eigenvector constant simple method computation dominant eigenpair power method golub van loan stochastic irreducible matrices convergent nonnegative starting vector 
stochastic matrix viewed transition matrix associated family markov chains represents probability transition state state ergodic theorem markov chains stewart irreducible stochastic matrix unique steady state distribution vector means stationary distribution markov chain determined computing left eigenvector stochastic matrix graph adjacency matrix degree vertex number nonzeros ith row node links called dangling 

google pagerank model section review original idea google pagerank brin page 
web viewed directed graph web graph internet mathematics pages node hyperlink edge 
intuition model page important pointed pages turn important 
definition suggests iterative fixed point computation assigning rank importance page web 
formally original model page random surfer sitting page jump equal probability pij page adjacent iterative equation computation pagerank vector zi ii ii set nodes linking node component zi ideal pagerank page sum pageranks assigned nodes pointing weighted transition probability pij 
equilibrium distribution state represents ratio number times random walk state total number transitions assuming random walk continues infinite time 
matrix notation equation equivalent solution system equations pij pij 
means pagerank vector left eigenvector corresponding eigenvalue 
rest assume zi time interested assigning exact value zi relative rank nodes 
ideal model unfortunately problems 
due presence dangling nodes capture surfer indefinitely 
formally dangling node corresponds zero row consequence stochastic ergodic theorem applied 
convenient solution problem dangling nodes define matrix rank matrix defined dv iff 
vector personalization vector records generic surfer preference page haveliwala jeh widom 
matrix imposes random jump page dangling node reached 
note new matrix stochastic 
section refer model natural model compare approaches proposed literature 
second problem ideal model surfer get trapped cyclic path web graph 
brin page brin page suggest enforce irreducibility adding new set artificial transitions low probability jump nodes 
mathematically corresponds defining matrix ev vector entries equal constant 
step probability random surfer follows transitions described probability follows links jumps del corso fast pagerank computation sparse linear system node accordingly personalization vector matrix stochastic irreducible conditions imply pagerank vector unique steady state distribution matrix turns matrix explicitly 
dv ev 
common numerical method solve eigenproblem power method golub van loan 
rank modification possible implement power method multiplies sparse matrix vector upgrades intermediate result constant vector step suggested haveliwala haveliwala 
eigenproblem rewritten linear system 
substituting get dv ev means problem equivalent solution linear system equations sz vd fact zi 
transformation eigenproblem opens route large variety numerical methods completely investigated literature 
section lightweight solution handling 
sparse linear system formulation section show compute pagerank vector solution sparse linear system 
way handles dangling node crucial huge number 
kamvar kamvar sample web containing pages nodes 
large amount nodes links includes pages point page pages existence inferred hyperlinks reached crawler 
dangling node represent pdf ps txt file format gathered crawler hyperlinks pointing outside 
page page adopted drastic solution completely removing dangling nodes 
way size problem sensibly reduced large amount information web ignored 
impact dangling internet mathematics 
removing dangling node generates new dangling nodes turn removed 
process node receives pagerank assignment 
nodes simply ranked remaining nodes don take account contribution induced random jump set dangling nodes 
removing set nodes potentially create new dangling nodes turn removed see 
nodes assigned pagerank fraction web graph 
arasu arasu handled dangling nodes different way respect natural model section 
modify web graph imposing dangling node self loop 
terms matrices fij iffi 
matrix row stochastic computation pagerank solved random jump similar equation matrix replaces model different natural model evident example 
example 
consider graph associated transition matrix 
pagerank obtained natural model orders nodes 
arasu model orders nodes 
note case node ranks better node expects 

example graph rank assignment differs dangling nodes treated model arasu arasu 
del corso fast pagerank computation sparse linear system observations believe important take account dangling nodes consider natural model better captures behavior random surfer 
dense structure matrix poses serious problems solution linear system 
reason problem largely addressed eigenproblem seen attempts solve problem linear system 
computing pagerank vector power method allows exploit sparsity matrix fact common implement power method way matrix vector multiplications involve sparse matrix rank modifications handled separately haveliwala 
show manage dangling nodes direct lightweight manner possible iterative methods linear systems 
particular prove formally equivalence solution system involving sparse matrix theorem powerful tool sherman morrison formula see golub van loan paragraph 
known sherman morrison formula unstable elegant technique proving theorem need implementing 
theorem 
pagerank vector solution obtained solving system ry 
proof 
vd equation vd system equations coefficient matrix sum matrix rank matrix 
note nonsingular eigenvalues different zero 
sherman morrison formula see golub van loan paragraph compute inverse rank modification consequence vd dt 
denoting solution system ry wehave means constant computed normalizing way 
dt dt summary shown order compute pagerank vector solve system ry normalize obtain pagerank internet mathematics vector means rank matrix pagerank model accounts dangling pages plays role scaling factor 
computation necessary step occasionally omitted 
note matrix arasu arasu sparse due way deal dangling nodes pageranks obtained don rank nodes natural way see example 
approach guarantees natural ranking handles density transforming dense problem uses sparse matrix prove iterative method derived involving produces sequence vectors jacobi method applied matrix eiron eiron proposed way deal dangling nodes 
assign separately rank dangling pages algorithm requires knowledge complete strongly connected subgraph web 

conditioning problem new formulation solving linear system devote particular attention conditioning problem magic number accounting hardness solving linear system 
condition number matrix defined cond matrix norm 
easy show proved kamvar haveliwala kamvar haveliwala condition number norm cond means problem tends ill conditioned goes 
conditioning prove theorem 
theorem 
condition numbers expressed norm matrices cond cond 
inequality strict node direct path dangling node 
proof 
order prove theorem show cond max rij max 
note nonnegative matrix 
del corso fast pagerank computation sparse linear system 
entry vector equal proves cond cond 
prove markov chain state transitions inequality strict page possible reach dangling node 
dangling nodes reducible 
number components web graph 
permute rows columns grouping nodes belonging connected component listing dangling nodes rows 
reduced form 
pk pk diagonal blocks pii irreducible 
hypothesis web page reach dangling node finite number clicks 
terms matrix means block pii row sum strictly 
extension circle theorem varga theorem page ensures spectral radius diagonal block pii 
eigenvalues eigenvalues diagonal blocks guarantees 
consider iterative method xi xi method convergent zero vector choice starting vector 
choosing exists integer proves part 
prove part assume contradiction page possible reach dangling page assume page belongs hth connected component 
irreducible means node possible internet mathematics reach dangling page 
index strip corresponding ith block zero diagonal block pii 
means diagonal block pii eigenvalue equal ei implies cond 
theorem proves condition number matrix equal condition number means computing pagerank vector solves system matrix worst computing solves system involving fact system sensitive errors due finite representation numbers appearing system involving note condition guarantees strict inequality condition number satisfied exists reordering allows split original problem disjoint subproblems 
see section computationally convenient conditioning subproblems compared conditioning subproblems regarding 
exploiting web matrix permutations section shown transform linear system involving matrix equivalent linear system coefficient matrix sparse web graph 
new sparse formulation allows exploit effectiveness iterative procedures compute pagerank vectors applicable dealing solve linear system ry convenient strategies jacobi gauss seidel methods varga space comparable power method 
methods convergent spectral radius iteration matrix strictly lower 
rate convergence depends spectral radius lower radius faster convergence 
nonnegative matrix called matrix known jacobi gauss seidel methods convergent gauss seidel method applied matrices faster jacobi method varga 
solving sparse linear system common practice douglas look reordering scheme reduces semi bandwidth increasing data locality time spent iteration 
matrix reducible problem split smaller linear systems solved cascade 
del corso fast pagerank computation sparse linear system simpler permutation scheme separates dangling pages 
case matrix system involving simple shape system solved vector computed matrix vector multiplication 
papers eiron eiron langville meyer langville meyer arrive different reasoning formulation problem observing problem smaller initial solved 
problem involving solved power method investigate reordering schemes increase benefits permutation strategies 
note reordered block triangular matrix natural way solve system forward backward block substitution 
instance lower block triangular system 
rm rmm solution computed follows yi ii vi ym vm 
requires solution smaller linear systems coefficient matrices diagonal blocks order appear 
note strategy better applying iterative method matrix 
iterative methods may happen permutation matrix reduces spectral radius iteration matrix number iterations needed reach convergence 
case jacobi method spectral radius iteration matrix invariant permutation 
way rate convergence power method independent matrix reordering depends spectral properties matrix starting vector 
nice attempt direction kamvar shown reordering matrix sorting urls lexicographically may help construct better starting vector power method improve data locality 
internet mathematics full lower block triangular upper block triangular tb bt oat oat idt idt iat iat 
web matrix permutation taxonomy 
challenging perspective reordering web matrix gauss seidel method opportune permutations lead increase data locality iteration matrix reduced spectral radius 
permutation strategies propose different purposes 
goal increase data locality decrease possible spectral radius iteration matrix 
second discover block triangular structure web matrix order apply block methods described equation 
applying permutation sparse matrix finding permutation satisfies desiderata costly operation 
convenient spend effort decrease running time solving method matrix times solve different pagerank problems required personalized web search haveliwala case heuristic collusion proof pagerank zhang 
permutations considered obtained combining different elementary operations 
effective reordering scheme denoted isthe obtained permuting nodes web graph order induced bfs visit 
bfs visit possible discover reducibility web matrix visit assigns contiguous permutation indices pages pointed source 
permutation produces lower block triangular matrices 
observed cuthill mckee cuthill mckee bfs strategy reordering sparse symmetric matrices produces reduced bandwidth children node inserted order decreasing degree 
reason symmetric examine reordering schemes obtained sorting nodes terms degree 
particular consider permutation reorders pages decreasing degree denoting scheme od permutation oa sorts pages web matrix ascending degree 
note permutations list dangling pages rows web matrix respectively 
experimented permutations obtained del corso fast pagerank computation sparse linear system 
different shapes obtained rearranging web matrix accordance taxonomy 
row represents full matrices second third lower upper block triangular matrices respectively 
web graph nodes links 
reordering matrix ascending descending degree denoted ia id respectively 
algorithms needs compute transpose web matrix denote operation various operations combined obtain different reorderings web matrix shown 
accordance taxonomy denote instance permuted matrix obtained applying id permutation transposing matrix applying permutation reordered matrix 
column gives rise full matrices second third columns produce block triangular matrices due bfs order visit 
show plot structure web matrix rearranged item taxonomy 
important observe nonsymmetric matrices bfs order visit transforms matrix lower block triangular form number diagonal blocks greater equal number strongly connected components 
number diagonal blocks detected bfs depends starting node visit 
example starting node detect just component starting node get separate components 
internet mathematics 
example connected graph 
applying bfs visit starting node detects just component unreduced form starting node get different components fully reduced 

different shapes obtained rearranging web matrix nodes links permutations involving bfs visits 
del corso fast pagerank computation sparse linear system scalar methods shapes pm jac gs rgs block methods shapes lb ro dt lbr ro dt ub ubr 
numerical methods taxonomy 
pm power method jac denotes jacobi method gs rgs gauss seidel reverse gauss seidel methods respectively 
applied transformation matrix taxonomy 
block methods lb lbr applied lower block triangular matrices gs rgs solve diagonal block 
similarly ub ubr refer upper block triangular matrices 
order diagonal blocks smaller size split problem smaller subproblems investigate permutations exploit reducibility matrix 
denote reverse permutation permutation assigns index ith node 
shapes apply operation reversion matrix operator obtain shapes 
note smallest size largest diagonal block achieved size largest component permutations uses bfs able reach size 
adopted ad hoc numerical methods dealing different shapes matrices figures 
particular power method jacobi iterations compared gauss seidel reverse gauss seidel methods 
recall gauss seidel method computes ith entry vector th iteration step linear combination contrary reverse gauss seidel method computes entries vector bottom computes linear combination 
note anti diagonal matrix jij iff 
means applying gauss seidel isthe applying reverse gauss seidel 
shapes matrices figures encourage exploit matrix reducibility experimenting block methods 
matrix lower block triangular separates nodes dangling nodes 
matrix particular case considered equation 
internet mathematics solving methods diagonal block systems tested gauss seidel reverse gauss seidel methods 
denote lb ub methods obtained gauss seidel solver diagonal blocks lower upper block structures respectively 
lbr ubr reverse gauss seidel solve diagonal linear systems 
summing report taxonomy solution strategies 
section report experimental results obtained applying method suitable matrices 
experimental results tested approaches discussed previous sections web graphs obtained crawling web pages hyperlinks containing approximately dangling nodes 
data set donated nutch project see www nutch org 
run experiments pc pentium iv ghz gb memory kb cache 
stopping criterion imposed absolute difference vectors computed successive iterations 
order name pm gs rgs lb ub lbr ubr idt tb oat idt iat bt 
experimental results columns list numerical methods analyzed rows describe permutations applied matrix cell represents running time seconds number mflops number iterations taken solving methods 
note results columns account cost lb lbr methods applied lower block triangular matrices cost ub ubr methods applied upper block triangular matrices 
bold highlight best results terms mflops scalar block methods 
del corso fast pagerank computation sparse linear system fair comparison power method tolerance changed posteriori obtain absolute error methods 
fact case power method pagerank vector norm equal methods scale vector step 
report running time seconds mflops number iterations combination solving reordering methods described matrices 
believe number iterations number floating point iterations method fair measures running time seconds 
running time factor accounting increase data locality permutation matrix change number iterations 
cells empty methods suitable particular shapes 
results columns relative lb lbr methods lower block triangular matrices ub ubr upper block triangular matrices 
report table behavior jac method worse performance gs method 
measure gain gs jac obtained 
diagonal entries equal jacobi method essentially equivalent power method 
case difference jac applied pm works incorporates rank modification accounting dangling nodes 
implemented pm optimizations suggested page haveliwala method requires slightly greater number operations 
results theorem get reduction mflops 
increased data locality running time jac benefits matrix reordering reduction power iterations 
compare proposed methods versus pm applied original matrix common solving method compute pagerank vector 
comparisons obtained 
expect gs rgs original matrix accounts reduction number mflops running time 
improvements striking system matrix permuted 
best performance scalar methods obtained iat combination permutations rgs method 
yields mflop reduction respect pm reduction respect gs applied full matrix 
running time reduced 
common intuition gauss seidel method behaves better quasi lower triangular reverse gauss seidel faster applied triangular matrices 
case intuition turns internet mathematics name gs rgs lb ub lbr ubr oat idt iat bt bt bj bt bt bt bt bt 
experimental results shapes 
columns list numerical methods analyzed rows describe permutations applied matrix cell represents running time seconds number mflops number iterations taken solving methods 
bold highlight best results terms mflops scalar block methods 
omit values obtained jacobi method unaffected matrix permutations 
misleading 
fact web matrix rgs works better lower block triangular matrices gs works better quasi upper triangular matrices 
better results obtained block methods 
lb applied achieves reduction mflops respect pm 
adopting solving method explore just matrix reducibility due dangling nodes equation 
best result obtained oat permutation lbr solving method applied 
case reduction mflops running time 
means solving algorithm computes pagerank vector tenth running time half operations power method 
applied methods shapes obtained bfs visits 
results 
see gain matrix split greater number blocks 
fact reduction running time terms power method 
results figures take account effort spent reordering matrix 
costly reordering scheme bfs del corso fast pagerank computation sparse linear system 
plot results figures number mflops axis running time seconds axis 
point labeled permutation applied solving method 
power jacobi gauss seidel methods applying permutation compared best result 

plot interesting results figures number mflops axis running time seconds axis 
point labeled permutation applied solving method 
best performance method permutes node separating dangling applying bfs visit plotted best block scalar methods bfs visits 
internet mathematics visit web graph efficiently implemented semi external memory reported buchsbaum mehlhorn meyer 
running time spent doing bfs comparable reported broder broder minutes taken web graph nodes largely speedup achieved solving methods 
case personalized pagerank permutations applied reused personalized vectors intuitive picture gain obtained combining permutation strategies scalar block solving methods shown figures 

growing size web graph implies value importance fast methods web ranking going rise 
growing interest personalized pagerank justifies effort preprocessing web graph matrix order compute faster pagerank vectors needed 
problem pagerank computation easily viewed dense linear system 
showed handle density matrix transforming original problem uses matrix sparse web graph 
contrary done arasu arasu achieved result altering original model 
result allows efficiently consider pagerank computation sparse linear system alternative eigenpair interpretation 
dealing sparse linear system opens way exploiting reducibility web matrix composing permutation strategies speed pagerank computation 
showed permuting web matrix combination degrees degrees sorting pages order bfs visit effectively increase data locality reduce running time conjunction numerical method lower block solvers 
best result achieves reduction mflops terms seconds required compared power method commonly compute pagerank 
means solving algorithm requires tenth time half mflops power method 
previous improvement power method due lee lee reduction time achieved data set roughly nodes 
light experimental results approach speeding del corso fast pagerank computation sparse linear system pagerank computation appears promising especially dealing personalized pagerank 

partially supported project nel web second author partially supported italian registry 
daniel learning lab lower doug cutting ben nutch organization sriram raghavan gary wesley stanford university 
provided web graphs nice web crawler 
luigi laura stefano library 
paolo ferragina useful discussions suggestions 
arasu arasu novak tomkins tomlin 
pagerank computation structure web experiments algorithms eleventh international world wide web conference poster proceedings 
available world wide web www ra ethz ch www poster pdf 
gori 
inside pagerank acm trans 
internet technology 
boldi vigna boldi vigna 
framework compression techniques proceedings th international conference world wide web pp 

new york acm press 
brin page brin page 
anatomy large scale hypertextual web search engine computer networks isdn systems 
broder broder kumar maghoul raghavan rajagopalan stata tomkins wiener 
graph structure web computer networks 
buchsbaum buchsbaum goldwasser venkatasubramanian westbrook 
external memory graph traversal proceedings eleventh annual acm siam symposium discrete algorithms pp 

philadelphia siam 
chen chen gan suel 
efficient techniques computing pagerank proceedings eleventh international conference information knowledge management pp 

new york acm press 
cho roy cho roy 
impact web search engines page popularity proceedings th international conference world wide web pp 

new york acm press 
cuthill mckee cuthill mckee 
reducing bandwidth sparse symmetric matrices proceedings th national conference pp 

new york acm press 
internet mathematics douglas douglas hu de weiss 
maximizing cache memory usage multigrid algorithms multiphase flows transport porous media state art chen pp 

lecture notes physics 
berlin springer 
eiron eiron mccurley tomlin 
ranking web frontier proceedings th international conference world wide web pp 

new york acm press 
golub van loan golub van loan 
matrix computations third edition 
baltimore john hopkins university press 
haveliwala haveliwala 
efficient computation pagerank technical report stanford university 
haveliwala haveliwala 
topic sensitive pagerank proceedings th international conference world wide web pp 

new york acm press 
haveliwala haveliwala kamvar jeh 
analytical comparison approaches personalizing pagerank technical report stanford university 
jeh widom jeh widom 
scaling personalized web search proceedings th international conference world wide web pp 

new york acm press 
kamvar haveliwala kamvar haveliwala 
condition number pagerank problem technical report stanford university 
kamvar kamvar haveliwala manning golub 
extrapolation methods accelerating pagerank computations proceedings th international conference world wide web pp 

new york acm press 
kamvar kamvar haveliwala manning golub 
exploiting block structure web computing pagerank technical report stanford university 
langville meyer langville meyer 
deeper inside pagerank internet mathematics 
lee lee golub zenios 
fast stage algorithm computing pagerank technical report stanford university 
mehlhorn meyer mehlhorn meyer 
external memory breadthfirst search sublinear algorithms esa th annual european symposium rome italy september proceedings pp 

lecture notes computer science 
berlin springer 
page page brin motwani winograd 
pagerank citation ranking bringing order web technical report stanford university 
stewart stewart 
numerical solution markov chains 
princeton nj princeton university press 
del corso fast pagerank computation sparse linear system varga varga 
matrix iterative analysis 
englewood cliffs nj prentice hall 
zhang zhang goel govindan mason van roy 
making eigenvector reputation system robust collusion algorithms models web graph third international workshop rome italy october proceedings pp 

lecture notes computer science 
berlin springer 
del corso dipartimento di informatica universit di pisa pisa italy di unipi antonio gull dipartimento di informatica universit di pisa pisa italy di unipi francesco dipartimento di informatica universit di pisa pisa italy di unipi received november accepted august 
