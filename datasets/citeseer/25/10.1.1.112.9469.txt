multidimensional data modern disks steven schlosser jiri schindler shao ailamaki christos faloutsos gregory ganger intel research pittsburgh emc carnegie mellon university deeply notion disks efficiently access dimensional data current approaches mapping multidimensional data disk blocks allow efficient accesses dimension trading efficiency accesses dimensions equally penalize access dimensions 
existing technology functions readily available inside disk firmware identify non contiguous logical blocks preserve spatial locality multidimensional datasets 
blocks span order adjacent tracks accessed minimal positioning cost 
details technologies analyzes trends shows exposed applications maintaining existing abstractions 
described approach achieve best possible access efficiency afforded disk technologies sequential access primary dimension access minimal positioning cost dimensions 
experimental evaluation prototype implementation demonstrates reduction time multidimensional data queries compared existing approaches 
large multidimensional datasets prevalent scientific business computing 
applications earthquake simulation oil gas exploration utilize large dimensional datasets representing composition earth 
simulation visualization transform datasets dimensions adding time component data 
conventional dimensional relational databases represented multidimensional data online analytical processing olap techniques allowing complex queries data mining 
queries data ad hoc making difficult optimize particular workload access pattern 
datasets grow size popularity performance applications access growing importance 
unfortunately storage performance type data inadequate largely due onedimensional abstraction disk drives disk arrays 
today data placement techniques commonly predicated assumption multidimensional data seek time ms discontinuity seek time max seek distance cylinders notional seek curve modern disk drive 
seek time profile modern disk drive consists distinct regions 
cylinder distances seek time constant followed discontinuity 
point discontinuity seek time approximately square root seek distance 
distances larger third full seek distance seek time linear function seek distance 
illustrate trend clearly axis drawn scale 
serialized stored disk 
put way assumption spatial locality preserved dimensions dataset stored disk 
various data placement indexing techniques proposed years optimize access performance various data types query workloads solve fundamental problem preserving locality multidimensional data 
begun chip away assumption showing locality twodimensional relational databases preserved disk drives believe studies scratched surface possible characteristics trends modern disks 
show modern disk drives physically preserve spatial locality multidimensional data 
technique takes advantage dramatically higher densities modern disks increased number tracks accessed time takes disk head settle destination track 
tracks reached settle time accessed approximately equal cost contrasts standard rule thumb disk drive technology longer seek distances correspond longer seek times 
illustrates basic concept canonical seek curve modern disk drive 
contrast conven usenix association fast th usenix conference file storage technologies tional wisdom seek time small distances fewer cylinders illustrated constant time equal time disk head settle destination cylinder 
trivially small high cylinders modern disks 
means order disk blocks accessed equal cost starting block 
refer blocks adjacent starting block meaning accessed equal cost 
explain adjacency mechanism detailing parameter trends enable today continue enable 
describe design implementation prototype disk array logical volume manager allows applications identify access adjacent disk blocks hiding extraneous disk specific details burden programmer 
example evaluate data placement technique maps dimensional dataset logical volume preserving physical locality directly disk improving spatial query performance existing data placements 
rest organized follows 
section describes related 
section describes details adjacency mechanism implemented modern disks historic projected disk parameter trends enable adjacency mechanism 
section analyzes data obtained measurements state art enterprise class scsi disks show characteristics affect properties adjacency mechanism 
section shows adjacency expressed applications burdening disk specific parameters 
section evaluates efficiency adjacent access prototype system microbenchmarks spatial queries 
background related effective multidimensional data layout techniques crucial performance wide range scientific commercial applications 
describe applications benefit approach show existing techniques address problem preserving locality multidimensional data accesses 
multidimensional datasets advances computer hardware instrumentation allow high resolution experiments simulations improve understanding complex physical phenomena high energy particle interactions combustion earthquake propagation 
datasets involved modern scientific practice massive multidimensional 
modern simulations produce data staggering rate multiple terabytes day fast th usenix conference file storage technologies high energy collision experiments cern expected generate raw data scale 
realizing big benefits emerging data driven scientific paradigm heavily depends ability efficiently process large scale datasets 
simulation applications great example storage data management challenges posed largescale scientific datasets 
earthquake simulations compute propagation earthquake wave time geological properties ground region initial conditions 
problem discretized sampling ground collection points earthquake duration set time steps 
simulator computes physical parameters ground velocity discrete ground point time step 
post processing visualization applications extract useful information output 
difficulties efficiently processing simulation output datasets lie volume multidimensional nature 
storing time step output requires gigabytes typical simulation generates time steps 
earthquake simulation dataset dimensional encodes threedimensional information coordinates sample points time step 
post processing visualization applications query output selecting simulation results correspond ranges coordinate space 
example range queries consider space varying query retrieves simulated values ground points falling region single time step 
similarly time varying queries generate waveforms querying simulated values single point range time steps 
unfortunately naive data layout schemes lead suboptimal performance 
optimizing class queries spatial ranges results random accesses dimensions time dimension 
due absence appropriate disk layout scheme performance bottleneck earthquake simulation applications 
organizing multidimensional data efficient accesses core problem scientific applications 
high energy physics experiments produce scale datasets hundreds dimensions 
astronomy databases sloan digital sky survey record astronomical objects attributes coordinates brightness various wavelengths 
data layout problem complex increasing number dimensions query classes accommodated 
addition data intensive science applications large scale multidimensional datasets typically usenix association line analytical processing olap settings 
olap applications perform complex queries large volumes financial transactions data order identify sales trends support decision making 
olap datasets large numbers dimensions corresponding example product customer characteristics time geographic location sale 
performance complex multidimensional analysis queries critical success olap large number techniques proposed organizing indexing multidimensional olap data 
limitations conventional placement efficient multidimensional data access relies maintaining locality neighboring objects multidimensional logical space stored neighboring disk locations 
existing multidimensional layout techniques standard linear disk abstraction 
take advantage efficient sequential disk access neighboring objects multidimensional space stored disk blocks similar logical block numbers lbns 
space filling curves hilbert curve ordering gray coding mathematical constructs map multidimensional points linear space nearby objects logical space close linear ordering possible 
data placement techniques space filling curves rely simplified linear disk model ignoring low level details disk performance 
resulting linear mapping schemes break sequential disk access longer scans dimension ensure range queries result completely random furthermore analysis experiments suggest ability space filling curves keep neighbors dimensions physically close disk deteriorates rapidly number dimensions increases 
revisits simplistic disk model removes need linear mappings 
resulting layout schemes maintain sequential disk bandwidth providing efficient access dimension datasets large dimensionality 
space filling curves approaches rely parallel multiple disks 
declustering schemes partition logical multidimensional space multiple disks range queries take advantage aggregate bandwidth available 
limitations indexing need efficiently support multidimensional queries led large body indexing 
multidimensional indexes tree variants disk resident data structures provide fast access data objects satisfying range query 
appropriate index query processing requires fraction disk block accesses compared alternative exhaustively searching entire dataset 
focus multidimensional indexing research minimizing number disk pages required answering class queries 
disk layout multidimensional datasets differs indexing 
improves performance retrieving data objects match input query efficiency identifying objects 
example range query dataset supported tree result large number data objects retrieved 
appropriate data layout scheme data objects reside separate pages random disk locations 
index identify data objects fetching disk sub optimal random access performance 
multidimensional indexing techniques independent underlying data layout address problem maintaining access locality 
storage oriented approaches researchers focused lower level storage system attempt improve performance multidimensional queries 
part revisits simple disk abstraction proposes expand storage interfaces applications intelligent 
schindler explored aligning accesses disk drive track boundaries get rid rotational latency 
schindler proposed secondary dimension disks utilized create flexible database page layout dimensional tables 
studied opportunities building dimensional structures support database applications new alternative devices mems storage devices 
described challenges underlying assumption previous showing characteristics modern disk drives allow efficient access multiple dimensions just 
multidimensional disk access established view disk drives efficiently access dimensional data mapped sequential logical blocks 
notion reinforced linear abstraction disk drives sequence blocks 
interface disks various techniques optimize sequential accesses 
modern disk drives allow efficient access dimension 
fundamental change observations technological trends modern disks usenix association fast th usenix conference file storage technologies 
short seeks cylinder distance dominated time head needs settle new track 
firmware features internal disk identify access blocks require rotational latency seek 
combining observations possible construct access patterns efficient access multidimensional data sets despite current linear abstractions storage systems 
section describes technical underpinnings mechanism exploit preserve locality multidimensional data disks 
describing background mechanical operation disks 
analyze technology trends relevant drive parameters showing mechanism enabled today continue enabled disks 
lastly combine show mechanism works 
disk background positioning 
service request data access disk position read write head physical location data resides 
move set arms desired cylinder motion called seeking 
set arms equipped distinct head surface positioned near desired track head settle center track 
head settled disk wait desired sector rotate underneath stationary head accessing 
total positioning time sum seek time settle time rotational latency components 
dominant component total positioning time depends access pattern location previous request respect 
requests neighboring sectors track positioning overhead incurred servicing second 
referred sequential access 
requests located adjoining tracks disk may incur settle time rotational latency 
requests located tracks disk may incur seek settle time possibly rotational latency 
possible definitions adjoining tracks 
tracks radius different surfaces neighboring tracks different radii surface 
case different heads access tracks second case head 
cases disk settle head correct track 
case settle time incurred tracks surfaces may perfectly aligned round called run ii individual heads may perfectly stacked seagate hawk lp fast th usenix conference file storage technologies track density tpi atlas ii maxtor atlas maxtor atlas atlas iv atlas iii cheetah lp seagate cheetah lp cheetah lp cheetah cheetah interpolated track density year seagate settle time maxtor settle time cheetah es lp disk trends rpm disks 
notice dramatic increase track density measured tracks inch tpi period head switch settle time improved marginally 
iii arms may stationary nonrigid body oscillate slightly 
case referred head switch tracks cylinder called cylinder seek 
request scheduling 
disk drives variants shortest positioning time sptf request schedulers determine optimal order outstanding requests serviced minimizing sum seek settle time rotational latency 
calculate positioning cost scheduler determine physical locations cylinder head sector offset request 
uses seek time estimators encoded firmware routines calculate seek time calculates residual rotational latency seek offset requests 
layout 
disks map sequential lbns adjoining sectors track 
sectors exhausted lbn mapped specific sector adjoining track minimize positioning cost head switch seek cylinder 
rotational offset lbn track lbn track 
depending adjoining track chosen lbn offset referred track skew cylinder skew 
disk technology trends key method enabling multidimensional access disks relationship technology trends decade time disk head settle seek remained largely constant track density increased dramatically 
shows graph trends families rpm enterprise class disks vendors seagate maxtor 
growth track density measured tracks inch tpi strongest trends disk drive technology 
past decade settle time decreased factor track densities settle time ms usenix association seek time ms seek distance cylinders atlas iii seek curve 
cylinders 
experienced fold increase shown 
track density continues grow settle time improves little cylinders accessed amount time 
equal data physical area accessed amount time 
increasing track density negatively impacts settle time 
larger tpi higher precision controls required diminishing improvements settle time due factors 
factors improve seek time smaller affect long full strobe seeks focus short distance seeks 
past seek time short distances say cylinders approximately square root seek distance 
technology trends illustrated lead seek times nearly constant distances cylinders increase distances cylinders illustrated 
seeks cylinders dominated time takes disk head settle new track 
properties confirmed looking seek curve measured real disk shown 
graph shows seek curve maxtor atlas iii rpm disk introduced 
disk settle time ms clarity graph shows seek time distances cylinders cylinders total see table 
settle time factor positioning disk heads dramatic increase bit density decade brought fore shown 
lower track densities disks introduced single cylinder reached constant settle time 
large increase tpi reached 
section examines seek curves disks 
increasing track density influences data laid disk 
past head switches typically faster cylinder switches way today disks 
increasing tpi settling correct track different head arm takes time simply settling adjoining track head arm assembly 
disks lay data tracks cylinder moving disks stay surface number cylinders say move inward switching surface going back 
mapping term surface leverages fact seeks cylinders take nearly constant amount time 
put differently choice ensure sequential accesses efficient consecutive lbns mapped tracks cylinders away 
depicts different approaches mapping lbns disk tracks 
adjacent disk blocks combination rapidly increasing track densities slowly decreasing settle time leads seek curves shown neighboring cylinders accessed starting point equal cost 
cylinders composed tracks extension tracks accessed starting point equal cost 
values related simply differentiate illuminate subtle important detail 
value measure far disk head move cylinders settle period value enumerate number adjacent blocks accessed cylinders 
tracks contain disk blocks block track accessed immediately head settles destination track additional rotational latency 
identify blocks adjacent starting block 
shows drawing layout adjacent blocks disk 
starting block adjacent disk blocks adjacent tracks 
simplicity show disk surface case equals settle time disk rotates fixed number degrees determined ratio settle time rotational period disk 
example settle time ms rotational period ms rpm disk adjacent blocks angular physical offset starting block 
settle time entirely deterministic due external vibrations thermal expansion useful add extra conservatism avoid rotational misses lead long delays 
adding conservatism value increases number tracks accessed settle time cost added rotational latency 
practice disks add conservatism best case settle time determining usenix association fast th usenix conference file storage technologies model year tpi cylinders surfaces max 
cap 
cyl seek full seek maxtor atlas ii gb ms ms atlas iii gb ms ms atlas iv gb ms ms atlas gb ms ms atlas ii unknown gb ms ms seagate cheetah lp gb ms ms cheetah es gb ms ms cheetah lp gb ms ms cheetah gb ms ms cheetah gb ms ms cheetah gb ms ms table disk characteristics 
data taken manufacturers specification sheets 
listed seek times writes 
spindle traditional 
spindle cylinder track skews mapping lbns physical locations 
example atlas iii disk cylinder track skews respectively ms ms measured settle time ms extra buffer ensures disk rotation sequential access going track 
note depending mapping logical blocks lbns physical locations blocks appear application sequential non contiguous 
choice simply particular disk drive low level logical physical mapping 
example pair sequential lbns mapped different tracks cylinders adjacent definition specific non contiguous lbns mapped nearby tracks 
accessing successive adjacent disk blocks enables semi sequential disk access second efficient disk access method pure sequential access 
delay access equal disk head settle time minimum mechanical positioning delay disk offer 
semi sequential access introduced previously utilizes adjacent blocks efficiently accessing data structures 
shows adjacent blocks improve access efficiency multidimensional datasets 
cylinder 
layout mappings adopted various disk drives 
adjacent blocks fast th usenix conference file storage technologies spindle layout ii surface 
starting block disk head direction rotation location adjacent blocks 

determining previous section defined adjacency relationship identified disk characteristics enable access adjacent blocks 
describe methods determining value method analyzes extracted seek curves drive parameters arrive estimate extension second method empirically measures directly 
evaluate cross validate methods set disk drives different vendors 
experimental setup experiments described conducted twoway ghz pentium xeon workstation running linux kernel 
machine mb usenix association main memory equipped ultra wide scsi adapter connecting disks 
experiments disks fewer maximum supported listed table 
enterprise drives sold families supporting range capacities difference number drive 
specifically cheetah es atlas iii atlas iv atlas cheetah cheetah disks platter 
disk total capacity gb cheetah gb disk 
requests issued disks linux scsi generic driver timed cpu cycle counter 
disks default cache mode page settings read write cache enabled 
seek measurements determine proper values disk characteristics need measure seek profile 
access disk firmware determine empirically 
obtain mappings lbn physical location cylinder head sector tuple 
scsi address translation mode page mode select command 
complete layout map choose pair tracks desired seek distance measure long takes seek 
measure seek time choose pair cylinders separated desired distance issue pair read commands sectors cylinders measure time completions 
choose fixed lbn source track successively change value lbn second track time issuing pair requests find lowest time request completions 
technique called minimal time request completions mt brc 
seek time report average trials randomly chosen starting locations spread entire disk 
note mt brc measurement subtracts time read second sector bus system overheads 
seek profile analysis method determine analyzing seek profile disk 
shows seek profiles disk drives evaluated small cylinder distances 
note extracted profiles similar shape especially drives vendor 
cylinder seek time lowest expected 
distances cylinders seek time rises rapidly cylinders levels cylinders experiences large increase distance 
inflection point seek time rises gradually increasing seek distance 
note seek profile disks plateau possible values determining value chose discontinuity point seek times distance cylinder seek time seek times larger cylinder seek time 
note just way choosing appropriate value practice disk designers choose value manually physical disk parameters just choose value track cylinder skew 
case choice trade larger value increases number potential dimensions accessed efficiently efficiency accesses individual adjacent blocks 
measured seek curves determine suitable values disk drives 
recall maximal seek distance cylinders positioning time nearly constant 
table lists value disk drive determined inflection point discontinuity seek profile 
pair numbers table shows percentage difference seek time distance cylinder distance respectively cylinders highlighting discontinuity 
expected disk drives value increases 
second difference cylinder cylinder seek times 
difference seek time cylinder seek significant value cylinder seek 
determined value simply multiply number surfaces disk arrive depicts values disks 
disks value table multiply maximal number surfaces disk 
table cheetah es 
plot value function year particular disk model introduced 
years multiple disks average value analyzed disk models 
confirming trend analysis value increases year year 
recall value proportional number surfaces disk lower capacity versions disk drives experiments smaller values 
measuring directly verify previous method determining measuring directly 
measure value course easily determined usenix association fast th usenix conference file storage technologies seek time ms atlas iii atlas iv atlas seek distance cylinders maxtor enterprise class disks fast th usenix conference file storage technologies seek time ms cheetah es cheetah cheetah measured seek profiles 
cylinders shown 
cyl seek diff 
vs disk model year cyl cyl atlas iii atlas iv atlas cheetah es cheetah cheetah table estimated values seek profiles 
seek times compare extracted value cylinder seek cylinder seek 
column lists percentage increase cylinder cylinder seek time 
dividing number surfaces disk low level layout model value identify blocks adjacent starting block 
experiment chooses random starting block destination block tracks away skewed degrees relative starting block 
issue requests disk simultaneously measure response time individually 
difference response time equal settle time disk blocks truly adjacent increase response time second request increases significantly rotational period disk 
value maximum distance disk head move access adjacent blocks missing rotations 
adding conservatism rotational offset provides useful buffer nondeterminism seek time 
especially true experimenting real disks baseline values include aggressive value conservatism 
recall atlas iii layout example uses buffer track cylinder skews 
larger conservatism increase value expense additional rotational latency lower semi sequential efficiency 
conceptually adjacent blocks seek distance cylinders seagate enterprise class disks trend estimated value reported values estimated values multiplied disk maximal number surfaces 
years measured data disk model report average value analogous moving right seek profile past discontinuity point 
larger values turn allow mappings data sets dimensions maintaining efficiency accesses dimensions 
conservatism larger lowers achieved semi sequential bandwidth considerably increases value illustrated 
shows comparison value seek profile estimates reported table measured values approach 
disk show bars 
bar labeled estimated value estimated second third bar labeled measured measured show measured value conservatism respectively added estimated values measurements disks fewer models reported table 
contrast values reported disks maximal capacities 
year eliminating rotational latency key feature adjacent blocks definition accessed immediately disk head usenix association adjacent blocks time ms estimated measured measured cheetah es atlas iii cheetah comparison estimated measured cheetah es comparison estimated measured nearby adjacent atlas iii cheetah quantifying access times 
graph compares access times blocks located cylinders 
disks average rotational latency ms cheetah ms settles rotational latency 
quantify benefits eliminating rotational latency compare adjacent access simple nearby access tracks 
explicit knowledge adjacency accessing pair nearby blocks incur average rotational latency half revolution addition seek time equivalent settle time 
blocks specifically chosen adjacent rotational latency eliminated access efficient 
shown adjacent access outperforms nearby access factor elimination rotational latency additionally access time nearby case varies considerably due variable rotational latency access time variability smaller adjacent case entirely due difference seek time cylinders depicted error bars 
expressing adjacency applications previous sections detailed principles efficient access adjacent blocks demonstrated existing functions inside disk firmware request schedulers readily identify access blocks 
today interfaces expose blocks outside disk 
section presents method disk model extra access time atlas iii ms ms ms cheetah es ms ms ms cheetah ms ms ms increasing conservatism increases access time 
exposing adjacent blocks applications efficient access multidimensional data 
describes individual disks cleanly expose adjacent blocks shows combine information individual disks comprising logical volume expose abstractions 
exposing adjacent blocks allow efficient access linear abstraction disk drives sets explicit contract contiguous lbns 
extend efficient access adjacent blocks need expose explicit relationships set adjacent lbns non contiguous 
expose adjacency relationships need augment existing interface function called 
lbn function returns list adjacent lbns implemented similarly lbn physical address translation vendor specific scsi mode page accessed mode select command 
application need know reasons returned disk blocks adjacent just needs identified function 
useful conceptual way express adjacency relationships disk blocks constructing adjacency graphs shown 
graph nodes represent disk blocks edges connect blocks adjacent 
graph shows levels adjacency root node starting block nodes intermediate level adjacent block nodes bottom level adjacent blocks intermediate level 
note adjacent sets adjacent blocks bottom level graph overlap 
brevity graph shows adjacent blocks considerably larger disk described section 
concept adjacent blocks applications lay access multidimensional data existing abstraction disk 
pos usenix association fast th usenix conference file storage technologies fast th usenix conference file storage technologies adjacency graph lbn atlas iii 
levels adjacent blocks shown 
lbns shown inside nodes 
sible explicit mapping particular points data multidimensional space particular lbns identified disk drive 
identifying adjacent blocks current disk drives expose adjacent blocks access disk firmware necessary modifications describe algorithm identifying absence proper storage interface functions 
algorithm uses detailed model low level disk layout borrowed storage system simulator called 
parameters extracted scsi disks previously published methods 
algorithm uses functions disk specific details disk model returns physical angle physical location lbn disk zero position returns lbn ends track containing 
convenience algorithm defines parameters 
parameter number disk blocks track calling subtracting low lbn high lbn 
course value varies zones individual disk determined call 
second parameter defines angle starting block adjacent blocks 
angle calling function twice consecutive lbns mapped different tracks computing difference disks skew mapping lbns consecutive tracks degrees account settle time optimize sequential access 
algorithm shown takes input starting lbn finds adjacent lbn degrees ahead tracks away 
disk block adjacent block closest tracks entire set adjacent blocks calling increasing values find lbn adjacent tracks away find required skew target lbn find lbn target track find minimum skew target track find offset target lbn start target track convert offset skew lbns find physical skew measured degrees find boundaries track containing track length varies zones disk skew add adjacent blocks measured degrees algorithm function 
logical volumes far discussed expose adjacent blocks applications single disk drive 
large storage systems combine multiple disks logical volumes 
perspective logical volume manager lvm adds level indirection mapping volume lbn lbns individual disks 
set adjacent blocks lvm choose explicit grouping lbns underlying disks 
exposed adjacent blocks particular disk mapped lvm 
application multi disk logical volume appear bigger faster disk adjacent blocks set cardinality usenix association existing disks implement functions prototype implementation shim layer lvm extracts information disk drives 
logical volume initially created provides functions disk 
lvm stripes contiguous individual disks exposes applications set adjacent blocks space function 
disk array logical volumes lvm matches stripe units track sizes efficient sequential access 
lvm exposes applications stripe unit size function 
adopt common raid raid protection schemes utilize multi zone disks defective blocks fashion similar previous 
multi zone disks lvm create multiple logical volumes zone create logical volume spans multiple zones 
case lvm uses varies value number sectors track disk zone mapped 
put differently approach adopt experiments single logical volume variable stripe unit size mappings multidimensional data information exposed function determine proper mapping dimension see section details 
depend number zones strictly function track density tpi seek profile fixed disk change location track 
multidimensional data placement section demonstrates datasets applications utilize adjacent blocks parameter datasets disks way preserves spatial locality 
experiments real disks various workloads show new mapping scheme outperforms existing schemes 
data placement preserves locality demonstrate efficiency accesses adjacent blocks compare existing mapping schemes multidimensional data naive hilbert new mapping scheme called multimap 
naive scheme linearizes dataset chosen primary dimension time 
hilbert scheme orders points hilbert curve values 
multimap mapping scheme uses adjacent blocks preserve spatial locality multidimensional data disk 
partitions multidimensional data space smaller chunks called basic cubes example mapping dataset multimap 
row graph represents disk track length cell corresponds disk block number inside box 
suppose value 
dimension mapped sequential blocks track 
dimension mapped sequence adjacent blocks 
example adjacent block adjacent block dimension mapped sequence th adjacent blocks 
instance th adjacent block th adjacent 
way multimap utilizes adjacent blocks different steps preserve locality disk 
maps points basic cube disk blocks single disk 
dataset example multimap maps points dimension sequential lbns accesses take advantage full sequential bandwidth disk 
points dimension mapped sequence adjacent blocks 
lastly dimension mapped sequence th adjacent blocks shows 
sequence adjacent blocks easily obtained calling repeatedly 
lvm comprised disks neighboring basic cubes mapped different disks basic cube multidimensional stripe unit 
multimap preserves spatial locality sense neighboring points geometric space stored disk blocks adjacent allowing access minimal positioning cost 
accessing adjacent block th adjacent block cost access separate points equidistant starting point 
mapping preserves spatial relationship point point equidistant terms positioning cost starting point 
retrieval dimension result efficient sequential access retrieval result accesses efficient random nearby access shown 
note multimap simple mapping data set cylinder head sector tuple representing coordinates physical blocks disk 
multimap provides general approach mapping ndimensional data sets adjacent blocks 
disk maximum number dimensions usenix association fast th usenix conference file storage technologies mapped efficiently limited disk log 
focus analysis principles multidimensional access general data layout algorithm provide generalized algorithm derivation analysis limits 
experimental setup experimental setup uses hardware configuration section 
prototype system consists software components running host machine logical volume manager lvm database storage manager 
production system lvm reside inside storage array system separate host machine 
prototype lvm implements algorithm exports single logical volume mapped multiple disks 
database storage manager maps multidimensional datasets utilizing functions provided lvm 
query type issues appropriate os lvm breaks os proper requests individual disks 
requests issued order disk firmware scheduler reorder minimize total positioning cost 
datasets experiments stored multiple disks lvm 
akin commercial disk arrays lvm uses disks type utilizes part slice disk total space 
slices experiments slightly half total disk capacity span zones 
lvm generates requests disks experiments report performance results single disk 
reason examine average response times depend characteristics single disk drive 
multiple drives improves throughput affect relative performance comparisons mappings database storage manager implements naive hilbert multimap 
evaluate types spatial queries 
beam queries dimensional queries retrieving data points lines parallel cardinal dimensions dataset 
range queries called length cube queries fetch cube edge length equal dataset edge length 
results dataset dataset experiment contains cells cell maps distinct lbn logical volume contains data points fit 
partition space chunks fit portion single disk 
disks multimap uses conservatism fast th usenix conference file storage technologies beam queries 
results beam queries 
run beam queries dimensions graphs show average time cell disk block 
expected multimap model delivers best performance dimensions 
matches streaming performance naive importantly multimap outperforms hilbert naive disks 
multimap achieves identical performance disks hilbert naive 
disks comparable settle times affect performance accessing adjacent blocks range queries 
set bars labeled shows performance length cube queries expressed total runtime 
performance scheme follows trends observed beam queries 
multimap improves query performance averaged disks query types respectively compared naive hilbert 
multimap hilbert outperform naive employ sequential access range queries 
multimap outperforms hilbert hilbert fetch cells physically distant disk blocks close original dataset 
jumps hilbert efficient compared multimap semi sequential accesses 
examine sensitivity cube query size run length length cube queries results second third sets bars 
trends similar multimap outperforming hilbert naive 
total run time increases query fetches data 
results dataset earthquake simulation grid model region earth 
simulation computes motion ground node grid number discrete time steps 
simulation output contains set grids step 
dataset grid modeling km deep slice earth km area vicinity los angeles total size gb data 
total number time steps 
choose time primary dimension naive multimap schemes partition space chunks fit single disk 
results exhibit trends experiments 
multimap model achieves best performance beam range queries 
unusually performance naive due particularly fortunate mapping results strided accesses incur rotational latency 
ratio strides track usenix association time cell ms time cell ms naive hilbert multimap maxtor atlas iii maxtor atlas iii naive hilbert multimap time beam queries 
beam queries 
naive hilbert multimap seagate cheetah es total time ms naive hilbert multimap maxtor atlas iii performance spatial dataset 
seagate cheetah es naive hilbert multimap time sizes explains counterintuitive trend naive scheme performance cheetah disk outperforms outperforms range queries shown perform disks expected case 
summary multimap efficient processing queries spatio temporal datasets earthquake simulation output scheme combine streaming performance time varying accesses efficient spatial access preservation locality disk 
exploits disk drive technology trends 
improves access multidimensional datasets allowing spatial locality data preserved disk 
analysis characteristics state art disk drives show efficiently access non contiguous adjacent lbns hundreds tracks away 
accesses readily realized existing disk firmware functions mappings lbns physical locations 
prototype implementation built real shelf disk drives demonstrate applications utilize streaming bandwidth accesses dimension efficient semi sequential accesses dimensions 
best knowledge approach preserve spatial locality stored multidimensional data improving performance current data placement techniques 
total time ms naive hilbert multimap range queries 
maxtor atlas iii performance earthquake dataset 
acknowledgments range queries 
naive hilbert multimap seagate cheetah es naive hilbert multimap seagate cheetah es john bucy years effort developing maintaining disk models 
members companies pdl consortium including apc emc hewlett packard hitachi ibm intel microsoft network appliance oracle seagate sun interest insights feedback support 
ibm intel seagate hardware donations enabled 
funded part nsf iis ccr microsoft research ibm faculty partnership award 
abdel abbadi 
optimal allocation dimensional data 
international conference database theory delphi greece pages january 
fernandez kim lopez hallaron tu 
high resolution forward inverse earthquake modeling computers 
acm ieee conference supercomputing page 
anderson riedel 
interface scsi vs ata 
conference file storage technologies san francisco ca march april pages 
usenix association 
atallah prabhakar 
optimal parallel block access range queries 
acm sigmod sigact sigart symposium principles database systems dallas texas usa pages 
acm 
usenix association fast th usenix conference file storage technologies bhatia sinha 
chen 
declustering golden ratio sequences 
icde pages 
chen patterson 
maximizing performance striped disk array 
ucb csd 
computer science div department electrical engineering computer science university california berkeley february 
deshpande shukla naughton 
caching multidimensional queries chunks 
acm sigmod international conference management data pages 
acm press 
simulation environment version 
www pdl cmu edu index html 
emc 
emc dx product guide www emc com products systems series jsp 
faloutsos 
multiattribute hashing gray codes 
acm sigmod pages 
faloutsos bhagwat 
declustering fractals 
international conference parallel distributed information systems san diego ca usa 
gaede nther 
multidimensional access methods 
acm comput 
surv 
lilja 
performance twodimensional data models limited non numeric applications 
laboratory advanced research computing technology compilers technical report arctic 
university minnesota february 
gray bosworth layman pirahesh 
data cube relational aggregation operator generalizing group cross tab sub total 
icde pages 
ieee computer society 
gray szalay stoughton 
data mining sdss database 
technical report 
microsoft research 
guttman 
trees dynamic index structure spatial searching 
acm sigmod pages 
hilbert 
ber die abbildung einer auf fl ck 
math 
ann 
jagadish lakshmanan srivastava 
snakes optimal clustering strategies data warehouse 
sigmod rec 
acm press 
koudas faloutsos kamel 
declustering spatial databases multi computer architecture 
international conference extending database technology avignon france 
moon jagadish faloutsos saltz 
analysis clustering properties hilbert space filling curve 
technical report 
university maryland college park 
office science data management workshops 
office science data management challenge 
technical report 
department energy 
orenstein 
spatial query processing object oriented database system 
acm sigmod pages 
acm press 
prabhakar abdel agrawal abbadi 
efficient retrieval multidimensional datasets parallel international conference high performance computing page 
ieee computer society 
ruemmler wilkes 
disk drive modeling 
ieee computer march 
schindler ganger 
automated disk drive characterization 
technical report cmu cs 
carnegie mellon university pittsburgh pa december 
schindler griffin ganger 
extents matching access patterns disk drive characteristics 
conference file storage technologies monterey ca january pages 
usenix associa fast th usenix conference file storage technologies tion 
schindler schlosser shao ailamaki ganger 
atropos disk array volume manager orchestrated disks 
conference file storage technologies san francisco ca march april 
usenix association 
schlosser schindler ailamaki ganger 
exposing exploiting internal parallelism mems storage 
technical report cmu cs 
carnegie mellon university pittsburgh pa march 
seltzer chen ousterhout 
disk scheduling revisited 
winter usenix technical conference washington dc january pages 
shao schindler schlosser ailamaki ganger 
clotho decoupling memory page layout storage organization 
international conference large databases toronto canada august september 
shao schlosser schindler ailamaki faloutsos ganger 
multimap preserving disk locality multidimensional datasets 
carnegie mellon university parallel data lab technical report cmu pdl 
march 
shukla deshpande naughton 
storage estimation multidimensional aggregates presence hierarchies 
international conference large databases pages 
morgan kaufmann publishers 
stockinger hoschek 
improving performance high energy physics analysis bitmap indices 
database expert systems applications pages 
rahm 
multi dimensional database allocation parallel data warehouses 
international conference large databases pages 
morgan kaufmann publishers 
arpaci dusseau patterson 
microbenchmark extraction local global disk characteristics 
technical report csd 
university california berkeley june 
worthington ganger patt 
scheduling algorithms modern disk drives 
acm sigmetrics conference measurement modeling computer systems nashville tn may pages 
acm press 
worthington ganger patt wilkes 
online extraction scsi disk drive parameters 
acm rics conference measurement modeling computer systems ottawa canada pages may 
yu agrawal abbadi 
tabular placement relational data mems storage devices 
international conference large databases berlin germany september pages 
yu 
ma welling 
automated design multidimensional clustering tables relational databases 
international conference large databases 
yu 
ma welling 
parallel visualization pipeline earthquake simulations 
acm ieee conference supercomputing page 
zhao deshpande naughton 
array algorithm simultaneous multidimensional aggregates 
acm sigmod international conference management data tucson az may 
published sigmod record 
acm 
usenix association 
