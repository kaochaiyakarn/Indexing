distributed cbr xml conor hayes cunningham michelle doyle department computer science trinity college dublin conor hayes cs tcd 
cbr case reasoning considerable potential developing intelligent assistants world wide web 
case intelligent applications exist web applications follow thin client model intelligence located server side 
explore advantages making applications distributed 
illustrate kinds application dialogue case base long lived network latency server load suggest processing distributed client side 
architecture distributed cbr system describe case representation language xml facilitate distribution 
advantages adopting xml case representation language interoperability flexibility reuse discussed second half 

web intelligent assistants cbr case reasoning existence see web site case reasoning web list 
illustrates knowledge engineering advantages cbr effective reasoning strategy weak theory problems problems difficult elicit principle rules solutions may deduced 
characteristic early applications involve implementations existing cbr technology web context client remote dialogue browser cbr application server side 
ideas current research strands 
extend incremental cbr cbr approach network applications particularly areas predictive feature expensive difficult come 

examine distributed architecture system 
client server interaction long lived information theoretic technique cbr computationally expensive response time may poor 

situate strands part process creating open standards case network computing case base storage possible interoperability non cbr systems 
currently growing number thin client applications web 
thin client mean application presentation logic simple error handling client server side handles business logic logic required integrate ends wilcox 
argue set may suitable online applications particularly situations server contacted times part incremental process 
architecture distributed cbr allows case base processing performed client side 
objective distribution improve response times user 
addition introduce cbml xml application data represented cases 
extensible mark language xml simplified subset sgml developed xml working group facilitate easy transmission structured data existing network protocols bray paoli mcqueen 
distributed cbr response time advantages user case representation language xml advantages interoperability ease reuse 
xml standard content internet xml parsers freely available java 
means knowledge data marked cbml readily reusable applications intelligent agents 
section describe type web cbr application interaction long lived networking problems result poor response times user 
section informatik uni kl de lsa cbr html architecture distributed cbr addresses problem section introduce cbml case representation transport cases network 
section discusses benefits developing standard mark language network cbr applications 

web cbr applications section wish establish idea dialogue case assistant longlived 
occur user may engage case assistant rough idea requirements 
requirements refined user interacts system 
consider example web travel advisor system 
typical cases shown table 
cases taken travel agents case base scenario consider user comes system knowing wants car holiday people star accommodation 
requirements produce target case just slots filled 
passed case retrieval mechanism tens hundreds cases retrieved thousands cases available 
user asked refine query narrow search 
done inviting user provide extra information indicating user piece information discriminating efficient reducing set candidate cases smyth cunningham cunningham smyth 
scenario evaluate consider second incremental model cbr cbr retrieval engine indicates user discriminating feature provide 
instance system ask user select holiday type types offered 
table 
cases travel case base target case 
journey journey target case recreation wandering price region transportation car car car duration season august july accommodation hotel hotel kandel black forest process continues consistent set cases remains discriminating set user requirements determined cases available meet users requirements 
situation user invited backtrack relax requirements 
key point process involves long lived interaction case base 
system implemented thin client case base processing back network latency server load may produce poor response times user 
existing commercial systems characteristics long lived interaction op amp selection assistant analog devices configuration agent cisco section describe architecture distributed cbr allows case base processing distributed front 
eliminate delay due network latency reduce load server available machine cycles client side 

distributed cbr architecture distributed cbr shown 
current thin client alternative browser interface front connects server back case available informatik uni kl de bergmann html com analog query htm www cisco com bin front config root pl base processing performed back 
distributed architecture cbr engine downloaded client side allow stages processing performed 
detail operation distributed system best explained context travel example section 
interface allows user describe requirements 
partial case description passed cbr front query context 
initially passed cbr back find matching cases 
potential matches cbr engine identify feature matched cases discriminating 
passed user interface refining question 
response request extra information passed back refined query context 
process continued time query context sufficiently discriminating 
point matching cases passed user interface 
client refining question browser interface query context cbr front matching case cbr engine cb cbml network server cbr back cbr engine 
architecture distributed cbr process query context refined set potentially matching cases reduces 
advantage distributed architecture set sufficiently small passed front processing completed interaction network 
decision precisely depends size cases response time network 
java implementation intranet context reduced case base passed serialised objects client side 
advantage cases re parsed loaded memory downloading 
unfortunately firewalls internet 
consequently developing xml case representation passed plain text protocol pass firewalls proxy servers 

case representation xml background section areas research 
concerned case representation fundamental aspect cbr paradigm 
issue methodologies representing cases manner allows efficient retrieval easy maintenance provides transmission network 
second research area connected devising open standards intelligent web applications 
standards provide inter agent communication movement data network application application entailing truly distributed computing environment 
cbml previously mentioned developing case representation language xml system 
language currently named cbml case markup language 
section design goals cbml briefly discussed example cases marked cbml version 
detailed discussion language scope 
main goal develop representation language cbr systems exchange information internet intranet 
language developed xml metalanguage representing structured data network systems 
reasons discussed section 
criterion language provide similar functionality case representation language design evolves cb part 
object oriented language inheritance feature included version cbml simplicity 
versions cbml probably object oriented complex cases represented 
stands cbml simple flat feature value representation 
case base marked cbml consists main files describing structure case domain containing cases 
file xml contains information features case base type constraints weights extract shows features previously mentioned travel agents case base marked cbml version 
xml version doctype system dtd 
name type kind integer name holiday type kind symbol range enumeration arbitrary active adventure city diving education language recreation skiing shopping surfing wandering enumeration range type name duration type kind integer range interval start value finish value interval range type 
lines example simply state version xml dtd document type definition file dtd 
full explanation dtds outside scope section essence dtd allows define tags language 
dtd indicate permitted contents tag character data nested tag allowed attributes 
example see type range enumeration tags defined cbml 
enumeration tag contains character data range tag contains interval tag enumeration tag 
tag attribute called name 
xml document dtd conforms dtd termed valid 
partial dtd type enumeration tags taken dtd 
element type weight constraint consists type tag weight tag constraint tag optional attlist name id required attribute name element type range type consists optional range tag type attribute kind certain allowed values attlist type kind integer symbol ordered symbol string real symbol element enumeration pcdata example see partial contents second file xml 
dtd short enclosed file referenced external file 
example gives brief indication cases marked cbml look 
third file dtd document type definition case structure file 
explained xml version doctype cases element cases element attributes solution attlist id required element attributes attribute element attribute pcdata attlist attribute name cdata required element solution pcdata cases attributes attribute name attribute attribute name attribute attribute name price attribute attribute name attribute attribute name region egypt attribute attribute name transportation plane attribute attribute name duration attribute attribute name season april attribute attribute name accommodation attribute attributes solution hotel white house egypt solution 
cases 
advantages cbml advantages cbml standard rooted strengths afforded xml 
xml extensible mark language designed facilitate traffic complex hierarchical data structures network protocols 
xml applications produced exchange data particular specific disciplines industries 
instance open trading protocol otp developed retail trade web otp consortium interest group internet commerce otp consortium 
xml document parsed dtd xml compliant application understand semantics data contained 
data represented exchanged independent software transmission 
jon sun online information technology architect chair xml working group views xml technology complementary platform independent philosophy java language extending computing potential particularly scenario distributed client side processing web agents 
xml application cbml provide sgml compliant standard storing exchanging case bases 
case base simply just form data representation particular dtd 
available processing xml compliant applications cbr 
hopes avoid current scenario case representation application dependent 
instance case data delivered desktop available local computation variety applications 
data read browser delivered local application viewing processing data manipulated script programming languages xml document object model 
distributed model outlined earlier cases delivered client processing 
successful match case solution delivered local application testing 
data represented form structured cases viewed multiple ways 
local case base variety ways employment style sheets 
allows multiple visual representations hierarchical case structures 
views prove important case editing tools 
xml enables granular updating 
distributed cbr environment servers dispatch entire subsection case base client time change 
server holds profile sent client resends changed element summer institute linguistics web page 
xml proposed applications industry initiatives 
www sil org sgml xml html applications dispatch 
furthermore xml facilitates late binding presentation cbml format allow centralized case data quickly updated 

distributed architecture cbr motivated need move processing client side order improve interactive response times 
introduced cbml xml application protocol enabling distributed cbr 
implementing case markup language opens door distributed cbr computing network 
web format xml allow local case bases updated granular fashion sending changed elements server client 
data delivered user desktop viewed multiple ways client gui receiving cbml data offer human reasoner visual representation local case base possibility simple editing 
furthermore client cbml application possibly process case base downloads deemed valid parser 
scenario ideal outcome philosophy open standards informing development xml 
look open standards key inter application communication web paving way distributed hybrid tools internet 
lack open standard representing semantic data point stumbling block agent engineering web petrie 
cases proposed cbml standard poses possibility allowing mobile agents access large repositories case storage 
view web agent engineering networked cbr application self sufficient task domain fact node potentially broader application network 


jon 
xml java web sun microsystems available sunsite unc edu pub sun info standards xml htm published journal fall xml principles tools techniques 
bray 
paoli sperberg mcqueen eds 
extensible mark langauge consortium recommendation feb www org tr rec xml 
cunningham smyth incremental retrieval mechanism case electronic fault diagnosis appear knowledge systems 

consortium 
common case representation language available informatik uni kl de bergmann toc fm html 
building case help desk application ieee expert 

microsoft frequently asked questions extensible mark language xml 
url www microsoft com xml html 
petrie charles agent engineering web intelligence 
ieee expert vol 

december 
available cdr stanford edu expert html 
smyth cunningham comparison incremental case reasoning inductive learning advances case reasoning lecture notes artificial intelligence keane eds springer verlag 

summer institute linguistics web page 
xml proposed applications industry initiatives 
www sil org sgml xml html applications 
open trading protocol consortium internet internet open trading protocol specification parts 
available download www otp org 
working draft dec 
document object model specification 
url www org tr wd dom 
wilcox steve designing thin java client applications network computers 
llc 
java sun com html 
