efficient scalable motif discovery graphbased search amit sinha raj dept university cincinnati cincinnati oh usa identification short repeated patterns motifs genomic sequences key problems bioinformatics 
promoter regions genes important target search motifs transcription factor binding sites 
new algorithm detecting potential binding sites set genomic sequences 
informed search performed organizing input patterns variants graph 
strategy efficiently leads desired solutions 
background modeled markov process composite score function 
demonstrate performance algorithm testing real life data sets yeast human promoter sequences 
compared performance popular algorithms algorithms lower organisms yeast couple human data 
show algorithm scales linearly size input dataset 
compare computational efficiency algorithm algorithms show performs faster different datasets motif sizes 
completion genomic projects generated huge amount sequence data 
data needs functionally annotated practical 
computational intelligence techniques decade find useful information large datasets 
biological data provides unique challenges give impetus generating novel data mining paradigms assigning functional roles raw dna protein sequences 
addition long functional regions genes short sequences genome play important role cellular processes 
search short repeated patterns known motif discovery problem 
variants problem focus detection transcription factor binding sites 
transcription gene initiated proteins called transcription factors tfs 
proteins bind specific locations dna regulate transcription gene 
typically number tfs act combination activate transcription 
discovery individual modular important helps understanding gene regulatory mechanism 
number bioinformatics approaches identification 
conventionally sequence scanned motifs match known experimentally identified promoters regulatory sites 
experimental data specific binding sites characterized tfs compiled databases 
examples programs include match compare genomic sequence input binding site data libraries return list potential statistical match region sequence binding site 
approaches result large number false positives 
additionally completeness libraries major limitation 
identified known tfs binding specificity fully characterized 
alternative approach overcome problem involves search common represented sequence motifs upstream regions group genes 
main advantage approaches potential discover novel 
programs currently available purpose advantages caveats see section ii related 
clearly room improvement especially predicting regulatory regions higher tf cooperativity widespread lower eukaryotes yeast 
identification short functional motifs challenging binding sites small degenerate 
example experimentally validated binding site specific transcription factor transcription factor bind sites slightly different 
example show fig 

fig 

instances motif motif sequences albeit variations 
patterns called instances motif input sequences 
instances marked bold base match known motif shown lower case 
review brings forth computational statistical tasks de novo motif discovery process search step scoring step 
search step comprehensive identification patterns input sequences 
call patterns candidate motifs 
scoring step separating motifs patterns occur just chance 
usually score assigned candidate motif statistics 
motifs ranked score top ranking motifs reported user 
search step definition binding site motif disputed commonly accepted formulation motif discovery problem defined way sequences length usually promoter regions genes find set binding sites size sequences mutations mismatches 
search binding sites genomic sequences np hard 
complete polynomial solution exist 
na search may discover thousands candidate motifs satisfy constraints may true motifs 
scoring step challenge predict motifs large number false positives 
size motifs small base pairs probability multiple occurrences pattern chance high 
direct way assessing transcription factor binds predicted site 
usually predicted results experimentally verified may take months 
statistical measures find chance match just random occurrence 
algorithm de novo sequence motif discovery 
address search scoring aspects problem 
develop exhaustive efficient search method coupled composite scoring function 
scoring function pruning candidates search process 
auxiliary information sequences phylogenetic known improve prediction motifs 
suggests information available postprocessing step 
focus computational challenges problem 
ii 
related motif discovery problem studied extensively decade 
large number tools available focus important ones 
meme earliest tools profile method expectation maximization selecting motifs 
consensus profiles 
starts creating profile mers strings size input sequence pair wise merging profiles construct prevalent motifs 
algorithms approximations searching frequently occurring patterns may get right output case 
quite tools gibbs sampling strategy alignace 
algorithms dyad analysis search local search techniques methods trapped local minima 
ref 
compared methods low complexity genomes yeast perform poorly human genomes pattern enumerative algorithms performed better comparisons 
stores input sequences suffix tree 
possible motifs enumerated searched suffix tree finding occurrences input sequences 
approach computationally expensive 
number possible patterns exponential length pattern heuristics applied speed search 
pattern algorithm searches input space starting pairs patterns share short subsequence length 
pairs combined get larger sets related patterns 
shown better algorithms greedy search strategy guaranteed find best solution 
propose algorithm deterministic exact 
enumerative algorithms possible solutions generated patterns input organized graph quickly find solutions 
graph search methods proposed earlier 
algorithms perform local optimization search exhaustive search possible solutions 
order conquer exponential nature search space need informed search possible non promising parts search space may pruned away early 
proposed approach uses scoring function stage search process successively narrow space possible hypotheses 
approaches scoring function exhaustive search evaluate motifs 
robust search technique works noise data performance remains motifs input sequences situation encountered real life 
methods tried synthetic challenge data sets low complexity bacterial genomes 
couple efficient search method hybrid scoring function performs real life datasets complex eukaryotic genomes apart genomes 
addition different search strategies large number scoring schemes proposed different groups 
popular method train markov model background predict probability occurrence motif model 
consensus uses value motif profile proposes score scores capture different properties motif 
methods solely perform 
hand methods perform combination statistics 
uses score posterior probabilities uses conservation bases different instances motif probability occurrence third order markov model 
algorithms focus little computational efficiency scalability 
data available issues important 
focus aspects motif discovery process 
current algorithms black box report instances motifs 
graph framework enables find motif provides relationship different instances 
iii 
methods motif discovery problem formally defined 
set sequences st length find pattern length exists pattern qi si dh qi distance measure dh hamming distance measures number mismatches patterns pattern exists called motif 
parameters usually provided user typical values usually chance motif may input sequences quorum condition relaxed motifs sequences reported 
may noted pattern may may occur explicitly shown fig 

typical value length promoter region base pairs 
candidate motifs ranked likelihood nonrandom pattern 
case similarity measure hamming distance number mutations patterns 
patterns differ exactly positions dh pattern called mutant vice versa 
search multi level graph patterns motif intermediate patterns arranged nodes graph 
intermediate patterns patterns generated search motifs 
mers derived input sequence form nodes bottom level level graph 
patterns level mutants patterns level 
similarly patterns level mutants patterns level 
graph pattern connected mutants 
pattern level connected pattern level mutant possible motifs nodes graph connected node sequences level 
connection may intermediate nodes 
seq seq seq fig 

sample dataset sequences length sample dataset shown fig 

dataset contains sequences length illustrate construction graph structure 
fig 
shows part graph dataset fig 

search motifs find patterns length mismatches pattern input sequence 
patterns sequences form level graph 
mutants node level fig 

graph sample dataset added level new node connection nodes 
mutants shown 
similarly mutants nodes level added level 
adding mutant higher level higher level searched presence pattern 
exists simply new connection 
example pattern level adds mutant level 
pattern level generates mutant 
exists level new node created connection parent node existing node 
patterns directly added higher level 
top level create higher level iteration algorithm 
method similar consensus 
generating possible position weight matrices pwm mutants generated works faster 
example motif motif indicated thick oval 
node level connected node sequence level motif 
node level connected node sequence level intermediate nodes level motif 
motif level motif apart patterns input sequence level 
search algorithm algorithm exhaustive enumeration mutants pattern generate higher level 
algorithm shown fig 

step algorithm gets mers input sequences constructs bottom level graph 
input sequence length overlapping 
nodes level expanded generating mutants patterns 
pattern exists higher level step edge drawn nodes new node created step 
graph constructed nodes graph meet quorum reported candidate motifs measuring statistical significance ranking 
quorum computed counting number input sequences motif 
looking nodes level node connected 
level level level input sequences form level mers sequences level li pattern aij aij li generate mutants aij patterns exists level li form connection nodes create new node level li connect new node aij nodes graph connected node sequence level motifs 
fig 

algorithm input sequences give rise input patterns 
number nodes level equal tn 
pattern produce mutants different existing patterns 
worst case number nodes level tn 
similarly number nodes level tn generalizing number nodes level tn total number nodes graph levels tn tn tn tn tn tn 
similar argument finding 
iteration algorithm tn nodes level processed 
time required proportional tn 
processing level nl nodes processed 
time required tn worst case complexity linear function input size tn polynomial function length motif exponential number allowable mismatches 
surprising problem np hard 
worst case scenario encountered practice duplicate patterns generated level start patterns input sequences 
modeling background promoter regions just random sequences bases strong biases 
example human promoter sequences genes regulated transcription factor repetitive patterns cg repeats lot patterns generated algorithm may simply artifact bias input sequences true signals 
need way discriminate signal background input sequences 
known repetitive elements dna repeats discarded 
second input sequences modeled third order markov process 
choice order debatable third order markov model ideal common genomic signals bases long tata boxes 
model probability sequence context background calculated follows 
sl sl sl sl probability occurrence sequence length si ith letter model may constructed locally globally data set 
background model created promoter sequences motif searched promoter sequences genome construct model 
local model reasons 
firstly tools allow options perform better local models 
reasonable local model capture fine nuances input sequences 
secondly possible construct global model data promoter regions genome may easily available especially newly sequenced genomes 
having constructed model probability candidate motifs calculated 
motifs low values probability signify represent potentially true signal merely artifact sequence biases 
ranking candidates algorithm described section iii generates large number candidates true motifs 
simply measuring probability candidate sequence background model described section iii suffice discover true motifs 
various statistical measures proposed measure likelihood candidate true motif 
measures captures different type information motif 
set occurrences motif relative entropy measures level conservation base position motif pattern 
relative entropy score usually high known motifs 
measures fail discriminate true motifs 
propose composite scoring function ic ic log ij pij log motif mi ith occurrence motif total number occurrences motif input sequences po mi probability observing pattern mi background model pij probability observing base position motif profile background probability observing base length motif dh mi mj hamming distance patterns mi mj 
component captures different type information candidate motif 
component sp measures average logs probability occurrence instances motif 
second component sic compares information content relative entropy instances motif known background probability base 
third component ss measures mutual similarity different instances motif 
helpful picking true motifs true motif score high measure 
candidates generated algorithm score assigned candidate motif 
ranked decreasing order score top ranking motifs reported user 
pruning search space modeling background helps pruning graph speeding search 
idea pattern high probability occurrence instance motif 
nodes graph probability higher fixed threshold expanded 
heuristic fix threshold mean probability patterns input 
probability true motifs mean pruning strategy discard patterns occur chance 
see sections improves efficiency search decreasing sensitivity 
iv 
results algorithms implemented tested wide variety datasets correctness efficiency 
time consuming part program searching existing patterns level adding new node 
storing level hash table improved performance 
performance evaluation tested performance algorithm real life datasets yeast human promoter sequences 
yeast dataset gene regulation mechanism simpler studied lower organisms yeast compared mammalian genomes 
starting point testing new algorithms 
yeast transcription factor protein mcm acts activator repressor genes involved cell type determination mating cell cycle control 
ran algorithm set promoter sequences genes known regulated mcm 
promoter sequences length bases 
searched motifs length allowing mismatches 
genes known regulated mcm motifs sequences reported 
top ranking motif reported algorithm shown fig 
sequence logo 
eleven stacks letters correspond bases motif 
height stack indicates degree conservation base letter stack indicates frequent base position 
matches known binding motif mcm 
fig 

binding motif mcm algorithm motif recognized programs alignace consensus meme 
suggests lower organisms set bar accuracy motif search algorithms 
human dataset regulatory modules higher species human complex 
discovery binding sites challenging motif discovery algorithms perform poorly 
studies best methods fail find known motifs cases 
correct motif identified may highest ranked motif returned algorithm 
tompa ref 
suggests top motifs returned algorithm assessing performance algorithm 
hon jain suggest similarity threshold bases identity classifying reported motif true match 
summary motif top motifs returned algorithm matches known motif positions bases said true match 
criteria testing performance algorithm 
tested algorithm promoter sequences genes length bases known regulated transcription factor 
family transcription factors studied role regulation cell proliferation 
search step identified candidate motifs 
th ranking motif reported algorithm shown fig 

matches known motif positions 
hits may just noise novel motifs need experimentally verified 
fig 

binding motif algorithm motif recognized match positions recognized alignace consensus meme 
suggests motif search challenging mammalian genomes existing methods fail discover known motifs 
comparison run time algorithms survey algorithm outperformed algorithms accuracy clear margin wide variety tests 
demonstrated performance comparable software available comparison 
methods find right motifs mammalian genomes 
restricted time comparison algorithm 
source code downloaded author website compiled machine fair comparison 
fairness compared programs performance data sets promoter sequences obtained website 
yeast promoter sequences length bp 
human promoter sequences length bp algorithm able extract motifs detected 
fig 
shows runtime comparison algorithms 
clearly shows takes fifth time motif sizes yeast human datasets 
time secs motif size fig 

comparison runtime idea enumerating patterns length searching generalized suffix trees built input sequences 
speed computation approximations position mismatches results obtained reasonable time 
hand input patterns generate variants changing base time mimicking mutations binding site 
way search space grows controlled fashion results quickly 
may noted solution complete finds motifs making approximation 
hand uses heuristic speed search may parts search space 
outperforms wide margin 
possible efficient structure input patterns 
performance improved applying pruning search space 
pruning search space measured improvement performance search applying pruning discussed section iii 
particular tested effect number nodes added search graph number candidates generated search process applying pruning level 
assess effect pruning ran algorithm different input dataset sizes 
created secondary datasets mcm dataset sequences 
promoter length bases total input size varied bases bases 
ran program pruning pruning 
input size number nodes graph number candidate motifs observed 
fig 
shows variation total number nodes examined search process different input sizes 
fig 
shows variation total number candidates generated final output search process 
logarithmic scale axis fig 
demonstrate difference number candidates low 
number nodes number candidates pruning pruning input size num bases fig 

effect pruning total number nodes graph pruning pruning input size num bases fig 

effect pruning total number candidates generated fig 
number nodes expanded increases slower rate input size increases 
reduction number nodes due pruning decreases input size increases 
happens upper limit maximum number patterns reached 
observe pruning effective smaller input sizes 
hand fig 
shows number sequences increases number candidates decreases 
happens fewer patterns able meet quorum requirements pattern sequences 
case pruning effective larger input sizes 
input sequences bases number candidates generated pruning orders magnitude compared number candidates pruning 
total number candidates interest pruning effective large input sizes 
pruning improves efficiency compromising sensitivity search 
nodes having low probability motif pruned 
experiments section iv done pruning correct motifs discovered cases 
scalability time space complexity linear respect input size algorithm scale linearly increasing input size 
verify ran algorithm different input sizes mcm dataset 
created secondary datasets sequences 
promoter length bases total input size varied bases bases 
input size time required find motifs calculated 
results shown fig 

evident algorithm scale linearly 
studies conjectured length active promoter region may high kb 
algorithm useful mining datasets 
time secs input size num bases fig 

scalability search motifs discussion algorithm able identify motifs data noise motifs subset input sequences identified process may reported user preference 
typically binding site identification programs tested promoters group related genes expected influence common regulatory mechanism 
difficult judge priori fraction gene promoters share common motifs 
especially useful cases report motifs user fraction sequences extra computational overhead 
algorithm scales linearly input size useful large sequences 
trace evolutionary profile motif simply tracing back path graph 
promoter region corresponds say gene different species profiles readily facilitate construction phylogenetic trees 
auxiliary information known improve accuracy motif prediction 
popular approaches enhancing motif prediction searching promoters similar genes related organisms 
reported pattern true motif conserved promoters 
ideas successfully applied improve prediction motifs 
deliberately avoided comparative genomics approach reasons 
known correlation sequence conservation function results part presence large amount highly conserved non coding sequences human genome ultra conserved regions longer kb 
second importantly conserved species 
instance estimated roughly third conserved human rodents 
due degeneracy tf may bind sequence variants different species redundancy regulatory elements single gained lost affecting expression gene 
structural class transcription factor basic zipper basic helix loop helix aids de novo discovery motifs 
propose auxiliary information available post processing step 
vi 
new efficient scalable method finding motifs genomic sequences 
illustrated idea identifying transcription factor binding sites promoter sequences method may readily applied problems 
search space structured graph leads efficient discovery motifs 
algorithm assumption motif deterministic complete exhaustively finds motifs meet constraints provided user 
background genomic sequence modeled third order markov model 
candidate motifs ranked composite scoring function 
algorithm implemented applied wide spectrum real life data sets 
able detect motifs promoter regions yeast human 
popular algorithms tested worked yeast data failed human promoters 
run time comparisons done algorithms worked human promoters produced results times faster 
pruning helped speed search producing fewer candidates 
method scales linearly input size number sequences length useful analyzing large datasets 
worst case complexity exponential number allowable mismatches value small performance suffer case real data 
graph structures provides meaningful insight evolution binding site 
currently developing efficient representation patterns graph 
working identifying additional heuristics prune tree speed search process allowing quick approximations 
working dividing search space equivalence classes efficient parallelization search process 
acknowledgment anil useful discussions comments manuscript 
transcriptional regulation patterns profiles nucleic acids res 
open access database eukaryotic transcription factor binding profiles nucleic acids res 
grote promoter analysis transcription factor binding sites bioinformatics 
match 
gene regulation com www gene regulation com pub programs match bin match cgi 
fraenkel practical strategies discovering regulatory dna sequence motifs comput biol 
pevzner sze combinatorial approaches finding subtle signals dna sequences proceedings th international conference intelligent systems molecular biology 
algorithm finding signals unknown length dna sequences bioinformatics suppl 

li ma wang finding similar regions strings proceedings st annual acm symposium theory computing 
bailey elkan fitting mixture model expectation maximization discover motifs biopolymers proceedings nd international conference intelligent systems molecular biology pp 
aaai press menlo park california 
hertz stormo identifying dna protein patterns statistically significant alignments multiple sequences bioinformatics 
hughes tavazoie church computational identification cis regulatory elements associated groups functionally related genes saccharomyces cerevisiae mol 
biol 
liu brutlag liu discovering conserved dna motifs upstream regulatory regions expressed genes proceedings pac symp 
van rios vides discovering regulatory elements non coding sequences analysis spaced dyads nucleic acids res 
tompa assessing computational tools discovery transcriptional factor binding sites nature biotechnology 
web discovery transcription factor binding sites set dna sequences related genes nucleic acids research web server issue 
hon jain deterministic motif finding algorithm application human genome bioinformatics 
marsan algorithms extracting structured motifs suffix tree application promoter regulatory site consensus identification comp 
biol 
yang graphical approach motif recognition dna sequences proceedings ieee symposium computational intelligence bioinformatics computational biology 
sinha tompa statistical method finding transcription factor binding sites yeast proceedings th international conference intelligent systems molecular biology 
peng pevzner fragile breakage versus random breakage models chromosome evolution comp 
biol 
smit green org 
abraham terminal arm mcm required transcription subset genes involved maintenance cell wall cell 
hon brenner sequence logo generator genome research 
regulation cell proliferation transcription factors curr opin genet dev 
sherwood detection visualization compositionally similar cis regulatory element clusters controlled genes genome research 
informative priors transcription factor structural class improve de novo motif discovery bioinformatics 
