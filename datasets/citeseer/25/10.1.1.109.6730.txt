querying multi dimensional data indexed hilbert space filling curve college university london jkl dcs bbk ac uk mapping dimensional values onedimensional indexing method proposed way indexing multi dimensional data 
previous related uses order curve hilbert curve considered superior clustering properties 
approach practical value ective methods executing range partial match queries 
describes hilbert curve 
indexing multi dimensional data focus considerable amount research ort years generally agreed paradigm emerged compare impact tree example indexing dimensional data 
extensive review appears 
time need cient important databases larger complex structures aspirations extracting valuable information sophisticated 
mapping multi dimensional data dimension enabling simple understood dimensional access methods exploited suggested solution literature example 
way ecting mapping utilize space lling curves pass point ina space giving correspondence coordinates points dimensional sequence numbers points curve 
part interest space lling curves con ned order curve example orenstein manola 
possibility curves hilbert curve suggested previous theoretical nature 
studies show hilbert curve manifests superior data clustering properties compared curves 
technical report 
jl september king college university london dcs bbk ac uk order application hilbert curve indexing multi dimensional data viable existence technique querying data essential 
techniques order curve example herzog simply applied hilbert curve 
reports technique successfully developed part design implementation rst fully functioning data storage retrieval application utilizing hilbert curve 
sections brie describe hilbert curve mappings dimensions calculated utilize curve data storage application 
section describe strategy querying data implementation 
hilbert curve space lling curves topic interest leading pure mathematicians late th century rst graphical representation david hilbert 
understanding hilbert curve drawn gained figs 
showing rst steps nite process dimensional case 
fig 
square initially divided quadrants rst order curve drawn centre points 
quadrants ordered adjacent ordering share common edge 
step shown fig 
quadrants fig 
divided scaled rst order curves drawn connected 
note rst rst order curves di erent orientations drawn rst step adjacency property consecutive squares maintained 
fig 
shows third step 
practical applications process terminated steps produce approximation curve order passes quadrants centre points regarded points space nite granularity 
generalizing concept dimensions squares quadrants step concatenate lower middle bits step concatenate top bits coordinates form point 
locates quadrant number tree root node 
quadrant emphasized bold fig 

derived key 
tree representation third order hilbert curve dimensions recursive way space partitioned hilbert curve construction process expressed tree structure fig 

conceptual view aids understanding mapping process 
node corresponds rst order curve collection nodes tree level describes curve order root resides level 
root node corresponds rst order curve fig 
leaf nodes correspond set rst order curves comprising third order curve fig 

alternatively node viewed sub space enclosing nested sub spaces leaf node encloses points 
call binary sequence number quadrant node equivalent point rst order curve derived key quadrant number concatenated single bit coordinates point rst order curve ann point 
call sequence number point 
value contains nk bits sum bits coordinates point 
illustrate mapping coordinates point derived key takes place example point shown fig 

coordinates initially derived key unknown designated bit string 
hilbert curve mapping replaced hyper rectangles successive hyperrectangles share common hyper faces curve passes nk points 
working software developed nd order curves enabling bit coordinate values takes value quite easily increased 
important property ofthe hilbert curve consecutively ordered points adjacent space 
tree level tree level state number tree level sub square sequence numbers points approximations hilbert curve derived keys coordinates form point 
locate point tree level node pointed quadrant identi ed root step 
places point quadrant number 
derived key 
step concatenate bottom bits form point 
locate tree level quadrant identi ed previous step 
places point quadrant number 

inverse mapping derived key coordinates point carried similar manner 
practicable store tree representation hilbert curve memory calculating mappings useful value order curve 
note tree contains nite number types node 
di erent types node equivalent di erent orientations rst order curve regarded di erent states enabling tree structure expressed compactly state diagram 
method constructing hilbert curve state diagrams described adapts extends generic technique originally proposed 
higher dimensions state diagrams large accommodate memory mappings need calculated example manner detailed butz developed 
application hilbert curve describe hilbert curve practical application 
refer actual records placed data le datum points 
conceptually curve cut contiguous sections corresponding page storage data le 
page xed data capacity length section varies local density datum points section page holds roughly datum points 
pages indexed derived keys datum points call page keys 
generally page page key lowest derived key datum point lying page 
rst page exception indexed derived key value zero corresponds datum point 
example shown fig 
page capacity datum points 
pages logically ordered page keys placed dimensional index corresponding page addresses 
page contains datum point derived key greater datum point successor page 
note approach described partitions data space lies 
adapts query region page keys match query partitioning pages easily update insertion deletion 
example page full half datum points derived keys greater half moved new page similarly de ned portion may logically adjacent page 
words precisely approach dimensional tree multi dimensional data 
query execution querying strategy application facilitates retrieval hyper rectangular query regions de ned lower upper bound coordinates ln un mini li ui maxi 
query region intersects curve sections corresponding page 
hilbert curve may enter leave re enter query region number times 
strategy identi es retrieval searching pages intersect query region query region shown shaded fig 
pages identi ed 
intervening curve sections corresponding pages ectively stepped 
pages searched identi ed lazily ascending page key order 
ected function called calculate match 
rst time called lowest derived key point lying query region identi ed 
index searched page contains point datum point identi ed retrieved searched datum points lying query region 
second time calculate match called attempts nd lowest derived key point lying query region equal greater page key successor page just searched 
call derived key 
match page may contain corresponding datum point identi ed retrieved searched 
process continues manner matches 
number times calculate match called equals number pages intersecting query region plus 
contrast order curve knowledge derived key values lower upper bound points query region assist query process 
necessitates di erent approach query execution hilbert curve mapping dimensions 
querying algorithm illustrate operation calculate match example terms descending tree representation hilbert curve described section 
shows example query region shaded area 
quadrants levels tree representation hilbert curve intersecting query region shown shaded fig 

assume calculate match called rst page intersecting query region identi ed retrieved searched 
calling calculate match second time searching match equal minimally greater page key successor page just searched 
page key derived key point shown figs 
call current key 
value 
note match derived key corresponding lying query region 
example match derived key point search begins root tree descends terminates member leaf match 
back tracking takes place example required 
level carry binary search derived keys quadrants node 
binary search nds quadrant intersecting query region derived key number small possible containing points derived keys equal greater current key 
small possible accounts sorting quadrants node key point value 
binary searching particularly important applications higher dimensions node contains quadrants 
example value match initially unknown 
search match proceeds follows step tree level binary search root node shows quadrant number numbered quadrant intersecting query region 
contains point derived key current key 
know top bits current key 
quadrant may contain point lies query region derived key equal minimally greater current key 
match tentatively modi ed 
note higher numbered quadrants intersect query region match leaf descendent quadrant number 
step tree level proceeds level node level pointed quadrant numbered root 
ect search space restricted quadrants root node 
quadrants node level intersect query region binary search rst rejects lower numbered quadrants lower current key lies quadrant numbered 
know middle bits current key 
search match quadrant 
match modi ed 
note higher numbered quadrant node intersecting query region 
step tree level proceeds level node level pointed quadrant numbered node searched step 
binary search nds query region intersects lower numbered quadrants bottom bits current key place upper numbered quadrants 
match lie node currently searched 
point lying intersection current node query region derived key equal greater current key 
step tree level search back tracks root node step contain quadrant intersecting query region containing points derived keys greater current key 
bits removed level ascension re set 
binary searching resumes lowest numbered quadrant intersecting query region enabling match recalculated 
generally back tracking lowest level tree possible sub set quadrants intersect query region enclose points mapping higher derived keys current key 
sub set quadrants exist level back tracking take place signi es match query exists 
query terminates 
note back tracking occurs possible match guaranteed exist 
additionally regard value current key required 
step tree level proceeds level level node pointed quadrant number root 
binary searching determines lowest numbered quadrant intersecting query region quadrant number 
match modi ed 
step tree level search proceeds level node pointed quadrant node searched step 
binary searching determines lowest numbered quadrant intersecting query region quadrant number 
match determined calculation complete 
search process expressed formally algorithm detail 
binary searching nodes broadly approach described applied curves hilbert curve example order curve 
hilbert curve di erent node types complicates binary searching 
contrast order curve single node type 
solving problem perform binary searches nodes tree containing di erent node types crucial viability application hilbert curve 
sub section describe solution 
searching node de ne region intersection query region sub space de ned node 
original query region current query region de ned lower upper bound coordinates 
top bit coordinate bit position search node tree level encapsulate current query region pair bits taken position lower upper bound coordinates 
locate region search space de ned anode 
iteration binary search quadrants node discard half quadrants search smaller sub set iteration 
apart ensuring focus sets quadrants enclosing points leaf level mapping derived keys equal greater current key focus intersecting query region 
question immediately arises know quadrant derived keys lower upper halves numbered quadrants sub set intersect query region 
solving requires function returns quadrant point derived key 
function needs know node orientation rst order hilbert curve currently searched 
call function 
implementation particularly simple state diagrams employed 
result symmetrical nature hilbert curve note 
derived keys sub set quadrants range lowest max lower min higher highest quadrants derived keys lower sub range lowest max lower value coordinates particular dimension similarly quadrants derived keys higher sub range min higher highest opposite coordinate value dimension characteristic applies exactly dimension 
recall quadrants derived keys consecutive adjacent space 
point variable pd short partitioning dimension containing single non zero bit corresponding dimension dividing range evaluated pd max lower min higher symbol bitwise exclusive operator 
remains quadrants derived keys lower sub range value dimension done testing value expression max lower pd symbol bitwise operator 
evaluates non zero quadrants value dimension thevalue 
able determine region intersects quadrants lower sub range 
intersection lower upper bounds current query region value coordinate dimension quadrants 
determine current query region intersects half sub set quadrants current interest derived keys higher sub range similar manner 
conclude section illustrating operation binary search example showing step example section executed 
query lower upper bound coordinates respectively 
space restricted quadrant number root node 
corresponds region lower upper bound coordinates restricting query region compare coordinate bounds restricted search space 
query lower bound coordinates restricted search space equivalents increased upper bound coordinates greater restricted search space equivalents reduced 
current query region bounded points step points encapsulating region formed second top bits taken coordinates 
lower bound bound point 
rst iteration binary search quadrants node tree level determine query intersects lower numbered pair follows firstly pd calculated evaluates 
signi es quadrant numbers coordinate values dimension 
secondly pd evaluates 
signi es value coordinates dimension 
point encapsulating upper bound current query region value coordinate current query region intersect lower numbered quadrants node 
note lower bound point zero valued coordinate current query region intersect higher numbered quadrants con rmed fig 

similar way second iteration binary search nds lowest quadrant number sub set quadrant numbers intersecting current query region 
see fig 
result quadrant number 
application algorithms described implemented fully functioning software hitherto dimensions easily extended 
preliminary experimentation generated data produces promising results indicating concepts scale increasing data volumes numbers dimensions 

space filling curves generation application bandwidth reduction 
ieee transactions information theory nov 
butz 
alternative algorithm hilbert space filling curve 
ieee transactions computers april 
faloutsos 
gray codes partial match range queries 
ieee transactions software engineering oct 
faloutsos roseman 
fractals secondary key retrieval 
proceedings eighth acm sigact sigmod sigart symposium principles database systems pages 
gaede gunther 
multidimensional access methods 
acm computing surveys june 
hilbert 
abbildung einer auf ein 
mathematische annalen 
jagadish 
linear clustering objects multiple 
procs 
acm sigmod int 
conf 
management data 
jagadish 
analysis hilbert curve representing dimensional space 
information processing letters april 
kumar 
study spatial clustering techniques 
procs 
th int 
conf 
database expert systems applications dexa vol lecture notes computer science pages sept 

application space filling curves storage retrieval multi dimensional data 
phd thesis college university london 
king 
space filling curves multi dimensional indexing 
advances databases th british national conference databases vol lecture notes computer science pages july 

calculation mappings dimensional values hilbert space filling curve 
technical report jl college university london 

state diagrams hilbert curve mappings 
technical report jl college university london 
moon jagadish faloutsos saltz 
analysis clustering properties hilbert space filling curve 
technical report university arizona 
orenstein manola 
probe spatial data modeling query processing image database application 
ieee transactions software engineering 
bayer 
integrating ub tree database system kernel 
procs 
th int 
conf 
large databases pages herzog 
multi dimensional range search dynamically balanced trees 
angewandte informatik 
