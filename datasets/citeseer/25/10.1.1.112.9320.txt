winnowing local algorithms document fingerprinting saul mscs university illinois chicago saul math uic edu digital content copying quotation revision plagiarism file sharing create copies 
document fingerprinting concerned accurately identifying copying including small partial copies large sets documents 
introduce class local document fingerprinting algorithms capture essential property fingerprinting technique guaranteed detect copies 
prove novel lower bound performance local algorithm 
develop winnowing efficient local fingerprinting algorithm show winnowing performance lower bound 
give experimental results web data report experience moss widely plagiarism detection service 

digital documents easily copied 
bit obvious wide variety different reasons digital documents completely partially duplicated 
people quote email news postings replies 
collaborators create multiple versions documents closely related immediate predecessor 
important web sites mirrored 
students homework web 
authors conference papers engage similar socially acceptable form text reuse preparing journal versions 
businesses notably software entertainment industries charging digital copy sold 
comparing document checksums simple suffices reliably detecting exact copies detecting partial copies subtler 
potential applications second problem received considerable attention 
previous techniques detecting partial copies discuss detail section idea 
gram contiguous substring length divide document grams parameter chosen user 
example contains grams string characters 
note grams permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
sigmod june san diego ca 
copyright acm 
daniel wilkerson computer science division uc berkeley cs berkeley edu alex aiken computer science division uc berkeley aiken cs berkeley edu run run run run run text 
text irrelevant features removed 
sequence grams derived text 
hypothetical sequence hashes grams 
sequence hashes selected mod 
fingerprinting sample text 
characters document position document positions marks gram 
hash gram select subset hashes document fingerprints 
practical approaches set fingerprints small subset set gram hashes 
fingerprint contains positional information show describing document location document fingerprint came 
hash function chosen probability collisions small documents share fingerprints extremely share gram 
efficiency subset hashes retained document fingerprints 
popular approach choose hashes mod fixed approach easy implement retains hashes fingerprints section 
meaningful measures document similarity derived number fingerprints shared documents :10.1.1.24.779
disadvantage method gives guarantee matches documents detected gram shared documents detected hash mod consider sequence hashes generated hashing grams file order 
call distance consecutive selected fingerprints gap 
fingerprints selected mod maximum gap fingerprints unbounded matches inside gap detected 
experiments selecting fingerprints mod html data taken web gaps fingerprints chosen mod quite large 
fact passages longer size average web page hashes mod reasonable values section 
give efficient algorithm selecting fingerprints sequence hashes guarantees part sufficiently long match detected 
define window size consecutive hashes grams document parameter set user 
selecting fingerprint window algorithm limits maximum gap fingerprints 
fact algorithm guaranteed detect gram shared substring length 
central construction idea local algorithm section believe captures essential properties document fingerprinting algorithm guarantees matches detected 
algorithm local window consecutive hashes hi 
hi algorithm decides select hashes fingerprint choice depends window contents hi 
hi 
note hashes window may selected due action algorithm potentially overlapping windows 
respect input distribution density fingerprinting algorithm expected proportion hashes selects fingerprints 
section introduce particular local algorithm winnowing algorithm 
analyze performance random independent uniformly distributed data 
show window size density asymptotically 
prove lower bound density local algorithms 
winnowing algorithm optimal 
report experience implementations winnowing 
purely experimental framework comparing actual performance theoretical predictions section 
analysis fingerprinting algorithms including winnowing assumption sequence hashes generated hashing grams independent uniformly random 
random data performance system matches theoretical predictions perfectly 
situations real data generate sufficiently random sequences hashes 
particular clusters low entropy strings web 
complex patterns 
important characteristic strings distinct grams distinct hashes grams 
case long string single character single gram hash 
straightforward winnowing algorithm selects far fingerprints predicted strings simple modification algorithm reduces density fingerprints note fingerprint selection approaches exposed problem 
example choosing hashes mod means string 
hashes string selected fingerprints 
report experience moss widely service detecting plagiarism primarily programming assign see section discussion expected gap size 
see definition robust winnowing section ments section 
document fingerprinting worked extremely setting 
basic idea hashing minimal assumptions form input easy incorporate fingerprinting new data format disturbing underlying hashing engine 
false positives appear non existent infrequent reports false negatives instances shared substrings missed system tracked back implementation bugs user error 

background related copy detection algorithms selecting fingerprints grams 
give basis discussing different techniques list criteria copy detection algorithm satisfy 
requirements experience context plagiarism detection echo goals outlined papers related techniques 
desirable properties believe copy detection algorithm properties 
whitespace insensitivity matching text files matches unaffected things extra whitespace capitalization punctuation domains notion strings equal different example matching software text desirable matching insensitive variable names 

noise suppression discovering short matches fact word appears different documents uninteresting 
match large imply material copied simply common word idiom language documents written 

position independence coarse grained permutation contents document scrambling order paragraphs affect set discovered matches 
adding document affect set matches original portion new document 
removing part document affect set matches portion remains 
schemes know handle property essentially way 
pass data transforms eliminate undesirable differences documents 
example whitespace punctuation removed letters converted lower case variable names replaced identifier 
exact details vary type document essential feature semantic information document type eliminate unimportant differences documents 
schemes fingerprinting grams satisfy requirement choosing sufficiently long common idioms language length shorter important assumption class algorithms threshold matches length shorter uninteresting matches length longer interesting 
experience sharp threshold section 
interesting requirement 
describing methods addressing requirement give short history hashes grams copy detection 
wwww cs berkeley edu aiken moss html karp rabin string matching karp rabin algorithm fast substring matching apparently earliest version fingerprinting grams 
problem motivated string matching problems genetics find occurrences particular string length longer string 
idea compare hashes grams long string hash hashing strings length expensive large karp rabin propose rolling hash function allows hash st gram computed quickly hash th gram 
treat gram 
ck digit number base hash 
ck 
ck number 
ck ck compute hash gram 
ck need subtract high order digit multiply add new low order digit 
identity 
ck 
ck ck constant allows subsequent hash computed previous additions multiplications 
identity holds addition multiplication modulo value size largest representable integer method works standard machine arithmetic 
aside rolling hash function weakness 
values ci relatively small integers doing addition means character affects low order bits hash 
better hash function character ci potentially affect hash bits 
noted easy fix multiplying entire hash gram additional switching order multiply add incremental step :10.1.1.24.779:10.1.1.24.779
ck 
ck ck matching scheme apply fingerprinting collections documents developed manber apparently independently discovered karp rabin string matching applied detecting similar files file systems :10.1.1.106.2691
having single candidate string search problem wish compare pairs grams collection documents 
nature comparison key difficulty document fingerprinting 
illustrate consider problem matching ascii text 
gram byte ascii file byte hashes needed interesting data sets naive scheme selected hashed grams create index larger original documents 
impractical large document sets obvious step select subset hashes represent document 
hashes selected fingerprints 
simple incorrect strategy select th hash document robust reordering insertions deletions requirement 
fact prepending character file shifts positions grams means modified file shares fingerprints original 
effective algorithm choosing fingerprints represent document rely position fingerprints document 
scheme manber chose select hashes mod way fingerprints chosen independent position documents share hash mod selected documents 
manber technique worked 
heintze proposed choosing smallest hashes grams document fingerprints document :10.1.1.38.8072
fixing number hashes document system scalable large documents number fingerprints small documents 
idea show possible cluster documents web similarity 
price fixed size fingerprint set near copies entire documents detected 
documents vastly different size meaningfully compared example fingerprints paragraph probably contain fingerprints book paragraph came 
choosing hashes mod hand generates variable size sets fingerprints documents guarantees representative fingerprints paragraph selected book 
broder classifies different approaches fingerprinting able detect resemblance documents able detect containment documents :10.1.1.24.779
techniques grams strings fingerprint chosen looking sentences paragraphs choosing fixed length strings anchor words :10.1.1.43.8485:10.1.1.43.8485:10.1.1.106.2691
early versions system structure gleaned document select substrings fingerprint 
difficulty schemes experience implementation specific particular type data 
focus english text example choosing sentences unit hash builds text semantics difficult system fingerprint say programs resembling english sentences 
addition text data assumption find reasonable sentences questionable input may document large table phone book joyce wake 
experience grams unit hashing robust relying common case assumptions frequency specific structure input 
approaches copy detection fingerprinting 
example scam known copy detection system ideas explored documents similar distance feature vectors representing documents small 
features words notion distance variation standard information retrieval measures similarity 
baker considers problem finding near duplication software develops notion parameterized matches matches 
consider strings letters designated parameters 
strings match renaming parameters strings equal 
example take parameters variable names sections program text considered equal renaming variables mapped program 
baker gives algorithm computing matches reports experience implementation subsequent considers integrate ideas matching grams 
important distinction copy detection discrete data continuous data 
discrete data text files program source simple suppression uninteresting pieces documents exact matching substrings remainder useful notion 
continuous data audio video images number commercial copy detection systems built relatively little published open literature exception 
problems difficult similar copies images example may completely different bit representations requiring sophisticated step extract features interest matching done 
afield copy detection related digital rights management drm 
drm systems seek solve problem intellectual property preventing controlling copying documents 
drm schemes encryption valuable content protected encrypting granted access form decryption key 
regardless copy prevention technology chosen users ultimately access unencrypted data discussed section nearly natural law digital content copied 
find agreement forms digital media copy prevention systems trouble ultimately succeeding :10.1.1.43.8485
suspect environments best hope efficient copy detection 

winnowing section describe analyze winnowing algorithm selecting fingerprints hashes grams 
give upper bound performance winnowing expressed trade number fingerprints selected shortest match guaranteed detect 
set documents want find substring matches satisfy properties 
substring match long guarantee threshold match detected 
detect matches shorter noise threshold constants chosen user 
avoid matching strings noise threshold considering hashes grams 
larger confident matches documents coincidental 
hand larger values limit sensitivity reordering document contents detect relocation substring length important choose minimum value eliminates coincidental matches see section 
figures reproduced convenience show sequence hashes grams derived sample text 
sequence hashes 
hn hi chosen guarantee detection matches length suggests simple approach 
window size 
consider sequence hashes 
hn represents document 
position sequence defines window hashes hi 
hi 
maintain guarantee necessary select hash value window fingerprint document 
sufficient see lemma 
strategy works practice 
definition winnowing 
window select minimum hash value 
hash minimum value select rightmost occurrence 
save selected hashes fingerprints document 
gives windows length sequence hashes 
hash selected shown boldface window selects hash 
run run run run run text 
text irrelevant features removed 
sequence grams derived text 
hypothetical sequence hashes grams 
windows hashes length 
fingerprints selected winnowing 
fingerprints paired base positional information :10.1.1.10.751:10.1.1.38.8072
winnowing sample text 
intuition choosing minimum hash minimum hash window remain minimum hash adjacent windows odds minimum random numbers smaller additional random number 
overlapping windows select hash number fingerprints selected far smaller number windows maintaining guarantee 
shows set fingerprints selected winnowing example 
applications useful record fingerprints document position fingerprints document 
example need positional information show matching substrings user interface 
efficient implementation winnowing needs retain position selected fingerprint 
shows set fingerprint position pairs example position numbered 
avoid notational complexity indexing hashes position global sequence hashes grams document suppress explicit position grams documents presentation 
expected density recall density fingerprinting algorithm expected fraction fingerprints selected hash values computed random input section 
analyze density winnowing gives trade guarantee threshold number fingerprints required 
consider function maps position selected fingerprint position leftmost window se lected sequence windows document 
say charging cost saving fingerprint indicated window 
charge function monotonic increasing positions selected fingerprints 
prove assume fingerprints selected distinct positions 
positions windows 
hp hash position hq hash position possibilities hp hq window charged 
hp hq charged 
contradict hypothesis 
conclude charge function monotonic increasing 
proceed recall sequence hashes winnowing random 
assume space hash values large safely ignore possibility tie minimum value small window size 
examine soundness assumption section 
consider indicator random variable xi iff th window wi charged 
consider adjacent window left wi 
intervals overlap leftmost rightmost positions 
union interval length 
consider position containing smallest hash union interval 
window includes selects hp fingerprint 
cases 
leftmost position union wi selects 
wi know wi select hash position hash charged wi wi selected wi select charge function monotonic increasing 
case xi 
rightmost position union interval wi selects 
wi charged wi leftmost interval contain xi 
position union interval wi wi select 
matter charged won wi wi left selected 
case xi 
cases happen probability expected value xi 
recall sum expected values expected value sum random variables independent 
total expected number intervals charged total number fingerprints selected just value times document length 
density comparison mod density compare mod algorithm winnowing density 
take 
string length consider event mod algorithm fails select fingerprint 
recall winnowing fail 
compute probability event string 
please note overlapping strings events independent 
probability compute estimate fraction substrings text fingerprint selected mod algorithm 
assume independent uniformly distributed hash values 
assume large experiments see section 
probability guarantee fails sequence text length hash sequence hashes mod 
comparison mod guarantee may tempted try modifying mod algorithm give guarantee 
straightforward solution know event gap longer guarantee threshold threatens open select hashes fingerprints hash mod safe mod algorithm follows 
partition hashes hash mod bad hashes left ugly 
select non ugly hashes fingerprints 
see section algorithm local correct 
note chosen parameters guarantee winnowing 
remains compute optimal expected density 
fix document consider position gi bi denote events hash bad respectively 
notation event denotes appropriate indicator random variable true false depending context 

note compete winnowing need small slightly larger allow approximation 
pr gi hashes small pr bi wp expected value sum sum expected values 
ignoring error introduced hashes expected value non position ex gi bi ex gi ex bi np wp 
step minimize density 
wp setting solving wp ln check wp global minimum 
optimal value safe mod algorithm density ln ln ln considerably winnowing 
queries section primarily choose hashes digress bit discuss hashes selected 
typical application builds database fingerprints queries fingerprints individual documents database see section 
winnowing gives flexibility treat fingerprinting times database build time query time differently 
consider database fingerprints obtained grams generated winnowing documents window size query documents different window size 
fw set fingerprints chosen document winnowing window size advantage winnowing query docu ments window size fw fw means fewer memory disk accesses look fingerprints 
may useful example system heavily loaded wish reduce query just interested obtaining faster coarser estimate matching document 
extend idea step 
fingerprint query document window generate database sort selected fingerprints ascending order 
look number fingerprints database starting smallest 
fixed number hashes realized broder heintze approach testing document resemblance :10.1.1.24.779:10.1.1.38.8072
hashes fingerprints realize standard notion testing document containment 
spectrum extremes 
broder resemblance containment gives distinct algorithms compute properties winnowing naturally realizes :10.1.1.24.779

local algorithms section consider fingerprinting algorithms perform better winnowing 
introduce notion local fingerprinting algorithms 
prove lower bound density local algorithm uniform identically distributed random input 
lower bound meet upper bound winnowing 
suspect lower bound improved 
winnowing selects minimum value window hashes clearly just family algorithms choose elements local window 
method selecting hashes local window maintains guarantee 
assume example window size approach select th hash set fingerprints 
method select hash window depends global position hash document discussed section approach fails presence insertions deletions 
key property winnowing choice hash depends contents window depend external information position window file relationship windows 
motivates definition 
definition local algorithms 
selection function tuple hashes returning integer zero inclusive 
fingerprinting algorithm local selection function window hi 
hi hash position hi 
hi selected fingerprint 
beneficial weaken locality slightly provide flexibility choosing equal fingerprints see section 
show local algorithm correct sense meets guarantee threshold lemma correctness local algorithms 
matching pair substrings length local algorithm 
proof 
sequence hashes grams representing substring spans window length selection function function contents fingerprint selected copies 
consider local algorithm better winnowing 
matching lower bound winnowing show theorem lower bound 
local algorithm noise threshold guarantee density note winnowing algorithm density lower bound 
proof 
assume hashes independent uniformly distributed 
consider behavior algorithm st window 
windows separated single position part window 
windows disjoint hashes selected fingerprints independent window selects separate fingerprint 
consider windows th st windows wi wi windows overlap disjoint windows 
random variable iff windows additional fingerprint selected 
compute lower bound expected value denote random variables wi wi respectively 
windows overlap independent 
algorithm required select additional fingerprint window wi wi 

identically distributed pr pr 
denote quantity 
pr 

ex pr 
see sequence windows addition fingerprint selected window expect select additional distinct fingerprint half time subsequent windows 
density selected points observation 
result improved slightly bit notation xi pr 

course xi 
pr apply cauchy schwartz inequality show proof gives density lower bound proof relies information derived windows separated sufficiently disjoint 
conjecture lower bound density local fingerprinting algorithm 
total bytes text bytes hashes computed winnowing fingerprints measured density expected density fingerprints mod measured density expected density longest run fingerprint results html pages 
experiments section report experience different implementations winnowing 
section report series experiments text data taken world wide web section give qualitative report experience years widely plagiarism detection service moss 
experiments web data size degree copying world wide web provides readily accessible interesting data set document fingerprinting algorithms 
experiments pages downloaded stanford webbase 
rolling hash function described section 
fingerprinting half web pages generates nearly hashes bits represent distinct hash values bit hashes avoid accidental collisions 
aside rolling incremental hash function important performance realistic gram sizes say bit arithmetic 
recomputing bit hash scratch gram reduces throughput fingerprinting algorithm factor 
experiment simply mb randomly generated text 
experiment serves solely check hash function reasonably trust number matches experiments real data 
strings characters hashed winnowing window set 
winnowing selected hashes computed closely matches expected density 
selecting hashes equal mod results measured density close predicted value 
observed uniform distribution hash values taken hash function implementation appears sufficient fingerprinting algorithm 
second experiment calculated hashes html documents measured various statistics 
measured density compared expected density winnowing selecting fingerprints equal mod winnowing window size noise threshold 
results shown 
interesting things note data 
algorithms come close expected density case 
gross averages cover local 
example run non whitespace non tag characters hash mod 
easily checked odds happening uniformly random inputs extremely small 
chances string characters hash substring mod terabyte bytes data chances substring length gram hash mod clearly data web uniformly random 
discussed briefly section long passages web repetitive low entropy strings 
example experiment reported collection pages appear raw data taken sensors research experiment 
data consists strings occasional odd character thrown 
winnowing defined far selecting hashes equal mod perform poorly data 
long string grams mod fingerprints selected region 
leads large gaps fingerprints strategy real data 
winnowing different problem 
low entropy strings equal hash values ties minimum hash window 
truly local independent global position necessary take say rightmost hash winnowing window 
extreme case say long string gram nearly single hash selected single gram filling entire winnowing window step algorithm choose rightmost copy new copy window 
easy fix problem 
refine winnowing follows definition robust winnowing 
window select minimum hash value 
possible break ties selecting hash window position left 
select rightmost minimal hash 
save selected hashes fingerprints document 
robust winnowing attempts break ties preferring hash chosen previous window 
longer local algorithm easily observes matching substrings length guarantee select hash value match simply longer guarantee fingerprints relative position substrings 
fingerprints close distance 
technique reduces density string 
asymptotically just fingerprint selected window length 
reran experiment density winnowing dropped 
imagine non text document sets difference greater 
may wonder bother worrying low entropy strings technical sense inherently uninteresting 
just data low entropy mean people interested take example sensor data 
strings exist people may want fingerprint large corpus low entropy data copies tracked just may want fingerprint sort document 
final experiment examines detail structure copying web pages taken corpus pages 
interestingly theoretical predictions assumption input uniformly random distribution real data hardly uniform 
need definitions frequency gram hash number times occurs 
sort frequencies monotonically decreasing order 
rank gram hash position frequency frequency intercept logarithmic difference factor slope slope rank cleaned cleaned log log plot frequency rank hashes upper line fingerprints lower line web pages 
list starting frequently occurring gram 
plotting resulting rank frequency pairs log log scale obtains line slope demonstrating power law relationship frequency rank plots rank frequency pairs shown 
upper curve gram hashes computed entire set web pages lower curve hashes selected fingerprints winnowing 
reason limited data set experiment pages 
web pages saving hash gram requires quite bit storage 
data contains plateau document long repeating pattern text file occurs times sample 
peaked looking curves labeled show data curves labeled cleaned plateau removed 
frequencies integers form plateaus set hashes frequency 
example upper curve fingerprints occurrence ties rank 
obvious lower right plateaus occur data 
additionally due logarithmic scale points lower right 
plot points line fit quite poor just go center plateaus tried 
overwhelm plotting program points horizontal lines drawn points 
plot left right endpoints plateau plateau length plotted twice weights biased line fit 
lines fitted cleaned plateau endpoints 
lines fit quite giving slope corresponds exponent power law 
zipf noticed power law phenomenon stating known zipf law frequencies english words proportional inverse rank listed decreasing order 
frequency rank english words exhibit power law relationship exponent 
experiment fingerprints selected winnowing chosen selected twice occurred times 
extreme gram appears times documents 
distribution frequencies set hashes nearly identical distribution fingerprints number grams occur occur twice occur times 
looked common strings expect strings taken menus english spanish german french 
common legal boilerplate repetitive strings reason string common sample 
suspect repetitive strings particular responsible common grams 
strings relatively grams dramatically increase frequency grams statistics 
plagiarism detection authors run moss widely plagiarism detection service internet 
moss stands measure software similarity accepts batches documents returns set html pages showing significant sections pair documents similar 
moss primarily detecting plagiarism programming assignments computer science engineering courses text formats supported 
service currently uses robust winnowing efficient scalable sense selects fewer fingerprints quality results previous algorithms tried 
issues involved making system practice 
application positional information document line number stored selected fingerprint 
step builds index mapping fingerprints locations documents inverted index built search engines mapping words positions documents 
second step document second time selected fingerprints looked index gives list matching fingerprints document 
list matching fingerprints document may contain fingerprints different documents 
step list matching fingerprints document sorted document matches pair documents 
formed 
matches documents rank ordered size number fingerprints largest matches reported user 
note step explicit consideration pairs documents required 
important hope carry copy detection comparing pair documents large corpus 
postponing quadratic computation step optimize materializing matching pair documents falls user specified threshold 
number issues full copy detection system fingerprints selected 
give reader sense winnowing fits complete system briefly discuss important problems 
moss users wish copy detection different kinds data 
mentioned section architecture 
document format front specific format eliminates features distinguish documents eliminate white space text 
output front produces string standard form input fingerprinting engine 
fingerprinting code knows different kinds documents 
architecture proven essential maintaining support wide variety document formats 
benefit may obvious report tempting put document semantics fingerprinting routines better keep document specific processing separate 
efficiency important consideration fingerprinting 
give code efficient implementation main winnowing loop 
implementation takes advantage fact far common case minimum value preceding window current window case checking see new minimum requires single comparison 
instance necessary recompute minimum traversing entire window case minimum hash preceding window just outside current window note loop scan array works right left ensure rightmost minimal hash selected 
choice equal hashes select completely arbitrary 
note record function compute global position relative position min 
saving position selected hash creates fingerprint 
loop implements winnowing selects rightmost minimal hash window 
implement robust winnowing comparison line marked replaced 
minor aside winnowing selects minimum hash void winnow int window size circular buffer implementing window size hash int int max int window right int min index minimum hash iteration min holds position rightmost minimal hash current window 
record called time instance selected rightmost minimal hash window 
true shift window hash add new hash min previous minimum longer window 
scan leftward starting rightmost minimal hash 
note min starts index rightmost hash 
int min min record min global pos min previous minimum window 
compare new value update min necessary 
min min record min global pos min code winnowing 
window distribution hashes selected skewed 
uniform distribution desired selected hashes hashed second time shown 
significant issue practical copy detection system ability ignore boiler plate 
example standard copyright notices come heading material interested applications 
case plagiarism detection boilerplate usually material supplied course instructor expected part final solution sanctioned copying 
excluding boilerplate easily done fingerprinting boilerplate special document id indicates match fingerprint discarded 
presentation results important issue users 
statistics reporting percentage overlap documents useful nearly useful showing matches marked original text 
moss uses fingerprints determine longest matching sequences particular document matches document document matches document furthermore consecutive document consecutive document discovered longer match documents consisting followed merging matches easy implement grams naturally coarse match usually lost match 
possible pair similar documents detected fingerprinting better suffix tree algorithm find maximal matches just pair documents 
section mentioned appears sharp thresh old people consider coincidental similarity meaning reuse idioms common words copying 
formal experiments topic informally experimented moss simply examining results tests sample data 
regardless input data type result value dependent document type reported matches result copying slightly smaller value significant numbers obvious false positives appear results 
lines early versions moss incorporated technique similar baker parameterized matches section 
replacing parameters single constant increasing worked just 
appears general trick sophisticated efforts exploit document semantics closely approximated simple exploits document semantics small increase report years service moss performs function 
false positives hash collisions reported false negatives seen quickly traced back source implementation bug user misunderstanding 
furthermore users report copy detection dramatically reduce instances plagiarism classes 

winnowing local document fingerprinting algorithm efficient guarantees matches certain length detected 
non trivial lower bound complexity local document fingerprinting algorithm 
discussed series experiments show effectiveness winnowing real data reported experience winnowing practice 

acknowledgments authors wish joel auslander steve fink paul tucker useful discussions helping possible 

arvind arasu junghoo cho hector garcia molina andreas paepcke sriram raghavan 
searching web 
acm transactions internet technology toit 
brenda baker 
finding duplication near duplication large software systems 
wills newcomb chikofsky editors second working conference reverse engineering pages los alamitos california 
ieee computer society press 
brenda baker udi manber 
deducing similarities java sources bytecodes 
proc 
usenix annual technical conf pages 
sergey brin james davis ctor garc molina :10.1.1.43.8485
copy detection mechanisms digital documents 
proceedings acm sigmod conference pages 
andrei broder :10.1.1.24.779
resemblance containment documents 
seqs sequences 
andrei broder steve glassman mark manasse geoffrey zweig 
syntactic clustering web 
proceedings sixth international world wide web conference pages april 
crystals 
da run run 
nevin heintze :10.1.1.38.8072
scalable document fingerprinting 
usenix workshop electronic commerce november 
james joyce 
wake st trade ed 
faber faber london 
richard karp michael rabin 
pattern matching algorithms 
ibm journal research development 
sergio leone clint eli wallach lee van 
bad ugly il il il man name 
associate italy production distributed united artists usa 
udi manber :10.1.1.106.2691
finding similar files large file system 
proceedings usenix winter technical conference pages san fransisco ca usa 
peter mork li edward chang junghoo cho chen li james wang 
indexing tamper resistant features image copy detection 
url citeseer nj nec com mork indexing html 
narayanan shivakumar ctor garc molina 
scam copy detection mechanism digital documents 
proceedings second annual conference theory practice digital libraries 
ukkonen 
line construction suffix trees 
algorithmica 
george zipf 
language 
houghton 
