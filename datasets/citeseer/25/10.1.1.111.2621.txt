algorithm data structures efficient energy maintenance monte carlo simulation proteins fabian schwarzer dan halperin jean claude latombe december department computer science stanford university stanford ca usa 
mail latombe cs stanford edu school computer science tel aviv university tel aviv israel 
mail post tau ac il correspondences addressed monte carlo simulation mcs common methodology compute pathways thermodynamic prop erties proteins 
simulation run series random steps conformation space perturbing degrees freedom molecule 
step accepted probability depends change value energy function 
typical energy functions sum terms 
costly ones compute contributed atom pairs closer cutoff distance 
introduces new method speeds mcs exploiting facts proteins long kinematic chains degrees freedom changed step 
novel data structure called chaintree captures kinematics shape protein successive levels detail 
efficiently detect self collision clash atoms find atom pairs contributing energy 
possible identify partial energy sums left unchanged perturbation allowing energy value incrementally updated 
computational tests proteins sizes ranging amino acids show mcs chaintree method significantly faster times faster largest protein widely grid method 
indicate speed increases larger proteins 
key words monte carlo simulation protein folding energy computation self collision detec tion deforming chains 
monte carlo simulation mcs study conformations adopted proteins important topic structural biology 
mcs common methodology study 
context purposes estimating thermodynamic quantities protein conformation space cases kinetic properties searching low energy conformations protein including native structure 
approach originally proposed variants improvements suggested 
mcs series randomly generated trial steps conformation space stud ied molecule 
step consists perturbing degrees freedom dofs molecule general torsion dihedral angles bonds see section 
classically trial step accepted simulation moves new conformation probability min called metropolis criterion energy function defined conformation space difference energy new previous conformations kb boltzmann constant temperature system 
downhill step lower energy conformation accepted uphill step accepted probability goes zero energy barrier grows large 
shown long mcs metropolis criterion appropriate step generator produces distribution accepted conformations converges boltzmann distribution 
molecular dynamics simulation mds common approach studying protein con formations 
forces atoms computed step calculate atom positions step 
physically accurate mds proceeds small time steps usually order seconds resulting slow progress conformation space 
mds techniques update cartesian coordinates atoms step growing interest directly updating torsion angles allows compact representation conformation space larger time steps 
general mcs larger conformational changes mds tends explore subsets conformation space faster 
mds pathways produced mcs may physically valid may provide useful kinetic information 
need general algorithms speed mcs mentioned biology literature 
propose new algorithm achieves goal independent specific energy function step generator acceptance criterion 
precisely algorithm reduces average time needed decide trial step accepted affecting steps attempted outcome test 
achieves result incorporating efficient techniques incrementally update value energy function simulation 
describe algorithm application classic mcs speed kinds mcs methods optimization sampling techniques 
applications discussed section 
kinematic structure protein protein concatenation small molecules amino acids forming long backbone chain small side chains 
bond lengths angles successive bonds constant conformations room temperature common practice assume dofs protein torsion angles called internal coordinates 
amino acid contributes torsion dofs backbone called angles 
see illustration definition torsion angle 
backbone commonly modelled long chain links separated torsion joints backbone dofs 
link designates rigid part kinematic chain group atoms dofs 
example model atoms amino acid atoms amino acid form link protein backbone bonds rotatable 
backbone may dofs proteins tests reported side chain torsion dofs known angles 
dofs hidden inside ball marked amino acid 
model common torsion dof representation literature 
possible apply algorithm models include additional dofs angles rotations peptide bonds adjacent amino acids bond lengths bond angles 
limit link single atom joint rigid body transform 
theoretically possible perform mcs cartesian coordinate space atom dofs efficient run torsion dof space 
vast majority mcs run space 
due chain kinematics protein small change dof backbone may cause large displacements atoms 
mcs high percentage steps rejected lead high energy conformations particular conformations clashes self collisions 
fact rejection rate tends grow quickly number dofs changed single step 
known fact reported biology literature 
illustrates point data gathered actual mcs run steps unfolded conformation htb residues 
top plot shows rejection rate function bottom plot gives total number dof changes accepted steps run trial steps function note largest total number dof changes obtained 
common practice mcs change dofs picked random trial step 
computing energy various energy functions proposed proteins 
dominant computation evaluation non bonded terms energy terms depend distances pairs non bonded atoms 
may physical terms van der waals electrostatic potentials heuristic terms potentials atoms proximity statistical potentials derived structural database 
avoid quadratic cost computing summing contributions pairs cutoff distances usually introduced exploiting fact physical heuristic potentials drop quickly distance atoms increases 
refer pairs atoms close contribute energy function interacting pairs 
van der waals forces prevent atom centers getting close number interacting pairs protein quadratic 
may try reduce computation finding interacting pairs enumerating atom pairs 
classical method grid algorithm see section indexes position atom regular dimensional grid 
method takes time linear number atoms asymptotically optimal worst case 
exploit important property proteins form long kinematic chains 
take advantage common practice mcs change dofs time step entails step simulation large fragments protein remain rigid leaving partial energy sums unaffected 
grid method re computes interacting pairs step directly identify partial sums remained constant 
fails efficiently sum contributions interacting pairs 
contributions contrast grid method method proposed finds new interacting pairs retrieves unaffected partial sums enumerating interacting pairs 
uses novel hierarchical data structure chaintree captures chain kinematics shape protein successive levels detail 
step chaintree maintained queried efficiently detect self collision find new interacting pairs 
enables identification unchanged partial energy sums stored companion data structure called allowing efficient energy updates simulation 
tested chaintree grid methods proteins identified ctf le htb protein data bank sizes ranging amino acids backbone atoms 
tests demonstrate algorithm effective exploiting fact large protein fragments remain rigid step 
specifically results show mcs chaintree method significantly faster grid method number dof changes step small 
observed speed ups factors largest proteins 
small sharply increases step acceptance ratio possible expedite evaluation acceptance criterion 
simulation methodologies classical mcs benefit algorithm see section 
outline rest organized follows 
section discusses related 
section presents chaintree data structure 
section describes algorithm detect self collision clash 
complexity algorithm analyzed section performance empirically assessed section 
section extends algorithm find new interacting atom pairs efficiently update energy simulation step 
section gives experimental results comparing algorithm grid algorithm mcs 
section describe software implementation chaintree algorithm available download 
section discusses applications algorithm complex mcs methods types molecular simulation methods points possible extensions directions research 
application chaintree test long kinematic chain self collision previously 
shorter version appeared 
denote number links kinematic chain protein backbone denote number dof changes simulation step 
number atoms amino acid bounded constant number atoms protein 
big smaller practice 
related collision detection problem considered closely related detecting collision moving objects checking deforming object self collision 
collision detection extensively studied robotics computer graphics computational geometry cite works :10.1.1.46.2687:10.1.1.52.9953:10.1.1.52.4265:10.1.1.26.2046:10.1.1.139.265:10.1.1.35.3436
research conducted environments rigid objects moving 
collision detection methods rely tracking object features closest features compute minimal separation distance :10.1.1.30.2174
require identity tracked features change rarely called temporal spatial coherence assumption 
particular assumption implies small time step placements objects undergo small changes 
long kinematic chain satisfy assumption small dof change may cause relatively large displacements parts chain 
collision detection methods partition space object moves example octree regular grid set projections subspaces :10.1.1.139.265
usually approaches lend incremental updating handle deformable object objects moving simultaneously 
exceptions include temporal spatial coherence assumption satisfied 
popular approach collision detection pre computes bounding volume hierarchy bvh object 
hierarchy captures spatial proximity small components object successive resolutions 
hierarchies expedite collision tests quickly discarding pairs components contained non overlapping bounding volumes bvs 
various types bvs spheres bounding boxes 
techniques extended handle deformable objects exploiting facts neighboring elements meshed surface object remain proximity object deforms :10.1.1.26.2046
deformable object balanced bv tree pre computed successively grouping topologically close features meshed surface enclosing bv 
object deforms topology tree stays unchanged sizes locations bvs updated bottom fashion 
bv techniques lose efficiency applied detecting self collision deformable object avoid detecting trivial self collision object component 
lose efficiency objects rigid move independently 
chaintree borrows previous bvhs 
uses bvh invariance chain topology 
combines transform hierarchy possible efficiently prune search self collision dofs change simultaneously 
limited amount previous research dedicated kinematic chains 
general scheme proposed efficiently update representation kinematic chain designed efficiently detect collision fixed obstacles 
scheme support self collision de tection 
addresses problem similar testing self collision deformable necklace spherical beads 
method builds bvh chain topology 
assumes dofs change simultaneously step attempt take advantage rigid sub chains consider problem maintaining value energy function 
dofs change simultaneously algorithm amount algorithm detect self collision 
problem deciding torsion angle change causes self collision polygonal chain studied 
shown determining rotation bond causes self collision path takes log time number links chain 
conjectured amount preprocessing enables performing rotations worst case sub linear time rotation 
care conformation rotation collision free collision motion 
finding interacting pairs biologists interested simulation results computational methods achieve results literature extensively describe algorithms mcs 
prevailing algorithm referred grid algorithm reduces complexity finding interacting pairs molecule asymptotically linear time indexing atoms regular grid 
approach exploits fact van der waals potentials prevent atom centers coming close 
formally shown collection possibly overlapping balls similar radii sphere centers closer small fixed distance number balls intersect ball bounded constant 
result yields grid algorithm subdivides space cubes sides set maximum diameter balls computes cubes intersected ball stores results hash table 
data structure re computed step time 
determining balls intersect ball takes time 
finding pairs intersecting balls takes time 
grid method find pairs atoms cutoff distance growing atom half distance 
method asymptotically optimal worst case updating data structure takes linear time 
costly large proteins making impractical perform mcs case 
variant method molecular dynamics simulation maintains atom list atoms distance somewhat larger cutoff distance dc updating steps 
idea atoms apart come closer dc steps 
tradeoff dc larger difference larger value 
choosing big causes neighbor lists large efficient 
method updating neighbor lists monitoring displacement atom described 
linear complexity best achieve practice dofs change step case molecular dynamics simulation 
aware principled attempt exploit chain kinematics proteins small number changing dofs step speed mcs 
molecule dependent simulation dependent heuristics simplify energy computation 
heuristics rely prior insight biologist require adjustments tuning deal new molecule family molecules different step generator 
chaintree section describe chaintree data structure represent protein 
stating key properties proteins mcs motivated data structure tion 
follows description hierarchies chaintree 
trans form hierarchy approximates kinematics backbone introduced subsections bounding volume hierarchy approximates geometry protein subsection 
discuss representation side chains subsection 
describe aforementioned hierarchies combined form single balanced binary tree subsection way updated subsection 
refer algorithm updates chaintree updating algorithm algorithm tests self collision finds interacting pairs testing algorithm 
properties proteins mcs protein backbone commonly modelled kinematic chain sequence links atoms rigid groups atoms connected torsional dofs 
chaintree motivated key properties deriving model local changes global effects changing single dof causes links dof way chain move 
testing algorithm requires knowing absolute position link step perform step number dof changes 
small angular changes may cause large motions displacement link caused dof change depends angular variation distance dof axis link radius rotation 
step link large radius rotation undergoes large displacement implying temporal spatial coherence assumption valid 
large sub chains remain rigid step perturb dofs step case mcs large contiguous fragments chain remain rigid steps 
new self collisions new interacting pairs inside fragments 
transform hierarchy attach frame link protein backbone map dof rigid body transform frames links connects 
transform hierarchy balanced binary tree transforms 
see ovals labelled arrows depict links transforms respectively 
lowest level tree transform represents dof chain 
products pairs consecutive transforms give transform level 
instance tac product tab tbc 
similarly transform level product consecutive transforms level just 
root tree transform frames links chain tai 
log levels tree seen chain half links dofs chain level just 
total transforms cached hierarchy 
say intermediate transform shortcuts transforms subtree rooted 
transform hierarchy top testing algorithm propagate transforms defining relative positions bounding boxes hierarchy need tested overlap 
allows computing relative position links boxes log time property algorithm 
structure similar transform hierarchy introduced 
theoretical analysis implemented 
bounding volume hierarchy bounding volume bv hierarchy similar prior collision checkers see sec tion 
spatial proximity deformable chain invariant bvh proximity links chain 
see 
simplicity introduce bvh self collision detection 
section describe extensions allowing detect self collision find new interacting pairs single hierarchy 
transform hierarchy bvh balanced binary tree 
constructed bottom chain aligned fashion 
lowest level bv bounds link 
pairs neighboring bvs level bounded new bvs form level 
root bv encloses entire chain 
level chain half number bvs chain level 
chain bvs encloses geometry chains bvs lower levels 
type bv oriented bounding box obb rectangular bounding box arbitrary orientation :10.1.1.35.3436
chose obbs bound globular objects single atoms small groups atoms elongated objects chain fragments 
addition simpler axis aligned bounding boxes spheres obbs invariant rigid body transform geometry bound :10.1.1.26.2046
chaintree property allows re compute bv rigid sub chain sub chain moved 
obbs efficiently computed tested intersection 
spheres frequently bvs meet needs :10.1.1.52.9953
chain aligned hierarchy expect bound poorly elongated sub chains helices strands 
construct intermediate obb enclose children creating term tight hierarchy contrast tight hierarchy bv tightly bounds links sub chain encloses 
appendix lemma show size obbs deteriorate climbs hierarchy 
major advantage tight bvh efficiency box updated 
shape obb stored intermediate node depends vertices obbs held node children 
side chain representation side chains amino acid short chains atoms backbone 
side chain may internal torsional dofs 
biology literature proposes different ways model side chains ranging single sphere approximating entire side chain full atomistic model 
choice depends physical accuracy wishes achieve amount computation willing pay simulation step 
may choose side chains completely rigid allow dofs change simulation 
cases expect overhead sub hierarchy side chain atoms exceed benefit may provide 
allow link protein backbone aggregate atoms represented single coordinate frame contained obb leaf bvh 
aggregate includes backbone atoms forming rigid piece backbone atoms side chain stemming contained circle marked 
side chain dof changed positions affected atoms recomputed coordinate frame link belong bv link recomputed 
combined data structure chaintree combines transform bv hierarchies single binary tree depicted 
leaves tree labelled correspond links protein backbone attached side chains described section 
leaf holds bounding box corresponding link side chain transform symbolized horizontal arrow frame link 
internal node nodes frame leftmost link sub tree associated 
holds bounding box boxes children transform frame node level 
computing relative position box left child box requires coordinate transform computing position box relative right child box requires transform stored left child node 
testing algorithm propagate relative positions pairs boxes tested overlap 
chaintree contains pointers children parents updating algorithm propagate updates bottom described pointers parents children testing algorithm section 
updating chaintree change applied single arbitrary dof backbone updating algorithm re computes transforms shortcut dof boxes enclose links connected dof 
bottom fashion tracing path leaf node immediately left changed dof root 
single node affected level 
node holds transform transform updated 
holds box contains changed dof box re computed 
example dof links associated nodes changed transforms stored boxes re computed 
shape obb invariant rigid body transform objects bound boxes remain unchanged 
dof changed side chain box stored corresponding leaf node chaintree boxes ancestors node re computed transforms hierarchy remain unchanged 
multiple dofs changed simultaneously backbone side chains chaintree updated level time starting lowest level 
affected trans forms boxes level updated proceeding level 
updating algorithm marks node box transform re computed 
mark testing algorithm 
shows marked nodes chaintree change dof links associated nodes nodes bold contours transforms updated 
nodes grey boxes re computed 
general marked nodes may transforms boxes updated 
self collision detection bvh bvhs widely detect collision pairs rigid objects described hierarchy :10.1.1.46.2687:10.1.1.52.9953:10.1.1.26.2046:10.1.1.35.3436
hierarchies objects algorithm checks root boxes overlap 
safely return objects collide 
overlap algorithm descends level hierarchies tests pairs children 
continues process iteratively 
lowest level hierarchy reached algorithm continues descent hierarchy testing leaf boxes hierarchy boxes newly reached level hierarchy 
reaches leaves hierarchies tests actual components objects overlap returns collision overlap 
algorithm may soon collision may run collisions 
case best algorithm search collision depth manner reach overlapping leaves quickly possible 
algorithm terminates quickly objects separated search ends near top hierarchies avoids dealing possibly complicated ge actual objects 
interested detecting collision occurs algorithm terminates quickly overlap large depth search finding pair overlapping leaf nodes 
algorithm takes longer objects close collide distinct collisions wants find 
simple variant algorithm detects self collision testing bvh object 
variant skips test box proceeds directly testing box children 
takes time leaves inevitably visited leaf trivially collision 
chaintree allows avoid lower bound exploiting third property stated section large sub chains remain rigid steps 
chaintree small number dofs changed simultaneously long sub chains remain rigid step 
sub chains contain new self collisions 
test bvh contained chaintree prune branches search look self collision rigid sub chains 
distinct situations pruning occurs 
algorithm test box box updated dof changes test pruned 

algorithm test different boxes box updated dof changes backbone dof boxes changed test pruned 
condition second situation backbone dof boxes changed slightly delicate recognize efficiently 
say nodes level chaintree separated exists node level holds transform modified dof changes 
node dubbed separator 
separated transform held leftmost modified 
nodes separated dof changed 
nodes level separated pair consisting child child separated 
nodes level separated child child separated separated child parent 
pushing separation information downward testing algorithm know constant time dof changed boxes test 
algorithm propagates transforms transform tree downward compute relative position separated boxes constant time performing overlap test 
illustrate testing algorithm works consider chaintree obtained change dof separators 
algorithm tests box stored root 
box changed algorithm examines pairs children 
box held changed discarded search path pruned 
discarded box changed leading algorithm consider pairs children 
satisfy conditions second situation described discarded 
discarded separated true 
complexity analysis fundamental tradeoffs bvh self collision detection 
number box overlap tests needed detect rule self collision cost test general complex bvs tighter bound geometry fewer tests required expensive test 

time needed update bvh time detect rule self collision general reducing updating time tight boxes keeping topology hierarchy fixed impairs performance self collision detection 
analysis aimed clarifying choices chaintree comparing updating testing algorithms current state art algorithms 
worst case asymptotic behavior algorithms grows arbitrarily large 
behavior meaningful practice proteins small worst case 
reason section complement analysis experimental tests 
section ignore side chains 
size small bounded constant side chains affect asymptotic complexity bounds constant factor 
updating chaintree updating chaintree dof change requires re computing transforms boxes held nodes path leaf node immediately left changed dof root tree 
doing updates bottom affected transform re computed time 
tight obbs trading tightness update speed re computing box done time 
chaintree log levels level transform box updated total cost update process log 
dof change affected transforms boxes updated level time 
ensures transform box re computed converging update paths merge 
total updating time log 
grows bound exceeds 
efficient updating time small values derives fact topology chaintree modified 
topology optimal detect self collision imperfectly represents spatial proximity links 
detecting self collision known algorithms detect self collision link chain take time worst case assumption chain 
behave better brute force algorithm 
subsection assume protein chains behaved 
associate link chain minimal enclosing sphere 
positive constants chain behaved verifies properties 
ratio radii largest smallest enclosing spheres smaller 

distance centers enclosing spheres greater 
hard convince oneself proteins form behaved chains 
property follows fact different types amino acids 
second property verified exclude conformations atoms overlap completely 
conformations physically impossible van der waals forces shown behaved chains arbitrary length number links overlap link bounded constant 
overlaps links behaved chain 
mcs cause behaved chain degenerate 
simulation step affects small constant dofs number overlaps atom increase constant factor 
step increases number overlaps rejected causes clash 
cumulative effect successive steps degenerate chain 
algorithm performs tasks pair nodes examines 
decide prune search path 
requires testing nodes updated dof change separated 
second search path pruned boxes tested overlap 
tasks require constant time 
complexity algorithm governed number pairs nodes examined proportional number overlapping boxes levels chaintree worst case 
appendix prove theorem theorem maximum total number overlapping boxes levels chaintree behaved chain links 
testing algorithm runs worst case time 
bound similar established holds algorithm stops detecting collision keeps running detect self collisions 
fact boxes overlap imply contain colliding links 
detect single self collision absence algorithm may eventually consider pairs overlapping boxes 
note bound affected pruning search paths 
dofs change simulation step long chain remains behaved self collision detec tion takes time worst case updating 
experimental results section show dofs change step algorithm behaves better practice bound suggests 
comparison methods exist methods applicable problem detecting self collision chain 
asymptotic worst case complexity important ones table 
step brute force algorithm re computes position link moved done worst case linear time 
detects self collision testing pairs links overlap resulting tests worst case collisions 
assumption chain behaved grid algorithm see subsection reduces worst case complexity updating testing linear time 
grid algorithm optimal worst case bv hierarchy methods intended better average 
chain types bvhs may spatially adapted hierarchy bvh described spatial parti chain conformation optimally encode spatial proximity links :10.1.1.35.3436
chain aligned hierarchy bvh chaintree see example encodes chain wise proximity links chain 
links said chain wise proximity separated links chain 
ideally bvh depth box tree indicator spatial proximity links bounded box 
precisely spatially adapted hierarchy intended achieve 
chain aligned hierarchy encodes chain wise proximity 
links chain wise close spatially close 
reverse true chain conformation pairs links chain wise far apart may spatially close happens folded protein conformations 
consequently testing self collision spatially adapted hierarchy efficient chain aligned 
spatial proximity varies chain deforms chain wise proximity updating spatially adapted hierarchy expensive 
spatially adapted hierarchy chain tested self collision time worst case 
bound special case theorem proven 
expected better practice 
building new hierarchy step takes log time :10.1.1.35.3436
attempt reduce updating time changing topology hierarchy updating size location bvs 
single dof change may corrupt hierarchy raise number bv overlap tests required detect self collision 
illustrates scenario 
hierarchy spatially adapted overlap boxes 
change middle dof creates conformation 
boxes updated bound new conformation changing topology hierarchy 
pairs boxes displayed level overlap 
contrast despite fixed topology chain aligned bvh guarantees self collision test update tight obbs log update tight spheres 
transform hierarchy chaintree reduces updating cost dof change log 
worst case bound self collision detection chaintree hides practical speed allowed search pruning 
evaluate speed need perform empirical tests 
test results self collision detection conducted various tests implementation method called chaintree methods grid grid method subsection 
length side grid cell diameter largest atom 
updating testing take time 
obbtree tight spatially adapted obb hierarchy re computed step tested self collision 
updating testing take log worst case time respectively 
obbtree step algorithm computes tight spatially adapted obb hierarchy rigid sub chain 
tests pair hierarchies collision 
updating testing take log worst case time respectively 
obbtree obbtree library unc 
function chaintree testing pairs obbs overlap library 
experiments run single mhz ultrasparc ii cpu sun ultra enterprise machine gb ram 
series tests created pseudo protein chains spheres radius unit spaced units apart torsion joint spheres initial compact cube conformations 
simulation consisted steps changing single dof picked uniformly random 
magnitude change chosen uniformly random collision detected step rejected change undone proceeding step 
requires keeping copies chaintree 
chain runs method started initial conformation seed random number generator 
generated sequence conformations 
average times step shown algorithms finding collision 
plots show updating times black testing times grey 
times small discernable 
chaintree times faster grid spheres times faster spheres 
finding self collisions chaintree times faster grid spheres times faster spheres 
cases obbtree obbtree slowest methods high updating time obbtree fastest testing time methods 
second series tests proteins protein data bank pdb 
selected proteins named ctf le htb jb pdb span different sizes 
see table 
protein ran simulation series tests starting folded native state protein 
protein backbone considered side chains ignored 
step algorithms stopped finding collision 
results summarized 
chaintree twice fast grid smallest protein ctf times faster largest jb 
note chains benchmark significantly shorter benchmark 
examined effect number simultaneous dof changes step performance algorithms 
vary value measured average time step update find collisions 
order eliminate effect compactness results chose conformations htb having different radius distributed uniformly radius native conformation conformation value ran simulation steps starting conformation 
constrained simulation stay starting conformation compactness change 
simultaneous changes cause collisions average takes time find collision large 
measured time find collisions affected shows results 
time results averaged conformations 
case chaintree fastest algorithm logarithmic updating time fast self collision detection due search pruning 
www org pdb increases updating time chaintree deteriorates search pruning effective rigid sub chains shorter 
grid performance independent faster 
reveals explicitly effectiveness search pruning chaintree 
shows average number box overlap tests performed chaintree search pruning previous experiment averaged conformations htb explained increasing values numbers significantly smaller pruning small 
expected converge increases 
incremental energy updates mcs extend testing algorithm incrementally update energy protein undergoing mcs 
typical energy function form sums terms depending single parameter commonly referred bonded terms torsion angle bond stretching potentials sums terms commonly known non bonded terms account interac tions pairs atoms atom groups closer cutoff distance 
updating conformational change straightforward 
done computing sum differences energy terms affected change adding previous value 
dof change affected single parameter terms 
follows focus update 
overview simulation step find interacting pairs atoms change accordingly 
finding pairs similar finding self collisions 
may algorithm having grown atom half cutoff distance 
small interacting pairs unaffected dof change 
number affected interacting pairs worst case usually smaller total number interacting pairs new conformation 
algorithm grid algorithm computes interacting pairs step optimal practice 
having computed new set interacting pairs update re computing pairwise contributions scratch scanning old new sets interacting pairs determine terms subtracted old value terms added get new value 
case perform computation proportional total number interacting pairs 
method directly finds new interacting pairs including previous pairs distances changed 
detects partial energy sums unaffected dof change sums correspond interacting pairs atoms belong rigid sub chains 
energy terms contributed new pairs added unaffected partial sums obtain new value 
practice total cost computation roughly proportional number changing interacting pairs 
algorithm new data structure call partial sums computed previous steps cached 
finding new interacting pairs wish find new interacting pairs atoms step 
include interacting pairs interacting previous conformation pairs previously interacting distances changed 
include previous interacting pairs longer interacting 
chaintree described section having grown atom radii half cutoff distance 
testing algorithm section finds exactly new interacting pairs 
changing cutoff distance molecule requires re computing obbs chaintree 
changing distance useful detect close pairs atoms pass quickly discard conformations unfavorable 
see subsection 
drawback led replace obbs rectangle swept sphere overlap tests bvs distance computation 
rss type bv introduced defined minkowski sum sphere rectangle 
rss bounding set points created obb 
principal directions spanned points computed rectangle constructed directions enclose projection points plane defined directions 
rss minkowski sum rectangle sphere radius half length interval spanned point set dimension perpendicular rectangle 
comparison obb set points cross product rectangle interval 
create rss hierarchy way described subsection 
slightly modify algorithm section test pairs closer apart cutoff distance testing pairs obbs overlap 
search pruning rules rigid sub chains unchanged re compute interacting pairs inside rigid sub chains 
identified previous steps mcs 
partial energy sums corresponding pairs unchanged retrieved described subsection 
compute distance simply computes distance underlying rectangles minus radii swept spheres 
faster computing distance obbs bvh independent cutoff distance 
asymptotic bounds updating testing stated section hold unchanged 
bound testing derives observation rss may larger obb constant factor 
precisely rss set points larger obb principal directions length smallest side obb diameter swept sphere 
rss easily fit inside obb twice large optimal obb dimension 
computing distance takes constant time just testing obbs overlap 
fact asymptotic bound testing unchanged misleading 
bound relies fact protein backbones behaved chains number atoms may interact atom bounded constant protein grows arbitrary large 
constant larger constant bounding number atoms may overlap atom 
situation worse small proteins pairs atoms interacting 
may expect testing algorithm take significantly time find new interacting pairs find self collisions 
exploit subsection propose pass testing algorithm 
updating energy value recall testing algorithm examines pair sub chains including case copies sub chain tests sub chains affected dof change contained rigid sub chain 
case sub chains contribute new interacting pairs algorithm prunes search path 
reason sum energy terms contributed interacting pairs sub chains unchanged 
able retrieve 
introduce data structure cache partial sums corresponding pairs sub chains testing algorithm may possibly examine 
shows chaintree 
nodes necessarily distinct level chaintree 
leaf nodes resp left right children 
denote total energy contributed interacting pairs atom belongs sub chain corresponding atom belongs sub chain corresponding 

similarly partial energy sum contributed interacting pairs inside sub chain corresponding decomposed follows 
recursive equations yield 
levels chaintree 
nodes level pairs nodes level chaintree 
leaves chaintree node 
node children 
leaves pairs leaves chaintree correspond pairs links protein chain 
simplification show leaves form 
node holds partial energy sum current conformation simulation 
root holds total sum 

step testing algorithm called find new interacting pairs 
process algorithm prunes search path marks corresponding node indicate energy sum stored node unaffected 
energy sums stored updated 
done performing recursive traversal tree 
recursion path ends reaches marked node reaches un marked leaf 
second case sum held leaf re computed adding energy terms corresponding interacting pairs previously testing algorithm 
recursion unwinds intermediate sums updated equations 
practice testing algorithm updating run concurrently sequentially 
illustrate assume dof change applied chain case testing algorithm marks nodes 
recursion re computes scratch partial sums unmarked leaves encounters updates partial sums un marked nodes visits recursion unwinds equations 
size grows quadratically number links 
proteins critical issue 
example experiments memory ranges mb ctf mb jb 
needed memory saved representing nodes correspond pairs closer cutoff distance 
experimental results mcs experimental setup extended chaintree described previous section 
step mcs may rejected keep copies chaintree 
rss distance computation routines borrowed library 
similarly extended grid find interacting pairs setting side length grid cubes cutoff distance 
mentioned subsection grid finds interacting pairs step just new ones cache partial energy sums 
computes new energy value summing terms contributed interacting pairs 
tests run mhz ultrasparc ii cpu sun ultra enterprise machine gb ram 
performed mcs new chaintree grid proteins table 
self collision tests earlier side chains included models rigid groups atoms internal dof 
leaf cutoff distance chaintree finds interacting pairs corresponding links examining pairs atoms 
energy function tests includes van der waals potential cutoff distance electrostatic potential cutoff native contact attractive quadratic potential cutoff cutoff distance chaintree grid set simulation run consisted trial steps 
number dofs changed step constant run 
performed runs 
change generated picking backbone dofs random changing dof independently magnitude picked uniformly random run started random partially extended conformation protein 
term pair atoms grows distance atom centers quickly approaches infinity small clash 
term detected cross large threshold energy computation halted chaintree grid step rejected 
ran mcs methods protein starting initial conformation seed random number generator 
note protein conformation chaintree grid compute exact energy value 
results results experiments tables 
illustrations average time results figures respectively 
expected chaintree gave best results requiring average quarter time grid step smallest protein ctf twelfth time largest protein jb 
average number interacting pairs energy terms evaluated step times smaller chaintree grid ctf times smaller jb 
see similar results 
case chaintree twice fast grid ctf times faster jb 
average number interacting pairs energy terms evaluated twice smaller chaintree ctf times smaller jb 
relative effectiveness chaintree declined times faster grid ctf times faster jb 
average number interacting pairs energy terms evaluated chaintree number evaluated grid ctf times smaller jb 
results consistent obtained self collision detection section 
larger effective algorithm compared grid 
small new interacting pairs step chaintree effective exploiting fact 
chaintree grid average time step decreases increases 
stems fact larger yield threshold terms terminate energy computation sooner 
order examine full effect reusing partial energy sums re ran simulations proteins threshold 
results tables 
removing threshold significantly alter behavior algorithms 
average time step course larger energy computation cut short threshold crossing 
relative speed chaintree grid slightly smaller threshold 
pass chaintree previous mcs percentage steps rejected energy computation com due threshold term ctf example rose 
observation motivates choosing small suggests pass approach 
pass chaintree uses small cutoff distance chosen atom pairs closer cutoff yield threshold terms 
pass algorithm stops soon finds interacting pair step rejected 
second pass cutoff distance set largest cutoff energy terms chaintree computes new energy value 
refer implementation pass approach chaintree 
chaintree faster small cutoff pass result step rejection expect chaintree significantly faster chaintree 
modifications described subsection passes chaintree data structure 
compared chaintree chaintree running mcs trial steps measuring average time step 
results proteins table 
ran different simulations protein 
started partially extended conformation started folded state protein 
conformations reached case compact second case 
consequently rejection rate due self collision higher second case 
chaintree faster cases speed factors greater starting folded state 
clear similar improvement obtained grid 
resolution indexing grid depends cutoff distance 
indexing atoms different grids small cells detecting clashes larger cells computing energy may considerably reduce advantage pass approach 
mcs software extended implementation chaintree algorithm include physical full atomic energy function 
chose implement force field eef 
force field charmm potential energy function added implicit solvent term 
chose eef shown discriminate folded structures 
suited chaintree implicit solvent term pairwise algorithm compute efficiently 
packaged software program runs fast mcs 
downloaded robotics stanford edu mcs 
software loads initial structure described terms amino acid sequence corresponding backbone angles residue 
performs classical mcs 
user control parameters simulation number angles change length simulation temperature 
specifying command line 
protein model uses fixed amino acid side chain limited fixed number conformations simulation 
advantage fixed atom positions internal energy pre computed 
switching simulation done extremely fast 
backbone independent library lab 
summary contribution presents novel algorithm chaintree data structures reduce average step time mcs proteins independent energy function step generator acceptance criterion simulator 
tests show number simultaneous dof changes step small usually case mcs new method significantly faster previous general methods including worst case optimal grid method especially large proteins 
increased efficiency stems treatment proteins long kinematic chains hierarchical representation kinematics shape 
representation chaintree allows exploit fact long sub chains stay rigid step systematically re unaffected partial energy sums cached companion data structure 
tests demonstrate advantage chaintree detect clash computing energy function 
applications application algorithm classical metropolis mcs speed mcs methods optimization simulation methodologies 
example mcs methods different acceptance criterion benefit kind speed reported section speed derives faster maintenance energy function relatively dofs changed simultaneously independent actual acceptance criterion 
methods include entropic sampling mc parallel hyperbolic mc parallel hat tempering mc 
mcs methods parallel tempering known replica exchange require running number replicas parallel benefit separate chaintree replica 
mcs methods sophisticated move sets trial step generators 
gorithm applied move sets change dofs simultaneously particular case moves sets proposed biasing random torsion changes moves fragment replacement 
computationally intensive step generators internal forces gradient energy function bias choice conformation force biased mc smart mc mc plus minimization 
step generators advantage algorithm questionable may change dofs step 
similarly called hybrid mc methods combine mcs molecular dynamics simulation benefit algorithm relatively dofs changed step 
true pure mds torsion angle space 
optimization approaches benefit algorithm 
instance popular uses genetic algorithms crossover mutation operators 
crossover operator generates new conformation combining halves extracted previously created conformation 
mutation operators reuse long fragments previous conformations 
types operators algorithm allow partial sums energy terms computed fragment re saving considerable amounts computation 
current currently mcs software run mcs proteins order residues larger 
best knowledge attempted far 
intend perform mcs systems small proteins order study protein known cause diseases alzheimer 
protein system chaintree detect interaction molecule molecules 
physically realistic simulation take account solvent protein immersed 
mds done adding solvent molecules system 
explicit representation solvent tremendously slow mcs 
mcs solvent accounted implicitly adding energy term changing parameters terms electrostatic potential 
number implicit solvent terms proposed literature 
algorithm efficient computing pairwise interactions solvent term incorporated eef force field sums contributions pairs atoms suited 
way implicitly accounting solvent solvent accessible surface area protein estimate energetic contribution solvent 
case surface area molecule known simulation step 
approximate methods computing surface area integrate algorithm method collects surface area contributions pairs atoms approximates error introduced ignoring way contributions method computes surface area sum surface contribution atom computed approximately arrangements great circles sphere 
possible extension chaintree help select better simulation steps 
rejection rate mcs high compact conformations simulation comes quasi 
known weakness mcs useful native conformation 
happens dof change causes clash 
select dof changes create clashes pre compute radius rotation link relative dof 
radii distances interacting atom pairs conformation allow computing range change dof clash occur 
approach generating moves compact conformation attempt local moves changes affect short sub chain keeping endpoints fixed 
candidate sub chains kind change free space vicinity deformed 
chaintree quickly survey neighborhood amino acid determine free space 
free space sub chain moved inverse kinematics techniques 
natural extension exploits hierarchical nature chaintree vary resolution molecular representation mcs progresses 
accomplished changing fly level chaintree considered leaf level bottom level 
full atomic resolution searches chaintree continue reaching absolute bottom level 
coarser resolution tolerated search stopped higher level hierarchy node represents amino acids 
different energy function level resolution 
scheme entail large savings cpu time regions conformation space protein structure compact compromising precision regions needed 
partially funded nsf itr ccr stanford initiative 
dan halperin supported part ist programme eu shared cost rtd fet open project contract ist ecg effective computational geometry curves surfaces contract ist movie motion planning virtual environments israel science foundation founded israel academy sciences humanities center geometric computing applications hermann minkowski minerva center geometry tel aviv university 
argos 
optimal protocol trajectory visualization conformational searches peptides proteins 
mol 
biol 

biased probability monte carlo conformational electrostatic calculations peptides proteins 
mol 
biol 

ab initio folding peptides optimal bias monte carlo minimization procedure 
comp 
phys 
agarwal guibas hershberger zhang 
deformable free space tilings kinetic collision detection 
donald lynch rus editors alg 
comp 
robotics new directions pages 
peters wellesley 
berman westbrook feng bhat protein data bank 
nucl 
acids res 
binder 
monte carlo simulation statistical physics 
springer verlag berlin nd edition 
brass chen robson 
hybrid monte carlo simulation theory initial comparison molecular dynamics 
biopolymers 
brooks states swaminathan karplus 
charmm program macromolecular energy dynamics calculations 
comput 
chem 
brown sorkin 
latombe montgomery 
algorithmic tools real time simulation 
med 
image anal 
cameron 
collision detection dimensional intersection testing 
ieee tr 
robotics automat june 
clark hawley hendrickson 
treatment solvation molecular mechanics dynamics 
american chemical society 
cohen lin manocha ponamgi :10.1.1.139.265
collide interactive exact collision detection system large scale environments 
sym 
interactive graphics pages 

proteins structures molecular properties 
freeman new york nd edition 
mayo 
pairwise calculation protein solvent accessible surface areas 
science 
dobkin kirkpatrick 
determining separation preprocessed polyhedra unified approach 
proc 
th int 
colloq 
automata lang 
program 
lecture notes comput 
sci volume pages 
cohen 
bayesian statistical analysis protein prefer ences 
protein sci 
eisenberg 
local moves efficient method protein folding simulations 
proteins 

obstacle avoidance octree configuration space manipulator 
ieee conf 
rob 
auto icra pages 

object level programming industrial robots 
ieee conf 
rob 
auto 
icra pages 
hayward 
safe swept volume method collision detection 
sixth international symposium robotics research pages pittsburgh pa oct 
sullivan :10.1.1.35.3436
improving collision detection tween deformable objects 
spring conf 
comp 
graphics 
abe 
local structure model folding transition globular proteins 
biopolymers 
gottschalk lin manocha :10.1.1.35.3436
obbtree hierarchical structure rapid interference detection 
comp 
graphics annual conf 
series 

statistical physics macromolecules 
aip press new york 
guibas nguyen russel zhang 
deforming necklaces 
symp 
comp 
geometry pages 

torsion angle dynamics nmr structure calculation new program 
mol 
biol 
halperin 
latombe motwani 
dynamic maintenance kinematic structures 

laumond overmars editors alg 
rob 
motion manip 
pages 
peters wellesley 
halperin overmars 
spheres molecules hidden surface removal 
comp 
geom theory app 
halperin shelton 
perturbation scheme spherical arrangements application molecular modeling 
comp 
geom theory app 
okamoto 
new monte carlo algorithms protein folding 
curr 
opin 
struct 
biol 

parallel tempering algorithm conformational studies biological molecules 
chem 
phys 
lett 
hubbard 
approximating polyhedra spheres time critical collision detection 
acm tr 
graphics 
jim nez thomas 
collision detection survey 
computers graphics 

smart monte carlo simulation globular protein 
int 
quant 
chem 
kikuchi 
inter ca atomic potentials derived statistics average distances proteins application inhibitor 
comput 
chem 
klosowski mitchell 
efficient collision detection bounding volume hierarchies dops 
ieee tr 
visual 
comp 
graphics 
shimada 
structure method derivation atom potentials protein folding 
proc 
natl 
acad 
sci april 
larsen gottschalk lin manocha 
fast distance queries rectangular swept sphere volumes 
ieee conf 
rob 
auto 
icra 
karplus 
discrimination native protein models energy including implicit solvation 
mol 
bio 
karplus 
effective energy function proteins solution 
proteins 
leach 
molecular modelling principles applications 
longman essex england 
lee 
new monte carlo algorithm entropic sampling 
phys 
rev lett 
li scheraga 
monte carlo minimization approach multiple minima problem protein folding 
proc 
natl 
acad 
sci oct 
lin canny 
fast algorithm incremental distance calculation 
ieee int 
conf 
rob 
auto 
icra pages 
schwarzer halperin 
latombe 
efficient maintenance self collision testing kinematic chains 
symp 
comp 
geo pages 
schwarzer latombe 
efficient energy computation monte carlo simulation proteins 
workshop algorithms bioinformatics budapest september 
metropolis rosenbluth rosenbluth teller teller 
equation state calculations fast computing machines 
chem 
phys 

near neighbor algorithm metropolis monte carlo simulation 
molecular simulations 

simulation methods protein structure fluctuations 
biopolymers 
rao berne 
novel monte carlo scheme simulating water aqueous solutions 
chem 
phys 
lett 
pedersen 
protein folding simulations genetic algorithms detailed molecular description 
mol 
biol 
quinlan 
efficient distance computation non convex objects 
ieee int 
conf 
rob 
auto 
icra pages 
schwarzer saha 
latombe 
exact detection robot paths 
proc 
th workshop alg 

rob 
shimada 
folding thermodynamics kinetics atom monte carlo simulation 
mol 
biol april 
shimada 
ensemble folding kinetics protein atom monte carlo simulation 
proc 
natl 
acad 
sci august 
simons huang baker 
assembly protein tertiary structure fragments similar local sequences simulated annealing bayesian scoring functions 
mol 
biol 
erickson overmars 
preprocessing chains fast dihedral rotations hard impossible 
comp 
geom theory app 
toussaint 
geometric computational aspects polymer reconfiguration 
math 
chem 
stein rics br nger 
torsion angle molecular dynamics new efficient tool nmr structure calculation 
magn 
reson 
sun 
reduced representation model protein structure prediction statistical potential genetic algorithms 
protein science 
sun thomas dill 
simple protein folding algorithm binary code secondary structure constraints 
protein eng 
thompson 
neighbor lists molecular dynamics 
information ccp 
unger 
genetic algorithm protein folding simulations 
mol 
biol 
van den bergen 
efficient collision detection complex deformable models aabb trees 
graphics tools 
scheraga 
exact analytical loop closure proteins polynomial equations 
comput 
chem 
zhang 
new hybrid monte carlo algorithm protein potential function test struc ture refinement 
proteins 
zhang skolnick 
local energy landscape flattening parallel hyperbolic monte carlo sampling protein folding 
proteins 
zhang skolnick 
parallel hat tempering monte carlo search scheme identification low energy structures 
chem 
phys 
zheng rosenfeld 
loop closure bond scaling relaxation 
comput 
chem 
zhou suri 
collision detection bounding boxes convexity helps 
th annual european symposium algorithms esa pages 
appendix proof theorem appendix give proof theorem stated section 
way establish successive useful lemmas 
order simplify proof regularize behaved kinematic chain follows 
replace link enclosing sphere radius equal largest minimal enclosing sphere link chain 

grow spheres equally consecutive spheres chain disjoint course spheres may intersecting 
links new chain spheres equal radius new chain behaved regularization change size enclosing spheres constant factor distance centers enclosing spheres successive links original chain lower bounded constant case proteins 
maximal number links new chain overlap single link bounded constant constant may greater original chain 
asymptotic bounds affected change constant 
consider regularized chain 
distinguish types bvh chain 
tight hierarchy bv tightly bounds links encloses 
tight non leaf bv bounds tightly bvs just 
tight sphere hierarchy bounding sphere minimum enclosing sphere links encloses 
proposition lemmas establish upper bound theorem 
proposition presents chain conformation bound attained showing bound tight 
proposition tight chain aligned sphere hierarchy behaved link chain maximum total number overlapping bounding spheres levels 
proof level hierarchy 
log lowest level consecutive sub chain gi links bounded single sphere radius gir 
radius occurs links arranged straight line 
take sub chain gi links bi denote bounding sphere 
ci sphere concentric bi having radius gir 
bounding sphere level intersecting bi fully contained ci 
bound number sub chains gi links bounding spheres level contained ci 
aim upper bound assume sub chain tightly packed possible 
link overlap constant number links volume occupied sub chain length gi bounded constant 
number bounding spheres level contained ci mi mi upper bound number bounding spheres level overlap bi 
exactly gi bounding spheres level mi grow larger level gi imax bound reached smallest defined gi get gi imax 
log log 
imax ti gi mi upper bound number overlapping bounding spheres level imax ti gi upper bound number 
follows ignore constant term right hand side equation effect asymptotic bound prove 
total number overlapping bounding spheres levels log ti log gi log log log log log side note proof extends minor changes spaces dimension 
get upper bound note upper bound proposition holds chain aligned bvh tight long bv level enclosed sphere radius absolute constant show upper bound holds obb hierarchy chaintree 
lemma obbs contained sphere radius obb bounding contained sphere radius concentric proof denote obbs contained denote obb 
con struct bounding cube faces parallel 
contains main axes define faces farther touching 
bounding sphere concentric contains 
side length diagonal length radius 
gi lemma level tight chain aligned obb hierarchy behaved link chain obb contained sphere radius absolute constant 
proof choose obb levels 
hierarchy contained sphere radius know exists spherical links enclosed obb levels 
take constant 
proceed induction assuming lemma correct level 
consider consecutive obbs bj 
level bounded obb level induction hypothesis implies bounding sphere bj radius take sphere radius contains sub chain bounded bj boxes 
sphere bounding bj boxes intersect link contained spheres 
point box bj away ir center sphere radius concentric boxes bj contained 
consider pairs bounded level 
apply lemma pairs realize sphere radius times radius concentric bounds obbs level 
continuing line reasoning level get sphere radius contains obb level encloses boxes bj 
set radius smaller choose max 
lemma assures obbs obb hierarchy chaintree big climb hierarchy upper bound proposition applies chaintree 
lemma tight chain aligned obb hierarchy behaved link chain maximum number overlapping bounding boxes levels 
proof noted previously proof proposition holds chain aligned bvh tight behaved link chain long bv level enclosed sphere radius absolute constant lemma establishes verified tight chain aligned obb hierarchy chain 
completes proof proposition establishing upper bound theorem 
show bound attained 
proposition exists behaved chain links number bv overlap tests needed detect self collision certain conformations chain aligned bvh convex bvs 
proof prove lemma presenting chain conformation requires matter bvs long convex 
coordinate frame take links chain place axis starting origin proceeding positive direction 
spheres center sphere origin 
center dth link place links chain parallel axis starting going positive direction 
place links parallel axis starting just previous link sub chain ended 
call sub chain links unit 
additional links chain create units reverse order previous translated relative previous 
call units layer 
shows layer 
rest chain create layers reverse order previous translated relative previous 
noticed convex hull unit contains point 
convex hulls pairwise intersecting hierarchy convex bvs contain intersecting pairs bvs level links unit en closed bv 
created small constant times units total links units yield convex hulls intersecting pairs convex hulls 
lemma proposition prove theorem 
amino acid amino acid amino acid amino acid illustration protein fragment backbone dofs 
represents side chain torsional dof angle plane atoms plane atoms 
num 
dof changes rejection ratio number simultaneous changes effect number simultaneous dof changes 
rejection ration total number changes 
ab ac bc ae ei cd de ce ef gh fg hi ai transform hierarchy grey ovals depict links denote rigid body transforms frames 
gi bvh box obb approximates geometry chain contiguous sequence links 
shares frame holds transformation binary tree combines transform bv hierarchies 
shares frame holds transformation chaintree applying dof perturbation 
highlighted nodes updated dof change corrupting spatially adapted hierarchy 
change 
dof change 
second level bottom shown boxes 
time msec 
spheres chaintree grid obbtree obbtree testing updating spheres chaintree grid obbtree obbtree spheres chaintree grid obbtree obbtree spheres chaintree grid obbtree obbtree time msec 
ctf chaintree grid obbtree obbtree testing updating le chaintree grid obbtree obbtree htb chaintree grid obbtree obbtree jb chaintree grid obbtree obbtree average time step detecting self collision compact pseudo protein chain backbones different proteins 
time msec 
chaintree grid obbtree obbtree number simultaneous changes effect increasing number simultaneous dof changes running time algorithms 
number obb overlap tests pruning pruning number simultaneous changes average numbers box overlap tests chaintree search pruning 
chaintree 
leaves form shown 
time msec 
chaintree grid ctf le htb jb chaintree grid time msec 
ctf le htb jb comparing average time mcs step chaintree grid 
layer chain construction 
update detection brute force grid spatially adapted hierarchy log chain aligned hierarchy chaintree log table comparison complexity measures updating detecting self collision behaved chains 
protein amino acids atoms backbone atoms links ctf le htb jb table proteins experiments 
chaintree grid chaintree grid chaintree grid ctf le htb jb table mcs results average time simulation step milliseconds chaintree grid chaintree grid chaintree grid ctf le htb jb table mcs results number interacting pairs energy terms evaluated step 
chaintree grid chaintree grid ctf le htb jb table mcs results threshold terms average time milliseconds step 
chaintree grid chaintree grid ctf le htb jb table mcs results threshold terms average number interacting pairs energy terms evaluated step 
unfolded folded chaintree chaintree chaintree chaintree ctf le htb jb table average running times msec 
chaintree chaintree step 

