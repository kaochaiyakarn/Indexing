skipnet scalable overlay network practical locality properties nicholas harvey michael jones stefan saroiu marvin theimer alec wolman scalable overlay networks chord pastry tapestry emerged flexible infrastructure building large peer peer systems 
practice disadvantages systems difficult control data stored difficult guarantee routing paths remain administrative domain 
skipnet scalable overlay network provides controlled data placement routing locality guarantees organizing data primarily lexicographic key ordering 
skipnet allows fine grained coarsegrained control data placement content placed pre determined node distributed uniformly nodes hierarchical naming subtree 
additional useful consequence skipnet locality properties partition failures entire organization disconnects rest system result disjoint connected overlay networks 
scalable overlay networks chord pastry tapestry emerged flexible infrastructure building large peer peer systems :10.1.1.140.3129:10.1.1.140.3129:10.1.1.1.4602:10.1.1.28.5987:10.1.1.15.9072:10.1.1.105.3673
key function networks enable distributed hash table dht allows data uniformly diffused participants peer peer system 
dhts provide nice load balancing properties price controlling data stored 
disadvantages data may stored far users may stored outside administrative domain belongs 
introduces skipnet scalable overlay network supports traditional overlay functionality including scalability load balancing locality properties refer content locality path locality 
content locality refers ability explicitly place data specific overlay nodes distribute nodes organization 
path locality refers ability guarantee message traffic microsoft research microsoft redmond wa theimer wolman microsoft com department computer science engineering university washington seattle wa cs washington edu overlay nodes organization routed organization 
content path locality provide number advantages data retrieval including improved availability performance manageability security 
example organization access update important data disconnected rest internet 
similarly data needed autonomous activities campus building stored locally preserve autonomy 
data stored near clients performance manageability enhanced 
explicit content placement specific overlay node enables provisioning node reflect anticipated popularity 
similarly content placement ensures administrative control issues scheduling maintenance machines storing important data 
content locality allows control administrative domain data resides 
encrypted digitally signed data stored arbitrary overlay node foreign administrative domain susceptible denial service dos attacks traffic analysis 
techniques making current dht schemes resilient dos attacks exist clear participating organizations feel comfortable storing important data machines outside direct control :10.1.1.118.1870
controlling content placement direct tension goal dht uniformly distribute data system automated fashion 
generalization combines notions constrained load balancing data uniformly distributed defined subset nodes system nodes single organization nodes residing building nodes residing data centers 
desired content locality achieved existing overlay networks forward traffic intermediary nodes arbitrary administrative domains 
overlay designs keep routing messages localized time guarantee path locality messages nodes organization routed organization :10.1.1.118.1870
example guarantee route explorer ford com ford com pass gm com scenario people ford com prefer prevent 
provision path locality important availability security reasons 
skipnet employs address spaces routing lexicographic space numeric space 
node names content identifier strings mapped directly lexicographic space hashes node names content identifiers mapped numeric space 
lexicographic space distributed generalization skip lists support content placement path locality efficient range queries :10.1.1.15.9072
numeric space support dht functionality efficient message routing overlay nodes 
combination spaces support constrained load balancing 
useful bonus skipnet locality properties resiliency common internet failures 
skipnet clusters nodes lexicographic name ordering names single organization survive failures disconnect organization rest internet 
case independent failures skipnet similar resiliency previous overlay networks :10.1.1.140.3129:10.1.1.105.3673
basic skipnet design including enhancements support constrained load balancing network proximity aware routing reduced overhead virtual nodes concurrently independently invented aspnes shah 
described section substantially different focus efforts viewed complementary starting underlying inspiration 
rest organized follows section describes related 
section describes skipnet basic design section discusses skipnet properties section presents enhancements basic design 
section discusses design alternatives skipnet section presents experimental evaluation section concludes 
related large number peer peer overlay network designs proposed making different trade offs respect system scalability security anonymity retrieval accuracy fault tolerance content availability 
focus building general purpose scalable fault tolerant overlay allows explicit control content availability placement 
consequence skipnet viewed alternative general purpose overlays chord pastry tapestry :10.1.1.140.3129:10.1.1.140.3129:10.1.1.1.4602:10.1.1.28.5987:10.1.1.15.9072:10.1.1.105.3673
key feature systems chord pastry tapestry afford scalable routing paths maintaining scalable amount routing state node 
scalable routing path mean expected number forwarding hops communicating nodes small respect total number nodes system 
chord pastry tapestry scale log system size maintaining log routing state overlay node 
scales dimensionality factor typical value maintaining amount node routing state proportional second key feature systems able route destination addresses equal address existing node 
message routed node address closest specified destination field message 
feature enables implement distributed hash table dht content stored overlay node node id closest result applying collision resistant hash function content name property 
distributed hash tables instance constructing past cfs distributed filesystems overlook scalable name service squirrel cooperative web cache scalable application level multicast :10.1.1.11.1973:10.1.1.159.9358:10.1.1.28.5987:10.1.1.1.4196
borrows ideas skip list data structure applying construct new kind scalable overlay network called skipnet :10.1.1.15.9072
borrow concepts chord pastry 
ideas derived skip lists enable skipnet support efficient range queries content placement path locality 
ideas taken chord pastry enable dht functionality efficient message routing overlay nodes 
combination ideas support constrained load balancing 
fundamental philosophy systems chord pastry diffuse content randomly overlay order obtain uniform peer peer behavior 
fundamental philosophy skipnet enable systems preserve useful content path locality enabling load balancing constrained subsets participating nodes 
observe locality properties important peer peer systems 
keleher main points dhts destroy locality discard useful application specific information :10.1.1.118.8846
vahdat raises locality issue 
problems addressed skip net 
names hashed identifiers order nodes overlay natural locality names objects preserved 
furthermore arranging content name order operations ranges names possible skipnet 
aspnes shah independently invented basic data structure defines skipnet 
focus primarily supporting queries key ordering describing precisely data structure maintained face concurrent random node joins departures failures 
contrast focused primarily content path locality properties design 
skipnet includes extensions basic design shares aspnes shah constrained load balancing supported combination searches lexicographic numeric address spaces 
network proximity aware routing obtained means auxiliary routing tables 
skipnet able support hosting virtual nodes single physical node substantially overhead existing overlays 
basic structure section introduce basic design skipnet 
skipnet architecture including route skipnet join leave skipnet 
skip lists skip list described pugh dictionary data structure typically stored memory :10.1.1.15.9072
skip list sorted linked list nodes supplemented pointers skip list elements 
perfect skip list height th node exponent largest divides depicts perfect skip list 
note pointers level length traverse nodes list 
perfect skip list supports searches log time 
prohibitively expensive perform insertions deletions perfect skip list pugh suggests probabilistic scheme determining node heights maintaining log searches high probability 
briefly node chooses height probability choosing height probability node height probability height forth 
depicts probabilistic skip list 
skipnet data structures skip lists memory data structure traversed want 
perfect skip list 

probabilistic skip list 
data structure links distributed computer nodes supports traversals may start node system 
furthermore peers uniform roles responsibilities peer peer system want state processing overhead nodes roughly 
contrast skip lists maintain variable number pointers data record consequently experience substantially different amount traversal traffic data record 
lexicographic address space key idea take skip lists notion maintaining sorted list data records pointers skip varying numbers records 
transform concept skip list distributed system setting replacing data records computer nodes string names nodes data record keys forming ring list 
ring doubly linked enable path locality explained section 
having nodes store variable number skip pointers node stores log pointers number nodes overlay system 
pointers level node routing table point nodes nodes left right node 
depicts skipnet containing nodes shows routing table pointers nodes maintain 
skipnet perfect skipnet pointers traverse exactly data records cases suffers insertion deletion overheads perfect skip lists 
derive probabilistic skipnet design observing pointers maintained level node routing table thought forming multiple rings nodes depicted 
shows routing table pointers overlay network arranged show node interconnections level node routing table 
nodes connected ring formed level routing table pointer node 
level table entries point nodes nodes lvl 
lexicographically ordered skipnet nodes 
routing tables nodes shown 
away divide overlay nodes disjoint sets 
similarly routing table entries level form disjoint rings nodes forth 
note rings level obtained splitting ring level disjoint sets ring containing second member level ring 
routing possible log forwarding hops rings level skip nodes 
achieve routing performance high probability long ring memberships include roughly th node ring level consider node wishes join skipnet 
join lowest level ring case 
matter level ring node joins long average half nodes join level ring 
node randomly decides level ring join procedure followed recursively higher level rings 
manner probabilistically ensure desired skip characteristics ring 
numeric address space illustrates important aspect skipnet ring membership node encoded means unique binary number 
bits number determines ring membership level example node memberships represented membership rings level determined bits designate ring 
node decide rings join randomly generating binary number refer node random id described advantages collision resistant hash md node dns name random id uniqueness numbers allows define second address space skipnet nodes :10.1.1.140.3129:10.1.1.105.3673
address space identical traditional overlays chord pastry enable provide dht functionality 
readers familiar chord may observed skipnet routing tables similar maintained chord 
fundamental difference 
skipnet routing tables point lexicographic space populated nodes string lvl ring ring ring ring ring ring ring ring ring ring ring ring ring ring level 
full skipnet routing infrastructure node system including ring labels 
names chord routing tables point numeric space populated unique hashes derived nodes string names 
chord obtains log routing node insertion properties relying hashing string names uniformly address space 
skipnet node string names spread uniformly lexicographic address space 
maintain efficiency skipnet defines secondary address space nodes uniformly dispersed 
duplicate pointer elimination node keeps pointer immediate predecessor successor ring 
result nodes may neighbors rings maintain duplicate pointers 
duplicate pointer add value routing table 
replacing suitable alternative neighbor relevant ring improve routing performance moderate amount typically 
routing table entries adjusted fashion route lexicographic search queries violate requirement node point closest neighbor ring 
lexicographic searching lexicographic searches skipnet basic principle searches skip lists follow pointers route closest intended destination 
node search message routed highest level pointer point past destination value 
routing terminates message arrives node lexicographic name closest destination 
illustrates algorithm 
nodes lexicographically ordered ring message forwarded past destination pointers followed lexicographically placed source destination 
lookup message originates node called node originates search node search string destid destid node destid destid node destid return node called intermediate hops search path node string destid check lies destination traversing ring clockwise destid return sendmessage destid endwhile destination return closest destination return destid 
skipnet lexicographic search algorithm clockwise 
name shares common prefix destination nodes traversed message names share prefix source destination 
note rings doubly linked scheme route right left pointers depending source name lexicographically smaller greater destination respectively 
key observation scheme lexicographic search routed nodes non decreasing prefix matches destination 
source name destination share common prefix search message routed direction right left pointers 
fairness sake randomly pick direction go nodes names middle alphabet get disproportionately larger share forwarding traffic nodes names near alphabet 
simplicity current implementation wraps vice versa 
expected number hops traversed search message log high probability 
rigorous complete proof see harvey :10.1.1.118.8846:10.1.1.17.1073
node join departure outlined section order join skip net newcomer find top level ring corresponds random id obtained hashing newly joining node name collision resistant hash function 
routing algorithm finds top level ring newcomer applies simple steps repeatedly 
node encountered skipnet determines highest level ring shared newcomer node 
traverses ring finds new node shares higher level ring newcomer 
procedure repeated newcomer finds node phase locates highest level ring contains newnode node second phase works way top level ring inserting ring height init phase upward insert phase upward nexthop nexthop phase complete sendmessage nexthop node newnode nexthop nexthop phase downward return return nexthop node nexthop newnode nexthop newnode return nexthop endwhile phase complete return null 
skipnet node insertion algorithm 
shares higher level ring 
described harvey finding top level ring takes log message steps complete high probability :10.1.1.118.8846:10.1.1.17.1073
top level ring newcomer joins lexicographic sequential search ring 
join complete new node uses neighbors search lower level ring lexicographic position join accordingly 
process repeated level newcomer joins level ring 
correctness existing nodes point newcomer new node joins level ring 
newcomer send messages neighbors ring indicate presence 
key observation algorithm efficiency newcomer joins ring certain level joining higher level ring 
result sequential lexicographic search ring joined typically traverse members ring 
range nodes traversed limited range newcomer neighbors higher level 
high probability node join skipnet traverse log hops proof see harvey :10.1.1.118.8846:10.1.1.17.1073
shows insertion algorithm upward refers phase newcomer finds top level ring join downward refers phase joins skipnet rings decreasing levels successively 
basic observation handling node departures skipnet route correctly long bottom level ring maintained 
pointers level ones regarded routing optimization hints necessary maintain routing protocol correctness 
chord pastry skip net maintains repairs rings memberships lazily means background repair process 
maintain bottom ring correctly skip net node maintains leaf set points additional nodes bottom ring 
current implementation leaf set size just pastry 
numeric searching skipnet implement dht functionality routing messages numeric address space 
routing numeric address space equivalent upward phase node joins newcomer searches ring particular random id consequently message routing cost numeric searches log :10.1.1.118.8846:10.1.1.17.1073
intuition skipnet support lexicographic numeric routing data structure illustrated 
skipnet skip lists nodes bottom ring sorted lexicographic ordering 
simultaneously skipnet ring structure forms trie random ids nodes ordered random ids top rings 
rings intermediate levels partially sorted lexicographic random ids 
useful locality properties skipnet previous section described data structure protocol implement skipnet 
section discuss useful locality properties skipnet able provide 
content routing path locality skipnet employs lexicographic searching allows control data placement 
incorporating peer address content name guarantees content hosted respective peer 
arbitrary naming conventions node addresses content names skipnet current implementation uses dns names 
user convenience reverses order dns names john microsoft com interpreted com microsoft john 
example document doc name stored john microsoft com naming john microsoft com doc name sufficient guarantee stored desired machine 
skipnet lexicographic ordering nodes enables guarantee routing locality described section 
example message originating john microsoft com jane microsoft com leave microsoft com assuming microsoft nodes may naming prefix 
constrained load balancing skipnet lexicographic space numeric space able provide constrained load balancing 
able support functionality multiple dhts differing scopes single overlay network 
substantially cheaper maintaining separate overlay network dht 
simpler overlay nodes need know dhts need belong scope node membership dht determined strictly choice data object names clients choose 
constrained load balancing clb involves dividing data object name parts part specifies set nodes dht load balancing performed part input dht hash function 
skipnet special character delimiter parts name 
example name msn com html indicates load balancing nodes names prefix msn com 
suffix html input load balancer hash function determines node data object ends 
clb implemented searching name prefix lexicographic space switching numeric space search hash name suffix 
search hash suffix constrained consider nodes name prefix data object name 
described section searches lexicographic numeric spaces take log message hops complete 
placing lexicographic name prefix constraint numeric address space search change performance characteristics 
numeric searches involve searching upward routing rings probability finding node ring enable upward progress independent lexicographic name prefix constraint independent random variable 
rings sorted ring members obey constraint contiguous efficiently traversed suitable node 
note traditional system wide dht semantics explicit content placement special cases constrained load balancing system wide dht semantics obtained placing hashing delimiter document name 
omission hashing delimiter plus choosing name data object prefix matches name particular overlay node result object placed overlay node 
constrained load balancing limitations 
performed naming subtree skip net arbitrary subset nodes overlay network 
respect flexibility similar hierarchical file system limitation domain load balancing encoded name data object 
transparent remapping different load balancing domain possible 
fault tolerance previous studies shown network connectivity failures internet today due primarily border gateway protocol bgp misconfigurations faults hardware software human failures 
result node failures overlay systems independent nodes belonging organization domain tend fail 
consequence focused design skipnet fault tolerance handle different scenarios independent failures failures occurring organizational boundaries 
independent failures chord key observation failure recovery maintaining correct neighbor pointers level ring ensure correct functioning overlay 
node maintains leaf set level neighbors level ring pointers repaired replacing leaf set entries point nearest live nodes failed node 
chord skipnet employs lazy stabilization mechanism gradually updates necessary routing table entries background reflect disappearance note stabilization period ongoing queries disrupted sub optimally routed 
failures organization boundaries previous peer peer overlay designs node placement overlay topology determined randomly chosen numeric id result nodes near terms network proximity placed uniformly address space overlay :10.1.1.140.3129:10.1.1.28.5987:10.1.1.105.3673
uniform distribution enables log routing performance overlay difficult predict effect physical link failures overlay network 
particular failure network link manifest multiple randomly scattered link failures overlay 
taken extreme possible node single organization lost connectivity internet disconnected entire overlay nodes organization 
skipnet preserves node locality overlay local failures fragment overlay result ring segment partitions 
consequently skipnet significant fraction routing table entries disconnected nodes point live nodes network partition 
property allows skipnet gracefully survive failures organization boundaries 
range queries skipnet design inspired skip lists inherits functionality flexibility supporting efficient range queries 
particular keys stored lexicographic order documents sharing common prefixes stored contiguous ring segments 
answering range queries skipnet equivalent routing corresponding ring segment 
current focus skipnet architecture locality properties discuss range queries 
skipnet enhancements section presents optimizations basic skipnet design 
efficient routing lexicographic space skipnet neighbors node determined random choice ring memberships ordering identifiers rings 
accordingly overlay constructed considering physical network topology potentially hurting routing performance latency 
deal problem introduce second routing table called proximity table table short 
tables inspired pastry routing tables :10.1.1.118.1870
described section skipnet node basic routing table entries expected point nodes exponentially increasing distances away 
table routing entry points node chosen ring segment endpoints defined consecutive basic routing table entries 
choice gives skipnet flexibility selecting routing entries physical network proximity 
pastry skipnet constantly tries improve quality table entries adjust node joins departures means background stabilization algorithm 
details skipnet table construction maintenance complexity characteristics routing guarantees contained harvey :10.1.1.118.8846:10.1.1.17.1073
efficient routing numeric space constrained load balancing skipnet supports search routing different spaces uses implement clb add third table optimizes searches numeric space table optimizes searches lexicographic space 
skipnet numeric space essentially equivalent random id space pastry third table similar functionality routing table pastry maintains 
clb searches entries proximity table violate clb search constraint 
case clb reverts basic routing table 
virtual nodes web hosting scenarios single machine multiple names 
skipnet supported allowing physical node run multiple skipnet virtual nodes 
modifications basic skipnet structure virtual node routing table log entries log entries required host virtual nodes 
periodic routing table maintenance traffic scalability bottleneck large 
key observation skipnet reduce overhead imposing disproportionate amounts physical node 
particular routing table state virtual nodes distributed manner similar probabilistic skip lists 
approach scales virtual nodes require log state constant factor increase search performance 
details see harvey :10.1.1.118.8846:10.1.1.17.1073
design alternatives locality properties provided skipnet obtained means suitable extensions existing overlay networks 
argue skipnet natural efficient manner 
section describe design alternatives skipnet compare skip net approach 
dht overlay networks depend random assignment node ids order obtain uniform dis tribution nodes address space 
support explicit content placement single data object may choose node id directly corresponds hash id data object 
order assign data object node virtualize overlay nodes node joins overlay data object 
disadvantage maintain separate routing table data object assigned physical overlay node 
employ part naming scheme skipnet data object names consist virtual node name followed node relative name 
virtual node name hashed obtain id select physical node place virtual node data 
physical node hosting data assigns hashed id joins overlay 
result dht route requests virtual node data objects 
cost approach prohibitive single node needs store data objects 
second approach essentially equivalent skipnet approach content placement node data object names translated numeric address space directly 
constrained load balancing achieved maintaining multiple overlay networks dht provided 
imposes cost terms routing table state complexity physical nodes maintain separate routing tables dht join 
furthermore new dht created load balance data set nodes nodes informed membership new overlay 
worse new members inherit burden associated maintaining routing tables new dht 
contrast skipnet able provide arbitrarily dhts single set routing tables node new dhts created simply having clients create appropriately structured data object names 
path locality added dht overlay ensuring specially marked local messages forwarded outside organizational boundary 
information exclude routing table entries violate routing constraint 
unfortunately approach guarantee path locality may path destination constraint applied 
furthermore path available may inefficient 
overlay networks pastry partially mitigate problem support network prox :10.1.1.118.1870
pastry network proximity support depends having nearby node seed node joining overlay 
nearby node organization joining node pastry able provide path locality 
furthermore problem exacerbated organizations consist multiple separate islands nodes far apart terms network distance 
contrast skipnet able guarantee path locality organizations consist separate clusters nodes 
naming approach suggested section simple alternative lexicographic searches clb searches skipnet overlay route directly ip dns lookup 
skipnet key advantages approach 
presence node failures overlay routing provides seamless reassignment traffic nearby nodes organization 
second higher level abstractions multicast load aware replication easy implement :10.1.1.11.1973:10.1.1.28.5987:10.1.1.1.4196
third dns failures impact data availability explicit name lookups 
experimental evaluation understand evaluate skipnet design performance simple packet level discrete event simulator counts number packets sent physical link assigns constant delay link :10.1.1.118.8846:10.1.1.17.1073
model queuing delay packet losses modeling prevent simulation large networks 
implemented overlay network designs pastry chord skipnet 
pastry implementation described rowstron druschel :10.1.1.28.5987
chord implementation available mit chord web site adapted operate simulator 
simulations run chord stabilization algorithm finger pointers need updating nodes joined 
different implementations skipnet basic implementation design section full implementation uses enhancements described section 
full skipnet run rounds stabilization table entries experiment 
experiments run mercator topology gt itm topology :10.1.1.22.6538:10.1.1.17.4065
mercator topology nodes links 
node assigned autonomous systems ass 
links ass topology 
figures shown section mercator topology 
experiments georgia tech topology produced similar results 
methodology measured performance characteristics lookups evaluation criteria relative delay penalty rdp ratio latency overlay network path nodes latency ip level path 
physical network hops absolute length overlay path nodes measured ip level hops 
number failed lookups number unsuccessful lookup requests presence failures 
model presence organizations overlay network participating node belongs single organization 
number organizations parameter experiment total number nodes overlay 
experiment total number client lookups twice number nodes overlay 
format names participating nodes org name node name 
format data object names org name node name random obj name 
assume owner particular data object name owner node name followed node local object name 
skipnet results data object placed owner node chord pastry object placed node corresponding md hash object name 
constrained load balancing experiments data object names include delimiter name organization 
model organization sizes ways uniform model zipf model 
zipf model size organization determined distribution governed normalized total number overlay nodes system 
zipf distributions mentioned section defined similar manner 
model kinds node locality uniform clustered zipf clustered 
uniform model nodes uniformly spread overlay 
clustered model nodes organization uniformly spread single randomly chosen autonomous system 
ensure selected th core router nodes overlay nodes 
zipf clustered place organizations ases 
nodes organization spread follows root physical node randomly placed mercator provide link latencies 
relative delay penalty rdp chord basic skipnet full skipnet pastry number nodes 
rdp function network size 
configuration organizations zipf sizes nodes data names zipf clustered 
chord basic skipnet full skipnet pastry table 
average number unique routing entries node overlay nodes 
overlay nodes placed relative root distances modeled zipf distribution 
data object names data placement modelled similarly 
uniform model data names generated randomly selecting organization random node organization 
clustered model data names generated selecting organization zipf distribution random member node organization 
zipf clustered data names generated randomly selecting organization zipf distribution selecting member node zipf distribution distance root node organization 
note chord pastry skipnet hashing spreads data objects uniformly overlay nodes models 
model locality data access specifying fraction data lookups forced request data local requestor organization 
model system behavior internet failures study document availability disconnected organization 
simulate domain isolation failing links connecting organization rest network 
experiment run different times different random seeds average values 
skipnet bit random identifiers leaf set size nodes 
pastry chord default configurations :10.1.1.28.5987
basic routing costs understand skipnet routing performance simulated overlay networks nodes ranges 
ran experiments physical network hops chord basic skipnet full skipnet pastry fraction forced local lookups 
absolute lookup request latency function data access locality percentage lookup requests forced single organization 
configuration nodes organizations zipf sizes nodes data names zipf clustered 
organizations permutations obtainable organization size distribution node placement data placement 
intent see rdp behaves various configurations 
especially curious see non uniform distribution data object names adversely affect performance skipnet lookups compared chord pastry 
presents measured implementations skipnet chord pastry configuration organization sizes node placement data placement governed zipf distributions 
table shows average number unique routing table entries node overlay nodes 
configurations including completely uniform ones exhibited similar results shown 
basic skipnet performs similarly chord full skipnet performs similarly pastry 
surprising basic skipnet chord support network proximity aware routing full skipnet pastry 
configurations produced similar results conclude skipnet performance adversely affected non uniform distributions names 
exploiting locality placement rdp measures performance relative routing 
skipnet key benefits enables localized placement data 
shows average number physical network hops lookup requests experiment configuration containing overlay nodes organizations organization size node placement data placement governed zipf distributions 
axis indicates fraction lookups forced local data data object names percentage failed lookups pastry chord basic skipnet full skipnet fraction forced local lookups 
number failed lookup requests function data access locality percentage lookup requests forced single organization disconnected organization 
configuration nodes organizations zipf sizes nodes data names zipf clustered 
looked organization requesting client 
axis shows number physical network hops lookup requests 
expected chord pastry oblivious locality data diffuse data overlay network 
hand versions skipnet show significant performance improvements locality data increases 
noted benefits gained skipnet mercator topology inter domain links cost intra domain links 
equivalent experiment run gt itm topology skip net lookup latencies factor pastry local lookups 
fault tolerance locality placement improves fault tolerance 
shows number lookup requests failed organization disconnected rest network 
common internet failure catastrophic consequences chord pastry 
size isolated organization experiment roughly total nodes system 
consequently chord pastry place roughly organization data nodes outside organization 
furthermore attempt route lookup requests overlay network nodes effectively failed disconnected organization point view 
level failures routing effectively impossible 
net result failed lookups ratio close 
contrast versions skipnet better locality lookups forced local skipnet fails access relative delay penalty rdp basic clb full clb pastry number nodes 
rdp lookups data constrained load balanced clb function network size 
configuration organizations zipf sizes nodes data names zipf clustered 
data non local organization 
percentage local lookups increased percentage failed lookups goes 
constrained load balancing explores routing performance different clb configurations compares performance pastry 
system lookup traffic organization local data 
organization sizes node data placement clustered zipf distribution 
basic clb configuration uses numeric routing described section full clb clb proximity table described section 
full clb curve shows significant performance improvement basic clb justifying cost maintaining extra routing state 
additional routing table full clb performance trails pastry performance 
key observation order mimic clb functionality traditional peer peer overlay network multiple routing tables required domain want load balance 
broadly acceptable application infrastructure peer peer systems need address basic requirements ability control data locality ability guarantee routing paths remain local administrative domain possible 
knowledge skipnet overlay network design achieves content routing path locality clustering peers organizing data lexicographic addresses names 
time skipnet similar performance guarantees peer peer systems requires logarithmic state node supports searches insertions deletions logarithmic time 
skipnet allows fine grained coarsegrained control data placement 
content placed specific participating peer incorporating peer address content name 
similarly skipnet allows content randomly uniformly distributed arbitrary node naming subtree defined document name 
lexicographic clustering peers addresses allows skipnet perform gracefully face realistic internet failures loss domain internet connectivity 
evaluation efforts demonstrated skip net similar performance behavior overlay networks chord pastry 
skewed node object placement distributions skip net maintains logarithmic performance behavior 
experiments illustrated benefits content routing path locality skipnet compared systems chord pastry 
plan deploy skipnet testbed cluster machines emulating wan order understand analyze behavior face dynamic host joins leaves flexibility infrastructure implementing scalable event notification service 
aspnes shah 
skip graphs 
submitted publication soda 
brown patterson 
embracing failure case recovery oriented computing roc 
high performance transaction processing symposium asilomar ca usa october 
cabrera jones theimer 
herald achieving global event notification service 
hotos viii may 
castro druschel ganesh rowstron wallach :10.1.1.118.1870
security peer peer routing overlays 
proc 
fifth symposium operating system design implementation osdi 
usenix december 
castro druschel hu rowstron :10.1.1.118.1870
topology aware routing structured peer peer overlay networks 
microsoft technical report msr tr 
www research microsoft com past location pdf 

chu rao zhang 
case system multicast 
acm sigmetrics pages santa clara ca june 
acm 
dabek kaashoek karger morris stoica :10.1.1.159.9358
wide area cooperative storage cfs 
th acm symposium operating systems principles oct 
fredkin 
trie memory 
communications acm sept 
harvey jones saroiu theimer wolman :10.1.1.118.8846:10.1.1.17.1073
skipnet scalable overlay network practical locality properties 
microsoft technical report 
msr tr preparation 
iyer rowstron druschel 
squirrel decentralized peer peer web cache 
proceedings st annual acm symposium principles distributed computing podc 
acm july 
kaashoek morris dabek stoica karger cox muthitacharoen 
chord project 
www pdos lcs mit edu chord 
keleher bhattacharjee :10.1.1.118.8846
virtualized overlay networks thing 
international workshop peer peer systems iptps march 
labovitz ahuja 
experimental study internet stability wide area backbone failures 
fault tolerant computing symposium ftcs june 
plaxton rajaraman richa 
accessing nearby copies replicated objects distributed environment 
proc 
th acm symp 
parallel algorithms architectures pages june 
pugh :10.1.1.15.9072
skip lists probabilistic alternative balanced trees 
workshop algorithms data structures pages 
ratnasamy francis handley karp shenker :10.1.1.140.3129:10.1.1.1.4602
scalable content addressable network 
proc 
acm sigcomm aug 
ratnasamy handley karp shenker 
application level multicast content addressable networks 
proceedings third international workshop networked group communication nov 
rowstron druschel :10.1.1.28.5987
pastry scalable distributed object location routing large scale peer peer systems 
international conference distributed systems platforms middleware nov 
rowstron druschel 
storage management caching past large scale persistent peer peer storage utility 
th acm symposium operating systems principles oct 
rowstron :10.1.1.15.9072
kermarrec castro druschel 
scribe design large scale event notification infrastructure 
third international workshop networked group communications nov 
stoica morris karger kaashoek balakrishnan :10.1.1.140.3129:10.1.1.105.3673
chord scalable peer peer lookup service internet applications 
proceedings acm sigcomm conference san diego california august 
tangmunarunkit govindan shenker estrin :10.1.1.17.4065
impact routing policy internet paths 
info com pages april 
theimer jones :10.1.1.28.5987
overlook scalable name service overlay network 
proceedings nd international conference distributed computing systems icdcs 
ieee computer society july 
vahdat chase rodriguez 
self organizing subsets abilities needs 
international workshop peer peer systems iptps march 
zegura calvert bhattacharjee :10.1.1.22.6538
model internetwork 
proceedings ieee infocom april 
zhao kubiatowicz joseph :10.1.1.15.9072
tapestry infrastructure fault resilient wide area location routing 
technical report ucb csd berkeley april 
