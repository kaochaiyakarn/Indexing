decomposable negation normal form adnan darwiche university california los angeles los angeles california 
knowledge compilation emerging new direction research dealing computational intractability general propositional reasoning 
approach reasoning process split phases line compilation phase online query answering phase 
line phase propositional theory compiled target language typically tractable 
line phase compiled target efficiently answer potentially exponential number queries 
main motivation knowledge compilation push computational overhead possible offline phase order amortize overhead line queries 
motivation compilation produce simple line reasoning systems embedded primitive computational platforms consumer electronics 
key aspects compilation approach target language propositional theory compiled 
previous target languages included horn theories prime implicates implicants ordered binary decision diagrams obdds 
propose new target compilation language known decomposable negation normal form dnnf number properties interest broad community 
specifically show dnnf universal supports rich set polynomial time logical operations space efficient obdds simple far structure algorithms concerned 
algorithm converting propositional theory clausal form dnnf show clausal form bounded treewidth dnnf compilation linear size computed linear time treewidth graph theoretic parameter measures connectivity clausal form 
propose techniques approximating dnnf compilation theory size compilation large practical 
techniques generates sound incomplete compilation generates complete unsound compilation 
approximations bound exact compilation terms ability answer clausal entailment queries 
show class polynomial time dnnf operations rich support relatively complex ai applications proposing specific framework compiling model diagnosis systems 
categories subject descriptors symbolic algebraic manipulation general artificial intelligence applications expert systems artificial intelligence deduction theorem proving artificial intelligence knowledge representation formalisms methods general terms algorithms languages additional key words phrases boolean functions knowledge compilation model diagnosis propositional logic satisfiability partially supported national science foundation nsf research iis 
author address computer science department university california los angeles los angeles ca mail darwiche cs ucla edu 
permission digital hard copy part personal classroom granted fee provided copies distributed profit commercial advantage copyright notice title publication date appear notice copying permission association computing machinery acm copy republish post servers redistribute lists requires prior specific permission fee 
acm journal acm vol 
july pp 

decomposable negation normal form 
knowledge compilation emerging new direction research dealing computational intractability general propositional reasoning 
accordance approach reasoning process split phases line compilation phase line query answering phase 
line phase propositional theory compiled target language typically tractable 
line phase compiled target efficiently answer potentially exponential number queries 
main motivation knowledge compilation push computational overhead possible line phase order amortize overhead line queries 
motivation compilation produce simple line reasoning systems embedded cost effectively primitive computational platforms consumer electronics 
key aspects compilation approach target language propositional theory compiled 
previous compilation approaches proposed horn theories prime implicates implicants ordered binary decision diagrams obdds targets compilation 
horn theories prime implicates implicants quite influential ai obdds quite influential hardware verification community 
target language typically evaluated dimensions universality accommodate propositional theory degree tractability class logical operations supports polynomial time space efficiency size smallest formula target language needed represent propositional theory 
existing target languages viewed point dimensional structure proving suitable certain applications 
focus relatively new compilation target language known decomposable negation normal form dnnf introduced characterizing consistency diagnoses darwiche :10.1.1.114.5764
dnnf universal supports rich set polynomial time logical operations space efficient obdds simple far structure algorithms concerned 
dnnf represents new interesting point dimensional structure universality tractability space efficiency 
key characteristic dnnf rich class polynomial time logical operations supports sufficient implement relatively complex ai applications model 
space efficiency dnnf establishes significant bottom line effectiveness dnnf compilations current success obdd community compiling quite complex propositional theories 
see example marquis selman kautz cadoli donini khardon roth del val 
see example de kleer forbus de kleer marquis selman kautz cadoli donini del val khardon roth bryant 
focus previous compilation approaches logical deduction logical operations needed support form reasoning cadoli donini see del val exceptions :10.1.1.45.6114
adnan darwiche initial investigation dnnf context model diagnosis characterize consistency diagnoses 
specifically shown device model expressed structured system description darwiche corresponding device observation compute dnnf completely characterizes device health light observation :10.1.1.114.5764
set tractable operations applied resulting dnnf answer variety diagnostic queries respect observation 
operations known intractable applied general propositional theories shown tractable applied constructed dnnf representation 
addition able formally bound time space complexity constructing dnnf characterizations health showing polynomial time complexity certain class device structures darwiche :10.1.1.114.5764
closer examination utility dnnf independent model diagnosis represents new tractable form propositional theories target compilation language variety reasoning applications including limited model diagnosis darwiche :10.1.1.114.5764
specifically dnnf supported number tractable operations identified darwiche darwiche represent building blocks answering variety queries arising automated reasoning applications 
reasoning application reduced combination operations compiled system consisting simple components dnnf represents application knowledge base dnnf evaluator implements necessary dnnf operations application 
generality operations motivated develop new algorithm converts general propositional theories conjunctive normal form cnf equivalent decomposable negation normal form dnnf 
study dnnf general target compilation language led elegant practical framework compiling model diagnostic systems 
specifically previous proposal darwiche compute dnnf diagnostic query framework computes line single dnnf device model uses line answer multiple diagnostic queries 
structural simplicity dnnf algorithmic simplicity operations leads diagnosis framework allows efficient cost effective implementations variety primitive software hardware platforms 
structured follows introduce section decomposable negation normal form corresponding set tractable operations 
section algorithm compiling propositional theory cnf dnnf provide formal bounds time space complexity 
approximation scheme generating approximate case exact algorithm proves impractical certain situations 
section dedicated see example darwiche hamscher reiter de kleer 
algorithm darwiche operates structured system description computes dnnf characterizes state system health light observation system behavior 
decomposable negation normal form fig 

negation normal form nnf represented rooted dag 
relationship obdds linear time transformation obdds show generally efficient representation obdds 
turn section major application show model diagnosis system device compiled simple components dnnf representing device model dnnf evaluator answering diagnostic queries device observation 
close concluding remarks section 
proofs theorems delegated appendix 
dnnf operations propositional sentence negation normal form nnf constructed literals conjoin operators barwise 
practical representation nnf sentences terms rooted directed acyclic graphs dags leaf node dag labeled literal true false nonleaf internal node labeled conjunction disjunction 
depicts rooted dag representation nnf children node shown graph adopt convention eliminating need show directionality edges 
size dag representation nnf measured number edges dag 
complexity results dag representation 
note disjunctive normal form dnf nnf conjunctive normal form cnf nnf 
cnfs 
concern mainly subclass nnf definition 
decomposable negation normal form dnnf negation normal form satisfying decomposability property conjunction nin form atom shared conjuncts atoms atoms nnf decomposable 
conjunctions conjuncts share atoms 
decomposability property dnnf tractable 
negation normal form referred positive normal form 
implies prime implicate implicant representations strict subclass nnf 
adnan darwiche explore property length note dnf dnnf 
properties shall prove dnnf hold dnf 
question may arise compile propositional theories dnf 
turns propositional theories linear dnnf representations exponential dnf representations 
example consider propositional theory atoms satisfied exactly models odd number atoms set true represents odd parity function 
dnf representation theory known exponential theory dnnf representation linear depicts representation 
dnnf highly tractable representation deciding satisfiability dnnf done linear time 
conjoining dnnf set literals done linear time 
projecting dnnf atoms done linear time 
intuitively project theory set atoms compute strongest sentence entailed theory atoms 
computing minimum cardinality dnnf done linear time 
cardinality model number atoms set false true model 
minimum cardinality theory minimum cardinality models 
minimizing smooth dnnf done linear time 
minimize theory produce theory models exactly minimum cardinality models original theory 
enumerating models smooth dnnf done time linear size quadratic number models 
smoothness property introduced darwiche definition 
negation normal form smooth iff disjunction form atoms atoms smoothness simplifies statement dnnf operations quite easy ensure 
dnnf smoothed nm time dnnf size number atoms contains darwiche 
smooth denote result smoothing dnnf 
tractable form dnnf distinguished tractability respect wide range operations include limited satisfiability testing 
operations necessary certain applications model diagnosis shall see 
note operations transform dnnf dnnf operations simply return information corresponding dnnf 
discuss operations details 
operations minimum cardinality enumeration introduced context model diagnosis implicit version assume dnf atoms shared literals argument applies prime implicant representations special case dnf representations 
decomposable negation normal form minimization darwiche :10.1.1.114.5764
sake generality completeness discuss known tractable dnnf operations general propositional setting independent particular application 

literal conjoin conditioning 
section fundamental operations dnnf operations conditioning literal conjoin 
need preliminaries 
set atomic propositions atoms pn ana sentence propositional sentence constructed atoms constants true false conjunction disjunction negation operators 
literal positive literal pi negative literal pi atom pi sentence literal mean sentence literal constructed atoms ana clause disjunction ln li pi pi 
ana instantiation conjunction ln li pi pi 
clause false instantiation true 
say clause mean clause say instantiation mean instantiation atoms clause valid instantiation inconsistent 
clausal form finite set clauses 
theory set sentences 
refer clausal form theory sentence mean propositional sentence resulting conjoining members clausal form theory 
atoms denotes set atoms appearing propositional sentence 
operation literal conjoin takes dnnf instantiation returns dnnf equivalent 
note may dnnf may dnnf may share atoms 
achieved operation conditioning darwiche incorporates information captured instantiation information captured dnnf :10.1.1.114.5764
definition 
propositional sentence instantiation 
conditioning denoted propositional sentence obtained replacing literal true false consistent inconsistent instantiation 
example conditioning dnnf instantiation gives false true conditioning gives true false 
important properties conditioning theorem 
propositional sentences 
sentence entails sentence equivalent equivalent 
adnan darwiche conditioning sentence set literals generating sentence atoms equivalent far atoms concerned 
lemma appendix provides semantics operation conditioning 
proposition 
dnnf language closed conditioning disjunction closed conjunction negation 
leads implementation literal conjoin operation theorem 
dnnf instantiation 
dnnf equivalent 
conjoin def clear conditioning dnnf instantiation done time linear size 
operations conditioning literal conjoin fundamental dnnf applications shall see 

satisfiability entailment 
turn linear dnnf operations testing satisfiability entailment lead large class applications dnnf compilations 
start linear test deciding satisfiability 
definition 
nnf predicate sat defined follows sat def true literal true false false 
sat def true iff sat true 
sat def true iff sat true clear predicate sat evaluated time linear size nnf 
previous satisfiability test sound complete dnnf theorem 
dnnf satisfiable iff sat true 
satisfiability test define entailment test 
specifically test dnnf entails clause need test satisfiable 
note may dnnf conjunction guaranteed dnnf 
literal conjoin operation case test conjoin satisfiable linear time instantiation equivalent 
turns operation conditioning suffices purpose 
decomposable negation normal form fig 

dnnf resulted conditioning dnnf instantiation dnnf evaluated definition showing sat 
theorem 
propositional sentence instantiation satisfiable iff satisfiable 
test dnnf entails clause need test satisfiable guaranteed dnnf 
define linear entailment test dnnf 
generally define nnf definition 
nnf clause define true sat false instantiation equivalent 
linear test sound complete theorem 
dnnf clause iff consider dnnf clause suppose want test theorem suggests condition yield test sat false 
depicts conditioning result applying sat 
test 
sat false conclude close section important results dnnf entailment play role generating approximate 
entailment test sound respect sentences nnf theorem 
nnf may decomposable entailment test sound complete 
completeness test guaranteed condition definition 
nnf decomposable atoms iff conjunction appears atom shared conjuncts belongs atoms atoms example nnf decomposable theorem 
nnf decomposable atoms clause mentions atoms iff adnan darwiche may decomposable entailment test guaranteed sound complete certain class queries 
consider nnf queries decomposable test sound complete respect queries sound respect third query 
partial decomposability extremely important practice decomposable sentence smaller size tend 
diagnosis applications example possible know atoms appear queries atoms called observables 
case suffices generate dnnf decomposable observables possibly leading significant savings dnnf size 
result theorem 
nnf decomposable atoms clause iff clause atoms 
number atoms bounded constant decided linear time query decomposable 
formally define spectrum decomposability measured number shared atoms complexity reasoning increasing exponentially size set 

projection 
turn key operation dnnf projection 
intuitively project theory set atoms compute strongest sentence implied atoms 
notion dual forgetting introduced lin reiter corresponds notion consequence discussed darwiche darwiche darwiche ginsberg :10.1.1.114.5764
formal definition projection definition 
projection propositional sentence set atoms sentence satisfies properties sentence 
sentence iff note projection sentence set atoms unique logical equivalence 
lemma appendix provides semantics projection operation 
turns theory converted dnnf projecting set atoms achieved linear time definition 
dnnf atoms project defined follows project def true literal literal true false 
project def project 
project def project 
project simply result replacing literal true 
decomposable negation normal form fig 

propositional sentence dnnf 
fig 

projecting dnnf set atoms 
theorem shows linear time operation correspond projection theorem 
dnnf set atoms 
project dnnf 
project projection atoms definition 
consider dnnf equivalent theory 
projecting dnnf atoms gives dnnf easily simplified 
replace literals true 
projection major applications know certain atoms appear queries compile propositional theory projection 
specifically atoms theory atoms appear queries compile atoms projecting theory atoms adnan darwiche fig 

odd parity circuit 
resulting theory original far answering queries interest case 
certain applications planning diagnosis set atoms want collect specific information example find instantiation atoms consistent theory 
planning set atoms represent action fluents diagnosis represent fault variables 
step collecting necessary information set atoms project theory set 
discuss application projection model diagnosis section 
consider circuit implements odd parity function theory representing circuit 
compile dnnf project atoms obtain dnnf representation boolean function 
technique compile circuit representation boolean function dnnf representation 
aside role compilation propositional theories dnnf constitutes representation boolean functions similar cnfs obdds bryant :10.1.1.1.5124
question arises regarding relation representation previous ones 
connection dnnf cnfs addressed section connection obdds addressed section 

computing minimum cardinalities 
consider property propositional theories call minimum cardinality 
definition 
satisfiable propositional sentence card number atoms set false truth assignment 
minimum cardinality defined min card 
minimum cardinality unsatisfiable sentence defined 
look models satisfying truth assignments sentence compute cardinality models return minimum cardinalities 
minimum cardinality theory concrete meaning certain applications 
example model diagnosis compute smallest number faults conceivable system observation 
planning applications compute smallest number actions needed establish certain goal 
decomposable negation normal form fig 

computing minimum cardinality 
consider dnnf models ok true false ok false true ok false false cardinalities respectively 
minimum cardinality dnnf 
represent model set assignments atom true false 
computing minimum cardinality dnnf done linear time darwiche definition :10.1.1.114.5764
dnnf defined follows positive literal true negative literal false 
mini 

theorem 
minimum cardinality dnnf definition 
cases straightforward possibly requires decomposability 
illustrates minimum cardinality computation 

minimizing 
turn tractable transformation dnnf main applications diagnosis planning nonmonotonic reasoning 
definition 
propositional sentence 
minimization sentence truth assignment atoms wehave iff card 
models minimized sentence exactly models assuming models defined atoms 
operation minimization key applications planning allows characterize set plans having smallest number actions model diagnosis allows characterize diagnoses smallest number faults 
minimizing smooth dnnf done linear time adnan darwiche definition 
smooth dnnf define minimize follows minimize def literal true false 
minimize def minimize 
minimize def 
theorem 
smooth dnnf 
minimize smooth dnnf 
minimize minimization definition 
note applying minimize affects nodes leaves nodes leaf nodes intact 
nodes affected follows minimum cardinality node definition equal child node child disconnected node 

enumerating models 
turn tractable operation dnnf shall discuss enumerating models models 
combined operation minimization model enumeration allows generate minimal action plans planning applications minimal fault diagnoses model diagnosis applications 
definition 
smooth dnnf models defined follows true false models positive literal negative literal true false 
models 
models models 
theorem 
smooth dnnf truth assignment atoms 
iff models 
complexity enumerating models smooth dnnf mn size models darwiche :10.1.1.114.5764
number models small viewed constant case interested enumerating models enumeration process takes linear time dnnf size 
close section summarizing tractable transformations queries defined dnnf 
defined tractable transformations conditioning literal conjoin projection minimization 
transformations modifies dnnf polynomial time yielding dnnf result 
defined tractable queries satisfiability minimum cardinality model enumeration 
queries returns valuable information dnnf leaving structure intact 
note defined transformations queries sentential dnnf easily phrased respect rooted dag representation dnnf maintaining linear time complexity 
decomposable negation normal form 
compiling propositional theories dnnf identified decomposable negation normal form previous section discussed number powerful tractable logical operations 
goal section fold 
prove propositional theory expressed dnnf 
second provide algorithm purpose formally bound time space complexity 
follow algorithm approximation algorithms allow reduce computational complexity dnnf generation expense compromising soundness completeness respect clausal entailment queries 

exact compilation 
dnnf universal representation propositional theories follows fact dnf subset dnnf 
theorem provides constructive proof universality 
theorem 
atoms atoms 
sentence 
dnnf equivalent 
recursive algorithm dnnf theorem converts clausal form equivalent dnnf contains single clause dnnf 
dnnf dnnf dnnf partition clauses instantiation atoms shared 
algorithm converts theory clausal form equivalent dnnf expense increasing theory size 
increase size comes mainly case analysis performed atoms shared subtheories 
consider clausal form 
dnnf dnnf dnnf dnnf dnnf simplifies 
key observations procedure 
size resulting dnnf sensitive way split theory subtheories 
second procedure deterministic specify split theory subtheories 
procedure deterministic utilize decomposition tree represents recursive partitioning clauses 
definition 
decomposition tree clausal form binary tree leaves correspond clauses 
leaf node corresponding clause def 
depicts decomposition tree theory contains clauses decomposition tree useful computationally need associate information nodes 
internal node tl tr denote left right children respectively def tl tr 
second condition clausal form condition clause 
adnan darwiche fig 

decomposition tree clausal form 
fig 

compiling clausal form dnnf 
atoms defined set atoms appearing clauses 
example contains clauses atoms contains atoms atoms defined set atoms associated leaf nodes subtree rooted example atoms atoms 
decomposition tree clausal form depicts algorithm compiles dnnf 
theorem 
call dnnf returns dnnf equivalent 
convert clausal form dnnf construct decomposition tree call dnnf true root tree important observation dnnf theorem 
instantiations agree atoms dnnf equivalent dnnf 
improve dnnf associating cache node store result dnnf indexed subset instantiation pertaining atoms denoted atoms 
recursive call dnnf check cache node see entry atoms 
return 
continue recursion 
improvement leads refined algorithm 
address complexity dnnf 
decomposable negation normal form fig 

compiling theory dnnf 
definition 
node decomposition tree cluster node defined follows leaf node cluster atoms 
internal node cluster atoms atoms atoms tl atoms tr 
width decomposition tree size maximal cluster minus 
cluster cluster cluster cluster cluster 
decomposition tree width 
theorem 
decomposition tree clausal form width number clauses 
call dnnf true root tree takes nw time space 
complexity compiling propositional theory dnnf depends crucially quality width decomposition tree 
question construct decomposition trees ones small width 
ordering atoms clausal form describe simple algorithm constructing decomposition tree 
provide upper bound width constructed decomposition tree 
algorithm 
start creating binary tree containing single node clause associate 
iterate atoms order 
considering atom combine arbitrarily existing binary trees contain single binary tree 
having processed atoms combine remaining trees single tree return 
proposed decomposition trees driving inference bayesian networks darwiche decomposition tree defined bayesian network equipped notion width 
adnan darwiche fig 

constructing decomposition tree clausal form 
bound width decomposition trees algorithm el dt constructs need definition 
definition dechter rish 
propositional theory clausal form 
interaction graph undirected graph constructed follows 
nodes atoms 
edge atoms iff atoms appear clause 
undirected graph ordering nodes define treewidth ordering respect known induced width respect dechter dechter rish :10.1.1.40.1018
definition 
undirected graph ordering nodes eliminate node pairwise connect neighbors remove treewidth ordering respect graph determined follows nodes eliminated ordering treewidth maximum number neighbors node just eliminated 
guarantee theorem 
clausal form interaction graph ordering nodes atoms treewidth ordering respect graph call el dt returns decomposition tree width prove theorem direct reader similar proof darwiche 
treewidth best ordering graph smallest treewidth known treewidth treewidth graph bounded constant construct optimal ordering graph see example arnborg arnborg robertson seymour bodlaender known induced width dechter dechter rish :10.1.1.40.1018
decomposable negation normal form linear time bodlaender :10.1.1.40.1018
major implication result clausal form interaction graph bounded treewidth computing optimal decomposition tree theory compiling theory computed decomposition tree done linear time 
stress interaction graph theory may bounded treewidth theory may polynomial compilation dnnf 
consider theory pn rn pn 
interaction graph theory treewidth dnnf compilation size shown 
theory just considered equivalent horn theory 
fact horn approximation known exponential selman kautz :10.1.1.100.2077
shows theories exponential horn approximations polynomial dnnf representations 
close section observing complexity algorithm depends interaction graph theory depend logical content 
clearly optimal certain cases seen logical content theory may play crucial role determining dnnf size 
explicit algorithms utilize logical content theory subject current research outside scope 
results section viewed providing implicit class algorithms obtained algorithms constructing obdds 

approximate compilation 
theory best decomposition tree unacceptable width 
key choices address problem 
try improve algorithm dnnf 
second try generate approximate compilation direction shall section 
consider algorithm dnnf 
clear reason possible intractability algorithm size def atoms tl atoms tr atoms contains atoms shared subtheories tl tr 
specifically algorithm consider number instantiations exponential size 
control size resulting compilation reducing number instantiations considered 
ways ignoring atoms 
ignore atoms performing case analysis subset 
consider instantiations subset 
leads variation algorithm dnnf call 
ignoring instantiations 
ignore instantiations 
consider instantiations 
leads variation algorithm dnnf call 
case control size resulting compilation degree wish 
fact technique ensure linear time compilation construction algorithm practical small constant factor super exponential theory renamable horn del val personal communication 
modify slightly longer renamable horn affecting polynomial size dnnf representation 
adnan darwiche decide ignore atoms instantiations 
leaves questions 
atoms instantiations ignore 
second guarantee resulting compilations 
choice atoms instantiations ignore typically heuristic addressed 
address second question 
theorem 
nnf equivalent dnnf 
ignoring atoms preserves equivalence exact compilation compromises decomposability property 
atoms ignore decomposable approximation cases compilation generated sound necessarily complete respect entailment queries 
corollary 
dnnf 
guarantee second approximation theorem 
dnnf dnnf 
ignoring instantiations preserves decomposability property lead strengthening compilation 
instantiations ignore stronger approximate compilation cases compilation generated complete necessarily sound respect entailment 
corollary 
dnnf 
size dnnf compilation large replace approximations entailment query test 
possibilities 
approximations answer query 
note case impossible 
bounds inspired lower upper horn approximations proposed selman kautz 
previous approach bounds crucial theory horn representation 
case approximations meant address intractability compilation approach continue meaningful 

relationship bdds decomposable negation normal form dag representation constitute representation boolean functions similar cnfs bdds binary decision diagrams bryant :10.1.1.1.5124
question arises regarding relationship representation previous ones 
connection dnnf cnfs addressed section concentrate section connection bdds 
key results section obdd generally fbdd translated equivalent dag dnnf linear time 
boolean functions admit polynomial dnnf representations admit exponential representations 
results clearly significant implication scalability dnnf compilations decomposable negation normal form successful algorithm compiling immediately successful algorithm compiling reasonable expect algorithms dnnf compilations scale better corresponding algorithms obdds 
start formal definitions bdds obdds 
definition 
binary decision diagram bdd set binary variables xn directed acyclic graph root leaves labeled 
nonleaf node labeled variable var outgoing edges labeled low high denote nodes pointed edges respectively 
computation path input ai defined follows starts root 
inner node var xi moves node low node high 
bdd represents boolean function computation path input leads leaf node labeled 
size bdd measured number nodes contains 
definition 
binary decision diagram called free bdd computation path variable tested 
free bdd called ordered bdd obdd computation path variables tested order 
obdds constitute strict subclass classes known separated hidden weighted bit function bryant :10.1.1.119.326
specifically function known exponential representation obdds regardless variable ordering polynomial representation wegener :10.1.1.40.1018
obdds received consideration verification literature test equivalence specification boolean function circuit implementation 
obdds permit test performed polynomial time quite popular regard 
permit satisfiability tested linear time similar 
turns boolean function represented fbdd size represented dag dnnf size theorem 
fbdd size represents boolean function fbdd converted time dag dnnf represents function depicts recursive algorithm converting fbdd dag dnnf 
depicts obdd corresponding dnnf generated algorithm 
representation boolean functions dnnf representation turns space efficient fbdd representation theorem 
exists boolean function polynomial fbdd representation polynomial dnnf representation 
function wegener shown exponential fbdd representation polynomial dnf representation 
adnan darwiche fig 

converting fbdd dag dnnf 
fig 

obdd corresponding dnnf equivalent 
internal obdd node outgoing edges transformed dnnf nodes edges 
dnf dnnf theorem follows immediately 
note theorem require dag representation dnnf sentential 
question arises dnnf space efficient representations obdds solving verification problem 
turns representational win achieves moving obdds comes computational expense 
particular testing equivalence achieved polynomial time 
realize special case testing equivalence known npcomplete 
obtains compact representation loses ability test equivalence polynomial time 
ability obdds interesting verification community 
decomposable negation normal form fig 

architecture model diagnosis system 
note testing equivalence important verification crucial ai applications 
illustrated earlier support number key operations polynomial time satisfiability minimum cardinality projection 
operations viewed operations key ai applications model diagnosis discuss 
appears demands imposed verification applications stricter imposed ai applications tractable operations appear sufficient 

application model diagnosis compiling devices goal section apply dnnf theory developed previous sections problem compiling model diagnosis systems 
start model diagnosis need compilation follow sections discuss concrete compilation example diagnostic compiler corresponding diagnostic evaluator computational complexity compilation 

model diagnosis 
field model diagnosis concerned automatic derivation system diagnostics formal system models hamscher 
diagnose system develops system model feeds diagnostic engine processes model provide answers various diagnostic queries shown 
initial research model diagnosis concentrated modeling devices semantics diagnostic queries algorithms answering queries 
new direction research model diagnosis emerged diagnostic process refined 
operating directly system model compute answers diagnostic queries compiles model intermediate representation query schema 
diagnostic queries answered operating directly compiled representation 
main motivation compilation process divide computational phases line line 
line phase uses adnan darwiche fig 

architecture model approach compiling devices 
diagnostic compiler generate compiled representation device 
online phase uses diagnostic evaluator answer multiple diagnostic queries compiled representation darwiche 
compilation scheme useful device compilation expected simple structure associated evaluator expected simple algorithmically low computational complexity size compiled representation 
main practical value compiling device enhancing efficiency line diagnostic system pushing computational overhead line phase reducing software hardware resources needed operate line diagnostic system simplifying line diagnostic system point implemented cost effectively primitive platforms limited resources 
factors line diagnostics feasible 
suppose example want embed diagnostic system vehicle 
adopt model architecture embed model associated algorithms vehicle quite demanding typical complexity model algorithms 
adopt compilation approach sketched need embed compiled model diagnostic evaluator assumed quite simple design 
accepted theory exists model diagnosis reiter de kleer theory exist compiling devices 
proposals compilation ad hoc techniques enhancing performance various model diagnosis systems 
exception decomposable negation normal form fig 

left device observables variables plan collect observations 
right compiled system description answer diagnostic queries collected observations 
compilation approach proposed de kleer forbus de kleer 
approach device modeled set propositional sentences compiled line phase computing prime implicates sentences constituting device model 
implicates generate line phase prime implicates corresponding device observation simply traversing device compilation 
resulting implicates called minimal conflicts model literature central answering diagnostic queries de kleer williams williams nayak 
approach marked elegance proven practical reasons 
computing conflicts step answering diagnostic queries remains seen steps accomplished linear time 
second approach provides formal guarantees time generate space store device compilation 
fact observed number prime implicates constituting device compilation tends impractically large real world devices forbus de kleer :10.1.1.40.1018
compilation approach addresses problems 
specifically propose compiling device model dnnf show various diagnostic queries answered dnnf operations take time polynomial size device compilation 
device represented classical system description set propositional sentences reiter de kleer refer compilation compiled system description csd 
example device compiled system description shown 
approach compiled system description evaluator simple allow efficient cost effective implementations variety software hardware platforms 
main practical value compilation technique synthesizing embeddable diagnostic systems may need operate stringent platforms operational constraints 

compilation example 
consider simple device shown input output circles enclosing declare variables observables device variables plan collect observations 
variables adnan darwiche total possible device observations components states device health ok ok ok ok number faults state respectively 
task compute states health consistent system model system observation include minimum number faults 
states called minimum cardinality diagnoses model literature formal definition section 
solve problem compilation approach proceed follows model device set propositional sentences clauses case ok ok pass items diagnostic compiler device model set observables compiler generate line phase dnnf shown 
sentence shall show sufficient answer queries form minimum number possible faults observation 
minimum cardinality diagnoses case 
example observation minimum number faults minimum cardinality diagnoses ok ok architecture proposed compilation approach shown 
system description set observables diagnostic compiler output compiled system description csd 
csd system observation csd evaluator invoked answer necessary diagnostic queries 
csd evaluator discussed section 
section discuss compiler generating 

diagnostic compiler 
rest system description triple set propositional sentences disjoint sets atoms appear called assumables observables respectively 
intuitively assumables atoms represent health components observables atoms plan measure truth values 
device ok ok decomposable negation normal form fig 

architecture proposed compilation approach 
ok 
atom observable 
system observation instantiation 
system observation said normal precisely consistent precisely observation consistent assumption device components healthy 
system observation abnormal needs compute diagnoses 
diagnosis system description observation instantiation consistent reiter de kleer 
cardinality diagnosis number negative literals contains 
denote set diagnoses diagnoses 
general diagnoses denote set instantiations consistent theory 
define partial system observation instantiation definitions normality diagnoses carry notion 
main objective diagnostic reasoning obtain information set diagnoses 
focus pieces information smallest number faults possible system having observed formally represented minimum cardinality diagnoses set diagnoses 
number zero observation guaranteed normal 
minimum cardinality diagnoses formally represented subset diagnoses diagnoses minimum cardinality 
intuitively correspond states device involve minimal number faults conceivable observed 
information heart model diagnosis applications 
goal section obtain information operating device compilation polynomial time 
ready provide formal definition device compilation adnan darwiche definition 
system description compiled system description denoted csd sentence satisfying properties csd smooth dnnf sentence iff csd compiled system description dnnf sentence encodes information system description contains assumables observables 
theorem shows compiled system description need compute set diagnoses answer necessary diagnostic queries theorem 
system description system observation 
diagnoses diagnoses csd 
fact obtain compiled system description simply compiling system description dnnf projecting result assumables observables smoothing result 
theorem 
system description dnnf representation 
smooth project compilation system 
compiling system description step process convert dnnf project assumables observables 
note projecting done time linear size 
critical computational step compilation system description dnnf 
discuss complexity compilation detail section 
successfully compiled system description answer various diagnostic queries applying tractable dnnf operations described section 

diagnostic evaluator 
assuming generated compiled system description focus section processing compilation polynomial time compute answers diagnostic queries 
compiled system description dnnf queries answered simply applying dnnf operations theorem 
system description corresponding compilation 
current system observation smallest number possible faults system 
models minimize correspond minimum cardinality diagnoses system 
simply applying operations conditioning minimization enumeration obtain answers key queries concern diagnostic reasoning 
close section considering classes observations fit definition system observation earlier 
specifically assumed set atoms called observables fixed compile time decomposable negation normal form system observation simply instantiation observables 
interesting situations may come practice partial observations value observable may known 
happens example losing sensor supposed report value observable 
disjunctive observations may unique partial observation set possible ones 
case quite easy handle suggested theorem generalizes theorem 
theorem 
system description corresponding compilation 
partial system observation project smallest number possible faults system 
models minimize project minimum cardinality diagnoses system 
apply extra projection set assumables conditioned partial system observation 
note instantiation project simply 
instantiation project obtained replacing literal mentions atom true 
disjunctive observations general case quite difficult observation may represent arbitrary propositional sentence 
case disjunctive observation equivalent disjunction small set instantiations apply approach instantiations combine results 
example set observables disjunctive observation cases cases handled approach 
smallest number faults observation minimum cardinalities obtained respect cases 
minimum cardinality diagnoses minimal cases 
long number cases small computational complexity approach remains 

complexity compiling devices 
key results earlier direct relevance scalability compilation approach 
structure guarantee basically says computational complexity compilation linear cnf compiled bounded treewidth 
second result says cnf compiled fbdd certain size compiled immediately dnnf equal size times constant factor 
elaborate results perspective compiling devices 
structure guarantee best viewed perspective device structure dag explicates connectivity device components see 
assuming device interconnected components component set input ports single output port device structure constructed follows adnan darwiche fig 

system structure corresponding moralization 
atom included input output port device connected ports represented atom directed edge extended input port output port component 
assume clauses specifying device model local device components measure complexity compiling device considering treewidth structure 
formally assume device model union component models set clauses satisfying conditions clauses mention input output ports component number assumables bounded constant assumables shared component models time space needed compile device model linear structure size exponential treewidth structure 
graph theoretic literature treewidth attributed undirected graphs extended directed graphs notion moralization 
specifically moral graph dag obtained adding undirected edge pair parents dag dropping directionality edges 
treewidth dag treewidth moral graph 
depicts moral graph dag representing device structure 
important classes graphs universal bound treewidth 
example trees forests treewidth greater 
singly connected dags ones directed cycles treewidth equal maximum number parents node 
series parallel graphs treewidth greater arnborg 
graphs treewidth known partial trees arnborg 
structure complexity results summarized follows 
device compiled structure bounded treewidth corresponding model linear sized compilation computed linear time 
example device bit adder structure follows conditions easily show connectivity graph clausal form treewidth device structure modula constant factor 
decomposable negation normal form table compiling bit adders 
bits 
nodes csd 
arcs csd treewidth independent table shows size compiled bit adders value increases illustrating size compilation grows linearly function table line system diagnosing bit adder needs include propositional sentence dnnf nodes arcs addition csd evaluator 
common wisdom literature structure reasoning calls stressing large treewidth necessarily mean system practically compilable 
means structure compilation algorithm effective 
quite possible compilation methods practical 
cite connection benchmark circuits proposed fujiwara known relatively impractical methods connected el dechter :10.1.1.40.1018
circuits successfully compiled obdds see bern example results section means circuits admit practical dnnf compilations 

approach compiling propositional theories tractable form known decomposable negation normal form dnnf characterized number important properties 
specifically dnnf universal supports rich set polynomial time operations space efficient simple far structure algorithms concerned 
key results propositional theories dnnf 
result time space complexity compiling theory dnnf exponential treewidth connectivity graph linear parameters 
second result complexity compiling propositional theories dnnf worse complexity compiling 
successful approach compiling theories immediately successful approach compiling 
algorithm approximating dnnf compilation provided formal guarantees quality answers returned approximations respect clausal entailment queries 
comprehensive application proposal problem compiling devices context model diagnosis 
compilation approach marked simplicity complexity guarantees line line phases 
specifically shown devices bounded treewidth compiled linear time compilations evaluated polynomial time answer variety diagnostic queries 
practically compilation approach implications adnan darwiche separating diagnostic computations line line phases computational overhead pushed line phase needs performed 
allows efficient implementations line diagnostic systems 
separation reduces software hardware demands line diagnostic system needs include compiled system description evaluator 
deployment model diagnostic systems cost effective 
important aspect compilation approach allows implement quickly real world diagnostic systems variety software hardware platforms darwiche 
develops single diagnostic compiler platform choice deploy line diagnostic systems software hardware platform dnnf evaluator available 
appendix proofs start supporting definitions 
definition 
world atoms truth assignment atoms mapping true false 
denote world satisfies entails sentence classical sense 
definition 
world set atoms 
projection world atoms denoted project set worlds agree world atoms write project mean set worlds agree atoms note project iff project 
project 
important lemma provides semantics operation conditioning lemma 
propositional sentence instantiation 
iff exists world project 
proof 
suppose 
definition conditioning 
project sentence truth depends value atoms project 
suppose 
mention atoms exist project 
definition conditioning 
project world proof theorem follows immediately literal replaced true false 
follows lemma definition projection atoms sentence 
decomposable negation normal form follows lemma definition projection atoms sentences 
follows directly lemma models depend models 
proof theorem 
dnnf follows dnnf proposition share atoms theorem 
equivalent follows lemma 
proof theorem 
sentences share atoms nis satisfiable conjunction satisfiable 
remaining cases follow directly 
proof theorem 
theorem satisfiable satisfiable 
suppose satisfiable 
lemma implies satisfiable 
proof theorem 
suppose 
definition sat false unsatisfiable theorem 
unsatisfiable theorem 
direction follows similarly 
lemma 
nnf satisfiable sat true 
proof 
induction structure nnf 
literal true false theorem follows directly 
conjunction suppose satisfiable 
satisfiable sat true induction hypothesis 
sat true 
disjunction suppose satisfiable 
satisfiable sat true induction hypothesis 
sat true 
proof theorem 
suppose 
definition sat false unsatisfiable lemma 
unsatisfiable theorem proof theorem 
decomposable decomposable mention atoms definition conditioning 
definition precisely sat false precisely unsatisfiable 
precisely unsatisfiable theorem precisely proof theorem 
note equivalent 
precisely precisely mentions atoms precisely adnan darwiche theorem 
precisely clause important lemma provides semantics operation projection 
lemma 
propositional sentence projection atoms iff exists world project 
proof 
note definition immediately simply 
recall project iff project 
suppose project 

sentence agrees atoms proves project 
prove direction suppose 
sentence project 
sentence models exactly project 

note project 
consistent done 
suppose inconsistent 

sentence definition projection 
leads contradictory consistent 
impossible inconsistent 
lemma shows conditioning special case projection 
lemma 
propositional sentence instantiation 
projection atoms 
proof 
follows lemmas 
proof theorem 
project dnnf follows fact dnnf project results replacing literal true 
shows project sentence 
show project projection atoms induction structure 
boundary case 
true false literal project logically equivalent 
definition project projection literal sentences entailed project true valid sentences 
definition project projection inductive step 
suppose project projection atoms suffices show cases projection atoms definition suffices show entail set sentences 
sentence 
iff iff project induction hypothesis iff 
projection atoms assuming share atoms 
suffices show logically equivalent projection atoms decomposable negation normal form suppose 
lemma world project world project induction hypothesis lemma project 

suppose project 
project induction hypothesis lemma exists project world agrees atoms agree atoms share atoms construct world agrees atoms entails exists world project lemma 
proof theorem 
proof follows induction nnf structure 
base case follows directly 
inductive steps conjunctions disjunctions 
conjunction case follows conjuncts share atoms minimum cardinality addition minimum cardinalities disjunction case follows directly minimum cardinality smallest minimum cardinalities proof theorem 
proof induction nnf structure 
base case follows directly 
inductive steps conjunctions disjunctions 
case conjunctions follows decomposability cardinality conjunction summation conjuncts cardinalities minimize conjunction simultaneously minimizing conjuncts 
case disjunctions minimize disjunction minimize disjunct keep minimized disjuncts generate models smallest cardinality 
smoothness ensures models disjunct set atoms 
proof theorem 
proof induction nnf structure 
base case follows directly 
inductive steps corresponding conjunctions disjunctions 
conjunctions case follows decomposability 
disjunctions case follows smoothness 
proof theorem 
atoms shared instantiation atoms wehave 
note mention atoms decomposable dnnf 
adnan darwiche proofs definitions apply nodes decomposition tree nonleaf node node cutset def atoms tl atoms tr atoms 
context def atoms atoms 
definitions lead cluster cutset context nonleaf node proof theorem 
prove soundness induction structure decomposition tree 
leaf node 
clearly dnnf returns 
clause dnnf 
nonleaf node 
suppose dnnf tl returns tl dnnf dnnf tr returns tr dnnf 
know tl tr 
know tl tr 
common atoms tl tr atoms tl atoms tr atoms 
instantiation atoms tl atoms tr atoms theorem gives tl tr tl tr dnnf 
induction hypothesis dnnf tl dnnf tr exactly returned algorithm 
properties conditioning proof 

second share atoms 
proof theorem 
theorem dnnf returns dnnf returns agree atoms equivalent definition conditioning dnnf equivalent dnnf 
lemma 
cache associated node dnnf context entries 
decomposable negation normal form proof 
calls dnnf dnnf instantiations disagree atoms atoms 
take subsets instantiations pertaining atoms subsets stored different cache entries disagree atoms atoms context 
context entries cache 
proof theorem 
note nonleaf node cluster cutset context means cutset context fact show cutset context 
cluster cutset context 
statement algorithm clear space time complexity equal 
function call dnnf return immediately doing constant amount recurse 
call recurses amount excluding done recursive calls cutset cutset number instantiations consider size instantiation 
number times algorithm recurse node rt total amount done algorithm rt cutset time call dnnf recurses entry added cache number entries cache exceed context lemma number times call dnnf recurse rt context 
total amount done algorithm context cutset cluster nw 
proof theorem 
nnf follows statement algorithm show equivalent dnnf induction structure decomposition tree 
leaf node result immediate 
suppose nonleaf node 
suppose tl dnnf tl tr dnnf tr 
tl tr dnnf tl dnnf tr tl tr tl tr tl tr adnan darwiche tl tr dnnf 
proof theorem 
dnnf follows dropping instantiations instantiation mentions atoms common tl tr 
show entails dnnf induction structure decomposition tree 
leaf result immediate 
nonleaf node suppose tl dnnf tl tr dnnf tr 
atoms appear atoms tl atoms tr atoms 
dnnf dnnf tl dnnf tr ranges instantiations atoms tl tr ranges instantiations atoms doing dropping disjuncts dnnf possibly strengthening remaining disjuncts induction hypothesis 
possibly strengthen sentence 
dnnf 
proof theorem 
need prove things call fbdd dnnf returns dnnf dnnf returns represents boolean function represented time space complexity 
time complexity follows call fbdd dnnf depth traversal dag rooted node recurses node performing constant amount adding constant number nodes edges constructed dnnf 
time space complexity algorithm number nodes dag rooted number edges 
node dag outgoing edges time space complexity algorithm proof properties follow induction structure fbdd rooted leaf node results follow immediately 
suppose nonleaf node var xi 
suppose fbdd dnnf low fbdd dnnf high return 
fbdd dnnf clearly nnf negations introduced variables 
suppose fbdd dnnf decomposable 
fbdd dnnf low fbdd dnnf high contain variable xi 
implies variables xi tested computation path contradiction 
fbdd dnnf dnnf 
decomposable negation normal form denote boolean function represented fbdd rooted node low high xi definition fbdd 
suppose fbdd dnnf low dnnf representation low fbdd dnnf high dnnf representation high 
answer returned fbdd dnnf fbdd dnnf low xi fbdd dnnf high xi representation boolean function 
proof theorem 
instantiation 
want show precisely csd 
suffices show precisely csd suffices show precisely csd 
sentence result follow directly part definition 
proof theorem 
follows immediately definitions csd projection theorem 
proof theorem 
falls special case theorem 
proof theorem 
show project project 
theorem equivalent dnnf 
definition project conjunction literals project project project project project 
smallest number possible faults minimum cardinality diagnoses set diagnoses instantiations consistent 
definition projection instantiations toone correspondence models project equivalent project shown 
smallest number possible faults project definition 
models project correspond diagnoses diagnoses definition minimize models minimize project correspond subset diagnoses having minimum cardinality 
acknowledgments 
rina dechter alvaro del val henry kautz judea pearl pierre marquis bart selman brian williams various helpful discussions comments earlier versions 
arnborg 
efficient algorithms combinatorial problems graphs bounded decomposability survey 
bit 
arnborg corneil 
complexity finding embeddings tree 
siam alg 
dis 
meth 

arnborg 
characterization recognition partial trees 
congr 
numer 

barwise ed 

handbook mathematical logic 
north holland amsterdam netherlands 
adnan darwiche fujiwara 
neutral netlist combinational benchmark circuits target translator fortran 
proceedings ieee symposium circuits systems 
www cbl ncsu edu www cbl docs iscas html 
bern 
boolean manipulation free bdds experimental results 
proceedings european design automation conference 
paris france 
ieee computer society press los alamitos calif pp 

bodlaender 
tourist guide treewidth 
acta cybernetica 
bodlaender 
linear time algorithm finding tree decompositions small treewidth 
siam comput 

wegener 
simple function requires exponential size read branching programs 
inf 
proc 
lett 

marquis 
tractable cover compilations 
proceedings international joint conference artifical intelligence ijcai 
morgan kaufmann san francisco calif pp 

bryant 
graph algorithms boolean function manipulation 
ieee trans 
comput 

bryant 
complexity vlsi implementations graph representations boolean functions application integer multiplication 
ieee trans 
comput 

bryant 
symbolic boolean manipulation ordered binary decision diagrams 
acm comput 
surv 

cadoli donini 
survey knowledge compilation 
ai commun 

darwiche 
symbolic generalization probability theory 
ph dissertation stanford univ stanford calif darwiche 
compiling devices structure approach 
proceedings international conference principles knowledge representation reasoning kr 
morgan kaufmann san francisco calif pp 

darwiche 
model diagnosis structured system descriptions 
art 
intell 
res 

darwiche 
compiling knowledge decomposable negation normal form 
proceedings international joint conference artificial intelligence ijcai 
morgan kaufmann san francisco calif pp 

darwiche 
model diagnosis real world constraints 
ai mag 

darwiche 
tractable counting theory models application belief revision truth maintenance 
appl 
non classi 

darwiche 
recursive conditioning 
artif 
intell 

darwiche ginsberg 
symbolic generalization probability theory 
proceedings th national conference artificial intelligence aaai 
aaai press menlo park calif pp 

de kleer 
compiling devices processes 
th international workshop qualitative physics lugano switzerland 
de kleer mackworth reiter 
characterizing diagnoses systems 
artif 
intell 

de kleer williams 
diagnosing multiple faults 
artif 
intell 

dechter 
constraint networks 
encyclopedia artificial intelligence shapiro ed wiley new york pp 

dechter rish 
directional resolution davis putnam procedure revisited 
proceedings international conference principles knowledge representation reasoning kr 
morgan kaufmann san mateo calif pp 

del val 
tractable databases propositional unit resolution complete compilation 
proceedings international conference principles knowledge representation reasoning kr 
morgan kaufmann san mateo calif pp 

del val 
tractable classes deduction abduction 
artif 
intel 

el dechter 
evaluation structural probabilistic reasoning results benchmark circuits 
proceedings th conference uncertainty artificial intelligence uai 
pp 

forbus de kleer 
building problem solvers 
mit press cambridge mass decomposable negation normal form 
efficient analysis manipulation obdds extended 
ieee trans 
compute 

hamscher console de kleer 
readings model diagnosis 
morgan kaufmann san mateo calif khardon roth 
learning reason 
acm sept 
lin reiter 
forget 
working notes aaai fall symposium relevance 
aaai press menlo park calif marquis 
knowledge compilation theory prime implicates 
proceedings international joint conference artifical intelligence ijcai 
morgan kaufmann san mateo calif pp 


sample method minimization obdds 
proceedings conference current trends theory practice informatics 
lecture notes computer science vol 

springer verlag new york pp 

reiter 
theory diagnosis principles 

intell 

robertson seymour 
graph minors ii algorithmic aspects tree width 
algorithms 
selman kautz 
knowledge compilation theory approximation 
acm 
wegener 
graph driven bdds new data structure boolean functions 

comput 
sci 

williams nayak 
reactive planner model executive 
proceedings international joint conference artifical intelligence ijcai 
morgan kaufmann san mateo calif received august revised march accepted march journal acm vol 
july 
