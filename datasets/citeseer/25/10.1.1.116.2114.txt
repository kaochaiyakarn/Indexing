nesc language manual david gay philip levis david culler eric brewer may nesc extension designed embody structuring concepts execution model tinyos 
tinyos event driven operating system designed sensor network nodes limited resources bytes program memory bytes ram 
tinyos reimplemented nesc 
manual describes nesc changes summarised section 
basic concepts nesc separation construction composition programs built components assembled wired form programs 
components define scopes specification containing names interface instances implementation 
components internal concurrency form tasks 
threads control may pass component interfaces 
threads rooted task hardware interrupt 
specification component behaviour terms set interfaces 
interfaces may provided component 
provided interfaces intended represent functionality component provides user interfaces represent functionality component needs perform job 
interfaces bidirectional specify set functions implemented interface provider commands set implemented interface user events 
allows single interface represent complex interaction components registration interest event followed callback event happens 
critical lengthy commands tinyos send packet non blocking completion signaled event send done 
specifying interfaces component call send command provides implementation event 
typically commands call downwards application components closer hardware events call upwards 
certain primitive events bound hardware interrupts nature binding system dependent described manual 
components statically linked interfaces 
increases runtime efficiency encourages design allows better static analysis program nesc designed expectation code generated program compilers 
allows better code generation analysis 
example nesc compile time data race detector 
concurrency model nesc run completion tasks interrupt handlers may interrupt tasks 
nesc compiler signals potential data races caused interrupt handlers 
document manual nesc tutorial 
tinyos tutorial presents nesc 
rest document structured follows section presents notation manual 
section summarises new features nesc 
sections nesc interfaces components 
section presents nesc concurrency model datarace detection 
section explains files nesc interfaces components assembled application 
section covers remaining miscellaneous features nesc 
appendix fully defines nesc grammar extension grammar appendix kernighan ritchie pp appendix glossary terms manual 
notation typewriter font nesc code filenames 
single symbols italics optional subscripts refer nesc entities component value 
grammar nesc extension ansi grammar 
chose base presentation ansi grammar appendix kernighan ritchie pp 
repeat productions grammar 
words italics non terminals terminals typewriter words symbols literal terminals 
subscript opt indicates optional terminals non terminals 
cases change ansi grammar rules 
indicate follows indicates additional productions existing non terminals replaced indicates replacement existing non terminal 
explanations nesc constructs corresponding grammar fragments 
fragments 
represent elided productions irrelevant construct hand 
appendix presents full nesc grammar 
examples uint uint types standard file 
changes changes nesc 
atomic statements 
simplify implementation concurrent data structures understood new compile time data race detector 

compile time data race detection gives warnings variables potentially accessed concurrently interrupt handlers interrupt handler task 
available tinyos distribution webs cs berkeley edu 
commands events safely executed interrupt handlers explicitly marked async storage class specifier 

results calls commands events fan automatically combined new type specific combiner functions 

new constant function counts uses unique 

nesc preprocessor symbol indicates language version 
nesc 
interfaces interfaces nesc bidirectional specify multi function interaction channel components provider user 
interface specifies set named functions called commands implemented interface provider set named functions called events implemented interface user 
section explains interfaces specified section explains components specify interfaces provide section explains commands events called implemented code section explains component interfaces linked 
interfaces specified interface types follows nesc file interface includes list opt interface 
interface identifier declaration list storage class specifier command event async declares interface type identifier 
identifier global scope belongs separate namespace component interface type namespace 
interface types names distinct components conflicts regular declarations 
interface type separate scope declarations declaration list 
declaration list consist function declarations command event storage class compile time error occurs 
keyword indicates command event executed interrupt handler 
interface optionally include files includes list see section 
simple interface interface sendmsg command result send uint address uint length tos msg event result tos msg result success provides sendmsg interface type implement send command users implement event 
component specification nesc component module section configuration section nesc file module includes list opt module includes list opt configuration 
module identifier specification module implementation configuration configuration identifier specification configuration implementation component names specified identifier 
identifier global scope belongs component interface type namespace 
component introduces component scopes specification scope nested global scope implementation scope nested specification scope 
component optionally include files includes list see section 
specification lists specification elements interface instances commands events provided component 
saw section component implement commands provided interfaces events interfaces 
additionally implement provided commands events 
typically commands call hardware components events call application components assumes view nesc applications graph components application components top 
thread control crosses components specification elements 
specification element name interface instance name command name event name 
names belong variable namespace component specification scope 
specification uses provides list uses provides list uses provides uses provides list uses provides uses provides uses specification element list provides specification element list specification element list specification element specification elements specification elements specification element specification elements specification element multiple uses provides directives component specification 
multiple provided specification elements grouped single directive surrounding 
instance specifications identical module module uses interface uses uses interface interface interface 
interface instance specified follows specification element interface renamed identifier parameters opt 
renamed identifier identifier identifier identifier interface parameters parameter type list complete syntax interface instance declaration interface explicitly specifying instance name 
interface syntax shorthand interface interface parameters omitted interface declares simple interface instance corresponding single interface component 
interface parameters interface sendmsg uint id declaration parameterised interface instance corresponding multiple interfaces component distinct tuple parameter values interface sendmsg uint id declares interfaces type sendmsg 
types parameters integral types enums allowed time 
commands events included directly specification elements including standard function declaration command event storage class specifier specification element declaration 
storage class specifier command event async compile time error declaration function declaration command event storage class 
interfaces async indicates command event executed interrupt handler 
interface instances commands events simple commands simple events interface parameters specified parameterised commands parameterised events interface parameters specified 
interface parameters placed function regular parameter list command void send uint id int direct declarator direct declarator interface parameters parameter type list 
note interface parameters allowed commands events component specifications interface types 
full specification example configuration provides interface stdcontrol control interface interface parameterised active message id interface sendmsg uint id interface uint id uses signaled send completion components wish retry failed sends event result 
example provides simple interface instance control type stdcontrol 
provides simple interface instance type 
provides parameterised instances interface type sendmsg parameterised instances named sendmsg respectively 
uses event 
say command event provided specification component provided command event similarly command event specification component command event command provided interface instance component provided command command interface instance command event provided interface instance event event interface instance provided event note reversal provided events due bidirectional nature interfaces 
simply refer command event provided distinction relevant 
commands events may parameterised simple depending parameterised simple status specification element correspond 
modules modules implement component specification code module implementation implementation translation unit translation unit list declarations definitions see pp 
top level declarations module translation unit belong module scope 
declarations indefinite extent standard declaration definition task declaration definition commands event implementation 
implementing module specification translation unit implement provided commands events module directly provided commands events commands provided interfaces events interfaces 
module call commands signal events 
command event implementations specified syntax extensions storage class specifier command event async declaration specifiers default declaration specifiers direct declarator identifier identifier direct declarator interface parameters parameter type list implementation simple command event syntax function definition note extension direct declarator allow function names storage class command event 
additionally async keyword included iff included declaration 
example module provides interface send type sendmsg command result send send uint address uint length tos msg return success implementation parameterised command event interface parameters syntax function definition storage class command event function regular parameter list prefixed parameters square brackets syntax parameterised command event declarations component specification 
interface parameter declarations belong function parameter scope extent regular function parameters 
example module provides interface send uint id type sendmsg command result send send uint id uint address uint length tos msg return success compile time errors reported implementation provided command event 
type signature optional interface parameters presence absence async keyword command event match module specification 
calling commands signaling events extensions syntax call events signal commands postfix expression postfix expression argument expression list call kind opt primary argument expression list opt 
call kind call signal post simple command called call simple event signaled signal 
instance module uses interface send type sendmsg call send send sizeof message msg 
parameterised command respectively event interface parameters type 
called interface parameters expressions 
en follows call 
en 
respectively signal 
en 
interface parameter expression ei assignable type actual interface parameter value ei cast type instance module uses interface send uint id type sendmsg int call send send sizeof message msg execution commands events immediate call signal behave similarly function calls 
actual command event implementations executed call signal expression depend wiring statements program configurations 
wiring statements may specify implementations executed 
implementation executed say module command event fan 
module specify default implementation command event calls signals 
compile time error occurs default implementations provided commands events 
default implementations executed connected command event implementation 
default command event defined prefixing command event implementation default keyword declaration specifiers default declaration specifiers instance module uses interface send type sendmsg default command result send send uint address uint length tos msg return success call allowed interface send connected call send send sizeof message msg 
section specifies command event implementations executed result gets returned call signal expressions 
tasks task independent locus control defined function storage class task returning void arguments task void 
task forward declaration task void 
tasks posted prefixing call task post post 
post returns immediately return value task successfully posted independent execution 
type post expression unsigned char 
storage class specifier task call kind post nesc concurrency model including tasks detail section 
atomic statements atomic statements nesc functions arguments declared void 
see section 
atomic stmt atomic statement guarantee statement executed computation occured simultaneously 
implement mutual exclusion updates concurrent data structures simple example bool busy global void bool available atomic available busy busy true available atomic busy false atomic sections short help meet requirement nesc forbids calling commands signaling events inside atomic statements 
constructions forbidden inside atomic statements may allowed versions nesc goto return break continue case default labels 
section discusses relation atomic nesc concurrency model data race detector 
configurations configurations implement component specification connecting wiring collection components configuration implementation implementation component list opt connection list component list lists components build configuration specifies components wired configuration specification 
rest section call specification elements configuration specification external specification elements configuration components internal 
included components component list specifies components build configuration 
components optionally renamed configuration avoid name conflicts configuration specification elements simplify changing components configuration uses avoid having change wiring 
names chosen components belong component implementation scope 
component list components component list components components components component line component line renamed identifier component line renamed identifier renamed identifier identifier identifier identifier compile time error occurs components name components 
single instance component component different configurations twice configuration instance variables program 
wiring wiring connect specification elements interfaces commands events 
section section define syntax compile time rules wiring 
section details program wiring statements dictate functions get called call signal expression 
connection list connection connection list connection connection endpoint identifier path identifier endpoint endpoint endpoint endpoint endpoint endpoint identifier path identifier path argument expression list identifier path identifier wiring statements connect endpoints 
identifier path endpoint specifies specification element 
argument expression list optionally specifies interface parameter values 
say endpoint parameterised specification element parameterised endpoint parameter values 
compile time error occurs endpoint parameter values true parameter values constant expressions 
endpoint specification element parameterised 
parameter values parameters specification element 
parameter values range specification element parameter types 
compile time error occurs identifier path endpoint forms names external specification element 
component component list specification element component name component list 
form implicit connections discussed section 
note form parameter values specified 
wiring statements nesc endpoint endpoint equate wires connection involving external specification element 
effectively specification elements equivalent 
specification element endpoint endpoint 
conditions hold compile time error occurs internal external vice versa provided external provided 
endpoint endpoint link wires connection involving internal specification elements 
link wires connect specification element specified endpoint provided specified endpoint conditions hold compile time error occurs 
endpoint endpoint equivalent endpoint endpoint 
kinds wiring specification elements specified compatible commands events interface instances 
commands events function signature 
interface instances interface type 
conditions hold compile time error occurs 
endpoint parameterised parameter types compile time error occurs 
specification element may connected multiple times configuration provides interface implementation components example multiple wiring lead multiple fan events interface multiple functions executed fan commands interface called 
note multiple wiring happen configurations independently wire interface configuration configuration implementation implementation components components external specification elements wired compile time error occurs 
internal specification elements may left unconnected may wired configuration may left modules appropriate default event command implementations 
implicit connections possible write 
syntax iterates specification elements resp 
find specification element resp 
forms valid connection 
exactly connection compile time error occurs 
instance module module provides interface stdcontrol uses interface stdcontrol sc 
configuration implementation interface module command int provides interface event void int uses interface provides command void implementation 
configuration provides interface provides command void implementation components simple wiring example components sc sc line equivalent sc stdcontrol 
wiring semantics explain semantics wiring absence parameterised interfaces 
section covers parameterised interfaces 
section specifies requirements wiring statements application viewed 
simple application running example 
define meaning wiring terms intermediate functions 
intermediate function command event component 
instance module intermediate functions im im im im im examples name intermediate functions component optional interface instance name function name 
intermediate function provided 
intermediate function takes arguments corresponding command event component specification 
body intermediate function list calls executed sequentially intermediate functions 
intermediate functions functions connected application wiring statements 
arguments receives passed called intermediate functions unchanged 
result list results type list elements result type command event corresponding built concatenating result lists called intermediate functions 
intermediate function returns empty result list corresponds nesc compiled explicit intermediate functions behaviour described section runtime cost actual function calls runtime dispatch necessary parameterised commands events 
unconnected command event intermediate function returns list elements corresponds fan 
intermediate functions configurations wiring statements configuration specify body intermediate functions 
expand wiring statements refer intermediate functions specification elements suppress distinction wiring statements 
write connection intermediate functions 
instance configuration specifies intermediate function connections ic im im im ic im ic im im im connection configuration intermediate functions callee caller 
connection simply specifies call callee added body caller 
similarly callee conditions hold internal external terminology specification elements respect configuration containing connection corresponds internal specification element provided command event 
corresponds external specification element command event 
corresponds command interface instance internal provided external specification element 
corresponds event interface instance external provided internal specification element 
conditions hold caller 
rules wiring section ensure connection connect callers callees 
configuration ic ic im im callers ic im im im callees 
connections specify call im added ic call ic added im intermediate functions modules code modules calls called intermediate functions 
intermediate function provided command event module contains single call implementation result singleton list call result 
expression call 
en evaluated follows arguments 
en evaluated giving values 
vn 
intermediate function corresponding called arguments 
vn results list singleton list result call 
wm elements result call depends result type 
void result void 
associated combining function section shows combining functions types compile time error occurs 
combining function takes values type returns list int im list void im int return list list int ic list int im return list concat list int im list void im int return im return list list int ic list void ic int return im return empty list list void ic list void im return im return list intermediate functions result type 
result call 
wm wm note order elements arbitrary 
empty default implementation called arguments 
vn result result call 
section specifies compile time error occurs empty default implementation 
rules signal expressions identical 
example intermediate functions shows intermediate functions produced components syntax list produces singleton list containing empty list constant element list concat list concatenates lists 
calls represent calls command event implementations module shown 
wiring parameterised functions command event component parameterised interface parameters type 
intermediate function vn distinct tuple 
vn 
modules intermediate function iv vn corresponds parameterised provided command event call iv vn implementation passes values 
vn values interface parameters 
expression call 

en evaluated follows arguments 
en evaluated giving values 
vn 
arguments 
evaluated giving values 
values cast type type ith interface parameter 
intermediate function corresponding called arguments 
vn results list elements result call produced non parameterised case 
empty default implementation called interface parameter values 
arguments 
vn result result call 
section specifies compile time error occurs empty default implementation 
rules signal expressions identical 
cases endpoint wiring statement refers parameterised specification element endpoint specifies parameter values 
vn 
endpoint corresponds commands events 
corresponding intermediate functions vn 
vn wiring behaves 
endpoint specify parameter values 
case endpoints wiring statement correspond parameterised specification elements identical interface parameter types 
endpoint corresponds commands events 
corresponds commands events 
connection wn wn tuples 
wn endpoints connected corresponding parameter values 
application level requirements requirement wiring statements application satisfy compiletime error occurs infinite loop involving intermediate functions 
call signal expression application modules call call returns empty result list default implementation number elements result list depends wiring 
call parameterised values interface parameters returns empty result list default implementation number elements result list parameter value tuple depends wiring 
note condition consider expressions specify interface parameter values call site 
call typically involves runtime selection command implementations place intermediate functions runtime cost 
concurrency nesc nesc assumes execution model consists run completion tasks typically represent ongoing computation interrupt handlers signaled asynchronously hardware 
scheduler nesc execute tasks order obey run completion rule standard tinyos scheduler follows fifo policy 
tasks preempted run completion atomic respect atomic respect interrupt handlers 
concurrent execution model nesc programs susceptible race conditions particular data races program shared state global module variables nesc include dynamic memory allocation 
races avoided accessing shared state tasks atomic statements 
nesc compiler reports potential data races programmer compile time 
formally divide code nesc program parts synchronous code sc code functions commands events tasks reachable tasks 
asynchronous code ac code reachable interrupt handler 
non preemption eliminates data races tasks potential races sc ac ac ac 
general update shared state reachable ac potential data race 
basic invariant nesc enforces race free invariant update shared state sc occurs atomic statement 
body function called atomic statement considered atomic statement long calls atomic statements 
possible introduce race condition compiler detect span multiple atomic statements tasks storage intermediate variables 
nesc may report data races occur practice accesses protected guards variable 
avoid redundant messages case programmer annotate variable storage class specifier eliminate data race warnings keyword caution 
nesc reports compile time error command event ac declared async 
ensures code written execute safely interrupt handler called inadvertently 
nesc applications nesc application parts list declarations definitions set interface types set components 
naming environment nesc applications structured follows outermost global scope namespaces variable tag namespace declarations definitions component interface type namespace nesc interface types components 
declarations definitions may introduce nested scopes global scope usual function declarations definitions code blocks functions 
interface type introduces scope holds interface commands events 
scope nested global scope command event definitions refer types tags defined global scope 
component introduces new scopes 
specification scope nested global scope contains variable namespace holds component specification elements 
implementation scope nested specification scope contains variable tag namespace 
configurations implementation scope variable namespace contains names component refers included components section 
modules implementation scope holds tasks declarations definitions form module body 
declarations may introduce nested scopes implementation scope function bodies code blocks 
result scope nesting structure code modules access declarations definitions global scope declarations definitions components 
declarations interface types components form nesc application determined demand loading process 
input nesc compiler single component nesc compiler loads file tos section loads component section 
code application code loaded part process loading files 
nesc compiler assume calls functions commands events marked spontaneous attribute section occur loaded code invisible calls non spontaneous functions 
preprocessing loaded files nesc defines nesc symbol number xyz identifies version nesc language compiler 
nesc xyz 
part process loading file nesc component interface type involves locating corresponding source file 
mechanism locate files outside scope manual details works current compiler please see ncc man page 
loading file loaded done 
file located preprocessed 
changes macros define undef visible subsequently preprocessed files 
declarations definitions preprocessed file entered global scope visible subsequently processed files interface types components 
loading component loaded done 
file nc located preprocessed 
changes macros define undef discarded 
preprocessed file parsed grammar instance current nesc compiler uses information eliminate unreachable code 
nesc symbol defined earlier versions nesc 
nesc file includes list opt interface includes list opt module includes list opt configuration includes list includes includes list includes includes includes identifier list nc define module configuration compile time error reported 
files specified includes list loaded section 
interface types component specification loaded section 
component specification processed section 
configuration components specified section loaded section 
implementation processed sections 
loading interface type loaded done 
file nc located preprocessed 
changes macros define undef discarded 
preprocessed file parsed nesc file production 
nc define interface compile time error reported 
files specified includes list loaded section 
definition processed section 
example including files components interfaces interface type bar include file defines types bar bar nc includes typedef struct interface bar int command result bar arg double definition interface bar refer component uses provides interface bar interface bar loaded component specification implementation processed 
miscellaneous functions arguments old style declarations nesc functions arguments declared void 
syntax reports compile time error 
old style declarations function definitions parameters specified argument list allowed interfaces components cause compile time errors 
note changes apply files existing files unchanged 
comments nesc allows comments interface type component files 
attributes nesc uses gcc attribute syntax declaring properties functions variables typedefs 
attributes placed declarations declarator function definitions parameter list 
attributes union attributes declarations definitions attribute syntax nesc init declarator list init declarator attributes init declarator list init declarator attributes function definition declaration specifiers opt declarator attributes declaration list opt compound statement attributes attribute attribute attributes attribute attribute attribute list attribute list single attribute attribute list single attribute single attribute identifier identifier argument expression list nesc supports attributes attribute declaration definition top level module ignored declarations 
specifies appear global scope module component implementation scope 
allows called function code 
gcc gnu org gcc doesn allow attributes parameter list function definitions 
spontaneous attribute function modules code 
indicates calls visible source code 
typically functions called spontaneously interrupt handlers main function 
section discusses nesc compiler uses spontaneous attribute compilation 
combine attribute specifies combining function type typedef declaration 
combining function specifies combine multiple results call command event fan 
example typedef uint result attribute combine result result result return fail fail specifies logical behaviour combining commands events result type result see section detailed semantics 
compile time error occurs combining function type type 
example attribute file td module 
implementation int main int argc char argv attribute spontaneous 
example declares function main appear global scope linker find 
declares main called function calls main program spontaneous 
compile time constant functions nesc new kind constant expression constant functions 
functions defined language evaluate constant compile time 
nesc currently constant functions unsigned int unique char identifier returns program contains calls unique identifier string calls returns different unsigned integer range 
intended unique passing unique integer parameterised interface instances component providing parameterised interface uniquely identify various components connected interface 
unsigned int char identifier returns program contains calls unique identifier string return intended dimensioning arrays data structures indexed numbers returned unique 
instance timer service identifies clients independent timer parameterised interface unique allocate correct number timer data structures 
grammar please refer appendix kernighan ritchie pp reading grammar 
keywords new nesc call command components configuration event implementation interface module post provides signal task uses includes 
nesc keywords reserved files 
corresponding symbols accessible nesc files prefixing nesc keyword nesc keyword 
nesc reserves identifiers starting nesc internal 
tinyos reserves identifiers starting tos nesc files follow nesc file production files included includes directive follow translation unit directive new rules nesc file includes list opt interface includes list opt module includes list opt configuration includes list includes includes list includes includes interface module includes identifier list interface identifier declaration list module identifier specification module implementation module implementation implementation translation unit configuration configuration identifier specification configuration implementation configuration implementation implementation component list opt connection list component list components component list components components components component line component line renamed identifier component line renamed identifier renamed identifier identifier identifier identifier connection list connection connection list connection connection endpoint endpoint endpoint endpoint endpoint endpoint endpoint identifier path identifier path argument expression list identifier path identifier identifier path identifier specification uses provides list uses provides list uses provides uses provides list uses provides uses provides uses specification element list provides specification element list specification element list specification element specification elements specification elements specification element specification elements specification element specification element declaration interface renamed identifier parameters opt parameters parameter type list changed rules storage class specifier command event async task declaration specifiers default declaration specifiers direct declarator identifier identifier direct declarator parameters parameter type list init declarator list init declarator attributes init declarator list init declarator attributes function definition declaration specifiers opt declarator attributes declaration list opt compound statement attributes attribute attribute attributes attribute attribute attribute list attribute list single attribute attribute list single attribute single attribute identifier identifier argument expression list statement atomic statement atomic statement atomic statement postfix expression replaced primary expression postfix expression argument expression list call kind opt primary argument expression list opt postfix expression identifier postfix expression identifier postfix expression postfix expression call kind call signal post glossary combining function function combines multiple results command call event signal presence fan 
command event function part component specification directly specification element component interface instances 
directly specification elements commands events roles provider user interface parameters 
interface instances distinguish simple commands events interface parameters parameterised commands events interface parameters 
interface parameters command event distinct regular function parameters 
compile time error error nesc compiler report compile time 
component basic unit nesc programs 
components name kinds modules configurations 
component specification implementation 
configuration component implementation provided composition components specific wiring 
endpoint specification particular specification element optionally interface parameter values wiring statement configuration 
parameterised endpoint endpoint parameter values corresponds parameterised specification element 
event see command 
extent lifetime variable 
nesc standard extents indefinite function block 
external configuration describes specification element specification 
see internal 
fan describes provided command event called place 
fan describes command event connected command event implementation 
combining function combines results calls commands events 
interface context unambiguous interface refer interface type interface instance 
interface instance instance particular interface type specification component 
interface instance instance name role provider user interface type optionally interface parameters 
interface instance parameters simple interface instance parameters parameterised interface instance 
interface parameter interface parameter interface parameter name integral type 
conceptually separate simple interface instance distinct list parameter values parameterised interface instance similarly separate simple commands events case parameterised commands events 
parameterised interface instances allow runtime selection parameter values set commands set events 
interface type interface type specifies interaction components provider user 
specification takes form set commands events 
interface type distinct name 
interfaces bi directional provider interface implements commands user interface implements events 
intermediate function pseudo function represents behaviour commands events component specified wiring statements application 
see section 
internal configuration describes specification element components specified component list 
see external 
module component implementation provided code 
namespace nesc standard variable functions typedefs tagged type struct union enum tag names label namespaces 
additionally nesc component interface type namespace component interface type names 
parameterised command parameterised event parameterised interface instance endpoint see command event interface instance endpoint 
provided provider role specification element 
providers interface instances implement commands interface provided commands events implemented 
provided command command provided specification element command provided interface provided event event provided specification element event interface scope nesc standard global function parameter block scopes 
additionally specification implementation scopes components interface type scope 
scopes divided namespaces 
simple command simple event simple interface instance see command event interface instance 
specification list specification elements specifies interaction component components 
specification element interface instance command event specification provided 
task tinyos task 
user role specification element 
users interface instances implement events interface 
command command specification element command interface event event specification element event provided interface wiring connections component specification elements specified configuration 
hill szewczyk woo hollar culler pister 
system architecture directions networked sensors 
architectural support programming languages operating systems pages 
tinyos available webs cs berkeley edu 
kernighan ritchie 
programming language second edition 
prentice hall 

