way accumulators decentralized alternative digital signatures extended josh benaloh michael de mare clarkson university giordano automation 
describes simple candidate way hash func tion satisfies quasi commutative property allows aa accumulator 
property allows protocols developed need trusted central authority eliminated 
space efficient distributed protocols document time stamping membership testing applications possible 
way hash functions generally defined functions single argu ment difficult invert fashion reduce arguments pre determined size 
view hash functions somewhat differently functions take arguments comparably sized domains produce result similar size 
words hash function function property ibi ici 
course substantial difference view traditional view view lows define special quasi commutative property turns applications 
desired property obtained considering functions asserting yz property unusual 
addition multiplication modulo property exponentiation modulo written en xv mod exponentiation modulo additional property suitable conditions function believed difficult invert 
describe combination properties quasi commutativity wayness develop way applications provide space efficient cryptographic protocols time stamping membership testing 
ed advances cryptology eurocrypt lncs pp 

verlag berlin heidelberg definitions formalizing necessary definitions 
definition 
family way hash functions infinite set functions xe ye ze having properties 
exists polynomial integer com time xe ye 

polynomial exists probabilistic polynomial time algorithm sufficiently large pair xe yj find xe hl probability greater 
chosen uniformly elements xt yt chosen uniformly ye 
note definition requires collisions form hard find 
general hard find 
may fact easy find pair 
case pair relatively practically 
note definition require hash value smaller arguments 
hash functions considered property 
follows definition family way hash functions family way functions 
naor yung shown way hash functions exists way functions exist turn exist secure signature schemes exist 
shown ill way functions equivalent existence secure pseudo random numb er om 
definition 
function said quasi commutative yl considering way hash functions range equal argument domain exploit properties way hash functions quasi commutative property 
definition 
family way accumulators family way hash functions quasi commutative 
motivation quasi commutative property way accumulators ensures starts initial value set values 
ym accumulated hash yl ym urn unchanged order permuted 
addition fact way hash function means difficult find values yl 
ym associated users cryptosystem accumulated hash yi computed 
user holding particular yj compute partial accumulated hash holder yj presumably time demonstrate yj part original hash presenting zj yj zj yj 
user wishes forge particular yf faced problem constructing xi property 
approach enable users hide individual yj yj necessary compute accumulated hash yj may encryptions hidden information 
way accumulator way keeps user having remember general application basic trick alternative digital sig natures credential authentication parties retain result accumulated hash time party yj zj pair party compute verify yj zj authenticate yj course possible dishonest user construct false pair combining various yi way 
seen section practical 
methods computing false pairs may possible 
restricting choice constructing useful false pairs impractical 
emphasized advantage approach naive save see approach simply storage 
terms stor age protocol comparable retaining public key central authority verify yj signed central author ity 
way accumulator method obviate need central authority altogether 
applications way accumulators section 
method construct time stamping protocol participants archive time stamp documents way allow time stamped documents revealed time 
second composition formed applying times way strictly asserting way 
addressed section 
application shows membership testing system constructed having maintain membership lists 
applications storage requirements minimized having rely potentially central authority 
modular exponentiation function mod clearly quasi commutative 
commonly rsa assumption rsa appropriately computing en done time polynomial exponentially small number cases 
shamir gives proof applied context shows appropriately chosen root finding modulo hard family en constitutes family way hash functions 
may way accumulators 
reason repeated application may reduce size image finding collisions feasible 
alleviate problem restrict 
definition 
define prime safe odd prime 
deflnition 
define rigid integer pq distinct safe primes iql 
hard see pq rigid integer larger primes congruent modulo 
composition advantage rigid integer pq group squares quadratic residues modulo relatively prime property size function en mod permutation group relatively prime 
factorization hidden random exponentiations element group extremely produce elements proper subgroup 
means repeated applications extremely reduce size domain produce random collisions 
constructing rigid integers somewhat harder constructing ordinary difficult factor integers quite feasible 
process select random congruent modulo prime 
approximately selected property 
suitable suitable selected similarly 
allows pq formed approximately lnp trials 
modulus approximately digits length approximately candidates expected examined suitable choices 
mean executing roughly primality tests digit integers amount terribly unreasonable 
sense rigid integers may hardest integers factor 
cryptographic applications depend difficulty factoring suggest chosen product comparably sized primes suggest contain large prime factors 
suitable purposes 
parameters extreme case largest possible prime factors provides additional beneficial properties exploited applications 
collisions way property way accumulators rests difficulty finding arbitrary collisions difficulty finding collisions alternate preimages specific constraints 
accumulated hash formed set values taken modulo new item forged finding zy mod result way hash prospective forger change select compute root modulo face appears hard computing roots modulo composite believed computationally infeasible large unknown factorization 
factors may task easier prospective forger 
forger provided number roots modulo 
roots provided values form 
shamir shown basic root computation difficult roots 
zl insufficient compute value divisor ri 
second forger may opportunity select constituent accumulated hash constructed 
conceivable forger may weaken choosing appropriate constituents facilitate subsequent forgery 
sketch result says actively participating dynamic forger exist root finding computationally feasible 
theorem 
suppose exists polynomial time polynomial number mots yl 
yk pre selected indices rl rz 
rk yr mod finds mod exists time algorithm gcd rh produce yp mod 
words computation duplicated roots yz 
yk proof 
sketch algorithm constructed algorithm follows 

computes mod asks rth root modulo providing appropriate roots easily computed ri 
return mod 
gcd 
rk 
quotients rk relatively prime extended euclid algorithm construct cofactors desired root zl mod constructed xl mod mod db mod mod rk mod mod short theorem shows general root finding feasible rth root modulo computed set known roots indices zi mod divisor ti 
may possible forger obtain set roots product indices multiple desired root index 

shown number known roots provided order non negligible probability product multiple random number selected prohibitively large see 
asymptotically polynomial case inl items combined single accumulated hash value extremely high security 
numerically worst case scenario adversary allowed select hash values root indices advance digit comfortably allow items hashed probability forgery see 
full asymptotic numerical analysis included full version 
applications applications described section 
time stamping haber stornetta describe documents time stamped cryptographically chaining documents 
links chain determine sequence document occurred determine relative positions documents 
process 
somewhat cumbersome requires active cooperation par documents chain 
link chair individually reconstructed relocate position document 
haber stornetta describe system documents transmitted subset participants 
specific subset determined document 
appropriate cooperation participants substantiate document sent claimed time 
benaloh de mare describe method different model 
break time rounds assume existence broadcast channels simulated variety consensus protocols see example ben 
de mare describe time stamping accomplished assumptions cooperation 
model show amount information saved round protocol pro logarithm number participants protocol 
pose open problem question amount information saved independent number participants 
time stamping protocol essentially solves question posed benaloh de mare 
modular exponentiation way 
simple protocol devised 
time stamping protocol 
rigid integer agreed parties 
supplied trusted outside source constructed special purpose physical device chosen joint evaluation circuit computing supplied ran dom inputs participants see gmw gmw bgw ccd se cure multiparty computation 
need selected may continuously extraordinary effort may required construct may warranted 
selected starting value agreed 
may instance representation current date 
value mod formed 
rn participants takes document wishes stamp round applies agreed conventional way hash function document produce 
ym denote set conventionally hashed documents stamped round 
yi yi denote product yj 
time print round computed accumulated hash modn modn modn modn 
jth participant computes maintains partial accumulated hash modn easily computed 
jth participant demonstrate time document presumably saved claimed time stamp par need produce yj zj 
check mod equal time print round accept time stamp document legitimate 
claimant show conventional hash function applied document value yj produced 
forgery possible 
discussing forgery possible precisely forgery means context 
participant ability time stamp documents round 
documents contain contradictory information promises 
instance participant time stamping large number predictions world series outcome outcome decided revealing time stamped document correctly predicted outcome 
depending method implementation possible user wishes stamp hashed document example submit hashed documents stamping uv construct time stamp time stamps 
simple remedied requiring submission pre hash post hash documents note documents may course encrypted hashing protect contents similar may possible user knows document stamp desired time stamp 
pose concern allow participants stamp documents round 
claim forgery user produce valid time stamp document anticipated time indicated stamp 
example industrial spy reads patent application date able change name application forge time stamp indicate earlier date 
results theorem show forging unanticipated docu ments infeasible 
membership testing suppose large group people attendees cryptography con ference want develop mechanism allow participants recognize time 
solutions possible 
attendees simply produce membership list distribute list 
requires member maintain large bulky membership list 
addition members want outsiders know identities membership lists carefully guarded members 
possible member identified non member 
alternative solution group appoint trusted 
secretary digitally sign id cards member arid post public verification key 
member need remember signed information secretary public key 
time member identified providing signed id card 
additionally pos sible give secretary public key outsiders members identify non members 
problem course secretary trusted produce additional id cards non members 
way accumulators offer solution advantages single trusted secretary need authority 
member selects yj consisting name desired identifying characteristics 
base agreed members exchange information compute accumulated hash value 
yl ym ym 
member saves hash function yj value rj rep resents accumulated hash yi holder yj prove member group need pair yj zj 
veri fying yj zj participant authenticate membership holder yj 
note necessary participant retain accumulated hash value participant hold yj zj pair yj zj easily generated 
non members hash function value accumulated hash member wishes non member revealing entire membership list 
merkle describes similar application directory public keys jointly maintained 
describes tree authentication solution problem user retain key hash function number additional partial hashes logarithmic number participants 
way accumulators properties achieved reducing constant number values retained participant 
applications generalizations idea way accumulators applied variety prob lems 
special advantage offered accumulators signatures individual need know authenticate sign stamp document mes sage 
class applications way accumulators simple effective method forming collective signatures 
variety cryptographic problems closely related membership testing problems may amenable approach way accumulators 
applications may possible 
david naccache observed function en mod quasi commutative constants direct generalization function xu modn en 
possible advantage general form facilitates efficient montgomery processors naccache observes dixon polynomial generating tion montgomery processors certain constants depend solely compute modular product abc mod quickly ordinary processors com pute integer product ab 
quasi commutative 
known functions appropriate way proper ties 
clearly existence way accumulators implies existence oneway functions 
question existence way accumulators implied existence arbitrary way functions area research 
relationship known existence way accumulators way trap door functions 
related open question candidate way accumulator trap door 
apparent reason possible function alleviate need secure multiparty computation required select appropriate modulus function en zg mod authors express lau rie benaloh ernie joshua david greenberg kevin mccurley david naccache janice satish thatte reviewers helpful comments suggestions regarding 
authors express paul giordano 
ben beaver efficient multiparty protocols circuit randomization advances cryptology crypto ed 
feigenbaum lecture notes computer science vol 
ed 
goos hartmanis 
springer verlag new york 
beaver multiparty protocols tolerating half faulty processors advances cryptology crypto ed 
brassard lecture notes computer science vol 
ed 
goos hartmanis 
springer verlag new york 
beaver multiparty computation faulty majority proc 
ih ieee symp 
foundations computer science research triangle park nc ct nov 
benaloh de mare efficient broadcast time stamping clarkson university department mathematics computer science tr 
aug 
ben advantage free choice completely nous agreement protocols proc 
acm symp 
principles dis tributed computing montreal pq aug 
bgw ben goldwasser wigderson completeness theorems non cryptographic fault tolerant distributed computation proc 
acm symp 
theory computation chicago il may 
de asymptotic behaviour function occurring theory primes journal indian mathematical society 

chaum multiparty unconditionally secure protocols proc 
acm symp 
theory computation chicago il may 
chor goldwasser micali awerbuch verifiable secret sharing achieving simultaneity presence faults proc 
th ieee symp 
foundations computer science portland oct 
denning cryptography data security addison wesley reading massachusetts 
fischer consensus problem unreliable distributed systems proc 
international fct conference aug 
published foundations computation theory ed 
karpinski lecture notes computer science vol 
ed 
goos hartmanis 
springer verlag new york 
gmw goldreich micali wigderson proofs yield validity methodology cryptographic protocol design proc 
vh ieee symp 
foundations computer science toronto oct 
gmw goldreich micali wigderson play mental game completeness theorem protocols honest majority proc 
acm symp 
theory computation new york ny may 
goldwasser levin fair computation general functions presence majority advances cryptology crypto ed 
menezes vanstone lecture notes computer science vol 
ed 
goos hartmanis 
springer verlag new york kn ill 
haber stornetta time stamp digital docu ment cryptology 

knuth pardo analysis simple factorization algorithm theoretical computer science 

levin luby pseudorandom generation way functions proc 
acm symp 
theory compu tation seattle wa may 
van de lune numerical solution differential difference equation arising analytic number theory mathematics computation 

merkle protocols public key cryptosystems proc 
symp 
security privacy ieee computer society april 
micali rabin collective coin tossing assump tions broadcasting advances cryptology crypto ed 
menezes vanstone lecture notes computer science ma vol 
ed 
goos hartmanis 
springer verlag new york 
mitchell evaluation golomb constant 
mathematics computation 

naor yung universal way hash functions aud cryptographic applications 
proc 
acm symp 
theory computation seattle wa may 
rabin ben verifiable secret sharing multiparty protocols honest majority 
proc 
acm symp 
theory computation seattle wa may 
rabin randomized byzantine generals 
proc 
ieee symp 
foundations computer science tucson az nov 
way functions necessary sufficient secure signatures 
proc 
acm symp 
theory computation 
baltimore md may 
rivest shamir method obtaining digital signatures public key cryptosystems 
comm 
acm feb 
shamir generation cryptographically strong pseudo random sequences 
proc 

