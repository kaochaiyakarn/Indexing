mini buckets general scheme generating approximations automated reasoning rina dechter department information computer science university california irvine dechter ics 
uci 
edu class algorithms approximating reasoning tasks approximating general bucket elimination framework 
algorithms adjustable levels accuracy efficiency applied uniformly areas problem tasks 
introduce algorithms context combinatorial optimization probabilistic inference 
overview bucket elimination unifying algorithmic framework generalizes dynamic programming enable complex problem solving reasoning activities 
algorithms accommodated framework directional resolution propositional satisfiability dechter rish adaptive consistency constraint satisfaction dechter pearl fourier gaussian elimination linear inequalities lassez mahler dynamic programming combinatorial optimization 
algorithms probabilistic inference belief updating finding probable explanation finding maximum posteriori hypothesis computing maximum expected utility expressed bucket elimination algorithms dechter 
main virtues framework simplicity generality 
simplicity mean extensive terminology unnecessary complete specification bucket elimination algorithms making algorithms accessible researchers working diverse areas 
important uniformity facilitates transfer ideas applications solutions disciplines 
bucket elimination algorithms partially supported nsf iri air force office scientific research afosr rockwell international america 
similar improvement single algorithm applicable class 
normally input bucket elimination algorithm knowledge base specified collection functions relations subsets variables clauses propositional satisfiability constraints cost functions constraint optimization conditional probability matrices belief networks 
bucket elimination algorithms process variables order 
step variable ordering algorithm partitions functions buckets bucket particular variable contains functions defined variable provided function defined variables higher ordering 
step process buckets top bottom 
bucket variable processed elimination procedure performed functions bucket yielding new function defined variables mentioned bucket excluding function summarizes effect remainder problem 
new function placed lower bucket 
illustration include directional resolution bucket elimination algorithm similar original davis putnam procedure satisfiability elim bel algorithm belief updating probabilistic networks 
important property variable elimination algorithms performance predicted graph parameter called induced width dechter pearl known tree width arnborg largest cluster optimal graph 
general theory query associated interaction graph 
complexity bucket elimination algorithm time space exponential induced width problem interaction graph 
size induced width varies various variable orderings ordering different performance guarantee 
finding optimal ordering hard arnborg heuristics approximation algorithms available robertson dechter algorithm elim bel seymour 
problem large induced width bucket elimination unsuitable extensive memory demand 
cases approximation algorithms attempted 
collection parameterized algorithms varying degrees accuracy efficiency 
demonstrate general scheme combinatorial optimization probabilistic task belief assessment 
probabilistic reasoning acyclic directed cycles 
undirected graph directions arcs ignored identical 
ordered graph pair undirected graph ordering nodes 
width node ordered graph number node neighbors precede ordering 
width ordering denoted maximum width nodes 
induced width ordered graph width induced ordered graph obtained processing nodes node processed earlier neighbors ordering connected 
induced width graph minimal induced width orderings known treewidth arnborg 
moral graph directed graph undirected graph obtained connecting parents nodes removing arrows 
approximating optimization non serial dynamic programming algorithm discrete optimization problem 
algorithm rephrased bucket elimination scheme shown 
partitioning cost functions respective buckets algorithm elim opt processes buckets top bottom 
processing xp generates new function minimum relative xp sum functions bucket 
time space complexity elim opt exponential induced width cost graph 
induced width small resort approximations 
complexity processing bucket tied arity functions recorded propose approximate functions collection smaller arity functions 
hj functions bucket xp sj subsets variables functions defined 
elim opt processes bucket xp computes function brute force approximation method generate function migrating minimisation operator inside sum idea generalized yield collection parameterized approximation algorithms having varying degrees accuracy efficiency 
elimination operator minimization applied singleton function bucket applied coerced partitioning mini algorithm approx opt described 
parameterized indexes control partitionings 
definition collection functions subsets partitioning canonical function arguments subsumed belongs mini bucket subsuming functions 
partitioning partitioning iff conditions met partitioning canonical functions participate mini bucket total number variables mentioned exceed theorem algorithm approx opt computes lower bound minimal cost time exp space general ra increase get accurate approximations 
parameters dependent allow flexibility bounding performance 
example consider network 
ordering apply elim opt approx opt unbounded dechter algorithm approx opt probabilistic reasoning approx opt processes buckets generate tuple greedy fashion elim opt choose value minimizes sum bucket value minimizing sum bucket 
guarantee quality tuple generated bound error posteriori evaluating cost derived lower bound 
mini bucket heuristics search mini bucket approximations compute lower bounds exact quantities lower bounds viewed estimating heuristic functions minimization problem 
associate partial assignment xp evaluation function proposition evaluation function generated approx opt provides lower bound optimal cost conduct best search heuristic evaluation function 
expanding search tree best algorithm collection tip nodes denoting partial value assignment estimated evaluation function 
step algorithm expand node minimal value evaluation function 
theory best search know algorithm terminates complete assignment optimal solution heuristic function accurate fewer nodes expanded full algorithm best search reduce greedy algorithm optimization task pearl 
mini bucket approximations generate mechanically heuristics best branchand bound search 
algorithm approx bel max summary upper bound obtained processing xp mini buckets summation rest mini buckets processed maximization 
addition approximating upper bound approximate lower bound applying min operator mini bucket approximate computing mean value approximation mean operator mini bucket 
algorithm approx bel max uses maximizing elimination operator described 
algorithms min approx bel mean obtained replacing operator max min mean respectively 
theorem algorithm approx bel max computes upper bound belief time exp space exp 
similarly bel min computes lower bound approx elim mean computes mean value 
algorithm approx bel max computes upper bound 
exact value available deriving bound bound may easy 
approx bel min derive lower bound resulting lower bound derive upper bound 
dechter related bucket elimination framework provides convenient succinct language express elimination algorithms areas 
algorithms widely known 
addition dynamic programming constraint satisfaction dechter pearl fourier elimination lassez mahler variations ideas algorithms probabilistic inference canning shachter shenoy zhang poole 
mini bucket approximation algorithms parallel consistency enforcing algorithms constraint processing particular enforcing directional consistency 
specifically relational adaptive consistency full bucket elimination algorithm approximations directional relational consistency enforces bounded levels consistency dechter van beek 
example denoting generic algorithm elim approx directional relational arc consistency drc corresponds elim approx directional path consistency drc corresponds elim approx 
mini bucket approximations heuristics search parallels pre processing local consistency prior backtrack search constraint solving 
propositional satisfiability original davis putnam algorithm davis putnam bucket elimination algorithm bounded bound dechter rish corresponds elim approx 
collection approximation algorithms sigmoid belief networks jaakkola jordan context recursive algorithm similar bucket elimination 
upper lower bounds derived approximating sigmoid functions gaussian functions 
approximation viewed singleton mini bucket algorithm gaussian functions replace min max operations applied mini bucket 
collection parameterized algorithms approximate bucket elimination algorithms 
basic idea partition bucket mini buckets order control complexity 
due generality bucket elimination framework algorithms approximations apply uniformly areas constraint optimization satisfiability probabilistic reasoning planning 
introduced algorithms context deterministic probabilistic inference tasks 
questions need investigated context proposal 
example probabilistic reasoning partitionings may result different accuracy determine partitioning 
questions investigated empirically hope yield domain independent heuristics 
rish commenting earlier version 
arnborg arnborg 
efficient algorithms combinatorial problems graphs bounded decomposability survey 
bit 

dynamic programming 
academic press 
canning canning thompson probability functions complex pedigrees 
advances applied probability 
davis putnam davis putnam 
computing procedure quantification theory 
journal association computing machinery 
dechter pearl dechter pearl 
networkbased heuristics constraint satisfaction problems 
artificial intelligence 
dechter rish dechter rish 
directional resolution davis putnam procedure revisited 
proceedings knowledge representation kr pages bonn germany 
dechter van beek dechter van beek 
local global relational consistency 
theoretical computer science preliminary version appears cp international conference principles practice constraint programming pp 

dechter dechter 
bucket elimination unifying framework probabilistic inference algorithms 
uncertainty ai uai pages 
jaakkola jordan jaakkola jordan 
recursive algorithms approximating probabilities graphical models 
advances neural information processing systems 
lassez mahler 
lassez mahler 
fourier algorithm linear constraints 
journal automated reasoning 
pearl pearl 
heuristics intelligent search strategies 
addison wesley 
robertson seymour robertson seymour 
graph minor xiii 
disjoint paths problem 
combinatorial theory series 
shenoy shenoy 
valuation systems bayesian decision analysis 
operations research 
shachter shachter 
dynamic programming influence diagrams 
ieee transactions systems man cybernetics 
zhang poole zhang poole 
exploiting causal independence bayesian network inference 
journal artificial intelligence research jair 
probabilistic reasoning probabilistic reasoning causal discovery 
