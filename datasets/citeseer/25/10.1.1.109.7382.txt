usenix association proceedings th symposium operating systems design implementation boston massachusetts usa december advanced computing systems association usenix association rights reserved information usenix association phone fax email office usenix org www www usenix org rights individual papers remain author author employer 
permission granted noncommercial reproduction educational research purposes 
copyright notice included reproduced 
usenix acknowledges trademarks 
fine grained network time synchronization broadcasts jeremy elson lewis girod deborah estrin department computer science university california los angeles girod cs ucla edu advances miniaturization low cost lowpower design led active research large scale networks small wireless low power sensors actuators 
time synchronization critical sensor networks diverse purposes including sensor data fusion coordinated actuation power efficient duty cycling 
clock accuracy precision requirements stricter traditional distributed systems strict energy constraints limit resources available meet goals 
broadcast synchronization scheme nodes send beacons neighbors physical layer broadcasts 
broadcast contain explicit timestamp receivers arrival time point comparing clocks 
measurements wireless implementations show removing sender nondeterminism critical path way produces high precision clock agreement sec shelf wireless ethernet minimal energy 
describe novel algorithm uses broadcast property federate clocks broadcast domains slow decay precision sec hops 
rbs external forming precise relative timescale maintain microsecond level synchronization external timescale utc 
show significant improvement network time protocol ntp similar conditions 
time synchronization critical piece infrastructure distributed system 
years ntp net time protocol kept internet clocks phase 
new class networks emerging 
advances miniaturization lowcost low power design led active research large scale networks small wireless low power sensors actuators 
networks require time synchronized precisely traditional internet applications order sec due close coupling physical world energy constraints 
example precise time needed measure time flight sound distribute beamforming array form low power tdma radio schedule integrate time series proximity detections velocity estimate suppress redundant messages recognizing duplicate detections event different sensors :10.1.1.117.1253
addition domain specific requirements sensor network applications rely synchronization typical distributed systems secure cryptographic schemes coordination action ordering logged events system debugging forth 
network synchronization algorithms proposed years share basic design server periodically sends message containing current clock value client 
explores form time synchronization differs traditional model 
fundamental property design synchronizes set receivers opposed traditional protocols senders synchronize receivers 
scheme nodes periodically send beacon messages neighbors network physical layer broadcast 
recipients message arrival time point comparing clocks 
message contains explicit timestamp important exactly sent 
call scheme broadcast synchronization rbs 
measurements wireless implementations show removing sender nondeterminism critical path way results dramatic improvement synchronization ntp 
algorithm allows time propagated broadcast domains losing broadcast property 
way nodes multi hop network form highly precise relative timescale maintain microsecond level synchronization external timescale utc 
significant limitation rbs requires network physical broadcast channel 
example networks employ point topoint links 
applicable wide range applications wired wireless networks broadcast domain exists higher precision synchronization required ntp typically provide 
organization follows review related section 
section describe design traditional time synchronization protocols detail contrast rbs design philosophy 
section describe basic building blocks rbs including estimation phase offset clock skew 
empirical data wireless implementations single hop rbs 
section novel algorithm extending rbs broadcast domains slow precision decay 
describe empirical results multi hop rbs implementation 
section describe applications research groups rbs 
offer describe plans section 
related landmark computer clock synchronization lamport elucidates importance virtual clocks systems causality important absolute time 
lamport focused giving events total order quantifying time difference emerged important influence sensor networks 
sensor applications require relative time example timing propagation delay sound absolute time may needed 
years protocols designed maintaining synchronization physical clocks computer networks 
protocols basic features common simple connection messaging protocol exchange clock information clients servers methods mitigating effects nondeterminism message delivery processing algorithm client updating local clocks information received server 
differ certain details network kept internally consistent synchronized external standard server considered canonical clock merely arbiter client clocks 
mills ntp stands virtue scalability self configuration large multi hop networks robustness failures sabotage ubiquitous deployment 
ntp allows construction hierarchy time servers multiply rooted canonical sources external time 
synchronization external timescale typically provided global positioning system gps constellation satellites operated department defense 
commercial gps receivers achieve accuracy better nsec relative utc 
gps requires clear sky view unavailable application areas example inside buildings beneath dense foliage underwater mars enemy lines gps 
addition receivers require minutes settling time may large costly high power justify small cheap sensor node 
closely related system foundations described ver rodrigues broadcast synchronization described mock 
systems inherent properties broadcast media achieve superior precision 
methods require nodes lie single broadcast domain multiple domains federated depending band common view time gps 
contrast rbs incorporates novel multi hop algorithm section show maintain tight time synchronization hops wireless network external infrastructure support 
addition fully decoupled sender receiver synchronizing receivers relating timescale external timescale utc 
retains dependence relationship sender receiver synchronizing nodes utc 
liao describe system synchronizing interfaces system area network myrinet microsecond accuracy 
precision bound system similar results depend underlying network offers latency determinism guarantees fixed topologies 
contrast scheme works broader class networks wider area require tight coupling sender network interface 
similarly berkeley mote hardware hill report sec precision receivers single broadcast domain report sec hop precision multiple hops :10.1.1.117.697
results achieved tightly integrating mac application building deterministic bit detector mac layer 
rbs require application collapsed mac shown section commodity hardware 
complementary focus building deterministic detectors making best existing detectors 
leveraging hill sec precision bit detector rbs achieve times precision scheme sec jitter budget analysis 
traditional synchronization methods discussing rbs detail describe existing time synchronization protocols typically usual sources error 
synchronization protocols exist share basic design server periodically sends message containing current clock value client 
simple oneway message suffices typical latency server client small compared desired accuracy 
common extension client request followed server response 
measuring total roundtrip time packets client estimate way latency 
allows accurate synchronization accounting time elapses server creation timestamp client reception 
ntp ubiquitously adopted protocol internet time synchronization exemplifies design 
sources time synchronization error enemy precise network time synchronization non determinism 
latency estimates confounded random events lead asymmetric round trip mes sage delivery delays contributes directly synchronization error 
better understand source errors useful decompose source message latency 
kopetz characterize having distinct components send time time spent sender construct message 
includes kernel protocol processing variable delays introduced operating system context switches system call overhead incurred synchronization application 
send time accounts time required transfer message host network interface 
access time delay incurred waiting access transmit channel 
specific mac protocol 
contention macs ethernet wait channel clear transmitting retransmit case collision 
wireless rts cts schemes networks require exchange control packets data transmitted 
tdma channels require sender wait slot transmitting 
propagation time time needed message transit sender receivers left sender 
sender receiver share access physical media neighbors ad hoc wireless network lan time small simply physical propagation time message media 
contrast propagation time dominates delay wide area networks includes queuing switching delay router message transits network 
receive time processing required receiver network interface receive message channel notify host arrival 
typically time required network interface generate message reception signal 
arrival time timestamped low level host operating system kernel inside network driver interrupt handler receive time include overhead system calls context switches transfer message network interface host 
existing time synchronization algorithms vary primarily methods estimating correcting sources error 
example cristian observed performing larger numbers request response experiments trial encounter random delays 
trial occurs easily identifiable shortest round trip time 
ntp filters data variant heuristic 
scheme takes different approach reducing error 
estimating error exploit broadcast channel available physical layer networks remove possible critical path 
contributions stem observation message broadcast physical layer arrive set receivers little variability delay 
send time access time may unknown highly variable message message nature broadcast dictates particular message quantities receivers 
observation ver rodrigues central system 
fundamental property broadcast synchronization broadcast message synchronize set receivers contrast traditional protocols synchronize sender message receiver 
doing removes send time access time critical path shown 
significant advantage synchronization lan send time access time typically biggest contributors nondeterminism latency 
mills attributes phase error seen synchronizing ntp client workstation gps receiver lan sec sec study factors ethernet jitter collisions 
counteract effects rbs broadcast relative time communicate absolute time value 
exactly property eliminates error introduced send time access time receiver synchronizing packet definition injected physical channel instant 
message contain timestamp generated sender important exactly sent 
fact broadcast need dedicated packet 
extant broadcast recover timing information example arp packets ethernet broadcasted control traffic wireless networks rts cts exchanges route discovery packets 
characterizing receiver error previously described sources latency sending message 
send time access time dependent factors instantaneous load sender cpu network 
nondeterministic difficult estimate 
described rbs eliminates effect error sources altogether remaining factors propagation time receive time 
purposes consider propagation time effectively 
propagation speed electromagnetic signals air close cop wire lan ad hoc network span ning tens feet propagation time tens nanoseconds contribute significantly sec scale error budget 
sensor networks error budget driven need sense phenomena sound move slowly rf pulse synchronize observers 
addition rbs sensitive difference propagation time pair receivers depicted 
length bit gives idea receive time 
receiver interpret message synchronized incoming message bit time 
latency due processing receiver electronics irrelevant long deterministic scheme sensitive differences receive time messages set receivers 
addition system clock easily read interrupt time packet received removes delays due receiver protocol processing context switches interface transfer critical path 
verify assumptions expected receiver error turned laboratory wireless sensor network testbed 
specifically tested berkeley mote stamp sized narrowband radio sensor platform developed pister berkeley :10.1.1.42.1521
motes minimal event operating system developed hill specifically hardware platform called tinyos :10.1.1.117.697:10.1.1.117.1253
programmed motes raise gpio pin high packet arrival attached signal outputs external logic analyzer recorded time packet reception events 
additional mote emitted broadcast packets convenient rule thumb nsec foot 
important consider effects intentional nondeterminism part receiver aggregation packets queue raising interrupt 
sender receiver time nic critical path sender receiver receiver nic critical path critical path analysis traditional time synchronization protocols left rbs right 
traditional protocols working lan largest contributions nondeterministic latency send time sender clock read delivery packet nic including protocol processing access time delay nic channel free 
receive time tends smaller send time clock read interrupt time protocol processing 
rbs critical path length shortened include time injection packet channel clock read 
number trials pairwise difference packet reception time usec histogram showing distribution phase offsets recorded broadcast packets grouped sec buckets 
curve plot best fit gaussian parameters 
sec confidence course minutes random inter packet delays ranging msec seconds 
pulse transmitted computed difference pulse packet reception time possible pairings receivers 
pulses lost receivers due normal vagaries rf links 
total pairings computed 
histogram showing distribution receivers phase offsets shown 
maximum phase error observed trial sec 
mote radios operate baud bit time sec 
correspondence supports reasoning receiver jitter greater single bit time long receiver electronics deterministic delay packet reception host notification 
phase offset distribution appears gaussian test indicates confidence best fit parameters sec 
useful reasons 
see sections behaved distribution enables significantly improve error bound statistically sending multiple broadcast packets 
addition gaussian receivers easy model realistically numeric analyses 
facilitates quick experimentation different algorithms scenarios systematic exploration impractical examining effects scale 
broadcast synchronization far characterized determinism receiver hardware 
turn question receiver achieve best possible clock synchronization 
note research encompass question build deterministic receiver 
best answered design 
plans forthcoming revisions mote tinyos reported include better phase lock receiver incoming message 
ask synchronize clocks receiver 
precision achieve related receiver jitter 
section build basic rbs algorithm nodes single broadcast domain 
applying rbs multihop networks considered section 
consider rbs estimate relative phase offsets group receivers 
describe slightly complex scheme corrects clock skew 
describe implementation rbs berkeley motes commodity hardware quantify performance rbs vs ntp 
describe combination may achieve post facto synchronization 
estimation phase offset simplest form rbs broadcast single pulse receivers allowing estimate relative phase offsets 

transmitter broadcasts packet receivers 

receiver records time received local clock 

receivers exchange observations 
single broadcast receivers sufficient information form local relative timescale 
global absolute timescales utc important see section rbs extended provide 
section consider construction local timescales sufficient sensor network applications 
example node position detects target time position detects conclude target moving north units second 
comparison require absolute time synchronization broadcast possible compare time event observed observed performance scheme closely related factors 
number receivers wish synchronize 
assumed collaborative applications require synchronization nodes simultaneously 
set grows likelihood increases poorly synchronized 
define group prototype implementation sets local clock broadcasts provides library function timestamp conversion 
convert time value generated local clock value generated node clock time vice versa 
dispersion maximum phase error pairs receivers group 

nondeterminism underlying receiver discussed section 
clock skew receivers oscillators tick different rates 
single provide instantaneous synchronization 
immediately afterward synchronization degrade clocks drift apart 
precision decay time elapses synchronization pulse event interest 
typical crystal oscillators accurate order part nodes clocks drift sec second 
see section clock skew estimated 
assume moment know clock skew corrected 
consider required correct nondeterminism receiver 
recall empirically observed mote receiver error gaussian 
increase precision synchronization statistically sending 
transmitter broadcasts packets 

receivers records time observed local clock 

receivers exchange observations 

receiver compute phase offset receiver average phase offsets implied pulse received nodes number receivers number broadcasts tr clock received broadcast offset tj ti 
basic scheme account clock skew feature added implementable real hardware 
turned numeric simulation receiver model derived empirically section 
trial nodes random clock offsets 
pulse transmission times selected random 
pulse delivered receiver timestamping receiver clock including random error matching gaussian distribution parameters shown 
offset matrix computed equation 
computed offsets compared real offsets maximum difference considered group dispersion 
performed analysis values 
value performed trials calculated mean group dispersion standard deviation mean 
results shown 
numeric simulation suggests simplest case receivers lower curve broadcasts improve precision sec sec reach point diminishing return 
group receivers dispersion reduced sec 
shows view dataset receiver group sizes 
view shows larger numbers broadcasts significantly mitigate effect larger group size precision decay 
estimation clock skew far described method estimating phase offset assuming clock skew nodes clocks running rate 
course realistic assumption 
complete description crystal oscillator behavior scope approximation important characteristics oscillator accuracy agreement oscillator expected actual frequencies 
difference frequency error maximum usually specified manufacturer 
crystal oscillators consumer electronics accurate part stability oscillator tendency stay frequency time 
frequency stability subdivided short term long term frequency stability 
short term instability primarily due environmental factors variations temperature supply voltage shock 
long term instability results subtle effects oscillator aging 
sec expected average result single pulse delivered receivers standard deviation inter receiver phase error section analysis 
topic pointers comprehensive bibliography 
phase difference nodes clocks change time due frequency differences oscillators 
basic algorithm described earlier physically realizable extension takes account time needed observe pulses phase error clocks changed 
complex disciplines exist lock oscillator phase frequency external standard 
selected simple effective algorithm correct skew 
averaging phase offsets multiple observations shown equation perform squares linear regression 
offers fast closed form method finding best fit line phase error observations time 
frequency phase local node clock respect remote node recovered slope intercept line 
course fitting line data implicitly assumes frequency stable phase error changing constant rate 
mentioned earlier frequency real oscillators change time due example environmental effects 
general network time synchronization algorithms ntp correct clock phase oscillator frequency error try model frequency instability 
frequency adjustments continuously window observations relating local oscillator 
prototype rbs system similar models oscillators having high short term frequency stability ignoring data minutes old 
implementation berkeley motes test algorithms built prototype rbs system berkeley motes described section 
configuration tested motes periodically broadcasted pulse sequence number 
sec resolution clock timestamp reception times incoming broadcasts 
performed line analysis data 
shows results typical experiment automatic rejection outliers described 
point difference times nodes reported receiving broadcast plotted timescale defined node clock 
tr clock received broadcast receiver group usec number broadcasts receiver group dispersion usec number broadcasts number nodes analysis expected group dispersion maximum pairwise error broadcast synchronization 
point represents average simulated trials 
underlying receiver assumed report packet arrivals error conforming distribution 
mean group dispersion standard deviation mean receiver bottom receiver top group 
view dataset receivers inclusive 
phase offset usec time sec fit error usec phase offset usec time sec analysis clock skew effect rbs 
point represents phase offset nodes implied value clocks receiving broadcast 
node compute fit observations diagonal lines convert time values clock peer 
synchronization mote internal clock 
vertical impulses read respect axis show distance point best fit line 
synchronization clocks pc compatible single mote nic 
points near pulses show synchronization error sec seconds sync pulse 
pulse received receivers plot tr tr tr visualization purposes data normalized pulse occurs 
diagonal line drawn points represents best linear fit data line minimizes rms error 
vertical impulses read respect right hand axis show distance point best fit line 
residual error rms distance point fit line gives idea quality fit 
reject outliers discarding point contributes total error error greater threshold 
experiment rms error sec 
systematic study rbs synchronization error described sections 
slope best fit line defines clock skew measured receiver clock 
see example oscillators drifted sec seconds line intercept defines initial phase offset 
combined sufficient information convert time value generated clock value generated clock time 
see section may external standard utc 
internally consistent mapping useful sensor network saw section 
second test configuration motes network interfaces stand nodes 
motes connected baud serial link pc single board computers running linux operating system 
sense problem difficult extending path receiver mote clock synchronized linux 
modified linux kernel timestamp serial port interrupts allowing accurately associate complete air messages kernel timestamps 
second test shown mote nic sent broadcasts receivers minutes 
reception timestamped linux kernel 
minute silence injected pulses pc parallel port pulses appear right 
computed line mote nic pulses automatic outlier rejection 
sec residual error estimate pulses 
commodity hardware implementation performance rbs berkeley motes encouraging 
reasonable wonder success due algorithm simply fact implemented tightly integrated radio processor platform 
addition curious relative performance rbs ntp 
answer questions provide rbs platform generally available users implemented rbs unix daemon udp datagrams motes 
commodity hardware platform part testbed strongarm compaq ipaqs lucent technologies mbit wireless ethernet adapters 
ipaqs run familiar linux distribution linux kernel 
test wireless ethernet adapters connected wireless base station 
comparison fair possible implemented rbs constraints ntp pure application special kernel hardware support special knowledge mac layer supports broadcasts 
ntp www familiar org linux rbs daemon uses udp datagrams sent received berkeley socket interface 
packet reception times recorded standard gettimeofday library function underlying system call 
daemon records time learning new packet arrived unblocked select call 
ipaq clock resolution sec 
rbs daemon simultaneously acts sender receiver roles 
seconds slightly randomized avoid unintended synchronization daemon emits pulse packet sequence number sender id daemon watches packets arrive timestamps periodically sends report timestamps back pulse sender receiver id pulse sender collects pulse reception reports computes clock conversion parameters pair nodes heard broadcasts 
parameters broadcast back local neighbors 
rbs daemons receive parameters available users 
rbs sets nodes clocks provides user library converts node id 
clock conversion parameters slope intercept square linear regression similar examples shown 
regression window pulse reception reports 
practice small number pulses outliers gaussian mode shown due random events concurrent serial ethernet interrupts 
outliers automatically rejected adaptive threshold equal times median fit error set points rejected 
early versions traditional approach standard deviation sensitive gross outliers 
remaining points iteratively re fit outlier threshold recomputed points rejected 
half points rejected outliers fit fails 
test synchronization accuracy connected gpio output ipaqs external logic analyzer 
analyzer programmed report time difference pulses seen input channels 
wrote linux kernel module accepts target pulse time application emits gpio pulse local clock indicates target time arrived 
implementing service inside kernel interrupts disabled shortly target time arrives virtually phase error gpio pulse node clock 
words kernel module ensures error pulses seen logic ana entirely due nodes clock synchronization error artifact test 
kernel module purely facilitates testing help synchronization ntp rbs 
experimental framework tested different synchronization schemes rbs broadcast synchronization 
third ipaq pulse sender facilitate synchronization test systems 
ntp test 
ntp standard ntp package version ported ipaqs 
program achieve gross synchronization 
daemon run configured send synchronization packets seconds maximum frequency allows 
clients allowed synchronize lab stratum ntp server hours high sampling frequency test began 
ntp server wired side network accessed wireless base station 
ntp offset test rbs potentially unfair advantage ntp 
ntp maintains continuous estimate local clock phase error respect clock limits rate willing correct error 
meant prevent user applications seeing large frequency excursions discontinuities timescale 
initial rbs implementation restriction 
test evaluates phase error give weight frequency stability favor rbs 
eliminate possible advantage created ntp offset synchronization 
similar ntp method trial test application queried ntp daemon program current estimate local clock phase error 
value subtracted test pulse time 
synchronization schemes tested different traffic scenarios light network load network little background traffic minimal load generated synchronization scheme 
heavy network load additional ipaqs configured traffic generators 
ipaq sent series randomly sized udp datagrams picked uniformly bytes ip fragmentation required larger packets 
inter packet delay msec 
crosstraffic entirely third parties source destination traffic synchronization servers systems test 
average aggregate offered load cross traffic approximately mbit sec 
test scenarios consisted trials second delay trial total test time minutes scenario 
results shown 
light traffic scenario rbs performed times better ntp average sec error compared sec ntp 
rbs trials error sec better compared sec bound ntp trials 
sec error seen rbs implementation due jitter software code path network stack time required schedule daemon system calls determine current time 
see section significantly better precision achieved packet timestamps acquired inside kernel network interrupt handler 
heavy traffic scenario difference dramatic 
discussed section ntp adversely affected path asymmetries confound latency estimate 
network heavy load far medium access delay different trip ntp server 
rbs contrast dependence exact time packets sent variable mac delays effect 
ntp suffered fold degradation precision average sec sec rbs completely unaffected average sec sec 
slight degradation rbs performance due packet loss reduced number broadcast pulses available comparison peers 
instances rbs phase excursion observed packet containing clock parameter update lost forcing clients continue aging data 
surprisingly ntp offset method uniformly performed poorly plain ntp 
cause clear suspect due inter packet jitter mac 
low pass filter built ntp clock discipline algorithm better suited model high jitter network responsive online phase estimator 
cumulative error probability rbs ntp ntp offset synchronization error light network load error usec cumulative error probability rbs ntp ntp offset synchronization error heavy network load error usec network load synchronization mean error std dev bound bound bound light rbs light ntp light ntp offset heavy rbs heavy ntp heavy ntp offset synchronization error rbs ntp compaq ipaqs mbit network 
clock resolution sec 
units sec 
ntp offset uses ntp disciplined clock correction ntp instantaneous estimate phase error unexpectedly correction led poorer synchronization 
rbs performed times better ntp lightly loaded network 
heavily loaded network ntp degraded factor rbs virtually unaffected 
rbs kernel timestamps previous section described performance rbs implemented application 
provided fair comparison ntp 
practical testbed give rbs additional advantage packet timestamps acquired network interface interrupt handler 
timestamping packet transferred nic significantly reduces jitter standard feature linux kernel 
metadata accessible reading packets lbnl packet capture library libpcap usual socket interface 
kernel timestamps performance rbs improved considerably sec see sec user space implementation 
believe result primarily limited sec clock resolution ipaq finer precision achieved finer resolution clock 
hope try rbs platform example pentium tsc counter runs frequency processor core ghz 
application post facto synchronization sensor network nodes wireless unattended finite energy dominating factor design 
feasible keep processor radio powered continuously 
deep sleep confounds traditional protocols ntp keep clock synchronized times 
previously proposed post facto synchronization 
scheme nodes normally stay low power state unsynchronized clocks event interest occurs 
event clocks reconciled 
prevents energy wasted achieving unnecessary synchronization 
interesting facet rbs clock skew estimator effective form post facto synchronization 
event interest nodes power radios exchange sync pulses line relates nodes clocks computed satisfactorily rms error fallen threshold 
experiment shown suggests line precisely extrapolate backwards estimating phase offset time past event occurred 
summary advantages rbs far built basic rbs algorithm showing broadcasts relate set receivers clocks 
time estimate relative phase skew 
berkeley motes rbs synchronize clocks sec relatively slow baud radios 
commodity hardware compaq ipaqs mbit sec network achieved synchronization sec times better ntp conditions 
kernel timestamps precision nearly reached clock resolution sec 
advantages rbs include largest sources nondeterministic latency removed critical path broadcast channel synchronize receivers 
results significantly better precision synchronization algorithms measure round trip delay 
multiple broadcasts allow tighter synchronization residual errors tend follow behaved distributions 
addition multiple broadcasts allow estimation clock skew extrapolation past phase offsets 
enables post facto synchronization saving energy applications need synchronized time infrequently unpredictably 
outliers lost packets handled gracefully best fit line drawn points missing 
rbs allows nodes construct local timescales 
useful sensor networks applications need synchronized time may absolute time available 
absolute time synchronization achieved describe section 
primary shortcoming rbs described far synchronize set nodes lie single physical layer broadcast domain 
address limitation section 
simple topology multi hop time synchronization required 
nodes send sync pulses establishing locally synchronized neighborhoods 
receiver hears relate nodes neighborhood 
multi hop time synchronization rbs described broadcasts coordinate set receivers lie single broadcast domain 
natural question arises technique extended coordinate receivers span larger single broadcast 
example extent wireless sensor networks usually larger broadcast range single node 
traditional lans broadcast domain ethernet limited lans interconnected routers bridges gateways propagate broadcasts physical layer 
scenarios extension basic rbs synchronize group nodes lie range single broadcast 
consider example topology shown 
nodes send sync pulse 
hear heard receivers 
receivers neighborhood heard sync pulse relate clocks described previous sections 
notice receiver unique position hear sync pulses allows receiver relate clocks neighborhood clocks 
multihop clock conversion illustrate conversion works imagine wish compare times events occurred opposite ends network near receivers 
nodes send synchronization pulses times pa pb 
say receiver observes event seconds hearing pulse pa 
receiver observes event time pb 
nodes consult receiver learn pulse occurred seconds pulse pa pb 
set constraints pa pb pa pb example possible establish global timescale events intersection receivers 
technique propagating timing information benefits single hop case 
traditional solution multi hop problem nodes re broadcast timing message previously received 
contrast technique depends temporal relationship sender receiver 
single hop case removing nondeterministic senders critical path reduces error accumulated hop show section 
simplicity example spoke sending pulse naturally phase skew relationship receivers neighborhood determined precisely larger number pulses described section 
take advantage information rbs prototype literally compare pulse reception times suggested constraints equations 
performs series timebase conversions best fit lines relate logically adjacent receivers 
adopting notation ei mean time event receiver clock state multihop algorithm precisely 
receivers observe events times respectively 

uses broadcasts establish best fit line needed converting clock values 
line convert 

similarly uses broadcasts convert 

time elapsed events computed 
algorithm conceptually simpler version 
timebase conversion implicitly includes correction skew nodes 
time routing multihop networks single gateway node designated converting timestamps neighborhood timebase 
practice designation necessary desirable 
straightforward compute time route dynamically determine series nodes time converted reach desired final timebase 
consider network topology 
nodes represent sync pulse senders numbered nodes receivers 
distinction senders receiver roles purely illustrative reality node play roles 
pulse sender creates neighborhood nodes known phase offsets virtue having received pulses common source 
relationships visualized nodes known clock relationships joined graph edges 
path graph represents series timebase conversions 
example compare time transforming 
possible find series conversions automatically simply performing shortest path search graph 
addition weights graph edges represent quality conversion example residual error rms linear fit broadcast observations 
minimum error conversion nodes weighted shortest path search dijkstra bellman ford 
course shortest path algorithms scale large networks due dependence global information 
precedent systems internet early link state routing algorithms localized approach needed method scale 
interesting alternative time conversion built extant packet forwarding mechanism 
nodes perform successive time conversions packets forwarded node node keeping time respect local clock hop 
technique suggested emer attractive requires local computation communication 
flooding clock conversion parameters globally distributed tightly scoped broadcast 
addition quality complex hop multihop network topology 
physical topology 
beacons nodes transmit radii indicated larger shaded areas broadcast neighbors numbered nodes 
logical topology 
edges drawn nodes received common broadcast information relate clocks 
receivers share logical links receptions common 
time synchronization link incorporated link metric routing algorithm ensuring routing completely orthogonal quality time conversions available 
measured performance multihop rbs multihop topology series timestamp conversions required described previous section conversion step introduce synchronization error 
consider cumulative effects errors path length grows 
saw section synchronization error introduced broadcast gaussian 
addition hop contributions error independent phase skew estimates hop different set broadcasts 
expect total path error sum independent gaussian variables follow gaussian distribution 
average hop error path expect average path error hop path bound pleasing grows slowly implies synchronize nodes hops significant decay precision 
tested precision multihop rbs ipaq testbed described section including kernel packet timestamping discussed section 
configured ipaqs linear variance identity var var var variance hops mean error std dev top topology test cumulative error rbs multihop network 
bottom measured performance multihop rbs kernel timestamping ipaqs mbit sec 
units sec 
ogy alternating numbered receivers beacon emitters shown 
receiver hear nearest sender left right 
test procedure described section trials ipaqs commanded raise gpio pin high time 
logic analyzer reported actual time differences 
tested hop hop hop hop conversion testing rise time difference nodes respectively 
results shown generally follow estimate 
average hop error sec nearly normalizing average hop error 
synchronization external timescales far spoken entirely creating local internally consistent timescales 
relative synchronization sufficient applications require absolute time measured external utc 
timescales typically distributed sponsored radio systems short wave station satellite global positioning system 
commercially available receivers systems synchronize computers providing pps pulse second signal second 
seconds numbered band serial port 
rbs provides natural precise way synchronize network external timescale 
example consider gps radio receiver connected nodes multihop network 
gps time simply node network attached edge host node 
pps output receiver treated exactly normal broadcasts 
host node timestamps pps pulse compares timestamp pulse true gps time 
phase skew host node clock relative gps time recovered algorithms described section 
nodes gps time finding multihop conversion route host node algorithm described section 
application experience date rbs implementation applied research group distributed sensor network applications requiring time synchronization 
uses clocks precisely measure arrival time acoustic signals 
audio codecs sample channel khz sec sample 
seen previous sections precision nominally achieved rbs significantly better 
distributed acoustic sensors able correlate acoustic time series individual samples 
useful number contexts 
group developed implemented localization service berkeley motes acoustic time flight ranging 
set ipaqs set room establish positions relatively coordinate system ranging 
ipaq emits audible chirp encoded sequence 
ipaqs run matched filter incoming audio data find audio sample indicating arrival chirp 
rbs corrections applied convert equivalent sample number sender timebase allowing time flight range computed 
startup phase complete acoustic motes specially equipped small amplifiers speakers periodically emit similar chirp ipaqs region compute ranges mote localize 
case rbs synchronize motes system 
special mote physically attached ipaq provides translations mote ipaq time domains 
merrill describe rbs implementation distributed wireless embedded system capable autonomous position location accuracy order cm 
system built auspices darpa shm program field tested fort leonard wood missouri configurations nodes 
application notable represents third hardware radio platform rbs successfully implemented 
wins ng node hitachi sh processor running linux 
node low power kbit sec hybrid tdma fhss radios rs serial interface host processor 
implementation firmware radio opaque making schemes rely tricks mac layer impossible 
blind beamforming acoustic signals studied yao number years 
group previously restricted empirical studies centralized systems platform capable synchronizing distributed audio sampling sufficient precision 
wang reported experience building distributed beam forming application ipaqs rbs daemon 
explored form time synchronization broadcast synchronization provides precise flexible resource efficient net time synchronization traditional algorithms 
fundamental property design synchronizes set receivers opposed traditional protocols senders synchronize receivers 
addition novel multi hop algorithm allows fundamental property maintained broadcast domains 
scheme nodes periodically send beacon messages neighbors network physical layer broadcast 
recipients message arrival time point comparing clocks 
message contains explicit timestamp important exactly sent 
rbs number properties attractive 
broadcast channel synchronize receivers largest sources nondeterministic latency removed critical path 
results significantly better precision synchronization algorithms measure round trip delay 
residual error behaved distribution gaussian allowing improvement sending multiple broadcasts 
extra information produces significantly better estimates relative phase frequency allows graceful degradation presence outliers lost packets 
rbs clock skew estimate supports extrapolation past phase offsets 
enables nodes synchronize post facto saving energy applications need synchronized time infrequently unpredictably 
quantitative study compared rbs implementation carefully tuned installation ntp 
ipaq pdas wireless ethernet 
average synchronization error rbs sec times better ntp lightly loaded network 
heavily loaded network degraded ntp performance factor little effect rbs 
kernel timestamping hints rbs achieved average error sec expect limited ipaq sec clock resolution 
multihop scheme allows locally coordinated timescales federated global timescale broadcast domains 
precision decays slowly average error hop network proportional test kernel assisted rbs hop topology average synchronization error sec 
rbs federated timescales may referenced external standard utc node access source time 
implemented rbs variety hardware platforms proven robust reliable performance measurement support real applications 
done 
important scaling issues explored automatic dynamic election set nodes act beacon senders 
multiple beacon senders single neighborhood rbs redundant information improve precision quickly reaches point diminishing return system better conserving bandwidth 
understand just extra precision afforded redundancy 
addition fully quantify number performance questions precision vs bandwidth beacons frequency minimum time acquire synchronization precision bound post facto synchronization precision vs time elapsed event pulses precision different data filtering algorithms 
quantify performance rbs external utc synchronization multiple hops vs ntp topology 
confident techniques widely applicable experience berkeley motes running tinyos linux ipaqs pcs radios 
quirks taught important lessons rbs experience rbs wider range hardware platforms network interfaces operating environments applications 
collaborators sensor network community research interests require precise time synchronization collaborative signal processing acoustic ranging object tracking coordinated actuation forth 
look forward evaluating utility rbs support applications 
acknowledgments possible support darpa nest program project 
additional support provided university california micro program number matching funds intel 
authors indebted support feedback 
members ucla laboratory anonymous reviewers osdi shepherd eric brewer provided insightful comments significantly improved research 
akyildiz su 
wireless sensor networks survey 
computer networks march 
asada dong lin pottie kaiser 
wireless integrated network sensors low power systems chip 
proceedings european solid state circuits conference 

time frequency services national bureau standards alternatives improvement 
journal electronics telecommunications engineers jan 
alberto cerpa jeremy elson deborah estrin lewis girod michael hamilton jerry zhao 
habitat monitoring application driver wireless communications technology 
proceedings acm sigcomm workshop data communications latin america caribbean april 
available www isi edu scadds papers oct final ps 
cristian 
probabilistic clock synchronization 
distributed computing 
jeremy elson deborah estrin 
time synchronization wireless sensor networks 
proceedings th international parallel distributed processing symposium ipdps 
ieee computer society april 
ram kumar mani srivastava 
network wide time sensor networks 
technical report university california dept electrical engineering 
lewis girod vladimir jeremy elson deborah estrin 
locating tiny sensors time space case study 
proceedings international conference computer design iccd freiburg germany september 
cs ucla edu publications 
lewis girod deborah estrin 
robust range estimation acoustic multimodal sensing 
proceedings ieee rsj international conference intelligent robots systems iros march 

accuracy clock synchronization achieved tempo berkeley unix bsd 
ieee transactions software engineering 
jason hill david culler :10.1.1.117.697
wireless embedded sensor architecture system level optimization 
technical report berkeley 
jason hill robert szewczyk alec woo seth hollar david culler pister :10.1.1.117.697:10.1.1.117.1253
system architecture directions networked sensors 
proceedings ninth international conference architectural support programming languages operating systems asplos ix pages cambridge ma usa november 
acm 
chalermek intanagonwiwat ramesh govindan deborah estrin :10.1.1.117.1253
directed diffusion scalable robust communication paradigm sensor networks 
proceedings sixth annual international conference mobile computing networking pages boston ma august 
acm press 
iso iec 
ieee standard 
ieee standard information technology iso iec 
kahn katz pister :10.1.1.42.1521
century challenges mobile networking smart dust 
proceedings fifth annual acm ieee international conference mobile computing networking pages 
elliott kaplan editor 
understanding gps principles applications 
artech house 
kopetz 
global time distributed real time systems 
technical report technische universit wien 
leslie lamport 
time clocks ordering events distributed system 
communications acm 
cheng liao margaret martonosi douglas clark 
experience adaptive globally synchronizing clock algorithm 
eleventh annual acm symposium parallel algorithms architectures spaa pages new york june 

timing performance various gps receivers 
proceedings joint meeting european frequency time forum ieee international frequency control symposium pages april 
steven mccanne van jacobson 
bsd packet filter new architecture user level packet capture 
usenix association editor proceedings winter usenix conference january san diego california usa pages berkeley ca usa winter 
usenix 
william merrill lewis girod jeremy elson kathy william kaiser 
autonomous position location distributed embedded wireless systems 
proceedings ieee cas workshop wireless communications networking pasadena ca september 
www com publications html 
metcalfe boggs 
ethernet distributed packet switching local computer networks 
communications acm january 
david mills 
internet time synchronization network time protocol 
yang anthony marsland editors global states time distributed systems 
ieee computer society press 
david mills 
precision synchronization network clocks 
acm computer comm 
review april 
david mills 
adaptive hybrid clock discipline algorithm network time protocol 
ieee acm transactions networking october 
mock 
continuous clock synchronization wireless real time applications 
th ieee symposium reliable distributed systems srds pages washington brussels tokyo october 
ieee 
kay mer 
time synchronization ad hoc networks 
proceedings mobihoc long beach ca oct 
rubin 
message delays fdma tdma communication channels 
ieee trans 
com may 
srikanth sam toueg 
optimal clock synchronization 
acm july 
paulo ver luis rodrigues 
posteriori agreement fault tolerant clock synchronization broadcast networks 
pradhan editor proceedings nd annual international symposium fault tolerant computing ftcs page boston ma july 
ieee computer society press 
paulo ver luis rodrigues antonio 
precise accurate global time service large scale systems 
tech 
rep nav tr universidade de lisboa 
john 
quartz frequency standards 
technical report tr army research laboratory electronics power sources directorate october 
available www ieee org quartz htm 
wang yip maniezzo chen hudson elson yao 
wireless time synchronized cots sensor platform part ii applications beamforming 
proceedings ieee cas workshop wireless communications networking pasadena ca september 
cs ucla edu publications 
yao hudson reed chen 
blind beamforming randomly distributed sensor array system 
ieee journal selected areas communications oct 
