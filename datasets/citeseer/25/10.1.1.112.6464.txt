personalize web rob barrett paul maglio daniel ibm almaden research center harry road san jose ca barrett almaden ibm com agents personalize impersonal computational systems 
world wide web presents appearance user regardless user past activity 
web browser intelligence wbi pronounced web ee implemented system organizes agents user workstation observe user actions proactively offer assistance modify web documents perform new functions 
wbi annotate hyperlinks network speed information record pages viewed access provide shortcut links common paths 
way wbi user web experience joining personal information global information effectively tailor user sees 
keywords agents world wide web user models 
goal networked computing provide users access world vast information resources 
trend single global database clearly shows potential world wide web 
tens thousands institutions hundreds millions pages information simple means authoring simple means access combined web place find information just topic 
way describe web say information resource equally proximate user 
simply specify universal resource locator url hosting machine deliver page picture sound video workstation seconds 
method information access fundamentally changing way people handle think information 
urls information equally available user 
prospect having pages close hand staggering hypertext simplifies access huge information repository 
web authors arrange information directed graphs link related pages 
way hypertext reduces user decision space choice millions urls choice tens hyperlinks particular page 
hypertext transforms large number pages logically proximate accessibility space pages practically closer 
put differently web combines universal proximity urls tractable accessibility hypertext 
view clear accessibility information completely impersonal 
user sees web connected way 
web authors build structure web interests concerns tastes users rely structure 
overcome impersonal feel web browser software generally provides hot lists bookmarks allow users record urls quick access 
lists urls web personal pulling certain web pages closer individual users enabling easier access 
add personal structure impersonal structure web 
course users go author home pages provide launching points web access 
addition browsers generally configured automatically start particular page loaded 
creating hot lists home pages setting start pages steps individual users take personalizing web 
impersonal organization information web negative consequences users 
survey pitkow main problems people report web slow network connection speeds able find particular pages able manage organize retrieved information able visualize 
problem technical issues modem speed results perception information equally proximate 
network delays routinely slow user access particular information sources perceived logical proximity information correspond actual time needed obtain information 
second third problems result users having manually manage personal information 
fourth problem results impersonal organization wbi wbi stands user web browser web monitoring editing generating documents 
web believe problems solved providing automatic mechanisms tailor web individual users 
describe fully implemented system web browser intelligence wbi pronounced web ee automatically web agent technology 
wbi provides architecture taps communication stream user web browser web 
small programs agents attach stream observe data flowing stream alter data flows past 
agents learn user influence user sees marking pages passing provide entirely new functions user web browser 
follows describe wbi architecture style interaction user web advocate specific functionality provided wbi 
wbi architecture fundamental communication mechanism web hyper text transfer protocol gopher file transfer protocol ftp treated analogously 
simple stateless request response system 
browser connects server sends retrieval request server sends requested document closes connection 
allows proxy mediate transaction browser sends request proxy retrieves document appropriate server returns document browser 
proxy mechanism provide way firewall intranet security 
wbi proxy intercepts stream observation alteration 
web transaction flows wbi request goes browser web response returns back browser see 
kinds agents wbi composed types agents interact request response stream monitor agents editor agents generator agents type agent acts independently autonomous agents 
monitor receives copy entire request response transaction alter 
monitors track user actions provide information agents 
example page content monitor records text contained web pages user viewed 
resulting content history access previously viewed pages keyword searching 
number monitors may observe particular transaction 
editor agent intercepts communication stream receiving information delivering modified version 
edited data stream created incoming stream available information user past history system status information obtained web 
editors connect request part stream response part 
request editors transform document request browser request 
simple application request editor fetch documents wbi knows moved different url 
response editors modify actual content documents users see 
example response editors add extra buttons additional links web page change colors backgrounds 
alternatively editors choose simply pass input output effecting change stream 
number editor agents may alter transaction 
generator agent converts request response 
transaction activates exactly generator 
default generator simply web communication program passes request appropriate web server retrieves response passes back browser simply performing job proxy 
generators provide new wbi functions intercepting requests browser generating documents user see response 
example generator provide web way view state printer queues user workstation 
generator activated produces html document describes printer queues 
likewise generator handle requests special communication protocols communicating firewall 
autonomous agent executed trigger independent communication stream time interval 
autonomous agent simply performs task terminates 
example autonomous agent perform housekeeping actions digest recorded transactions develop user models explore web new information 
agents triggered wbi central loop dynamically constructs network composed monitors editors generator handle request response 
start agent registers arbitrator trigger rules activation 
agents triggered particular servers domains accessed particular document types received particular times intervals 
agents register ordering grouping information editors control order receive communication stream cooperatively modifying stream monitors control see response comes generator user sees particular editor modified 
generators register types requests handle 
generators register new urls exist web addressed normal web documents 
example generator displays workstation printer queues trigger request wbi 
request specially handled arbitrator routes appropriate sequence agents 
agents example agents achieve new function consider collection agents point user previously undiscovered potentially interesting resources web see 
roughly wbi monitors web activity particular user classifies accessed web pages subject searches web additional pages related subjects user browsed adds links subsequently accessed pages suggest additional pages interest 
precisely monitor triggered document containing text retrieved 
agent records text documents 
autonomous agent triggered time interval periodically text user viewed grouping pages clusters extracting keywords describe clusters 
second autonomous agent triggered completion autonomous agent contacts global web search services lists keywords discover new documents interesting user 
editor agent watches document user browses looking url known subject areas new documents 
url observed alert added web page notifying user related information available 
user clicks notification directed generator displays list related pages examined 
fairly simple agents produce new functions intelligently automatically personalize web 
performance requirements wbi implemented proxy server run user client workstation server users access 
core wbi receives gopher ftp requests constructs network containing monitors editors generator trigger conditions handle request feeds communication stream agent returns response browser 
wbi launches autonomous agents trigger conditions satisfied 
fast performance key requirement 
wbi stands middle web transaction noticeably slows communications people 
typical web transactions take seconds 
designed wbi associated agents add second overhead transactions 
perform level wbi built highly multi threaded fashion byte ought delivered browser gets stuck agent network 
generators editors control delivered browser run high priority 
monitors run low priority affect user sees 
performance considerations editor agents pass data stream quickly possible 
implies editors depend contents documents modifications depend small localized sections documents 
example editor annotates top web page page contains certain word phrase link search entire contents page passes page 
large web pages contain hundreds kilobytes text delay incurred editor substantial lasting tens seconds 
way put information top page depends information page image embedding 
editor insert embedded image points generator produces appropriate image 
trick enables editor pass stream processing data effectively delaying decision annotate data seen 
course works graphical browsers incrementally display pages load 
related open software foundation called strand proxy server shell modify stream client web server 
way similar wbi 
implementations differ substantially 
static connectivity agents configured start wbi dynamically connects agents data contained request response 
dynamic allows agents respond certain requests ignore 
wbi rule system possible monitors editors generators dynamically constructing chain agents pass stream 
editor chains manually constructed literally plugging proxies wbi configures editor chains automatically 
second difference wbi provide generator function 
expects independent proxy server chain retrieve web document 
serve dynamic documents rely separate server 
mentioned wbi incorporates generator agents produce documents response requests 
example applications built required generator agents producing search forms results dynamic images configuration pages 
generators integral agent user interaction 
third provides special support monitor functions 
monitors written editors simply pass data storing need web search collection agents monitors web access clusters retrieved pages extracts keywords identify clusters searches new pages containing keywords edits retrieved pages part known clusters point alert user related pages generates pages containing lists related urls 
monitors chained stream inevitably slow movement data stream 
wbi distinguishes monitors editors monitors run lower process priority maintaining throughput web user 
proxy acts single editor transforming requests responses 
create set agents set independent proxies created 
wbi single proxy contains series separate transformations 
processor overhead creating series socket connections chain proxies substantial 
describing details agents discuss human computer interaction guidelines influenced design wbi 
users see web wbi wbi dramatically transform user sees web 
example interaction explicit conversations agent web directly 
set agents built designed operate style believe best suited assisting users normal web 
radically changing web experience aim add new functions substantially altering user ordinary interaction 
followed guidelines developing wbi user interface 

wbi maintain standard user interface web user communicates principally directly web agents 
means wbi output user input done html 
users click links type urls 
wbi agents display results ordinary web pages 

agents act proactively reactively 
say agents remain silent hidden 
opportunity augmentation arises proactive assistance advice offered 
reactive response results direct request agent assistance 
example user requests wbi display workstation printer queues printer queue generator agent reacts reporting queue state 

agents take control user 
agents offer advice user remains charge 
reduces problem user agent trust hamper agent systems 

agent activity peripheral central task hand user easily ignore errant agent activity 

agents build user models generalize recognize classify user activity predict activity 
example recognizing user reads particular web page morning agent built model user enables prefetch page notify user forgets read page day 
guidelines influenced development agent systems research group coach adaptive help system 
turn details wbi agents 
simple agents solve common problems implemented basic set wbi agents solve common problems users experience web 
mentioned web users report trouble re finding pages frustrated servers subject network delays 
people keep track particular web pages change 
basic set functions implemented include personal history shortcut links page watching web traffic lights 
similar functions built separate monolithic applications 
contrast wbi configurable extensible providing single uniform mechanism injecting automatic intelligent functions communications user web 
set basic agents comprise examples constructed wbi architecture 
describe wbi basic functions turn discuss complicated functions 
personal history personal history recorded monitor agent stores sequence urls visited user text url 
text stored inverted index allow rapid retrieval keywords 
user access personal history keyword queries path browsing 
keyword queries retrieve list pages user viewed past contain keywords 
problem re finding previously viewed page reduced query relevant pages query hundreds millions pages web large 
path browsing allows user view paths taken particular page 
user knows relevant page seen shortly going ibm home page browsing paths taken ibm home page quickly find sought document 
fact people conceptualize web motion paths static urls 
event keyword queries path browsing easily implemented generators access personal history 
shows example personal history screen 
shortcuts shortcut editor agent relies personal history 
experience suggests users follow subsequence urls times 
example routinely looks documentation certain programming language going language home page programming information language information manual 
shortcut editor observes pattern adds links page sequence user skip intermediate pages see 
searching sequence urls visited user patterns activity access current url 
pattern urls corresponding accesses added links current url 
shortcuts provide dynamic annotations web pages simple user model 
page watching page watching agent notifies user certain pages change 
page watching subscription dynamic pages example newsletters meeting announcements comic strips 
wbi page watching implemented editor adds link top page 
user follow link indicate current url watched 
editor adds alerts web pages needs inform user watched page changed 
alert link followed newly updated page 
autonomous agent triggered time interval check watched pages changed 
traffic lights popular editor generator combinations web traffic light 
function annotates html page colored dots hyperlink indicate speed network link particular server 
editor agent adds small line images link web page 
images served generator agent maintains database network delays web servers 
servers database determine delay 
delay times database periodically effort balance information timeliness network traffic 
traffic lights instantly inform user expected delays enabling efficient choice equivalent links mental preparation ensuing delays 
browsers multi threaded display actual page affected network conditions determined dots appear links network speed information gathered 
functions personalize web individual users 
frequently previously visited pages easily accessible web large web performance network speed determined real time displayed useful way 
user normal interaction web maintained new unobtrusive functionality 
complex agents build user models basic functions implemented agents build complex user models facilitate web browsing 
instance agent analyzes viewed pages determine consistent trends word usage edits web pages highlight links follow pattern pages user currently browsing similar 
set agents finds undiscovered pages interest global web search services personal screenshot shows part wbi personal history function 
form near top page limit displayed urls contain specific word phrase 
history clustering keyword extraction described previously 
currently working set agents allow users annotate group web browsing activity useful collections minimal extra effort cf 

collections capture thought understanding went particular searching browsing session 
referred abstraction underlying web history raised single pages reasoned sessions 
looking sharing histories users expertise subject area transferred 
implemented agents user workstation desktop available web browser functions include launching applications querying system state managing files 
networking agents enable sharing web 
directions scenarios models confronted basic challenges creating wbi agents scenario design user modeling 
scenario design demands human agent web interaction convenient informative usable 
scenarios tried change human web interaction facilitate human agent interaction web primary entity user working 
alternative scheme put users direct contact agents travel web perform actions users direct instructions electronic commerce scenarios 
course wbi handle scenarios specialized generators enable users communicate agents 
fact making agents peripheral unobtrusive cause bottlenecks agents need tell user 
instance autonomous agent web page thinks user wants know information conveyed 
interrupting user current activity announcement 
waiting user asks agent 
subtly informing user say 
waiting user interested available 
design useful scenarios constant challenge 
user modeling increasingly important agents sophisticated 
modeling consists primarily information communication stream recognizing generalizing classifying information produce useful results agents 
activity requires inferring user thinking user doing computer determining computer user presumably thinking 
built simple examples transformations agent derives clusters keywords personal history finds documents containing keywords 
agent tries determine interest user assumption keywords identify interesting documents translates keywords undiscovered documents search service 
relatively simple example screenshot shows top web page editor agent added toolbar accessing wbi main functions history path watch help editor added shortcut links 
hyperlinks arrow left toolbar urls user visited shortly visiting current url sketched text 
user modeling sophisticated techniques required user interaction scenarios complex 
implemented multi agent system assisting web browsing 
wbi architecture consists small monitor editor generator autonomous agents hooked web communication stream arbitrator set trigger conditions 
implemented number agents personalize web user solve common web problems 
agents extend ideas personalizing web experience global personal information enabling collaboration web users 
final note believe ideas wbi limited world wide web apply equally communication stream user computational system 
candidates study include workstation window environments conventional information retrieval database applications online public access catalogs electronic mail network news command shells word processors applications 
belkin croft retrieval techniques 
annual review information science technology 
elsevier new york pp 

berners lee fielding frystyk hypertext transfer protocol 
tech 
rep rfc mit may 
brooks mazer miller application specific proxy servers stream transducers 
fourth international world wide web conference 
bush may think 
atlantic monthly 
card robertson york web forager information workspace world wide web 
chi conference proceedings vancouver bc association computing machinery pp 

etzioni weld softbot interface internet 
communications acm 
fertig freeman finding reminding reconsidered 
sigchi bulletin 

www com 
ibm web browser intelligence agent software 
www raleigh ibm com wbi htm 
lieberman letizia agent assists web browsing 
international joint conference artificial intelligence 
marchionini information seeking electronic environments 
cambridge university press cambridge england 
maglio apparent motion world wide web 
proceedings eighteenth annual conference cognitive science society san diego ca lawrence erlbaum 
url minder 
www com url minder 
norman people interact agents 
communications acm 
pitkow emerging trends www user population 
communications acm 
salton mcgill modern information retrieval 
mcgraw hill new york 
selker coach teaching agent learns 
communications acm 
