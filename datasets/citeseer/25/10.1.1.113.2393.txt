appeared ieee acm transactions networking dec 
extended revised version appeared acm sigcomm 
comparison mechanisms improving tcp performance wireless links hari balakrishnan venkata padmanabhan srinivasan seshan randy katz hari ss randy cs berkeley edu computer science division department eecs university california berkeley reliable transport protocols tcp tuned perform traditional networks packet losses occur congestion 
networks wireless lossy links suffer significant losses due bit errors handoffs 
tcp responds losses invoking congestion control avoidance algorithms resulting degraded performance wireless lossy systems 
compare schemes designed improve performance tcp networks 
classify schemes broad categories protocols loss recovery performed sender link layer protocols provide local reliability split connection protocols break connection parts base station 
results experiments performed lan wan environments throughput goodput metrics comparison 
results show reliable link layer protocol tcp aware provides performance 
furthermore possible achieve performance splitting connection base station 
demonstrate selective acknowledgments explicit loss notifications result significant performance improvements 

increasing popularity wireless networks indicates wireless links play important role internetworks 
reliable transport protocols tcp tuned traditional networks comprising wired links stationary hosts 
protocols assume congestion network primary cause packet losses unusual delays 
tcp performs networks adapting delays congestion losses 
tcp sender uses cumulative acknowledgments receives determine packets reached receiver provides reliability retransmitting lost packets 
purpose maintains running average 
web page url cs berkeley edu 
srinivasan seshan ibm watson research center hawthorne ny srini watson ibm com 
estimated round trip delay mean linear deviation 
sender identifies loss packet arrival duplicate cumulative acknowledgments absence acknowledgment packet timeout interval equal sum smoothed round trip delay times mean deviation 
tcp reacts packet losses dropping transmission congestion window size retransmitting packets initiating congestion control avoidance mechanisms slow start backing retransmission timer karn algorithm 
measures result reduction load intermediate links controlling congestion network 
unfortunately packets lost networks reasons congestion measures result unnecessary reduction throughput sub optimal performance 
communication wireless links characterized sporadic high bit error rates intermittent connectivity due handoffs 
tcp performance networks suffers significant throughput degradation high interactive delays 
schemes proposed alleviate effects non congestion related losses tcp performance networks wireless similar links 
schemes choose variety mechanisms local retransmissions split tcp connections forward error correction improve toend throughput 
unclear extent mechanisms contributes improvement performance 
examine compare effectiveness schemes variants experimentally analyze individual mechanisms degree performance improvement due 
different approaches improving tcp performance lossy systems 
approach hides non congestion related losses tcp sender requires changes existing sender implementations 
intuition approach problem local solved locally transport layer need aware characteristics individual links 
protocols adopt approach attempt lossy link appear higher quality link reduced effective bandwidth 
result losses seen tcp sender caused congestion 
examples approach include wireless links reliable link layer protocols split connection approaches indirect tcp link layer schemes snoop protocol 
second class techniques attempts sender aware existence wireless hops realize packet losses due congestion 
sender avoid invoking congestion control algorithms non congestion related losses occur describe techniques section 
possible wireless aware transport protocol coexist schemes achieve performance 
classify schemes basic groups fundamental philosophy proposals split connection proposals link layer proposals 
protocols attempt tcp sender handle losses techniques 
form selective acknowledgments sacks allow sender recover multiple packet losses window resorting coarse timeout 
second attempt sender distinguish congestion forms losses explicit loss notification eln mechanism 
solution spectrum split connection approaches completely hide wireless link sender terminating tcp connection base station 
schemes separate reliable connection base station destination host 
second connection techniques negative selective acknowledgments just standard tcp perform wireless link 
third class protocols link layer solutions lie classes 
protocols attempt hide losses tcp sender local retransmissions forward error correction wireless link 
local retransmissions techniques tuned characteristics wireless link provide significant increase performance 
tcp connection passes lossy link tcp sender may fully shielded wireless losses 
happen timer interactions layers tcp duplicate acknowledgments causing sender fast retransmissions segments locally retransmitted 
result proposals improve tcp performance mechanisms knowledge tcp messaging shield tcp sender effectively avoid competing redundant retransmissions 
evaluate performance endto split connection link layer protocols endto throughput goodput performance metrics lan wan configurations 
particular seek answer specific questions 
combination mechanisms results best performance protocol classes 

important link layer schemes aware tcp algorithms achieve high throughput 

useful selective acknowledgments dealing lossy links especially presence burst losses 

important connection split order effectively shield sender wireless losses obtain best performance 
answer questions implementing testing various protocols wireless testbed consisting pentium pc base stations ibm thinkpad mobile hosts communicating mhz wavelan running bsd os 
protocol measure throughput wired hop wireless paths 
path link goodput defined ratio actual transfer size total number bytes transmitted path 
general wired wireless differ wireless losses local retransmissions congestion losses wired network 
metrics allow determine performance transmission efficiency network 
wireless hop lossy link experiments believe results applicable wider context links significant losses occur reasons congestion 
examples links include high speed modems cable modems 
show reliable link layer protocol knowledge tcp results performance 
experiments indicate shielding tcp sender duplicate acknowledgments caused wireless losses improves throughput 
furthermore possible achieve performance splitting toend connection base station 
demonstrate selective acknowledgments explicit loss notifications result significant performance improvements 
instance simple eln scheme evaluated improved throughput factor compared tcp reno comparable goodput values 
rest organized follows 
section briefly describes proposed solutions problem reliable transport protocols wireless links 
section describes implementation details different protocols wireless testbed section presents results analysis experiments 
section discusses miscellaneous issues related handoffs eln implementation selective acknowledgments 
section mention section 
related section summarize protocols proposed improve performance tcp wireless links 
briefly describe proposed methods add sacks tcp 
link layer protocols proposals reliable link layer protocols 
main classes techniques employed protocols error correction techniques forward error correction fec retransmission lost packets response automatic repeat request arq messages 
link layer protocols digital cellular systems cdma tdma primarily arq techniques 
tdma protocol guarantees reliable order delivery link layer frames cdma protocol limited attempt leaves eventual error recovery reliable transport layer 
protocols protocol employ combination fec arq techniques loss recovery 
main advantage employing link layer protocol loss recovery fits naturally layered structure network protocols 
link layer protocol operates independently higher layer protocols maintain connection state 
main concern link layer protocols possibility adverse effect certain transport layer protocols tcp described section 
investigate detail experiments 
split connection protocols split connection protocols split tcp connection sender receiver separate connections base station tcp connection sender base station base station receiver 
wireless hop specialized protocol tuned wireless environment may 
authors propose protocols wireless hop uses tcp wireless hop uses selective repeat protocol srp top udp 
study impact handoffs performance conclude obtain significant advantage srp tcp wireless connection experiments 
experiments demonstrate benefits simple selective acknowledgment scheme tcp wireless connection 
indirect tcp split connection solution uses standard tcp connection wireless link 
split connection proposals attempts separate loss recovery wireless link wireline network shielding original tcp sender wireless link 
experiments indicate choice tcp wireless link results performance problems 
tcp tuned lossy link tcp sender wireless connection times causing original sender stall 
addition packet incurs overhead going tcp protocol processing twice base station compared zero times non split connection approach extra copies avoided efficient kernel implementation 
disadvantage split connections semantics tcp acknowledgments violated acknowledgments packets reach source packets reach mobile host 
split connection protocols maintain significant amount state base station tcp connection handoff procedures tend complicated slow 
section discusses issues related cellular handoffs tcp performance 
snoop protocol snoop protocol introduces module called snoop agent base station 
agent monitors packet passes tcp connection directions maintains cache tcp segments sent link acknowledged receiver 
packet loss detected arrival small number duplicate acknowledgments receiver local timeout 
snoop agent retransmits lost packet cached suppresses duplicate acknowledgments 
classification protocols snoop protocol link layer protocol takes advantage knowledge higher layer transport protocol tcp 
main advantage approach suppresses duplicate acknowledgments tcp segments lost retransmitted locally avoiding unnecessary fast retransmissions congestion control invocations sender 
connection state maintained snoop agent base station soft essential correctness 
link layer solutions snoop approach suffer able completely shield sender wireless losses 
selective acknowledgments standard tcp uses cumulative acknowledgment scheme provide sender sufficient information recover quickly multiple packet losses single transmission window 
studies shown tcp enhanced selective acknowledgments performs better standard tcp situations 
sacks added option tcp rfc 
disagreements sacks prevented specification adopted sack option removed tcp rfcs 
renewed interest adding sacks tcp 
relevant proposals name category special mechanisms standard tcp reno newreno tcp newreno smart smart selective acks ietf sack ietf selective acks eln explicit loss notification eln eln eln retransmit dupack ll link layer ll tcp aware link layer duplicate ack suppression ll smart link layer smart selective acks ll smart tcp aware link layer smart duplicate ack suppression split split connection split smart split connection smart wireless connection table 
summary protocols studied 
packets stored sender tcp source rfc tcp sacks smart scheme 
sack rfc proposes acknowledgment contain information non contiguous blocks data received successfully receiver 
block data described starting sequence number 
due limited number blocks best inform sender blocks received 
rfc specify sender behavior require standard tcp congestion control actions performed losses occur 
alternate proposal smart uses acknowledgments contain cumulative acknowledgment sequence number packet caused receiver generate acknowledgment information subset blocks scheme proposed rfc 
sender uses information create packets delivered successfully congestion window packets flight 
typical loss situation acknowledgments returning base station lossy link receiver 
sender detects gap immediately assumes missing packets lost considering possibility simply may reordered 
scheme trades resilience reordering lost acknowledgments exchange reduction overhead generate transmit acknowledgments 

implementation details tcp receiver section describes protocols implemented evaluated 
table summarizes key ideas scheme main differences 
shows typical loss situation wireless link 
tcp sender middle transfer network mobile host 
depicted time sender congestion window consists packets 
packets network packets lost wireless link 
described rest section protocol reacts losses different ways generates messages result loss recovery 
shows data packets lost experiments wireless errors directions 
schemes wide variety tcp versions internet current de facto standard tcp implementations tcp reno 
call protocol standard basis performance comparison 
newreno protocol improves performance tcp reno multiple packet losses window remaining fast recovery mode new acknowledgment received fast retransmission partial value byte transmitted fast retransmission done 
partial indicative multiple packet losses original window data 
remaining fast recovery mode enables connection recover losses rate segment round trip time stall coarse timeout tcp reno 
smart ietf sack protocols add smart ietf selective acknowledgments respectively standard tcp reno stack 
allows sender handle multiple losses window outstanding data efficiently 
sender assumes losses result congestion invokes congestion control procedures shrinking congestion window size 
allows identify percentage performance degradation associated standard tcp handling error detection retransmission 
smart scheme lan experiments 
scheme suited situations little reordering packets true hop wireless systems 
scheme proposed special techniques detect loss retransmission 
sender retransmits packet receives smart acknowledgment packet retransmitted roundtrip time 
smart acknowledgments arrive sender falls back coarse timeout mechanism recover loss 
ietf selective scheme lan wan experiments 
implementation rfc takes appropriate congestion control actions receiving sack information 
eln protocol adds explicit loss notification eln option tcp acknowledgments 
packet dropped wireless link cumulative acknowledgments corresponding lost packet marked identify non congestion related loss occurred 
receiving information duplicate acknowledgments sender may perform retransmissions invoking associated congestion control procedures 
option allows identify percentage toend performance degradation associated tcp incorrect invocation congestion control algorithms fast retransmission packet lost wireless hop 
eln protocol enhancement previous sender retransmits packet receiving duplicate eln option set opposed third duplicate case tcp reno addition shrinking window size response wireless losses 
practice difficult identify packets lost due errors lossy link 
experiments assume sufficient knowledge receiver wireless losses generate eln information 
describe possible implementation policies strategies eln mechanism section 
link layer schemes tcp transport layer de facto standard link layer protocols 
existing link layer protocols choose techniques wait go back selective repeat forward error correction provide reliability 
base link layer algorithm called ll uses cumulative acknowledgments determine lost packets retransmitted locally base station mobile host 
minimize overhead implementation ll leverages tcp acknowledgments generating 
timeout retransmissions done maintaining smoothed round trip time estimate minimum timeout granularity ms limit overhead processing timer events 
allows ll scheme retransmit packets times typical tcp reno transmitter time 
ll equivalent snoop agent suppress duplicate acknowledgments attempt order delivery packets link protocols proposed 
tcp acknowledgments ll protocol renders atypical traditional arq protocols believe preserves key feature protocols ability retransmit packets locally independently faster time scale tcp 
expect qualitative aspects results applicable general link layer protocols 
investigated sophisticated link layer protocol ll smart uses selective retransmissions improve performance 
ll smart protocol performs applying smart acknowledgment scheme link layer 
ll protocol ll smart uses tcp acknowledgments generating limits minimum timeout ms ll smart equivalent snoop agent performing retransmissions selective suppressing duplicate acknowledgments base station 
tcp source pentium pc running bsd os mbps ethernet mbps wavelan lossy link added tcp awareness ll ll smart protocols resulting ll tcp aware ll smart tcp aware schemes 
ll tcp aware protocol identical snoop protocol ll smart tcp aware protocol uses smart techniques optimization selective repeat 
ll smart tcp aware best link layer protocol experiments performs local retransmissions selective acknowledgments shields sender duplicate acknowledgments caused wireless losses 
split connection schemes tcp split scheme uses intermediate host divide tcp connection separate tcp connections 
implementation avoids data copying intermediate host passing pointers buffer tcp connections 
variant split approach investigated split smart uses selective acknowledgment scheme wireless connection perform selective retransmissions 
little chance reordering packets wireless connection intermediate host hop away final destination 

experimental results section describe experiments performed results obtained including detailed explanations observed performance 
start describing experimental testbed methodology 
describe performance various link layer schemes 
experimental methodology base station pentium pc running bsd os tcp receiver pentium laptop running bsd os 
experimental topology 
additional internet hops source base station wan experiments 
performed experiments determine performance efficiency protocols 
protocols implemented set modifications bsd os tcp ip reno network stack 
ensure fair basis comparison protocols implementations introduce additional data copying intermediate points sender receiver 
experimental testbed consists ibm thinkpad laptops pentium personal computers running bsd os 
machines interconnected mbps ethernet mhz shared medium wireless lan raw signalling bandwidth mbps 
network topology experiments shown 
peak throughput tcp bulk transfers mbps local area testbed mbps wide area testbed absence congestion wireless losses 
testbed topologies represent typical scenarios wireless links mobile hosts cellular wireless networks 
addition experiments focus data transfer mobile host common case mobile applications web accesses 
order measure performance protocols controlled conditions generate errors lossy link exponentially distributed bit error model 
receiving entity lossy link generates exponential distribution bit error rate changes tcp checksum packet error generator determines packet dropped 
losses generated directions wireless channel tcp acknowledgments dropped 
tcp data packet size experiments bytes 
measure analyze performance various protocols average error rate kbytes corresponds bit error rate 
note exponential distribution standard deviation equal mean occasions multiple packets lost close succession 
report results burst error situations packets dropped burst section 
investigate performance protocols range error rates kb kb 
choice exponentially distributed error model motivated desire understand precise dynamics protocol response wireless loss attempt empirically model wireless channel 
actual performance numbers function exact error model relative performance dependent protocol behaves losses single tcp window 
expect applicable patterns wireless loss 
believe wireless errors generated artificially experiments real testbed valuable introduces realistic effects wireless bandwidth limitation media access contention protocol processing delays hard model realistically simulation 
experiments attempt ensure losses due wireless errors congestion 
allows focus effectiveness mechanisms handling losses 
wan experiments performed wired goodput wireless goodput lan absolute ll ll tcp aware ll smart ll smart tcp aware 
performance link layer protocols bit error rate throughput wan absolute percentage max 
percentage max 
error bytes socket buffer size kb 
case bars thick corresponds scale left denotes throughput mbps thin corresponds scale right shows throughput percentage maximum absence wireless errors mbps lan environment mbps wan environment 
throughput mbps internet hops minimal congestion order study impact large delay bandwidth products 
run experiment consists mbyte transfer source receiver wired net wavelan link 
chose long transfer size order limit impact transient behavior start tcp connection 
run measure throughput receiver mbps wired wireless percentages 
addition packet transmissions ethernet wavelan recorded analysis tcpdump sender tcp code instrumented record events coarse timeouts retransmission times duplicate acknowledgment arrivals congestion window size changes rest section presents discusses results experiments 
link layer protocols traditional link layer protocols operate independently higher layer protocol consequently necessarily shield sender lossy link 
spite local retransmissions tcp performance poor reasons competing retransmissions caused incompatible setting timers layers ii unnecessary invocations tcp fast retransmission mechanism due order delivery data 
effects situation simulated analyzed tcp transport protocol closely tracks round trip time set retransmission timeout reliable link layer protocol 
packet loss rate high competing retransmissions 
wan experiments performed pm am pst verified congestion losses occurred runs reported 
throughput maximum link transport layers lead significant performance degradation 
dominating effect link layer schemes ll tcp reno variants 
tcp implementations coarse retransmission timeout granularities typically multiples ms link layer protocols typically finer timeout granularities 
real problem packets lost link layer protocols attempt order delivery link ll cause packets reach tcp receiver order 
leads generation duplicate acknowledgments tcp receiver causes sender invoke fast retransmission recovery 
potentially cause degraded throughput goodput especially delay bandwidth product large 
results substantiate claim seen comparing ll ll tcp aware results table 
packet size bytes bit error rate bytes translates packet error rate 
optimal link layer protocol recovers errors locally compete tcp retransmissions wireless goodput wired goodput absence congestion 
lan experiments throughput difference ll ll tcp aware 
ll wireless goodput significantly ll tcp aware wireless goodput close maximum achievable goodput 
loss occurs ll protocol performs local retransmission relatively quickly 
packets typically transit create duplicate acknowledgments 
duplicates eventually propagate sender trigger fast retransmission associated congestion control mechanisms 
fast retransmissions result ll ll tcp aware ll smart ll smart tcp aware lan kb lan kb wan kb table 
table summarizes results link layer schemes average error rate bytes data 
entry form throughput wireless goodput wired goodput 
throughput measured mbps 
goodput expressed percentage 
ll tcp aware ll time sec time sec 
congestion window size link layer protocols wide area tests 
horizontal dashed line ll graph shows byte wan bandwidth delay product 
ll tcp aware ll congestion window bytes sequence number bytes wireless retransmissions wireless retransmissions time sec time sec 
packet sequence traces ll tcp aware ll 
coarse timeouts occur case 
ll tcp aware horizontal row dots shows times wireless link retransmissions 
ll top row shows sender fast retransmission times bottom row shows local wireless sender retransmissions 
reduced goodput lost packets retransmitted source base station 
effects interaction pronounced wide area experiments throughput difference case 
cause pronounced deterioration performance higher bandwidth delay product wide area connection 
ll scheme causes sender invoke congestion control procedures due duplicate acknowledgments causes average window size transmitter lower ll tcp aware 
shown compares congestion window size ll ll tcp aware function time 
note number outstanding data bytes network minimum congestion win congestion window bytes sequence number bytes wired retransmissions dow receiver advertised window 
bounded receiver socket buffer size 
congestion window graphs protocol receiver socket buffer kb 
wide area bandwidth delay product bytes mbps ms congestion window drops value times tcp transfer 
hand lan experiments suffer large throughput degradation ll lower congestion window size usually larger connection delay bandwidth product bytes mbps ms 
ll scheme maintain nearly full data pipe sender receiver local connection wide area throughput mbps newreno smart eln 
performance protocols bit error rate ietf sack error bytes 

lan degradation entirely due excessive retransmissions wireless link smaller average congestion window size compared ll tcp aware 
important point note ll successfully prevents coarse timeouts happening source 
shows sequence traces tcp transfers ll tcp aware ll 
summary results indicate simple link layer retransmission scheme entirely avoid adverse effects tcp fast retransmissions consequent performance degradation 
enhanced link layer scheme uses knowledge tcp semantics prevent duplicate acknowledgments caused wireless losses reaching sender locally retransmits packets achieves significantly better performance 
protocols performance various protocols summarized table 
performance tcp reno baseline protocol highlights problems tcp lossy links 
packet loss rate explained section protocol achieves throughput maximum throughput absence wireless losses local area maximum wide area experiments 
protocols achieve lan absolute percentage max 
wan absolute percentage max 
ietf eln newreno smart sack eln lan kb lan kb wan kb table 
table summarizes results schemes average error rate bytes data 
numbers cells follow convention table 
throughput maximum puts close optimal value 
primary reason low throughput large number timeouts occur transfer 
resulting average window size transfer small preventing data pipe kept full reducing effectiveness fast retransmission mechanism 
modified protocols improve throughput retransmitting packets known lost wireless hop earlier baseline protocol reducing fluctuations window size 
newreno eln smart ietf sack protocols new tcp options sophisticated acknowledgment processing techniques improve speed accuracy identifying retransmitting lost packets recovering multiple losses single transmission window timing 
remainder section discusses benefits techniques partial acknowledgments explicit loss notifications selective acknowledgments 
partial acknowledgments newreno uses partial acknowledgment information recover multiple losses window rate packet roundtrip time performs better lan times better wan experiments 
performance improvement function socket buffer size larger buffer size better sequence number bytes fast retransmissions coarse timeouts time sec time sec 
packet sequence traces tcp reno eln 
top row horizontal dots shows times fast retransmissions occur bottom row shows coarse timeouts 
relative performance 
situations suffers coarse timeout loss probability newreno increases number outstanding packets network 
explicit loss notification way eliminating long delays caused coarse timeouts maintain large window size possible 
newreno remains fast recovery new acknowledgment partial reduces window size half original value arrival new acknowledgment 
eln eln protocols eln information section prevent sender reducing size congestion window response wireless loss 
schemes perform better newreno times better 
result sender explicit awareness wireless link reduces number coarse timeouts rapid window size fluctuations 
eln protocol performs slightly better eln socket buffer size kb 
usually data pipe trigger fast retransmission eln 
performance benefits eln pronounced socket buffer size smaller numbers kb socket buffer size indicate table 
eln wait duplicate acknowledgments sequence number bytes eln fast retransmissions coarse timeouts eln time sec time sec 
congestion window size function time tcp reno eln 
clearly shows utility eln preventing rapid fluctuations maintaining larger average congestion window size 
congestion window bytes congestion window bytes packet eln information 
maximum socket buffer size kb limits number unacknowledged packets small number point time reduces probability duplicate acknowledgments arriving loss triggering fast retransmission 
despite explicit awareness wireless losses timeouts occur eln protocols 
result implementation eln protocol convey information multiple wireless related losses sender 
coupled cumulative acknowledgments sender unaware occurrence multiple wireless related losses window plan couple sacks eln 
section discusses possible implementation strategies policies eln 
selective acknowledgments experimented different sack schemes 
lan case simple sack scheme subset smart proposal 
protocol best protocols situation achieving throughput mbps contrast best local scheme ll smart tcp aware obtained throughput mbps 
wan case sack implementation rfc 
exponentially distributed loss pattern sequence number bytes throughput mbps throughput mbps significantly higher mbps throughput tcp reno 
worse ll opt 
sacks allow sender recover multiple losses timing sender congestion window decreases time packet dropped wireless link causing remain small 
summary newreno better especially large socket buffer sizes 
adding eln tcp improves throughput significantly successfully preventing unnecessary fluctuations transmission window 
sacks provide significant improvement tcp reno perform worse best link layer schemes lan experiments worse wan experiments 
results suggest toend protocol eln sacks result performance area current 
split connection protocols lan absolute percentage max 
wan absolute percentage max 
main advantage split connection approaches isolate tcp source wireless losses 
tcp sender second wireless connection performs retransmissions response wireless losses 
split split smart 
performance split connection protocols bit error rate error bytes 
wired sequence number bytes wireless time sec time sec 
packet sequence trace wired wireless parts split protocol 
wireless part rows horizontal dots top shows times fast retransmissions bottom times timeout ones 
throughput maximum table show throughput goodput split connection approach lan wan environments 
report results cases wireless connection uses tcp reno labeled split uses smart selective acknowledgment scheme described earlier labeled split smart 
see throughput achieved split approach mbps quite low tcp reno labeled 
reason apparent figures show progress data transfer size congestion window wired wireless connections 
see wired connection retransmissions timeouts resulting wired goodput 
eventually stalls sender wireless connection experiences timeout amount buffer fast retransmissions coarse timeouts split split smart lan kb lan kb wan kb table 
summary results split connection schemes average error rate kb 
congestion window bytes wired wireless time sec time sec 
congestion window sizes function time wired wireless parts split tcp connection 
wired sender sees losses maintains kb congestion window 
wireless tcp connection congestion window fluctuates rapidly 
space base station kb experiments bounded wan case throughput split approach mbps better mbps approach achieves protocols described earlier 
large congestion window size wired sender split enables higher bandwidth utilization wired network compared tcp connection congestion window size fluctuates rapidly 
expected throughput split smart scheme higher 
mbps lan case mbps wan case 
smart selective acknowledgment scheme operating wireless link performs especially reordering packets occurs hop 
times original transmission retransmission packet get lost results coarse timeout described section 
explains difference throughput split smart scheme ll smart tcp aware scheme 
summary split connection approach results throughput wireless connection uses special mechanisms performance worse tcp aware link layer protocol ll tcp aware ll smart tcp aware 
link layer protocol preserves semantics tcp acknowledgments 
demonstrates connection need split base station order achieve performance 

larger buffer base station necessarily improve performance reasons measure performance terms receiver throughput limited small congestion window size wireless connection long transfer fill buffer 
congestion window bytes burst length ll tcp aware mbps reaction burst errors ll smart tcp aware mbps table 
throughputs ll tcp aware ll smart tcp aware different burst lengths 
illustrates benefits sacks high performance tcp aware link protocol 
section report results experiments illustrate benefit selective acknowledgments handling burst losses 
consider best performing local protocols ll tcp aware snoop ll smart tcp aware snoop smart selective acknowledgments 
ll tcp aware recovers single loss retransmitting lost packet duplicate acknowledgments arrive 
keeps track number expected duplicate acknowledgments expected new acknowledgment local retransmission 
loss part burst new acknowledgment arrive duplicates expected new causes immediate retransmission lost segment 
similar mechanism newreno section 
ll smart tcp aware uses additional useful information provided smart scheme sequence number segment caused duplicate acknowledgment accurately determine losses recover 
table shows performance protocols bursts lengths packets 
errors generated average rate kbytes data packets destroyed case 
selective acknowledgments improve performance ll smart tcp aware ll tcp aware presence burst errors 
fairly throughput mbps ll smart tcp aware ll tcp aware smart split smart ietf sack bit error rate error kbytes average 
performance protocols lan case range bit error rates ranging error kb kb shown log scale 
simplistic burst error model illustrate problems caused loss multiple packets succession 
process experimenting temporal burst loss model average lengths fades causes wireless losses 
parameters model derived trace modeling characterization wavelan network 
performance different error rates section results experiments performed range bit error rates protocols described earlier baseline case ll tcp aware ll smart tcp aware smart ietf sack split smart 
chose best performing protocols category protocols ietf sack illustrate interesting effects 
shows performance protocols mbyte transfer lan environment exponentially distributed error rates ranging error kb error kb increasing powers 
find qualitative results similar earlier kb error rate 
low error rates kb kb points graph protocols shown perform equally improving tcp performance 
kb error rate performance tcp aware link layer schemes times better smart times better tcp reno 
interesting point note relative performance ietf sack smart especially high error rates 
congestion window grow larger packets steady state error rates multiple losses windows 
ietf sack retransmit packet sack information receives duplicate acknowledgments overcome potential reordering packets network implies fast retransmissions triggered number packets window sender congestion window smaller resulting timeouts degraded performance 
contrast implementation smart assumes reordering packets justified lan case retransmits lost packet duplicate acknowledgment loss information arrives 
reduces number timeouts results better performance 
section outline scheme ietf protocol modified sender congestion window large provide duplicate acknowledgments 

discussion section discussion miscellaneous issues 
discuss effects handoff tcp performance implementation strategies policies eln mechanism introduced section issues related smart ietf selective acknowledgment schemes 
wireless handoffs wireless networks usually organized cellular topology cell includes base station acts router wireless subnet wireline backbone 
mobile hosts typically communicate base station cell currently located 
examples networks organized fashion include cellular telephone networks wireless local area networks 
mobile host moves may get range current base station range neighboring base stations 
maintain mobile host connectivity handoff procedure invoked re route traffic mobile host new base station 
depending details handoff algorithms procedure lead packet losses reordering turn cause significant deterioration performance ongoing tcp transfers 
proposals achieving fast handoffs 
examples include multicast handoffs hierarchical handoffs 
schemes handoffs fast restricting updates immediate vicinity mobile host 
result handoff latency wavelan wireless local area network order ms 
depends delayed acknowledgments 
small amount buffering retransmission base stations prevents packet loss short handoff period 
buffering happens mobile host old base station forwards packets new base station time handoff 
base stations vicinity join multicast group corresponding mobile host receive packets destined anticipation handoff 
handoff happens new base station readily able forward buffered newly arriving packets introducing reordering preventing unnecessary invocations tcp fast retransmissions 
experimental results reported indicate fast handoffs minimal adverse effect tcp performance handoff frequency high second 
contrast schemes operate network layer handoffs split connection context tcp involve transfer transport layer state old base station new 
results significantly higher latency example reports tcp handoff latencies order hundreds milliseconds wavelan network 
implementation strategies eln section described eln mechanism transport protocol aware losses unrelated network congestion react appropriately losses 
section outline possible implementation strategies policies mechanism 
simple strategy implementing eln receiver results 
method corruption packet indicated crc error passed transport layer sends eln message duplicate acknowledgments lost packet 
practice may hard determine connection corrupted packet belongs header corrupted handled protecting tcp ip header fec scheme 
circumstances entire packets including link level headers dropped wireless link 
circumstances base station generates eln messages sender band part acknowledgment stream observes duplicate tcp acknowledgments arriving mobile host 
expect explicit loss notifications useful context multi hop wireless networks exploring going 
networks metricom ricochet network typically packet radio units route packets wired infrastructure 
order implement eln periodic messages exchanged adjacent packet radio units queue lengths information heuristic distinguish congestion packet corruption especially entire packets including headers corrupted dropped wireless link 
coupled simple link level scheme convey nack information missing packets sufficient generate eln messages source 
selective acknowledgment issues experience ietf sack scheme highlights weaknesses sender window sizes small 
situation improved enhancing sender loss recovery algorithm follows 
general arrival duplicate acknowledgment receiver indicates segment successfully reached receiver 
wait duplicate acknowledgments perform fast retransmission sender transmits new segment right edge current window arrival second duplicate acks 
probes network sustained congestion generates duplicate acknowledgments 
note violated standard congestion control procedures doing send segment left data pipe principle conservation packets 
enhancement coexist sacks avoid timeouts arrival acknowledgment sack block indicating reception newly transmitted segment strong indicator original segment lost independent duplicate acknowledgments arrive 
mechanism improve performance sender window small losses occur explored described 

comparative analysis techniques improve performance tcp lossy wireless hops 
categorize techniques link layer split connection 
throughput wired wireless metrics comparison 
results lead 
reliable link layer protocol uses knowledge tcp ll tcp aware shield sender duplicate acknowledgments arising wireless losses gives higher throughput ll operates independently tcp attempt order delivery packets 
avoids redundant retransmissions sender base station resulting higher goodput 
schemes investigated tcp aware link layer protocol selective performs best 

split connection approach standard tcp wireless hop shields sender wireless losses 
sender stalls due timeouts wireless connection resulting poor throughput 
smart selective acknowledgment mechanism wireless hop yields throughput 
throughput slightly tuned link layer scheme split connection 
demonstrates splitting connection requirement performance 

smart selective acknowledgment scheme quite effective dealing high packet loss rate employed wireless hop sender lan environment 
wan experiments sack scheme ietf draft resulted significantly improving performance performance best link schemes 
results conclude selective acknowledgment schemes useful presence lossy links especially losses occur bursts 

schemes effective local techniques handling wireless losses promising significant performance gains achieved extensive support intermediate nodes network 
explicit loss notification scheme evaluated resulted throughput improvement factor tcp reno comparable goodput values 

experiments various sack eln mechanisms demonstrate significant benefits schemes described section 
process evaluating protocol enhancements ideas presence network congestion wireless losses different network topologies especially networks multiple wireless hops 
addition evaluating performance protocols described patterns loss derived traces 
investigating impact large variations connection round trip times impact bandwidth latency asymmetry transport performance 
large round trip variations common networks metricom ricochet wireless network especially presence bidirectional traffic 
bandwidth asymmetry prevalent cable satellite networks return channels 

acknowledgments grateful steven mccanne anonymous reviewers acm sigcomm ieee acm transactions networking comments suggestions helped improve quality 
sally floyd vern paxson useful discussions sacks related topics 
supported darpa contract state california micro program hughes aircraft metricom fuji xerox daimler benz hybrid networks ibm 
hari partially supported research foundation 

paul 
link layer protocol wireless networks 
acm acm baltzer wireless networks journal february 
badrinath 
handoff system support indirect tcp ip 
proc 
second usenix symp 
mobile location independent computing april 
badrinath 
tcp indirect tcp mobile hosts 
proc 
th international conf 
distributed computing systems icdcs may 
balakrishnan 
implementation tcp selective acknowledgments 
ftp cs berkeley edu pub 
balakrishnan padmanabhan katz 
effects asymmetry tcp performance 
proc 
acm mobicom september 
balakrishnan padmanabhan seshan stemm katz 
tcp behavior busy web server analysis improvements 
technical report ucb csd university california berkeley 
balakrishnan seshan katz 
improving reliable transport handoff performance cellular wireless networks 
acm wireless networks december 
caceres iftode 
improving performance reliable transport protocols mobile computing environments 
ieee journal selected areas communications june 
caceres padmanabhan 
fast scalable handoffs wireless internetworks 
proc 
st acm conf 
mobile computing networking november 
desimone chuah yue 
throughput performance transport layer protocols wireless lans 
proc 
globecom december 
fall floyd 
simulation comparisons tahoe reno sack tcp 
computer communications review 
hoe 
start dynamics tcp congestion control avoidance schemes 
master thesis massachusetts institute technology 
jacobson 
congestion avoidance control 
proc 
acm sigcomm august 
jacobson braden 
tcp extensions long delay paths 
rfc oct 
rfc 
karn 
qualcomm cdma digital cellular system 
proc 
usenix symp 
mobile location independent computing pages august 
karn partridge 
improving round trip time estimates reliable transport protocols 
acm transactions computer systems november 
keshav morgan 
smart retransmission performance overload random losses 
proc 
infocom 
lin costello 
error control coding fundamentals applications 
prentice hall 
mathis mahdavi floyd romanow tcp selective acknowledgment options 
rfc 
mccanne jacobson 
bsd packet filter new architecture user level packet capture 
proc 
winter usenix conference san diego ca january 
metricom www metricom com 

retransmission scheme circuit mode data wireless links 
ieee journal selected areas communications october 
nguyen katz noble satyanarayanan 
trace approach modeling wireless channel behavior 
proc 
winter simulation conference dec 
postel 
transmission control protocol 
rfc information sciences institute marina del rey ca september 
rfc 
seshan balakrishnan katz 
handoffs cellular wireless networks imple mentation experience 
kluwer journal wireless personal communications january 
stevens 
tcp ip illustrated volume 
addison wesley reading ma nov 
wavelan pc card installation operation 
manual 
yavatkar bhagwat 
improving performance tcp mobile internetworks 
mobile workshop mobile computing systems applications december 
hari balakrishnan acm ph candidate computer science university california berkeley 
research interests areas computer networks wireless mobile computing distributed computing communication systems 
current research area reliable data transport heterogeneous networking technologies 
hari received tech 
degree computer science engineering indian institute technology madras degree computer science berkeley 
received best student awards winter usenix acm mobicom conferences recipient research foundation 
www url www cs berkeley edu hari mail address hari cs berkeley edu 
venkata padmanabhan ieee acm ph candidate computer science university california berkeley 
received tech 
degree indian institute technology delhi degree university california berkeley computer science 
venkat done research areas computer networking mobile computing operating systems 
focus current network support efficient web access data transport asymmetric networks 
received best student award usenix conference 
may reached mail cs berkeley edu web www cs berkeley edu 
srinivasan seshan acm received electrical engineering ph computer science university california berkeley respectively 
research staff member ibm watson research center 
research interests include computer networks mobile computing distributed computing 
mail address srini watson ibm com www home page www research ibm com people srini 
randy katz acm professor computer science university california berkeley principal investigator bay area research wireless access network project 
taught berkeley exception program manager deputy director computing systems technology office defense department advanced research projects agency 
written technical publications cad database management multiprocessor architectures high performance storage systems video server architectures computer networks 
dr katz received degree cornell university ph university california berkeley computer science 
mail address randy cs berkeley edu www home page www cs berkeley edu randy 
