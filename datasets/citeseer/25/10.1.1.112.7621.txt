case factor diagrams structured probabilistic modeling david mcallester chicago mcallester org michael collins csail massachusetts institute technology ai mit edu fernando pereira cis university pennsylvania pereira cis upenn edu april introduce probabilistic formalism subsuming markov random fields bounded tree width probabilistic context free grammars 
models representation boolean formulas call case factor diagrams cfds 
cfds similar binary decision diagrams bdds concise bdds circuits bounded tree width concisely represent set parse trees string context free grammar bdds 
probabilistic model consists cfd defining feasible set boolean assignments weight cost individual boolean variable 
give inside outside algorithm simultaneously computing marginal boolean variable viterbi algorithm finding minimum cost variable assignment 
algorithms run time proportional size cfd 
investigate efficient representations structured probabilistic models 
informally structured model defines distribution structured objects sequences parse trees assignments values variables 
number possible structured objects typically grows exponentially natural measure problem size 
example number possible parse trees grows exponentially length string parsed 
structured statistical models include markov random fields mrfs probabilistic context free grammars pcfgs hidden markov models hmms conditional random fields crfs dynamic bayes nets probabilistic horn abduction probabilistic relational models prms :10.1.1.48.7248:10.1.1.120.9821:10.1.1.101.3165:10.1.1.50.603
model types define corresponding structured classification problem 
hmms example problem recover hidden state sequence observable sequence 
pcfgs problem recover parse tree word string 
prms problem recover latent entity labels relations set observed entities relations 
follow approach statistical model defines structured classification finds 
approaches possible example maximum margin classifiers discussed 
structured statistical models discussed intuitively similar 
involve local probability tables local cost functions 
widely believed modeling formalisms viewed special cases mrfs undirected graphical models 
specifically structured classification problem able represent mrf 
assuming modeled mrf prove theorems design algorithms software level simultaneously applies modeling formalisms discussed 
unfortunately models representation mrf problematic 
problematic case pcfgs 
fairly easy construct mrf representing parse tree word string 
unfortunately standard mrf algorithms take exponential time applied natural mrf representation 
somewhat surprising outcome known inference algorithms pcfgs run cubic time length word string presents modeling formalism handles mrfs bounded tree width pcfgs 
define linear boolean model lbm 
lbm consists parts set boolean variables formula defining set possible assignments variables feasible set assignment weight variable 
weight complete variable assignment sum weights variables assignment true 
weight associated truth assignment written linear func tion bits assignment term linear 
show encode standard mrfs pcfgs 
main problem solve encode compactly set possible assignments variables lbm single formalism handling mrfs bounded tree width pcfgs 
case factor diagrams cfds introduce purpose similar binary decision diagrams bdds :10.1.1.1.5124
cfds differ bdds ways 
cfds similar zero suppressed bdds 
designed sparse truth assignments truth assignments boolean variables false 
sparseness important representing pcfgs 
addition zero suppressed cfds factor nodes allow concise representation problems factor independent subproblems 
factoring important representing mrfs bounded tree width 
describe algorithms cfds compute partition functions gibbs distributions select maximum likelihood viterbi structure inside outside algorithm computing marginal distributions boolean variables 
algorithms run time linear number nodes cfd 
demonstrate pcfg models encoded cfd size length input string 
show mrfs bounded tree width represented cfd polynomial number nodes 
various lines related 
variant bdds circuits bounded tree width introduced mcmillan 
mcmillan formalism elaborate turns simply extending bdds nodes suffices representing mrfs bounded width 
representing pcfgs require zero suppressed formalism 
case factor diagrams combine zero suppression factoring combination essential efficient representation pcfg parsing problems 
cfds closely related recursive conditioning algorithm introduced darwiche 
recursive conditioning cases value variables factors remaining problem independent subproblems solves subproblems recursively 
nodes cfd correspond subproblems arise recursive conditioning 
darwiche defined data structure representing subproblems recursive conditioning arithmetic expressions :10.1.1.116.8371
differences cfgs darwiche expressions involve generalization problem parsing pcfgs problem addressed darwiche 
cfds recursive conditioning exploit context sensitive independence variables independent values third variable independent general :10.1.1.16.1782
context sensitive independence particularly important pcfgs tree width natural mrf representation large 
explained section getting time behavior time behavior require handling context sensitive variable existence context sensitive independence 
parsing possible substrings input string substrings represent phrases single parse parse determined value choices 
bayesian network variables assignments 
cfds context sensitive variable existence handled zero suppression 
boolean variables forced false need mentioned certain contexts variables essentially cease exist 
rina dechter graph data structure similar cfds darwiche expression graphs representing bayesian networks 
closely related formalism jaeger related algorithms similar recursive conditioning bacchus 
darwiche formalism formalisms address need context sensitive variable existence pcfg parsing problem 
important note cfds similar bdds carry semantics independent way constructed 
independent semantics allows treat cfds class models 
fundamental properties bdds define boolean projection operations bdds allowing built compositional way 
cfds form bdd support compositional operations explore operations 
developing common language structured modeling potential applications maximum margin structured classification :10.1.1.129.8439
maximum margin model trained objective function stated terms margins terms 
model parameters viewed defining log linear maxent probabilistic representation 
cfds provide formalism structured modeling allows algorithms formulated level generality covers mrfs bounded tree width weighted grammar formalisms pcfgs 
linear boolean models linear boolean model lbm triple set boolean variables values subset set assignments energy function call elements feasible configurations model 
extend configurations linear definition view vector vector simply inner product 
lbm defines probability distribution feasible configurations follows 
equation lbm really just log linear maxent model set restrictions features boolean element uniquely determined feature values :10.1.1.43.7345
critical issue represent feasible set discussing representation give examples representing structured models 
markov random fields introduce notation 
consider set variables domains assignment maps partial assignment maps subset variables dom appropriate values 
write dom dom dom 
possibly partial assignment unique assignment dom dom variables boolean assignment truth assignment 
possibly partial assignment variable assignment identical markov random field mrf consists variables energy terms configurations variables 
precisely assume finite set variables 
associated domains 
take domains yj finite sets yi 
define configuration assignment values variables 
mrf set variables plus set energy terms 
maps configuration real number 
set energy terms defines hypergraph variables 
specifically say depends variable yj exists configurations agree variables yj 
vk denote set variables depends 
sets vk define hypergraph variables 
vk sets define graph 
mrf defines probability distribution configurations equations represent mrf lbm represent configuration truth assignment boolean variables represent energy terms energy function boolean variables 
mrf construct boolean variables form yi yi variable yi 
energy term vk 
ym tuple values 
vk vi yi introduce boolean variable ym vm 
course truth assignments boolean variables correspond configurations random field order boolean assignment feasible exactly vn true furthermore ym vm true ym vm true 
section discusses method representing feasible set truth assignments 
define variable energy function follows 
ym vm 
vm parse distributions cfg chomsky normal form set productions form nonterminal symbols terminal symbol 
parse tree tree node labeled production grammar standard way 
weighted cfg production assigned energy weight 
parse tree write yield yield sequence terminal symbols leaves parse tree 
write total energy parse tree sum nodes energy production node 
string terminal symbols probability distribution parse trees yield defined follows 
yield construct lbm representation define set boolean variables 
length phrase variable xi nonterminal grammar 
phrase variable represents statement parse contains phrase nonterminal spanning string inclusive 
second branch variable xi yi jzj production grammar 
branch variable represents statement parse contains node labeled production left child node spans string right child spans 
terminal variable xi terminal production position input string 
terminal variable represents statement parse tree produces terminal symbol nonterminal position take set phrase branch terminal variables 
parse tree determines truth assignment variables take set assignments corresponding parse trees 
define energy boolean variable 
variable energy function equations 
xi xi yi jzj xi case factor diagrams cfds introduce notation 
set assignments values variables 
truth assignments assignment 
sets truth assignments 
support truth assignment set variables set assignment 
case factor diagram represents feasible set search tree set possible truth assignments 
search tree cases value individual variables factors feasible set product independent feasible sets possible 
represent case factor search tree expression 
definition case factor diagram cfd expression generated grammar boolean variable case expression case satisfy constraint appear factor expression factor satisfy constraint variable occurs 
case factor unit empty denote set variables occurring define meaning cfds convenient see cfd variables members common countably infinite set variables interpretation cfd finite set finite support assignments totally false assignment zero vector 
defined follows 
unit empty case factor note variables false assignments need mentioned 
contrast bdd mention variable required false 
contrast bdds give sparse representations sparse assignments assignments false 
example consider variables 
consider cfd ai defined follows 
unit ai case xi ai ai semantics stated ai set truth assignments satisfying constraint xj example consider bi defined follows 
unit bi factor case xi unit unit bi leave reader verify bi ai 
third example consider ci defined follows 
unit ci case xi ci empty ci contains single truth assignment xj xj general semantics property occur assignment 
arguments factor expression share variables number assignments factor equals number assignments times number assignments 
leave reader verify feasible set finite set variables represented cfd 
meaning cfd expressions independent representation data structures 
running time algorithms depends crucially representation 
algorithms discuss assume cfd expressions represented diagrams dags node distinct subexpression edges node expression nodes immediate subexpressions 
common subexpressions represented uniquely 
example cfd ai defined viewed tree leaves 
viewed diagram ai nodes different paths root node leaf node 
size cfd denoted defined number distinct subexpressions including 
words number nodes diagram view word node synonym expression 
standard dag notions parent child directed path cfds 
cfds mrfs define cfd representation feasible set lbm constructed section 
consider problem computing mrf assume variables fixed order 
yn 
assignments variables form tree root branch value level branches value 
variables assigned residual hypergraph defined energy terms factors disjoint sets terms disjoint sets variables 
compute factoring residual problem possible factoring possible casing value variable factoring may possible 
case factor process determines set subproblems 
nodes subexpressions cfd representation mrf correspond subproblems arise way 
subproblem defined subset energy terms partial assignment variables occurring 
formally consider subset energy terms set variables energy term depends vk 
partial assignment values variables 
note defined general variables boolean variables pair subset partial assignment define cfd 
cfd full feasible constraint set energy terms empty partial assignment 
partial assignment define graph structure energy terms saying edge energy terms variable assigned value terms depend 
key concise representation factor problem disconnected 
notation case 
zm dm abbreviation case case 
zn dn case case empty 
cfd defined follows 

disconnected partial assignment factor 
connected components factor 
dn abbreviates factor factor 
dn 

consists single constraint assigns values vk 
ym vi yi 
case 
ym vm unit empty 
earliest variable variable order dom 
case vn 
case vn vn show mrfs small tree width concise cfd representations 
define notion tree width 
definition consider fixed variable order 
yn 
consider 
say variable yj past define gi graph nodes energy terms energy terms connected edge depend variable 
connected component gi set energy terms called active contains variable 
tree width variable ordering maximum maximum active connected components gi number past variables component 
tree width minimum orderings tree width relative ordering 
note energy term variables past connected energy term 
implies inactive components gi singletons variables past 
implies energy term active component contain variable 
definition tree width matches standard definitions 
state standard definitions prove equivalence simply show definition tree width tree 
suppose energy term involves variables graph formed energy terms tree 
pick root tree consider variable ordering orders parents children 
suppose active connected component gi 
energy term active contain variable 
case energy terms active form tree edge contains variable 
tree root variable past ordering orders parents children 
number past variables active component 
theorem 
theorem tree width variable ordering 
nd number energy terms maxi yi 
proof definition viewed set rules generating pairs cfd contains 
call pair anchor pair exists active connected component gi assigns values past variables 
assume connected component variables contains variables anchor pair 
set exists connected component gi form tree increases connected components split ultimately terminating inactive singleton sets 
number nodes tree twice number leaves minus 
number appear anchor pairs 
anchor pair greatest index connected component gi 
variables past time 
anchor pair exists assigns values variables set satisfying property forms tree leaves 
number nodes larger twice number leaves number assignments 
total number anchor pairs cfd nd 
anchor pair generates certain set intermediate nodes cfd generating anchor pairs 
number intermediate nodes bounded number triples form anchor pair component 
triple form edge graph possible sets 
number edges tree larger twice number leaves 
number pairs appearing triples 
number assignments form 
number triples nd 
cfds parsing construct cfd feasible set lbm defined section grammar define cfd xi assignments xi correspondence parse trees span root nonterminal cfd representing full feasible set parses 
define xi follows xi represents consequences making xi true 
xi case xi xi empty define consequences xi follows case notation defined section 
xi case 
bn bn variables bp possible branch variables form xi yi jzj xi yi jzj factor yi zj 
ai ith input symbol case xi ai unit empty ai xi empty construction property number productions grammar 
importance zero suppression define feasible set parse trees grammar input string directly mrf boolean variables introduced section 
particular define mrf hard constraint energy terms energy terms infinite energy zero energy expressing constraints 

true 

xi true exists yi zj grammar contains xi yi jzj true 

xi yi jzj true yi yj true 

xi true grammar contain nth symbol input string xi true 

xi yi jzj true variable form xi wi uj true 

yi true different variable form xi yi jzj true variable form xk zk iyi true 
constraints implied 
constraints expressed sat problem set disjunctive clauses constraint requires clauses 
take resulting mrf compile graph algebraic expression :10.1.1.116.8371
approach mrf representation compiled form large 
graph representation nodes representing choice points corresponding constraint 
branch node produces node 
zero suppression context sensitive variable existence node list variables false node 
nodes cubic number variables false giving edges graph 
cfds edit distance pair hmms weighted finite state machines represent trainable weighted edit distance models text processing computational biology 
example expressive power cfds show construct cfd weighted edit distance problem 
start simple context independent edit cost model indicate extend context sensitive edit costs 
consider strings am bn alphabet view derived insertions deletions substitutions 
boolean variable xi represent statement long prefix bj derived editing long prefix ai 
require level statement xm true string derived editing string addition define edit variables ai states bj derived ai deleting symbol position deriving bj ai 
bi states bj derived ai inserting symbol position deriving bj ai 
si states bj derived ai substituting position position deriving bj ai 
define cfd xi follows xi case xi xi empty unit xi case ex ex fy fy sxy ex ai fy bi sxy si 
define ai bi si xi ai empty xi bj empty xi ai bj empty easy see xm mn agreement standard dynamic program computing best alignment 
cfd immediately build lbm weighted edit distance setting xi ai deletion cost bi insertion cost si cost substituting context dependent edits implemented subscripting variables different classes edit contexts enforcing context class constraints appropriate cfd 
inference cfd models cfd model lbm feasible set defined cfd energy function assigns costs variables main inference algorithms cfds 
inside algorithm 
consider problem computing defined equation 
write abbreviated form 
turns computed recursive descent subexpressions equations 
case factor unit empty correctness equations proved induction size caching computations subexpression equations give way computing time proportional 
equations analogous inside algorithm statistical parsing 
viterbi algorithm 
consider problem computing minimum energy elements 
particular define follows 
min compute equations 
case min factor unit empty correctness equations proved direct induction size equations easily modified compute truth assignment achieves minimum energy 
truth assignment highest probability 
marginals 
consider problem computing marginal probabilities form partial truth assignment fixes values cfd model variables 
show marginals computed time proportional dom 
marginal written follows suffices able compute 
define auxiliary quantity 
procedure computes computing subnodes note number values 
values satisfy equations factor unit empty expressions 
factor unit empty computing case expressions subtle 
equation defined 
case expresses constraint omitted variables default cfds 
exists occurs 
analyze running time computing note linear number values needed form 
assuming unit time hash table operations possible cache answer queries form dom node time 
cache call computed time proportional computation takes time proportional 
inside outside algorithm 
conditional probability algorithm compute variables take time 
generalization inside outside algorithm simultaneously compute variables time 
value inside value associated intuitively outside value node cfd total weight contexts node appears 
write state node occurs take node occur 
top level cfd dtop dtop define outside value dtop dtop follows 
define dtop dtop 
dtop define dtop follows 
dtop case dtop case dtop factor dtop factor dtop case dtop case dtop factor dtop factor dtop inside value node computed equations allows outside values computed top starting dtop dtop 
note recursion top level cfd dtop change 
write dtop dtop clear context 
dtop change top calculation done time proportional number nodes 
compute dtop follows 
theorem dtop dtop dtop dtop case dtop case proof introduce slight change notation put equations standard form exponential models 
recall energy assignment defined follows 
think vector components 
xn rewrite follows 
ixi think weight vector components write dtop follows 
dtop dtop dtop dtop ixi xie ixi dtop xi compute dtop xi suffices compute compute application chain rule inside rules calculating dtop 
analogous chain rule computing partial derivatives backpropagation tuning weights neural network 
think dtop function expand equation node dtop 
function dtop differentiated yielding defined value dtop 
show 
dtop dtop proof induction maximum depth occurs dtop 
base case dtop follows dtop dtop 
induction case assume shallower nodes 
ranges parents dtop dtop equation lists possible types parents consider case case 
case 
dtop case equations imply line covers form parent second line similarly covers parents form case 
suppose parent form factor 
case 
dtop factor equations imply third line properly handles parents form factor 
analysis line similar 
suffices show right hand side second equation theorem equals 
ranges parents variable dtop dtop parents variable exactly nodes form case 
case case equations imply right hand side second equation theorem equals desired 
described class structured probabilistic models case factor diagrams 
shown weighted context free grammar input string conditional probability represented cfd model nodes 
shown mrf tree width variables possible values energy terms represented cfd model nv nodes 
shown arbitrary cfd model computing partition function variable assignment probability boolean variable done time linear number nodes 
believe cfd models provide common language specifying algorithms stating theorems play structured probabilistic models similar role bdds boolean inference problems 
acknowledgments michael collins fernando pereira supported national science foundation eia respectively 
david allen adnan darwiche 
new advances inference recursive conditioning 
uai 
altun thomas hofmann 
large margin methods label sequence learning 
th european conference speech communication technology eurospeech 
bacchus 
algorithms complexity results sat bayesian inference 
focs pages 
bacchus 
value elimination bayesian inference backtracking search 
uai pages 
craig boutilier nir friedman moises goldszmidt daphne koller :10.1.1.16.1782
independence bayesian networks 
uai 
randal bryant :10.1.1.1.5124
graph algorithms boolean function manipulation 
ieee transactions computers 
collins 
parameter estimation statistical parsing models theory practice distribution free methods 
harry bunt john carroll giorgio satta editors new developments parsing technology 
kluwer 
revised version appeared iwpt 
adnan darwiche 
recursive conditioning 
artificial intelligence 
adnan darwiche :10.1.1.116.8371
differential approach inference bayesian networks 
journal acm pages may 
rina dechter 
search spaces graphical models 
ics technical report march 
stephen della pietra vincent della pietra john lafferty :10.1.1.43.7345
inducing features random fields 
ieee transactions pattern analysis machine intelligence 
durbin eddy krogh mitchison 
biological sequence analysis probabilistic models proteins nucleic acids 
cambridge university press 
jason eisner 
parameter estimation probabilistic finite state transducers 
proceedings th annual meeting association computational linguistics 
getoor friedman koller pfeffer :10.1.1.101.3165
learning probabilistic relational models 
dzeroski lavrac editors relational data mining 
springer verlag 
manfred jaeger 
probabilistic decision graphs combining verification ai techniques probabilistic inference 
international journal uncertainty knowledge systems 
kanazawa daphne koller stuart russell :10.1.1.48.7248
stochastic simulation algorithms dynamic probabilistic networks 
uai 
john lafferty andrew mccallum fernando pereira :10.1.1.120.9821
conditional random fields probabilistic models segmenting labeling sequence data 
proceedings icml 
mcmillan 
hierarchical representation discrete functions application model checking 
computer aided verification th international conference 
shin ichi 
zero suppressed bdds set manipulation combinatorial problems 
proc 
th acm ieee design automation conference dac pages 
acm press 
david poole :10.1.1.50.603
probabilistic horn abduction bayesian networks 
artificial intelligence 
yianilos 
learning string edit distance 
ieee transactions pattern analysis machine intelligence 
taskar guestrin koller 
max margin markov networks 
neural information processing systems conference nips 

