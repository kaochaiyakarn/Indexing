query humming musical information retrieval audio database jonathan logan david chamberlin brian smith cornell university cs cornell edu logan ghs com chamber engr sgi com emergence audio video data types databases require new information retrieval methods adapted specific characteristics needs data types 
effective natural way querying musical audio database humming tune song 
system querying audio database humming described scheme representing melodic information song relative pitch changes 
relevant difficulties involved tracking pitch enumerated approach followed performance results system indicating effectiveness 
keywords musical information retrieval multimedia databases pitch tracking generation databases include image audio video data addition traditional text numerical data 
data types require query methods appropriate natural type respective data 
instance natural way query image database retrieve images operations images sketches supplied input 
similarly natural way querying audio database songs hum tune song 
system useful multimedia database containing musical data providing alternative natural way querying 
imagine widespread system commercial music industry music radio tv stations music stores personal 
address issue specify query report efficient query execution implementation approximate pattern matching 
approach hinges observation melodic contour defined sequence relative differences pitch successive notes discriminate melodies 
handel indicates melodic contour important methods listeners determine similarities melodies 
currently alphabet possible relationships pitches representing situations note previous note pitch tracked quite robustly 
current implementation system successfully able retrieve songs notes 
database currently comprises collection parts melody songs suggesting way discrimination useful finding particular song private music collection higher resolutions probably necessary larger databases 
organized follows 
section describes architecture current system 
second section describes pitch important representing melodic contents songs techniques tracking pitch tried discarded method settled 
discuss pattern matching current implementation database 
sections describe evaluation current system extensions considering incorporating existing system 
system architecture main components system module melody database query engine 
architecture illustrated operation system straight forward 
queries microphone digitized fed pitch tracking module 
result contour representation melody fed query engine produces ranked list matching melodies 
midi songs queries digital audio pitch tracker melodic contour melody database query engine system architecture ranked list matching melodies database melodies acquired processing public domain midi songs stored flat file database 
pitch tracking performed matlab chosen built audio processing capabilities ease testing number algorithms 
queries may recorded variety formats depending platform specific audio input capabilities matlab 
experimented bit khz wav format pentium system bit khz au format sun sparcstation 
query engine uses approximate pattern matching algorithm described order tolerate humming errors 
tracking pitch queries section describes user input system humming converted sequence relative pitch transitions 
note input classified ways note previous note higher previous note lower previous note 
input converted string letter alphabet 
example introductory theme beethoven th symphony converted sequence note ignored previous pitch 
accomplish conversion sequence pitches melody isolated tracked 
straightforward sounds considerable controversy exactly pitch general concept pitch clear note pitch frequency closely matches hear 
performing conversion computer troublesome intricacies human hearing understood 
instance play harmonics fundamental frequency hear fundamental frequency harmonics fundamental frequency 
phenomenon discovered pioneer investigations carried 
studied pitch periodic sound waves produced optical siren fundamental hz canceled completely 
pitch complex tone prior elimination fundamental 
interested tracking pitch humming examined methods automatically tracking pitch human voice 
estimate pitch acoustic signal understand signal created requires forming model sound production source 
vibrations vocal cords voiced sounds caused consequence forces exerted walls air flows gap vocal cords 
hess describes model vocal cords proposed 
purposes sufficient know repeatedly opens closes air vocal tract 
vocal tract modeled linear passive transmission system transfer function add additional transfer function takes account radiation output impedance vocal tract approximately set zero 
neutral position vocal tract regarded uniform tube resonances vocal tract occur sound wavelengths cm average value vocal tract length sound propagation speed frequencies resonances frequencies called formant frequencies 
resulting sound hear considered convolution excitation pulse created formant frequencies 
want model speech signal start train excitation pulses shown 
formant frequencies equation gives formant frequencies combining frequencies adding exponential envelope produces formant structure shown 
convolving train excitation pulses formant structure get synthesized pitch shown 
terms vocal folds vocal chords syn literature excitation signal train excitation signals excitation signal create synthesized pitch 
period train excitations making pitch hz 
formant signal formant structure created hz hz hz formant frequencies synthesized pitch hz time ms synthesized pitch hz created convolving train excitation pulses spaced formant structure model human voice converted pitch 
prevalent view pitch hear pitch frequency bursts air occur 
track bursts air find pitch segment 
tracking pitch tried methods tracking pitch autocorrelation maximum likelihood cepstrum analysis 
autocorrelation autocorrelation oldest classical pitch trackers 
autocorrelation isolates tracks peak energy levels signal measure pitch 
referring back see signal peaks impulses occur 
tracking frequency peaks give pitch signal 
order get frequency peaks employ autocorrelation defined unfortunately autocorrelation subject aliasing picking integer multiple actual pitch computationally complex 
implementation autocorrelation require approximately seconds seconds khz bit audio mhz pentium workstation 
maximum likelihood maximum likelihood modification autocorrelation increases accuracy pitch decreases chances aliasing 
unfortunately computational complexity method autocorrelation look fast 
straight forward implementation matlab takes approximately hour evaluate seconds audio mhz pentium workstation 
optimizations improved performance approximately minutes seconds audio far slow purposes 
discarded method 
detailed explanation method reader may refer 
cepstrum analysis cepstrum analysis definitive classical method pitch extraction 
explanation reader directed oppenheim schafer original compact form 
method give accurate results humming 
output methods construed sequence frequency estimations successive pitches input 
convert estimates step contour representation comparing estimated pitch previous 
system adjacent pitches considered quarter step equal tempered musical scale parameter adjustable 
analyzing costs benefits methods decided modified form autocorrelation implementation 
searching database having described user input tune converted string letter alphabet discuss method searching audio database 
method searching database simple 
songs database preprocessed convert melody stream characters converted user input key compared songs 
pattern matching uses fuzzy search allow errors matches 
errors reflect inaccuracies way people hum errors representation songs 
performing key search database need efficient approximate pattern matching algorithm 
approximate mean algorithm able take account various forms errors 
summarizes various forms errors anticipated typical pattern matching scheme 
algorithm text pattern casablanca casablanca casablanca bla transposition error dropout error duplication error forms anticipated errors mismatch adopted purpose described yates 
algorithm addresses problem string matching mismatches 
problem consists finding instances pattern string text string mismatches characters instance mismatches simple string matching problem solvable time 
substring length qualifies match character mismatched 
errors corresponds 
worth mentioning algorithms developed address problem approximate string matching 
running times ranged brute force algorithm log 
algorithm adopted offers better performance average cases algorithms 
worst case algorithm occurs key consists occurrences single distinct character character 
case running time common useful situation purposes 
average case alphabet character equally occur running time size alphabet 
contour representation song consists instances database incorporates key searching scheme pattern matching techniques explained 
envisioned design goals database 
query database returns list songs ranked matched query just best match 
number matches database retrieve depends error tolerance key search 
error tolerance set possible ways user definable parameter database determine parameter example heuristics depends length key 
design gives user opportunity perform queries user sure notes tune 
results query user identify song interest 
list large user perform new query restricted search list consisting songs just retrieved 
consequence scheme user identify sets songs contain similar melodies 
evaluation section describes results experimental evaluation system 
evaluation tested tolerance system respect input errors mistakes user humming problems pitch tracking 
robustness effectiveness method directly related accuracy pitches tracked accuracy melodic information database 
ideal circumstances achieve close accuracy tracking humming ideal circumstances mean user places small amount space note hits note strongly 
purpose humming short notes encouraged 
ideal user notes possible going far voice vowel 
currently experimented male voices 
evaluation database currently contains total songs 
song converted public domain general midi sources 
melodies different musical genres included including classical popular music 
simple heuristics cut amount irrelevant information data midi channel ignored reserved general midi standard 
database contains great deal information unrelated main theme melody 
limitation discovered sequences pitch transitions sufficient discriminate songs 
consequence fast approximate string matching algorithm search keys matched portion melody just 
size database grows larger may prove advantage 
performance version pitch tracker modified form autocorrelation takes seconds sparc workstation process typical sequences notes 
brute force search database unsurprisingly shows linear growth size database remains seconds songs sparc 
search time currently effectively limited efficiency pitch tracker 
contour representations song currently stored separate files opening closing files significant overhead 
performance improved packing songs file database manager 
plan modularize code independent particular database schema 
directions related plan improve performance speed robustness pitch tracking algorithm cubic spline wavelet 
cubic spline wavelet peaks discontinuities signal air impulses 
significant features wavelet analysis computed time 
currently pitch tracker slowest link system wavelets purpose obvious advantages 
pattern matching algorithm form discriminate various forms pattern matching errors discussed earlier accounts collectively 
forms errors may common depending way people casually hum different tunes 
example drop errors reflected dropped notes tunes common transposition duplication errors 
tuning key search tolerant drop errors example may yield better results 
melodic contours source songs currently generated automatically midi data convenient optimal 
accuracy redundant information obtained entering melodic themes modifications include low pass filtering center clipping described sondhi help eliminate formant structure generally causes difficulty autocorrelation pitch detectors 
particular songs hand 
research standpoint interesting question extract melodies complex audio signals 
characterize improvement gained increasing resolution relative pitch differences considering query alphabets possible relationships adjacent pitches 
early experiments alphabet relative pitch differences higher higher lower lower verified changes sort promising 
drawback introducing resolution user somewhat accurate intervals hum 
explore various tradeoffs involved 
important issue precisely draw line notes little higher previous note higher 
previous efficiently searching database melodies humming limited 
mike hawley briefly discusses method querying collection melodic themes searching exact matches sequences relative pitches input midi keyboard 
incorporated approximate pattern matching implementing actual audio database midi songs significantly allowing queries 
published retrieving melodies melody japanese journal unable locate translated version 

ricardo yates chris 
fast practical approximate string matching 
combinatorial pattern matching third annual symposium pages 

ricardo baeza yates gonnet 
fast string matching mismatches 
information computation 

stephen handel 
listening perception auditory events 
mit press 

michael jerome hawley 
structure sound 
phd thesis mit september 

wolfgang hess 
pitch determination speech signals 
springer verlag berlin heidelberg 


structure behavior vocal folds 
cooper editors dynamic aspects speech production pages 
university tokyo press 

rabiner schafer 
realtime digital hardware pitch detector 
ieee transactions acoustics speech signal processing assp feb 


melody retrieval method melody language japanese 
transactions institute electronics information communication engineers ii ii august 

landau vishkin 
efficient string matching mismatches 
theoretical computer science 

oppenheim 
speech analysis synthesis system homomorphic filtering 
acoustical society america february 

alan oppenheim ronald schafer 
discretetime signal processing 
prentice hall englewood cliffs nj 


aspects tone sensation 
academic press london 

sondhi 
new methods pitch extraction 
ieee trans 
audio 
special issue speech communication processing au june 

james wise james thomas parks 
maximum likelihood pitch estimation 
ieee trans 
acoust speech signal processing october 
