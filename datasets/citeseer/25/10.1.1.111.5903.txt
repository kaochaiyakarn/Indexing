ontologies principles methods applications mike uschold michael gruninger aiai tr february appear knowledge engineering review volume number june mike uschold michael gruninger arti cial intelligence applications institute department industrial engineering aiai university edinburgh university south bridge toronto ontario edinburgh eh hn scotland canada tel fax email uschold ed ac uk utoronto ca university edinburgh 
intended serve comprehensive emerging eld concerned design ontologies 
observe disparate backgrounds languages tools techniques major barrier ective communication people organisations software systems 
development implementation explicit account shared understanding ontology subject area improve communication turn give rise greater reuse sharing inter operability reliable software 
motivating need clarify just ontologies purposes serve 
outline methodology developing evaluating ontologies rst discussing informal techniques concerning issues scoping handling ambiguity reaching agreement producing de nitions 
consider bene ts describe formal approach 
re visit scoping phase discuss role formal languages techniques speci cation implementation evaluation ontologies 
review state art practice emerging eld considering various case studies software tools ontology development key research issues prospects 
aiai tr ontologies page contents ontologies 
problems 
examples unifying research fields semi conductor fabrication spacecraft mission operations ontology 
uses ontologies communication inter operability ontologies inter lingua dimensions inter operability systems engineering speci cation reliability reusability methodology building ontologies purpose scope building ontology capture coding integrating existing ontologies aiai tr ontologies page ii evaluation documentation initial guidelines designing ontologies ontology capture scoping produce de nitions deciding reaching agreement review meta ontology approach design evaluation role formal languages declarative speci cation implementing ontologies role automation overview formal methodology motivating scenarios informal competency questions terminology informal terminology speci cation formal terminology formal competency questions speci cation formal axioms completeness theorems ontologies practice aiai tr ontologies page iii ontologies inter operability process interchange format plan ontology role standards ow management coalition step corba kif conceptual graphs implemented integrated ontologies cyc tove enterprise computer support tools ksl ontology server background overview specifying ontologies translation directions project ontology setting scope ontology development information ontologies enable enterprise model integration aiai tr ontologies page iv enterprise model integration 
model integration hard 
ontologies 
enable integration enterprise modeling tools 
enable integration enterprise models 
advantages ontologies technology 
aiai tr ontologies page goal give readers practical understanding emerging eld concerned nature ontologies 
eld comprehensive review 
particular aim readers outline understand meant term ontology know range purposes ontology may serve able identify ontology problems familiar number current applications ontologies familiar current state technology particular main steps building ontology analytical techniques software tools support process building ontologies current limitations techniques better understanding potential commercial exploitation ontologies short medium long term 
motivating need ontologies particular describing number important problems obstruct communication people organisations software systems 
illustrate development implementation explicit account understanding 
ontology subject area help solve problems 
brie consider nature ontology range uses 
outline skeletal methodology process developing ontologies 
subsequent sections generalise summarise experiences developing signi cant ontologies domain enterprise modelling 
doing elaborate speci steps outlined skeletal methodology 
consider rst important informal techniques ontology development 
proceed considering important concepts ideas domain interest limiting scope ontology 
give procedure suggest guidelines producing actual de nitions reach agreement 
consider advantages describe formal approach development ontologies 
re visit scoping phase discuss role formal languages techniques speci cation implementation evaluation ontologies 
aiai tr ontologies page describe variety practical applications ontologies 
case studies reviewing available way tools techniques ontology development implementation 
conclude reviewing important research issues summarising state art discussing directions 
ontologies 
problems 
people organisations software systems communicate 
due di erent needs background contexts widely varying viewpoints assumptions regarding essentially subject matter 
uses di erent jargon mayhave di ering overlapping mis matched concepts structures methods 
consequent understanding leads poor communication people organisations 
context building system lack shared understanding leads di culties identifying requirements de ning speci cation system 
disparate modelling methods paradigms languages software tools severely limit inter operability potential re sharing 
turn leads wasted ort re inventing wheel 
solve 
way address problems reduce eliminate conceptual terminological confusion come shared understanding 
understanding function unifying framework di erent viewpoints serve basis communication people di erent needs viewpoints arising di ering contexts aiai tr ontologies page inter operability systems achieved translating di erent modelling methods paradigms languages software tools system engineering bene ts particular re usability shared understanding basis formal encoding important entities attributes processes inter relationships domain interest 
formal representation may automatic translation re usable shared component system 
reliability formal representation possible automation consistency checking resulting reliable software 
speci cation shared understanding assist process identifying requirements de ning speci cation system 
especially true requirements involve di erent groups di erent terminology domain multiple domains 
examples unifying research fields describe interesting example shared understanding enhance communication people 
situation problem researchers di erent related elds ai planning decision theory distributed systems theory theoretical computer science readily results 
di erent perspective di erent terms describe underlying ideas 
solution develop unifying conceptual framework enables research results eld applied elds 

identify common ideas elds terms correspond 
perform careful technical analysis exactly concepts identify exact matches note important relationships 
unifying conceptual framework intended function lingua franca enabling translation di erent perspectives sub elds 
new research result published may results eld terms 
example new algorithm solve problem distributed systems theory new search algorithm ai planning system 

allowing conceptual frameworks underlying assumptions elds compared built great potential increasing rate progress elds avoiding re discovering equivalent results 
aiai tr ontologies page example obtained invited talk michael george titled agents plans ijcai montreal 
remains done uni cation fully accomplished preliminary results encouraging semi conductor fabrication situation problem software bought outside includes wip tracking system production line simulation package 
simulation package requires input large description model product ow incorporates various details wip tracking mechanism 
new versions simulation package released new supplier chosen model converted new format 
conversion time consuming error prone 
solution automate process converting model new external software introduced 
saves time ensures model delity 

intersecting domains interest wip tracking product ow simulation semi conductor fabrication process 
whichever particular wip tracking system simulation package underlying concepts 
approach develop unifying framework identi ed de ned named important concepts intersection 
models expressed terms framework stored oracle relational database 
automatic translator converts models oracle db format required simulation software 
simulation software changes translator changed manually 
changes usually relatively minor especially compared original task manually converting model 
oracle db populated translator extracts information wip tracking system 
just db entries automatically translated model components required input simulator wip system tracking entries automatically translated db entries 

insulates semiconductor fabrication software provided externally saving time ensuring model delity 
development unifying framework assisted speci cation software representing appropriate concepts model translating appropriate format 
framework basis implementing sound software engineering practice modularity turn facilitated inter operability independently produced software 
directly corresponds talk material covered anumber papers may www oz au 
wip progress trackers monitor location status products assembled 
updated time value added production 
aiai tr ontologies page spacecraft mission operations situation problem various knowledge systems developed independently assist di erent aspects spacecraft operations planning anomaly detection diagnosis 
uses approach structuring representing relevant concepts large knowledge base 
desirable integrate system knowledge 
example mission planning results inputs mission execution system anomalies input diagnosis system 
di ering approaches barrier 
furthermore undesirable impractical impose uniform approach individual systems 
solution federated agent approach sharing 
system called advanced technology operations system 

identify important underlying concepts de ne assign terms note important inter relationships 
unifying framework basis achieving inter system integration 
heart infra structure 
separate module remains unchanged agents act brokers individual systems 
unifying framework acts standard comply terms resource schedule carefully de ned agreed meaning 
compliance serves guarantee agents terms particular manner turn enables knowledge sub system accessible sub systems 
framework acts lingua franca 
agent translates encoding independent representation unifying framework vice versa 
framework represented formal language facilitates semi automatic development agent translators ensuring compliance standard 

approach facilitates knowledge sharing inter operability independently developed sub systems 
ontology 
ontology term refer shared understanding domain interest may unifying framework solve manner 
ontology necessarily entails embodies sort world view respect domain 
world view conceived set concepts entities attributes processes de nitions inter relationships referred conceptualisation 
aiai tr ontologies page conceptualisation may existing head embodied piece software 
example accounting package presumes world view encompassing concepts invoice department organisation 
word ontology refer implicit conceptualisation 
standard usage adopt ontology explicit account representation part conceptualisation 
ontology look 
explicit ontology may take avariety necessarily include vocabulary terms speci cation meaning de nitions 
degree created meaning speci ed varies considerably 
somewhat arbitrary points thought highly informal expressed loosely natural language semi informal expressed restricted structured form natural language greatly increasing clarity reducing ambiguity text version enterprise ontology ct see 
semi formal expressed arti cial formally de ned language ontolingua version enterprise ontology rigorously formal de ned terms formal semantics theorems proofs properties soundness completeness 
tove 
quote shared re usable knowledge bases electronic mailing list nicely summarises ontology various forms contexts arises 
ontologies agreements shared conceptualizations 
shared conceptualizations include conceptual frameworks modeling domain knowledge protocols communication inter operating agents agreements representation particular domain theories 
knowledge sharing context ontologies speci ed form de nitions representational vocabulary 
simple case type hierarchy specifying classes subsumption relationships 
relational database schemata serve specifying relations exist shared database integrity constraints hold 
closing remarks focus identifying real problems identifying real approaches solving 
aim non controversial merely re ecting ontology community 
separate concern unfortunate fact agreed meaning term see competent analysis situation 
aiai tr ontologies page communication people reusable components speci cation systems engineering inter operability systems reliability identify main categories uses ontologies 
distinctions may important nature software intended users general domain uses ontologies part confusion due fact central ideas issues addressed number contexts elds di erent terminology 
example strong conceptual schema data base ontology 
areas concerned issues include knowledge representation acquisition ontologies natural language understanding domain modelling software engineering enterprise integration 
uses ontologies section review elaborate motivations ontologies discussed 
doing characterise space uses ontologies 
literature currently rich descriptions ontologies intended purposes 
high level intended manner re 
purposes implicit various interpretations word ontology commonly literature noted vs meta level speci cation logical theory 
dimensions variation include nature software intended shared small group reused context variety applications intended re larger community 
view ontologies mainly means structure knowledge base conceive part knowledge aiai tr ontologies page base loading set sentences added appropriate view ontology application speci inter lingua 
important integrate models di erent domains coherent framework 
arises business process reengineering integrated model enterprise processes organisations goals customers distributed di erent agents need communicate solve problems concurrent engineering design 
intuitions sub divide space uses ontologies categories communication inter operability systems engineering speci cation reliability reusability communication recall ontologies reduce conceptual terminological confusion providing unifying framework organisation 
way ontologies enable shared understanding communication people di erent needs viewpoints arising particular contexts 
consider detail aspects ontologies facilitate communication people organisation 
normative models large scale integrated software system di erent people shared understanding system objectives 
ontology construct normative model system 
creates semantics system extendible model re ned allows semantic transformations di erent contexts 
networks relationships ontologies create network relationships keep track explore navigate network 
implicit system people di erent perspectives di erent assumptions 
lack shared understanding concerning nature key relationships system 
particularly important applications require multiple ontologies di erent domains 
ontologies serve assumptions explicit identifying logical connections elements models system 
general want ontology support ability reason impact possible changes system 
example ontology support enterprise modelling allows capture picture enterprise 
aiai tr ontologies page answer questions enterprise model scenarios related changing di erent parts enterprise reengineering 
consistency lack important roles ontology plays communication provides unambiguous de nitions terms software system 
set software tools able maintain consistency ontologies need uniform 
may problem user ontology di erent supporting tool 
case provide environment represent di erent meanings terms di erent people meaning mapper 
involves identifying relevant assumptions di erent people tools ontologies ability capture multiple synonyms utilise translation various audiences 
integrating di erent user perspectives system multiple communicating agents shared understanding vital 
face challenge integrating di erent perspectives capturing key distinctions perspective 
example people di erent positions organisation di erent perspectives organisation goals achieves goals achieved 
problem integrating global local views system 
ontology provide normative model system integration achieved assisting participants communicating coming agreement 
lays groundwork development standards community 
adopting shared ontology participants standardised terminology objects relations domains 
inter operability applications ontologies address issue inter operability wehave different users need exchange data di erent software tools 
major theme ontologies domains modelling multiagent architectures creation integrating environment di erent software tools 
toolkits spot solutions exist consistency tools 
ontologies inter lingua information technology environment business process reengineering multiagent systems integrated enterprise models spanning activities resources organisation goals products services 
integrated enterprise models serve repository accessible multiple tool sets 
serve existing data repositories terminology di erent users repositories providing semantic foundations aiai tr ontologies page os ssw interlingua os ssw translate language li lj vice versa translator required li inter lingua inter lingua lj 
languages translators required 
translators di erent users 
ontology inter lingua assist inter operability ontologies support translation di erent languages representations 
approach design unique translators party exchange require translators di erent ontologies see gure 
ontologies inter lingua support translation reduce number translators forn di erent ontologies require translators native ontology interchange ontology see gure 
approach taken process interchange format pif project 
dimensions inter operability addition tools repositories distinctions 
need consider nature relationships users sharing tools data 
vital ontologies tools di erent agents organisations enterprise sharable reusable multiple organisations 
internal inter operability internal inter operability systems requiring interoperation direct control organisational unit 
di erences exist historical reasons legacy systems need integrated 
aiai tr ontologies page procedure viewer procedure 
give procedure translator procedure process process 
procedure 
ontology method process 
process translator give process 
method give method 
method library illustrates ontology inter lingua integrate di erent software tools 
term procedure translated term method ontology term underlying concept process 
ontology inter lingua example aiai tr ontologies page external inter operability external inter operability wehave organisational unit wishes insulate changes imposed outside semi conductor example 
note external mean department organisation 
integrated ontologies domains distinction inter operability arises issue integration ontologies di erent domains order support task 
example ontology support ow management systems need integrate ontologies processes resources products services organisation 
set ow tools set integrated ontologies 
integrating ontologies tools hand wemay need integrate di erent ontologies domain legacy systems 
example di erent tools may di erent process ontologies achieve inter operability common ontology sets tools 
di cult challenge facing ontologies usually possible impose requirement tools need construct ontologies tools 
systems engineering applications ontologies considered point role ontologies play operation software systems 
section consider applications ontologies support design development systems 
speci cation shared understanding problem task hand assist speci cation software systems 
example ibm business system development method develops uses ontology organisation basis design development organisation 
commonkads conceptual modelling language cml build domain task ontologies assist speci cation knowledge systems 
idea explored project see 
role ontologies play speci cation varies degree formality automation system design methodology 
informal approach ontologies facilitate process identifying requirements system understanding relationships components system 
particularly important systems involving distributed teams designers working di erent domains 
aiai tr ontologies page formal approach ontology provides declarative speci cation software system allows reason system designed system supports functionality 
reliability informal ontologies improve reliability systems serving basis manual checking design speci cation 
formal ontologies enables semi automated consistency checking software system respect declarative speci cation 
addition formal ontologies explicit various assumptions di erent components software system facilitating integration 
example integrated development support environment semantic constraints relationships di erent maintained successful tool integration 
axioms stating constraints interpreted enforced semi automatically facilitating integration see appendix details 
closely related declarative constraints maintain semantic integrity data bases 
declaratively speci ed assumptions may explicitly restrict applicability particular ontology problem domain 
proving ontology capable supporting various reasoning problems demonstrate reliability software system domain 
reusability ective ontologies support reusability import export modules di erent software systems 
problem software tools applied new domains may perform expected relied assumptions satis ed original applications new ones 
characterizing classes domains tasks domains ontologies provide framework determining aspects ontology reusable di erent domains tasks 
ontologies provide easy re library class objects modelling problems domains 
ultimate goal approach construction library ontologies reused adapted di erent general classes problems environments 
library constructed knowledge systems laboratory online ontology server see 
useful ontologies customisable class problems class users managers consultants engineers 
ontologies library extendible allowing incorporation new classes constraints specialisation concepts constraints particular problem 
aiai tr ontologies page approach extendibility notion partially shared views process interchange format project see 
core pif ontology translators operate 
addition di erent extensions core ontology ontologies may share 
pif extensions captured partially shared views ontologies partially shared view common translate loss expressiveness 
similarly plan ontology see set modular specialised ontologies augment general categories sets concepts alternative theories detailed notions commonly planning systems speci ontologies theories time points temporal relations complex actions 
closing remarks far motivated need ontologies clari ed described variety circumstances 
sections turn attention process building evaluating ontologies 
describe important steps building ontology elaborated sections 
methodology building ontologies collective experience developing ontologies eld ontological engineering comparable knowledge engineering 
particular standard methodologies building ontologies published area research literature 
attempt lling gap envisage comprehensive methodology developing ontologies include identify purpose scope building ontology ontology capture ontology coding integrating existing ontologies evaluation documentation guidelines phase 
brie de ne stage indicate reported develop comprehensive methodology 
aiai tr ontologies page purpose scope important clear built intended uses 
previous section explores space possible uses starting point identifying purpose ontology constructed 
useful identify characterise range intended users ontology 
building ontology identi cation purpose scope ontology general terms serves provide reasonably de ned target building ontology 
aspects capture coding integration existing ontologies 
capture ontology capture mean identi cation key concepts relationships domain interest production precise unambiguous text de nitions concepts relationships identi cation terms refer concepts relationships nally agreeing 
directly relevant reported skuce argues intermediate representation conceptualisation formal loosely structured natural language formal formal language 
proposes speci format representation include assumptions justi cations precisely de nitions 
describe method successfully ontology capture development enterprise ontology enterprise project 
coding coding mean explicit representation conceptualisation captured previous stage formal language 
involve committing basic terms specify ontology class entity relation called meta ontology essence underlying ontology representational terms express main ontology choosing representation language capable supporting meta ontology writing code 
aiai tr ontologies page regards choosing language possibly extensive done area project see appendix 
experimented large languages representing ontology materials science domain 
experiences serve starting point developing guidelines choosing representation languages ontologies 
coding capture merged single step 
design decisions ksl ontology editor presume ontology builders may conceptualisation may appropriate cases experience suggests bene ts derive separating 
insofar ontology kind knowledge base wealth useful methodological guidance potentially applicable 
comprehensive methodology clear applies building ontologies opposed knowledge bases general 
clarify circumstances capture coding stages may merged 
important research issues time 
integrating existing ontologies capture coding processes question part ontologies exist 
general di cult problem 
important progress area described 
implemented ksl ontology server 
skuce main point ontologies shared multiple user communities done achieve agreement 
way forward explicit assumptions underlying ontology 
provision guidance tools area may biggest challenges developing comprehensive methodology building ontologies 
easy identify synonyms extend ontology concepts readily exist 
obviously similar concepts de ned existing ontologies rarely clear concepts adapted reused 
evaluation gomez perez provides de nition evaluation context knowledge sharing technology technical judgement associated software environment documentation respect frame frame may requirements speci cations competency questions real world 
email communication james rice 
aiai tr ontologies page detailed done evaluation ontologies contribute comprehensive methodology building ontologies 
approach taken look rst done eld kbs adapt ontologies 
documentation may desirable established guidelines documenting ontologies possibly differing type purpose ontology 
pointed skuce main barriers ective knowledge sharing inadequate documentation existing knowledge bases ontologies 
address problems important assumptions documented main concepts de ned ontology aswell primitives express de nitions ontology meta ontology 
facilities provided ontolingua supported ksl ontology editor facilitate formal informal documentation assumptions 
facilities may conceptually straightforward signi cant bene initial guidelines designing ontologies comprehensive methodology building ontologies include set techniques methods principles stages indicating relationships exist stages recommended order interleaving inputs output 
rst attempt consolidate experience gained developing ontologies describe 
summarised set design criteria emphasis sharing reuse 
subsequent sections elaborate points reporting authors experiences developing ontologies enterprise modelling 
clarity ontology ectively communicate intended distinctions humans design agents 
means ambiguity minimised distinctions motivated examples help reader understand de nitions lack necessary su cient conditions 
de nition speci ed formal axioms 
cases de nitions documented natural language examples help clarify intent 
coherence ontology internally consistent 
de ning axioms logically consistent 
coherence apply parts de nitions axiomatic natural language documentation examples 
aiai tr ontologies page extensibility ontology designed anticipate uses shared vocabulary 
er conceptual foundation range anticipated tasks representation crafted extend specialise ontology monotonically 
able de ne new terms special uses existing vocabulary require revision existing de nitions 
criteria help achieve extensibility 
minimal ontological commitment ontology require commitment su cient support intended knowledge sharing activities 
ontology serves di erent purpose knowledge base di erent notion representational adequacy completeness applies 
shared ontology need describe vocabulary talking domain knowledge base may include knowledge needed solve problem answer arbitrary queries domain 
ontology claims possible world modelled allowing parties committed ontology freedom specialise instantiate ontology needed 
making commitments limit extensibility making result ontology consistent incorrect unintended worlds models 
reason bene cial ontological commitments respect aspects intrinsic domain guideline applies contingent aspects domain 
minimal encoding bias conceptualisation speci ed knowledge level depending particular symbol level encoding 
encoding bias axiomatisation representation choices purely convenience notation implementation minimised 
goal enable knowledge sharing agents may implemented di erent representation systems styles representation 
concludes overview ontology development methodology brief consideration initial guidelines 
section elaborate ontology capture phase 
ontology capture recall ontology capture consists identifying de ning important concepts terms 
section outline procedure ontology capture describe detail actual process went creating enterprise ontology 
set normative guidelines supposing better approaches 
approach particular circumstances 
emphasis informal techniques output semi informal ontology consisting carefully de ned terms expressed restricted aiai tr ontologies page natural language form glossary 
describe formal approach better suited di erent set circumstances 
consider phases turn scoping producing de nitions review development meta ontology 
scoping brainstorming brain session produce potentially phrases stage terms represent concepts concealing signi cant ambiguities di erences opinion 
brainstorming worked collectively involved possess insu cient domain expertise corpus knowledge may need consulted ensure adequate coverage 
grouping structure terms loosely areas corresponding naturally arising sub groups 
case groups arose related terms group terms groups 
speci cally term provisionally categorise inclusion exclusion note borderline case 
determined mainly previously agreed requirements document keep notes record decisions group similar terms potential synonyms consideration 
identify semantic cross areas concepts refer referred concepts areas 
information help identify rst minimise likelihood re see 
concludes consideration informal methods scoping consider scoping formal context 
produce de nitions scoping important concepts terms ed 
main building ontology producing de nitions 
consider may important certain things detailed guidelines suggestions reaching agreement handling ambiguity producing nal wording de nitions 
aiai tr ontologies page deciding determining meta ontology initially particular meta ontology 
doing may constrain thinking potentially lead inadequate incomplete de nitions 
ends wrong de nitions may re done 
careful consideration concepts inter relationships determine requirements meta ontology 
keep mind various possibilities words phrases consistent manner appropriate role entity relationship type instance 
note guideline applies informal capture phase 
meta ontology determined coding begins constrained representation language chosen 
areas address area turn 
start areas semantic overlap areas 
important get right rst place mistakes lead re 
little overlap areas order 
terms proceed middle fashion top bottom 
de ne fundamental terms area moving speci terms area 
experience easier relate terms di erent areas precisely 
reduce potential re 
quite important point discussed greater detail 
idea fundamental basic psychological phenomenon discussed length 
example dog basic mammal generalisation specialisation 
di erences arise individuals widely varying expertise area dog breeder may regard particular species basic broadly basic people 
enterprise ontology basic concepts included sale activity 
idea market concept de ned terms actual potential sales 
speci kind sale speci service particular area 
bene ts middle approach choice go top middle bottom number ects see gure 
bottom approach results high level detail 
turn increases ort di cult spot commonality related concepts increases risk inconsistencies leads turn re ort 
top approach results better control level detail starting aiai tr ontologies page capture commonality consistency accuracy approach level detail ort rework stability various issues ected choice go bottom top middle 
easier spot commonality results stable models keeps level detail control 
reduces inaccuracies turn leads re ort 
middle 
top result choosing imposing arbitrary high level categories 
naturally arising risk stability model turn leads re greater ort 
emphasis dividing putting results di erent reason missing commonality inherent complex web inter connected concepts 
middle approach contrast strikes balance terms level detail 
detail arises necessary specialising basic concepts ort avoided 
starting important concepts rst de ning higher level concepts terms higher level categories naturally arise stable 
turn leads re ort 
stability spotting commonality extremely important illustrated real examples 
bottom approach major uk aerospace years produce soon date model 
organisations top analysis leads failure recognise entity seller respect organisation 
results common occurrence complains owes money responds money 
root problem failure recognise primary concepts legal entities relationships sale agreement 
buyer seller secondary concepts roles de ned terms sale agreement 
systems viewing roles primary typically recognise multiple roles may cor aiai tr ontologies page respond underlying legal entity 
consequently banks lend money companies debt di erent department people get multiple statements nancial institution account single statement summarising accounts 
idea role secondary notion discussed 
middle approach successfully years part developed ibm problems noted largely avoided 
major part method entails development shared understanding important things organisation unifying framework specifying developing organisation 
shared understanding referred business map business model calling ontology 
see comparison ontology business modelling communities 
major bene stability currently ibm developing signi cant business production generic models basis number companies industry insurance 
models stable limited 
reaching agreement considerable variation degree ort required agree de nitions terms underlying concepts 
terms consensus de nition single concept fairly easy 
cases terms correspond concept de nition 
particular cases commonly terms signi cantly di erent informal usage useful di erent de nitions agreed 
recorded notes de nition 
highly ambiguous terms identi ed corresponding closely related di erent concepts 
situation term gets way shared understanding 
handling ambiguous terms special case term possibly meanings proceeded follows 
suspend term ambiguous 

clarify ideas carefully de ning concept technical terms possible meaning agreed consult dictionary thesauri technical glossaries 

helpful give de nitions meaningless labels conveniently referred neutral way 

determine concepts important ontology usually 

choose term concept ideally avoiding original ambiguous term thing entity object 
aiai tr ontologies page example consider concept doing plethora terms activity process procedure name 
distinct closely related 
category physical activity 
speci kind thing go 
speci kind thing go york london 
general speci cation plan recipe set instructions example go train station york ride train london go local destination london 
done ellen went london jan enterprise ontology concepts named de ned called activity speci cation activity respectively 
guidelines cases guidelines followed produce natural language text de nition precise possible ensure consistency terms particular ample dictionaries thesauri technical glossaries avoid introducing new terms possible indicate relationship commonly terms similar de ned referring underlying notion di erent perspectives avoid circularity de ning terms increased clarity general essential formalised de nition term intended necessary su cient far possible natural language 
provide clari cation additional information essential understanding de nition separate notes de nition give examples appropriate 
aiai tr ontologies page wording text version ontology served speci cation producing code requirement accessible non technical readers 
achieve appropriate balance technical precision clarity 
kept text de nitions relatively informal 
equivalent technically precise de nitions cast primitives meta ontology documentation directly accompanying code 
review critically review de nitions revising appropriate important decisions previous decisions keep track set historical notes 
meta ontology devise meta ontology natural language de nitions implicit requirements speci cation 
main terms de ned enterprise meta ontology entity relationship role state airs actor 
served basis formal coding stage 
approach design evaluation recall degree ontology speci ed varies informal de nitions expressed natural language de nitions stated formal language rst order logic rigorously de ned syntax semantics 
similarly recall uses ontologies ranged informal requirements glossary shared understanding users formal requirements operability software tools 
mainly considered fairly informal methods developing ontologies 
point motivate need formal methods describe approach design evaluation ontologies formal framework 
role formal languages important roles formal languages play axiomatisation ontology speci cation implementation 
section formal languages specify 
conclude thoughts degree formality required ontology domain application 
aiai tr ontologies page declarative speci cation declarative speci cation ontology provides characterisation independent ontology implemented 
allows reason ontology designed ontology supports reasoning 
declarative speci cation bene ts extra ontological distinctions key distinctions language drawn ontology 
property need represent various assumptions procedurally outside language ontology 
purposes ontology provide framework shared understanding assumptions represented ontology risk disagreement di erent agents interpret extra ontological assumptions 
hidden assumptions assumptions explicit 
addressing challenge shared understanding obvious assumption person obvious 
long assumptions remain implicit potential disagreement 
plays role applying existing ontologies new domains 
software tools constructed context certain range applications tools applied new domains may perform expected relied assumptions satis ed original applications new ones 
provides explicit characterisation relationships di erent constraints 
design options may ways representing problem need search di erent possibilities 
example business process reengineering want nd new enterprise model improves aspect enterprise performance 
problem need precisely de ne set possible alternatives 
declarative speci cation ontology provides precise rigorous characterisation design search space 
speci cation consistent axioms ontology possible alternative model 
ontological commitments ontology speci cation making ontological commitments 
practically commitment agreement ask queries assertions way consistent respect theory speci es ontology 
build agents commit ontologies design ontologies share knowledge agents 
aiai tr ontologies page declarative speci cation explicitly reason di erent ontological commitments 
example compare di erent proposals ontology respect classes objects require properties relations objects postulate 
modi ability change part ontology need determine changed 
declarative speci cation precise characterisation relationships di erent sets constraints represent problem 
speci cation relationships may explicitly represented implicit partially shared understanding may share 
re usability characterizing classes domains tasks domains ontologies provide framework determining aspects ontology reusable di erent domains tasks 
adequacy criteria declarative speci cation allows de ne rigorous criteria adequacy 
see section methodology design evaluation ontologies 
implementing ontologies section introduce notion formal language implementing ontology particular look knowledge interchange format 
introduce terms need discuss formal methodology designing evaluating ontologies 
kif knowledge interchange format language developed inter lingua working group darpa knowledge sharing initiative facilitate knowledge sharing 
features include formally de ned declarative semantics provision expression arbitrary sentences rst order logic 
gives expressive power represent knowledge required typical application knowledge base 
section terminology kif notes 
revisit kif role implementing ontologies 
universe discourse set objects presumed exist world 
special types expressions kif terms sentences rules de nitions 
terms denote objects world described includes variables quantifying individual objects constants denote aiai tr ontologies page individual objects 
sentences express facts world 
rules express legal steps inference 
de nitions de ne constants 
informally word axiom refer sentences de nitions 
set objects ary function associates unique object 
set objects ary relation associates truth value set objects evaluate true speci es objects satisfy relation 
function symbols language denote functions predicate symbols language denote relations 
terms axiomatisation theory refer set axioms represent meaning terms ontology 
role automation formality required language ontology large extent dependent degree automation various tasks ontology supporting 
ontology framework communication people representation ontology informal long precise captures intuitions 
ontology software tools intelligent agents semantics ontology precise 
example consider role ontologies play supporting software tools business process reengineering 
continuum tools simply visualisations enterprise facilitate communication provide enterprise problems 
providing mental model enterprise ontology supports opportunity identi cation participants gain understanding enterprise succeeds fails 
move continuum encounter bpr tools provide analysis enterprise model evaluation identi cation monitoring di erent properties enterprise 
di erent forms analysis considering alternative enterprise models includes alternative plans schedules activities alternative organisations alternative sets policies people enterprise 
considering alternative explanations di erent properties enterprise alternative predictions possibly hypothetical behaviour enterprise 
characterisation analysis tasks performed tools may simply compare alternatives set produced user tool 
type analysis performed current simulation tools 
provide guidance user tools may generate set alternatives user evaluates 
automated form analysis tools perform automated design generating models explanations predictions particular properties 
aiai tr ontologies page motivating scenarios completeness theorems informal competency questions formal axioms formal terminology formal competency questions procedure formal approach design evaluation 
overview formal methodology ontology goal agree shared terminology set constraints terminology 
wemust agree purpose ultimate ontologies 
provide mechanism guiding design ontologies providing framework evaluating adequacy ontologies 
framework allows precise evaluation di erent proposals ontology demonstrating competency proposal respect set questions arise applications 
justify existence properties objects ontology 
section gives overview methodology enterprise integration laboratory design evaluation integrated ontologies 
outlines methodology 
consists steps 
capture motivating scenarios 

formulation informal competency questions 

speci cation terminology ontology formal language rst order logic 

formulation formal competency questions terminology ontology 

speci cation axioms de nitions terms ontology formal language 

justi cation axioms de nitions proving characterisation theorems 
consider steps detail rst order logic formal language 
aiai tr ontologies page motivating scenarios development motivated scenarios arise applications 
particular industrial partners problems encounter enterprises 
motivating scenarios story problems examples adequately addressed existing ontologies 
motivating scenario provides set intuitively possible solutions scenario problems 
solutions provide informal intended semantics objects relations included ontology 
proposal new ontology extension ontology describe motivating scenarios set intended solutions problems scenarios 
provides rationale objects ontology particularly cases di erent objects di erent proposals ontology 
scenario understand motivation prior ontology terms applications 
informal competency questions motivating scenario set queries arise place demands underlying ontology 
consider queries expressiveness requirements form questions 
ontology able represent questions terminology able characterise answers questions axioms de nitions 
informal competency questions expressed formal language ontology 
specifying relationship informal competency questions motivating scenario give informal justi cation new extended ontology terms questions 
provides initial evaluation new extended ontology evaluation determine proposed extension required competency questions answered existing ontologies 
may happen people prior informal ontologies application 
case object attribute relation axiom prior ontology proposed extension ontology rst informal competency question requires objects constraints de ned object 
ideally competency questions de ned strati ed manner higher level questions requiring solution lower level questions 
designed ontology competency questions form simple lookup queries questions solutions simple queries 
consider illustrates structure competency question 
set assumptions constraints set sentences statement question sentence forms query 
competency question want specify rationale question states answer question answer complex questions specify decomposition question pose additional simpler questions wemust answer order answer question 
aiai tr ontologies page solution question 
rationale ak input data assumptions constraints query need know order answer question 
decomposition strati cation competency questions 
aiai tr ontologies page competency questions specify requirements ontology mechanism characterising ontology design search space 
questions serve constraints ontology determining particular design corresponding ontological commitments 
single ontology associated set competency questions 
competency questions evaluate ontological commitments see ontology meets requirements 
terminology informal terminology informal competency questions extract set terms expressing question form basis speci cation terminology formal language 
informal methodology ontology capture described preceding section particularly useful stage 
addition identifying set terms produce informal de nitions terms address problem handling ambiguous terms 
informal dictionaries glossaries de ned methodology provide intended semantics terminology lay foundations speci cation axioms formal language 
speci cation formal terminology informal competency questions posed proposed new extended ontology terminology ontology speci ed logical formalism kif 
formal ontology formal description objects properties objects relations objects 
provides language express de nitions constraints axioms 
language provide necessary terminology restate informal competency questions 
designing new ontology informal competency question objects attributes relations proposed ontology proposed extension ontology intuitively required answer question 
rst step specifying terminology ontology identify objects domain discourse 
represented constants variables language 
attributes objects relations objects de ned predicates 
aiai tr ontologies page formal competency questions competency questions posed informally terminology ontology de ned competency questions de ned formally entailment consistency problem respect axioms ontology 
forms set axioms ontology set instances objects relations ontology infer rst order sentence uses predicates language ontology 
determine rst order sentence uses predicates language ontology consistent set axioms ontology set instances objects relations ontology 
formally stated forms set axioms proposed ontology set ground literals instances rst order sentence predicates language 
determine determine axioms ontology provide core axioms applicable objects relations ontology de nition classes objects set instances objects relations formal competency question provides constraints speci particular problem 
example process ontology axioms ontology contain de nitions complex actions constraints occurrence actions set instances contain particular plan schedule scenario external events 
proposal new extended ontology accompanied set formal competency questions 
important understand terms statement formal competency questions included terminology ontology 
formal declarative speci cation ontology entailed ontology entailed axioms 
way ontology claim adequate forces intuitions explicit 
important issue ontologies notion library ontologies adapted di erent classes problems 
challenge case determine appropriate problem 
methodology ontologies may distinguished corresponding competency questions ontology may able represent di erent set competency questions ontology 
case relationship ontologies formally represented questions 
aiai tr ontologies page speci cation formal axioms axioms ontology specify de nitions terms ontology constraints interpretation de ned rst order sentences predicates ontology 
important understand signi cance axioms de ne terms constraints objects ontology 
simply proposing set objects proposing set ground terms rst order logic constitute ontology 
axioms provided de ne semantics meaning terms 
important realise implementation speci cation ontology 
process de ning axioms di cult aspect de ning ontologies 
process guided formal competency questions 
informal competency questions axioms ontology minimally su cient express competency questions characterise solutions axioms express question solution axioms express question solutions 
solution competency question entailed consistent axioms ontology 
proposed axioms insu cient represent formal competency questions characterise solutions questions additional objects axioms added ontology su cient 
development axioms ontology respect competency questions iterative process 
formal competency questions rigorously specify requirements axioms ontology formal mechanism characterising ontology design search space 
may di erent ways axiomatise ontology 
formal competency questions determine axioms questions evaluate completeness sets axioms particular axiomatisation 
allows compare expressiveness di erent sets axioms competency questions 
competency question set axioms represent rst set expressive respect question 
di erent axiomatisations represent competency question characterise solutions equivalent respect question comparison criteria 
applications may common core ontology shared di erent groups extensions speci applications 
case necessary explicitly characterise relationships core di erent extensions 
fact advantage specifying ontologies formal languages able represent reason ontological commitments di erent applications 
completeness theorems competency questions formally stated de ne conditions solutions questions complete 
forms basis com aiai tr ontologies page theorems ontology 
theorems forms set axioms ontology set ground literals instances rst order sentence specifying query competency question set rst order sentences de ning set conditions solutions problem complete consistent 
models agree extension predicate completeness theorems provide means determining extendibility ofan ontology making explicit role axiom plays proving theorem 
extension ontology able preserve completeness theorems 
ontologies practice section see ideas wehave practice 
giving overview projects concerned construction ontologies support inter operability 
broaden scope consider endeavours industrial academic communities concerned role ontologies standards 
consider projects implemented ontologies dealing various domains 
conclude look ksl ontology server tool currently available design development ontologies 
section provide exhaustive review existing ontologies serves eld 
ontologies inter operability saw earlier purposes ontologies serve unifying framework shared understanding users inter operability tools 
section focus projects address problem inter operability 
process interchange format assist inter operability ontologies inter lingua conjunction translators gure 
goal process interchange format project support aiai tr ontologies page exchange business process models di erent process representations 
tools inter operate translating native format pif 
project pursues goals developing pif inter lingua unify heterogeneous process representations local translators pif local process representations 
provides mechanism extending pif accommodate di erent expressive needs modular way 
sense core pif ontology translators operate 
addition di erent extensions core ontology ontologies may share example di erent may di erent ontologies time complex actions constraints 
pif extensions captured partially shared views ontologies partially shared view common translate loss expressiveness 
pif project aims support translations process descriptions automatically translated back forth pif process representations little loss meaning possible 
translation done fully automatically human orts needed assist translation minimised 
translator translate part pif process description target format translate description possible example simply issue error message give 
addition represent parts translator add back process description translated back pif 
plan ontology rst phase arpa rome laboratory planning initiative included development representation speci cation language representing plans planning information 
intended provide sharable ontology planning information interchange medium systems means specifying shared domain information 
main aim ontology provide shared vocabulary concepts relations conditions common planning activities disparate communicating systems opposed particular language syntax exhibited 
achieve shared ontology major aspects ontology setting major categories space time agents actions reasoning plans set modular specialised ontologies augment general categories sets concepts alternative theories detailed notions commonly planning systems theories time points temporal relations complex actions 
specialised ontologies provide de nitions concepts case alternative concepts widely describe subject ontology 
relationship similar relationship core ontologies partially shared views pif 
particular ontology seeks capture general categories little disagreement specialised ontologies provide means expressing alternative views subject matter concepts expressible ontology 
aiai tr ontologies page role standards ontologies play role representations tools 
number projects currently undertaken provide kind standard di erent domains application ow management coalition wfmc step express corba kif conceptual graphs standards play roles inter operability shared understanding discussed 
ow management coalition ow management coalition standard terminology evolving serve common framework di erent ow management system vendors 
manifest early outputs project glossary 
document contains technical de nitions terms wfmc speci cations discussions 
de nitions help establishing consistency usage terms 
term provided de nition discussion usage set possible synonyms 
glossary serves semi informal ontology shared understanding analogous natural language version enterprise ontology 
ultimate objective ow management coalition enable inter operability di erent ow systems 
require interchange format similar pif 
step step standard exchange product model data inter lingua de ning specifying products 
primary motivation step achieve inter operability enable product data exchanged di erent computer systems environments associated complete product lifecycle 
includes design manufacture utilisation maintenance disposal 
may involve computer systems including may located di erent organisations 
order support uses organisations able represent product information common format required remain complete consistent exchanged di erent computer systems 
aiai tr ontologies page objective step provide mechanism capable describing product data life cycle product independent particular system 
nature description suitable neutral le exchange basis implementing sharing product data bases archiving 
ultimate goal integrated product information database accessible useful resources necessary support product lifecycle 
step uses formal speci cation language express specify product information represented 
corba corba common object request broker architecture emerging standard retrieving objects invoking operations objects network 
collaborative project developed endorsed degrees members object management group omg 
corba provides mechanisms objects transparently requests receive responses 
orb provides inter operability applications di erent machines heterogeneous distributed environments seamlessly interconnects multiple object systems 
language interface de nition language idl speci es objects operations orb allows operations invoked objects remote distributed applications 
idl supported ksl ontology server see provides translator idl ontolingua 
de nition object model de nes object corba space 
object implementation provides semantics objects sense consider object model step ontology 
corba project incorporates informal notions ontologies 
part project business object management group developed glossary terms object model 
glossary ontology informal framework shared understanding 
kif conceptual graphs kif knowledge interchange format see conceptual graphs languages represent ontologies 
developed independently rst order predicate logic essence syntactic variants 
di erences details 
currently ort underway standardise languages allow formal translation facilitate inter operation tools languages 
aiai tr ontologies page implemented integrated ontologies section discuss endeavours industrial academic communities address problem implementing integrating set di erent ontologies 
cyc cyc project microelectronics computer technology mcc austin texas provides foundation common sense reasoning developing ontologies wide variety domain speci applications 
knowledge cyc represented declaratively form assertions variant rst order logic called cycl 
cyc knowledge base contains simple assertions inference rules control rules inference inference engine derive new assertions knowledge base 
ontologies underlying cyc organised sets modules known microtheories 
microtheory captures knowledge reasoning required particular domain space time causality 
multiple microtheories may exist domain re ecting di erent perspectives assumptions people modelling domain 
sense cyc monolithic integrated ontology network microtheories set domains union covers di erent ontological commitments domains 
tove goal tove toronto virtual enterprise project create enterprise ontology characteristics provides shared terminology enterprise application jointly understand de nes meaning semantics term precise unambiguous manner possible order logic implements semantics set prolog axioms enable tove automatically deduce answer common sense questions enterprise de nes symbology depicting term concept constructed thereof graphical context 
tove ontologies constitute integrated enterprise model providing support powerful reasoning problems require interaction ontologies activities states time organisation resources products aiai tr ontologies page services manufacturing cost quality framework provides characterisation classes enterprises sets assumptions processes goals organisation constraints 
enterprise objective project necessary replace existing modelling methods framework integrating methods tools appropriate enterprise modelling management 
framework ontology enterprise modelling 
goal enterprise project provide computer toolset help capture aspects business analyse identify compare options meeting business requirements 
toolset provide task management support users helping perform enterprise modelling activities guiding toolset facilities 
facilities enable capture description enterprise speci cations business problems requirements consistent ontology identi cation evaluation solution options alternative design implementation paths strategic tactical operational levels representations de nition relevant metrics advanced simulation support 
enterprise ontology enterprise ontology conceptually divided major sections 
listed important concepts 
meta ontology entity relationship role actor state airs activities processes activity resource plan capability organisation organisational unit legal entity manage ownership strategy purpose strategy help achieve assumption marketing sale product vendor customer market 
illustrates ontology intended facilitate inter operation tools 
enterprise project led aiai university partners ibm uk lloyd register logica 
project supported department industry 
aiai tr ontologies page european esprit project aiming development methodology reuse knowledge technical systems life cycle knowledge base design diagnosis operation maintenance redesign instruction 
supports integrated approach embracing computer integrated manufacturing engineering methods knowledge engineering methods creating ontological computational basis reuse product knowledge di erent applications technical domains 
achieves creating domain ontologies reusing di erent applications 
addition attempts integrate ontologies existing standards step ontologies available capture domain data 
main formalism cml conceptual modelling language 
language originally developed part kads commonkads projects 
cml model knowledge 
cml di erent ontology formalisms explicit distinction domain knowledge inference knowledge task knowledge problem solving knowledge 
cml uses notation informal knowledge modelled cml executed program 
provides toolkit interactive environment browsing editing managing libraries ontologies 
toolkit supports theoretical application oriented packages providing environment experiment theoretical issues organisation libraries ontologies mappings ontologies translating di erent ontology formalisms perform practical browse edit query ontologies various formalisms 
addition cml toolkit provides support express ontolingua 
goal project semi automatic knowledge extraction natural language texts particular literature mechanical properties ceramic materials 
texts cover wide range subjects set integrated ontologies required cover concepts materials properties processes materials aws materials 
ontologies project combination formal informal approaches 
lexicon map natural language tokens formal expressions knowledge representation language 
ontology speci es language semantic part lexicon expressed 
see appendix details project 
aiai tr ontologies page ontology editor server library editor server translators loom idl clips 
batch file transfer remote collaborators authors readers remote applications helper app 
database stand applications net 
facilities ontology server supports usage 
authors readers edit browse ontologies 
api allows remote applications query update ontologies 
stand applications ontologies translated appropriate target languages ontology server architecture app 
computer support tools ksl ontology server far mainly described conceptual approaches proposals standards research projects albeit applied domains 
discussed need computer support design implementation ontologies 
section describe suite tools called ontology server ontology editor provided knowledge systems laboratory stanford university 
main functions provides include creating editing evaluating publishing maintaining browsing ontologies 
particular importance ability support collaborative greatly facilitated accessible world wide web 
see gure overview system architecture gure reproduced permission 
kb aiai tr ontologies page background background basis ontology server ontolingua ambiguously referred language representing ontologies implementation 
goals ontolingua project overcome di culties knowledge sharing due lack consistency knowledge bases respect vocabulary semantics underlying assumptions 
ontolingua conceived built system de ning portable ontologies 
services provided included parsing cross referencing analysing ontologies 
portability achieved translating ontologies various target languages directly inserted external software 
rst comprehensive attempt demonstrate ontology inter lingua idea facilitates reuse sharing improves potential inter operation 
wider context part knowledge sharing initiative active number years 
important early result ort development ontolingua representation language mild syntactic variant 
knowledge interchange format kif designed inter lingua ideally knowledge base translated 
crucially kif speci cations meant sharable 
kif designed state art able represent important concepts distinctions available today advanced knowledge representation languages 
predicate calculus extended cater advanced capabilities de ning terms representing meta knowledge specifying sets encoding commonly facilities non monotonic reasoning 
kif includes model theoretic semantics language axiomatisation primitive sets lists relations functions 
idea new target languages catered development new translators 
importantly development translators meant possible prior knowledge languages knowledge base may translated 
ontolingua kif explore idea 
note terminology point adopt current usage term ontolingua refers representation language current ontology server system 
term ontology editor loosely refer system strictly editor just part system 
overview ontologies speci ed kif syntax semantics augmented natural language descriptions 
server translates ontologies representation language choice 
currently translators exist nearly dozen languages 
aiai tr ontologies page ontolingua implemented knowledge representation language 
initially support automated reasoning ontology editor develops simple useful inferences incorporated 
intention ontolingua speci cations represent knowledge level clear unambiguous manner 
practical key assumptions constraints relationships formalised kif expressions expressed natural language text 
ontology server di ers extends original ontolingua system number important ways see details remote compute server available world wide web www ksl stanford edu provides extensible library sharable reusable ontologies suitable protections proprietary group private 
allows convenient viewing ontologies 
currently format suitable ontologies constructed objectoriented style 
extended original representation language support decomposition ontologies modules assembling new ontologies existing modules library 
includes mechanism handling name con icts 
provides explicit support collaborative 
includes concept session multiple parties attached parties automatically informed activities 
application programmer interface api allows remote applications query modify ontologies stored server internet 
translating multiple output languages allows multiple input languages corba idl 
xed internal representation semantically equivalent set axioms represented kif 
ontolingua input languages 
specifying ontologies ontolingua ontology consists set de nitions 
basic kinds things de ned classes relations functions instances 
addition axioms relating terms 
ontolingua de nition consists argument list documentation text set labeled kif statements example de nition documents ontology available server aiai tr ontologies page define class author author agent writes things 
author name real name agent 
name author may may agent name usually def agent name issues see name augmented ontology name thought slot class author 
second order relation specify cardinality slot 
def portion de nition gives necessary conditions class membership 
english translation conjuncts de nition authors agents author exactly name 
addition def keywords labelling statements ontolingua de nitions 
summary main keywords meaning def necessary conditions may variables iff def necessary su cient conditions lambda body kif term compute value function axiom def necessary conditions variables full documentation available line 
translation discuss details translation di culties tradeo worth mentioning 
designed meet competing requirements 
de nition language expressive declarative system independent 
support translation expressive languages 
easy add translations additional target languages 
achieving impossible 
translation expressive languages means translation necessarily incomplete 
ontology server biased object oriented representation style 
editor input language steers ontology builders object oriented subset kif uses frame ontology set idioms order logic easily translated object oriented languages 
example dog 
mammal idiom subclass aiai tr ontologies page relationship dog mammal 
translator equipped special purpose code recognise idioms processing arbitrary expressions rst order logic 
possible users write arbitrary axioms kif awkward 
result users time write de nitions readily translated object oriented languages 
principle prevent users saying want encourage say 
closing remarks ontolingua language approach development supported ontology server appear emerging de facto standards 
major bene formal encoding enterprise ontology basis research eld 
author developers extremely helpful responsive showing unusual commitment satis ed user 
ontology server undergoing active development continue improve 
directions motivated need shared understanding overcome barriers communication people organisations software systems 
shared understanding ontology function unifying bene ts 
classi ed various roles ontologies follows communication people organisations unify di erent research elds see page inter operability systems ontology inter lingua unify di erent languages software tools see gures system engineering bene ts ontologies assist process building maintaining software systems knowledge 
particular re usability ontology represented formal language automatic translation re usable shared component system ontology server batch mode gure reliability formal representation facilitates automatic consistency checking speci cation ontology assist process identifying requirements de ning speci cation system map 
wehave methodologies tools support design evaluation new ontologies 
rst considered informal approach developing ontologies included steps aiai tr ontologies page identify purpose scope ontology capture including production precise unambiguous de nitions terms ontology agreement de nitions ontology coding including speci cation meta ontology identi cation representation language ontology integrating existing ontologies evaluation documentation 
considered rigorous approach discussed role formal languages speci cation implementation evaluation ontologies 
approach scope ontology de ned set competency questions di erent reasoning problems ontology expected support 
de nitions constraints ontology formally evaluated respect competency questions 
suggested guidelines experience various stages development 
methodologies increasingly important developed new domains new classes problems remains elaborate improve 
example unclear circumstances di erent approaches appropriate frontiers ontology research ways exploit ontologies research done take full advantage 
date comprehensive review emerging eld ontologies research perspective 
see step direction 
conclude brief discussion important issues opportunities ontology research 
development inter lingua support interoperability tools domain development tools support ontology design evaluation development libraries ontologies development integration new ontologies methodologies design evaluation ontologies 
aiai tr ontologies page ontologies inter operability saw various projects ow management coalition step plan ontology development ontologies serve lingua set tools prominent 
ontologies conjunction translators facilitate integration di erent sets domain tools see gure 
large number legacy systems di cult design integrated ontologies systems 
de ned translators systems crucial require ontologies support translation 
way individual systems maintain private ontologies 
development new ontologies serve lingua di erent software systems major impact reusability 
solutions domain reused applications translating problems solutions inter lingua ontologies 
challenges endeavour developing new ontologies identi cation di erent domains tools ontologies bene ontologies greatest generic applied wide range domains 
example di erences pif ontology plan ontology ontologies ow management coalition 
ontology generic serve lingua ontologies 
enterprise domain ontologies may provide great bene ts interlingua business process reengineering tools 
number independently developed enterprise ontologies di erences unclear similar situation 
addition challenge integrating ontologies di erent domains 
example common process ontology pif integrate possible common organisation ontology common product ontology step express 
ontologies inter lingua particular domains interaction 
product ontology related process ontology notions process plans organisation ontology related process ontology notions commitment responsibility performing di erent processes 
tools ontology design challenge integrating ontologies need develop ontology design tools assist integration ontologies 
development tools support ontology design evaluation particularly important case distributed teams 
challenge greater teams developing ontologies di erent domains 
case need software tools manage consistency ontologies designed 
steps direction taken 
discussed ontology server 
described competency questions assist ontology evaluation 
gomez perez building tools assist evaluation ontologies expressed ontolingua 
aiai tr ontologies page ontology libraries saw earlier primary applications ontologies facilitate reusability 
ultimate goal approach construction libraries ontologies reused customised adapted di erent general classes problems environments 
users construct ontology appropriate problems importing various modules ontologies library 
example seen partially shared views ontologies pif project process handbook projects 
application approach construct archives repositories ontologies various domains 
domain speci ontologies structured generic classes applied wider range general problems 
repositories ontologies facilitate benchmarking di erent companies 
example ship building enterprise reuse ontologies designed house construction enterprises 
challenges facing application ontologies concerned ownership ontology libraries particular companies want share ontologies potentially competitors 
new ontologies need develop expressive ontologies activities processes resources products services organisation 
includes support reasoning constraints agents satisfy goals commitments policies 
development new domains new classes problems important step widening application ontologies 
includes ontologies enterprise modelling materials science engineering industries natural language lexicons medicine 
integrating ontologies important conceptual challenge merge ontologies exist domain 
mayhave subtly di erent assumptions signi cant overlap may exist 
may created di erent perspectives easily re 
ontology design tools assist integration ontologies designed 
particular problem developing new ontologies maximising reuse existing ontologies 
primary uses ontologies support knowledge sharing surprisingly little done actual integration existing ontologies major exception ksl ontology server 
ontologies domain modelling natural language glossaries competing ontologies designed independently little reuse existing ontologies 
needs done explicating relationships various ontologies developed similar domains 
situation improve slightly 
example pif wfmc orts independent origins formal links 
extent ontologies merged unclear orts underway ensure compatibility uniformity possible 
aiai tr ontologies page methodologies current methodologies constructing ontologies focussed generic ontologies activities time 
need new methodologies designing ontologies methodologies need balance need expressing detailed domain knowledge objective designing generic ontologies maximize bene reuse 
grateful martin king ibm uk analysis examples bene ts middle approach building ontologies 
adam farquhar provided information checked descriptions ksl ontology server 
michael george description invited talk ijcai 
john fraser assisted describing enterprise project 
gomez perez provided information evaluating ontologies 
nicola guarino provided helpful comments early draft 
austin tate drew attention existence ow management coalition links pif planning ontology 
industry models brought attention martin ibm uk 
joshua drew attention various practical applications ontologies 
florence chris menzel provided details project 
paul van der vet provided summary project 
ansi 
conceptual graphs presentation language knowledge conceptual models working draft proposed american national standard 
technical report ansi 
contact person sowa 
gray 
compiling declarative high level language semantic integrity constraints 
technical report aucs tr university aberdeen 
farquhar fikes pratt rice 
collaborative ontology construction information integration 
technical report ksl stanford university knowledge systems laboratory 
fikes cutkosky gruber van 
knowledge sharing technology project overview 
technical report ksl stanford university knowledge systems laboratory 
genesereth fikes 
knowledge interchange format version manual 
technical report logic computer science department stanford university 
gomez perez 
ideas examples evaluate ontologies 
proceedings eleventh conference onarti cial intelligence applications 
ieee computer society press 
aiai tr ontologies page gomez perez 
guidelines verify completeness consistency ontologies 

appear third world congress expert systems 
gomez perez 
evaluation assessment sharing technology 
mars editor large knowledge bases knowledge building knowledge sharing pages 
ios press amsterdam 
gruber 
translation approach speci cations 
knowledge acquisition 
gruber 
principles design ontologies knowledge sharing 
international journal human computer studies 
gruninger fox 
logic enterprise modelling 
brown sullivan editors reengineering enterprise pages 
chapman hall 
gruninger fox 
methodology design evaluation ontologies 
workshop basic ontological issues knowledge sharing 
international joint conference arti cial intelligence 
guarino carrara giaretta 
formalizing ontological 
doyle sandewall torasso editors national conference onarti cial intelligence conference aaai 
morgan kaufman seattle 
guarino giaretta 
ontology meta level categories 
doyle sandewall torasso editors principles knowledge representation reasoning proceedings fourth international conference kr pages 
morgan kaufman san mateo ca 
guarino giaretta 
ontologies knowledge bases clari cation 
mars editor large knowledge bases knowledge building knowledge sharing pages 
ios press amsterdam 
guarino poli 
role formal ontology information technology 
international journal human computer studies 
editorial special issue topic 
ibm 
business system development method 
technical report ge international business machines 
initial release international standard 
technical report international standards organization 
fraser 
tate uschold 
enterprise toolset open enterprise architecture 
impact ontologies reuse interoperability distributed processing pages 
seminars london 
information enterprise project ontology available world wide web www aiai ed ac uk enterprise 
aiai tr ontologies page fuchs 

prospective applications ontologies space missions 
impact ontologies reuse interoperability pages 
seminars london 
jones rodriguez romero 
agent approach spacecraft mission operations 
mars editor large bases knowledge building knowledge sharing pages 
ios press amsterdam 
king 
knowledge reuse business domains experience ibm 
impact ontologies reuse interoperability distributed processing pages 
seminars london 
women fire dangerous things 
university chicago press 
lee malone 
partially shared views scheme communicating groups di erent type hierarchies 
acm transactions information systems 
lee yost pif working group 
pif process interchange format framework 
technical report mit center coordination science 
lehrer 
knowledge representation speci cation language 
technical report darpa rome laboratory planning scheduling initiative 
manual 
lenat guha 
building large knowledge systems representation inference cyc project 
addison wesley 
malone crowston lee pentland 
tools inventing organizations handbook organizational processes 
technical report mit center coordination science 
ow management coalition members 
glossary ow management coalition speci cation 
technical report ow management coalition 
zahavi 
essential cobra system integration distributed objects 
john wiley object management group 
schreiber wielinga akkermans van de velde 
cml commonkads conceptual modelling language 
steels schreiber van de velde editors knowledge acquisition proceedings th european knowledge acquisition workshop ekaw pages 
springer verlag 
volume lecture notes arti cial intelligence 
schreiber wielinga 
view word 
workshop basic ontological issues knowledge sharing 
international joint conference arti cial intelligence 
skuce 
conventions reaching agreement shared ontologies 
proceedings th knowledge acquisition knowledge systems workshop 
aiai tr ontologies page sowa 
conceptual structures information processing mind machine 
addison wesley reading ma 
sowa 
top level ontological categories 
international journal human computer studies 
van van der vet mars 
scalability performance knowledge representation systems 
large knowledge bases knowledge building knowledge sharing pages 
ios press amsterdam 
uschold king 
methodology building ontologies 
workshop basic ontological issues knowledge sharing 
international joint conference arti cial intelligence 
available aiai tr aiai university edinburgh 
van der vet mars 
structured system concepts storing retrieving manipulating chemical information 
journal chemical information computer sciences 
van der vet mars 
ontologies large knowledge bases materials science case study 
mars editor large knowledge bases knowledge building knowledge sharing pages 
ios press amsterdam 
wielinga schreiber van 
framework formalism expressing ontologies 
technical report university amsterdam 
esprit project deliverable available www swi psy uva nl projects reports html 
aiai tr ontologies page project ontology paul van der vet mars knowledge systems group dept computer science university box netherlands phone fax email vet mars cs utwente nl 
brochure may freely distributed provided unaltered parts left 
setting scope project aims semi automatic knowledge extraction short natural language texts 
source texts title elds bibliographic document descriptions 
taken line version engineered materials abstracts ema produced materials information 
subset descriptions primary literature mechanical properties ceramic materials selected entire ema volume 
focus cheaper methods knowledge acquisition 
texts major source knowledge 
today text produced machine readable form printing 
fully manual acquisition knowledge texts expensive fully automatic acquisition illusion 
want arrive point inbetween extremes 
result characterised human aided knowledge acquisition machines knowledge acquisition humans depending division load 
primarily interested obtaining precise assessment investments needed acquire knowledge way including extra investments needed process scaled ported domains 
assessment help decide division load economically optimal 
source texts processed unedited form ema tapes 
selected easy processing 
process utilises linguistic domain knowledge resources obtain representations text contents knowledge representation language 
representation stored incrementally source text interim knowledge base 
process serves integrate knowledge representations integrated 
virtual process procedure carry particular subjects particular view integration 
materials information registered trademark institute materials london asm international metals park oh 
aiai tr ontologies page ontology development important design decisions underlying approach chosen ontology core elements system 
texts cover large range subjects 
order capture contents need concepts materials properties processes processes operating samples creep aws cracks 
obviously ontology construction major ort 
ontologies de nitions concepts formal possible useful informal 
interesting relations concepts part subconcept superconcept built concept de nitions 
developed parts ontology traditional top fashion recursive di erentiation 
kind approach produces taxonomic hierarchies 
parts built bottom fashion represents break tradition 
wehave investigated representation ontologies formal knowledge representation languages 
course ph project hein ontologies various stages development formalised implemented description logics classic back loom furthermore ontolingua kif prolog conceptual graphs language developed project 
ontology ful lls purposes directly relevant process 
demanding domain knowledge system expressed ontology concepts various resources system operate smoothly 

ontology speci es language semantic part lexicon expressed 
transition natural language knowledge representation language partly supported lexicon maps natural language tokens formal expressions knowledge representation language 
ontology speci es nonlogical constants may 

ontology implicitly speci es desired output language dependent process 
message source text expressed ontology concepts occur output 
consequence purposes ontology helpful deciding interim knowledge base integrated knowledge derived interim knowledge base means integration programs 
information publications listed 
contact authors information 
paul van der vet hidde de jong mars hein aiai tr ontologies page ter stal intermediate report memoranda informatica university enschede netherlands 
paul van der vet mars ontologies large knowledge bases materials science case study large knowledge bases mars ed amsterdam ios press pp 

hein selecting knowledge representation systems ph thesis university twente enschede netherlands 
available www url cs utwente nl kbs html 
aiai tr ontologies page ontologies enable enterprise model integration florence com christopher menzel com knowledge systems university college station tx usa 
tel brief describes role ontologies commercial computational environment supports integration enterprise models 
environment called integrated development support environment developed knowledge systems 
part information integration concurrent engineering project funded armstrong laboratory wright patterson air force base usa 
organized set questions answers intended guide reader understanding role appropriateness ontologies providing solutions problem enterprise model integration 
enterprise model integration 
enterprise modeling concerned development aspects enterprise 
di erent types modes evolved support di erent modeling activities data models describe data managed process models describe processes take place enterprise activity models describe business activities performed enterprise 
various enterprise models integrated provide better understanding managing enterprise complexity enable simulation alternative solutions problems faced support control monitoring enterprise operations 
informally speaking models integrated extent provide coherent picture enterprise support cient management operations various portions enterprise 
brie stated integrated models characteristics 
consistency information carried models consistent 
ensures enterprise modeled accurately 
consistency maintained models provide coherent picture enterprise support cient enterprise management 

lack ambiguity terms models disambiguated 
requirement essential ensure understanding models enable ective consistency checking models 
aiai tr ontologies page 
logical connectedness logical connections elements models identi ed maintained 
logical connections enable implications changes model propagated relevant models 
feature critical providing support change assessment alternatives 
model integration hard 
central impediments enterprise model integration 

number modeling methods enterprise modelers wide variety modeling methods tailored di erent tasks di erent types information arising di erent aspects enterprise static information stored employee database dynamic information involved planning model description manufacturing process complex array information detailed product design 
fact turn entails related challenges 
di erent modeling methods target di erent types information models developed di erent methods integrated underlying information types integrated fashion 
instance type information captured process model di ers considerably type information expressed data model 
process models focus dynamic entities processes activities events bear certain temporal relations data models tend focus static entities classes relations attributes 
static dynamic entities course unrelated 
notably processes typical process model usually represented containing objects sort represented typical data model 
clear connections process oriented information type data oriented information type logical relations processes object classes need precise 
second connections di erent information types clari ed remains problem di erent enterprise models expressed different modeling languages 
complex representation data model business process model carries information virtue established systematic connection components representation world 
connection determines semantic content representation 
information carried model shared accurately interpreted agent agent attuned semantic rules representation corresponding modeling method 

number modeling tools today computerized age modelers software tools develop models 
typically stand tools developed independently 
integrating enterprise models means rst able integrate tools developed models 
tools considered integrated environment exist mechanisms enable logical connections models computationally maintained environment 
aiai tr ontologies page main modeling tool integration possible practical purposes impose strict requirements tools 
useful model integration environment allow modeling tool easily integrated environment 
possible example require tools dynamic data linkage capability suchas dynamic data exchange protocol 
requirement tools tools modi ed built satisfy requirements integrated 

number di ering contexts integrate models things identify relevant logical connections elements models 
enterprise model created maintained set agents context 
agent di erent context live di erent worlds brings context corresponding enterprise model unique body background knowledge distinctive logic cast distinctive vocabulary 
constitutes semantic backdrop impossible general interpret data generated context bearing models created maintained context models contexts 
information carried data model explicitly virtue basic semantics data implicitly virtue cross contextual constraints shared contexts lack knowledge 
ontologies 
descriptions main impediments enterprise model integration lead observations 
initial step solving rst impediment capture description types information managed various existing modeling methods inter relationships describe disambiguate languages capture types information 
speci cation ontology method provides formal informal de nitions method basic semantic categories logical connections categories 
ontologies provide manual automated support understanding models captured methods 
important approach second impediment model problem having numerous independent enterprise modeling tools provide neutral computational medium information contained various models inter relationships represented maintained 
solution describe way information stored modeling tools represented neutral medium 
needed somewhat formal description terms elements tool internal representation system 
speci cation essence speci cation ontology modeling tool create necessary computational structures neutral medium store model information captured tool 
aiai tr ontologies page third impediment problem di ering contexts addressed de ning precisely terms various contexts capturing ontology domains relevant models created 
ontologies manually automatically provide support understanding models drawing logical connections elements models 
ontologies enable integration enterprise modeling tools 
speci cation tool ontology provides formal structured description information types managed tool ii types structured data stored tool iii constraints maintained types structure 
integrated environment inwhich tools communicate share information neutral medium global repository information tool ontology speci cation automatically integrate tool environment 
tool integration 
understand automatic integration modeling tools possible necessary describe detail tools interact 

contains neutral medium global repository called evolving system description esd 
esd mainly composed knowledge base truth maintenance system enforce constraints information stored knowledge base 

models integrated esd 
done follows modeling tools send information contained model esd dedicated communication language model information stored esd knowledge base integrated information sent tools constraints elements model enforced 
communication language exchange information esd modeling tools extension knowledge interchange format kif url www ksl stanford edu papers index html kif 
model information sent tool esd stored knowledge base object data structures necessary store types information exist knowledge base 
structures created automatically esd ontology speci cations tools 
aiai tr ontologies page enable automatic integration tools 
tool integration achieved follows 
ontology tool captured tool developer tool expert ontology capture tool 
prototype tool called ontology capture browsing tool 
implements idef ontology capture method url www brooks nf mil hsc hr docs docs htm serving basis development commercial tool 

resulting ontology speci cation sent electronically esd communication language 

ontology speci cation interpreted component esd data object structures necessary store information types described ontology computationally created knowledge base need human intervention process 
constraints axioms contained ontology computationally interpreted stored esd truth maintenance system 

knowledge base ready store model information sent tool newly created object structures ready enforce rules constraints de ned object structures 
advantages ontology speci cations integrate enterprise tools environment 
primary advantages ontology speci cations integrate enterprise modeling tools ontologies enable tool integration process automated 
ontology speci cations provide description system case tool formal precise computer processable interpretable 
automation process turn greatly facilitates integration tools environment eliminates need recon gure esd time tool added environment 
ontology speci cations eliminate need hard code object structures associated constraints esd 
process upgrading tool part environment greatly facilitated enhanced 
needed ontology tool modi ed accordingly changes sent esd interpreter 
need modify code recompile components environment 
ontology speci cations provide documented design rationale justi cation information sent tool esd stored knowledge base 
process done manually rationale choosing object data structures go undocumented 
aiai tr ontologies page ontologies enable integration enterprise models 
ontologies provide support model integration enabling correct interpretation models 
model integration course presupposes model interpretation 
order draw logical connections test consistency draw inferences set enterprise models models reasonably understood 
models misinterpreted ways mirror rst third impediments model integration 
model captured method misinterpreted information types managed method inter relationships relationships world understood agent interpreting model ii agent interpreting model unfamiliar terminology domain model developed 
problems addressed method ontologies solve rst problem domain ontologies solve second 
method ontologies interpret models 
method ontology essentially characterization information type method primitive semantic categories properties logical connections 
browsing method ontology agent better understand model 
illustrate consider data modeling method idef 
basic semantic categories idef entity attribute link 
number auxiliary notions needed capture logical connections categories formally characterized idef ontology 
suppose model contains entities employee department oneto link employs entity department entity employee 
correctly interpret model integrate models agent needs know implication link type case employee employed department department employ employees 
information contained formally axioms informally description strings ontology method 
browsing idef ontology agent better understand implications information contained model enterprise described models enterprise 
method ontology contains informal formal descriptions semantic categories method esd truth maintenance system enforce rules constraints de ned method 
example agent relate instance entity employee instances entity department relation employs truth maintenance system signal violation axiom ask agent resolve con ict 
domain ontologies interpret models 
domain ontology essentially sophisticated data dictionary provides formal informal de nitions terms domain concept aiai tr ontologies page denote describes precisely relationships concepts 
method ontology domain ontology browsed agent determine meaning terms model 
browsing activity supports activities central model integration 
domain ontologies interpret models agent disambiguate terms models agent identify situations term di erent meanings di erent contexts ii recognize di erent terms di erent contexts denote concept iii identify dependencies logical connections elements model models 
activities critical ensuring consistency models integration 
domain ontologies esd truth maintenance system enforce constraints domain elements propagate changes 
illustrate consider simplistic example furniture ontology contains concepts table characteristics table described ontology height length legs thickness top ii axiom states height table equal thickness top plus length legs 
value attributes table say height length legs esd truth maintenance system axiom ontology deduce value third attribute thickness top 
values attributes axiom violated esd truth maintenance system detect inconsistency ask user resolve 
advantages ontologies technology 
ontologies provide signi cant advantages development technology 
prominent advantage ontologies automation 
formal nature ontology speci cations suited interpreted directly computer programs 
advantage crucial enables automation tool integration process easy update environment 
important advantage ontologies provide application independent speci cation domain method modeling tool 
speci cations represent essence reusable documented recording enterprise corporate knowledge 
application independent speci cations biased description concepts domain describe relationships concepts 
reused number projects situations 
formal informal aspects ontologies mechanisms automate various processes change management constraint propagation documentation support model interpretation 
dual ontologies system attractive logical connections dependencies model elements implemented described ontology 
aiai tr ontologies page potential commercial applications technology 
demonstrated feasibility advantages ontology technology enable model integration 
important commercial applications technology 
planning release commercial tool enables capture browsing sharing ontological information 
tool prototype developed part integrated modeling workbench developed expected released 
ontology capture tool provide support design rationale capture corporate knowledge capture enterprise model integration 
concepts techniques developed building esd incorporated integrated modeling workbench particular techniques necessary computationally maintain logical connections models 
modeling method ontologies developed key development integrated modeling workbench 
provided crucial support studying logical connections semantic categories methods enabling design translation rules methods 
rules incorporated integrated modeling workbench 
ontologies mechanisms enable task automation promising technology 
short term plan technology commercial tools plans continue technology research projects development 
knowledge systems 
