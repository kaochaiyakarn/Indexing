physiology grid open grid services architecture distributed systems integration ian foster carl kesselman jeffrey nick steven tuecke mathematics computer science division argonne national laboratory argonne il department computer science university chicago chicago il information sciences institute university southern california marina del rey ca ibm ny foster mcs anl gov carl isi edu jnick ibm com tuecke mcs anl gov business science need integrate services distributed heterogeneous dynamic virtual organizations formed disparate resources single enterprise external resource sharing service provider relationships 
integration technically challenging need achieve various qualities service running top different native platforms 
open grid services architecture addresses challenges 
building concepts technologies grid web services communities architecture defines uniform exposed service semantics grid service defines standard mechanisms creating naming discovering transient grid service instances provides location transparency multiple protocol bindings service instances supports integration underlying native platform facilities 
open grid services architecture defines terms web services description language wsdl interfaces associated conventions mechanisms required creating composing sophisticated distributed systems including lifetime management change management notification 
service bindings support reliable invocation authentication authorization delegation required 
presentation complements earlier foundational article anatomy grid describing grid mechanisms implement service oriented architecture explaining grid functionality incorporated web services framework illustrating architecture applied commercial computing basis distributed system integration organizational domains 
draft document continues revised 
latest version www globus org research papers ogsa pdf 
please send comments foster mcs anl gov carl isi edu jnick ibm com tuecke mcs anl gov physiology grid table contents 
need grid technologies 
evolution enterprise computing 
service providers business business computing 
background 
globus toolkit 
web services 
open grid services architecture 
service orientation virtualization 
service semantics grid service 
conventions transport protocols 
standard interfaces 
role hosting environments 
ogsa mechanisms build vo structures 
application example 
technical details 
ogsa service model 
creating transient services factories 
service lifetime management 
managing handles 
service information service discovery 
notification 
change management 
interfaces 
network protocol bindings 
higher level services 
related 
summary 
acknowledgments 
bibliography 
draft document progress 
version 
comments foster mcs anl gov carl isi edu jnick ibm com tuecke mcs anl gov physiology grid application developers assume target environment useful extent homogeneous reliable secure centrally managed 
increasingly computing concerned collaboration data sharing new modes interaction involve distributed resources 
result increased focus interconnection systems enterprises form intelligent networks switching devices caching services appliance servers storage systems storage area network management systems 
addition companies realizing achieve significant cost savings outsourcing nonessential elements environment various forms service providers 
evolutionary pressures generate new requirements distributed application development deployment 
today applications middleware typically developed specific platform windows nt flavor unix mainframe ee microsoft net provides hosting environment running applications 
capabilities provided platforms may range integrated resource management functions database integration clustering services security workload management problem determination different implementations semantic behaviors apis functions different platforms 
spite diversity continuing decentralization distribution software hardware human resources essential achieve desired qualities service qos measured terms common security semantics distributed workflow resource management performance coordinated fail problem determination services metrics resources assembled dynamically enterprise systems service provider systems customer systems 
require new abstractions concepts allow applications access share resources services distributed wide area networks 
problems time central concern developers distributed systems large scale scientific research 
community led development grid technologies address precisely problems seeing widespread successful adoption scientific technical computing :10.1.1.129.8850
earlier article defined grid technologies infrastructures supporting sharing coordinated diverse resources dynamic distributed virtual organizations vos :10.1.1.129.8850
defined essential properties grids introduced key requirements protocols services distinguishing connectivity protocols concerned communication authentication resource protocols concerned negotiating access individual resources collective protocols services concerned coordinated multiple resources 
described globus toolkit tm open source implementation key grid protocols supports wide variety major science projects :10.1.1.129.8850
extend argument respects define precisely grid functions grid technologies implemented applied 
structured terms protocols required interoperability vo components focus nature services respond protocol messages :10.1.1.129.8850
view grid extensible set grid services may aggregated various ways meet needs vos defined part services operate share 
define behaviors grid services possess order support distributed systems integration 
stressing functionality physiology view grids complements previous protocol oriented anatomical description 
globus project globus toolkit trademarks university chicago 
draft document progress 
version 
comments foster mcs anl gov carl isi edu jnick ibm com tuecke mcs anl gov physiology grid second explain grid technologies aligned web services technologies capitalize desirable web services properties service description discovery automatic generation client server code service descriptions binding service descriptions interoperable network protocols compatibility emerging higher level open standards services tools broad commercial support 
call alignment augmentation grid web services technologies open grid services architecture ogsa term architecture denoting defined set basic interfaces constructed interesting systems open communicate extensibility vendor neutrality commitment community standardization process 
architecture uses web services description language wsdl achieve self describing discoverable services interoperable protocols extensions support multiple coordinated interfaces change management 
ogsa leverages experience gained globus toolkit define conventions wsdl interfaces grid service potentially transient stateful service instance supporting reliable secure invocation required lifetime management notification policy management credential management virtualization 
ogsa defines interfaces discovery grid service instances creation transient grid service instances 
result standards distributed service system avoid term distributed object system due overloaded meaning supports creation sophisticated distributed services required modern enterprise interorganizational computing environments 
third focus discussion commercial applications scientific technical applications emphasized :10.1.1.129.8850
believe principles mechanisms apply environments 
commercial settings need particular seamless integration existing resources applications tools workload resource security network qos availability management 
ogsa support discovery service properties facilitates mapping adaptation higher level grid service functions native platform facilities 
ogsa service orientation allows virtualize resources multiple levels abstractions mechanisms distributed grids supporting collaboration organizational domains hosting environments spanning multiple tiers single domain 
common infrastructure means differences relating visibility accessibility derive policy controls associated resource ownership privacy security interaction mechanisms 
today enterprise systems transformed separate computing resource islands integrated distributed systems service components integrated dynamically flexibly various organizational boundaries 
rest article follows 
section examine issues motivate grid technologies commercial settings 
section review globus toolkit web services section motivate introduce open grid services architecture 
sections example discuss protocol implementations higher level services 
discuss related section summarize discussion section 
emphasize open grid services architecture associated grid service specifications continue evolve result standards global grid forum implementation globus project 
technical content article earlier abbreviated presentation represent snapshot progress 
draft document progress 
version 
comments foster mcs anl gov carl isi edu jnick ibm com tuecke mcs anl gov physiology grid need grid technologies grid technologies support sharing coordinated diverse resources dynamic vos creation geographically organizationally distributed components virtual computing systems sufficiently integrated deliver desired qos :10.1.1.129.8850
grid concepts technologies developed enable resource sharing far scientific collaborations 
applications include collaborative visualization large scientific datasets pooling expertise distributed computing computationally demanding data analyses pooling compute power storage coupling scientific instruments remote computers archives increasing functionality availability 
expect similar applications important commercial settings initially scientific technical computing applications point success stories commercial distributed computing applications including enterprise application integration business business partner collaboration internet 
just world wide web began technology scientific collaboration adopted ebusiness expect similar trajectory grid technologies 
argue grid concepts critically important commercial computing primarily means enhancing capability solution new challenges relating construction reliable scalable secure distributed systems 
challenges derive current rush driven technology trends commercial pressures decompose distribute network previously monolithic host centric services discuss 
evolution enterprise computing past computing typically performed highly integrated host centric enterprise computing centers 
sophisticated distributed systems command control systems reservation systems internet domain name system existed remained specialized niche entities :10.1.1.156.7859:10.1.1.156.7859
rise internet emergence business led growing awareness enterprise infrastructure encompasses external networks resources services 
initially new source complexity treated network centric phenomenon attempts construct intelligent networks intersect traditional enterprise data centers edge servers example enterprise web point presence virtual private network server connects enterprise network service provider resources 
assumption impact business internet enterprise core infrastructure managed circumscribed 
attempt general failed services decomposition occurring inside enterprise facilities 
new applications developed programming models enterprise java beans component model insulate application underlying computing platform support portable deployment multiple platforms 
portability turn allows platforms selected basis price performance qos requirements operating system supported 
example web serving caching applications target commodity servers traditional mainframe computing platforms 
resulting proliferation unix nt servers necessitates distributed connections legacy mainframe application data assets 
increased load assets caused companies load nonessential functions query processing back transaction processing systems mid tier servers 
web access enterprise resources requires faster request servicing driving need distribute cache content closer edge network 
result decomposition highly integrated internal infrastructure collection heterogeneous fragmented systems 
draft document progress 
version 
comments foster mcs anl gov carl isi edu jnick ibm com tuecke mcs anl gov physiology grid enterprises qos distributed servers data resources addressing issues navigation distributed security content distribution inside enterprise external networks 
parallel developments enterprises engaging aggressively ebusiness realizing highly robust infrastructure required handle associated unpredictability rapid growth 
enterprises expanding scope scale enterprise resource planning projects try provide better integration customer relationship management integrated supply chain existing core systems 
developments adding significant pressures enterprise infrastructure 
aggregate effect qualities service traditionally associated mainframe computing essential effective conduct business distributed compute resources inside outside enterprise 
example enterprises provide consistent response times customers despite workloads significant deviations average peak utilization 
require flexible resource allocation accordance workload demands priorities 
enterprises provide secure reliable environment distributed transactions flowing collection dissimilar servers deliver continuous availability seen users support disaster recovery business workflow distributed network application data servers 
current paradigm delivering qos applications vertical integration platform specific components services just today distributed environment decomposition monolithic infrastructures consistent delivery qos vertical integration services platform 
distributed resource management capabilities effective limited proprietary nature platform resources inconsistencies similar resources distributed environment 
result trends systems integrators take burden re integrating distributed compute resources respect qos 
appropriate infrastructure tools management distributed computing workflow increasingly labor intensive complex fragile platform specific operations staff watch fires availability performance verbally collaborate corrective actions different platforms 
situation scalable cost effective tenable face changes computing environment application portfolio 
service providers business business computing key trend emergence service providers sps various types sps content distribution sps applications sps storage sps 
exploiting economies scale sps aim take standard business processes creation web portal presence provide multiple customers superior price performance 
traditional enterprises infrastructures offloading processes viewed commodity functions 
emerging term refer service providers offering continuous ondemand access offer model carrier grade resource delivery usage subscription services 
computing services companies past tended provide offline batch oriented processes resources provided tightly integrated enterprise computing infrastructures business processes span house outsourced resources 
price exploiting economies scale enabled structures decomposition distribution enterprise computing functions 
providers face technical challenges 
achieve economies scale providers require server infrastructures easily customized demand meet specific customer needs 
demand draft document progress 
version 
comments foster mcs anl gov carl isi edu jnick ibm com tuecke mcs anl gov physiology grid infrastructure supports dynamic resource allocation accordance service level agreement policies efficient sharing reuse infrastructure high utilization levels distributed security edge network application data servers delivers consistent response times high levels availability turn drives need toend performance monitoring real time reconfiguration 
key industry trend cross enterprise business business collaboration multi organization supply chain management virtual web malls electronic market auctions 
relationships effect virtual organizations defined albeit particularly stringent requirements security availability service level agreements complex transaction processing flows 
computing represents source demand distributed systems integration characterized large differences information technologies deployed different organizations 
background review technologies build define open grid services architecture globus toolkit widely adopted grid technology solution scientific technical computing web services emerged popular standards framework accessing network applications 
globus toolkit globus toolkit community open architecture open source set services software libraries support grids grid applications :10.1.1.129.8850
toolkit addresses issues security information discovery resource management data management communication fault detection portability 
globus toolkit mechanisms hundreds sites dozens major grid projects worldwide 
toolkit components relevant ogsa grid resource allocation management gram protocol gatekeeper service provides secure reliable service creation management meta directory service mds provides information discovery soft state registration data modeling local registry gram reporter grid security infrastructure gsi supports single sign delegation credential mapping :10.1.1.146.1122:10.1.1.146.1122
illustrated components provide essential elements service oriented architecture generality achieved ogsa 
user gatekeeper authenticate create proxy credential request process creation factory create process user user process process proxy proxy reporter registry discovery register register discovery service contact service grid information index server discovery service gridftp selected globus toolkit mechanisms showing initial creation proxy credential subsequent authenticated requests remote gatekeeper service resulting creation user process associated potentially restricted proxy credential followed request remote service 
shown soft state service registration mds 
draft document progress 
version 
comments foster mcs anl gov carl isi edu jnick ibm com tuecke mcs anl gov physiology grid gram protocol provides reliable secure remote creation management arbitrary computations term article transient service instances 
gsi mechanisms authentication authorization credential delegation remote computations 
phase commit protocol reliable invocation techniques condor system 
service creation handled small trusted gatekeeper process termed factory article gram reporter monitors publishes information identity state local computations registry 
mds provides uniform framework discovering accessing system configuration status information compute server configuration network status locations replicated datasets term discovery interface article 
mds uses soft state protocol grid notification protocol lifetime management published information 
public key grid security infrastructure gsi protocol provides single sign authentication communication protection initial support restricted delegation :10.1.1.25.9598
brief single sign allows user authenticate create proxy credential program authenticate remote service user behalf 
delegation allows creation communication remote service delegated proxy credentials remote service act user behalf various restrictions capability important nested operations 
similar mechanisms implemented context security technologies kerberos potentially different characteristics 
gsi uses certificates widely employed standard pki certificates basis user authentication 
gsi defines proxy certificate leverage support single sign delegation 
proxy certificate similar concept kerberos ticket purely public key cryptographic techniques 
gsi typically uses transport layer security tls protocol follow ssl authentication public key authentication protocols proxy certificates 
remote delegation protocol proxy certificates layered top tls 
internet engineering task force draft defines proxy certificate extensions 
global grid forum drafts define delegation protocol remote creation proxy certificate gss api extensions allow api effectively grid programming 
rich support restricted delegation demonstrated prototypes critical part proposed proxy certificate profile 
restricted delegation allows entity delegate just subset total privileges entity 
restriction important reduce adverse effects intentional accidental misuse delegated credential 
web services term web services describes important emerging distributed computing paradigm differs approaches dce corba java rmi focus simple internet standards extensible markup language xml address heterogeneous distributed computing 
web services define technique describing software components accessed methods accessing components discovery methods enable identification relevant service providers 
web services programming language programming model system software neutral 
web services standards defined standards bodies form basis major new industry initiatives microsoft net ibm dynamic business sun sun 
particularly concerned standards soap wsdl ws inspection 
draft document progress 
version 
comments foster mcs anl gov carl isi edu jnick ibm com tuecke mcs anl gov physiology grid simple object access protocol soap provides means messaging service provider service requestor 
soap simple enveloping mechanism xml payloads defines remote procedure call rpc convention messaging convention 
soap independent underlying transport protocol soap payloads carried ftp java messaging service jms 
emphasize web services describe multiple access mechanisms underlying software component 
soap just means formatting web service invocation 
web services description language wsdl xml document describing web services set endpoints operating messages containing messaging rpc payloads 
service interfaces defined abstractly terms message structures sequences simple message exchanges operations wsdl terminology bound concrete network protocol data encoding format define endpoint 
related concrete endpoints bundled define endpoints services 
wsdl extensible allow description endpoints concrete representation messages variety different message formats network protocols 
standardized binding conventions defined describing wsdl conjunction soap get post mime 
ws inspection comprises simple xml language related conventions locating service descriptions published service provider 
ws inspection language document contain collection service descriptions links sources service descriptions 
service description usually url wsdl document occasionally service description entry universal description discovery integration uddi registry 
link usually url ws inspection document occasionally link uddi entry 
ws inspection service provider creates document document network accessible 
service requestors standard web access mechanisms get retrieve document discover services service provider advertises 
documents organized different forms index 
various web services standards defined 
example web services flow language wsfl addresses web services orchestration building sophisticated web services composing simpler web services 
web services framework advantages purposes 
need support dynamic discovery composition services heterogeneous environments necessitates mechanisms registering discovering interface definitions endpoint implementation descriptions dynamically generating proxies potentially multiple bindings specific interfaces 
wsdl supports requirement providing standard mechanism defining interface definitions separately embodiment particular binding transport protocol data encoding format 
second widespread adoption web services mechanisms means framework web services exploit numerous tools extant services wsdl processors generate language bindings variety languages web services invocation framework workflow systems sit top wsdl hosting environments web services microsoft net apache axis 
emphasize web services imply soap communications 
needed alternative transports example achieve higher performance run specialized network protocols 
draft document progress 
version 
comments foster mcs anl gov carl isi edu jnick ibm com tuecke mcs anl gov physiology grid open grid services architecture argued internal enterprise infrastructures sp enhanced infrastructures multi organizational grids computing increasingly concerned creation management application dynamic ensembles resources services people call virtual organizations :10.1.1.129.8850
depending context ensembles small large short lived long lived single institutional multi institutional homogeneous heterogeneous 
individual ensembles may structured hierarchically smaller systems may overlap membership 
assert regardless differences developers applications vos face common requirements seek deliver qos measured terms common security semantics distributed workflow resource management coordinated fail problem determination services metrics collection resources heterogeneous dynamic characteristics 
turn nature requirements mechanisms required address practical settings 
extending analysis introduce open grid services architecture supports creation maintenance application ensembles services maintained vos :10.1.1.129.8850
start discussion general remarks concerning utility service oriented grid architecture importance able virtualize grid services essential service characteristics 
introduce specific aspects standardize definition call grid service 
technical details section 
service orientation virtualization describing vos focus physical resources shared services supported resources :10.1.1.129.8850
service network enabled entity provides capability 
term object arguably avoid term due overloaded meaning 
ogsa focus services computational resources storage resources networks programs databases represented services 
regardless perspective critical requirement distributed grid environment mechanisms enable interoperability :10.1.1.129.8850
service oriented view partition interoperability problem subproblems definition service interfaces identification protocol invoke particular interface ideally agreement standard set protocols 
service oriented view allows address need standard interface definition mechanisms local remote transparency adaptation local os services uniform service semantics 
service oriented view simplifies virtualization encapsulation common interface diverse implementations 
virtualization allows consistent resource access multiple heterogeneous platforms local remote location transparency enables mapping multiple logical resource instances physical resource management resources vo composition lower level resources 
virtualization allows composition services form sophisticated services regard services composed implemented 
virtualization grid services underpins ability map common service semantic behavior seamlessly native platform facilities 
virtualization easier service functions expressed standard form implementation service invoked manner 
wsdl adopt purpose supports service interface definition distinct protocol bindings draft document progress 
version 
comments foster mcs anl gov carl isi edu jnick ibm com tuecke mcs anl gov physiology grid service invocation 
wsdl allows multiple bindings single interface including distributed communication protocol locally optimized binding local ipc interactions request service processes host 
binding properties may include reliability forms qos authentication delegation credentials 
choice binding transparent requestor respect service invocation semantics respect things example requestor able choose particular binding performance reasons 
service interface definition access binding distinct implementation functionality service 
service support multiple implementations different platforms facilitating seamless overlay native platform facilities nesting service implementations virtual ensembles resources 
depending platform context implementation approaches 

implementation constructed full portability multiple platforms support execution environment container hosting service 

platform possessing specialized native facilities delivering service functionality map service interface definition native platform facilities 

apply mechanisms recursively higher level service constructed composition multiple lower level services may map native facilities decompose 
service implementation dispatches operations lower level services see section example consider distributed trace facility records trace records repository 
platform support robust trace facility implementation created hosted service execution environment storing retrieving trace records demand 
platform possessing robust trace facility integrate distributed trace service capability native platform trace mechanism leveraging existing operational trace management tools auxiliary offload dump restore semantically preserving logical trace stream distributed trace service 
case higher level service trace records obtained lower level services combined integrated trace facility service 
central virtualization resource behaviors ability adapt operating system functions specific hosts 
significant challenge developing mappings enable exploitation native capabilities concerned performance monitoring workload management problem determination enforcement native platform security policy grid environment common denominator constituent pieces 
grid service discovery mechanisms important regard allowing higher level services discover capabilities supported particular implementation interface 
example native platform supports reservation capabilities implementation resource management interface gram exploit capabilities :10.1.1.27.7478
service architecture supports local remote transparency respect service location invocation 
provides multiple protocol bindings facilitate localized optimization services invocation service hosted locally service requestor enable protocol negotiation network flows organizational boundaries may wish choose protocols optimized different purpose 
note implementation particular grid service interface may map native platform functions capabilities 
draft document progress 
version 
comments foster mcs anl gov carl isi edu jnick ibm com tuecke mcs anl gov physiology grid service semantics grid service ability virtualize compose services depends standard interface definitions 
require standard semantics service interactions example different services follow conventions error notification 
ogsa defines call grid service web service provides set defined interfaces follows specific conventions 
interfaces address discovery dynamic service creation lifetime management notification manageability conventions address naming 
expect address authorization concurrency control ogsa evolves 
important issues authentication reliable invocation viewed service protocol bindings external core grid service definition addressed complete ogsa implementation 
separation concerns increases generality architecture compromising functionality 
interfaces conventions define grid service concerned particular behaviors related management transient service instances 
vo participants typically maintain merely static set persistent services handle complex activity requests clients 
need instantiate new transient service instances dynamically handle management interactions associated state particular requested activities 
activity state longer needed service destroyed 
example videoconferencing system establishment videoconferencing session involve creation service instances intermediate points manage data flows qos constraints 
web serving environment service instances instantiated dynamically provide consistent user response time managing application workload dynamically added capacity 
examples transient service instances query database data mining operation network bandwidth allocation running data transfer advance reservation processing capability 
examples emphasize service instances extremely lightweight entities created manage short lived activities 
transience significant implications services managed named discovered 
conventions transport protocols services complex distributed system independently 
versioning compatibility services managed expressed clients discover specific service versions compatible services 
services hosting environments run disrupting operation clients 
example upgrade hosting environment may change set network protocols communicate service upgrade service may correct errors enhance interface 
ogsa defines conventions allow identify service changes changes compatible respect interface semantics necessarily network protocol 
ogsa defines mechanisms refreshing client knowledge service operations supports network protocols communicate service 
service description indicates protocol binding communicate service 
properties desirable bindings 
reliable service invocation 
services interact exchange messages 
distributed systems prone component failure guarantee message delivered 
existence internal state important able guarantee service received message 
foundation build broad range higher level operation semantics transactions 
draft document progress 
version 
comments foster mcs anl gov carl isi edu jnick ibm com tuecke mcs anl gov physiology grid authentication 
authentication mechanisms allow identity individuals services established policy enforcement 
desire transport protocol provides mutual authentication client service instance delegation proxy credentials 
foundation build broad range higher level authorization mechanisms 
standard interfaces interfaces wsdl terms define grid service listed table introduced described detail section 
note ogsa defines variety behaviors associated interfaces interfaces optional 
table proposed ogsa grid service interfaces see text details 
names provided change 
interfaces authorization policy management manageability purposes remain defined 
porttype operation description notification source notification sink registry query variety information grid service instance including basic introspection information handle primary key home handlemap terms defined richer interface information service specific information service instances known registry 
extensible support various query languages 
set get termination time grid service instance destroy terminate grid service instance subscribe notifications service related events message type interest statement 
allows delivery third party messaging services 
carry asynchronous delivery notification messages conduct soft state registration grid service handles grid service handle factory create new grid service instance handlemap return grid service currently associated supplied grid service handle discovery 
applications require mechanisms discovering available services determining characteristics services configure requests services appropriately 
address requirement defining standard representation service data information grid service instances structure set named typed xml elements called service data elements encapsulated standard container format draft document progress 
version 
comments foster mcs anl gov carl isi edu jnick ibm com tuecke mcs anl gov physiology grid standard operation required interface retrieving service data individual grid service instances pull mode access see interface push mode access standard interfaces registering information grid service instances registry services registry mapping handles handlemap explained section discuss naming 
dynamic service creation 
ability dynamically create manage new service instances basic tenet ogsa model necessitates existence service creation services 
ogsa model defines standard interface factory semantics service creation service provide 
lifetime management 
distributed system able deal inevitable failures 
system incorporates transient stateful service instances mechanisms provided reclaiming services state associated failed operations 
example termination videoconferencing session require termination services created intermediate points manage flow 
address requirement defining standard operations destroy required interface explicit destruction soft state lifetime management grid service instances respectively 
soft state protocols allow state established remote location discarded eventually refreshed stream subsequent keepalive messages :10.1.1.146.1122:10.1.1.146.1122
protocols advantages resilient failure single lost message need cause harm simple reliable discard protocol message required 
notification 
collection dynamic distributed services able notify asynchronously interesting changes state 
ogsa defines common abstractions service interfaces subscription delivery notifications services constructed composition simpler services deal notifications errors standard ways 
interface integrated service data notification request expressed request subsequent push mode delivery service data 
refer capabilities provided interfaces event service avoid term due overloaded meaning 
interfaces 
expect define additional standard interfaces near address issues authorization policy management concurrency control monitoring management potentially large sets grid service instances 
role hosting environments ogsa defines semantics grid service instance created named lifetime determined communicate 
ogsa prescriptive matters basic behavior place requirements service performs service 
words ogsa address issues implementation programming model programming language implementation tools execution environment 
practice grid services instantiated specific execution environment hosting environment 
particular hosting environment defines implementation programming model programming language development tools debugging tools implementation grid service meets obligations respect grid service semantics 
today science grid applications typically rely native operating system processes hosting environment example creation new service instance involving creation new process 
environments service may implemented variety languages java fortran 
grid semantics may implemented directly part draft document progress 
version 
comments foster mcs anl gov carl isi edu jnick ibm com tuecke mcs anl gov physiology grid service provided linked library 
typically semantics provided external services provided operating system 
example lifetime management functions addressed application required 
web services hand may implemented sophisticated container component hosting environments ee websphere net sun 
environments define framework container components adhering interface standards instantiated composed build complex applications 
compared low levels functionality provided native hosting environments container component hosting environments tend offer superior programmability manageability flexibility safety 
consequently component container hosting environments seeing widespread building business services 
ogsa context container hosting environment primary responsibility ensuring services supports adhere grid service semantics ogsa may motivate modifications additions container component interface 
defining service semantics ogsa specifies interactions services manner independent hosting environment 
discussion highlights successful implementation grid services facilitated specifying baseline characteristics hosting environments possess defining internal interface service implementation global grid environment 
characteristics rendered different implementation technologies ee shared libraries 
detailed discussion hosting environment characteristics scope article 
expect hosting environment address mapping grid wide names grid service handles implementation specific entities pointers java object dispatch grid invocations notification events implementation specific actions events procedure calls protocol processing formatting data network transmission lifetime management grid service instances inter service authentication 
ogsa mechanisms build vo structures applications users able create transient services discover determine properties available services 
ogsa factory registry handlemap interfaces support creation transient service instances discovery characterization service instances associated vo 
effect registry service service instance supports registry interface registration interface operation appropriate service data discovery defines service set associated vo 
interfaces construct variety vo service structures illustrated described 
simple hosting environment 
simple execution environment set resources located single administrative domain supporting native facilities service management example ee application server microsoft net system linux cluster 
ogsa user interface environment typically structured registry factories handlemap service 
factory recorded registry enable clients discover available factories 
factory receives client request create grid service instance factory invokes hosting environment specific capabilities create new instance assigns handle registers instance registry handle available handlemap service 
implementations various services map directly local operations 
draft document progress 
version 
comments foster mcs anl gov carl isi edu jnick ibm com tuecke mcs anl gov physiology grid factory registry 
factory service service 
mapper service factory registry 
factory service service 
mapper service factory 
registry mapper different vo structures described text 
left right simple hosting environment virtual hosting environment collective services 
virtual hosting environment 
complex environments resources associated vo span heterogeneous geographically distributed hosting environments example resources span simple hosting environments 
virtual hosting environment corresponds set resources associated partnership accessible client exactly interfaces hosting environment just described 
create higher level factories delegate creation requests lower level factories 
similarly create higher level registry knows higher level factories service instances created vo specific policies govern vo services 
clients vo registry find factories service instances associated vo handles returned registry talk directly service instances 
higher level factories registry implement standard interfaces perspective user indistinguishable factory registry 
note previous example registry handle globally unique name service set maintained vo 
resource management policies defined enforced platforms hosting vo services targeting vo unique name 
collective operations 
construct virtual hosting environment provides vo participants sophisticated virtual collective services 
case registry keeps track advertises factories create higher level service instances 
instances implemented asking lower level factories create multiple service instances composing behaviors multiple lower level service instances single higher level service instance 
examples preceding discussion illustrate grid service mechanisms integrate distributed resources virtual multi organizational boundaries internal commercial infrastructures 
cases collection grid services registered appropriate discovery services support functional capabilities delivering qos interactions distributed resource pools 
applications middleware exploit services distributed resource management heterogeneous platforms local remote transparency locally optimized flows 
implementations grid services map native platform resources apis enable seamless integration higher level grid services just described underlying platform components 
furthermore service sets associated multiple vos map draft document progress 
version 
comments foster mcs anl gov carl isi edu jnick ibm com tuecke mcs anl gov physiology grid underlying physical resources services represented logically distinct level sharing physical resource systems lower levels 
application example illustrate stages life data mining computation illustrate working basic remote service invocation lifetime management notification functions 

environment initially comprises left right simple hosting environments runs user application encapsulates computing storage resources supports factory services creating storage reservations creating mining services encapsulate database services 
represent local registry services additional vo registry service presumably provides information location depicted services 

user application invokes create grid service requests factories second hosting environment requesting creation data mining service perform data mining operation behalf allocation temporary storage computation 
request involves mutual authentication user relevant factory authentication mechanism described factory service description followed authorization request 
request successful results creation grid service instance initial lifetime 
new data mining service instance provided delegated proxy credentials allow perform remote operations behalf user 

newly created data mining service uses proxy credentials start requesting data database services placing intermediate results local storage 
data mining service uses notification mechanisms provide user application periodic updates status 
user application generates periodic keepalive requests grid service instances created 

user application fails reason 
data mining computation continues party interest results keepalive messages generated 

shown due application failure keepalive messages cease grid service instances eventually time terminated freeing storage computing resources consuming 
draft document progress 
version 
comments foster mcs anl gov carl isi edu jnick ibm com tuecke mcs anl gov physiology grid user application user application user application user application create mining service create storage reservation keepalive status update notification status update storage reservation factory storage storage reservation factory storage reservation storage storage reservation factory storage reservation storage storage reservation factory storage reservation storage mining service factory mining service factory mining service mining service factory mining service mining service factory mining service query query database service database service storage storage database service database service storage storage database service database service storage storage database service database service storage storage example grid services 
see text details 
technical details detailed description grid service abstraction associated interfaces conventions 
ogsa service model basic premise ogsa represented service network enabled entity provides capability exchange messages 
computational resources storage resources networks programs databases forth services 
adoption uniform service oriented model means components environment virtual 
specifically ogsa represents grid service web service conforms set conventions supports standard interfaces purposes lifetime management 
core set consistent interfaces grid services implemented facilitates construction higher order services treated uniform way layers abstraction 
draft document progress 
version 
comments foster mcs anl gov carl isi edu jnick ibm com tuecke mcs anl gov physiology grid grid services characterized typed capabilities offer 
grid service implements interfaces interface defines set operations invoked exchanging defined sequence messages 
grid service interfaces correspond wsdl 
set supported grid service additional information relating versioning specified grid service wsdl extensibility element defined ogsa 
grid services maintain internal state lifetime service 
existence state distinguishes instance service provides interface 
term grid service instance refer particular instantiation grid service 
protocol binding associated service interface define delivery semantics addresses example reliability 
services interact exchange messages 
distributed systems prone component failure guarantee message sent delivered 
existence internal state important able guarantee service received message failure recovery mechanisms retry 
situations may wish protocol guarantees exactly delivery similar semantics 
frequently desirable protocol binding behavior mutual authentication communication 
ogsa services created destroyed dynamically 
services may destroyed explicitly may destroyed inaccessible result system failure operating system crash network partition 
interfaces defined managing service lifetime 
grid services dynamic stateful need way distinguish dynamically created service instance 
grid service instance assigned globally unique name grid service handle gsh distinguishes specific grid service instance grid service instances existed exist exist 
grid service fails restarted way preserve state essentially instance gsh 
grid services may upgraded lifetime example support new protocol versions add alternative protocols 
gsh carries protocol instance specific information network address supported protocol bindings 
information encapsulated instance specific information required interact specific service instance single abstraction called grid service gsr 
gsh invariant gsr grid service instance change service lifetime 
gsr explicit expiration time may invalid time service lifetime ogsa defines mapping mechanisms described obtaining updated gsr 
result gsr lifetime expired undefined 
note holding valid gsr guarantee access grid service instance local policy access control constraints example maximum number current requests may prohibit servicing request 
addition referenced grid service instance may failed preventing gsr 
ogsa grid service grid services manipulate grid service handle abstractions define ogsa model 
defining specific set services result specific rendering ogsa service model 
take flexible approach define set basic ogsa interfaces wsdl manipulating service model abstractions 
interfaces combined different ways produce rich range grid services 
table presents names descriptions grid service interfaces defined date 
note interface supported grid services 
draft document progress 
version 
comments foster mcs anl gov carl isi edu jnick ibm com tuecke mcs anl gov physiology grid creating transient services factories ogsa defines class grid services implement interface creates new grid service instances 
call factory interface service implements interface factory 
factory interface operation creates requested grid service returns gsh initial gsr new service instance 
factory interface specify service instance created 
common scenario factory interface implemented form hosting environment net ee provides standard mechanisms creating subsequently managing new service instances 
hosting environment may define services implemented language transparent service requestors ogsa see factory interface 
alternatively construct higher level factories create services delegating request factory services see section 
example web serving environment new computer integrated active pool asking appropriate factory service instantiate web serving service idle computer 
service lifetime management transient service instances raises issue determining service lifetime determining service terminated associated resources recovered 
normal operating conditions transient service instance created perform specific task terminates completion task explicit request requestor service designated requestor 
distributed systems components may fail messages may lost 
result service may see expected explicit termination request causing consume resources indefinitely 
ogsa addresses problem soft state approach grid service instances created specified lifetime :10.1.1.160.7901:10.1.1.146.1122
initial lifetime extended specified time period explicit request client grid service acting client behalf subject course policy service 
time period expires having received re affirmation interest client hosting environment service instance liberty terminate service instance release associated resources 
approach grid service lifetime management desirable properties client knows determine grid service instance terminate 
knowledge allows client determine reliably service instance terminated resources recovered face system faults failures servers networks clients 
client knows exactly long order request final status service instance request extension service lifetime 
knows system faults occur need continue attempting contact service known termination time resources associated service released time client succeeded extending lifetime 
brief lifetime management enables robust termination failure detection clearly defining lifetime semantics service instance 
hosting environment guaranteed resource consumption bounded face system failures outside control 
termination time service reached hosting environment reclaim associated resources 
implement soft state lifetime management operation required interface defines operations negotiating initial lifetime draft document progress 
version 
comments foster mcs anl gov carl isi edu jnick ibm com tuecke mcs anl gov physiology grid new service instance requesting lifetime extension harvesting service instance lifetime expired 
describe mechanisms turn 
negotiating initial lifetime 
requesting creation new grid service instance factory client indicates minimum maximum acceptable initial lifetimes 
factory selects initial lifetime returns client 
requesting lifetime extension 
client requests lifetime extension message grid service instance specifies minimum maximum acceptable new lifetime 
service instance selects new lifetime returns client 
note keepalive message effectively idempotent result sequence requests intermediate requests lost reordered long requests lost service instance lifetime expires 
periodicity keepalive messages determined client initial lifetime negotiated service instance subsequent keepalive messages knowledge network reliability 
interval size allows tradeoffs currency information overhead 
note approach lifetime management provides service considerable autonomy 
lifetime extension requests clients mandatory service apply policies granting request 
service decide time extend lifetime response lifetime extension request client reason 
service instance cancel time example resource constraints priorities dictate relinquishes resources 
subsequent client requests refer service fail 
absolute time operation matter grid service information elements commonly security credentials implies existence global clock sufficiently synchronized 
network time protocol ntp provides standardized mechanisms clock synchronization typically synchronize clocks tens milliseconds adequate purposes lifetime management 
note implying statements requirement ordering events expect introduce mechanisms revisions 
managing handles discussed result factory request gsh gsr 
gsh guaranteed created grid service instance gsr created finite lifetime may change service lifetime 
strategy advantage increased flexibility perspective grid service provider introduces problem obtaining valid gsr gsr returned service creation operation expires 
core bootstrapping problem establish communication grid service gsh 
describe issues addressed grid service specification june note part specification evolve minimum support multiple handle representations handle mapping services 
approach taken ogsa define handle mapper interface handlemap 
operations provided interface take gsh return valid gsr 
mapping operations access controlled mapping request may denied 
implementation handlemap interface may wish keep track grid service instances existence return instances knows terminated 
possession valid gsr assure grid service instance contacted service may failed explicitly terminated time gsr draft document progress 
version 
comments foster mcs anl gov carl isi edu jnick ibm com tuecke mcs anl gov physiology grid time 
obviously termination service scheduled desirable represent gsr lifetime required 
introducing handlemap interface partition general problem obtaining gsr arbitrary service specific subproblems identifying handlemap service contains mapping specified gsh contacting handlemap obtain desired gsr 
address subproblems turn 
ensure map gsh gsr require grid service instance registered handlemap call home handlemap 
structuring gsh include home handlemap identity easily scalably determine handlemap contact obtain gsr gsh 
unique names determined locally avoiding scalability problems associated centralized name allocation services relying domain name system :10.1.1.156.7859
note gsh mappings live 
gsh exactly home handlemap 
identify home handlemap gsh 
service implements handlemap interface grid service gsh 
name constructing gsh back position trying obtain gsr handlemap service gsh 
resolve bootstrapping problem need way obtain gsr handlemap requiring handlemap 
accomplish requiring home handlemap services identified url support bootstrapping operation bound single known protocol https 
gsr describe protocols contact handlemap service get operation url points home handlemap gsr handlemap wsdl form returned 
note relationship exists services implement handlemap factory interfaces 
specifically gsh returned factory request contain url home handlemap gsh gsr mapping entered updated handlemap service 
implementation factory decide service home handlemap 
single service may implement factory handlemap interfaces 
current ggf revising grid service component allow forms handles mappers resolvers simplify current handle resolver 
service data service discovery associated grid service instance set service data collection xml elements encapsulated service data elements 
packaging element includes name unique grid service instance type time live information recipient lifetime management 
obligatory interface defines standard wsdl operation querying retrieving service data 
operation requires simple name query language extensible allow specification query language may example xquery 
grid service specification defines grid service interface set zero service data elements supported grid service instance supports interface 
associated interface obligatory grid service instance set elements containing basic information grid service instance gsh gsr primary key home handlemap 
draft document progress 
version 
comments foster mcs anl gov carl isi edu jnick ibm com tuecke mcs anl gov physiology grid application interface operation service discovery 
discussion assumed gsh represents desired service 
obtain gsh place 
essence service discovery define process identifying subset specified set gsh attributes interfaces provided number requests serviced load service policy statements number outstanding requests allowed 
grid service supports service discovery called registry 
registry service defined things registry interface provides operations registered registry service associated service data element contain information registered 
registry interface register gsh interface operation retrieve information registered 
registry interface allows gsh register registry service augment set considered subsetting 
mds service vo operation notify interested parties vo existence service provides 
interested parties typically include various forms service discovery services collect structure service information order respond efficiently service discovery requests 
stateful interfaces ogsa gsh registration soft state operation periodically refreshed allowing discovery services deal naturally dynamic service availability 
note specification attributes associated gsh tied registration gsh service implementing interface 
feature important attribute values may dynamic may variety ways attribute values may obtained including consulting service implementing interface 
notification ogsa notification framework allows clients register interest notified particular messages interface supports asynchronous way delivery notifications 
particular service wishes support subscription notification messages support interface manage subscriptions 
service wishes receive notification messages implement interface deliver notification messages 
start notification particular service invokes subscribe operation notification source interface giving service gsh notification sink 
stream notification messages flow source sink sink sends periodic keepalive messages notify source interested receiving notifications 
reliable delivery desired behavior implemented defining appropriate protocol binding service 
important aspect notification model close integration service data subscription operation just request subsequent push delivery service data meet specified conditions 
recall operation provides pull model 
framework allows direct service service notification message delivery integration various third party services messaging services commonly commercial world custom services filter transform specially deliver notification messages behalf notification source 
notification semantics property protocol binding deliver message 
example soap protocol direct udp binding provide point point best effort notification bindings proprietary message service provide better best effort delivery 
multicast protocol binding support multiple receivers 
draft document progress 
version 
comments foster mcs anl gov carl isi edu jnick ibm com tuecke mcs anl gov physiology grid change management order support discovery change management grid services grid service interfaces globally uniquely named 
wsdl interface defined porttype globally uniquely named porttype xml namespace defined attribute wsdl document definitions element local name defined porttype element name attribute 
changes definition grid service changing interface making semantically significant implementation changes operations reflected new interface names new 
feature allows clients require grid services particular properties particular interfaces implementation semantics discover compatible services 
interfaces expect define optional manageability interface supports set manageability operations 
operations allow potentially large sets grid service instances monitored managed management consoles automation tools 
optional concurrency interface provide concurrency control operations 
network protocol bindings web services framework instantiated variety different protocol bindings 
soap tls security example defined 
discuss issues arise ogsa context 
selecting network protocol bindings ogsa context address primary requirements reliable transport 
discussed grid services abstraction require support reliable service invocation 
way address requirement incorporate appropriate support network protocol binding example 
authentication delegation 
discussed grid services abstraction require support communication proxy credentials remote sites 
way address requirement incorporate appropriate support network protocol binding example tls extended proxy credential support 
ubiquity 
grid goal enabling dynamic formation vos distributed resources means principle possible arbitrary pair services interact 
gsr format 
recall grid service take binding specific format 
possible gsr format wsdl document corba ior 
successful deployment large scale interoperable ogsa implementations benefit definition small number standard protocol bindings grid service discovery invocation 
just ubiquitous deployment internet protocol allows essentially entities communicate ubiquitous deployment protocols allow services communicate 
clients particularly simple need know set protocols 
notice definition standard protocols prevent pair services alternative protocol support 
protocols defined gain widespread acceptance remains seen 
case definition scope article 
draft document progress 
version 
comments foster mcs anl gov carl isi edu jnick ibm com tuecke mcs anl gov physiology grid higher level services abstractions services described article provide building blocks implement variety higher level grid services 
intend closely community define implement wide variety services collectively address diverse requirements business science applications 
include distributed data management services supporting access manipulation distributed data databases files 
services interest include database access data translation replica management replica location transactions 
workflow services supporting coordinated execution multiple application tasks multiple distributed grid resources 
auditing services supporting recording usage data secure storage data analysis data purposes fraud intrusion detection forth 
instrumentation monitoring services supporting discovery sensors distributed environment collection analysis information sensors generation alerts unusual conditions detected forth 
problem determination services distributed computing including dump trace log mechanisms event tagging correlation capabilities 
security protocol mapping services enabling distributed security protocols transparently mapped native platform security services participation platform resource managers implemented support distributed security authentication access control mechanism 
flexibility framework means services implemented composed variety different ways 
example coordination service supports simultaneous allocation multiple computational resources instantiated service instance linked application library incorporated higher level services 
appears straightforward re engineer resource management data transfer information service protocols current globus toolkit build common mechanisms see 
effect refactor design protocols extracting similar elements exploit commonalities 
process enhance capabilities current protocols arrive common service infrastructure 
process produce globus toolkit 
gram gridftp ftp tls gsi ip mds ldap gram gridftp mds grid services abstraction soap tls gsi transports left current globus toolkit protocols right potential refactoring exploit ogsa mechanisms 
related note briefly relevant prior related focusing particular issues relating secure reliable remote creation management transient stateful services 
discussed section ogsa mechanisms derive globus toolkit particular factory gram gatekeeper registry gram reporter mds draft document progress 
version 
comments foster mcs anl gov carl isi edu jnick ibm com tuecke mcs anl gov ip physiology grid soft state registration mds secure remote invocation delegation gsi reliable remote invocation gram :10.1.1.25.9598
primary differences relate different mechanisms integrated ogsa refactoring key design elements example common notification mechanisms service registration service state 
ogsa viewed distributed object system sense grid service instance unique identity respect instances system instance characterized state coupled behavior published type specific operations 
respect ogsa exploits ideas developed previously systems eden argus corba sos spring globe mentat legion 
contrast corba ogsa web services addresses directly issues secure interoperability provides richer interface definition language 
grid computing legion group promoted object models draw parallels certain ogsa legion constructs particular factory class object handlemap binding agent timeouts bindings 
note ogsa issues viewed central distributed object systems object technologies implementations exposure inheritance mechanisms interface level hosting technology 
soft state mechanisms management specific state network entities internet protocols name leases rmi jini :10.1.1.160.7901:10.1.1.146.1122
ogsa services information open soft state management 
prefer soft state techniques alternatives distributed counting relative simplicity 
reliable invocation mechanisms inspired condor turn build prior distributed systems 
noted section core ogsa service behaviors general supported form hosting environment simplifies development individual components managing persistence security lifecycle management forth 
notion hosting environment appears various operating systems object systems 
application web services mechanisms grid computing investigated advocated workshop providing overviews number relevant efforts 
gannon discuss application various contemporary technologies science applications propose application factories wsdl interfaces means creating application services dynamically 
de roure propose semantic grid analogy semantic web propose range higher level services 
service oriented interfaces numerical software netsolve ninf relevant :10.1.1.29.4786
sun microsystems jxta system addresses important issues encountered grids including discovery membership virtual organizations jxta calls peer groups believe abstractions implemented ogsa framework 
connections component models distributed high performance computing implementations build globus toolkit mechanisms 
summary defined open grid services architecture ogsa supports standard interfaces conventions creation termination management invocation stateful transient services named managed entities dynamic managed lifetime 
draft document progress 
version 
comments foster mcs anl gov carl isi edu jnick ibm com tuecke mcs anl gov physiology grid ogsa represented grid service potentially transient service conforms set conventions expressed wsdl purposes lifetime management discovery characteristics notification 
grid service implementations target native platform facilities integration existing infrastructures 
standard interfaces creating registering discovering grid services configured create various forms vo structure 
merits service oriented model follows 
components environment virtualized 
providing core set consistent interfaces grid services implemented facilitate construction higher order services treated uniform way layers abstraction 
virtualization enables mapping multiple logical resource instances physical resource composition services regardless implementation management resources vo composition lowerlevel resources 
virtualization grid services underpins ability mapping common service semantic behavior seamlessly native platform facilities 
development ogsa represents natural evolution globus toolkit key concepts factory registry reliable secure invocation exist general flexible form benefits uniform interface definition language 
effect ogsa key design elements example common notification mechanisms service registration service state 
abstracts elements applied level virtualize vo resources 
globus toolkit provides basis open source ogsa implementation globus toolkit supports existing globus apis wsdl interfaces described www globus org ogsa 
development ogsa represents natural evolution web services 
integrating support transient stateful service instances existing web services technologies ogsa extends significantly power web services framework requiring minor extensions existing technologies 
acknowledgments pleased acknowledge contributions open grid services architecture karl czajkowski jeffrey frey steve graham 
grateful numerous colleagues discussions topics covered helpful comments versions article particular malcolm atkinson brian carpenter david de roure andrew grimshaw marty humphrey keith jackson bill johnston kate keahey gregor von laszewski lee miron livny norman paton jean pierre thomas sandholm peter vanderbilt von welch 
supported part mathematical information computational sciences division subprogram office advanced scientific computing research department energy contract eng national science foundation nasa information power grid program ibm 
bibliography 
common object request broker architecture specification revision 
object management group document 

grid web services workshop 
https npaci edu workshop agenda html 

jxta 
www jxta org 
draft document progress 
version 
comments foster mcs anl gov carl isi edu jnick ibm com tuecke mcs anl gov physiology grid 
simple object access protocol soap 
note 

uddi universal description discovery integration 
www uddi org 

web services flow language 
www ibm com software solutions webservices pdf wsfl pdf 

black lazowska noe eden system technical review 
ieee transactions software engineering se 



armstrong gannon geist keahey kohn parker common component architecture high performance scientific computing 
proc 
th ieee symp 
high performance distributed computing 

bal steiner tanenbaum programming languages distributed computing systems 
acm computing surveys 



barrett clarke tarr wise framework event software integration 
acm transactions software engineering methodology 



berners lee hendler lassila semantic web 
scientific american 


distributed garbage collection counting 
parle parallel architectures languages europe springer verlag lncs 
gannon stuckey balasubramanian akman diwan govindaraju component architectures distributed scientific problem solving 
ieee computational science engineering 



bray paoli sperberg mcqueen extensible markup language xml 


overview web services inspection language 
www ibm com developerworks webservices library ws 

casanova dongarra netsolve network server solving computational science problems 
international journal supercomputer applications high performance computing 



casanova dongarra johnson miller application specific tools 
foster kesselman eds 
grid blueprint new computing infrastructure morgan kaufmann 

catlett search gigabit applications 
ieee communications magazine april 



catlett metacomputing 
communications acm 



chamberlin xquery xml query language 
working draft 

chin distributed object programming systems 
acm computing surveys 



christensen curbera meredith weerawarana web services description language wsdl 
note www org tr wsdl 

clark design philosophy darpa internet protocols 
sigcomm symposium communications architectures protocols acm press 
czajkowski fitzgerald foster kesselman grid information services distributed resource sharing 
th ieee international symposium high performance distributed computing ieee press 
czajkowski foster karonis kesselman martin smith tuecke resource management architecture metacomputing systems 
th workshop job scheduling strategies parallel processing springer verlag 
draft document progress 
version 
comments foster mcs anl gov carl isi edu jnick ibm com tuecke mcs anl gov physiology grid 
de roure jennings shadbolt research agenda semantic grid science infrastructure 
uk national escience center www org 

fallside xml schema part primer 
recommendation www org tr xmlschema 

foster grid new infrastructure st century science 
physics today 



foster kesselman globus toolkit grid architecture 
foster kesselman eds 
grid blueprint new computing infrastructure morgan kaufmann 

foster kesselman 
eds 
grid blueprint new computing infrastructure 
morgan kaufmann 

foster kesselman lee lindell nahrstedt roy distributed resource management architecture supports advance reservations allocation 
proc 
international workshop quality service 
foster kesselman nick tuecke grid services distributed systems integration 
ieee computer 


foster kesselman tsudik tuecke security architecture computational grids 
acm conference computers security 

foster kesselman tuecke anatomy grid enabling scalable virtual organizations 
international journal high performance computing applications 


www globus org research papers anatomy pdf 

fox uyar gannon community grids 
community grid computing laboratory indiana university 

frey tannenbaum foster livny tuecke condor computation management agent multi institutional grids 
th international symposium high performance distributed computing ieee press 
gannon fox rossi bertrand chiu govindaraju krishnan ramakrishnan ma rey programming grid distributed software components grid web services scientific applications 
grid 
gasser mcdermott architecture practical delegation distributed system 
proc 
ieee symposium research security privacy ieee press 
laszewski philippsen foster multiparadigm communications java grid computing 
communications acm 



graham daniels davis nakamura building web services java making sense xml soap wsdl uddi 
sams 

grimshaw ferrari humphrey wide area computing resource sharing large scale 
ieee computer 



grimshaw ferrari west mentat 
parallel programming mit press 

grimshaw wulf legion vision worldwide virtual computer 
communications acm 



gullapalli czajkowski kesselman fitzgerald grid notification framework 
global grid forum draft gis 
draft document progress 
version 
comments foster mcs anl gov carl isi edu jnick ibm com tuecke mcs anl gov physiology grid 
johnston realtime widely distributed instrumentation systems 
foster kesselman eds 
grid blueprint new computing infrastructure morgan kaufmann 

johnston gannon nitzberg grids production computing environments engineering aspects nasa information power grid 
proc 
th ieee symposium high performance distributed computing ieee press 
web services conceptual architecture 
report 

liskov distributed programming argus 
communications acm 



litzkow livny experience condor distributed batch system 
ieee workshop experimental distributed systems 

livny high throughput resource management 
foster kesselman eds 
grid blueprint new computing infrastructure morgan kaufmann 

mitchell gibbons hamilton kessler khalidi nelson powell overview spring system 
compcon 
mockapetris dunlap development domain name system 
sigcomm acm 
web service invocation sans soap 
www ibm com developerworks library ws html 

mullender 
ed distributed systems 

sato design implementations ninf global computing infrastructure 
generation computing systems 



nick moore chung 
bowen cluster technology parallel 
ibm systems journal 



oaks wong jini nutshell 
reilly 

paton atkinson pearson storey watson database access integration services grid 
manchester university 

raman mccanne model analysis protocol framework soft statebased communication 
computer communication review 


shapiro sos object oriented operating system assessment perspectives 
computing systems 



sharma estrin floyd jacobson scalable timers soft state protocols 
ieee infocom ieee press 
steen doorn tanenbaum jonge objectbased wide area distributed systems 

theimer eds 
international workshop object orientation operating systems 

steiner neuman schiller kerberos authentication system open network systems 
proc 
usenix conference 
stevens woodward defanti catlett way national technology grid 
communications acm 



thomas enterprise java beans technology server component model java platform 
java sun com products ejb white html 

tuecke czajkowski foster frey graham kesselman grid services specification 
www globus org research papers pdf 

tuecke foster thompson pearlman kesselman internet public key infrastructure proxy certificate profile 
ietf draft draft proxy txt 
draft document progress 
version 
comments foster mcs anl gov carl isi edu jnick ibm com tuecke mcs anl gov physiology grid 
govindaraju stern whitaker gannon cat high performance distributed component architecture toolkit grid 
ieee intl symp 
high performance distributed computing 
zhang braden estrin herzog jamin rsvp new resource reservation protocol 
ieee network draft document progress 
version 
comments foster mcs anl gov carl isi edu jnick ibm com tuecke mcs anl gov 
