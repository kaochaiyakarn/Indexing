symbolic generalization probability theory dissertation submitted department computer science committee graduate studies stanford university partial fulfillment requirements degree doctor philosophy adnan darwiche january cfl copyright adnan darwiche ii certify read thesis opinion fully adequate scope quality dissertation degree doctor philosophy 
matthew ginsberg principal adviser certify read thesis opinion fully adequate scope quality dissertation degree doctor philosophy 
yoav shoham certify read thesis opinion fully adequate scope quality dissertation degree doctor philosophy 
ross shachter approved university committee graduate studies iii iv questions motivate ai 
agent state belief represented 
agent change state belief recording observation 
practical way domain experts convey states belief agents 
probability calculus provides answers questions state belief represented probability function language changed probabilistic conditionalization conveyed probabilistic causal network 
despite popularity answers domain experts complained commitment numeric degrees belief 
thesis attempt address complaint suggesting belief calculus committed numbers specific set degrees belief key features probability calculus 
calculus components states belief conditionalization causal networks 
calculus equipped algorithm computing degrees belief corresponds popular algorithm probabilistic literature 
concrete instances proposed belief calculus 
instances known proposition possibility probability calculi 
instances novel objection calculus 
show objection calculus closely related clause management diagnosis systems influential ai study ramifications relation 
vi am grateful advisor matthew ginsberg motivating thesis teaching communicate research critical 
matt 
members thesis committee yoav shoham ross shachter 
principia group stanford 
special harvey don ari onsson scott roy singh 
aaron goldberg alon levy adam grove contributed ways stay stanford 
introduced ai obtaining bachelor science civil engineering 
started journey computer science possible help support nabil amr barbara hayes roth especially raymond levitt 

am deeply indebted brother ahmad friend crucial support difficult times stanford 
parents brothers sisters giving meaning life 
thesis dedicated 
wife shall plainly say 
vii viii contents vii states belief state belief 
coherence normality defining states belief absolute attitudes comparative attitudes concrete states belief propositional probabilistic possibilistic conditionalization observing extracting states belief concrete augmenting databases classical logic bayes conditionalization augmenting databases rpm logic ix conditional unconditional supports concrete support support scaling versus support unscaling patterns plausible reasoning independence belief extraction intuition independence propositions extracting state belief independence properties independence retrieving independence assertions independence belief computation introducing polytree algorithm breaking computation message passing paradigm simulating observations independences singly connected networks manipulating pairs support polytree algorithm belief diagnostic support causal support diagnostic support parent causal support child summary polytree algorithm control flow singly connected networks backward propagation forward propagation computational complexity multiply connected networks implementing polytree algorithm support structures nodes networks operations parents children messages operations bit vectors operations pairs support propagation initiators node computations operating computation functions interface computation functions control flow interface creating network propagating messages concrete support structures experiments objection calculus objections objection summation states belief attitudes ignorance objection scaling states belief objection unscaling sufficient objections xi objection independence strong independence weak independence objection causal networks strong causal networks weak causal networks wob algorithm messages parents messages children computational complexity example justification consequence calculi diagnosis objection calculus clause management systems relation objections labels computational value weak independence logical meaning wob causal networks diagnosis systems relation objections kernel diagnoses diagnosis wob causal networks example second example third example commonly asked questions valued logic fuzzy logic dempster shafer theory valuation systems theories probability xii modal probability comparative probability quantitative probability concluding remarks summary thesis technical limitations current propositional logic notational conventions proofs chapter proofs chapter proofs chapter proofs chapter proofs chapter proofs chapter xiii xiv list tables examples partial support structures examples support orders examples support scaling examples support unscaling experiments experiments ideal objection state belief xv xvi list figures independence nonmonotonic graphical representation causal structure probabilistic causal network causal network diverging linear converging nodes probabilistic causal network singly connected causal network computation breakdown singly connected networks simulating observations singly connected network aggregating subcomputations belief aggregating subcomputations diagnostic support aggregating subcomputations causal support singly connected causal network stages backward propagation messages exchanged backward propagation stages forward propagation messages exchanged forward propagation node types loop computation time causal networks nodes computation time causal networks nodes computation time causal networks nodes computation time causal networks parents node conditional objections objections conditions xvii digital circuit digital circuit wob causal network messages exchanged forward propagation digital circuit wob causal network wob causal network wob causal network meanings linguistic values xviii chapter basic question underlying thesis motivated personal experiences 
chapter introduce experiences question motivated 
knowledge systems laboratory stanford university academic year part effort build intelligent agent real time monitoring control 
agent called guardian goal guard patients intensive care units 
initial task maintain improve component guardian called react 
component responsibilities possess state belief patient icu change state belief information available react patient thought danger 
responsibilities clear number questions needed addressed react state belief represented 
react change state belief recorded new observations 
domain expert convey state belief react 
done student referred probabilistic literature answers 
state belief probability function propositional language 
chapter 

state belief changed probabilistic conditionalization 

state belief conveyed probabilistic causal network 
answers turned number desirable features 
probabilistic state belief admits uncertain propositions celebrated feature real world applications 
classical logic comparison allows true false propositions 
second probabilistic conditionalization commitment changing state belief leads plausible patterns belief change polya pearl 
third probably important constructing consistent probabilistic causal network straightforward 
additional attraction probabilistic causal networks lay foundation number efficient algorithms computing conditional unconditional probabilities 
spite desirable features just mentioned face major challenge probability calculus support functionality react 
specifically occasion domain expert refused give probabilities wanted don numbers common reply 
manage get members project felt uncomfortable probabilities react computed don want base decision numbers statement remember 
isolated experience 
researchers pointed similar difficulties probability calculus numerical approaches difficulty relatively easy elicit tentative propositional rules experts people general considerably harder get commitment particular grades certainty 
worse individual informants frequently vary answers repeated question depending day week emotional state preceding questions extraneous factors 
doyle fair people worked mixed feelings probability calculus 
hand impressed features discussed 
hand commitment numbers high price features 
continue probability calculus support functionality react choice lack satisfactory alternative 
isolated experience understandably expert system designers difficulty justifying numerical judgements face indications psychological pragmatic 
unfortunately stick guns satisfactory alternative apparent 
doyle joined ph program stanford university fall 
spring decided write thesis probabilistic temporal reasoning supervision dr matthew ginsberg 
able convince dr ginsberg uncertain temporal reasoning important ai hard convince probabilistic temporal reasoning way go 
argument simple desirable features probability calculus justify commitment numbers 
tried hard change mind success 
attempt convince dr ginsberg puzzled questions numbers intrinsic features probability calculus proof 
symbolic belief calculus desirable features probability calculus 
having answers questions determination convince dr ginsberg adopt probability calculus gradually replaced occupation question possible relax commitment numbers retaining desirable features probability calculus 
answer question ramifications thesis 
shall demonstrate possible relax commitment numbers losing key features responsible success probability calculus 
chapter 
demonstration constructive 
shall chapters belief calculus committed numbers key features probability calculus 
calculus sense committed numeric symbolic degrees belief 
comprehensive major components states belief conditionalization causal networks 
components subsume probabilistic counterparts discussed chapters 
similar probabilistic counterparts causal networks lay foundation algorithms compute conditional unconditional degrees belief 
chapter presents algorithm chapter presents common lisp implementation 
demonstrating numbers strictly needed calculus unifies number concrete calculi exist uncertainty literature 
role shall evident instances calculus chapters 
calculi employ numeric degrees belief 
observation motivated creation objection calculus employs symbolic degrees belief 
objection calculus discussed chapter 
symbolic objection calculus enhances unifying role calculus 
probably important objection calculus closely related clause management diagnosis systems influential ai 
relation ramifications studied chapter 
results thesis sparked number important questions 
try answer questions chapter 
conclude thesis chapter summary results review technical limitations discussion 
chapter states belief chapter formalize notion states belief show ai representations viewed instances states belief 
state belief probability calculus state belief usually defined mapping language interval 
representation restrictive commitment numbers degrees belief 
adopt general representation state belief committed numeric degrees belief assumption state belief mapping propositional language set quantities principle requiring propositional language necessary 
relaxing requirement leads states belief outside scope thesis 
quantities called degrees support 
strictly numeric strictly symbolic 
degrees support integers rationals logical sentences 
degree support primitive concept derives meaning operations relations defined degrees support 
chapter 
states belief degrees support positive negative 
positive degrees support quantify support sentence negative degrees support quantify support sentence 
positive negative degrees support dual positive support sentence negative support negation vice versa 
shall consider concrete states belief positive degrees support 
shall consider concrete states belief negative degrees support 
difference degrees support degrees belief 
introduce degrees belief shall see degree belief sentence determined degree support sentence degree support negation sentence 
assume degrees support useful sense 
definition degree support useful precisely attributed sentence state belief 
notation denote degrees support 
coherence normality coherence normality notion state belief embodied assumption fails capture intuitions coherent states belief 
example degrees support consider state belief ffl attributes possible sentence ffl attributes impossible sentence ffl attributes impossible sentence intuition says state belief incoherent expect support possible case 
exclude incoherent states belief need impose constraints notion state belief 
constraints identified 
axiom support equals support logically equivalent 
axiom support determined support support logically disjoint 
axiom entails entails support support theorem axiom implies axiom 
common compare degree sentence supported different states belief 
comparison meaningful different states belief support scale 
constraints unify support scales different state belief 
axiom unsatisfiable sentences support states belief 
axiom valid sentences support states belief different support unsatisfiable sentences 
formal statement axioms appendix chapter 
states belief defining states belief axioms lead number formal properties 
lead existence algebraic structure definition definition partial support structure pair hs phi 
set containing elements 

phi partial function theta satisfies properties phi phi 
phi phi phi phi 
phi phi phi 
unique element satisfies property phi 
unique element satisfies property exists phi 
function phi called support summation called zero support called full support 
table lists partial support structures 
axioms lead properties states belief embodied definition phi proposition max probability gamma possibility max impossibility min table examples partial support structures 

defining states belief definition hs phi partial support structure propositional language 
state belief phi respect hs phi il mapping satisfies properties 
phi phi 
phi phi phi phi 

phi false 
phi true 
definition partial support structure definition state belief consequences theorems 
theorems refer notion meaningful sum introduce 
shall introduce notion state theorems 
definition partial support structure specify domain support summation definition says support summation partial function 
domain support summation specified definition partial support structure consequence axioms entail definition support summation 
raises question support summation defined 
partial support structure modeling states belief suggested definition phi defined precisely phi meaningful sum 
state meaningful sum justify previous statement 
definition sum defined follows ffl phi sum ffl phi sum sums definition sum meaningful precisely exists intuitive state belief attributes supports appearing sum logically disjoint sentences intuitive states belief states belief definition attempts formalize 
chapter 
states belief example suppose partial support structure degrees support frequencies 
meaningful sum state belief attributes logically disjoint sentences 
meaningful sum state belief attributes logically disjoint sentences 
depending domain support summation mappings may may qualify states belief 
phi meaningful defined intuitive states belief may captured definition 
phi defined meaningful definition may admit mappings correspond intuitive states belief 
phi defined precisely phi meaningful sum 
existence partial support structure properties states belief definition consequences theorems theorem assume axiom 
axiom holds properties hold meaningful sums 
theorem proves support summation commutative associative 
theorem assume axioms 
axiom holds precisely property holds meaningful sums 
theorems prove existence zero full supports respectively 
theorem axiom implies property axioms 
theorem axiom implies property axioms 

absolute attitudes absolute attitudes states belief hold absolute comparative attitudes sentences 
discuss absolute attitudes section comparative attitudes section 
types absolute attitudes sentences 
type form support degree second type form believe degree 
definition degree state belief phi supports sentence phi 
support sentence determine support negation general 
example degrees support possible support support possible impossible 
definition degree state belief phi believes sentence written phi phi phi hand belief sentence determine belief negation 
degrees belief closer truth values valued logics rosser rescher ginsberg degrees support 
example degrees support 
represents truth value true 

represents truth value false 

represents truth value unknown 
general state belief extreme belief attitudes correspond truth falsity 
attitudes acceptance rejection 
definition state belief phi accepts sentence precisely phi 
definition state belief phi rejects sentence precisely phi 
chapter 
states belief correspondence acceptance truth rejection falsity evident discuss process observing chapter 
shall see acceptance rejection attitudes result recording observations 
sentence rejected precisely supported degree 
sentence accepted supported degree 
sentence supported degree necessarily accepted 
example degrees support sentence negation possible 
sentence negation supported degree possible accepted 

comparative attitudes comparative attitudes states belief hold types comparative attitudes sentences 
type form support support second type form believe believe 
comparative attitudes ordering degrees support belief 
degrees support ordered support summation 
intuition sum supports great summands 
definition support greater written phi precisely support phi relation phi called support order 
table lists support orders 
theorem shows support order partial order minimal maximal elements theorem relation phi partial support order minimal maximal 
degrees belief ordered 
definition degree belief hs greater degree belief hs written hs phi hs precisely phi phi 
relation phi called belief order 
belief order partial support order minimal maximal elements hs phi phi proposition hf maxi probability gamma possibility maxi impossibility hf 
mini table examples support orders 
chapter 
states belief theorem relation phi partial order minimal maximal 
ordered degrees support belief define comparative attitudes held states belief 
definition sentence supported state belief phi written phi precisely phi phi phi 
definition sentence believed state belief phi written phi precisely phi phi phi 
sentences equally believed equally supported 
converse true 
example degrees support possible impossible state belief phi may phi bird impossible phi bird phi fly phi fly possible 
bird fly equally supported phi bird believed fly 
rejected sentences minimally supported accepted sentences maximally supported 
minimally supported sentences rejected maximally supported sentences necessarily accepted 
sentence negation may maximally supported time may accepted 
rejected sentences minimally believed accepted sentences maximally believed 
converse true shown theorem theorem relation phi satisfies properties 
phi partial order 

phi 
false phi phi true 

rejected precisely minimal phi 
accepted precisely maximal phi 
concrete states belief concrete states belief section number concrete partial support structures induce states belief propositional logic probability calculus nonmonotonic logic preferential models kraus 
chapter partial support structure symbolic degrees support 
propositional simplest partial support structure 
theorem pair hf maxi partial support structure 
state belief respect structure called propositional state belief 
propositional state belief phi places sentence classes 
rejected phi 
accepted phi 
undetermined phi phi 
classification propositional logic database sentence entailed database true negation entailed database false entailed database unknown 
show formally propositional state belief corresponds consistent database propositional logic 
definition propositional state belief phi corresponds database delta propositional logic precisely phi accepts precisely delta entails correspondence propositional states belief consistent databases propositional logic stated theorem theorem consistent database delta propositional logic propositional state belief corresponds delta represented database propositional logic represented propositional state belief 
chapter 
states belief probabilistic theorem shows probabilistic states belief instances states belief defined chapter 
theorem pair partial support structure support order 
state belief may attribute opposed probabilities sentences 
theorem shows states instances states belief 
theorem pair gamma partial support structure support order 
possibilistic state belief may attribute degrees possibility sentences 
choice degrees possibility theorems identify choices 
theorem pair maxi partial support structure support order 
theorem pair hf 
maxi partial support structure support order 
state belief may attribute degrees impossibility sentences 
choice degrees possibility theorems identify choices 
theorem pair mini partial support structure support order 
theorem pair hf 
mini partial support structure support order 

concrete states belief state belief respect structure hf 
mini variant spohn natural conditional function spohn spohn major difference existence spohn allow 
refer states belief respect structure states belief 
states place sentence classes 
rejected phi 
accepted phi 
rejected default phi 
phi default strength 

accepted default phi 
phi default strength 

undetermined phi phi 
classification refined propositional states belief 
value evident discuss belief change chapter sentences may change classes new observations recorded 
notion acceptance default central nonmonotonic reasoning 
show state belief corresponds database nonmonotonic logic ranked preferential models rpm kraus 
nonmonotonic logic am referring classical propositional logic 
language truth assignments usual meaning function maps sentence truth assignments satisfy 
additional construct rpm logic partitioning truth assignments ordered set classes 
intuition truth assignments wi preferred wj preference truth assignments define notions preferred meaning preferred entailment shown subsume classical counterparts 
definition preferred meaning database delta rpm logic written delta set preferred truth assignments delta classical meaning 
chapter 
states belief definition database delta rpm logic preferentially entails sentence written delta precisely preferred meaning delta included classical meaning entailment nonmonotonic shall see chapter possible preferentially entailed delta delta am ready state correspondence result 
definition state belief phi corresponds database delta rpm logic precisely holds sentences phi accepts accepts default precisely delta preferentially entails theorem consistent database delta rpm logic state belief corresponds delta theorem represented database rpm logic represented state belief 
reader referred study relations states belief databases rpm logic hunter 
chapter conditionalization know state belief may ask state belief change result recording observation 
chapter address question observation non rejected sentence 
leads notion conditionalization generalizes probabilistic conditionalization enjoys desirable properties 
observing treatment chapter assumption assumption state belief observes non rejected sentence changes state belief 
say new state belief result initial state belief observation 
basic goal chapter formalize conditionalization process 
definition phi state belief respect hs phi il 
sentence rejected phi conditionalization phi written phi state belief respect hs phi il accepts definition conditionalization state belief observation state belief resulting accepting observation 
chapter 
conditionalization state belief observation usually state belief 
states belief result plausible changes initial state belief 
exclude implausible changes state belief need impose constrains states belief 
constraints identified states belief formalized definition states belief formalized definition 
axiom support observing determined initial support initial support axiom observing non rejected sentence retains accepted sentences 
axiom observing accepted sentence leads change state belief 
axiom equally supported states belief observation state introduce equality order respective supports axiom support sentence increases change observing logical consequences 
axiom support observing equals support observing support observing equals support observing formal statement axioms appendix accepting axioms committed existence function degrees support denoted ff number properties definition state belief terms function 
properties ff interact partial support structure hs phi respect state belief defined 
resulting triple hs phi ffi called support structure defined 

observing phi ff proposition max min probability gamma gamma gamma possibility max impossibility min gamma table examples support scaling 
definition support structure triple hs phi ffi 
hs phi partial support structure 

ff partial function theta ff defined phi 
function ff satisfies properties ff 
ff 
ff ff phi 
ff ff ff ff phi phi 
functions ff phi satisfy properties ff phi phi 
phi phi ff phi ff defined 
phi ff ff phi ff phi phi 
ff phi ff phi phi 
function ff called support scaling table provides examples 
iterate existence support scaling properties definition consequences axioms 
particular existence support scaling consequence axiom suggested theorem 
chapter 
conditionalization theorem axiom holds precisely phi phi ff phi phi function ff 
relation properties support scaling axioms belief change sequence theorems 
theorem axiom equivalent property axiom 
theorem axiom equivalent property axioms 
theorem axiom equivalent properties axioms 
theorem axiom equivalent property axioms 
theorem axiom usefully equivalent property axioms 
theorem assumption axiom axiom imply properties 
theorem accepting axiom commit definition conditionalization 
definition phi state belief respect hs phi il sentence rejected phi conditionalization phi respect hs phi defined follows phi phi ff phi support scaling satisfies number properties useful proving statements describe state belief changes 
theorem lists properties 
observing theorem hs phi ffi support structure ff 
ff ff phi 
ff ff phi 
phi ff phi ff phi phi 
ff ff ff ff phi phi 
ff ff ff ff phi phi 
example property prove result conditionalization theorem rejected state belief phi phi phi says order observations recorded important 
chapter 
conditionalization extracting states belief chapter devoted problem extracting state belief domain expert shall see constraint satisfaction problem 
particular domain expert gives constraints state belief try recover state belief 
process usually raises questions 
state belief satisfying constraints 
constraints consistent 

state belief satisfying constraints 
constraints complete 
difficulty questions depends greatly support structure respect states belief defined 
classes support structures questions easier answer 
definition support structure hs phi ffi bijective precisely phi ff extracting state belief domain expert common ask support support observed 
expert state belief respect bijective support structure answers consistent class support structures facilitates extraction state belief 
definition support structure hs phi ffi distributive precisely ff phi ff defined phi phi phi 
value support structures evident theorem 
axiom state belief sentence conclude support observed 
theorem axiom equivalent properties 
am assuming logically disjoint 

concrete concrete section provide concrete support scalings give rise conditionalization rules augment databases classical logic probabilistic states belief augment databases rpm logic 
augmenting databases classical logic mentioned chapter simplest partial support structure hf maxi 
look support scaling function structure 
property says ff property says ff 
consider definition ff phi scaling function previous properties 
theorem hf max mini bijective distributive support structure 
instantiating equation definition respect previous structure gives phi min phi phi non rejected sentences follows phi 
simplify equation phi phi propositional state belief closely related augmenting database propositional logic 
particular propositional state belief viewed database propositional logic propositional state belief sentence amounts augmenting corresponding database sentence 
stated theorem theorem delta consistent database propositional logic phi corresponding propositional state belief 
delta consistent corresponding propositional state belief phi chapter 
conditionalization bayes conditionalization theorem provides support scaling function probabilistic states belief 
theorem bijective distributive support structure 
instantiating equation respect structure gives bayes conditionalization phi phi phi theorem provides support scaling function states belief 
theorem gamma gamma gamma bijective distributive support structure 
instantiating equation respect structure gives phi phi gamma phi gamma phi augmenting databases rpm logic theorem provides support scaling function states belief 
theorem hf 
min gamma bijective distributive support structure 
instantiating equation respect previous structure gives phi phi gamma phi state belief viewed database rpm logic state belief sentence amounts augmenting corresponding database sentence 
stated theorem theorem delta consistent database rpm logic phi corresponding state belief 
database delta consistent corresponding state belief phi 
concrete theorem important reason preferential entailment nonmonotonic sense sentence may preferentially entailed database delta may preferentially entailed augmentation delta say delta property causes implementation problem ai applications 
particular suppose modeled state belief agent database delta sentence preferentially entailed delta considered default belief agent 
default beliefs retracted new sentences added agent database may cease preferentially entailed augmented database 
note detecting default beliefs need retracted proven real problem implementational viewpoint 
light definition theorem important step implementing detection 
specifically phi state belief corresponding database delta sentence preferentially entailed augmented database delta phi 
chapter concerned computation conditional supports states belief definition theorem provides complete implementation detecting beliefs need retracted 
theorem provides support scaling function possibilistic states belief 
theorem max distributive bijective support structure 
instantiating equation respect structure gives conditionalization rule phi phi phi technical reason preferential entailment defined terms preferred meaning necessarily get smaller database gets bigger 
chapter 
conditionalization conditional unconditional supports theory states belief useful building artificial agents specification state belief intuitive domain expert naturally map state belief artificial agent 
section discusses function degrees support helps achieving goal 
basic observation human reasoning claimed bayesian philosophers intuitive people specify support sentence grass wet conditioned accepting relevant sentence specify unconditional support natural domain experts specify states belief providing conditional supports 
approach taken probabilistic representations domain expert provides statements form ajb reads accept probabilistic support 
note conditional supports useful tell unconditional supports 
example conditional probabilities easily mapped unconditional probabilities ajb 
important ask previous equality instance general holds states belief 
question answered positively theorem states support structure function degrees support plays role played numeric multiplication probability calculus theorem hs phi ffi support structure 
partial function theta ff phi theorem says support scaling inverse subset domain 
subset consists pairs phi 
existence inverse restricted subset 
answer lies property says indirectly support scaling inverse ff ff 
conditional unconditional supports omega proposition min probability theta gamma ab possibility theta impossibility 
table examples support unscaling 
note property conditional phi 
prove existence inverse condition met 
fact definition support structure requires support scaling defined condition met 
expected context conditionalization led support scaling meaningful scale support respect support phi 
definition support unscaling partial function omega theta omega def precisely ff phi table lists examples support unscaling 
support unscaling mapping conditional supports unconditional supports 
corollary state belief phi reject phi phi omega phi looked classes support structures facilitate extraction states belief 
classes suggests additional property support scaling satisfy 
relation support scaling unscaling classes support structures characterized properties support unscaling needs satisfy 
theorems identify properties theorem hs phi ffi bijective support structure omega support unscaling function 
omega defined precisely 
chapter 
conditionalization theorem says support structure bijective statements consistent 
support 
support particular state belief phi phi omega phi satisfies statements 
general statements consistent omega defined 
domain support unscaling crucial process belief extraction 
shall see example chapter 
theorem hs phi ffi distributive support structure omega support unscaling function 
omega phi omega phi phi omega omega defined 

conditional unconditional supports theorem properties hold support scaling unscaling ff omega 
omega ff 
omega 
omega 
omega phi 
phi omega omega phi omega omega phi omega phi 
phi omega phi omega 
omega omega 
omega defined precisely omega defined 
ff ff ff omega ff ff phi omega 
property support scaling proof results 
omega omega omega omega 
omega omega defined precisely omega omega defined 
omega precisely 
omega ff omega ff 
omega ff omega ff omega phi omega 
concrete support section consider number support unscaling functions 
stress unscaling functions general total functions 
show technical reason provide intuition 
chapter 
conditionalization definition omega defined function ffb bijective places support unscaling omega defined 
recall function ffb bijective precisely support support phi ff recall formalization section require function ffb bijective intuitively helpful think support unscaling context equation definition viewed defining inference rule information state belief phi phi information conditionalization phi phi infer information state belief phi phi omega 
turns pieces information consistent 
possible true state belief true 
precisely places support unscaling defined 
words cases support unscaling undefined correspond illegitimate scenarios belief change 
theorem provides class partial support structures known induce states belief non trivial illegitimate scenarios belief change 
theorem set supports finite elements supports omega defined 
remainder section provide support unscaling functions support structures introduced earlier 
theorem support unscaling hf max mini max 
theorem support unscaling theta theorem support unscaling gamma gamma gamma gamma ab 
axiom requires function ffb injection 

conditional unconditional supports theorem support unscaling hf 
min gamma 
theorem support unscaling max theta support scaling versus support unscaling way belief change indicate support scaling primitive concept support unscaling just convenient side effect concept 
fact existence support unscaling consequence axiom discussed section 
accepted axiom support unscaling function general 
legitimate account belief change agrees partially intuition 
surprisingly customary literature take variant support unscaling primitive concept formalizing belief change choose support scaling 
example probabilistic logic aleliunas aleliunas suggests primitive operator called product closely related support unscaling 
valuation systems shenoy shenoy shafer shenoy shafer suggest primitive operator called combination related support unscaling 
choice support scaling unscaling primitive formalizing belief change choice ways asking questions 
initial state belief observation say state belief results accepting observation 

new state belief observation led say initial state belief 
choice support scaling unscaling choice predicting belief changes explaining 
find intuitive tool formalizing belief change 
believe natural people predict beliefs change obtain information explain beliefs changed particular way 
chapter 
conditionalization patterns plausible reasoning ultimate objective ai notably nonmonotonic logics capture patterns plausible reasoning terms 
george polya mathematicians attempt formal characterization qualitative human reasoning 
polya identified main patterns plausible reasoning demonstrated formalized probability theory polya chapter xv 
pearl highlighted patterns book pearl took patterns nonmonotonicity abduction explaining away law hypothetical middle pearl page evidence probability theory formalizing plausible reasoning 
words take granted probability calculus unique way handles context dependent information competing calculus exists closely covers aspects plausible reasoning pearl page 
show section polya patterns plausible reasoning hold respect states belief 
need formally define certain terms polya stating patterns ffl verify prove proposition accept 
ffl explode proposition reject 
ffl credibility confidence proposition degree support 
polya patterns plausible reasoning follow 
patterns form holds state belief holds 
statement pattern followed theorem proves pattern respect states belief 

patterns plausible reasoning polya pattern pattern examining consequence verification consequence renders conjecture credible 
polya page theorem oe accepted rejected state belief phi phi phi phi phi phi 
polya second pattern pattern examining possible ground confidence conjecture diminish possible ground conjecture exploded 
polya page theorem oe accepted rejected state belief phi phi phi phi phi phi 
polya third pattern pattern examining conflicting conjecture confidence conjecture increase incompatible rival conjecture exploded 
polya page theorem rejected rejected state belief phi phi phi phi phi phi 
polya fourth pattern pattern examining consequences succession verification new consequence enhances confidence conjecture new consequence implied verified consequences polya page 
condition new consequence implied verified consequences means conditional probability new consequence verified consequences polya 
respect states belief condition new consequence maximally supported verified consequences 
theorem oe 
oe cn accepted 
cn rejected state belief phi phi cn gamma oe phi phi cn phi cn gamma cn 
chapter 
conditionalization chapter independence belief extraction specify state belief primitive propositions needs specify degrees support 
unrealistic counterintuitive specifying state belief propositions require degrees support 
chapter solution problem direct generalization similar solution specifying probabilistic states belief 
intuition chapter key observation probabilistic literature pearl 
observation assertions form observing change belief reduces exponential number supports required specify state belief 
particular expert says observing change belief statement viewed constraint expert state belief phi phi phi phi phi constraints form lower number supports required specify state belief 
possible reduce exponential number required supports linear number 
chapter 
independence belief extraction example expert tell proposition observing propositions 
gamma change belief information expert belief proposition specifies state belief completely 
see note state belief propositions 
determined support sentence form 
means negation sign may may appear 
support sentences form computed follows phi 
phi gamma omega phi gamma gamma omega 
omega phi phi omega phi gamma omega 
omega phi observation number supports required specify state belief propositions reduced exponential reduction 
observing change belief say independent observation rephrased follows independence assertions reduce exponential number supports required specify state belief 
observation powerful extracting states belief sets basis claim result discussed section 
claim concerns inducing independence assertions causal structure underlying domain interest 
result concerns number degrees support required complete specification state belief partially specified causal structure 
section explores notion independence detail paves way section 

independence propositions independence propositions section talked independence sentence 
meaningful useful notion shall see independence set propositions 
intuition set propositions independent set observing state propositions change support state propositions notion state defined formally follows 
definition state primitive proposition written state set primitive propositions written example states proposition states propositions fd 
definition state belief phi finds independent written phi precisely phi phi rejected phi independence nonmonotonic 
possible state belief find set propositions independent find dependent recording observation 
possible dependent propositions independent observations recorded 
examples 

dependent initially independent observed 
outputs gates dependent independent input observed 
example conditional independence 

independent initially dependent observed 
inputs xor gate independent dependent output observed 
example conditional dependence 
chapter 
independence belief extraction xor left dependent initially independent observed 
right independent initially dependent observed 
general set propositions conditionally independent set third set propositions unconditionally independent state propositions observed 
conditional independence defined terms unconditional independence 
definition state belief phi finds independent written phi precisely phi rejected phi customary define conditional independence appealing unconditional independence 
find definition intuitive provide result sake completeness 
corollary state belief phi finds independent precisely phi phi rejected phi 
extracting state belief extracting state belief observation powerful extracting states belief claim independence assertions induced causal structure underlying domain interest 
define notion causal structure state claim 
definition causal structure primitive propositions binary relation dc theta dc reads directly causes say causes effect precisely 
directly causes 
causes directly causes causal structure proposition cause 
common represent causal structure directed acyclic graph 
example causal structure rain directly causes slippery road rain directly causes wet grass sprinkler directly causes wet grass depicted graphically 
simply create node primitive proposition add arc node node precisely directly causes definition causal structure resulting directed graph guaranteed acyclic 
key claim underlies way independence assertions induced practical applications 
claim expert identifies causal structure finds proposition independent non effects direct causes 
chapter 
independence belief extraction slippery road sprinkler wet grass rain graphical representation causal structure 
intuition information non effects proposition relevant proposition conveys information direct causes 
information useless state direct causes known 
example information slippery road relevant wet grass conveys information rain 
state rain known information slippery road longer relevant wet grass 
practical applications common ask domain expert identify causal structure claim induce constraints state belief held expert 
soundness practice hinges correctness claim relative formal definition causation 
due lack universally accepted definition causation position provide satisfactory proof claim 
role played claim practical applications minor 
discussion section claim expert identifies causal structure fact supplying constraints state belief 
seen section constraints reduce exponential number supports required specify state belief 
section focuses supports needed complete specification state belief 
completes specification state belief quantifying causal structure 
quantification process expert assesses support 
extracting state belief primitive proposition particular state direct causes 
example node slippery road quantified providing conditional supports 
conditional support slippery road rain 

conditional support slippery road rain 

conditional support slippery road rain 

conditional support slippery road rain 
supports constitute quantification node slippery road 
quantification node wet grass consists conditional supports possible states direct causes wet grass 
quantified causal structure called causal network usually depicted graphically components ffl direct acyclic graph specifies causal structure 
ffl set tables contain node quantifications 
node table associated 
table columns corresponding states node 
row state node direct causes 
entry table support state node conditioned particular state direct causes 
entries row sum full support 
depicts causal network respect support structure depicts causal network respect support structure hf 
min gamma causal networks figures share causal structure differ way quantified 
shall look methods quantification chapters 
formal definition causal network 
chapter 
independence belief extraction rain rain dry wet rain rain rain rain causal network rain rain sprinkler wet road probabilistic causal network 
top left entry bottom left table reads probability rain slippery road 
notation pi denotes parents node denotes propositional language constructed primitive propositions definition causal network respect support structure hs phi ffi triple hn csi ffl set primitive propositions 
ffl directed acyclic graph ffl cs partial function theta csi pi defined csi pi phi csi pi node cs called conditional support function 

extracting state belief rain rain rain rain rain rain rain causal network infinity rain sprinkler wet road causal network 
top left entry bottom left table reads impossibility rain slippery road 
causal network consists sets constraints state belief 
set independence assertions second conditional supports 
goal constructing causal network specify state belief important know state belief satisfies constraints imposed causal network 
notation denotes non descendents node definition state belief phi propositions satisfies causal network hn csi precisely phi pi pi phi pi csi pi node view causal network set constraints definition causal network guarantee consistency constraints 
find state belief satisfies independences asserted causal structure possible find state belief satisfies conditional supports quantifying causal structure 
causal networks respect chapter 
independence belief extraction distributive bijective support structure consistent 
theorem causal network induced respect distributive bijective support structure satisfied exactly state belief 
probabilistic causal networks induced respect distributive bijective support structures 

independence independence summarize done far 
started problem having provide degrees support order specify state belief 
observed number supports reduced utilizes independence assertions 
followed observation claim independence assertions induced causal structure domain interest 
concluded appealing causal structures reduce number degrees support required specify state belief 
addition representational role independence assertions play major computational role shall see chapter 
utilize independence assertions computationally need know properties 
properties discussed section 
need retrieve independences asserted causal network having reconstruct state belief satisfying network 
retrieval method examines topology causal network discussed section 
properties independence section discuss properties independence 
known axioms pearl hold respect support structure 
fifth property shown hold respect restricted class support structures 
independence symmetry independent independent theorem phi precisely phi 
examining proof theorem see symmetry independence hinges property support scaling 
independence decomposition independent independent subset chapter 
independence belief extraction theorem phi phi 
see property holds recall independent independent observing sentence change support sentence means observing sentence change support sentence follows phi phi independence weak union independent independent theorem phi phi 
independent decomposition symmetry tell independent context properties weak union says independent remains independent independent see weak union holds suppose observing dependent observing observing changes support observing changes support contradiction independent proof weak union assumes consecutive observations effect state belief simultaneous observations 
assumption satisfied definition states phi phi equivalent defined 
result stated theorem 
independence contraction independent independent independent theorem phi phi phi 
contraction holds simultaneous observations effect state belief consecutive observations 
observing followed observing 
independence leads state belief observing premise theorem says observing change support observing consequently 
follows observing change support consequence theorem 
decomposition weak union contraction say phi phi precisely phi independent precisely independent independent independence intersection independent independent independent theorem state belief phi respect distributive support structure false sentence rejected phi phi phi phi 
retrieving independence assertions topological test directed acyclic graphs called separation tells sets nodes separated third set pearl 
separation test viewed relation theta theta holds precisely separates directed acyclic graph importance separation stems result verma theorem phi state belief satisfying causal network hn cs separates graph state belief phi finds independent phi 
separation allows infer independences state belief examining topology corresponding causal network 
independences useful deriving algorithm computing degrees support chapter 
definition required state separation chapter 
independence belief extraction linear types intermediate nodes path 
type node determined relation neighbors 
node diverging neighbors children 
node linear neighbor parent child 
node converging neighbors parents 
definition directed acyclic graph disjoint sets nodes path active precisely nodes satisfy conditions 
converging node belongs descendent 
diverging linear node outside see definition converging diverging linear nodes 
definition pearl directed acyclic graph nodes separate written precisely active path conclude chapter observation applying test separation causal network sound complete terms retrieving independences corresponding state belief 
independences state belief discovered applying separation corresponding 
independence wet grass wet grass rain rain wet shoes wet shoes wet wet grass rain rain rain wet grass wet shoes probabilistic causal network 
causal network 
causal network example 
separation tells wet grass separated wet shoes means wet grass dependent wet shoes 
state belief specified causal network finds wet shoes independent wet grass 
chapter 
independence belief extraction chapter independence belief computation chapter algorithm computing belief node causal network 
algorithm direct generalization polytree algorithm known probabilistic literature 
consider causal network suppose want compute belief node observation 
instance computational problem address chapter 
probabilistic literature provides number algorithms performing computation respect probabilistic causal networks 
example causal network singly connected belief node computed popular polytree algorithm pearl peot shachter probabilistic literature provides number methods extending polytree algorithm multiply connected networks 
chapter show direct generalization probabilistic polytree network singly connected nodes connected undirected path 
causal network singly connected 
chapter 
independence belief computation singly connected causal network 
undirected path nodes 
algorithm compute beliefs causal networks 
show method conditioning known probabilistic literature extend polytree algorithm multiply connected causal networks 
polytree algorithm introduced section section 
control flow algorithm discussed section computational complexity discussed section 
method conditioning discussed section 
chapter common lisp implementation polytree algorithm 

introducing polytree algorithm introducing polytree algorithm probabilistic polytree algorithm computes pair probabilities hpr ffi pr ffi node causal network 
pr probabilistic state belief satisfying causal network ffi observed state nodes network pearl 
modification algorithm suggested peot shachter computes different pair probabilities hpr ffi pr ffi node network peot shachter 
pair probabilities obtained easily second pair equalities pr ffi pr ffi pr ffi pr ffi pr ffi pr ffi algorithms compute conditional probability node observation modified polytree algorithm preferred probability observation desired 
shall generalize modified polytree algorithm 
breaking computation input polytree algorithm ffl hn csi causal network ffl ffi state nodes output algorithm pair supports node ffl phi ffi phi ffi denoted bli chapter 
independence belief computation phi state belief satisfying causal network hn csi 
node parents children polytree algorithm breaks computation pair bli computations involving subnetworks 
subnetworks consists nodes connected node incoming arc subnetworks consists nodes connected node outgoing arc causal network singly connected subnetworks guaranteed disjoint 
example computation bl broken computations involving subnetworks 
show elements breakdown computation stages 
stage stage computation pair bli broken computations ffl phi ffii phi ffii denoted ssi 
ffl phi ffii phi ffii denoted ffii observation non descendents node ffii 
observation descendents node node observed observation ffi equivalent conjunction observations ffii ffii 
example computation bl broken computations ffl phi ffi phi ffi denoted ss 
ffl phi ffi phi ffi denoted 
ffi ffi 

second stage second stage computation pair ssi broken number computations associated parent node ffl phi ffii phi ffii denoted ssj 
introducing polytree algorithm computation breakdown belief node observation chapter 
independence belief computation ffii observation nodes connected node incoming arc example computation ss broken computations ffl phi ffi phi ffi denoted ss 
ffl phi ffi phi ffi denoted ss 
ffl phi ffi phi ffi denoted ss 
ffi ffi true ffi 
third stage third stage computation pair broken number computations associated child node ffl phi ffii phi ffii denoted ffii observation nodes connected node outgoing arc example computation broken computations ffl phi ffi phi ffi denoted 
ffl phi ffi phi ffi denoted 
ffi ffi 
justifying breakdown justification computational breakdowns 
assumption leaf nodes having single parents observed causal network 
shall see section assumption compromise generality polytree algorithm observation node causal network simulated observation auxiliary leaf node having parent 

introducing polytree algorithm 
independences asserted causal network 
independences discussed section 
message passing paradigm node causal network stores conditional belief state parents hcs pi csi pi polytree algorithm viewed process involving steps 
node computes pair ssj sends message child 
node computes pair sends message parent 
node combines messages ssj receives parents yield pair ssi 

node combines messages receives children yield pair 
node combines pairs ssi yield pair bli 
view polytree algorithm specified answering questions 
node compute message send parent 

node compute message send child 

node combine messages receives parents 

node combine messages receives children 

node combine pairs ssi yield pair bli 

node send message parent 

node send message child 
questions answered section questions answered section 
move sections elaborate basic justifications polytree algorithm sections 
chapter 
independence belief computation simulating observations polytree algorithm assumes observations available leaf nodes having single parents 
assumption simplifies algorithm affect generality 
explain section 
state belief phi propositions simulate observation proposition belongs observation additional proposition belong particular create new state belief psi propositions fkg ffl psi fig phi fig 
ffl psi fig phi fig 
ffl psi fig 
ffl psi fig 
new state belief important properties 
agrees old state belief sentence form second accepts sentence third finds proposition independent propositions fig proposition accepting rejecting proposition new state belief effect accepting rejecting proposition extend causal network represents state belief phi causal network represents new state belief psi doing 
creating new node 
making node child node 
quantifying causal connection node node follows csi csi cs cs 
introducing polytree algorithm newly created node property leaf node single parent simulate observation node causal network observation newly created leaf node single parent 
example observation causal network simulated observation node created 
similarly nodes added simulate observations nodes respectively 
polytree algorithm refers classes nodes root nodes parents 
normal nodes parent child 
observed leaf nodes children observed 
non observed leaf nodes children observed 
repeat observed leaf nodes added causal network order simulate observations nodes 
observed nodes leaf nodes having single parents root normal leaf nodes having multiple parents observed 
node root node normal nodes observed leafs node non observed leaf 
independences singly connected networks polytree algorithm independences asserted singly connected network 
recall network singly connected undirected path nodes network example 
state independence assertions deriving polytree algorithm 
theorem non descendents node descendents node set nodes disjoint includes independent chapter 
independence belief computation singly connected network observation nodes added network simulate observations nodes respectively 

introducing polytree algorithm nodes independent nodes node 
shall see section theorem basis breaking computation pair bli computation pairs ssi theorem sets nodes connected node disjoint outgoing arcs 
independent nodes independent nodes node 
shall see section theorem basis breaking computation pair computation pairs theorem parents node set nodes disjoint connected node nodes independent nodes independent node nodes 
theorem sets nodes connected node disjoint incoming arcs 
independent nodes independent nodes 
shall see section theorems basis breaking computation pair ssi computation pairs ssj independence assertions discussed section uses go mentioned 
particular assertions show message sent node neighbor computed form messages received node neighbors 
discussed detail section 
section discuss notational conventions useful section 
chapter 
independence belief computation manipulating pairs support polytree algorithm maintains number support pairs node component pair related proposition called component pair 
second component related negation proposition called component pair 
components accessed follows ha bi def ha bi def operations defined pairs ha bi omega hc di def ha omega omega di ha bi ff hc di def ha ff ff di omega ha bi def hc omega omega bi ha bi ff def ha ff ff ci 
polytree algorithm polytree algorithm polytree algorithm section showing compute combine messages exchanged nodes causal network 
give concrete examples message computation combination respect computing belief node appears observation ffi belief pair bli called belief node theorem shows compute pair 
theorem non observed node singly connected causal network 
bli def phi ffi phi ffi ssi def phi ffii phi ffii def phi ffii phi ffii bli ssi omega theorem belief node phi ffi phi ffi ss phi ffi phi ffi ffi ffi 
computing belief node viewed aggregate computations 
computation pair ss depends nodes connected node incoming arcs 
second computation pair depends nodes connected node outgoing arcs 
sets nodes shown 
sections show compute pairs ss completes computation belief node 
chapter 
independence belief computation computing belief node viewed aggregate computations involving subnetworks shown 

polytree algorithm diagnostic support pair called diagnostic support node computed follows 
notation iffi denotes children node theorem non observed node singly connected network 
def phi ffii phi ffii iffi theorem computing diagnostic support node broken number computations associated child node 
section show perform subcomputations 
diagnostic support node equals phi ffi phi ffi omega phi ffi phi ffi omega phi ffi phi ffi ffi ffi ffi computing diagnostic support node viewed aggregate computations 
computation pair depends nodes 
computation pair depends node 
computation pair depends nodes 
sets nodes shown 
chapter 
independence belief computation computing diagnostic support node viewed aggregate computations 
computes belief observations nodes left subnetwork node 
second computes belief observations nodes middle subnetwork node 
third computes belief observations nodes right subnetwork node 

polytree algorithm causal support pair ssi called causal support node computed follows 
theorem non observed node singly connected network 
ssj def phi ffii phi ffii ssi pi cs pi omega pi ssj theorem computing causal support node broken number computations associated parent node 
section show perform subcomputations 
computing causal support node viewed aggregate computations 
computation pair ss depends nodes 
computation pair ss depends nodes 
computation pair ss depend nodes 
sets nodes shown 
diagnostic support parent pair called diagnostic support form node parent computed follows 
notation pi denotes parents node excluding parent theorem non observed node singly connected network 
omega pi cs pi omega pi jj ssl observed node ffi ffi theorem node observed message sends parent result combining messages node receives neighbors node chapter 
independence belief computation computing causal support node viewed aggregate computations involving subnetworks shown 

polytree algorithm causal support child pair ssi called support node child computed follows 
notation denotes children node excluding child theorem non observed node singly connected network 
ssi ssi omega theorem message node sends child result combining messages node receives neighbors node summary polytree algorithm summary computations class nodes performs 
computations node parent child root nodes causal support ssi diagnostic support support child available iffi belief diagnostic support available bli ssi omega support child ssi ssi omega support parent applicable 
chapter 
independence belief computation normal nodes causal support support parent available ssi pi cs pi omega pi ssj diagnostic support equation 
belief equation 
support child equation 
support parent diagnostic support available causal support parent available omega pi cs pi omega pi jj ssl non observed leaf nodes causal support equation 
diagnostic support 
belief equation 
support child applicable 
support parent equation 

polytree algorithm observed leaf nodes causal support applicable 
diagnostic support applicable 
belief available directly observation 
support child applicable 
support parent ffi ffi 
chapter 
independence belief computation singly connected causal network 
control flow singly connected networks know compute messages need know order propagate 
sections discuss propagation schemes known probabilistic literature 
backward propagation propagation scheme interested computing belief particular node 
backward propagation starts node requests messages neighbors order compute belief 
sparks chain reaction node needs send message neighbor requests messages neighbors 
consider causal network depicted example suppose want compute belief node 
computation requires messages ss ss depicted 

control flow singly connected networks stages backward propagation computing belief node 
chapter 
independence belief computation messages exchanged backward propagation computing belief node 
node ready send message ffl node needs message ss order compute message 
ffl node needs messages ss ss order compute message ss 
ffl node needs message ss order compute message ss 
required messages depicted 
nodes ready send messages ss ss ffl node needs messages ss order compute message ss 
ffl node needs message ss order compute message ss 
required messages depicted 
nodes ready compute messages ss ss respectively 
depicts intra node messages needed computing belief node 
observations backward propagation shown 
control flow singly connected networks 
messages exchanged nodes number arcs causal network 

message exchanged arc heads node 
propagation takes place stages length path node furthest boundary root leaf node 
formalize backward propagation prove terminates 
definition says backward propagation starts node interest requests messages neighbors 
sparks chain reaction node requests messages neighbors neighbors requests message 
definition backward propagation cn singly connected causal network node cn backward propagation respect hcn ii sequence non empty sets ffl consists messages directed node ffl sn contains message node node sn gamma contains message node node sets 
called propagation states 
backward propagation respect node fss ss fss ss theorem cn singly connected causal network node cn number states backward propagation respect hcn ii length longest path node node cn chapter 
independence belief computation forward propagation forward propagation interested computing belief node causal network 
way compute beliefs backward propagation node network 
number messages exchanged computation number nodes network multiplied number arcs 
section describe propagation scheme computing belief node causal network involves twice number messages exchanged backward propagation 
propagation scheme known probabilistic literature 
forward propagation starts node having single neighbor sends message neighbor 
sparks chain reaction node sends message neighbor received messages neighbors 
consider causal network example 
classes nodes send messages neighbors immediately 
root nodes single child leaf nodes single parent 
causal network nodes fall class nodes fall second 
messages sent nodes neighbors depicted 
messages sent chain reaction started 
nodes send messages depicted 

nodes follow sending messages depicted 

enables node send messages depicted 

nodes follow sending messages depicted 

nodes send messages depicted 
depicts messages sent previous stages 
node information needs compute belief 
observations forward propagation 
exchanged messages twice number arcs causal network 

control flow singly connected networks stages forward propagation 
chapter 
independence belief computation messages exchanged forward propagation 

control flow singly connected networks 
messages exchanged arc direction 

propagation takes place stages length longest path network 
formalize forward propagation prove terminates 
definition says forward propagation starts node having single neighbor sends message neighbor 
sparks chain reaction node sends message neighbor received messages neighbors 
definition forward propagation cn singly connected causal network 
forward propagation respect cn sequence non empty sets ffl contains messages sent nodes single neighbors 
ffl sn contains message node node sn gamma contains messages neighbors node node forward propagation respect causal network fss ss ss fss fss ss fss ss ss ss fss theorem says forward propagation terminate 
theorem number states forward propagation respect singly connected causal network cn length longest path cn chapter 
independence belief computation computational complexity section count number support operations performed normal node forward propagation 
normal node parents children performs computations 
causal support 
involves operations 

diagnostic support 
involves gamma operations 

belief 
involves operations 

messages children 
involves operations 

messages parents 
involves gamma operations 
adding costs gives 
expression exponential number parents linear number children 
summarize know number messages involved forward propagation ffl number total messages exchanged twice number arcs network 
ffl propagation messages takes place number stages equals length longest path network 
number arcs singly connected network number nodes 
computing belief node singly connected network linear number nodes arcs exponential number parents node linear number children node 
chapter common lisp implementation polytree algorithm report number experiments networks nodes 

multiply connected networks diverging linear converging nodes loop diverging linear converging 
observing diverging linear node deleting arc breaks loop 
multiply connected networks polytree algorithm independences necessarily asserted multiply connected networks 
polytree algorithm applicable multiply connected networks general 
independences justifying polytree algorithm asserted multiply connected network selected set nodes observed 
set nodes called loop cutset 
loop cutset observed polytree algorithm applicable 
loop cutset observed polytree algorithm applicable multiply connected network 
steps involved 
step identify loop cutset consists node loop undirected cycle causal network 
node chosen loop diverging linear 
reason choice chapter 
independence belief computation observing node deleting outgoing arcs change independences asserted network 
consider example diverging node left loop 
deleting arc eliminates loop changing independences asserted network 
see recall test separation detects independence find certain active paths set observed nodes see definition 
node belongs path includes arc active path see definition 
deleting arc affect test separation node observed 
identifying loop cutset lc deleting arcs suggested multiply connected network singly connected 
justify arc deletion assume certain state lc loop cutset apply polytree algorithm compute belief phi ffi lc phi ffi lc node singly connected network 
possible state loop cutset obtain beliefs want phi ffi phi ffi lc phi ffi lc phi ffi lc technique called method conditioning horvitz pearl suermondt cooper peot shachter 
loop cutset nodes method conditioning requires applications polytree algorithm 
surprising computation belief probabilistic causal networks known np hard cooper 
chapter implementing polytree algorithm chapter common lisp program uses forward propagation compute belief node singly connected causal network 
probabilistic polytree algorithm message passing abstraction 
node causal network viewed processor properties 
knows conditional belief node parents 

responsible computing belief node 
responsible sending messages neighbors node abstraction useful describing algorithm implementing 
shall adopt abstraction implementing forward propagation version polytree algorithm 
number components needed realize implementation chapter 
implementing polytree algorithm ffl representation support structures 
code representation section 
ffl representation causal networks 
code representation section 
ffl component compute causal support diagnostic support belief node messages receives neighbors 
component computes message node sends neighbor 
code component section 
ffl component decide node perform particular computation send message 
code component section 
ffl component create causal networks declare observations activate forward propagation 
code component section 
ffl component represents concrete support structures 
code component section 
section reports number forward propagations causal networks generated randomly contain nodes 
lisp program shall referred 

support structures support structures represents support structure tuple elements phi omega ff phi phi needs summation scaling functions define support structure assumes components provided 
shown representation support structure explicate set supports 
support structure support summation support unscaling support scaling zero support full support support support operations support structure defined 
function returns phi defun support summation optional ss current ss funcall support structure support summation ss function returns omega defun support unscaling optional ss current ss funcall support structure support unscaling ss function returns ff defun support scaling optional ss current ss funcall support structure support scaling ss function returns defun zero support optional ss current ss support structure zero support ss chapter 
implementing polytree algorithm function returns defun full support optional ss current ss support structure full support ss function tests phi defun support optional ss current ss funcall support structure support ss function tests phi defun support optional ss current ss funcall support structure support ss 
nodes networks nodes networks represents causal networks nodes clos common lisp object system objects 
section provides definitions objects basic operations 
causal network object slots 
name identifier network 

nodes list nodes network 

support structure structure respect network quantified 
defvar current network nil defclass network name initarg name reader network name nodes initform nil accessor network nodes support structure initform probability support structure accessor network support structure node object identifier name defclass node name initarg name reader node name subclasses class nodes subclass observed nodes subclass non observed nodes 
observed nodes part causal network defined user added simulate observations 
observed node slots 
parent node observation recorded 

observation set parent observed false set parent observed true 
defclass observed node node parent initarg parent accessor node parent observation initarg observation accessor node observation chapter 
implementing polytree algorithm non observed node slots 
node denoted parents children 
parents list parent nodes 
list pn gamma pn gamma 
parent pi position counting positions starts far right moves left 

children list children nodes 
list cm gamma cm gamma 
child ci position counting positions starts far right moves left 

parent messages list pairs 
pair position parent messages represents message parent pi node pi pi 
child messages list pairs 
pair position child messages represents message child ci node ci ci 
cond supports list pairs 
pair represents conditional belief ff dcs pi csn pi pi state nodes pi parents node state pi determined position conditional belief ff list cond supports 
particular bn gamma bn gamma 
binary representation position ff list cond supports pn gamma pn gamma 
parents node bit bi equals parent pi true parent pi false 

pstatus bit vector bn gamma bn gamma 
bi equals precisely parent position parents sent message node 
bit vector bm gamma bm gamma 
bi equals precisely child position children sent message node 
nodes networks 
causal support pair representing ssn 
diagnostic support pair representing 
belief pair representing 
defclass non observed node node parents initform nil accessor node parents children initform nil accessor node children parent messages initform nil accessor node parent messages child messages initform nil accessor node child messages cond supports initform nil accessor node cond supports pstatus initform nil accessor node pstatus initform nil accessor node causal support initform nil accessor node causal support diagnostic support initform nil accessor node diagnostic support belief initform nil accessor node belief function add node inserts node network defmacro add node node optional network current network push node network nodes network function get node retrieves node identifier name network 
defmacro get node name optional network current network find lambda equal name node name network nodes network operations parents children messages basic operations lists 
retrieve parent child parent message child message position list 
achieved function function elt counts positions right left 
defmacro list position elt list length list position chapter 
implementing polytree algorithm example second set operations find position node respect neighbors 
function call index returns position child respect parent 
function call index returns position parent respect child 
defmacro list position reverse list defmacro index node children defmacro index node parents operations bit vectors basic operations vectors 
function call clear bit bv bi clears bit position bi vector bv 
function assumes bit bi set 
defmacro clear bit bv bi bv expt bi function keep track neighbors send messages parent sends message corresponding bit pstatus cleared child sends message corresponding bit cleared 
function call bit index bv assumes vector bv bit set 
call returns position set bit case 
defmacro bit index bv round log bv function retrieve position parent child send message 
functions put section deals controlling flow messages forward propagation 

nodes networks operations pairs support standard operations pairs defun pairs pair pair mapcar support unscaling pair pair defun normalize pair pair sum apply support summation pair loop pair collect support scaling sum propagation initiators certain classes nodes special interest get forward propagation started 
nodes single neighbor 
initiate propagation sending messages neighbors 
functions identify nodes function returns node parents 
returns nil 
function works similarly 
defmethod non observed node null node parents defmethod non observed node null node children function single child returns child node parents single child 
returns nil 
function single parent works similarly 
defmethod single child non observed node children node children length children children defmethod single child observed node nil chapter 
implementing polytree algorithm defmethod single parent non observed node parents node parents length parents parents defmethod single parent observed node node parent 
node computations node computations node causal network computes pairs support 
causal support 

diagnostic support 

belief 

support child 

support parent 
section provides function computation 
function passed parameters required corresponding computation suggested equations section chapter 
section provides construct basic functions section 
operating function operate computes expression op bound condition expression op commutative associative operation identity element identity 
condition nil operate computes op bound expression defun operate op identity bound expression optional condition nil reduce op loop state bound condition funcall condition state collect funcall expression state initial value identity chapter 
implementing polytree algorithm function sum computes expression bound condition expression value expression degree support 
defmacro sum bound expression optional condition nil operate support summation zero support bound expression condition function computes expression bound condition expression value expression degree support 
defmacro bound expression optional condition nil operate support unscaling full support bound expression condition function pairs computes expression bound condition expression value expression pair supports 
defmacro pairs bound expression optional condition nil operate pairs list full support full support bound expression condition 
node computations computation functions function causal support direct implementation equation section 
defun causal support parents messages cond supports state support state sum expt parents lambda state support unscaling elt elt cond supports state state parents lambda index elt messages index bit state state index list state support state support defmacro bit state bv bi ldb byte bi bv function call bit state state index returns state bit index bit vector state 
function diagnostic support direct implementation equation section 
defun diagnostic support children messages pairs children lambda index messages index function belief direct implementation equation section 
defun belief causal support diagnostic support normalize pair pairs causal support diagnostic support function support child direct implementation equation section 
defun support child children index messages causal support pairs causal support pairs children lambda index messages index lambda index equal index index chapter 
implementing polytree algorithm function support parent direct implementation equation section 
defun support parent parents index messages diagnostic support cond supports state support state sum lambda state support unscaling elt diagnostic support state sum expt parents lambda state support unscaling elt elt cond supports state state parents lambda index elt messages index bit state state index lambda index index index lambda state consistent bit state index state list state support state support defmacro consistent bit bv bi bs equal bit state bv bi bs function call consistent bit state index state checks bit index state state bit vector state 
interface computation functions section contains functions interface functions previous section 
functions respond messages request computation performed 
functions find data needed perform computation perform computation save result 
node computations defmethod compute belief setf node belief belief node causal support node diagnostic support defmethod compute causal support setf node causal support causal support length node parents node parent messages node cond supports defmethod compute diagnostic support setf node diagnostic support diagnostic support length node children node child messages functions respond messages order node send message 
functions find data needed send message send 
defmethod send support child setf node parent messages index support child length node children index node child messages node causal support defmethod send support parent non observed node setf node child messages index support parent length node parents index node parent messages node diagnostic support node cond supports chapter 
implementing polytree algorithm function direct implementation equation section 
defmethod send support parent observed node setf node child messages index case node observation list full support zero support list zero support full support 
control flow control flow node parents children ready send message neighbor received messages neighbors 
node neighbors sent message received gamma messages 
node received final message ready send remaining gamma messages 
node sends messages bursts message gamma second 
states slots pstatus object class node answer questions 
node send message 

node compute belief causal diagnostic supports 
node receives message parent updates value pstatus clearing bit corresponding pstatus 
bits pstatus clear received messages parent ready compute causal support 
depending state pstatus node take actions 
bit set pstatus bits clear node received gamma messages ready send message 
receiver message neighbor send message 
happens parent position parents bit index pstatus 

bit set bits clear pstatus node received gamma messages ready send message 
receiver message neighbor send message 
happens child position children bit index 

bits clear pstatus bits clear node received message ready send messages gamma chapter 
implementing polytree algorithm neighbors gamma parents children 
neighbor get message parent logic captured function called directly node sends message node defmethod send support child parents node parents children node children pstatus clear bit node pstatus index node pstatus count pstatus count pstatus count compute causal support cond pstatus count count send support parent parents bit index pstatus pstatus count count cc children bit index typep cc observed node send support child cc pstatus count count compute belief loop cc children typep cc observed node send support child cc loop pc parents equal pc send support parent pc 
control flow function called directly node sends message parent function implements logic similar implemented send support child 
defmethod send support parent node parents node parents children node children pstatus node pstatus clear bit node index pstatus count pstatus count count compute diagnostic support cond pstatus count count send support parent parents bit index pstatus pstatus count count pc children bit index typep pc observed node send support child pc pstatus count count compute belief loop pc children typep pc observed node equal pc send support child pc loop pp parents send support parent pp chapter 
implementing polytree algorithm interface user need know code far 
user point view operations need supported 
create causal network 

declare observation 

activate forward propagation 
sections provide functions support operations 
functions user expected know order computing beliefs 
creating network create causal network needs 
create empty network 

add nodes network 

declare parents node provide node conditional support function 

declare observations 
function network creates returns causal network identifier name defun network name instance network name name function node creates returns node identifier name 
adds node network 
defun node name optional network current network add node instance non observed node name name network 
interface function parents declares node identifier name parents names list node identifiers 
declares cond supports conditional support function node identifier name 
parameters cond supports names closely related cond supports interpreted respect order parents list names 
defun parents name names cond supports optional network current network node get node name network setf node parents node loop name names collect get node name network setf node cond supports node cond supports loop node parents node push node node children function name observation declares node identifier name observed state obs false true 
defun observation name obs optional network current network node get node name network obs name list obs name obs node instance observed node name obs name observation obs parent node push obs node node children node add node obs node network chapter 
implementing polytree algorithm propagating messages function activate network activates forward propagation network 
function returns node computed belief 
function prints information time spent forward propagation defun activate network optional network current network setf current ss network support structure network initialize network time loop network nodes network single parent single child send support parent send support child function activate network 
sets current support structure respect network quantified 

initializes network 

identifies single neighbor nodes asks send messages neighbors 
starts chain reaction exchanging messages ends number messages exchanged twice number arcs network 
initializes network initializing nodes defmethod initialize nt network loop network nodes nt initialize initialization observed node trivial 
defmethod initialize observed node non observed node initialized follows 
bits pstatus set indicate node receive message parents 

interface 
bits set indicate node receive message children 

list empty messages nil created stored parents messages 

list empty messages nil created stored children messages 

node parents asked compute causal support causal support set nil 

node children asked compute diagnostic support diagnostic support set nil 

belief node set nil 
defmethod initialize non observed node parents length node parents children length node children setf node pstatus expt parents setf node expt children setf node parent messages list parents initial element nil setf node child messages list children initial element nil compute causal support setf node causal support nil compute diagnostic support setf node diagnostic support nil setf node belief nil chapter 
implementing polytree algorithm concrete support structures section support structures defined 
support structure propositional calculus degrees support nil represent zero full supports respectively 
binary support structure support structure support summation lambda support unscaling lambda support scaling lambda 
declare ignore zero support nil full support support lambda support lambda equal second support structure probability calculus degrees support 
probability support structure support structure support summation support unscaling support scaling zero support full support support support defvar current ss probability support structure third final support structure impossibility calculus degrees support 

represented excl infinity double behaves infinity cl variable excl infinity double part common lisp explicit representation infinity 

concrete support structures disbelief support structure support structure support summation min support unscaling support scaling zero support excl infinity double full support support support chapter 
implementing polytree algorithm experiments section contains number experiments involving 
networks generated randomly program accepts input 
maximal number parents node 

maximal number children node 

radius network 
number arcs singly connected network equals number nodes minus 
unreasonable capture size network parameters 
number nodes determines number messages exchanged forward propagation 

radius network determines number stages forward propagation 

number parents node 
number children node ignored dominated number parents suggested section chapter 
table depicts number networks time took complete forward propagation 
networks nodes 
computational times reported user cpu time garbage collection real time 
experiments respect probabilistic support structure 
observations table 
cpu time node constant number parents node suggested figures 

cpu time node grows exponentially number parents node suggested 

experiments run nodes radius maximum time msec time msec node parents cpu real cpu table experiments randomly created probabilistic causal networks 

took approximately second compute belief node network nodes parents node 

took approximately minutes compute belief node network nodes parents node 
observations support formal analysis chapter 
table compares performance performance ideal system influence diagram evaluation analysis lisp srinivas breese 
table shows times faster ideal randomly created causal networks 
chapter 
implementing polytree algorithm run nodes radius maximum cpu ideal cpu ideal parents time sec time sec table experiments ideal randomly created probabilistic causal networks 
node children 
omega omega max parents omega omega max parents cpu time number nodes time sec omega omega omega omega omega omega computation time singly connected networks nodes 

experiments omega omega max parents omega omega max parents cpu time number nodes time sec omega omega omega omega omega omega computation time singly connected networks nodes 
omega omega max parents omega omega max parents cpu time number nodes time sec omega omega omega omega omega omega computation time singly connected networks nodes 
chapter 
implementing polytree algorithm omega omega parents omega omega radius omega omega radius omega omega radius cpu time node maximum parents time msec omega omega omega omega omega omega omega omega omega omega omega omega omega omega omega omega omega omega omega omega omega omega omega omega computation time singly connected networks parents node 
chapter ob calculus way quantify support sentence state general reason rejecting 
general reason rejecting sentence called objection sentence 
degrees support taken objections resulting support calculus called objection calculus 
chapter introduce objection calculus discuss central notions objection states belief objection causal networks 
states belief causal networks motivated need relax commitment numbers retaining key features probability calculus 
main theoretical value notions relax commitment numbers 
practical value appreciated instantiated respect concrete non numeric intuitive degrees support 
instantiations give birth concrete calculi reasoning uncertainty alternatives probability calculus applications 
framework developed chapters construction concrete calculi reasoning uncertainty 
concrete calculus characterized support structure hs phi ffi consists degrees support support summation phi support scaling ff 
calculus constructed chapter 
objection calculus defining support structure 
process defining concrete support calculus usually involves steps 
characterizing degrees support appealing intuition quantify support sentence 

choosing intuitive definition support summation phi verifying choice showing hs phi partial support structure 

choosing intuitive definition support scaling ff verifying choice showing hs phi ffi support structure 
defining support structure gives birth concrete calculus reasoning uncertainty basic elements definition state belief definition conditionalization definition causal network 
chapter introduce concrete calculus called objection calculus results degrees support objections 
objection sentence general reason rejecting sentence 
objections just quantifiers support 
reasons rejecting 
aspect objections gives role outside uncertainty applications 
shall see chapter objections play central role diagnosis applications 
construction objection calculus chapter follows procedure outlined 
start characterizing set objections section 
provide definition objection summation section discuss consequent notion objection state belief 
section provide definition objection scaling discuss objection conditionalization 
objection independence causal networks discussed sections 

objections ob objection sentence general reason rejecting sentence 
take objections sentences propositional language denoted called objection language 
sentence objection attributed called 
take sentences propositional language denoted called language 
objection state belief maps objection assume holder objection state belief embedded world decides truth falsity objections 
holder observe assume observe objections 
reason assumption technical 
formalization states belief chapter objections quantities 
viewpoint formalization meaningful observe quantities 
reason assume primitive propositions language disjoint objection language 
objections play role quantities 
basic intuition rejected objection holds world 
strongest objections valid sentences rejected state world 
weakest objections unsatisfiable sentences rejected state world 
extremes objections valid unsatisfiable 
objections rejection depends state world embedding objection state belief 
assuming state world equally quantified logical strength objections 
example rejectable objection logically entails objection 
objections play role quantities 
chapter 
objection calculus ob summation choosing degrees support support calculus decide sum supports 
question ask ff support sentence fi support sentence logically disjoint support formalization states belief support ff phi fi 
answer previous question defines support summation 
pair supports ff fi possible find state belief attributes ff fi logically disjoint sentences 
example degrees supports frequencies interval state belief attributes frequencies logically disjoint sentences 
ask question need identify pairs supports meaningful ask question 
identifying pairs amounts defining domain support summation 
objection calculus domain objection summation cartesian product theta objections logically disjoint related logically exhaustive 
case objections contradict state belief may reject simultaneously 
example consider exhaustive tweety flies tweety fly respective objections tweety sick tweety bird 
objections contradict problem 
tweety sick bird holds world tweety flies tweety fly rejected 
define objection summation ask ff general reason rejecting fi general reason rejecting logically disjoint general reason rejecting 
objection summation answer clearly ff fi rejected precisely rejected rejected 
objection summation logical conjunction 
theorem verifies definition theorem pair ho partial support structure 
know chapter support summation function induces partial order degrees support 
objection summation induces order definition objection ff greater fi precisely objection fl ff fl fi 
objection ff greater fi precisely fi ff 
objection ff equals objection fi precisely ff fi 
unsatisfiable sentences minimal objections valid sentences maximal objections 
defining objection summation obtain number results 
obtain formal definition objection states belief section 
second obtain spectrum attitudes states hold sentences discussed section 
obtain measure ignorance objection states belief discussed section 
states belief formalization chapter provides definition state belief respect partial support structure 
objection calculus definition definition objection state belief phi respect mapping satisfying conditions 
phi phi 
phi phi phi 

phi false true 

phi true false 
chapter 
objection calculus definition imposes conditions objection states belief 
equivalent sentences rejected equivalent conditions 
probability calculus example corresponding condition equivalent sentences equal probabilities 

disjunction disjoint sentences rejected precisely disjuncts rejected 
probability calculus probability disjunction disjoint sentences summation probabilities disjuncts 

unsatisfiable sentence rejected 
probability calculus unsatisfiable sentence probability zero 

valid sentence rejected 
probability calculus valid sentence probability 
objection summation idempotent ff ff ff 
consequence property objection objection conjoined objection logically disjoint 
facilitates computation objections 
attitudes objection states belief hold absolute relative attitudes sentences 
classes absolute attitudes 
form reject ff accept ff defined follows definition objection state belief phi rejects ff precisely ff phi 
phi accepts ff precisely rejects ff 
example objection tweety flies tweety elephant reject tweety flies accept tweety fly tweety white elephant 
second class absolute attitudes form reject ff accept ff defined follows 
objection summation definition objection state belief phi reject ff precisely ff phi 
phi accept ff precisely reject ff 
example objection tweety flies tweety sick tweety flies rejected tweety rejected tweety sick 
objection states belief hold relative attitudes form find rejectable find acceptable 
attitudes defined follows 
definition objection state belief phi finds rejectable precisely phi phi 
phi finds acceptable precisely finds rejectable sentence rejectable precisely rejected rejected 
similarly acceptable precisely accepted accepted 
formalization states belief suggests definitions attitudes rejection acceptance 
viewing objection states belief states belief equivalences theorem objection state belief rejects definition precisely rejects true definition 
accepts definition precisely accepts true definition 
rejection acceptance sentences states belief extreme attitudes held objection states belief 
formalization states belief suggests definitions orders supported believed 
viewing objection states belief states belief equivalences chapter 
objection calculus bird fly normal bird false bird fly normal bird false bird fly true fly normal bird fly false fly false table objection state belief 
bird equally acceptable fly objection bird equivalent objection fly 
note fly rejectable bird objection bird strictly entails objection fly 
theorem objection state belief phi supports supports phi definition precisely finds rejectable theorem objection state belief phi believes believes phi definition precisely finds rejectable finds acceptable conditions theorem may redundant 
example equally acceptable rejectable see table 
ignorance definition state belief objection sentence negation constrained follows phi phi false constraint says objection state belief reject sentence negation state world 
objection state belief rejects sentence negation state world may reject accept 
shall see states world indicate ignorance state belief sentence 

objection summation states world state belief phi accepts satisfy objection phi phi 
objection phi state belief accepts objection phi accepts accepts state world satisfies phi phi 
state belief phi accepts state world satisfies phi phi 
state belief embedded states say ignorant sentence definition degree objection state belief phi ignorant sentence ig phi def phi phi theorem ig phi ig phi 
degree ignorance sentence characterizes states world sentence negation accepted 
sentence negation accepted state world degree ignorance sentence true 
maximal degree ignorance say state belief maximally ignorant sentence case 
theorem objection state belief maximally ignorant sentence precisely phi phi false 
sentence negation accepted state world degree ignorance sentence false 
minimal degree ignorance say state belief minimally ignorant sentence case 
theorem objection state belief minimally ignorant sentence precisely phi phi 
objection states belief hold absolute relative ignorance attitudes sentences 
absolute attitudes form am ignorant ff defined follows chapter 
objection calculus definition objection state belief phi ignorant ff precisely ff ig phi 
state belief ignorant sentence true maximally ignorant ignorant sentence false minimally ignorant relative ignorance attitudes form am ignorant defined follows definition objection state belief phi ignorant precisely ig phi ig phi 
says state belief ignorant precisely ignorant ignorant 
objection scaling ob scaling step constructing calculus reasoning uncertainty defining support scaling function ff 
question ask ff support fi support entails support observing 
chapter support observing ff ff fi 
answer previous question defines support scaling 
question meaningful ff greater fi entails state belief satisfies premise question 
define objection scaling ask question ff general reason rejecting fi general reason rejecting entails general reason rejecting observing 
answer question ffl weakest sentence rejects conjunction weakest sentence rejects weakest sentence rejects phi phi phi 
ffl weakest sentence rejects disjunction weakest sentence rejects weakest sentence rejects reject phi phi 
phi phi 
chapter 
objection calculus ffl observing weakest sentence rejects true 
weakest sentence rejects false 
phi true phi false 
weakest sentence rejects observing weakest sentence rejects reject ff fi says objection scaling logical falsification 
intuitive definition objection scaling conform properties support scaling suggested chapter 
turns definition violates property ff says observing non rejected sentence retains accepted sentences 
modify previous definition objection scaling account property obtain definition objection scaling verified theorem theorem triple ho distributive non bijective support structure ff fi def true ff true ff fi 
defining objection scaling obtain number results 
definition states belief section 
notion objection independence discussed section 
notion objection causal networks discussed section 
states belief chapter provides definition states belief 
objection calculus inherits definition 
definition phi objection state belief reject conditionalization phi defined follows phi phi phi 
objection scaling theorem key intuition conditional objections theorem state belief phi objection calculus reject conditional objection weakest sentence phi rejects reject assessing sentence rejected usually easy assessing weakest sentence usually challenging task 
ensuring rejected weakest sentence requires assessing weakest sentence rejected 
assessment conditional objections natural task 
issue discussed section 
objection unscaling support scaling support unscaling ask objection unscaling 
answer question suggested shows relation objection conjunction objection conjuncts rejected objection computed conditional objection objection verified theorem theorem support unscaling ho ff fi def ff fi precisely ff true ff fi false fi true corollary phi objection state belief reject phi phi phi corollary shows conditional objection constrained objection condition 
particular conditional objection true disjoint objection condition 
statements necessarily consistent objection calculus chapter 
objection calculus objection objection circle left represents objection right represents objection intersection circles objection shaded area represents phi phi conditional objection rejected 
case conditional objection logically disjoint objection 
objection scaling 
objection fi true 

objection ff 
statements consistent ff fi defined 
objection state belief satisfies statements 
contrary probability calculus statements consistent 
probability 
probability probability calculus construct probabilistic state belief satisfies statements 
sufficient objections assessing condition leads rejection conjunction relatively easy assessing weakest condition challenging task 
assessing objections trivial 
probability calculus related problem solved appealing conditional probabilities 
particular assessing probability conjunction directly assess conditional probability multiply probability pr pr theta pr indirect assessment probabilities useful assessing conditional probability usually easier assessing probability conjunction objection calculus objection conjunction assessed indirectly 
assess conditional objection objection phi phi phi chapter 
objection calculus turns assessing conditional objection usually hard assessing objection assessing conditional objections natural task ensure consistency conditional objection objection condition 
defeats expected role conditional objections assessment objections easier 
fortunately alternative solution making assessment objections easier 
solution hinges notion sufficient objections 
sufficient objection objection objection objection definition sufficient objection written phi sentence ff phi ff phi 
notation phi ff means ff sufficient objection assessing sufficient objection phi usually easier assessing objection phi 

theorem suggests answer 
theorem sufficient objection phi satisfies phi phi phi theorem sufficient objection equivalent objection objection assumed false 
assess sufficient objection asks objection absence objection 
consider circuit example 
language primitive propositions assert state wires circuit 
objection language primitive propositions ok ok ok assert statuses gates circuit 
assess sufficient objection asks objection absence objection 
answer usually ok case 
conditional objection usually sufficient objection example conditional objection phi objection phi sufficient objections people rarely provide objections asked sufficient objection 

objection scaling digital circuit 
consider circuit 
asked sufficient objection people usually give ok 
curiously ok conditional objection ffl objection ok 
ok ok 
ffl objection ok ok 
ffl conditional objection ok ok ok 
chapter 
objection calculus ob independence chapter provides definition independence states belief 
objection calculus inherits definition discussed section 
weaker notion independence objection calculus appropriate certain applications 
notion independence discussed section 
strong independence probability calculus notion independence closely related notion probability change 
particular say set propositions independent conditional probability equals conditional probability observed probability change observed 
chapter notion independence generalized states belief 
states belief objection calculus instances states belief inherit definition 
definition state belief phi finds strongly independent written sin phi precisely conditional objection equivalent conditional objection refer strong independence objection calculus weaker notion independence 
interestingly weak independence objection calculus appropriate certain applications 
definition weak independence section 
rest section identify application strong independence inappropriate 
consider state belief phi digital circuit objection language constructed primitive propositions ok inverter functioning normally ok inverter functioning normally 
objection independence yx digital circuit 
language constructed primitive propositions wire wire wire 
expect state belief phi ffl objection false 
ffl objection ok 
ffl objection ok 
ffl objection ok ok expect state belief phi find intuitively independent 
shall see strongly independent 
particular conditional objection equivalent conditional objection 
observing objection chapter 
objection calculus phi phi phi ok false ok ok weakest condition phi rejects reject 
observing objection phi phi phi ok ok ok ok ok ok ok weakest condition phi rejects reject 
example demonstrates strong independence objection calculus correspond independence know digital circuits 

question answered section 
weak independence strong independence objection calculus appeals conditional objections 
weaker notion independence appeals sufficient objections 
specifically propositions weakly independent assessing sufficient objection depend state formal definition 
definition state belief phi finds weakly independent written win phi precisely sufficient objection sufficient objection corollary win phi phi phi phi 
characterization weak independence mention sufficient objections 
objection independence theorem win phi precisely phi phi phi 
considering digital circuit show phi phi phi example phi ok ok phi ok phi ok show weakly independent 
weak independence satisfies number properties major consequences 
example property shows sufficient objections decomposed simpler sufficient objections presence weak independence theorem win phi phi phi phi 
important properties weak independence axioms pearl 
theorem symmetry win phi precisely win phi 
theorem decomposition win phi win phi 
theorem weak union win phi win phi 
theorem contraction win phi win phi win phi decomposition weak union contraction give win phi win phi precisely win phi chapter 
objection calculus ob causal networks chapter provides definition causal networks 
objection calculus inherits definition discussed section 
objection calculus weaker notion causal networks appropriate certain applications 
notion discussed section 
strong causal networks degrees support objections refer causal network strong objection sob causal network 
topology sob causal network encodes strong independence assertions tables contain conditional objections 
formal definition 
definition sob causal network tuple hl coi ffl propositional languages disjoint primitive propositions 
ffl directed acyclic graph primitive propositions ffl partial function theta coi pi defined pi false primitive proposition function called conditional objection function 
definition state belief phi satisfies sob causal network hl coi precisely sin phi pi phi pi true phi pi coi pi sob causal networks strong independence conditional objections 
mentioned earlier conditional objections easy assess 
objection causal networks quantification sob causal network unnatural 
strong independence appropriate certain applications sob causal networks inappropriate applications 
possible construct sob causal network satisfied state belief 
surprising definition sob causal network guarantee conditional objection coi pi consistent objection condition pi solution problems section 
weak causal networks weak objection wob causal networks syntax sob causal networks semantics different 
topology wob causal network encodes weak independence assertions tables contain sufficient objections 
formal definition 
definition wob causal network tuple hl soi ffl propositional languages disjoint primitive propositions 
ffl directed acyclic graph primitive propositions ffl partial function theta soi pi defined pi false primitive proposition function called sufficient objection function 
depicts wob causal network 
network sob causal network quantification inconsistent 
example viewed sob causal network objection ok conditional objection ok 
objections inconsistent 
chapter 
objection calculus ok ok false false false false ok ok false false digital circuit corresponding wob causal network 
definition state belief phi satisfies wob causal network hl soi precisely win phi pi phi pi soi pi sob causal networks wob causal network consistent 
theorem wob causal network satisfied exactly objection state belief 
wob causal networks rich represent state belief 
theorem objection state belief satisfies wob causal network 
weak independences hold wob causal network retrieved applying separation topology network 
theorem phi state belief satisfying wob causal network hl soi 
win phi 

wob algorithm wob algorithm section algorithm computation 
ffl hl soi wob causal network ffl ffi observation nodes compute pair objections node bli def phi ffi phi ffi pair bli contains information 
example compute 
objection observation ffi phi ffi phi ffi 

conditional objection ffi phi ffi phi ffi 

objection phi ffi ffi true 
algorithm am assumes causal network singly connected 
similar generalized polytree algorithm extended handle multiply connected networks 
algorithm assumes observation ffi leaf nodes assumption affect generality algorithm 
show chapter observation node simulated observation leaf auxiliary node 
algorithm breaking computation pair bli number smaller computations performed neighbors node result computation passed node message message sent parent node denoted message sent child node denoted messages node receives parents combined form pair objections denoted messages node receives children chapter 
objection calculus combined form pair objections denoted target pair bli result combining pairs outlined algorithm explain passed messages computed combined 
messages parents message node receives parent defined follows def phi ffii phi ffii messages node receives parents combine yield pair def phi ffii phi ffii messages combined follows theorem pi pi pi 
parent computes message sends node follows theorem message result combining messages node receives neighbors node messages children message node receives child defined follows def phi ffii phi ffii messages node receives children combine yield pair def phi ffii phi ffii messages combined follows 
wob algorithm theorem iffi child computes message sends node follows theorem node observed pi pi pi ij node observed hfalse truei ffi htrue falsei ffi node observed observation ffi decides message computed 
observed message result combining messages node receives neighbors node node received messages parents uses compute pair 
similarly node uses messages received children compute pair target pair bli computed combining pairs theorem bli computational complexity algorithm involves passing messages number arcs network 
computation performed node exponential number parents linear number children 
complexities apply probabilistic version algorithm 
note reasonable assume numeric addition multiplication operations take constant time reasonable assume logical conjunction disjunction objection calculus play role played addition chapter 
objection calculus messages exchanged forward propagation 
multiplication probability calculus operations take constant time 
fact objections represented disjunctive normal forms experimental results show causal networks nodes algorithm time spent conjoining objections 
time vary significantly depending number nature available observations 
example consider depicts wob causal network 
observation ffi compute belief node network forward propagation 
computation requires messages 
wob algorithm depicted 
messages computed follows hfalse truei hfalse falsei hfalse truei node root hfalse truei sop sop ok false false true false false ok true falsei htrue falsei sop sop true ok false false true false false ok hfalse ok sop sop false ok ok false false false ok ok ok falsei chapter 
objection calculus compute pair node hfalse truei ok falsei ok truei hfalse ok htrue falsei compute pair node hfalse falsei hfalse ok sop sop ok ok false false false ok ok false hfalse ok ok compute pair bli node bl hfalse falsei ok truei ok truei bl falsei hfalse ok ok bl hfalse ok ok htrue falsei htrue ok ok 
justification consequence calculi justification consequence calculi objection calculus quantifies support sentence assessing objection sentence general reason rejecting 
question arises usually connection objection calculus quantify support sentence assessing justification sentence general reason accepting 
answer resulting calculus justification calculus instance calculus formalized chapters 
explain 
sentence rejected negation accepted 
objection sentence justification negation 
connection follows justification disjunction logically disjoint computed justification justification violates principles underlying states belief ffl support function support support logically disjoint 
justification calculus ffl justification function justification justification see holds justification calculus denote justification phi denote objection connection justifications objections phi phi phi calculus closely related objection calculus consequence calculus quantifies support sentence assessing consequence chapter 
objection calculus sentence specific accepting sentence 
consequence calculus instance calculus formalized chapters 
objection justification consequence calculi duals 
duality equivalent statements 
ff objection 
ff justification 
ff consequence similar duality exists impossibility possibility necessity calculi dubois prade 
chapter diagnosis ob calculus chapter explore application objection calculus diagnosing faults physical systems 
particular show describe behavior physical system wob causal network wob algorithm compute diagnoses observations system 
objections closely related influential notions ai labels diagnoses 
computing labels job clause management system reiter de kleer 
section discuss clause management systems define labels formally 
section study relation objections labels 
computing diagnoses job diagnosis system de kleer 
section discuss diagnosis systems define diagnoses formally 
section study relation objections diagnoses 
section show wob causal networks describe behavior physical systems wob algorithm chapter compute diagnoses provide examples 
chapter 
diagnosis objection calculus clause management systems basic task clause management system help reasoner answer general question particular database condition derive particular sentence 
condition usually required general phrased particular language 
example provides intuitive justification requirement 
consider circuit depicted 
propositional language primitive propositions assert state wires circuit 
propositional language primitive propositions ok ok ok assert statuses gates circuit 
behavior circuit described statements form gate input ok gate oe gate output delta denote conjunction statements delta ok oe ok oe ok oe ok oe 
reasoner observes ffi circuit ask clause management system question database delta ffi condition derive sentence general condition phrased language ok ok ok 
condition called label respect delta ffi 
definition label sentence respect database delta written label delta weakest sentence language conjoined delta entails 
clause management systems digital circuit 
reiter de kleer reiter de kleer define labels differently 
state analyze definition need number notions 
notions conjunctive clause disjunctive clause prime implicant prime implicate minimal support clause 
definition conjunctive clause conjunction literals 
definition implicant conjunctive clause entails prime implicant weakest implicant definition disjunctive clause disjunction literals 
definition implicate disjunctive clause entailed prime implicate strongest implicate definition reiter de kleer support sentence respect database delta implicate delta implicate delta minimal support sentence respect database delta strongest support respect delta chapter 
diagnosis objection calculus reiter de kleer define labels follows definition reiter de kleer label sentence respect database delta set conjunctive clauses belongs language minimal supports respect delta glance definition looks quite different definition 
closer look shows certain class databases difference definitions syntactic 
particular label respect delta definition corresponds prime implicants label delta consistent delta correspondence corollary theorem theorem prime implicant label delta consistent delta precisely belongs minimal support respect delta difference definition definition labels syntactic provided database non committal sense definition database delta non committal respect language precisely entail invalid sentence example database delta ffi earlier respect circuit non committal respect language 
database delta ffi committal entails ok belongs 
database delta non committal respect language prime implicant label delta consistent delta case label respect delta definition corresponds set prime implicants label delta 
theorem delta non committal database respect language label respect delta reiter de kleer set prime implicants label delta 
reiter de kleer refer primitive propositions language assumptions 

clause management systems chapter consider databases non committal respect language interest 
affect generality basic results chapter 
fact databases diagnosis applications usually non committal respect language applications database delta usually description system behavior language statuses system components 
behavioral system descriptions usually imply statuses system components databases diagnosis applications usually non committal 
chapter 
diagnosis objection calculus relation ob labels correspondence non committal databases states belief objection calculus 
state belief phi construct non committal database delta phi correspondence objections phi labels delta phi furthermore non committal database delta construct state belief phi delta correspondence labels delta objections phi delta results stated theorems assume phi state belief respect 
database corresponding state belief phi conjunction statements form objection implies definition database corresponding state belief phi delta phi def phi oe theorem shows database corresponding state belief non committal 
theorem database delta phi non committal respect language label sentence respect database delta phi objection attributed state belief phi sentence theorem sentence language phi label delta phi 
construct state belief corresponds non committal database 
theorem mapping psi delta psi delta label delta objection state belief 

relation objections labels computational value weak independence state belief objection calculus corresponds non committal database weak independence assertion state belief phi assertion database delta phi assertion 
theorem answers question theorem state belief phi finds propositions weakly independent precisely label delta phi label delta phi label delta phi explain intuition theorem 
suppose label delta phi ff label delta phi fi ff fi weakest sentences delta phi ff delta phi fi logically deduce delta phi ff fi logically deduce ff fi weakest sentence satisfies 
holds depends nature database delta phi deciding ff fi label involves examination database delta phi state belief phi finds weakly independent ff fi weakest sentence satisfies 
case conclude ff fi label examination database delta phi avoiding examination computational value weak independence 
consider circuit depicted example 
label delta ffi ok chapter 
diagnosis objection calculus label delta ffi ok label delta ffi ok label delta ffi ok proposition weakly independent label delta ffi label delta ffi label delta ffi ok ok weakly independent verified label delta ffi ok ok ok label delta ffi label delta ffi logical meaning wob causal networks know chapter wob causal network corresponds state belief 
state belief corresponds non committal database wob causal network correspond non committal database 
database 
theorem answers question theorem cn hl soi wob causal network phi state belief satisfying cn delta phi pi pi oe theorem database corresponding wob causal network conjunction statements form state parents sufficient objection oe state node theorem database corresponding causal network depend causal structure network 
tables 
relation objections labels causal network independences asserted causal structure logically redundant 
surprising consequential 
surprising suggests causal structure representational value 
consequential suggests independences asserted causal structure correct 
means theorem prove claim chapter true respect objection calculus 
causal structure representationally redundant seen section computational value underestimated 
chapter 
diagnosis objection calculus diagnosis systems basic task diagnosis system help reasoner answer general question particular database conclude recording particular observation 
usually required specific phrased particular language 
example provides intuitive justification requirement 
consider circuit depicted delta section 
reasoner observes ffi circuit ask diagnosis system question database delta conclude recording observation ffi 
specific phrased language ok ok ok 
called diagnosis ffi respect delta 
definition diagnosis ffi respect delta written diagnosis ffi delta strongest sentence entailed delta ffi 
ai literature contains notions diagnosis 
example de kleer de kleer discuss notions influential minimal prime kernel diagnoses 
conclude discussion notions minimal prime diagnosis inadequate characterize diagnoses generally 
argue notion kernel diagnosis designates components normal abnormal reminder better way characterize diagnoses 
de kleer page shall see prime implicants diagnosis ffi delta correspond kernel diagnoses defined de kleer kernel diagnoses defined respect system triple ffi delta definition propositional version definition de kleer 
diagnosis systems ffl ffi system observation propositional sentence 
ffl delta system description propositional sentence 
ffl system component language propositional language primitive propositions form ok component system 
definition kernel diagnoses system ffi delta prime implicants conjunction prime implicates delta ffi belong relation kernel diagnoses notion diagnosis definition corollary theorem theorem strongest sentence entailed delta ffi equivalent conjunction prime implicates delta ffi belong corollary prime implicants diagnosis ffi delta kernel diagnoses system ffi delta 
chapter 
diagnosis objection calculus relation ob kernel diagnoses correspondence objections state belief phi diagnoses corresponding database delta phi theorem phi state belief respect ffi sentence phi ffi diagnosis ffi delta phi theorem diagnoses negated objections 
intuitive phi ffi general reason rejecting ffi phi ffi specific accepting ffi 
corollary theorem shows kernel diagnoses correspond prime implicants negated objections 
corollary phi state belief respect ffi sentence prime implicants phi ffi kernel diagnoses system ffi delta phi 
corollary key computing kernel diagnoses wob algorithm chapter wob causal network describes physical system observation ffi system 
wob algorithm compute objection phi ffi observation ffi 
computed objection negated 
prime implicants negated objection phi ffi computed 
kernel diagnoses observation ffi 

diagnosis wob causal networks diagnosis wob causal networks section sketch steps involved diagnosing system faults wob causal networks 
provide examples diagnosing faults digital circuits 
step constructing wob causal network hl soi defining propositional language define language identify system components needed order describe system behavior 
statuses components constitute primitive propositions language particular primitive propositions usually form ok system component 
alternatively primitive propositions form ab system component 
choices dual 
digital circuits example components usually individual gates circuit composed 
second step constructing wob causal network defining propositional language define language identify system aspects statuses components needed describe system behavior 
aspects constitute primitive propositions language example aspects digital circuits usually states wires connect individual gates 
third step constructing wob causal network constructing causal structure direct acyclic graph 
nodes graph primitive propositions language system aspects 
arcs graph respect principle assuming system component faulty observing state aspects pi system parents aspect determine state aspect causal structure respects principle said quantifiable brings step constructing wob causal network quantifying causal structure 
purpose quantifying causal structure voice objections local behaviors system 
local behavior pair pi state aspect pi state parent aspects pi local behavior pi means aspect chapter 
diagnosis objection calculus state aspects pi state pi quantifying causal structure provides sufficient objection state state pi local behavior pi 
sufficient objections fill tables wob causal network consequently specify sufficient objection function 
summarize constructing wob causal network hl soi involves 
identifying system components constructing language 
identifying system aspects constructing language 
constructing causal structure 
quantifying structure providing sufficient objection function 
performing steps committed state belief phi system consideration 
constructed causal network corresponding state belief basis diagnosing faults described system 
example suppose observe ffi described system 
theorem diagnosis ffi negated objection phi ffi 
diagnosis computed algorithm chapter observation ffi conjunction literals 
particular algorithm computes pair phi ffi phi ffi node causal network 
conjoining elements pair gives objection observation ffi phi ffi phi ffi phi ffi diagnosis ffi phi ffi phi ffi 

diagnosis wob causal networks example depicts wob causal network describes digital circuit 
quantification assumes ffl gate ok behaves normally 
ffl gate faulty may behave normally abnormally 
causal structure digital circuit usually reflected wiring structure assuming gate faulty observing input gate determine output 
suppose observe ffi circuit 
wob algorithm compute ble ok 
ok ok phi ffi ok ok ok ok diagnosis observation ffi 
ee dd aa false ok bc ok ok false ok ok ok false de false false false false false wob causal network digital circuit 
chapter 
diagnosis objection calculus second example depicts digital circuit wob causal network describing 
quantification assumes ffl inverter ok behaves normally 
ffl inverter faulty shorts output input 
suppose observe ffi circuit 
wob algorithm compute ok ok ok phi ffi ok ok 
ok ok diagnosis observation ffi 
false false ok ok ok ok ok ok ok ok digital circuit corresponding wob causal network 

diagnosis wob causal networks third example depicts digital circuit wob causal network describing 
quantification assumes ffl inverter ok behaves normally 
ffl inverter faulty shorts output input gets stuck 
suppose observe ffi circuit 
wob algorithm compute ok phi ffi ok ok diagnosis observation ffi 
false false ok ok ok false ok ok bb ok false digital circuit corresponding wob causal network 
chapter 
diagnosis objection calculus chapter commonly asked questions chapter answer number questions relation ai philosophical probabilistic literatures 
sections state questions answer 
notation abc stands belief calculus chapters 
valued logic question view abc valued logic 
answer 
explain valued logic show abc viewed 
valued logic usually characterized choice truth values choice truth value functions fi 
truth value functions follows truth values 
tn attributed sentences ff 
ffn truth value fi 
tn attributed sentence ci ff 
ffn ci logical connective rosser 
valued logic truth value sentence determined truth values constituent sentences 
called truth functionality valued logic 
view degrees support truth values abc truth functional 
know example support conjunction determined chapter 
commonly asked questions supports conjuncts 
abc valued logic 
subsume probability calculus polish logicians 
regarded non truth functional character probability assignments decisive obstacle viewing probabilistic system valued logic 
mazurkiewicz tarski mind 
rescher page explains basic difference abc existing valued logics ai literature bonissone 
ginsberg proposes valued logic deviates tradition completely truth functional ginsberg 
assumes truth value sentence determines truth value negation 
ginsberg assumes truth functions corresponding disjunction conjunction connectives idempotent precludes probabilities truth values 

fuzzy logic fuzzy logic question relation abc fuzzy logic 
answer question shall digress fundamental notion fuzzy set theory base answer 
notion linguistic variable zadeh 
roughly speaking linguistic variable consists elements ffl variable 
ffl exact values variable ffl linguistic values variable linguistic descriptions value ffl meaning function 
function maps linguistic value fuzzy set consider example linguistic variable consisting variable age exact values linguistic values old old old 
depicts meaning linguistic values variable age 
armed concept linguistic variable take formalism deals variables construct fuzzy version formalism young old meanings linguistic values 
chapter 
commonly asked questions variables take linguistic values 
process called particular consider valued logic truth values truth value sentence truth value variable exact value logic allowing variable truth value take linguistic values 
sentence introduce linguistic variable elements ffl truth value variable 
ffl exact values truth value 
ffl true true false 
linguistic values truth value 
ffl meaning function maps linguistic value fuzzy set fuzzy logic proposed zadeh constructed way zadeh 
back question motivated discussion relation abc fuzzy logic 
turns concrete instance abc way valued logic 
consider probability calculus example 
sentence introduces linguistic variable elements ffl pr variable 
ffl exact values pr 
ffl 
linguistic values pr 
ffl meaning function maps linguistic value fuzzy set 
probability calculus introduced zadeh zadeh completely developed 
constructed fuzzy probability calculus instance weaker version abc constructing support structure darwiche 
fuzzy instances abc constructed similarly 
useful people linguistic values opposed exact ones 
example asked age person hear old opposed 

dempster shafer theory dempster shafer theory question abc subsume dempster shafer belief functions 
answer 
state belief function explain answer 
belief function respect propositional language mapping interval satisfying properties shafer ffl bel false ffl bel true ffl bel bel ffl bel kg gamma ji bel 
belief function associated plausibility function pl pl gamma bel belief functions violate basic property states belief ffl support disjunction determined support support logically disjoint 
definition belief function entail property 
belief functions instances states belief 
limitation abc 
interpretation belief functions controversial know precisely nature limitation 
interpretation belief functions formal intuitive deserve attention halpern fagin fagin halpern 
specifically belief function bel viewed representing probabilistic states belief pr satisfy property bel pr pl chapter 
commonly asked questions belief plausibility lower upper bounds probability 
major attraction view belief functions relax commitment point probabilities usually hard assess 
particular having attribute point probability sentence attributes probability interval bel pl 
view belief functions instances states belief tempted conclude degrees support abc probability intervals 
correct 
example degrees support fuzzy probability calculus fuzzy sets interval 
fuzzy sets rich represent probability intervals darwiche 
particular interval represented fuzzy set belongs 

valuation systems valuation systems question shenoy glenn shafer titled axioms probability belief function propagation suggest framework axioms exact local computation probabilities possible 
framework relate theirs 
describe essence framework discuss relation frameworks 
shenoy shafer suggest model computation opposed belief calculus shenoy shafer shenoy 
model computation roughly described ffl global information represented collection local pieces information 
pieces called valuations 
ffl valuation provides information variables valuation said variables case 
ffl valuation variables valuation variables aggregated produce valuation variables 
resulting valuation called combination denoted omega ffl valuation provides information variables restricted provide information subset variables 
result restriction smaller valuation variables 
valuation called marginalization denoted 
ffl computation process finding global information say set variables collection valuations 
computation process combines valuations produce global valuation restricts valuation variables formally computation omega omega shenoy shafer symbol omega denote combination 
symbol omega avoid confusion support unscaling abc 
chapter 
commonly asked questions basic concepts framework shenoy shafer shenoy shafer 
basic result algorithm performing computation certain conditions 
conditions concern variables valuations provide information properties combination properties marginalization 
shenoy shafer shown computation number concrete belief calculi viewed process combining marginalizing valuations 
briefly described framework shenoy shafer explain relates framework 
frameworks away numbers scope style abstractions different 
am abstracting away numbers am concerned belief calculus committed numbers key features probability calculus computational features example 
shenoy shafer abstracting away numbers apparently concerned model computation committed numbers 
concisely am suggesting belief calculus shenoy shafer suggesting model computation 
difference types abstractions usually blurred emphasizing common concrete instances 
difference highlighted considering questions 
consequences showing concrete belief calculus instance abstractions 
belief calculus shown instance abc conclude example states belief calculus satisfy properties chapter satisfy properties chapter 
properties phrased framework shenoy shafer 
polya patterns plausible reasoning example 
phrase patterns needs notion degree belief notion ordering degrees belief 
notions absent framework shenoy shafer 

valuation systems 
extent abstraction guide creation concrete belief calculi 
seen abc guided example creation objection calculus chapter 
framework shenoy shafer appears weak guide creation 
weakness virtue framework viewed model computation 
difference framework shenoy shafer style abstraction 
specifically basic notions constitute framework properties notions follow set axioms 
example existence support summation scaling unscaling properties operations shown consequences axioms states belief 
am aware similar justification basic notions underlying framework shenoy shafer 
chapter 
commonly asked questions theories probability question abstracting away numeric probability old tradition 
long history attempts probabilistic literature history reviewed book terrence fine 
relate attempts 
attempts away numeric probability fine 
am aware classes attempts discuss 
modal probability class attempts statements form probability replaced statements form probable called unconditional modal statements walley 
conditional modal statements form probable 
major questions asked respect modal probability 

axioms notion probable satisfy 
suggested axioms walley ffl false probable 
ffl probable probable 
ffl probable entails probable 

relation modal probability numeric probability 
question usually addressed appealing notion agreement inspired theory measurement 
example modal probability state belief said agree numeric probability state belief probable precisely probability 

theories probability comparative probability second class attempts statements form probability replaced statements form probable called unconditional comparative statements walley 
conditional comparative statements form probable 
major questions asked respect comparative probability 

axioms notion probable satisfy 
suggested axioms koopman fine walley ffl false probable ffl probable probable ffl probable probable probable 
relation comparative probability numeric probability 
question addressed appealing notion agreement 
example comparative probability state belief said agree numeric probability state belief probable precisely probability greater probability notion agreement central study modal comparative probability 
fact axioms suggested notions motivated agreement results 
quantitative probability third class attempts statements form probability number replaced statements form probability necessarily number 
attempt class chapter 
commonly asked questions am aware mine aleliunas aleliunas 
remainder section discuss aleliunas detail 
aleliunas suggests calls normative theory belief explains body evidence affects degree belief possible hypothesis 
aleliunas probabilistic logic scheme relating body evidence potential hypothesis rational way 
degrees belief probabilities assigned possible relationships hypotheses pieces evidence relationships called conditionals 
expression jq denote conditional probability probability assignment sentences language set probabilities goal probabilistic logic aleliunas identify characteristics family functions theta set permissible probability assignments rational agent permitted choose 
aleliunas provides number axioms constrain set divides groups axioms domain range probability assignment axioms stating consistency constraints individual obey axioms set axioms 

axioms domain range 
set probabilities partially ordered set ordering relation 
sentences finite propositional sentences countable set primitive propositions 
jq xjy 

axioms hold 
abbreviated 
jp 
jq 
jp jp 

theories probability monotone non increasing total function jq jq 
order preserving total function theta qjr jq qjr 
qjr jq qjr defined jp 
jr jr 

axioms set distinct primitive propositions probabilities bja cja 
ajb aj bja bj 
basic differences axioms underlying abc 
aleliunas require existence function lambda qjr lambda jr qjr function lambda correspond support summation abc existed 
aleliunas require probability summation function 
probability summation lambda exist partial order set probabilities assumed opposed derived abc 
second aleliunas remarks axioms imply existence probability satisfies remarks need unique 
corresponds support unscaling abc means aleliunas require existence unique support scaling function 
conditionalization state belief defined 
chapter 
commonly asked questions third aleliunas requires function total 
abc support unscaling necessarily total function 
significance issue discussed length section 
fourth axiom aleliunas hold abc 
support sentence determine support negation sentence general 
axiom held abc abc subsumed possibility objection calculi 
chapter concluding remarks basic result thesis commitment numbers needed obtaining key features probability calculus multiple degrees belief conditionalization independence causal networks local computation 
chapter shall briefly summarize basic result discuss questions remain answered 
summary thesis chapter pointed people mixed feelings probability calculus 
hand people usually impressed key features calculus 
hand find commitment numbers high price pay features 
chapter formalized notion state belief attribution degrees belief propositional sentences 
states belief subsume probabilistic counterparts committed numeric symbolic degrees belief 
chapter formalized notion conditionalization process changing state belief accommodate observation 
conditionalization subsumes probabilistic counterpart leads celebrated patterns plausible reasoning 
chapter 
concluding remarks chapter formalized notion causal network graphical construct communicating state belief 
causal networks subsume probabilistic causal networks 
chapter polytree algorithm computing beliefs causal networks chapter implemented algorithm common lisp 
algorithm subsumes probabilistic counterpart 
chapters comprise comprehensive belief calculus looks probability calculus committed numbers 
chapter objection calculus symbolic instance belief calculus 
objection calculus concretely demonstrates multiple degrees belief conditionalization independence causal networks local computation features exclusive probability calculus 
chapter explored practical ramifications suggested theory uncertain states belief 
particular showed clause management diagnosis systems viewed instances belief calculus 
tools calculus available clause management diagnosis applications gave examples availability 

technical limitations technical limitations assumptions developing theory uncertain states belief 
assumptions intended simplify presentation relaxed straightforward manner 
assumptions involved relaxed research conducted 
section discuss assumptions 
primitive propositions binary 
assumed primitive propositions values true false 
probabilistic literature primitive propositions usually multi valued 
example todays weather multi valued primitive proposition may values cloudy rainy sunny 
assumption relaxed losing established results 
true state belief multi valued propositions represented state belief binary propositions 
domain state belief propositional language 
assumption relaxed principle state belief attribution degrees support order sentences 
relaxing assumption leads representational complexity 
particular state belief longer characterized degrees support attributes complete sentences property assumed number proofs 
clear extend definition causal networks assumption relaxed compromising usefulness networks 
objections observed 
mentioned chapter assumption objections degrees support 
theory uncertain states belief meaningful observe quantities 
relaxing assumption takes realm current theory 
relaxing assumption undermines results established chapters 
example database corresponding objection state belief longer non committal general see theorem 
chapter 
concluding remarks current research areas believe deserve immediate attention 
uncertain observations conditionalization uncertain observations changing state belief sentence supported degree needs explored 
uncertainty literature contains number proposals concrete states belief uncertain observations 
adopt proposals states belief uncertain observations 
interesting characterizing proposals way characterized states belief chapters 
identifying formalizing properties belief change equivalent proposals consideration 
sufficient supports seen objection calculus example sufficient objections play important role extracting objections 
fact sufficient objections important conditional objections regard 
question define notion sufficient supports calculus 
believe 
notion important notion sufficient objections 
believe 
line questioning sufficient supports may lead weak notion independence calculus 
theoretical questions theoretical questions answers enhance understanding current theory uncertain states belief 
example additional properties belief change guarantee uniqueness support scaling 
properties belief change independent 
reduced simplified 
appendix propositional logic states belief fundamental notions thesis 
state belief maps standard propositional language set containing degrees belief 
standard propositional language mean language syntax semantics 
syntax propositional language respect primitive propositions 
pn constructed follows 
pi 

logical connectives defined usual def oe def def 
appendix propositional logic semantics truth assignment respect primitive propositions 
pn mapping fp 
png ftrue falseg 
notion satisfaction truth assignment defined follows 
pi pi true 


satisfaction relation induces meaning function sentences meaning sentence set truth assignments satisfy 
contains truth assignments satisfy complete sentences complete sentence set primitive propositions sentence form li li literal example fa bg complete sentences general complete sentences set propositions 
complete sentence primitive propositions denoted definition true complete sentence empty set propositions 
complete sentence primitive propositions called state propositions fixes truth proposition correspondence complete sentences set primitive propositions truth assignments set propositions 
logical falsification falsification sentence sentence sentence notion falsification plays important role chapter 
importance stems characterization falsification ff false ff precisely ff falsification false holds hold 
appendix propositional logic adopt terminologies definitions ffl unsatisfiable written empty set 
ffl satisfiable empty set 
ffl valid written set truth assignments 
ffl true denotes valid sentence 
ffl false denotes unsatisfiable sentence 
ffl equal ffl logically disjoint 
ffl logically exhaustive ffl entails implies written 
ffl stronger precisely entails ffl weaker precisely entails ffl world truth assignment 
ffl database sentence 
ffl database delta consistent delta empty set 
ffl database delta entails sentence delta 
appendix notational conventions cardinality set propositional language respect primitive propositions complete sentence state primitive propositions node parent node pi parents node pi parents node excluding parent iffi children node children node excluding child descendants node descendants node connected arc descendants node connected arc non descendants node non descendants node connected arc non descendants node connected arc appendix notational conventions appendix proofs chapter formal statements axioms 
state belief phi satisfies axiom phi phi axiom phi phi phi phi phi function 
axiom phi phi phi phi axiom phi false degree support 
axiom phi true degree support 
axiom says syntax matter meaning 
result proofs view state belief mapping set truth assignments language distinction sentence meaning occasionally refer meaning proposition 
appendix proofs chapter proof theorem axiom get phi phi phi phi proof theorem assume axioms 
supports phi meaningful 
exist state belief phi logically disjoint propositions phi phi follows phi phi phi phi phi phi 
supports phi phi meaningful 
exist state belief phi logically disjoint propositions phi phi phi follows phi phi phi phi phi phi 
phi phi phi phi 
proof theorem assume axioms 
assume axiom 
supports phi phi meaningful phi phi exist state belief phi logically disjoint propositions phi phi phi follows phi phi 
phi phi assume 
suppose phi phi 
exist 
phi phi phi phi phi phi phi 
supposition phi phi phi phi phi phi assumption phi phi phi phi 
phi phi phi phi phi 
phi phi 
proof theorem assume axioms 
support choose state belief phi proposition phi follows phi phi phi phi phi phi 
identity element support summation 
suppose identity element 
phi identity element unique 
proof theorem assume axioms 
support choose state belief phi proposition phi phi phi phi phi phi phi 
suppose support support support phi 
exists support phi 
exist support phi 
phi phi phi 
phi unique 
appendix proofs chapter proof theorem ffl reflexive 
phi conclude phi ffl antisymmetric 
suppose phi phi phi def phi phi def phi phi phi substituting phi ffl transitive 
suppose phi phi phi def phi phi def phi phi phi substituting phi phi phi def phi ffl phi phi phi ffl phi phi 
phi 
proof theorem ffl reflexive 
phi phi conclude hs phi hs 
ffl antisymmetric 
suppose hs phi hs hs phi hs 
phi phi phi phi 
antisymmetry phi 
hs hs 
ffl transitive 
suppose hs phi hs hs phi hs 
phi phi phi phi 
transitivity phi phi phi 
hs phi hs 
ffl phi hs degree belief hs 
degrees support phi phi 
phi hs 
ffl hs phi degree belief hs 
degrees support phi phi 
hs phi 
appendix proofs chapter proof theorem 
phi partial ordering ffl reflexive reflexivity phi phi phi phi ffl transitive suppose phi phi phi phi phi phi transitivity phi phi phi phi ffl antisymmetric suppose phi phi phi phi phi phi antisymmetry phi phi phi phi phi phi phi 
phi 
phi suppose follows phi phi phi phi phi follows phi phi phi phi phi 
false phi phi true follows false true 

minimal phi rejected suppose minimal phi phi false phi false 
phi phi phi false 
phi rejected 
suppose phi 
phi phi phi phi false phi phi phi true phi false 
minimal phi 
maximal phi accepted suppose maximal phi true phi true phi phi false 
phi phi phi false phi rejected accepted 
suppose accepted phi phi phi 
phi phi phi false phi true phi phi phi true phi phi 
maximally supported 
proof theorem theorem special case theorem proved 
states belief respect hf special case states belief isomorphic propositional states belief 
state belief phi respect hf accepts precisely phi precisely phi 
proof theorem numeric addition commutative associative 

phi iff iff gamma members satisfy property 
proof theorem function gamma clearly commutative associative 
gamma gamma 
gamma phi iff gamma iff gamma gamma gamma members satisfy property 
proof theorem function max commutative associative 
max max max max max max phi iff max iff max max members satisfy properties 
proof theorem function min commutative associative 
min min min min min min phi iff min iff min min members satisfy properties 
appendix proofs chapter proof theorem delta delta wk preferred meaning delta note integer delta wk empty 
consider state belief phi delta gamma delta wi 
definition phi delta delta 
show delta preferentially entails precisely phi delta accepts accepts default phi delta 
ffl suppose delta preferentially entails follows delta world phi delta 
phi delta minw phi delta 
phi delta phi accepts accepts default 
ffl suppose phi delta minw phi delta 
phi 
phi delta delta preferentially entails appendix proofs chapter formal statements axioms 
axiom phi phi ff phi function ff 
axiom phi phi phi 
axiom phi phi phi 
axiom phi phi phi phi phi phi phi phi 
axiom phi phi phi phi 
axiom phi phi phi phi phi 
axiom phi phi phi appendix proofs chapter lemmas theorem lemma phi 
proof assume phi 
phi phi phi 
lemma rejected phi phi proof definition phi 
phi phi 
lemma phi lemma rejected phi phi 
proof phi phi phi phi phi phi 
phi 
proof theorem 
assume axiom 
phi phi phi phi axiom phi phi ff phi function ff theta lemma phi phi phi phi phi phi phi ff phi assume equation 
phi phi ff phi phi ff phi appendix proofs chapter proof theorem assume axiom 
assume axiom 
choose phi phi 
wi phi phi fw ff ff note phi phi fw 
proposition fw accepted phi fw accepted phi fw phi fw 
ffa 
assume 
suppose accepted rejected phi phi phi 
phi lemma 
phi phi ff phi ff phi accepted phi proof theorem assume axioms 
assume axiom 
choose phi phi 
wi phi phi fw ff ff fw accepted phi phi fw phi ff assume 
suppose accepted phi phi phi 
phi phi phi phi phi phi phi phi ff phi ff phi phi appendix proofs chapter proof theorem assume axioms 
assume axiom 
supports phi phi want show ff phi ff choose phi phi phi phi phi 
wi phi phi fw ff ff wi phi phi fw ff ff note phi fw phi fw phi phi phi axiom phi fw phi phi fw ff phi ff phi ff phi ff equivalent ff phi ff phi assume 
suppose exists phi phi phi phi phi phi phi 
phi phi ff phi phi phi ff phi 
phi phi phi 
proof theorem assume axioms 
assume axiom 
phi 
choose phi phi phi 
phi fw phi phi 
ff phi wi phi phi fw ff ff assume 
suppose phi phi ff phi phi phi 
appendix proofs chapter proof theorem assume axioms 
assume axiom 
suppose ff ff phi state belief phi phi phi phi follows phi phi ff phi ff ff phi ff phi phi axiom phi phi leads phi ff phi phi ff phi ff ff ff ff ff ff assume 
phi phi phi ff phi phi ff phi phi ff phi phi ff phi phi phi 
proof assumes existence state phi say usefully equivalent 
note phi idempotent inverse phi shown exist 
proof theorem assume axioms 
assume phi 
exist phi phi 
construct state belief phi 
wi phi phi fw ff ff phi fw phi fw exist 
axiom phi fw phi ff phi fw ff ff defined 
assume phi phi 
exist phi phi phi 
choose phi 
wi phi phi fw ff ff ff phi fw exists ff phi ff defined 
appendix proofs chapter 
choose phi phi phi phi phi 
wi phi phi fw ff ff ff wi phi phi fw phi phi ff ff observe phi fw phi fw phi phi fw phi fw phi phi axiom phi fw fw phi fw fw ff phi ff phi ff phi ff phi ff phi ff proof theorem ff 
ff ff ff ff 
ff 
ff ff assume phi 
phi ff 
ff ff ff ff ff ff ff ff 
ff ff assume phi 
phi ff 
assuming ff phi ff ff assumption ff ff ff 
phi ff phi ff assume phi phi 
phi assumption phi definition phi phi ff ff definition ffc ff phi ff ff ff phi ff definition phi 
ff ff ff ff assume phi phi 
ff phi ff 
ff ff ff ff ff ff ff ff 
appendix proofs chapter ff ff ff ff assume phi phi 
ff ff ff ff ff ff ff ff 
proof theorem phi phi ff phi phi ff phi ff phi ff phi phi ff phi phi proof theorem 
assume axiom 
suppose want find phi ff phi state belief phi axiom exist phi phi phi phi ff phi phi ff take phi phi ff 
suppose phi ff phi ff defined 
want show phi phi phi phi ff phi 
axiom exist phi phi phi ff phi ff phi ff phi ff phi phi phi phi phi phi phi phi phi appendix proofs chapter assume 
phi need construct state belief psi psi psi phi phi ff denote omega note phi omega phi phi omega ff phi defined 
phi omega 
phi construct psi psi phi omega complete definition psi psi phi psi 
psi ff phi omega 
ff phi omega ff phi psi psi phi 
psi psi ff psi phi omega ff phi psi phi proof theorem proof theorem special case proof theorem 
states belief respect hf special case states belief isomorphic propositional states belief 
state belief phi respect hf accepts precisely phi precisely phi 
proof theorem want show phi delta corresponds delta phi delta ja corresponds delta fag 
want show phi delta gamma delta wi phi delta ja gamma delta fag wi delta wj delta fag wk preferred meanings delta delta fag respectively 
need result carry proof phi delta minw phi delta minw gamma delta wi minw gamma delta wi minw gamma delta fag wi gamma recall integer delta fag wk empty 
follows delta fag wk preferred meaning delta fag 
appendix proofs chapter suppose phi delta gamma delta wi expand phi delta ja 
phi delta ja phi delta fwg gamma phi delta phi delta gamma phi delta 
phi delta gamma gamma 
gamma gamma gamma delta wi 
gamma delta fag wi 
proof theorem phi ff omega defined equal proof theorem phi phi ff phi ff defined phi phi omega phi omega phi omega ff phi omega ff defined omega phi omega phi omega ff phi omega ff defined omega phi omega phi simplification gives phi defined omega phi omega phi proof theorem ff omega suppose ff defined equals definition omega omega ff omega 
omega ff suppose omega defined equals definition omega ff omega ff 
omega 
phi def phi ff omega definition omega 
omega phi def phi ff omega definition omega 
omega phi follows easily definition omega 
phi omega omega phi omega 
assume omega phi omega phi 
omega phi omega omega phi omega ff ff definition ff phi ff phi omega definition omega 
phi omega phi omega phi assumption omega ff phi omega ff defs omega ff omega phi omega 
appendix proofs chapter omega omega omega assumption ff def omega ff omega 
follows proof 
ff ff ff ff assume phi omega 
phi phi phi ff phi ff ff omega ff ff omega ff ff ff ff omega ff ff omega ff ff ff ff ff ff 
omega omega omega omega know omega omega omega omega defined 
proof trivial 
assume 
know omega phi 
know omega omega phi omega 
omega omega assumption omega omega ff omega ff ff ff ff ff omega omega omega omega omega 
follows proof 
omega iff 
omega assumption assumption omega ff assumption omega assumption omega omega 
omega ff omega ff 
assume omega ff defined 
omega ff omega omega omega ff omega omega omega ff omega ff 
appendix proofs chapter omega ff omega ff assume omega phi omega 
follows 
omega omega ff omega ff 
suppose omega 
follows omega phi omega omega phi omega phi omega ff omega 
omega ff omega assumption omega ff omega omega ff omega omega ff omega ff omega omega ff def omega ff 
proof theorem suppose finite elements 
set fa phi bg finite cardinality cardinality fa phi bg 
ffb injective follows cardinality fa ff phi bg equals cardinality fa phi bg 
cardinality fa ff phi bg cardinality fa ff phi bg empty 
follows phi ff omega defined 
proof theorem suppose oe accepted phi rejected phi phi phi phi phi phi 
phi phi ff phi phi ff phi phi phi 
note phi ff phi phi iff phi phi omega phi iff phi phi 
phi phi phi phi phi 
proof theorem oe accepted oe accepted 
rejected theorem phi phi phi phi phi 
proof theorem rejected accepted oe rejected theorem phi phi phi phi phi 
appendix proofs chapter lemma theorem lemma rejected phi phi omega phi phi omega phi proof assume rejected phi phi phi omega phi phi omega phi omega phi phi omega phi omega phi omega phi bijection phi omega phi phi omega phi 
phi omega phi phi omega phi proof theorem suppose oe ci accepted phi 
phi ci phi 
ci phi 
ci ff phi phi 
ci ff phi phi phi 
phi phi ci ff phi phi 
ci phi 
ci phi phi cn gamma cn phi cn gamma omega phi cn gamma cn phi cn gamma cn omega lemma phi cn phi cn gamma omega phi cn gamma cn omega phi cn phi cn gamma phi cn gamma cn omega phi cn phi cn gamma phi phi cn assume phi cn gamma phi cn 
phi cn gamma cn phi cn gamma cn phi cn gamma cn phi cn gamma cn phi cn gamma phi cn 
appendix proofs chapter appendix proofs chapter proof theorem proof induction number nodes causal network 
base case 
network node 
trivial 
inductive step 
suppose causal network hn csi satisfied exactly state belief phi hn fkg cs causal network results augmenting hn csi node cs consistent 
want show causal network hn fkg cs satisfied exactly state belief 
show steps constructing state belief phi 
ii 
showing phi satisfies hn fkg cs 
iii 
showing phi state belief satisfies hn fkg cs 
appendix proofs chapter constructing state belief phi propositions fkg 
construct phi propositions fkg follows ffl phi phi cs pi omega phi 
ffl phi phi phi phi 
ffl phi false 
show phi state belief suffices show phi true phi true phi cs pi omega phi pi mk cs pi omega phi phi omega pi phi omega phi phi state belief fkg 
easy show sentence phi phi 
ii 
showing phi satisfies causal network hn fkg cs 
need show phi pi pi phi pi csi pi fkg 
consider cases case condition follows induction hypothesis 
case phi pi phi pi ff phi pi nj pi phi ff phi pi nj pi cs pi omega phi ff phi pi cs pi omega nj pi phi ff phi pi ics pi omega phi pi ff phi pi cs pi non descendants case 
phi phi phi ff phi ics pi omega phi ff phi cs pi appendix proofs chapter iii 
showing phi state belief satisfies causal network hn fkg cs 
suppose psi state belief fkg psi pi pi psi pi csi pi fkg 
suffices show phi psi equal 
ffl induction hypothesis know phi state belief satisfies phi pi pi phi pi csi pi phi psi disagree complete sentence ffl show phi phi equal need show disagree complete sentence non descendants phi phi omega phi cs pi omega phi psi psi omega psi cs pi omega phi phi psi equal 
proof theorem assume phi phi 
case phi phi ff phi ff phi case phi definition phi case lemma phi ff phi ff phi phi definition phi phi case ii 
phi phi phi assumption phi ff phi phi ff phi definition phi ff phi phi ff phi phi phi definition phi 
appendix proofs chapter proof theorem assume phi phi 
phi 
phi phi assumption phi phi omega phi corollary phi ll phi omega phi summing phi ll phi omega phi phi hll phi omega phi phi phi omega phi def phi phi ff phi phi def omega phi phi definition applicability requires phi omega phi phi phi follows phi omega phi phi phi phi 
proof carried respect phi corollary 
proof theorem assume phi phi 
assumption symmetry decomposition follows phi phi phi phi phi phi ff phi phi ff phi definition phi omega phi phi omega phi corollary ff phi ff phi phi omega phi omega phi ff phi phi ff phi phi omega phi phi omega phi definition phi phi phi 
appendix proofs chapter proof theorem assume phi phi 
phi 
phi phi assumption phi phi assumption phi phi phi 
proof theorem assume phi phi consider phi phi phi assumption phi phi assumption phi phi phi ff phi phi definition phi ff phi phi phi ff phi ll phi summing phi ff phi phi phi phi phi 
property requires phi holds phi attributes false 
proof carried respect phi corollary phi 
appendix proofs chapter proof theorem verma verma shown 
constructed phi pi pi node 
phi satisfies axioms phi 
appendix proofs chapter proof theorem path node part 
path node linear arrows belongs separates proof theorem path node part 
path node diverging arrows 
separates proof theorem path node node part belongs path node linear diverging arrows belongs separates proof theorem path node part 
path node converging arrows belong descendents 
separates appendix proofs chapter proof theorem phi pi ffi phi ffii ffii 
phi ffii ffii 
omega phi ffii phi ffii 
omega phi ffii theorem omega ssi proof theorem phi ffii 
phi iffi ffii iffi phi ffii theorem iffi proof theorem phi ffii pi phi ffii pi pi phi ffii pi omega phi ffii pi pi phi pi omega phi ffii pi theorem pi phi pi omega phi pi ffii pi phi pi omega pi phi ffii theorem pi cs pi omega pi ssj proof theorem proof ffii observation nodes connected node incoming arcs arc observed phi mi pi phi pi mi pi phi ffii 
ffii pi ffii 
ffii mi pi phi ffii pi ffii 
omega phi ffii pi omega phi ffii pi mi pi phi ffii 
omega phi ffii pi omega phi ffii pi theorem mi pi phi ffii 
omega phi pi omega phi ffii pi theorem mi pi phi ffii 
omega phi pi omega phi ffii pi theorem mi pi phi ffii 
omega phi pi omega phi pi jj ffii mi pi phi ffii 
omega phi pi omega pi jj phi ffii theorem mi pi omega csj pi omega pi jj ssl observed node phi phi phi phi follows way auxiliary nodes created 
ffi ffi appendix proofs chapter proof theorem observations ffi decomposed observations ffl ffii observation nodes connected arc ffl ffik observation nodes connected arc updated support bli closely related parental support bli phi ffi phi ffi phi ffii ffik phi ffii ffik ssi phi ffik phi ffik ssi equals bli ffii true 
ssi ssi omega proof theorem show sso sn sn connected undirected path length implies number non empty states backward propagation maximal length path node node 
proof induction case ig ig clear connected path length 
case suppose sso sn gamma sn gamma connected undirected path length gamma 
consider members sn sn ssk sn gamma sn gamma sn gamma ssj sn gamma case ssj sn ssk sn gamma sn gamma 
connected path length gamma connected path length case sn sn gamma ssj sn gamma 
connected path length gamma connected path length sso sn sn connected undirected path length appendix proofs chapter proof theorem show ssp sn sn connected boundary node undirected path length implies number non empty states forward propagation maximal length path causal network 
proof induction case root node child kg leaf node parent jg ssj connected boundary node undirected path length 
furthermore connected boundary node undirected path length 
case suppose ssp sn gamma sn gamma connected boundary node undirected path length gamma 
consider members sn sn ssj ssp ng ssq ng case ssj sn ssj ssp ssp belongs sn gamma ssj connected boundary node path length gamma connected boundary node path length case sn ssq ssq belongs sn gamma connected boundary node path length gamma connected boundary node path length ssp sn sn connected boundary node undirected path length appendix proofs chapter proof theorem logical conjunction commutative associative 
phi precisely phi precisely true member satisfying true false member satisfying false false 
represent sentences models objection summation set intersection objection order zero objection set models full objection empty set 
observations simplify proofs 
appendix proofs chapter proof theorem know ho partial support structure 
need show support scaling function 
represent objections models objection scaling set difference argument full set 
proof assume objections represented models 

follows directly definition 
follows directly definition 
phi 
assume 
vice versa 
set difference satisfies 
phi phi 
follows 
set difference satisfies phi phi 
case case set difference satisfies 
phi defined 
trivial defined objection calculus 
phi 
trivial 
set difference satisfies 
phi phi phi 
trivial 
set difference satisfies 
phi phi ff phi ff defined phi phi 
oe oe ae set supports finite follows theorem support structure bijective 
appendix proofs chapter proof theorem want show precisely phi 
suppose objections represented models 
want show precisely 
assume 
case 

case 
assume 
case 

case 

proof theorem 
assume win phi phi ff phi phi ff phi phi phi phi phi phi phi 
assume phi phi phi suppose phi ff phi 
need show phi ff phi 
equivalent phi ff phi phi equivalent phi phi phi true supposition 
proof theorem assume win phi phi phi phi phi phi phi phi phi phi conclude phi phi phi phi phi 
phi phi phi phi phi phi phi 
appendix proofs chapter proof theorem assume win phi phi phi phi phi phi phi phi phi phi phi phi phi 
win phi 
proof theorem assume win phi phi phi phi phi phi phi phi phi phi 
decomposition win phi phi phi phi 
phi phi phi win phi 
proof theorem assume win phi win phi phi phi phi phi phi phi substituting phi second equation phi phi phi phi 
phi phi phi phi phi 
win phi 
proof theorem proof induction number nodes causal network 
base case 
network node 
trivial 
inductive step 
network node 
suppose 
hl soi obtained adding node causal network hl 

network hl satisfied exactly state belief phi 
show network hl soi satisfied exactly state belief 
showing hl soi satisfied state belief 
primitive propositions languages respectively 
construct mapping phi 
phi phi pi pi 
phi phi phi 

phi false true 
show phi state belief show satisfies hl soi 
show phi state belief need show phi true false 
phi true phi phi kj pi phi pi pi phi pi phi pi pi phi pi pi appendix proofs chapter phi false show phi phi agree sentence entail show phi satisfies hl soi need show win phi pi pi phi pi soi pi phi pi consider cases case condition equivalent win phi pi pi phi pi pi phi pi follows induction hypothesis 
case condition equivalent win phi pi pi phi pi pi phi pi show phi pi pi phi pi phi pi pi phi pi pi phi pi pi phi pi phi pi pi phi pi show win phi pi pi suffices show phi pi phi pi phi pi phi pi pi phi pi phi pi phi phi pi phi showing hl soi satisfied exactly state belief 
suppose state belief psi satisfies hl soi 
psi agree phi phi sentence entail follows 
phi state belief satisfies portion hl soi including node 
psi agree phi sentences entail 
phi agrees phi sentences entail show psi completely agrees phi show psi phi phi pi phi pi pi psi pi psi pi psi psi pi psi psi psi phi equal 
appendix proofs chapter proof theorem phi objection state belief primitive propositions 
total order propositions construct wob causal network hl soi ffl parents node nodes 
gamma 
ffl soi pi phi pi phi pi true true 
clear hl soi wob causal network 
satisfied exactly state belief 
show phi satisfies hl soi 
definition phi pi soi pi phi pi second definition non descendents node parents pi 
phi phi phi phi pi phi pi win phi pi pi phi satisfies hl soi 
proof theorem verma verma shown 
constructed win phi pi node 
win phi satisfies axioms win phi 
proof theorem proof observations 
observation ffii decomposed observations parents 
observation associated parent denoted ffii nodes connected arc 
theorem parents node observed node weakly independent nodes connected incoming arcs 

theorem nodes connected incoming arc weakly independent nodes connected incoming arc phi ffii pi phi ffi pi pi phi pi phi ffii pi theorem pi phi pi phi pi ffii pi phi pi pi phi ffii theorem pi pi pi appendix proofs chapter proof theorem phi ffi equals phi ffii 
true phi ffi equals phi ffii 
equals suppressed proved jffi proof depend 
proof theorem proof observations 
observation ffi decomposed observations children 
observation associated child denoted ffii nodes connected arc 
theorem node observed nodes connected outgoing arc weakly independent nodes connected outgoing arc phi ffii 
phi iffi ffii iffi phi ffii theorem iffi proof theorem proof observations 
node observed observation ffii decomposed observations 
observation denoted ffik nodes second observation denoted ffik nodes connected incoming arcs 
node observed observation ffik decomposed gamma observations parents 
observation associated parent denoted ffik nodes connected arc 
theorem node observed nodes weakly independent nodes 
theorem parents node observed node weakly independent nodes connected incoming arcs 

theorem nodes connected incoming arc weakly independent nodes connected incoming arc appendix proofs chapter node observed phi ffii phi ffii phi ffik 
ffik phi ffik 
phi ffik theorem phi ffik 
pi phi pi ffik phi ffik 
pi phi pi phi pi ffik theorem phi ffik 
pi phi pi phi pi ffik phi theorem phi ffik 
pi phi pi phi pi ij ffik phi phi ffik 
pi phi pi pi ij phi ffik phi theorem pi pi pi ij phi phi ffii pi pi pi jj node observed ffii phi ffii phi ffii phi false ffi phi true ffi proof theorem proof observations 
observation ffi decomposed observations 
observation denoted ffii nodes second observation denoted ffii nodes decomposition possible node observed 

theorem state node observed nodes weakly independent nodes phi ffi phi ffii 
ffii phi ffii 
phi ffii theorem 
appendix proofs chapter appendix proofs chapter notational conventions languages constructed disjoint sets propositional symbols sigma omega members sigma denoted oe oe oe members omega denoted 
sentences denoted sentences denoted ff fi fl 
delta denotes sentences propositional language sigma omega sigma omega induce sets truth assignments sigma omega members sigma denoted lt lt lt members omega denoted ot ot ot 
composite truth assignment pair lt ot 
overload symbols lt ot lt denotes sentence satisfied lt ot denotes sentence satisfied ot appendix proofs chapter proof theorem 
assume prime implicant label delta consistent delta 
label delta 

label delta 

delta 
suppose result removing literals label delta contradiction assumption 

label delta delta delta oe 
conjunctive clause delta oe delta 
label delta contradiction assumption 


delta belongs minimal support respect delta assume belongs minimal support respect delta 

delta oe 
delta oe 
delta 

delta oe delta label delta follows definition label delta 

conjunctive clause label delta 
delta contradiction assumption 

delta prime implicant label delta consistent delta appendix proofs chapter lemma satisfiable exists lt 
lt 
phi phi lt satisfiable 
proof lemma suppose lt lt phi phi lt 
phi lt phi lt phi 
contradiction definition phi phi phi false 
lemma lt ot delta phi precisely ot phi lt 
proof lemma 
suppose lt ot delta phi phi lt oe lt delta phi lt ot phi lt oe lt lt ot phi lt lt ot phi lt 
suppose lt ot phi lt 
show lt ot phi oe phi oe delta phi case lt lt ot phi oe case lt definition phi phi phi lt phi lt phi 
ot phi lt ot phi lt ot phi oe appendix proofs chapter lemma ot phi exists lt 
lt 
ot phi lt 
proof lemma suppose ot phi 
satisfiable 
unsatisfiable definition phi phi true phi false 
contradiction supposition 
suppose lt lt ot phi lt 
ot lt phi lt phi 
contradiction premise lemma ot phi 
proof theorem definition delta phi delta phi phi oe delta phi phi suppose delta phi ff show ff phi 
suppose ff phi 
establish contradiction 
case ff false ff phi 
contradiction 
case ff false supposition ff phi satisfiable exists ot ot ff phi 
lemma ot phi exist lt lt ot phi lt 
lemma ot phi lt lt ot delta phi lt ot delta phi ff delta phi ff contradiction 
appendix proofs chapter proof theorem suffices show ff false ff delta phi ff satisfiable 
suppose ff false ff exist lt phi lt ff satisfiable 
see suppose ff phi lt lt ff lt phi lt false 
contradiction 
ot model phi lt ff 
lemma lt ot delta phi lt ot delta phi ff 
proof theorem show 
label true delta true 
weakest sentence ff delta ff true clearly true 

label false delta false 
note delta non committal sentences entailed delta valid 
sentences contradictory delta unsatisfiable 
weakest sentence ff delta ff false clearly false 

label delta label delta label delta 
ff fi weakest sentences delta ff delta fi show ff fi weakest sentence delta ff fi suffices show delta fl fl ff fi 
suppose delta fl delta fl delta fl fl ff fl fi fl ff fi 

label delta label delta follows definition label delta depend syntax appendix proofs chapter proof theorem suppose ff conjunction disjunctive clauses belongs prime implicate delta show 
delta ff 

delta ff fi fi ff fi 
delta ff follows easily definition ff 
suppose delta ff fi fi express fi terms prime implicates fi prime implicate fi 
delta fi implicate delta 
prime implicate delta 
belongs 
ff entails entails fi 
proof theorem show phi strongest sentence delta phi phi theorem sentence phi logically weakest delta phi phi phi logically strongest delta phi phi proof theorem phi state belief satisfying cn hl soi 
show delta phi phi oe equivalent delta cn pi soi pi oe suffices show delta phi pi soi pi oe delta cn phi oe definition phi phi pi soi pi phi pi 
delta phi soi pi phi pi oe pi pi soi pi phi pi oe pi soi pi oe suppose complete sentence 
aj pi pi definition phi phi aj pi soi pi delta cn pi oe soi pi aj pi pi oe aj pi soi pi aj pi pi oe aj pi soi pi oe phi phi oe appendix proofs chapter suppose complete sentence 
exist complete sentences equivalent wi ai 
delta cn phi ai oe ai phi ai oe ai phi 
ai oe ai phi oe bibliography aleliunas aleliunas 
new normative theory probabilistic logic 
proceedings 


bonissone bonissone 
summarizing propagating uncertain information triangular norms 
international journal approximate reasoning 
cooper cooper 
computational complexity probabilistic inference bayesian belief networks 
artificial intelligence 
darwiche darwiche adnan 
fuzzy probability calculus 
submitted ieee fuzz 
de kleer de kleer johan mackworth alan reiter raymond 
characterizing diagnoses systems 
artificial intelligence 
doyle doyle jon 
methodological simplicity expert system construction case judgements reasoned assumptions 
shafer glenn pearl judea editors readings uncertain reasoning 
morgan kaufmann publishers san mateo california 

dubois prade dubois didier prade henri 
possibility theory approach computerized processing uncertainty 
plenum press new york 
fagin halpern fagin ronald halpern joseph 
uncertainty belief probability 
proc 
international joint conference artifical intelligence ijcai 

bibliography fine fine terrence 
theories probability 
academic press ginsberg ginsberg matthew 
multivalued logics uniform approach reasoning artificial intelligence 
computational intelligence 
halpern fagin halpern joseph fagin ronald 
views belief belief generalized probabilities belief evidence 
proceedings aaai 
aaai 

horvitz horvitz eric cooper gregory jacques 
bounded conditioning flexible inference decisions scarce resources 
technical report ksl knowledge systems laboratory stanford university 
hunter hunter david 
non monotonic reasoning reversibility belief change 
proceedings seventh conference uncertainty artificial intelligence 

koopman koopman bernard 
axioms algebra intuitive probability 
annals mathematics 
luce suppes tversky 
foundation measurement volume academic press new york 
kraus kraus lehmann magidor 
nonmonotonic reasoning preferential models cumulative logics 
artificial intelligence 
pearl pearl judea 
probabilistic reasoning intelligent systems networks plausible inference 
morgan kaufmann publishers san mateo california 
peot shachter peot mark shachter ross 
fusion propagation multiple observations belief networks 
artificial intelligence 
bibliography polya polya george 
patterns plausible inference 
princeton university press princeton nj 
reiter de kleer reiter ray de kleer johan 
foundations assumption truth maintenance systems preliminary report 
proceedings aaai 
aaai 

rescher rescher nicholas 
valued logic 
mcgraw hill rosser rosser 
valued logic 
north holland amsterdam 
shafer shafer glenn 
mathematical theory evidence 
princeton university press princeton nj 
shenoy shafer shenoy shafer glenn 
axioms probability belief function propagation 
uncertainty artificial intelligence shachter levitt kanal lemmer eds 

shenoy shenoy 
valuation language expert systems 
international journal approximate reasoning 
spohn spohn wolfgang 
ordinal conditional functions dynamic theory epistemic states 
causation decision belief change statistics harper eds 

spohn spohn wolfgang 
general non probabilistic theory inductive reasoning 
kanal shachter levitt lemmer editors uncertainty artificial intelligence 
elsevier science publishers 

srinivas breese srinivas breese jack 
ideal influence diagram evaluation analysis lisp documentation user guide 
technical report rockwell international science center palo alto laboratory 
suermondt cooper suermondt cooper 
updating probabilities multiply connected belief networks 
fourth workshop uncertainty artificial intelligence 

bibliography verma verma 
causal networks semantic expressiveness 
technical report systems laboratory ucla 
walley walley peter 
varieties modal comparative probability 
university international 
zadeh zadeh 
concept linguistic variable application approximate reasoning ii 
information sciences 
zadeh zadeh 
concept linguistic variable application approximate reasoning iii 
information sciences 
