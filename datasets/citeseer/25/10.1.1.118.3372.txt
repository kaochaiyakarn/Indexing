practical network support ip traceback stefan savage david wetherall anna karlin tom anderson department computer science engineering university washington seattle wa usa describes technique tracing anonymous packet flooding attacks internet back source 
motivated increased frequency sophistication denial service attacks difficulty tracing packets incorrect spoofed source addresses 
describe general purpose traceback mechanism probabilistic packet marking network 
approach allows victim identify network path traversed attack traffic requiring interactive operational support internet service providers isps 
traceback performed post mortem attack completed 
implementation technology incrementally deployable backwards compatible efficiently implemented conventional technology 

denial service attacks consume resources remote host network denying degrading service legitimate users 
attacks hardest security problems address simple implement difficult prevent difficult trace 
years internet service attacks increased frequency severity sophistication 
howard reports years number attacks reported computer emergency response team cert increased percent year 
csi fbi survey reports percent respondents detected denial service attacks directed sites 
worrying reports indicate attackers developed tools coordinate distributed attacks separate sites 
unfortunately mechanisms dealing denial service advanced pace 
area focused tolerating attacks mitigating effects victim :10.1.1.41.1733
approach provide effective gap measure eliminate problem discourage attackers 
option focus trace permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
sigcomm stockholm sweden 
copyright acm 
attacks back origin ideally stopping attacker source 
perfect solution problem complicated potential indirection true causal origin attack 
example attack may consist packets sent different slave machines control remote master machine 
indirection may achieved explicitly compromising individual slave hosts directly implicitly sending false requests slaves behalf victim called reflector 
challenging true origin identity attacker similarly concealed chains false computer accounts call forwarding forth 
consequently regard complete solution particularly able address forensic needs law enforcement open problem 
address limited operational goal simply identifying machines directly generate attack traffic network path traffic subsequently follows 
call traceback problem motivated operational need control contain attacks 
setting incomplete approximate information valuable efficacy measures packet filtering improve applied victim closer source 
restricted problem determining source generating attack traffic surprisingly difficult due stateless nature internet routing 
attackers routinely disguise location incorrect spoofed ip source addresses 
packets traverse internet true origin lost victim left little useful information 
ad hoc traceback techniques significant drawbacks limit practical utility current internet 
new approach traceback problem addresses needs victims network operators 
solution probabilistically mark packets partial path information arrive routers 
approach exploits observation attacks generally comprise large numbers packets 
marked packet represents sample path traversed combining modest number packets victim reconstruct entire path 
allows victims locate approximate source attack traffic requiring assistance outside network operators 
determination attack completed 
facets solution represent substantial improvements existing capabilities dealing flooding style denial service attacks 
key practical deployment issue modification internet routers ensure mechanisms efficiently implementable may incrementally deployed backwards compatible existing infrastructure 
describe traceback algorithm adds little overhead router critical forwarding path may incrementally deployed allow traceback subset routers supporting scheme 
demonstrate encode necessary path information way exists existing routers host systems today traffic 
rest organized follows section describe related concerning ip spoofing solutions traceback problem 
section outlines basic approach section characterizes algorithms implementing 
section detail concrete encoding strategy algorithm implemented current internet environment 
experimental results demonstrating effectiveness solution 
section discuss main limitations weaknesses proposal potential extensions address 
summarize findings section 
related long understood ip protocol permits anonymous attacks 
tcp ip weaknesses morris writes weakness scheme internet protocol source host fills ip source host id provision 
tcp ip discover true origin packet addition denial service attacks ip spoofing conjunction vulnerabilities implement anonymous way tcp channels covert port scanning :10.1.1.126.7059:10.1.1.126.7059
efforts reduce anonymity afforded ip spoofing 
table provides subjective characterization approaches terms management cost additional network load overhead router ability trace multiple simultaneous attacks ability trace attacks completed reactive 
characterize proposed traceback scheme criteria 
remainder section describe previous approach detail 
ingress filtering way address problem anonymous attacks eliminate ability forge source addresses 
approach frequently called ingress filtering routers block packets arrive illegitimate source addresses 
requires router sufficient power examine source address packet sufficient knowledge distinguish legitimate illegitimate addresses 
consequently ingress filtering feasible customer networks border internet service providers isp address ownership relatively unambiguous traffic load low 
traffic aggregated multiple isps transit networks longer information unambiguously determine packet arriving particular interface legal source address 
deployed router architectures overhead ingress filter prohibitive high speed links 
principal problem ingress filtering effectiveness depends widespread universal deployment 
unfortunately significant fraction isps majority implement service uninformed discouraged administrative burden potential router overhead complications existing services depend source address spoofing versions mobile ip hybrid satellite communications architectures :10.1.1.125.8274
secondary problem ingress filtering universally deployed customer isp level attackers forge addresses hundreds thousands hosts valid customer network 
clear wider ingress filtering dramatically improve internet robustness denial service attacks 
time prudent assume system traceback technologies continue important 
link testing existing traceback techniques start router closest victim interactively test upstream links determine carry attacker traffic 
ideally procedure repeated recursively upstream router source reached 
technique assumes attack remains active completion trace inappropriate attacks detected fact attacks occur intermittently attacks modulate behavior response traceback prudent assume attacker fully informed 
describe varieties link testing schemes input debugging controlled flooding 
input debugging routers include feature called input debugging allows operator filter particular packets egress port determine ingress port arrived 
capability implement trace follows victim recognize attacked develop attack signature describes common feature contained attack packets 
victim communicates signature network operator frequently telephone installs corresponding input debugging filter victim upstream egress port 
filter reveals associated input port upstream router originated traffic 
process repeated recursively upstream router originating site reached trace leaves isp border administrative control routers 
case upstream isp contacted procedure repeats 
tracing frequently performed manually isps developed tools automatically trace attacks networks 
obvious problem input debugging approach automated tools considerable management overhead 
communicating coordinating network operators multiple isps requires time attention commitment victim remote personnel direct economic incentive provide aid 
appropriate network modern routers ease administrative burden ingress filtering providing functionality automatically check source addresses destination routing tables ip verify unicast reverse path cisco ios 
approach valid route customer symmetric generally border single homed stub networks 
management network router distributed post mortem overhead overhead overhead capability capability reactive ingress filtering moderate low moderate link testing input debugging high low high poor reactive controlled flooding low high low poor poor reactive logging high low high excellent excellent reactive icmp traceback low low low excellent reactive marking low low low excellent reactive table qualitative comparison existing schemes combating anonymous attacks probabilistic marking approach propose 
operators available unwilling assist appropriate technical skills capabilities traceback may slow impossible complete 
controlled flooding burch cheswick developed link testing traceback technique require support network operators 
call technique controlled flooding tests links flooding large bursts traffic observing perturbs traffic attacker 
pre generated map internet topology victim coerces selected hosts upstream route iteratively flooding incoming link router closest victim 
router buffers shared packets traveling loaded link including sent attacker increased probability dropped 
observing changes rate packets received attacker victim infer link arrived 
link testing schemes basic procedure applied recursively upstream router source reached 
scheme ingenious pragmatic drawbacks limitations 
problematic controlled flooding denial service attack exploiting vulnerabilities unsuspecting hosts achieve ends 
drawback unsuitable routine 
controlled flooding requires victim topological map large sections internet addition associated list willing flooding hosts 
burch cheswick note controlled flooding poorly suited tracing distributed denial service attacks link testing mechanism inherently noisy difficult discern set paths exploited multiple upstream links contributing attack 
link testing schemes controlled flooding effective tracing going attack post mortem 
logging approach suggested log packets key routers data mining techniques determine path packets traversed 
scheme useful property trace attack long attack completed 
obvious drawbacks including potentially enormous resource requirements possibly addressed sampling large scale inter provider database integration problem 
unaware commercial organizations fully operational traceback approach logging historically log network network traffic statistics occasion trace ip spoofing attacks upstream provider 
icmp traceback writing new traceback proposal bas emerged explicit router generated icmp traceback messages 
principle idea scheme router sample low probability packets forwarding copy contents special icmp traceback message including information adjacent routers path destination 
flooding style attack victim host messages reconstruct path back attacker 
scheme benefits compared previous ways similar packet marking approach taken 
disadvantages current design complicate 
icmp traffic increasingly differentiated may filtered rate limited differently normal traffic icmp traceback message relies input debugging capability ability associate packet input port mac address arrived available router architectures routers participate difficult positively connect traceback messages participating routers separated non participating router requires key distribution infrastructure deal problem attackers sending false icmp traceback messages 
said believe scheme promising hybrid approaches combining algorithms propose quite effective 

overview burch cheswick mention possibility tracing flooding attacks marking packets probabilistically deterministically addresses routers traverse 
victim uses information marked packets trace attack back source 
approach previously explored depth potential advantages 
require interactive cooperation isps avoids high management overhead input debugging 
controlled flooding require significant additional network traffic potentially track multiple attacks 
logging packet marking trace attacks post mortem long attack stopped 
marking algorithms implemented incurring significant overhead network routers 
remainder focuses fully exploring characterizing approach 
definitions depicts network seen victim purposes may single host attack network border device firewall intrusion detection system represents hosts 
potential attack origin ai leaf tree rooted router ri internal network seen victim attack routers represented ri potential attackers ai 
dotted line represents particular attack path attacker victim 
node path ai attack path ai unique ordered list routers ai instance attack originates reach traverse path shown dotted line 
exact traceback problem determine attack path associated attack origin attacker 
solving problem complicated practical limitations 
exact attack origin may revealed mac source addresses may spoofed attacker may send false signals invent additional routers traceback path 
address issues section restrict discussion solving limited problem 
define approximate traceback problem finding candidate attack path attacker contains true attack path suffix 
call valid suffix candidate path 
example valid approximate solution contains true attack path suffix 
say solution problem robust attacker prevent victim discovering candidate paths containing valid suffix 
marking algorithms components marking procedure executed routers network path reconstruction procedure implemented victim 
router marks packets augmenting additional information path traveling 
victim attempts reconstruct attack path information marked packets 
convergence time algorithm number packets victim observe reconstruct attack path 
basic assumptions design space possible marking algorithms large place context identify assumptions motivate constrain design attacker may generate packet multiple attackers may conspire attackers may aware traced packets may lost reordered attackers send numerous packets route attacker victim fairly stable routers cpu memory limited routers widely compromised 
assumptions represent conservative assessments abilities modern attackers limitations network 
designing traceback system internet environment extremely challenging little trusted 
particular attacker ability create arbitrary packets significantly constrains potential solutions 
router receives packet way tell packet marked upstream router attacker simply forged information 
fact invariant depend packet attacker traverse routers victim 
remaining assumptions reflect basis design deserve additional discussion 
denial service attacks effective long occupy resources victim 
consequently attacks comprised thousands millions packets 
approach relies property mark packet small piece path state victim observe packets reconstruct complete path back attacker 
attacks emerge require single packet disable host ping death assumption may hold note attacks require multiple packets keep machine 
second measurement evidence suggests internet routes change extremely rare packets follow different paths short time scales traceback operation seconds system :10.1.1.125.8274
assumption greatly simplifies role victim limit consideration single primary path attacker 
internet evolves allow significant degrees multi path routing assumption may hold 
third considerable improvements router implementation technology link speeds increased dramatically 
consequently assert viable implementation low packet overhead require flow state 
significantly simpler schemes implemented assume routers resource constrained 
compromised router effectively eliminate information provided upstream routers effectively indistinguishable attacker 
circumstances security violation router addressed traceback attempted 
normal circumstances believe acceptable design point 
non malicious information hiding routing infrastructures popular described issue may need revisited 

basic marking algorithms section describe series marking algorithms starting simple advancing complexity 
algorithm attempts solve approximate traceback problem manner consistent assumptions 
marking procedure router packet append path reconstruction procedure victim packet attacker extract path ri rj suffix ofw node append algorithm 
node append simplest marking algorithm conceptually similar ip record route option append node address packet travels network attacker victim see 
consequently packet received victim arrives complete ordered list routers traversed built attack path 
node append algorithm robust extremely quick converge single packet serious limitations 
principal high router overhead incurred appending data packets flight 
length path known priori impossible ensure sufficient unused space packet complete list 
lead unnecessary fragmentation bad interactions services mtu discovery 
problem solved reserving space attacker completely fill space false misleading path information 
node sampling reduce router overhead packet space requirement sample path node time recording entire path 
single static node field reserved packet header large hold single router address bits ipv 
receiving packet router chooses write address node field probability packets sent victim received sample router attack path 
stated section assume attacker sends packets route stable sampling converge 
impossible reconstruct ordered path unordered collection node samples turns sufficient number trials order deduced relative number samples node 
routers arranged serially probability packet marked router left downstream routers strictly decreasing function distance victim 
constrain identical router probability receiving marked packet router hops away function monotonic distance victim ranking router number samples contributes tend produce accurate attack path 
full algorithm shown 
putting aside moment difficulty changing ip header add bit node field algorithm efficient implement requires addition write checksum update forwarding path 
current high speed routers perform operations efficiently update time live field hop 
algorithm robust single attacker way attacker insert false router path valid suffix contributing marking procedure router packet random number write node path reconstruction procedure victim table tuples node count packet attacker lookup node bl nil increment count insert tuple node bl sort count extract path ri rj ordered node fields node sampling algorithm 
samples downstream router reorder valid routers path contributing samples difference downstream routers 
serious limitations 
inferring total router order distribution samples slow process 
routers far away victim contribute relatively samples especially large random variability easily lead large number samples observed 
instance receiver receive packets average receives single sample furthest router 
guarantee order correct certainty requires times number 
second multiple attackers multiple routers may exist distance sampled sample probability 
technique robust multiple attackers 
edge sampling straightforward solution problems explicitly encode edges attack path simply individual nodes 
need reserve static address sized fields start packet represent routers link additional small field represent distance edge sample victim 
router decides mark packet writes address start field writes zero distance field 
distance field zero indicates packet marked previous router 
case router writes address field representing edge previous router 
router doesn mark packet increments distance field 
somewhat baroque signaling mechanism allows edge sampling incrementally deployed edges constructed participating routers 
mandatory increment critical minimize spoofing attacker 
packet arrives victim distance field represents number hops traversed edge contains marking procedure router packet random number write start distance distance write increment distance path reconstruction procedure victim tree root edges tuples start distance packet attacker distance insert edge start insert edge start distance remove edge distance extract path ri rj enumerating acyclic paths edge sampling algorithm 
sampled 
packets written attacker necessarily distance greater equal length true attack path 
single attacker unable forge edge victim distributed attack course applies closest attacker victim worry chaff reconstructing valid suffix ofthe attack path 
consequently longer sampling rank approach distinguish false samples free arbitrary values marking probability victim uses edges sampled packets create graph leading back source sources attack 
full algorithm described 
probability receiving sample geometrically smaller away victim time algorithm converge dominated time receive sample furthest router expectation router hops away 
small probability receive sample furthest router nearer router 
bound effect factor ln argument conservatively assume samples routers appear likelihood furthest router 
probabilities disjoint probability packet deliver sample router dp known coupon collector problem number trials required select equi probable items ln 
number packets required victim reconstruct path length bounded expectation ln example attack path length important distance field updated saturating addition 
distance field allowed wrap attacker spoof edges close victim sending packets distance value close maximum 
victim typically reconstruct path receiving packets attacker 
choice optimal convergence time overly sensitive parameter path lengths occur internet 
long results generally small constant optimal 
rest paths exceed length 
comparison previous example converges packets algorithm efficiently discern multiple attacks attackers different sources produce disjoint edges tree structure reconstruction 
number packets needed reconstruct path independent number packets needed reconstruct paths linear function number attackers 
edge sampling robust 
impossible edge closer closest attacker spoofed due robust distance determination 
conversely distributed attack means impossible trust contents edge away closest attacker 
icmp traceback approach additional mechanism incorporating shared secret required completely address problem attackers spoofing edges 
course significant practical limitation approach requires additional space ip packet header backwards compatible 
section discuss modified version edge sampling addresses problem albeit cost performance reduction robustness large distributed attacks 

encoding issues edge sampling algorithm requires bits space ip packet bit ip addresses bits distance represent theoretical maximum number hops allowed ip 
possible directly encode values mpls label stack enable traceback single homogeneous isp network 
focus heterogeneous environment purely ip datagrams 
obvious approach store edge sample data ip option poor choice reasons node append algorithm infeasible appending additional data packet flight expensive may sufficient space append data 
send data band separate packet add router network overhead plus complexity new incompatible protocol 
developed modified version edge sampling dramatically reduces space requirement return modest increase convergence time reduction robustness multiple attackers 
analysis algorithm explore practical implementation issues discuss concrete encoding scheme overloading bit ip identification field fragmentation 
solution involving overloading necessarily requires compromises stress solution reflects design point potential implementation tradeoffs class algorithm necessarily reflect optimal balance 
compressed edge fragment sampling techniques reduce packet storage requirements preserving robustness 
encode edge half space representing exclusive xor ip addresses making edge depicted 
routers path victim marked packets path reconstruction victim reconstructed path edge data communicated half space sending xor nodes router ip addresses making edge sending node separately 
time victim receives messages xoring messages original path reconstructed 
address hash address send fragments network router calculates uniform hash ip address startup known function 
hash interleaved original ip address original address odd bits hash bits 
resulting quantity broken fragments router selects randomly marking packet 
shown fragments labeled offset 
downstream router uses offset select appropriate fragment xor encoding part edge 
router decides mark packet writes address packet 
router notices distance field assuming mark packet reads packet xors value address writes resulting value packet 
call resulting value edge id edge edge ids packets received victim contain xor adjacent routers samples routers hop away victim arrive unmodified 
marked packets final router decode previous edge id hop hop reach router 
second modification reduces packet space requirements subdividing edge id number smaller non overlapping fragments 
router decides mark packet selects fragments random stores packet 
additional bits log store offset fragment original address necessary ensure fragments making edge id taken offset 
packets sent attacker victim eventually receive fragments edge ids 
combine fragments network address 
hash address 
hash hash address 
address reject reconstructing candidate edge victim combines fragments produce bit string 
string address portion hash portion extracted 
recalculate hash address portion hash function router 
resulting hash hash portion extracted address accepted valid 
procedure protects accidentally combining fragments different edges 
full ip addresses edge id fragments unique multiple fragments different edge ids may value 
multiple attackers victim may receive multiple edge fragments offset distance 
reduce probability accidentally reconstruct false edge id combining fragments different paths add simple error detection code algorithm 
increase size router address edge id bit interleaving ip address random hash depicted 
described earlier value split fragments fragment selected randomly stored offset downstream routers xor combine fragments offset edge id fragments 
victim constructs candidate edge ids combining combinations fragments distance disjoint offset values 
shown candidate edge id accepted hash portion matches data portion nodes 
increase size hash probability collision reduced 
provide describe full procedure 
expected number packets algorithm converge similar edge sampling approach need fragments edge id just total kd fragments 
assume conservatively fragments delivered equi probably probability expected number packets required path reconstruction bounded ln kd example fragments edge id attacker hops away victim reconstruct full path receiving slightly packets average 
techniques similar show sharp concentration results coupon collectors problem show approximate number packets required ensure path marking procedure router hash number non overlapping fragments packet random number random integer fragment offset write frag write distance write offset distance fragment offset offset write frag frag increment distance path reconstruction procedure victim table tuples frag offset distance tree root edges tuples start distance maxd packet attacker insert frag offset distance distance maxd distance ordered combinations fragments distance construct edge hash insert edge remove edge distance extract path ri rj enumerating acyclic paths compressed edge fragment sampling algorithm 
reconstructed probability ln kdc packets 
completely reconstruct previous path certainty require packets 
service attacks send packets seconds 
explore robustness algorithm respect multiple attackers 
random hash length probability accepting arbitrarily constructed candidate edge id event attackers particular distance worst case may distinct routers 
consequently probability edge id distance accepted incorrectly mk practice number distinct routers smaller portion path closest receiver attackers share significant portions attack path 
offset ver hlen ip header tos total length identification offset time live protocol header checksum source ip address destination ip address distance edge fragment encoding edge fragments ip identification field 
possible combinations fragments worst case 
means distinct routers distance disjoint attack paths resolved errors probability better 
values implementation certainty provided distinct routers distance 
xor function complicates reconstruction combinations xor values tried attack paths diverge 
somewhat mitigated probability propagating error single edge way attacker extremely small resulting edge id xored previous edge id produce correct hash 
significant drawback scheme large number combinations considered multiple attack paths diverge 
combinations computed line large values intractable 
example separate attack paths diverge completely independent edges attacker require roughly combinations considered 
consequently design tension size packet space overhead reduced larger computational overhead robustness benefits smaller ip header encoding allow practical deployment requires overload existing header fields manner minimal impact existing users 
difficult task especially effort require bits space 
believe possible obtain space overloading bit ip identification field 
field currently differentiate ip fragments belong different packets 
describe proposed encoding discuss issues raises 
note issue backwards compatible encoding largely separate traceback algorithms adopt reasonable encoding comes light 
depicts choice partitioning identification field offset bits represent possible fragments bits represent distance bits edge fragment 
bit hash doubles size router address bits 
implies separate fragments needed represent edge fragment indicated unique offset value 
bits sufficient represent hops internet paths 
reader note layout chosen allow highest performance software implementation algorithm low packet router overhead 
common case modification packet increment distance field 
alignment packet increment precisely offsets required decrement time live field implemented router 
consequently header checksum need altered header manipulation overhead lower current software routers simply addition distance field decrement ttl field comparison check overflowed 
worst case algorithm read ip identification field lookup edge fragment xor fold write back existing checksum update procedure alu operations 
course modern asic routers optimizations unnecessary 
reuse ip identification field address issues backwards compatibility ip fragment traffic 
ultimately perfect solution problem forced compromises disadvantage fragmented traffic 
fortunately measurements suggest packets fragmented 
long understood network layer fragmentation detrimental performance modern network stacks implement automatic mtu discovery prevent fragmentation regardless underlying media 
consequently believe encoding interoperate seamlessly existing protocol implementations vast majority cases 
small real fraction legitimate traffic fragmented wish ensure affected modifications extent possible 
normally packet fragmented identification field copied fragment receiver faithfully reassemble fragments original packet 
marking procedure violate property ways writing different values identification fields fragments datagram writing values identification fields fragments different datagrams 
problems different challenges different solutions 
datagram may fragmented upstream marking router 
fragment subsequently marked fragments datagram marked consistently reassembly may fail data may corrupted 
simplest solution problem simply mark fragments adversary quickly learn evade traceback exploiting limitation 
fact current denial service attacks ip fragments exploit errors host ip reassembly functions 
propose alternative marking mechanism fragments 
separate marking probability fragments 
reasonable turn marking routers directly connected attacking host core routers 
reduces convergence time increases reach distance field 
number packets th percentile mean median path length experimental results number packets needed reconstruct paths varying lengths 
marking probability set path length result represents results independent simulation runs 
decide mark fragment prepend new icmp echo reply header full edge data truncating tail packet 
icmp packet considered marked distance field set zero guaranteeing distance field reflects number edges traversed way victim 
packet consequently lost standpoint receiver edge information delivered way impact legacy hosts 
full edge sampling algorithm order magnitude smaller achieve convergence time 
solution increases loss rate fragmented flows somewhat substantially longer paths preserves integrity data flows 
insidious problem fragmentation occurs downstream marking router 
marked packet fragmented fragments lost remaining fragments may linger victim reassembly buffer extended period 
packets marked router ip identification value consequently may incorrectly reassembled previous fragments 
possibility leave problem dealt higher layer checksums 
higher layer protocols employ checksums case dangerous rely checksums typically designed low residual error rates 
solution set don fragment flag marked packet 
rare paths require fragmentation solution degrade communication hosts mtu path discovery may filter marked packets reduced mtu edge close victim lead data corruption 
experience implemented marking reconstruction portions algorithm tested simulator creates random paths originates attacks 
graph mean median th percentile number packets required reconstruct paths varying lengths random test runs length value 
assume marking probability note convergence time theoretically exponential path length lines appear linear due finite path length appropriate choice marking probability 
see paths resolved packets longest paths resolved high likelihood packets 
put numbers context flooding style denial service attacks send hundreds thousands packets second 
analytic bounds described earlier conservative experience higher experimental results 

limitations number limitations loose ends approach 
discuss important backwards compatibility distributed attacks path validation approaches determining attack origin 
backwards compatibility ip header encoding described practical limitations 
negatively impacts users require fragmented ip datagrams currently incompatible parts ipsec authentication header provides cryptographic protection identification field field safely modified routers 
problems hardly unique traceback inherent limitations come attempting coexist opt protocol features anticipate new 
way address issue originally proposed john selectively enable traceback support response operational needs 
request traceback particular network encoded bgp attribute network route advertisement 
routers receiving advertisement enable traceback support packets destined network 
network requesting support presumably suffering attack minor service degradation fragmented authenticated flows acceptable 
scheme address implementation ipv proposed successor ipv identification field 
attempt propose complete encoding believe techniques proposed employed ipv overloading bit flow label field modifications result roughly factor increase number packets required reconstruct path 
distributed attacks large distributed attacks practical implementation described serious limitations due difficulty correctly grouping fragments 
consequently probability edge amount state needed evaluate decision increases quickly fan attack 
significant designing alternative encoding methods scale robustness receive data 
path validation number packets sent attacker unmarked intervening routers 
victim differentiate packets genuine marked packets 
attacker insert fake edges carefully manipulating identification fields packets sends 
distance field prevents attacker spoofing edges victim call valid suffix prevents attacker spoofing extra edges past true attack path 
ways identify valid suffix path generated reconstruction procedure 
minimal knowledge internet topology differentiate routers belong transit networks isps belong stub networks enterprise networks 
generally speaking valid path enter stub network continue transit network 
simple testing tools traceroute enable victim determine networks fact connect 
advanced network maps resolve issue increasing number cases :10.1.1.36.6532:10.1.1.36.6532
general mechanism provide router secret sent marked packet single unallocated bit ip flags field 
victim wants validate router path contacts associated network possibly band telephone mail obtains secret router time attack 
guard replay secret time varying hashed packet contents 
attacker know router secret able include proper bit forged edge id fragments 
eliminating edge ids secret constituent fragments validated prune candidate attack path include valid suffix 
attack origin detection ip level traceback algorithm important part solution stopping denial service attacks means complete solution 
algorithm attempts determine approximate origin attack traffic particular earliest traceback capable router involved forwarding attack traffic source directly generated 
mentioned earlier number reasons may differ true source attack attackers hide true identities laundering attacks third parties indirectly smurf attacks dns reflectors directly compromised stepping stone machines ip ip tunnels 
ongoing attackers intermediate hosts significant challenges developing generally applicable universally deployable solution problem 
interesting possibility enabled packet marking approach extend traceback laundering points 
example identifying marks copied dns request packet associated dns reply allowing victim trace full causal path 
absence laundering approach reveal actual host originating attack 
hosts forge ip source address mac address origin packet may explicitly visible 
shared media fddi rings problem solved explicit testing 
point point media input port packet arrives frequently determine true origin 
media may mac address cell number channel hint help locate attack origin 
principle algorithm modified report information occasionally marking packets special edge id representing link router input port packet arrived hint information 
explored design feature depth 
traceback effective finding source attack traffic necessarily attacker 
stopping attack may sufficient eliminate immediate problem long term may require legal remedy forensic means determine attacker identity 
perfect traceback support unambiguously identifying sufficiently skilled paranoid attacker require cooperation law enforcement telecommunications organizations 

argued denial service attacks motivate development improved traceback capabilities explored traceback algorithms packet marking network 
shown class algorithm best embodied edge sampling enable efficient robust multi party traceback incrementally deployed efficiently implemented 
developed variant algorithms sacrifice convergence time robustness reduced packet space requirements 
suggested potential deployment strategy algorithm overloading existing ip header fields demonstrated implementation capable fully tracing attack having received packets 
believe solution represents valuable step automated network wide traceback facility 
areas remain addressed combination widely distributed attacks points indirection reflectors 
acknowledgments benefited conversations different people far acknowledged completely 
particularly bill cheswick hal burch early access area sean kc claffy access packet trace data alec wolman help pardyak mike swift neil spring bartels robert grimm geoff voelker commenting early drafts constructive feedback john robert stone jeff mogul robert moskowitz greg tony li curtis steve countless 
anonymous reviewers vern paxson craig partridge efforts 

baker 
requirements ip version routers 
rfc june 
banga druschel mogul 
resource containers new facility resource management server systems 
proceedings usenix acm symposium operating system design implementation pages feb 
bellovin :10.1.1.126.7059
security problems tcp ip protocol suite 
acm computer communications review apr 
bellovin 
icmp traceback messages 
internet draft draft bellovin txt mar 
braden 
requirements internet hosts communication layers 
rfc oct 
burch cheswick 
tracing anonymous packets approximate source 
unpublished dec 
carter crovella 
dynamic server selection dynamic path characterization wide area networks 
proceedings ieee infocom conference kobe japan apr 
cheswick burch 
internet mapping project 
cm bell labs com ches map index html 
cisco systems 
configuring tcp intercept prevent denial service attacks 
cisco ios documentation dec 
claffy 
sampled measurements june december ames inter exchange point 
personal communication jan 
computer emergency response team 
cert advisory ca denial service attack pings 
www cert org advisories ca 
ping html dec 
computer emergency response team 
cert advisory ca ip denial service attacks 
www 
cert org advisories ca smurf html dec 
computer emergency response team 
cert advisory ca smurf ip denial service attacks 
www cert org advisories ca 
smurf html jan 
computer emergency response team 
cert advisory ca denial service developments 
www cert org advisories ca html jan 
computer emergency response team 
cert incident note denial service attacks nameservers 
www cert org incident notes html apr 
computer security institute federal bureau investigation 
csi fbi computer crime security survey 
computer security institute publication mar 
cooperative internet data analysis 
skitter analysis 
www caida org tools skitter summary 
deering 
internet protocol version ipv 
rfc dec 
feller 
probability theory applications nd edition volume 
wiley sons 
ferguson 
network ingress filtering defeating denial service attacks employ ip source address spoofing 
rfc jan 

isps 
wired news www wired com news news technology story html jan 
goldberg 
freedom network architecture protocols 
zero knowledge systems white nov 
govindan tangmunarunkit 
heuristics internet map discovery 
proceedings ieee infocom conference tel aviv israel mar 
heberlein bishop :10.1.1.36.6532
attack class address spoofing 
national information systems security conference pages baltimore md oct 
howard 
analysis security incidents internet 
phd thesis carnegie mellon university aug 
karn simpson 
session key management protocol 
rfc mar 
kent mogul 
fragmentation considered harmful 
proceedings acm sigcomm conference pages stowe vt aug 
kent atkinson 
security architecture internet protocol 
rfc nov 
meadows 
formal framework evaluation method network denial service 
proceedings ieee computer security foundations workshop italy june 
mogul deering 
path mtu discovery 
rfc nov 
morris 
weakness bsd unix tcp ip software 
technical report computer science bell labs feb 
paxson :10.1.1.125.8274
routing behavior internet 
ieee acm transactions networking oct 
perkins :10.1.1.125.8274
ip mobility support 
rfc oct 
postel 
internet protocol 
rfc sept 
reed syverson goldschlag 
anonymous connections onion routing 
ieee journal selected areas communications may 
rosen rekhter farinacci li 
mpls label stack encoding 
internet draft draft ietf mpls label txt expires march sept 
sager 
security fun 
presentation internet working group nov 
spatscheck peterson 
defending denial service attacks scout 
proceedings usenix acm symposium operating system design implementation pages feb 
staniford chen heberlein 
holding intruders accountable internet 
proceedings ieee symposium security privacy pages oakland ca may 
stoica zhang 
providing guaranteed services flow management 
proceedings acm sigcomm conference pages boston ma aug 
stone 
ip overlay network tracking dos floods 
appear proceedings usenix security symposium denver july 
rothermel 
dynamic distance maps internet 
proceedings ieee infocom conference tel aviv israel mar 

personal communication feb 
vivo carrasco isern vivo 
review port scanning techniques 
acm computer communications review apr 
zhang paxson 
stepping stone detection 
appear proceedings usenix security symposium denver july 
