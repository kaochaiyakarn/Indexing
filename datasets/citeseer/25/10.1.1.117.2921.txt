performance comparison multi hop wireless ad hoc network routing protocols josh broch david maltz david johnson yih chun hu jetcheva ad hoc network collection wireless mobile nodes dynamically forming temporary network existing network infrastructure centralized administration 
due limited transmission range wireless network interfaces multiple network hops may needed node exchange data network 
years variety new routing protocols targeted specifically environment developed little performance information protocol realistic performance comparison available 
presents results detailed packet level simulation comparing multi hop wireless ad hoc network routing protocols cover range design choices dsdv tora dsr aodv 
extended ns network simulator accurately model mac physical layer behavior ieee wireless lan standard including realistic wireless transmission channel model results simulations networks mobile nodes 
areas little communication infrastructure existing infrastructure expensive inconvenient wireless mobile users may able communicate formation ad hoc network 
network mobile node operates host router forwarding packets mobile nodes network may direct wireless transmission range 
node participates ad hoc routing protocol allows discover multi hop paths network node 
idea ad hoc networking called networking mobile nodes network dynamically establish routing form network fly examples possible uses ad hoc networking include students laptop computers participate interactive lecture business associates sharing information meeting soldiers relaying information situational awareness battlefield emergency disaster relief personnel coordinating efforts hurricane earthquake 
supported part national science foundation nsf career award ncr air force materiel command afmc darpa contract number foundation special purpose science engineering 
david maltz supported ibm cooperative fellowship yih chun hu supported nsf graduate fellowship 
views contained authors interpreted necessarily representing official policies endorsements express implied nsf afmc darpa foundation ibm carnegie mellon university government 
appear proceedings fourth annual acm ieee international conference mobile computing networking mobicom october dallas texas usa 
copyright acm 
computer science department carnegie mellon university pittsburgh pa www monarch cs cmu edu different protocols proposed solve multihop routing problem ad hoc networks different assumptions intuitions 
little known actual performance protocols attempt previously directly compare realistic manner 
provide realistic quantitative analysis comparing performance variety multi hop wireless ad hoc network routing protocols 
results detailed simulations showing relative performance proposed ad hoc routing protocols dsdv tora dsr aodv :10.1.1.20.5356:10.1.1.113.555:10.1.1.129.426
enable simulations extended ns network simulator include node mobility 
realistic physical layer including radio propagation model supporting propagation delay capture effects carrier sense 
radio network interfaces properties transmission power antenna gain receiver sensitivity 
ieee medium access control mac protocol distributed coordination function dcf 
results simulations ad hoc network wireless mobile nodes moving communicating 
analyze performance protocol explain design choices account performance 
simulation environment ns discrete event simulator developed university california berkeley vint project 
provides substantial support simulating tcp protocols conventional networks provides support accurately simulating physical aspects multi hop wireless networks mac protocols needed environments 
berkeley released ns code provides support modeling wireless lans code studying multi hop ad hoc networks support notion node position spatial diversity nodes collision domain model directly connected nodes 
section describe modifications ns allow accurate simulation mobile wireless networks 
physical data link layer model accurately model attenuation radio waves antennas close ground radio engineers typically model attenuates power signal short distances distance antennas longer distances 
crossover point called distance typically meters outdoor low gain antennas ground plane operating ghz band 
practice signal propagation model combines free space propagation model ray ground reflection model 
transmitter distance receiver free space model signal attenuates outside distance ground reflection model signal falls mobile node position velocity moves topography specified digital elevation map flat grid 
position mobile node calculated function time radio propagation model calculate propagation delay node determine power level received signal mobile node 
mobile node wireless network interfaces interfaces type mobile nodes linked single physical channel 
network interface transmits packet passes packet appropriate physical channel object 
object computes propagation delay sender interface channel schedules packet reception event 
event notifies receiving interface bit new packet arrived 
time power level packet received compared different values carrier sense threshold receive threshold 
power level falls carrier sense threshold packet discarded noise 
received power level carrier sense threshold receive threshold packet marked packet error passed mac layer 
packet simply handed mac layer 
mac layer receives packet checks insure receive state presently idle receiver idle things happen 
power level packet received db greater received power level new packet assume capture discard new packet allow receiving interface continue current receive operation 
collision occurs packets dropped 
mac layer idle incoming packet passed network interface simply computes transmission time packet schedules packet reception complete event 
event occurs mac layer verifies packet error free performs destination address filtering passes packet protocol stack 
medium access control link layer simulator implements complete ieee standard medium access control mac protocol distributed coordination function dcf order accurately model contention nodes wireless medium 
dcf similar maca macaw designed physical carrier sense virtual carrier sense mechanisms reduce probability collisions due hidden terminals 
transmission unicast packet preceded request send clear send rts cts exchange reserves wireless channel transmission data packet 
correctly received unicast packet followed acknowledgment ack sender retransmits packet limited number times ack received 
broadcast packets sent virtual physical carrier sense indicate medium clear preceded rts cts acknowledged recipients 
address resolution routing protocols operate network layer ip addresses implementation arp modeled bsd unix implementation included simulation resolve ip addresses link layer addresses 
broadcast nature arp request packet section interaction arp demand protocols section arp important detail simulation 
packet buffering node queue packets awaiting transmission network interface holds packets managed drop tail fashion 
demand routing protocol tora dsr aodv buffer separately additional packets awaiting discovery route network 
ad hoc network routing protocols studied section briefly describe key features dsdv tora dsr aodv protocols studied simulations 
describe particular parameters chose implementing protocol 
protocols carefully implemented specifications published april clarifications issues designers protocol experimentation 
particular process implementing protocol analyzing results early simulation runs discovered modifications protocol improved performance 
key improvements protocol highlighted respective protocol descriptions 
improvements protocols prevent synchronization periodic broadcasts packets sent response reception broadcast packet jittered random delay uniformly distributed milliseconds 
insure routing information propagated network timely fashion routing packets sent queued transmission head network interface transmit queue packets arp data inserted interface transmit queue 
protocols link breakage detection feedback mac layer indicated packet forwarded hop exception dsdv explained section 
destination sequenced distance vector dsdv dsdv hop hop distance vector routing protocol requiring node periodically broadcast routing updates :10.1.1.113.555
key advantage dsdv traditional distance vector protocols guarantees loop freedom 
basic mechanisms dsdv node maintains routing table listing hop reachable destination 
dsdv tags route sequence number considers route favorable greater sequence number routes equal sequence numbers lower metric 
node network advertises monotonically increasing sequence number 
node decides route destination broken advertises route infinite metric sequence number greater sequence number route broken making odd sequence number 
causes node routing packets incorporate infinite metric route routing table node hears route higher sequence number 
implementation decisions link layer breakage detection mac protocol obtaining dsdv data implementing protocol performance significantly worse link layer breakage detection 
reason neighbor node detects link broken broadcast triggered route update containing infinite metric sequence number triggered update greater sequence number broadcast highest sequence number existing network node hears update record infinite metric destination propagate table constants dsdv sq simulation 
periodic route update interval periodic updates missed link declared broken initial triggered update weighted settling time weighted settling time weighting factor route advertisement aggregation time maximum packets buffered node destination information 
renders node unreachable nodes network broadcasts newer sequence number periodic update 
send update soon learns infinite metric propagated large numbers packets dropped 
implementation uses full incremental updates required protocol description 
published description dsdv ambiguous specifying triggered updates sent :10.1.1.113.555
interpretation receipt new sequence number destination cause triggered update 
call approach dsdv sq sequence number 
advantage approach broken links detected routed new sequence numbers propagate broken link create alternate routes 
second interpretation call simply dsdv receipt new metric cause triggered update receipt new sequence number sufficiently important incur overhead propagating triggered update 
implemented dsdv sq dsdv dsdv sq expensive terms overhead provides better packet delivery ratio cases 
second scheme dsdv conservative terms routing overhead link breakages detected quickly data packets dropped 
results dsdv sq exception section compares dsdv 
table lists constants dsdv sq simulation 
temporally ordered routing algorithm tora tora distributed routing protocol link reversal algorithm :10.1.1.20.5356:10.1.1.20.5356
designed discover routes demand provide multiple routes destination establish routes quickly minimize communication overhead localizing algorithmic reaction topological changes possible 
route optimality shortest path routing considered secondary importance longer routes avoid overhead discovering newer routes 
actions taken tora described terms water flowing downhill destination node network tubes models routing state real network 
tubes represent links nodes network junctions tubes represent nodes water tubes represents packets flowing destination 
node height respect destination computed routing protocol 
tube nodes blocked water longer flow height set height greater remaining neighbors water flow back nodes routing packets destination 
basic mechanisms node network logically separate copy tora run destination 
node needs route particular destination broadcasts query packet containing address destination requires route 
packet propagates network reaches destination intermediate node having route destination 
recipient query broadcasts update packet listing height respect destination 
packet propagates network node receives update sets height value greater height neighbor update received 
effect creating series directed links original sender query node initially generated update 
node discovers route destination longer valid adjusts height local maximum respect neighbors transmits update packet 
node neighbors finite height respect destination node attempts discover new route described 
node detects network partition generates clear packet resets routing state removes invalid routes network 
tora layered top imep internet manet encapsulation protocol required provide reliable order delivery routing control messages node neighbors plus notification routing protocol link neighbors created broken 
reduce overhead imep attempts aggregate tora imep control messages imep refers objects single packet object block transmission 
block carries sequence number response list nodes ack received nodes ack block receiving imep retransmits block period continues retransmit needed maximum total period time link unacknowledged node declared tora notified 
imep provide network layer address resolution service arp routing protocols 
link status sensing maintaining list node neighbors imep node periodically transmits beacon beacon equivalent packet answered node hearing hello hello equivalent packet 
implementation decisions imep queue objects period time allow possible aggregation objects imep specification define time period discovered performance protocol sensitive choice value 
significant experimentation chose best balance packet overhead routing protocol convergence aggregate hello ack packets time uniformly chosen ms ms delay tora routing messages aggregation 
reason delaying messages tora link reversal process creates short lived routing loops exist time link reversal starts time nodes need aware reversal receive corresponding update section 
delaying transmission tora routing messages aggregation coupled queuing delay network interface allows routing loops long significant numbers data packets dropped 
tora imep specifications define precise semantics reliable object delivery required tora experimentation showed strong semantics provided order prevent creation long lived routing loops 
particular tora objects delivered reliably order duplication 
additionally neighboring nodes ad hoc network consistent picture network regard destination 
implies anytime node decides link neighbor gone decide link gone 
implemented imep provide functionality retransmission timeout total number attempts specified imep 
chose retransmission period ms total timeout ms observations adaptive retransmission timer added protocol 
inorder delivery enforced receiver node passing table ii constants tora simulation 
beacon period time link declared beacon hello packets exchanged time object block retransmitted acknowledgment received ms time object block retransmitted link destination declared ms min hello ack aggregation delay ms max hello ack aggregation delay ms object block node tora block sequence number imep expects blocks lower sequence numbers may generate ack dropped 
blocks higher sequence numbers queued missing blocks arrive maximum ms total timeout expires point certain object retransmitted 
point declared link received ack missing packet 
give routing protocol picture consistent seen protocol imep layer notifies routing protocol link notifies link back processes queued packets 
improved imep method link status sensing reducing point functions minimum overhead maintains required link status information 
experimentation imep nodes need send beacon messages disconnected nodes 
suppose nodes neighbors transmit single hello listing neighbors beacon period 
bi directional link exists nodes overhear transmissions causing node create link incoming status 
subsequent hello messages list confirming bi directional link exists 
table ii lists constants tora simulation 
dynamic source routing dsr dsr uses source routing hop hop routing packet routed carrying header complete ordered list nodes packet pass :10.1.1.129.426
key advantage source routing intermediate nodes need maintain date routing information order route packets forward packets contain routing decisions 
fact coupled demand nature protocol eliminates need periodic route advertisement neighbor detection packets protocols 
basic mechanisms dsr protocol consists mechanisms route discovery route maintenance 
route discovery mechanism node wishing send packet destination obtains source route perform route discovery source node broadcasts route request packet flooded network controlled manner answered route reply packet destination node node knows route destination 
reduce cost route discovery node maintains cache source routes learned overheard aggressively uses limit frequency propagation route requests 
route maintenance mechanism packet sender detects network topology changed longer route destination nodes listed route moved range 
route maintenance indicates source route broken notified table iii constants dsr simulation 
time retransmitted route requests exponentially backed ms size source route header carrying addresses bytes timeout search ms time hold packets awaiting routes max rate sending gratuitous route route error packet 
sender attempt route cache invoke route discovery find new route 
implementation decisions suggestions published description dsr optimized implementation number ways :10.1.1.129.426
dsr protocol supports unidirectional routes ieee requires rts cts data ack exchange unicast packets limiting routing protocol bidirectional links delivering data packets 
implemented dsr discover routes composed bidirectional links requiring node return route reply messages requestor reversing path route request packet came 
path taken route request contained unidirectional links corresponding route reply reach requestor preventing learning unidirectional link route 
route discovery node sends route request maximum propagation limit hop limit set zero prohibiting neighbors 
cost single broadcast packet mechanism allows node query route caches neighbors route optimizes case destination node adjacent source 
search times propagating route request sent 
nodes operate network interfaces promiscuous mode disabling interface address filtering causing network protocol receive packets interface overhears 
packets scanned useful source routes route error messages discarded 
optimization allows nodes learn potentially useful information causing additional overhead limited network bandwidth 
furthermore node overhears packet addressed checks unprocessed portion source route packet header 
node address knows source route bypass unprocessed hops preceding route 
node sends gratuitous route reply message packet source giving shorter route hops 
intermediate node forwarding packet discovers hop source route unreachable examines route cache route destination 
route exists node replaces broken source route packet route cache retransmits packet 
route exist cache node drops packet new route discovery 
table iii lists constants dsr simulation 
ad hoc demand distance vector aodv aodv essentially combination dsr dsdv 
borrows basic demand mechanism route discovery route maintenance dsr plus hop hop routing sequence numbers periodic beacons dsdv 
basic mechanisms node needs route destination broadcasts route request message neighbors including known sequence number destination 
route request flooded controlled manner network reaches node route destination 
node forwards route request creates reverse route back node route request reaches node route node generates route reply contains number hops necessary reach sequence number seen node generating reply 
node participates forwarding reply back originator route request node creates forward route state created node path hop hop state node remembers hop entire route done source routing 
order maintain routes aodv normally requires node periodically transmit hello message default rate second 
failure receive consecutive hello messages neighbor taken indication link neighbor question 
alternatively aodv specification briefly suggests node may physical layer link layer methods detect link breakages nodes considers neighbors 
link goes upstream node forwarded packets destination link notified unsolicited route reply containing infinite metric destination 
receipt route reply node acquire new route destination route discovery described 
implementation decisions initially implemented aodv periodic hello messages link breakage detection described aodv specification 
comparison implemented version aodv call aodv ll link layer link layer feedback dsr completely eliminating standard aodv hello mechanism 
approach saves overhead periodic hello messages somewhat change fundamental nature protocol example link breakage detection aodv ll demand broken link detected packet needs sent link periodic hello messages standard aodv may allow broken links detected packet forwarded 
alternate version aodv ll perform significantly better standard aodv report measurements version 
addition changed aodv implementation shorter timeout seconds retrying route request route reply received rrep wait time 
value aodv specification seconds constants specified aodv 
route reply returned node discovered route reverse route return saved route request propagated 
specified timeout reverse route information node seconds original route reply timeout value seconds unnecessarily limited protocol ability recover dropped route request route reply packet 
table iv lists constants aodv ll simulation 
methodology goal experiments measure ability routing protocols react network topology change continuing successfully deliver data packets destinations 
measure ability basic methodology apply simulated network variety workloads effect testing data packet originated sender routing protocol time route destination packet 
attempting measure protocols performance particular workload taken real life measure protocols performance range conditions 
table iv constants aodv ll simulation 
time route considered active lifetime route reply sent destination node number times route request retried time route request retried time broadcast id forwarded route request kept time reverse route information route reply kept time broken link deleted routing table mac layer link breakage detection protocol evaluations simulation wireless nodes forming ad hoc network moving rectangular flat space seconds simulated time 
chose rectangular space order force longer routes nodes occur square space equal node density 
physical radio characteristics mobile node network interface antenna gain transmit power receiver sensitivity chosen approximate lucent wavelan direct sequence spread spectrum radio 
order enable direct fair comparisons protocols critical challenge protocols identical loads environmental conditions 
run simulator accepts input scenario file describes exact motion node exact sequence packets originated node exact time change motion packet origination occur 
pre generated different scenario files varying movement patterns traffic loads ran routing protocols scenario files 
protocol challenged identical fashion directly compare performance results protocols 
movement model nodes simulation move model call random waypoint model :10.1.1.129.426:10.1.1.129.426
movement scenario files simulation characterized pause time 
node begins simulation remaining stationary pause time seconds 
selects random destination space moves destination speed distributed uniformly maximum speed 
reaching destination node pauses pause time seconds selects destination proceeds previously described repeating behavior duration simulation 
simulation ran seconds simulated time 
ran simulations movement patterns generated different pause times seconds 
pause time seconds corresponds continuous motion pause time length simulation corresponds motion 
performance protocols sensitive movement pattern generated scenario files different movement patterns value pause time 
routing protocols run movement patterns 
experimented different maximum speeds node movement 
primarily report data simulations maximum node speed meters second average speed meters second compare simulations maximum speed meter second 
communication model goal simulation compare performance routing protocol chose traffic sources constant bit rate cbr sources 
defining parameters communication model experimented sending rates packets number packets shortest available path length scenarios scenarios distribution shortest path available application packet originated scenarios 
second networks containing cbr sources packet sizes bytes 
varying number cbr sources approximately equivalent varying sending rate 
simulations chose fix sending rate packets second different communication patterns corresponding sources 
byte packets congestion due lack spatial diversity problem protocols nodes drop packets received forwarding 
studied protocols performs load balancing goal analysis determine routing protocols consistently track changes topology attempted factor congestive effects reducing packet size bytes 
smaller packet size provides test routing protocols testing ability determine routes destination frequency total times second 
communication patterns peer peer connections started times uniformly distributed seconds 
communication patterns sources taken conjunction movement patterns provide total different scenario files maximum node movement speed compared routing protocols 
tcp sources tcp offers conforming load network meaning changes times sends packets perception network ability carry packets 
result time data packet originated sender position node sending packet differ protocols preventing direct comparison 
scenario characteristics characterize challenge scenarios placed routing protocols measured lengths routes protocols deliver packets total number topology changes scenario 
data packet originated internal mechanism simulator separate routing protocols calculates shortest path packet sender destination 
packet labeled information compared number hops taken packet received intended destination 
shortest path calculated nominal transmission range radio account congestion interference particular packet see 
table average number link connectivity changes second simulation function pause time 
pause time connectivity changes shows distribution shortest path lengths packets scenario files 
height bar represents number packets destination distance away packet originated 
average data packet simulations cross hops reach destination farthest reachable node routing protocols deliver packet hops away 
table shows average number link connectivity changes occurred simulations runs value pause time 
count link connectivity change node goes direct communication range node 
specific scenarios second pause time scenarios slightly higher average rate link connectivity change second pause time scenarios due artifact random generation scenarios 
artifact visible slight bump pause time seconds performance graphs section 
validation propagation model mac layer propagation model uses standard equations techniques verified expert radio propagation modeling 
analyzed power simulated radio behavior function distance small groups nodes ensure propagation capture carrier sense models working designed 
mac implementation studied variety scenarios independently verified authors 
experimentally tested nodes range data packets experience collisions regardless offered traffic load node able progress sending packets 
verified carrier sense rts cts back mechanisms working correctly 
validation routing protocol implementations protocol implementation studied verified authors independent implementations aodv dsdv 
results simulation internally consistent 
percentage packets originated application layer sources logged received dropped simulation approximately packets simulation 
packets certainly transit simulation simulation originates packets simulated second terminates exactly seconds cool period 
results simulations fact different previously reported studies protocols 
explain reasons differences sections 
metrics comparing protocols chose evaluate metrics packet delivery ratio ratio number packets originated application layer cbr sources number packets received cbr sink final destination 
routing overhead total number routing packets transmitted simulation 
packets sent multiple hops transmission packet hop counts transmission 
path optimality difference number hops packet took reach destination length shortest path physically existed network packet originated 
packet delivery ratio important describes loss rate seen transport protocols turn effects maximum throughput network support 
metric characterizes completeness correctness routing protocol 
routing overhead important metric comparing protocols measures scalability protocol degree function congested low bandwidth environments efficiency terms consuming node battery power 
protocols send large numbers routing packets increase probability packet collisions may delay data packets network interface transmission queues 
evaluated number bytes routing overhead caused source routing header required dsr results section 
include ieee mac packets arp packets routing overhead routing protocols run variety different medium access address resolution protocols different overhead 
goal compare routing protocols find optimal performance possible scenarios 
absence congestion noise path optimality measures ability routing protocol efficiently network resources selecting shortest path source destination 
calculate difference shortest path internally simulator packet originated number hops packet took reach destination 
simulation results noted section conducted simulations different node movement speeds maximum speed average speed maximum speed compare protocols simulations section data comparison 
simulations communication patterns peer peer run having sources sending packets second 
comparison summary figures highlight relative performance routing protocols traffic loads sources 
protocols deliver greater percentage originated data packets little node mobility large pause time converging delivery node motion 
dsr aodv ll perform particularly delivering data packets regardless mobility rate 
scenarios dsdv sq fails converge pause times seconds 
routing protocols impose vastly different amounts overhead shown 
nearly order magnitude separates dsr overhead tora 
basic character protocol demonstrated shape overhead curve 
tora dsr aodv ll demand protocols overhead drops mobility rate drops 
dsdv sq largely periodic routing protocol overhead nearly constant respect mobility rate 
routing overhead packets data packets received data packets sent dsdv sq tora dsr aodv ll pause time secs comparison protocols fraction application data packets successfully delivered packet delivery ratio function pause time 
pause time represents constant mobility 
dsdv sq tora dsr aodv ll pause time secs comparison protocols number routing packets sent routing overhead function pause time 
pause time represents constant mobility 
tora results shown figures pause time average scenarios overhead tenth scenario higher due significant congestion caused routing protocol 
complete results included explained section 
packet delivery ratio details shows fraction originated application data packets protocol able deliver function node mobility rate pause time network load number sources 
dsr aodv ll packet delivery ratio independent offered traffic load protocols delivering packets cases 
dsdv sq fails converge pause time delivers packets 
higher rates mobility lower pause times dsdv sq poorly dropping packet delivery ratio 
nearly dropped packets lost stale routing table entry directed forwarded broken link 
described section dsdv sq maintains route destination consequently packet mac layer unable deliver dropped alternate routes 
data packets received data packets sent sources sources sources pause time secs data packets received data packets sent dsdv sq pause time secs tora sources sources sources data packets received data packets sent data packets received data packets sent sources sources sources pause time secs dsr sources sources sources pause time secs aodv ll packet delivery ratio function pause time 
tora shown different vertical scale clarity see 
tora sources delivering originated data packets highest rate node mobility pause time 
majority packet drops due creation short lived routing loops natural part link reversal process 
consider node routing packets link breaks reverse link transmit update notify neighbors done routing packets receives update data packets loop implementation tora detects hop packet previous hop drops data packet experiments showed allowing packets loop ttl expires loop resolves causes packets dropped looping data packets interfere ability nearby nodes successfully exchange broadcast update packet resolve routing loop 
sources tora average packet delivery ratio drops pause time examination data variability extremely large packet delivery ratios ranging 
scenarios tora fails converge increased congestion explained section 
released revision imep specification claims improve reliable control message delivery semantics provided imep eliminate behaviors seen 
new mechanisms add packet overhead tora imep shown section higher protocols studied 
routing overhead details shows number routing protocol packets sent protocol obtaining delivery ratios shown 
dsr dsdv sq plotted scale aodv ll tora plotted different scales best show effect pause time offered load overhead 
tora dsr aodv ll demand routing protocols number sources increases expect number routing packets sent increase destinations network maintain working routes 
dsr aodv ll demand packets similar basic mechanisms identically shaped curves 
protocols exhibit desirable property incremental cost additional sources decreases sources added protocol information learned route discovery complete subsequent route discovery 
absolute overhead required dsr aodv ll different aodv ll requiring times overhead dsr constant node motion pause time 
dramatic increase aodv ll overhead occurs route discoveries typically propagates node ad hoc network 
example pause time sources aodv ll routing overhead packets routing overhead packets sources sources sources pause time secs dsdv sq pause time secs tora sources sources sources routing overhead packets routing overhead packets sources sources sources pause time secs dsr sources sources sources pause time secs aodv ll routing overhead function pause time 
tora aodv ll shown different vertical scales clarity see 
initiates route discoveries second simulation run resulting route request transmissions 
contrast dsr limits scope overhead route request packets caching forwarded overheard packets non propagating route requests described section results dsr sending non propagating requests propagating requests simulation run 
tora overhead sum constant mobility independent overhead variable mobility dependent overhead 
constant overhead result imep neighbor discovery mechanism requires node transmit hello packet beacon period second 
second simulations nodes results minimum overhead packets 
variable part overhead consists routing packets tora uses create maintain routes multiplied number retransmission acknowledgment packets imep uses ensure reliable order delivery 
scenarios sources tora essentially underwent congestive collapse 
positive feedback loop developed tora imep number routing packets sent caused numerous mac layer collisions turn caused data ack hello packets lost 
loss packets caused imep erroneously believe links neighbors breaking pause time scenarios nodes stationary 
tora reacted perceived link breakages sending updates closed feedback loop directly causing congestion 
importantly update sent required reliable delivery increased system exposure additional erroneous link failure detections failure receive ack retransmitted updates treated link failure indication 
worst runs tora generated objects imep aggregated packets requiring reliable delivery 
source runs congestion develop overhead varied packets pause time packets pause time 
dsdv sq approximately constant overhead regardless movement rate offered traffic load 
constant behavior arises destination broadcasts periodic update new sequence number seconds 
unsynchronized nodes simulation node broadcasts periodic update second 
dsdv sq considers receipt new sequence number node important distribute immediately section node receives periodic update generates triggered update 
triggered updates flood network node receiving learns new sequence number generates triggered update 
node limits rate sends triggered updates second number packets path length difference shortest hops dsdv sq tora dsr aodv ll difference number hops packet took reach destination optimal number hops required 
data sources 
new sequence number second node transmits triggered updates maximum permitted rate 
base periodic action dsdv sq seconds effective rate group nodes update node second yielding overhead packets second node simulation 
path optimality details described section internal mechanism simulator knows length shortest possible path nodes network time labels packets path length originated 
shows difference shortest path length length paths taken data packets 
difference means packet took shortest path difference greater indicates number extra hops packet took 
dsdv sq dsr routes close optimal 
tora aodv ll significant tail hops longer optimal packets tora designed find shortest paths 
space reasons aggregates data pause times graph 
data broken pause time dsdv sq dsr regardless pause time statistically significant change optimality routing respect node mobility rate 
tora aodv ll hand show significant difference respect pause time length routes relative shortest possible routes 
node mobility low routes significantly closer shortest possible routes nodes moving 
lower speed node movement order explore protocols scale rate topology change varies changed maximum node speed re evaluated protocols scenario files lower movement speed 
figures show results experiment sources 
protocols deliver packets movement speed 
scenarios dsdv sq converge delivers excellent performance scenarios 
slower rate movement routing protocols generated different amounts overhead 
dsr aodv ll seriously challenged set scenarios overhead increases mildly pause time decreases 
data packets received data packets sent routing overhead packets dsdv sq tora dsr aodv ll pause time secs comparison fraction application data packets successfully delivered function pause time 
speed dsdv sq tora dsr aodv ll pause time secs comparison number routing packets sent function pause time 
speed separation dsr aodv ll grown factor nearly factor dsr caching effective lower speeds cached information goes stale slowly 
due largely periodic nature dsdv sq continues constant overhead approximately packets tora overhead dominated link status sensing mechanism imep amounts packet node second total packets simulation section 
additional observations overhead source routing protocols comparing number routing overhead packets sent protocols dsr clearly lowest overhead 
data sources reproduced semi log axis clarity 
routing overhead measured bytes includes bytes source route header dsr places packet dsr expensive aodv ll highest rates mobility transmits fewer bytes routing overhead dsdv sq tora 
aodv ll uses route discovery mechanism dsr creates hop routing state node path order eliminate routing overhead packets dsdv sq tora dsr aodv ll pause time secs routing overhead packets 
routing overhead bytes dsdv sq tora dsr aodv ll pause time secs routing overhead bytes 
contrasting routing overhead packets bytes 
graphs semi log axes 
overhead source routing data packets 
reduction overhead bytes shown 
unclear improvement bytes overhead significant real world protocol operation majority aodv ll overhead bytes carried small packets 
cost acquire medium transmit packet significantly expensive terms power network utilization incremental cost adding bytes existing packet actual cost source route header dsr number bytes indicate 
completely fair comparison overhead bytes include cost physical layer framing mac protocol bytes deliberately factored routing protocols run different mac implementations different overhead 
effect triggered updates dsdv noted section dsdv employ strategies determining send triggered updates 
strategy dsdv sq node sends triggered update time receives new sequence number destination 
shown dsdv sq delivers packets pause times maximum node speed case dsdv sq packet delivery ratio falls pause time seconds decreases higher mobility rates dsdv sq unable converge 
shows data dsdv sq routing overhead approximately packets pause times discussed section 
second scheme sending triggered updates call simply dsdv requires sent new metric received destination 
case link breakages detected quickly dsdv sq generally resulting dropped packets 
movement speed dsdv delivers fewer packets dsdv sq packet delivery ratio decreasing pause time 
dsdv routing overhead factor smaller fact routing overhead constant indicates movement speed exercise routing protocol fully 
dsdv sq dsdv fail converge causing large percentage data packets dropped 
dsdv triggering scheme reduces relative routing overhead factor pause time factor pause time 
reliability issues broadcast packets broadcast packets receiver directed way reserve wireless medium receivers transmitting broadcast packet rts cts exchange 
consequently broadcast packets inherently reliable unicast packets 
difference exist wired networks represents fundamental limitation wireless networks accounted design ad hoc network routing protocols 
sampling number scenarios single hop unicast data packets received successfully broadcast packets received counting number receivers transmission range broadcasting node 
difference numbers due collisions 
examine difference varies average degree nodes size broadcast packets relative proportion broadcast packets 
interaction arp demand protocols demand routing protocol receives packets destination route protocol typically buffers packets routing layer discover route packets 
routing protocol finds route sends queued packets link layer transmission 
course early experiments observed serious layer integration problem effect demand protocol running top arp implementation similar bsd unix 
arp code bsd code buffers packet destination awaiting link layer address 
series packets passed routing layer arp code hop destination link layer address unknown packets dropped arp 
simulation remedied pacing rate packets passed routing queue implementation arp modified buffer additional packets routing protocol coded check arp layer link layer address hop passing packets routing queue 
related simulation results dsdv tora dsr earlier papers simulations substantially different input parameters simulate wireless network accurately 
aware previously published performance results aodv 
routing overhead packets data packets received data packets sent dsdv sq dsdv sq dsdv dsdv pause time secs fraction originated data packets successfully delivered dsdv sq dsdv 
dsdv sq dsdv sq dsdv dsdv pause time secs park corson routing overhead function pause time dsdv sq dsdv 
earlier simulation tora done park corson compared tora idealized link state routing protocol 
results quite different showing tora delivering packets cases results incomparable simplifications simulating environment 
order avoid congestion simulation packet transmission rate packets minute node 
simulations run hours mean time failure links varied minutes minute average network connectivity artificially held constant 
simulator modeled network densely connected constant node density 
notion node mobility 
node connected fixed set neighbors separate links cycle active inactive state independent links 
links error free dynamics network layer modeled 
radio propagation medium access collisions physical node mobility completely ignored possible node correctly receive simultaneous transmissions 
simulation link transitions cause interrupts give protocols immediate feedback link goes 
reality node detect link broken trying link fails receive expected periodic beacons node recognize existence new neighbor receives packet neighbor 
earlier simulation results protocol tora part simulator study problems simulator park corson metrics incomparable 
johnson maltz previously simulated dsr mobility model :10.1.1.129.426
previous movement speeds ranged nodes moving space shorter range infrared wireless transmitters meter range 
simulation lacked realistic model radio propagation mac layer ieee 
missing pieces greatly simplify problem faced routing protocol propagation delay capture effects mac layer collisions effects congestion due large packet sizes unaccounted 
furthermore broadcast unicast packets delivered probability noted section realistic assumption 
earlier simulation study consider ad hoc networks nodes 
earlier simulation characterized path optimality routing protocol reporting ratio average route length optimal route length routing protocol perfect information 
report actual route lengths numbers averages ratio tended blur dynamics protocol 
result path optimality data difference optimal actual path lengths 
freisleben jansen dsdv dsr simulated compared freisleben jansen 
simulations configurations mobile nodes movement speeds relative transmission range approximately times faster simulations making results incomparable 
furthermore results explained factors congestion collisions failure routing protocols converge authors analyze interpret results possible assess impact factors data 
results suffer due number deficiencies simulation implementation protocols 
events simulator take place regular time steps resulting perfectly synchronized behavior number separate mobile nodes cases 
example receipt broadcast packet nodes attempt send response packet experience collision rts requiring binary exponential backoff retransmission attempt 
furthermore buffer packets waiting route reply returned dsr route discovery causing large numbers packets dropped needlessly 
area ad hoc networking receiving increasing attention researchers years available wireless networking mobile computing hardware bases capable supporting promise technology 
past years variety new routing protocols targeted specifically ad hoc networking environment proposed little performance information protocol detailed performance comparison protocols previously available 
contributions areas 
describe modifications ns network simulator provide accurate simulation mac physical layer behavior ieee wireless lan standard including realistic wireless transmission channel model 
new simulation environment provides powerful tool evaluating ad hoc networking protocols wireless protocols applications 
second simulation environment results detailed packet level simulation comparing multi hop wireless ad hoc network routing protocols 
protocols dsdv tora dsr aodv cover range design choices including periodic advertisements vs ondemand route discovery feedback mac layer indicate failure forward packet hop hop routing vs source routing 
simulated protocol ad hoc networks mobile nodes moving communicating results range node mobility rates movement speeds 
protocols studied performs cases certain drawbacks 
dsdv performs quite predictably delivering virtually data packets node mobility rate movement speed low failing converge node mobility increases 
tora worst performer experiments terms routing packet overhead delivered packets scenarios sources 
sources network unable handle traffic generated routing protocol significant fraction data packets dropped 
performance dsr mobility rates movement speeds source routing increases number routing overhead bytes required protocol 
aodv performs dsr mobility rates movement speeds accomplishes goal eliminating source routing overhead requires transmission routing overhead packets high rates node mobility expensive dsr 
acknowledgments due dan reviewed propagation model correctness provided insights details radio propagation 
pravin bhagwat tracy camp scott corson vincent park charles perkins answering questions details operation dsdv tora imep aodv 
bharghavan alan demers scott shenker lixia zhang 
macaw media access protocol wireless lan proceedings sigcomm conference communications architectures protocols applications pages august 
josh broch david johnson david maltz 
dynamic source routing protocol mobile ad hoc networks 
internet draft draft ietf manet dsr txt march 
progress 
scott corson anthony ephremides 
distributed routing algorithm mobile wireless networks 
wireless networks february 
scott corson philip papadopoulos vincent park amir 
internet manet encapsulation protocol imep specification 
internet draft draft ietf manet imep spec txt august 
progress 
scott corson vincent park 
internet manet encapsulation protocol imep specification 
internet draft draft ietf spec txt november 
progress 
kevin fall kannan varadhan editors 
ns notes documentation 
vint project uc berkeley lbl usc isi xerox parc november 
available www mash cs berkeley edu ns 
bernd freisleben ralph jansen 
analysis routing protocols ad hoc networks mobile 
proceedings th iasted international conference applied informatics pages innsbruck austria february 
iasted acta press 
ieee computer society lan man standards committee 
wireless lan medium access control mac physical layer phy specifications ieee std 
institute electrical electronics engineers new york new york 
david johnson 
routing ad hoc networks mobile hosts 
proceedings ieee workshop mobile computing systems applications pages december 
david johnson david maltz :10.1.1.129.426
dynamic source routing ad hoc wireless networks 
mobile computing edited tomasz imielinski hank korth chapter pages 
kluwer academic publishers 
phil karn 
maca new channel access method packet radio 
proceedings th computer networking conference pages september 
barry robert ruth sastry 
goals challenges darpa program 
ieee personal communications december 
national science foundation 
research priorities wireless mobile communications networking report workshop held march house virginia 
available www cise nsf gov ww html 
vincent park scott corson 
highly adaptive distributed routing algorithm mobile wireless networks 
proceedings infocom pages april 
vincent park scott corson 
temporally ordered routing algorithm tora version functional specification 
internet draft draft ietf manet tora spec txt november 
progress 
vincent park scott corson 
performance comparision tora ideal link state routing 
proceedings ieee symposium computers communication june 
charles perkins 
ad hoc demand distance vector aodv routing 
internet draft draft ietf manet aodv txt november 
progress 
charles perkins pravin bhagwat :10.1.1.113.555
highly dynamic destination sequenced distance vector routing dsdv mobile computers 
proceedings sigcomm conference communications architectures protocols applications pages august 
revised version available www cs umd edu projects mcml papers sigcomm ps 
david plummer 
ethernet address resolution protocol converting network protocol addresses bit ethernet addresses transmission ethernet hardware 
rfc november 
theodore rappaport 
wireless communications principles practice 
prentice hall new jersey 
neil siegel dave hall clint walker rene rubio 
tactical internet panel briefings 
army digitization office 
available www ado army mil briefings tact internet index htm october 
bruce tuch 
development wavelan ism band wireless lan 
technical journal july august 
gary wright richard stevens 
tcp ip illustrated volume implementation 
addison wesley reading massachusetts 
