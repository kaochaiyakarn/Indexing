maan multi attribute addressable network grid information services min cai martin frank chen pedro szekely information sciences institute university southern california jan 
structured peer peer systems distributed hash tables dhts offer scalable key lookup distributed resources 
simply applied grid information services grid resources need registered searched multiple attributes 
proposes multi attribute addressable network maan extends chord support multi attribute range queries 
maan addresses range queries mapping attribute values chord identifier space uniform locality preserving hashing 
uses iterative single attribute dominated query routing algorithm resolve multi attribute queries 
node maan log neighbors nodes 
number routing hops resolve multi attribute range query log smin smin minimum range selectivity attributes 
smin logarithmic number nodes scalable large number nodes attributes 
measured performance maan implementation experimental results consistent theoretical analysis 
keywords grid computing peer peer information services multi attribute range queries 
grid computing emerging novel approach employing distributed computational storage resources solve large scale problems science engineering commerce 
grid computing large scale requires scalable efficient resource registration lookup 
traditional approaches maintain centralized server set hierarchically organized servers index resource information 
example globus foster kesselman uses ldap directory service named mds fitzgerald resource registration lookup 
centralized server registration bottleneck highly dynamic environment resources join leave change characteristics cpu load time 
scale large number grid nodes autonomous organizations 
centralized approaches inherent drawback single point failure 
hierarchical approaches provide better scalability failure tolerance introducing set kluwer academic publishers 
printed netherlands 
maan tex min cai martin frank chen pedro szekely hierarchically organized servers partitioning resource information different servers similar dns 
typically partitioning scheme predefined adapt dynamic change virtual organizations 
take long time resource information updated leaf nodes root node 
overcome shortcomings centralized approaches adriana 
iamnitchi proposed approach organize mds directories flat dynamic network 
virtual organization grid certain amount resources peers host information services 
peers constitute network organizations 
resource requesters search desired resources query forwarding similar unstructured systems gnutella 
approach scale large volume query messages generated flooding ripeanu sen wong 
order avoid flooding complete network number hops forwarding path typically bounded time live ttl field query messages 
search results deterministic approach guarantee find desired resource exists 
contrast structured systems message routing flooding leveraging structured overlay network peers 
systems typically support distributed hash table dht functionality basic operation offer lookup key returns identity node storing object key ratnasamy :10.1.1.16.6554
current proposed dht systems include tapestry zhao pastry rowstron druschel chord stoica ratnasamy koorde kaashoek karger :10.1.1.111.1818:10.1.1.140.3129:10.1.1.105.3673
dht systems objects associated key produced hashing object name 
nodes identifiers share space keys 
node responsible storing range keys corresponding objects 
dht nodes maintain overlay network node having nodes neighbors 
lookup key request issued node lookup message routed overlay network node responsible key 
different dht systems construct different overlay networks employ different routing algorithms 
guarantee finish lookup log dn hops node maintains information log neighbors nodes network dimension hypercube organization network 
provide scalability failure resilience 
dhts desirable properties directly applied grid information services 
dhts maan tex maan multi attribute addressable network grid information services look resource exactly matches key 
current dht systems typically assume applications know key target resource 
example file systems cfs dht index file block unique block identifier key store retrieve block 
kind hash table functionality grid information services resources typically multiple attributes need registered list attribute value pairs 
example resource provider want register multiple attributes register name pioneer url gram pioneer isi edu os type linux cpu speed mhz memory size consequently resource requesters want able search resources meet multiple attribute requirements demonstrated resource specification language rsl czajkowski globus query search os type linux mhz cpu speed mhz memory size mb attributes example different types string numerical 
attribute name url os type string limited number values attribute cpu speed memory size continuous numerical values 
numerical types attributes able query attribute ranges exact values critical requirement 
current dht systems handle multi attribute queries range queries 
proposed new structured system grid information services call multi attribute addressable network maan 
maan resources registered set attributevalue pairs searched multi attribute range queries 
remainder introduces chord section describes maan routing algorithms section presents experimental performance results maan section discusses related section presents section 
chord section briefly describe chord dht system proposed ion stoica el 
stoica :10.1.1.105.3673
dht systems maan tex min cai martin frank chen pedro szekely 
bit chord network consisting nodes object keys chord supports scalable key object pairs registration lookup operations 
chord uses dimensional circular identifier space modulo number bits node identifiers object keys 
node chord assigned unique bit identifier called node id nodes self organize ring topology node ids 
node id chosen locally hashing node ip address port number hashing function sha 
object assigned unique bit identifier called object key 
chord uses consistent hashing assign keys nodes 
key assigned node identifier equal follows identifier identifier circle 
node called successor node key denoted successor 
object registered successor node object key 
shows node chord network bit circular identifier space 
node node id stores objects key key 
chord node maintains sets neighbors successor list finger table 
nodes successor list immediately follow node identifier space nodes finger table spaced exponentially identifier space 
finger table entries 
th entry table node maan tex maan multi attribute addressable network grid information services id contains identity node succeeds identifier circle successor arithmetic modulo chord called th finger node denoted finger 
finger immediate successor 
finger table contains close nodes far nodes doubling distance 
node needs maintain state log neighbors chord network nodes 
example fingers correspondingly 
node wants search object key route lookup request successor node key successor 
node far away forward request far node finger table closer routing algorithm works follows lookup request key node searches successor list successor forwards request possible 
know successor forwards request node identifier immediately precedes finger list 
repeating process request gets closer closer successor receives lookup request object key finds object locally sends response back example issues lookup request sends request finger closest identifier space 
forwards request forward 
successor node looks object corresponding locally returns result 
fingers node finger table spaced exponentially identifier space hop node node covers half identifier space clockwise average number hops lookup log number nodes network 
chord achieves load balancing nodes consistent hashing virtual nodes 
node identifiers generated sha hash uniformly cover identifier space consistent hashing guarantee keys evenly distributed node 
chord solves problem associating keys virtual nodes hosting multiple virtual nodes real node 
chord stabilization algorithm constructing finger tables node joins maintaining finger tables nodes fail 
hop chord overlay correspond multiple hops underlying ip network 
zhang proposed random sampling algorithm chord reduce ip layer lookup latency 
prove chord result lookup latencies propositional average unicast latency net maan tex min cai martin frank chen pedro szekely provided underlying physical topology power law latency expansion 

multi attribute addressable network dht systems chord offers efficient scalable single key registration lookup service decentralized resources 
support range queries multi attribute lookup 
maan approach addresses problem extending chord locality preserving hashing recursive multidimensional query resolution mechanism 

range queries maan chord assigns node key bits identifier base hashing function sha uses consistent hash map keys nodes 
approach achieve load balancing sha hash generate randomly distributed identifiers matter distribution actual node addresses keys 
sha hashing destroys locality keys support range queries numerical attribute values 
maan uses sha hashing assign bits identifier node attribute value string type 
attributes numerical values maan uses locality preserving hashing functions assign attribute value identifier bit space 
definition 
hash function locality preserving hashing function property vi vj iff vi vj interval vi vj split vi vk vk vj corresponding interval vi vj split vi vk vk vj 
suppose attribute numerical values range vmin vmax 
simple locality preserving hashing function vmin vmax vmin vmin vmax 
attribute value corresponding identifier identifier space 
maan consistent hashing chord assign attribute value successor node identifier successor 
theorem 
locality preserving hash function map attribute value bit circular space range maan tex maan multi attribute addressable network grid information services query lower bound upper bound respectively nodes contain attribute value identifier equal larger successor equal successor 
proof attribute value assigned successor successor node identifier equal follows identifier identifier circle 
definition see attribute value assigned node successor successor 
algorithm resolve range queries numeric attribute values 
suppose node wants search resources attribute value attribute lower bound upper bound respectively 
node composes search request uses chord routing algorithm route node nl successor 
search request search request 
key chord routing initially 
desired attribute value range list resources discovered range 
initially empty 
node nl receives search request searches local resource entries appends resources satisfy range query request 
checks successor 
true sends back search response node search result search request 
forwards search request immediate successor ni 
node ni searches local resource entries appends matched resources forwards request immediate successor request reaches node nu successor 
terms theorem resources attribute values range registered nodes nl nu clockwise chord ring 
search algorithm complete 
obviously routing search request node nl chord routing algorithm takes log hops nodes 
sequential forwarding nl nu takes number nodes nl nu 
total log routing hops resolve range query single attribute 
nodes contain resources matching range query visit nodes guarantee find correct search result 
sense log routing hops optimal range queries chord 
uniform locality preserving hashing simple locality preserving hashing function keeps locality attribute values produce uniform distribution maan tex min cai martin frank chen pedro szekely hashing values distribution attribute values uniform 
consequently load balancing resource entries poor nodes 
address problem propose uniform locality preserving hashing function produce uniform distribution hashing values distribution function input attribute values continuous monotonically increasing known advance 
condition satisfied common distributions gaussian pareto exponential distributions 
suppose attribute value resources conforms certain distribution continuous monotonically increasing distribution function possibility function dv vmin vmax 
design uniform locality preserving hashing function 
theorem 
hash function locality preserving hashing function 
proof monotonically increasing monotonically increasing 
obviously locality preserving hashing function definition 
theorem 
suppose attribute value vmin vmax distribution function 
hashing value conforms uniform distribution range vmin vmax 
proof possibility distribution denoted dy determined fundamental transformation law probabilities dy dv dv dy dy dv dv dy dv attribute value vmin vmax probability function normalized definition vmax dv vmin vmax vmin maan tex maan multi attribute addressable network grid information services vmin dv vmin vmax vmin vmin vmax vmax vmax vmin dy dy see hashing value conforms uniform distribution range vmin vmax 
uniform locality preserving hashing function resources uniformly distributed nodes nodes uniformly cover bit identifier space 
know true node hosts log virtual nodes unrelated identifiers stoica :10.1.1.105.3673

multi attribute query resolution supporting attribute lookup maan scheme extends routing algorithm range queries support multi attribute lookup 
multi attribute setting assume resource attributes 
am corresponding attribute value pairs ai vi attribute ai attribute value vi range vi min vi max conforms certain distribution distribution function di 
generate uniform locality preserving hashing function hi di attribute ai 
hashing functions map attribute values bit space chord 
resource register information attribute value pairs node ni successor vi attribute value vi resource registration request attribute value vi routed successor node chord routing algorithm key identifier vi 
node categorizes indices attribute value pairs different attributes 
node receives resource registration request resource attribute value ai resource information rx adds rx pair corresponding list attribute ai 
node searches interested resources composes multiattribute range query combination sub queries maan tex min cai martin frank chen pedro szekely attribute dimension ai lower bound upper bound query range respectively 
support approaches search candidate resources multiattribute range queries iterative single attribute dominated query resolution 
iterative query resolution iterative query resolution scheme straightforward 
node wants search resources query sub queries different attributes iteratively searches candidate resources subquery attribute dimension intersects search results query originator 
reuse search algorithm proposed single attribute lookup section 
modification carry attribute field search request indicate attribute interested 
search request follows search request name attribute interested single attribute query 
node receives query request intersects query range searches index matches attribute name search request 
approach simple easy implement efficient 
attribute queries takes log ki routing hops resolve queries ki number nodes intersects query range attribute ai 
define selectivity si ratio query range width identifier space size identifier space si suppose attribute values uniformly distributed nodes ki si routing hops log si 
routing hops searching increase linearly number attributes query 
single attribute dominated query resolution obviously search result multi attribute query satisfy sub queries attribute dimension intersection set resources satisfies individual sub query 
suppose set resources satisfying sub queries xi set resources satisfying sub query attribute ai xi xi superset iterative query resolution approach computes xi iterations calculates intersection set 
register resource information attribute dimension resources set xi contain information attribute value pairs 
maan tex maan multi attribute addressable network grid information services single attribute dominated query resolution approach utilize extra information need compute set candidate resources xk satisfies sub query attribute ak 
apply sub queries attributes candidate resources computes set satisfies sub queries 
call attribute ak dominated attribute 
possible approaches apply sub queries 
approach apply query originator receives candidate resources xk 
set xk typically larger search requests responses contain candidate resources satisfy sub queries 
approach introduce unnecessarily large search messages increase communication overhead 
approach carry sub queries search request apply locally nodes contain candidate resources xk 
approach efficient search requests responses carry resources satisfying sub queries 
search request single attribute dominated approach search request 
iterative query resolve approach 
list sub queries attributes list discovered resources satisfying sub queries 
node wants issue search request routes request node nl successor 
node nl searches local index corresponding attribute resources attribute value range attributes satisfying sub queries appends checks successor 
true sends back search response node resources forwards search request immediate successor ns 
ns repeats process search request reaches node nu successor 
approach need iteration dominated attribute ak takes log sk routing hops resolve query 
minimize routing hops choosing attribute minimum selectivity dominated attribute 
routing hops log smin smin minimum selectivity attributes 
shows example single attribute dominated algorithm node maan network storing resources 
maan network identifier space 
resource attributes cpu speed memory size 
attribute ranges corresponding locality preserving hash functions shown attribute settings table 
node resources 
example node resources ghz cpu mb memory ghz cpu mb memory 
resource regis maan tex min cai martin frank chen pedro szekely 
example single attribute dominated query resolution algorithm tered cpu speed memory size 
instance resource registered node successor node cpu speed registered node memory size 
node wants look resources cpu speed range ghz ghz memory size range mb mb apply locality preserving hashing sub query compute sub queries chord identifier space 
chooses attribute minimum selectivity dominated attribute example 
node composes search request hash value lower bound key routes corresponding successor node chord routing algorithm 
initial search request example search request ghz ghz memory size mb mb emp 
node receives search request find matched resource sub queries append set node successor node upper bound forwards search request immediate successor node search request maan tex maan multi attribute addressable network grid information services search request cpu speed ghz ghz mb mb 
resource registered node just simply forwards request node search request search request set 
node matched resource sub query memory size successor node upper bound 
just returns resource set search result search originator happens 
single attribute dominated approach number routing hops independent number attributes scales perfectly number attributes query 
hand incurs memory cost registering attributes resource attributes registered incurs updating overhead attribute values change 
query performance single attribute dominated approach typically outweigh greater updating cost grid environment node registration operations os type cpu speed memory size cpu count typically far frequent query operations find suitable machines 

implementation evaluation verified theoretical maan results measuring performance implementation java 
easily configured support different attribute schemas example grid nodes shown table implementation runs distributed node java virtual machine separated process 
implementation uses sockets communicate peers supports register search commands described 
new nodes added contacting existing peer ip address port number 
collect performance data distributed nodes implemented status message flooded nodes exists experimental measurement purposes 
message causes node dump neighborhood state log file 
instrumented maan messages additional fields hops taken 
experiment environment consists dual xeon workstations gb memory desktops gb memory dual piii workstations mb memory 
operating systems installed machines include redhat freebsd windows xp professional 
order setup large maan network nodes ran nodes dual xeon workstations nodes maan tex min cai martin frank chen pedro szekely table example attribute schema grid nodes attribute name type min max unit name string url string os type string cpu speed numerical mhz memory size numerical mbytes disk size numerical gbytes bandwidth numerical cpu count numerical mbps cpu machines 
routing hops performance metric experiment hosting multiple nodes machine affect correctness results 

number neighbors logarithmic function network size know number neighbors node chord increases logarithmically network size 
maan uses chord algorithm maintain overlay network nodes property neighborhood states chord 
validate java implementation maan measured number neighbors node network size 
experiment set successor replication factor node maintains successors immediate successor 
redundant successors recover ring topology nodes fail replicate resources 
result shown confirms similar chord maan tex maan multi attribute addressable network grid information services neighborhood states maan scale large number nodes 

routing hops function network size logarithmic attribute range query range selectivity linear attribute range query range selectivity important performance metric number routing hops search request take resolve query 
section know number routing hops log smin total number nodes network smin minimum range selectivity attributes 
want search resources exact matching sub query smin number routing hops log logarithmic network size 
shows measurement result attribute queries range selectivity network nodes 
measured maan tex min cai martin frank chen pedro szekely average routing hops roughly match theoretical analysis dotted line log shows 

routing hops linear function query range selectivity nodes attribute normal range queries selectivity si number routing hops increases linearly network size 
si total nodes visited search queries want balance load nodes 
shows linear relationship number routing hops number nodes attribute range queries range selectivity nodes network 
reason number routing hops increases linearly range selectivity search queries shown 
theoretically average number routing hops range queries log smin 
measurement result matches quite analysis result shown dotted line 
see range queries large range selectivity costly basically flood network 
compared multi attribute query resolution algorithms proposed section iterative vs single attribute dominated 
shows comparison result approaches 
consistent theoretical analysis 

related structured systems related research 
systems classified broad categories dhts tree skiplist 
maan tex maan multi attribute addressable network grid information services 
expected number routing hops function number attributes nodes range selectivity chord dht systems include tapestry zhao pastry rowstron druschel ratnasamy koorde kaashoek karger :10.1.1.111.1818:10.1.1.140.3129
routing algorithms tapestry pastry inspired plaxton plaxton :10.1.1.38.1850
idea plaxton algorithm find neighboring node shares longest prefix key lookup message repeat operation find destination node shares longest possible prefix key 
tapestry pastry node log neighbors routing path takes log hops 
maps keys dimensional cartesian coordinate space partitioned zones 
node owns zone corresponding mapping node id coordinate space 
neighbors node nodes contiguous zones local zone 
routing straightforward message greedily forwarded neighbor closer key destination coordinate space 
nodes neighbors routing path length dn hops 
kaashoek el kaashoek karger proved constant neighborhood state log routing hops optimal 
order provide high degree fault tolerance node maintain log neighbors 
case log log log optimal routing hops achieved 
koorde neighborhood state optimal dht chord de bruijn graphs 
embeds de bruijn graph identifier circle chord forwarding lookup request 
lookup key koorde find successor walking de bruijn graph 
maan tex min cai martin frank chen pedro szekely tree structured system 
organizes nodes hierarchical fashion underlying data hierarchy 
query request forwarded upwards repeatedly reaching node longest matching prefix query 
query forward destination downwards tree 
node maintains constant number neighbors routing hops bounded height tree 
skip graphs aspnes shah skipnet harvey skip list structured systems :10.1.1.118.8846
skip graphs skipnet maintain log neighbors routing table 
node neighbor level distance node nodes far away 
similar fingers chord 
rings level nodes ring 
searching key skip graphs skipnet started top level node seeking key 
proceeds level overshooting key continuing lower level required reaches level 
routing hops searching key log 
structured systems provide scalable distributed lookup unique keys 
support efficient search keyword search multi dimensional range queries 
patrick reynolds amin vahdat reynolds vahdat proposed efficient distributed keyword search system distributes inverted index distributed hash table chord pastry 
minimize bandwidth consumed multi keyword conjunctive searches bloom filters compress document id sets order magnitude caching exploit temporal locality query workload 
large sets search results streaming transfers return desired number results 
psearch tang peer peer keyword search system distributes document indices network document semantics generated latent semantic indexing lsi 
psearch rolling index scheme map high dimensional semantic space low dimensional space 
uses content aware node bootstrapping force distribution nodes follow distribution indices 
xu extend handling range queries single attributes mapping dimensional space multi dimensional space space filling curve hash function 
range query route node zone includes middle point 
node recursively propagates request neighbors nodes intersect query visited flooding strategy 
maan tex maan multi attribute addressable network grid information services proposed compared different flooding strategies brute force controlled flooding directed controlled flooding 
address multi attribute range queries 
contrast system cristina schmidt schmidt proposed dimension reducing indexing scheme efficiently maps multi dimensional information space dimensional chord identifier space space filling curve 
system support complex queries containing partial keywords wildcards range queries 
solve load balance problem probing multiple successors node join migrating virtual nodes runtime 
system need know distribution different attribute values introduce extra joining migration overhead 

proposed multi attribute addressable network ma grid information services 
register grid resources set attribute value pairs search interested resources multiattribute range queries 
maan routes search queries nodes target resources registered avoids flooding queries irrelevant nodes 
maan supports efficient range queries mapping attribute values chord identifier space uniform locality preserving hashing 
preserves locality resources distributes resources nodes uniformly achieves load balancing nodes 
maan iterative single attribute dominated query routing algorithm resolve multi attribute queries 
maan node maintains routing information log nodes 
single attribute dominated query routing number routing hops resolve query log smin smin minimum range selectivity attributes scales number attributes 
smin number routing hops logarithmic number nodes 
maan support multi attribute range queries quite important limitations 
attribute schema resources fixed known advance maan 
believe supporting attribute schemas evolve network important research direction 
second range selectivity queries large flooding query network efficient routing nodes maan 
interesting analyze threshold range maan tex min cai martin frank chen pedro szekely selectivity flooding efficient routing maan different query resolution algorithms different kind queries 
current maan implementation uses maan specific nonstandard protocol top tcp communicate nodes 
grid community moved web services infrastructure ogsa tuecke 
real grid environment important design implement resource information services standard grid services 
approach implement maan network distributed grid service exposes generic resource registration discovery interface grid services 
maan network node uses maan specific protocol communicate soap 
similar karp provides service oriented dht network libraries applications 

gratefully acknowledge afosr program funding project contract number 
ramesh govindan helpful discussions yan contributing dominated query resolution idea 
foster kesselman 
globus metacomputing infrastructure toolkit 
international journal supercomputer applications high performance computing 
fitzgerald foster kesselman laszewski smith tuecke 
directory service configuring high performance distributed computations 
proceedings th ieee symposium high performance distributed computing 
iamnitchi foster 
peer peer approach resource discovery grid environments 
proceedings th symposium high performance distributed computing 

freenet sourceforge net ripeanu foster iamnitchi 
mapping gnutella network properties large scale peer peer systems implications system design 
ieee internet computing journal 
saroiu gummadi gribble 
measurement study peer peer file sharing systems 
proceedings multimedia computing networking 
maan tex maan multi attribute addressable network grid information services sen wong 
analyzing peer peer traffic large networks 
proceedings acm sigcomm workshop internet measurement workshop 
czajkowski foster karonis kesselman martin smith tuecke 
resource management architecture metacomputing systems 
lecture notes computer science vol 

zhao kubiatowicz joseph 
tapestry infrastructure faulttolerant wide area location routing 
technical report ucb csd 
rowstron druschel 
pastry scalable decentralized object location routing large scale peer peer systems 
lecture notes computer science vol 

stoica morris karger kaashoek balakrishnan 
chord scalable peer peer lookup service internet applications 
proceedings acm sigcomm 
ratnasamy francis handley karp shenker 
scalable content addressable network 
proceedings acm sigcomm 
kaashoek karger 
koorde simple degree optimal hash table 
nd international workshop peer peer systems iptps 
ratnasamy shenker stoica 
routing algorithms dhts open questions 
nd international workshop peer peer systems iptps 
plaxton rajaraman richa 
accessing nearby copies replicated objects distributed environment 
acm symposium parallel algorithms architectures 
bhattacharjee keleher 
query routing distributed directory 
spie 
aspnes shah 
skip graphs 
fourteenth annual acm siam symposium discrete algorithms 
harvey saroiu theimer wolman 
skipnet scalable overlay network practical locality properties 
proceedings fourth usenix symposium internet technologies systems 
xu 
scalable efficient range queries grid information services 
proceedings second ieee international conference peer peer computing 
zhang goel govindan 
incremental optimization distributed hash table systems 
acm sigmetrics reynolds vahdat 
efficient peer peer keyword searching 
acm ifip usenix international middleware conference middleware schmidt 
flexible information discovery decentralized distributed systems 
th ieee international symposium high performance distributed computing hpdc tang xu dwarkadas 
peer peer information retrieval self organizing semantic overlay networks 
acm sigcomm karp ratnasamy rhea shenker 
adoption dhts open hash public dht service 
irp tr tuecke czajkowski foster frey graham kesselman maguire sandholm vanderbilt 
physiology grid open grid services architecture distributed systems integration 
global grid forum draft recommendation 
maan tex maan tex 
