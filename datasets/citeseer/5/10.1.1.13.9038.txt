smart objects attentive agents christopher peters simon brian mac carol sullivan image synthesis group trinity college dublin dublin republic ireland artificial intelligence group trinity college dublin dublin republic ireland extended framework modelling agent object interactions virtual environments 
framework concept smart objects provides agents pre programmed interaction information automatic generation animations 
ability generate animations human intervention vital constructing plausible real time agents 
previous approaches model contains information directing attention agents interacting objects 
information useful driving gaze behaviours example grasping objects 
framework supports bottom attention capture top task driven simulation behavioural animation object basis 
provides support management interactions multiple agents single object 
show objects designed provide concrete example modelling approach gaze controller animation system 
keywords smart objects attention gaze behavioural animation 
animation autonomous agents challenging task 
agents high level decisions convert low level animations maintaining plausibility planning motion respect viewer 
simulation animations agent conducts interactions outside world 
allowing agent conduct interactions objects world number general approaches may taken 
option provide agent low level rules learning model allow agent learn objects 
unfortunately approach suitable ready worlds competent actors required 
endowing individual agents different mental models object large permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
wscg short papers proceedings wscg february czech republic 
copyright union agency science press world efficient terms storage 
option system shared concept objects 
agents system access knowledge object manipulated 
realistic approach may case 
fields psychology human computer interaction hci concept affordance gib suggests design real world devices inform users operate device 
de facto example shape door handle matches shape human hand suggests human handle grasped turned 
compelling advantage approach decreases complexity task performing realistic virtual human object interactions enormously 
successful implementation approach smart object accomplished thalmann kal 
approach objects contain information hints interacted agents 
typically information describes factors preconditions met objects parts object grasped character animated object 
contributions smart object model 
allow smart objects control gaze behaviours agents whilst object 
attention important aspect agent animations conveys sense presence plausibility viewers final animation 
object attention information pre processed modelling phase gaze manager generate number gaze motions high level manner agent decides look object 
second contribution place objects centre situation specific interactions characters allowing objects inform characters interact whilst simultaneously object 
example bar object allows characters perform interactions object 
section describe smart object modelling architecture direct low level animation agents 
section reviews gaze generation system uses attention information defined modelling object 
section looks smart objects constructed defined users studio max plug 
section contains suggestions 
object modelling primary impetus research conducted thalmann kal kal kal agent object interactions smart objects 
smart objects extend idea object specific reasoning objects contain information just intrinsic object properties see lev 
smart object object modelled interaction features 
interaction features defined parts movements descriptions object important role interacting agent 
smart objects provide needed parameters motion generation 
features identified way provide important information motion generator 
defining intrinsic object properties position mass appearance smart objects consist extra properties interaction information positions gestures 
example hand interaction information hand shape 
object behaviours consisting commands connecting action object part variables object states consequent behaviours 
behaviour dependent object variables door closed agent walk need open 
agent behaviours behaviours expected different interactions 
door opens agent walk predefined position passes door 
smart object applications provide number advantages commonplace approaches animation control separate high level planning low level object reasoning allow object multiple applications 
allow behaviours easily connected high level planners promote object oriented design object encapsulates data 
section describe smart object model kal number compelling differences 
important difference smart object model constructed way promote objects central interactions characters 
smart object model designed proactive persistent agent ppa architecture mac drive behaviour virtual humans simulations 
agents ppa architecture proactive sense take initiative follow goals irrespective actions player 
persistence refers fact times virtual world modelled extent regardless location relative user 
properties considered inherent part intelligent agent paradigm woo ignored agent architectures simulations particular computer games 
ppa architecture designed way promote situational intelligence techniques role passing mac smart objects designed promote similar ideas 
sections describe key features smart object model 
user slots component involved agent smart object user slot 
smart object number user slots associated 
considered dummy objects indicating firstly agent stand object direction face 
user slots labelled indicate type implies kind interactions performed slot 
agent smart object obtain free user slot appropriate type 
shows illustration smart bar object 
user slots shown barman slot general slot 
barman stand side bar facing direction bar customer uses general slot stand side bar facing agent barman slot 
user slots departure smart object model kal 
main advantage user slots avoid concurrency problems arise rules way original smart object model operates 
particularly important agent interactions centre smart objects 
example bar object allows bar patrons order drink barman barman drinks gives patrons patrons pay drinks drink 
lead serious concurrency problems making user slot notion particularly appealing 
biggest disadvantage user slots lead slightly repetitive behaviours agents stand position follow series steps overcome providing range user slots object ensuring animations repetitive 
usage steps user slot contains number usage steps describe step step manner agent object 
number key pieces information usage step information required animate agent step 
conditions met order agent move step 
details changes agent attributes object attributes completion usage step 
details information passed users object completion step 
agent free socially interact agents step 
points interest object agent focus usage step 
animation information important aspect usage step condition allows character step move usage step 
conditions take forms 
indicates agent wait animations required current step complete order move step 

illustration smart bar object indicating object user slots usage steps involved object slots conditions involved moving steps 
second interesting form condition may take agent particular slot wait agent slot reach particular usage step order move step 
way allow character interactions centred smart object 
shows illustration usage steps involved bar object barman general user slots 
arrows show conditions involved moving usage step 
usage steps arrows going directly step example going step ask step listen barman user slot require animations required step performed order move step 
point arrow moving step arrow leads start step user slot character current usage step wait character slot reaches usage step indicated arrow 
example agent general user slot step listen wait agent barman slot reached step listen move step order 
usage step complete changes attributes users object object listed usage step 
characters decisions particular objects internal motivations crossing thresholds mac motivations adjusted user attribute changes listed particular usage step 
attributes changing important pieces information passed characters object 
listed usage step 
characters implemented ppa architecture capable performing number social interactions mac 
include chatting usage steps example wait steps bar object characters free engage interactions nearby characters 
interactions allowed indicated step 
usage step includes information important parts object user focus gaze step 
gaze system explained section 
gaze gaze important consideration animating characters failure look expected directions destroy plausibility animation 
example grasping human normally preceded accompanied eye gaze important locations mac 
virtual character grasp objects looking grasp positions tend look robotic nature 
importantly gaze viewed manifestation attention 
key areas contemporary agents somewhat lacking conveying sense presence viewers 
short contemporary agents may look environments appear pay attention 
full system attention attention considered basis necessary step implementation high level controller 
number researchers explored gaze attention models behavioural animation 
chopra badler cho framework generating visual attention behaviour simulated human agent observations psychology human factors computer vision 
number behaviours described including eye behaviours locomotion monitoring reaching visual search free viewing 
gil presents high level approach agents endowed varying interests 
objects rated relevance interests agents attend objects rated highly respect interests 
number parameterised gaze behaviours implemented monitoring searching provide behavioural competences 
main interest respect gaze relates individual objects 
agents look different parts objects manner dependant task hand 
look different part door object want open want room number leads 
attention points objects necessary task hand agent may attention grabbed parts door bottom manner 

final position character number basic gaze motions 
left right stare motion look motion glance motion 
motions differ joint contributions eyes head spine 
attention related object properties essential premise gaze controller object contains number pre processed attention properties guide gaze control system running 
object properties useful controlling gaze behaviours agent decided look certain object scene 
note control attention deciding object look scene outside scope controller inevitably operate high level gaze manager smart objects partially control gaze behaviours 
attention points attention points fundamental properties applied object 
attention point represents interesting meaningful position object 
salient areas tend draw attention bottom manner 
attention point may contain tag defining meaningful feature surface object position 
tags strings interpreted runtime 
example food package object may contain attention point tagged label sign ingredients 
location visited gazing motions linked object behaviour scripts 
attention points tagged monitor positions agents monitor locations 
useful variety situations bar scene example important agent monitor bar table anticipation drink object arriving 
attention points added manually user modelling phase 
face descriptors individual faces groups faces may tagged descriptors 
descriptors allow single geometric object split number conceptually separate parts 
useful components span multiple faces may represented single part texture 
example label bottle object span multiple faces 
faces assigned tag sign label 
runtime attention point generated faces 
gaze manager gaze manager provides high level animation functions controlling eye gaze movements 
requests gaze manager movements gaze manager initialises low level animations necessary 
coupled attention information smart objects gaze manager uses basic set fundamental gaze motions provide appropriate looking behaviour 
manager arranges gazes queues queue store requests gaze motions second queue ordered winning requests 
basic gaze functions gaze manager provides general low level gaze types look glance stare 
gaze types differ contribution orienting joints spine head eyes final orienting motion 
glance animations allow eyes move maximum extents 
head spine contribute lesser amounts final motion spine providing smallest contribution 
look animations allow moderate amount movement eyes 
head main contributor type motion followed spine 
stare animations allow eye movements eyes stay rest orientation 
head spine orienting point interest 
cases orienting necessary simply eye movement cases small amount head movement 
provides illustrations different gaze types 
note dwell time eye target speed orienting motion tied gaze type passed parameters calling controllers 
gaze requests gaze requests gaze manager interface functions 
gaze request consists gaze type start time dwell time priority level 
dwell time amount time eye remain target position continuing requests 
noted guarantee gaze requests run time 
possible gaze motion delayed cancelled manager especially low priority high level gaze motions pending 
gaze request successfully activated list attention points extracted object 
consist static attention points grasp positions tagged points defined modelling phase 
visible attention points visited 
back face culling determine attention point visibility triangle associated attention point culled visible 
relevant visible attention point object visited order 
gaze duration dependent saliency value attention point defined modelling phase 

studio max plug creating smart objects 
bar object shown dummy objects 
green cubes represent user slots 
green spheres represent attention points 
high level behaviours constructed primitive gaze requests 
search behaviour example 
bus object search function animate virtual human way search object attention point tagged sign timetable 
attention point mark centre faces object tagged sign timetable 
object editor order allow world designers define smart objects object editor plug see created studio max 
plug written max script scripting language studio max allows building custom import export tools 
object editor provides interface allows assignment interaction attributes see section object studio max exporting attributes xml file 
addition object editor allows attributes saved loaded max file object 
creation smart object begins selection studio max mesh represent smart object real time system 
plug allows user create transform user defined number user slots object studio max transform tools 
user slots place plug allows previously discussed attributes defined facilitating easy creation smart objects 
reduce designer workload plug allows copying pasting user slot attributes 
user slots usage steps place plug allows creation transformation attention points tagging object faces descriptor information 
gaze manager uses information control gaze behaviour see section 
smart object defined plug studio max exported xml file uses proprietary dtd document type definition 
xml file loaded real time system provides information virtual humans interact attend object 
example case bar object represented mesh consisting bar counter bar taps plug create user slots type barman user slots type general 
studio max transform tools barman user slots positioned side bar taps orientated barman faces counter general user slots positioned side bar counter orientated agents slots face barman 

smart bar object action 
customer pays barman drink 
user slots created bar object plug define usage steps user slot 
example case general user slots third usage step customer order drink see right hand side 
case usage step attributes defined plug step number name keyframe animation order agent socially interact agents dealing barman agent proceed usage step finished ordering drink usage step general barman user slots defined plug copy paste usage steps specific type user slots usage steps 
plug create transform bar object attention points define face descriptors 
case object attention points placed bar counter customer anticipate arrival pint placed bar tap labels 
faces containing label bar tap mesh tagged sign label customer look different type waiting served 
extended framework concept smart objects 
extension built previous number ways attention properties added objects order facilitate automatic gaze control task context salient features 
coordination multiple agents provides object centric agent interactions 
easy plug modelling smart objects 
choice studio max allows designers leverage prior knowledge product fast smart object definition 
screenshot aloha system showing virtual humans smart bar object shown 
smart object allows complicated series agent agent agent object interactions directed smart object 
done number areas 
omission inability spawn new consumable objects runtime 
example agent uses bar object obtain drink new consumable drink object introduced world 
consumable objects smart objects require number extensions smart object implementation 
mentioned regard attention model information assist object gaze motions provided smart object description 
area concentrate attention model uses techniques attention processing scene level order determine objects agent looks 
object focus agent attention object properties useful driving gaze motions 
scheme automatically generating attention points objects may prove beneficial research 
cho chopra badler look 
automating attending behaviours virtual humans 
autonomous agents multi agent systems pp 
gib gibson theory affordances shaw eds perceiving acting knowing 
hillsdale nj erlbaum 
gil practical behavioural animation vision attention phd thesis university cambridge computer laboratory technical report tr 
kal thalmann modeling objects interaction tasks 
proc 
pp 
kal thalmann behavioural interface simulate agent object interactions real time proc 
ca pp 
kal thalmann direct interaction smart objects proc 
vrst pp 
lev 
connecting planning acting object specific reasoning phd thesis dept computer information science university pennsylvania 
pra pratt wilson requirements support form features solid modeling system report cam 
mac mackenzie grasping hand amsterdam netherlands elsevier science publishers 
mac cunningham proposal agent architecture proactive persistent non player characters proc 
th irish conference ai cognitive science 
mac cunningham sullivan men behaving appropriately integrating role passing technique aloha system proceedings animating expressive characters social interactions symposium aisb convention imperial college london 
mac cunningham sic system connectionist driven simulation socially interactive agents university dublin department computer science technical report tcd cs 
woo wooldridge jennings intelligent agents theory practice 
knowledge engineering review pp 
