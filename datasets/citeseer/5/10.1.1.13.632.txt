adaptive rate control streaming stored fine grained scalable video philippe de institut eurecom route des cr tes sophia antipolis france philippe de eurecom fr investigate adaptive streaming stored fine grained scalable video tcp friendly connection 
goal develop low complexity high performing schemes adequately adapt short long term variations available bandwidth 
novel framework low complexity streaming fine grained scalable video tcp friendly connection 
context scheme assumption complete knowledge bandwidth evolution derive optimal policy criterion involves image quality quality variability playback 
ideal optimal policy develop real time heuristic stream fine grained scalable video internet study performance real internet traces 
find heuristic policy performs ideal optimal policy wide range bandwidth scenarios run ordinary tcp policy essentially running policy popular tcp friendly algorithms 
categories subject descriptors information systems miscellaneous general terms algorithms theory experimentation keywords internet video streaming fine grained scalability applications 
commonly accepted transmission multimedia streams internet fair tcp traffic 
flow said tcp friendly permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
nossdav may miami florida usa 
copyright acm 
keith ross institut eurecom route des cr tes sophia antipolis france keith ross eurecom fr arrival rate exceed arrival rate conformant tcp connection network circumstances 
number tcp friendly congestion control algorithms proposed rap tfrc sqrt 
tcp tcp friendly algorithms react indications network congestion reducing transmission rate 
transmission rate tcp friendly algorithms typically smoother tcp 
network congestion occurs multiple time scales bandwidth available tcp friendly streams typically fluctuates time scales 
investigate adaptive streaming stored video tcp friendly connection 
goal develop low complexity high performing schemes adequately adapt short long term variations available bandwidth 
small time scale bandwidth fluctuations order rtts accommodated maintaining small play back delay seconds moment video frame sent server time frame decoded client 
buffers client store video frames decoded 
maintaining small playback delay provides server opportunity retransmit lost video packets decoding deadline 
longer time scale bandwidth fluctuations order seconds tens seconds addressed multiple versions video video 
layered encoded video application needs adaptive control policies decide layers streamed times order maximize quality video rendered user :10.1.1.23.1371
study streaming layer fine grained scalable fgs videos 
types video scalability snr spatial temporal fgs encodes video base enhancement layers 
fgs number bits enhancement layer suppressed server transmission decoder truncated bitstream increase video quality client 
bit plane fgs coding added mpeg standard 
framework intended valid layer fgs encoded video mpeg fgs videos 
contribution new framework streaming stored fgs video tcp friendly connec tion 
new framework calls client buffers prefetching playback synchronous transmission base enhancement layers 
policies operate framework require minimum real time processing suitable servers stream large number simultaneous unicast streams 
second contribution formulate solve optimal streaming problem 
optimization criterion simplistic easily tractable metrics account total video display quality variability display quality 
develop theory determining optimal streaming policy ideal knowledge evolution bandwidth 
optimal ideal policy provides bounds performance real time policies suggests real time heuristic policy 
simulations real internet traces show heuristic performs ideal optimal policy wide range scenarios 
compare streaming stored fgs video ordinary tcp connection streaming tcp friendly connection 
performance current tcp friendly congestion control algorithms usually assessed terms fairness tcp responsiveness changes network congestion smoothness throughput 
popular tcp friendly algorithms available bandwidth typically smoother tcp available bandwidth expects tcp friendly algorithms perform better particularly reducing quality fluctuations 
experiments show video quality fluctuations range tcp tcp friendly algorithms 
organized follows 
section framework streaming fgs encoded video single tcp friendly connection 
formulate optimization problem define performance metrics considered 
section develop theory optimal streaming ideal knowledge bandwidth evolution 
section realtime rate adaptation heuristic inspired optimization theory section 
simulations internet traces simulations mpeg fgs streaming platform study performance heuristic 
section compare performance heuristic run top tcp run top popular tcp friendly algorithms 

framework denote available bandwidth time permitting prefetching client buffers server streams video maximum rate instant suppose connection reliable retransmissions losses may occur due missed deadlines 
selective retransmissions possible client buffering 
buffering allow neglect analysis transmission delay server client 
stored video encoded layers base layer bl fine grained enhancement layer el 
simplicity assume video cbr encoded 
denote encoding rates base enhancement layers rb re respectively 
length video denoted sec 
shows architecture server 
server ks re re rb el bitstream bl bitstream server xe xb stores video separate files file contains bitstream pertaining base layer file contains bitstream pertaining enhancement layer 
server transmits maximum rate instant time server may sending prefetched frames client minutes 
reduce server complexity require server sends base enhancement instances frame acting synchronously 
implies client number prefetched bl frames equal number prefetched el frames 
transmitted frame server sends entire bl frame portion el frame 
fine grained property enhancement layer server truncate el portion frame level 
instant server decide enhancement layer data send 
specifically design time broken slots tk tk tn slot server determines enhancement layer level denoted ks re streams duration slot 
shown frames sent slot tk tk include entire base layer fraction enhancement layer ks 
frames sent slot may prefetched frames display seconds minutes 
length slot chosen slot composed complete video scenes 
keep constant fraction enhancement layer transmitted video scene avoiding changes perceptual image quality video scene 
length time slot order seconds help maintain low server complexity 
simplicity assume slot length equal constant write tk 
rate server transmits frames network depends available bandwidth slot tk tk 
requiring base enhancement layer components frame sent time available bandwidth dedicated base layer enhancement layer time tk tk respectively xb rb ks re xe rs rs rs rb ks re total coding rate video streamed times tk tk 
xe xb ye el prefetch buffer bl prefetch buffer yb client kc re rb decoder extension total coding rate video streamed time denoted rs rb ks re 
shown client stores temporarily data coming network base enhancement layer prefetch buffers 
yb ye denote amount data stored prefetch buffers time time decoder drains buffers rates rb kc re kc fraction enhancement layer available client frame scheduled decoded time encoding rate video displayed client time expressed rc rb kc re 
server initially sends seconds time worth full quality video client 
phase called initial build initial playback delay server client 
time client starts decode data prefetching buffers render video server streams rest video frames 
simplify analysis suppose playback starts client user going watch video frame performing vcr command 
tend denote time server stops sending video frames 
tend server sent video frame video fully rendered tend denote number seconds prefetched video contained prefetch buffers time server acts synchronously layer streamed proportion encoding rate base enhancement prefetch buffers value time server changes encoding rate enhancement layer time tk enhancement layer prefetch buffer contains parts video encoded different bit rates 
base layer truncated write time yb rb time server streams video frame going decoded client seconds total coding rate video decoded time expressed rc rs rc rs 
simplify notation denote tk 
assume time tk server knows value periodical receiver reports 
suppose connection reliable losses client occur data arrives client available bandwidth time rb coding rate base layer re coding rate fine grained enhancement layer length video sec 
ks proportion el sent server time tk kc proportion el decoded client time rs total coding rate video sent tk tk rc total coding rate video decoded time length server slot sec 
number time slots tend time streaming yb content client bl prefetch buffer time ye content client el prefetch buffer time initial build delay playback delay time playback delay time tk table notations decoding deadline 
data decoded 
assuming playback delay time tk losses may start happen time tk tk rs client buffers empty available bandwidth high feed decoder current video encoding rate 
server acts synchronously layers layer sent proportion coding rate losses happen layers frame time 
loss time tk tk suppose server able react keep streaming current part video meet decoding deadline 
client keeps incrementing decoding timestamp waits part video new current decoding deadline 
negative indicates part video arriving server earlier decoding deadline part video client waiting 
loss data 
table summarizes notations 

problem formulation transmission policy denoted rs rs 
rs set successive video encoding rates chosen server time slot tk tk video sequence order provide user best perceived video quality transmission policy minimize measure total distortion commonly employed mse mean squared error minimize variations distortion successive images 
video sequence may different rate distortion characteristics video sequence distortion typically vary linearly sequence chosen coding rate rs 
study restrict transmission policies ensure minimum quality ensuring decoding bl data loss ii maximize bandwidth efficiency total number bits decoded available bandwidth gives indication total video quality iii minimize variations rendered coding rate successive video sequences gives indication variations distortion 
metrics simple independent rate distortion characteristics particular video analysis remains useful deriving real time heuristics comparing different transport protocols 
bandwidth efficiency define bandwidth efficiency ratio average number bits decoded client seconds total rate video rc total number bits decoded rc rb re observing video data receiver may come initial build streaming write rb re tend dt nb bits lost rb re recall number bits lost number bits sent server deadline client 
coding rate variability previous studies designed various measures account rate variability case layered video small number layers 
propose measure case fgs encoding displayed video encoding rate rc take continuous values rb rb re 
equation rc rs rs rs intervals tk tk differences consecutive values rc client accounted differences consecutive values rs server 
measure accounts differences consecutive values encoding rate video displayed user rs rs rs index time slot server data left stream streaming ends time tend tm tm 
rs denotes mean value time series rs 
human eye perceive high variation quality small measure penalizes high differences consecutive values rs 
fgs coding important bit planes correspond higher values rs 
video layers encoded rb re higher mean value transmitted coding rates rs visible differences consecutive values rs 
measure rate variability normalized rs 

optimal transmission policy section assume available bandwidth connection transmission known priori 
allow formulate solve optimal stochastic control problem 
analysis solution serves purposes 
provides useful bound achievable performance bandwidth evolution known priori 
secondly theory helps design adaptation heuristic realistic case bandwidth known 
optimization criteria studied prioritize metrics base layer loss bandwidth efficiency coding rate fluctuations 
condition losses losses base layer data decoder may degrade considerably perceived video quality 
depending level error resilience coding system losses may cause freezing image time 
base layer losses disturbing quality number bits code video represented tend dt 
subsection determine necessary sufficient condition transmission policy rs rs 
rs base layer loss 
recall synchronous model base layer loss implies enhancement layer loss 
denote du tk min tk tk tk theorem 
transmission policy rs 
rs yields loss data decoding duration 
rs theorem provides slot upper bound video coding rate yields loss 
bound depends contents prefetch buffers slot available bandwidth duration slot 
proof 
having loss data equivalent having loss data interval tk tk 
fix 

data prefetching buffers time tk insure decoding loss current slot tk tk length seconds 
suppose clearly loss interval tk tk data prefetch buffers time tk sufficient feed decoder time tk time tk data prefetch buffer time tk consumed 
subsequently client starts consume data sent time tk encoded rate rs 
time tk time tk client attempts consume data rate rs 
follows loss time tk tk total amount data client attempts consume tk amount data transmitted interval tk tk tk rs tk du rearranging terms equation gives condition theorem 
definition 
set possible transmission policies rs satisfy theorem rs rb rb re loss maximizing bandwidth efficiency subsection consider problem maximizing bandwidth efficiency policies give loss 
loss condition theorem holds efficiency maximized tend dt maximized equivalent ing tend 
tend rs time server finishes streaming transmission policy rs 
fixed value define maximum time streaming transmission policies max max rs tend rs observe max depends 
maximum value attained policy rs set policies rs attain maximizing equivalent maximizing tend theorem 
set transmission policies maximizes satisfies rs tend rs max particular maximum value max dt rb re simply states order maximize bandwidth efficiency streaming application try exploit transmission channel long possible 
transmission policy sufficiently aggressive choice rs may streamed video frames long rendering client tend rs max additional bandwidth available rendering 
dt average available bandwidth playback interval 
special case consider max exists transmission policies maintain streaming rendering client 
case tmax re re minimizing rate variability set transmission policies rs yield loss data maximize bandwidth efficiency rs look minimize rate variability available bandwidth 
show problem solved finding shortest path graph 
minimum value attained policy rs 
definition 
define optimal state graph system graph represented nodes represent time tk possible sampled values buffering delay time tk arcs represent evolution buffering delay streaming video time tk time tk loss video data entire duration streaming 
initial state graph represents initial build seconds video data client prefetch buffers time 
final state reached time server shall finish streaming video data order maximize bandwidth efficiency time max tm tm 
theorem 
problem finding optimal transmission policy minimizes variability solved finding shortest path system state graph proof 
definition optimal state graph loss condition expressed theorem satisfied 
considering streaming video server times tk tk easily show tk tk 
dt rs means transition state time tk possible state time tk completely determined choice rs 
possible paths initial state final state give possible transmission policies rs 
final state graph insures trans mission policies satisfy tend rs max insuring theorem maximum bandwidth efficiency reached 
cost arc state denoted ck shown 
cost obtained recursively computation shortest path initial state final state obtained dynamic programming 
defined unique value rs system transition state value rs system transition state state shortest path final state 
way shortest path initial state final state yields minimizes measure variability section 
theorem assumes knowledge value max assume means stream base layer loss 
case max defined 
set value decrease re find shortest path optimal state graph possible value max exists possible path initial state final state mean contradicts hypothesis 
implemented algorithm finding shortest path graph max yielding minimum variability actual number nodes graph difficult assess 
depends size value max sampling precision buffering delays 
real time rate adaptation algo rithm henceforth longer assume available bandwidth known priori duration streaming 
motivated theory previous section provide heuristic real time policy adapt fly variations 
theory previous section provide useful bound able compare performance heuristic 
retrieve value client compute compute value rs rs rb rs rs rs rs real time algorithm presents real time algorithm 
time slot length seconds time tk server fixes encoding rate slot fixes rs 
recall server knows number seconds video data contained client prefetch buffers time tk 
server compute average goodput seen previous slot time tk tk denoted 
shown loss data previous time slot expressed rs shown slot algorithm operates 
potential loss upcoming slot minimizing base layer loss important objective set rs rb send base layer slot 
loss condition expressed theorem rs give conservative choice rs strongly depends variations available bandwidth seconds difficult predict 
additionally choice attempts maintain minimum seconds data client buffer sufficient mitigate jitter allow retransmission lost packets 
server start increasing value rs 
order maintain high bandwidth efficiency know theorem streaming long possible need maximize tend 
video encoding rate tracks average available bandwidth connection 
values averages may large fluctuations discussed section 
include smoothing factor aims smooth variations 
choosing rs rs try minimize differences consecutive values rs getting close smoothed average available bandwidth 
value chosen trade small quality variability small better bandwidth utilization high 
heuristic aggressive respect available bandwidth factor 
heuristic increases value rs resulting video data client prefetch buffers preventing streaming early 
simulations internet traces simulations real internet tcp traces 
snoop solaris collect goodput mn long tcp connections different times day university pennsylvania philadelphia institut eurecom rate mb time tcp goodput real time optimal time playback delay real time playback delay optimal time rate adaptation trace rb re mbps mbps france 
performed simulations time slot length video length 
client prefetch buffers collect video data client starts decoding rendering 
traces second averages depicted 
shows results simulation tcp trace average available bandwidth mbps 
coding rates layers set rb re mbps total coding rate video strictly superior average available bandwidth 
smoothing factor set 
top plot shows transmitted video encoding rate realtime heuristic encoding rate optimal transmission policy theorem connection goodput 
plot shows time tk amount data seconds client prefetch buffers real time optimal transmission policies 
observe optimal policy prefetches seconds video data playback smooth bandwidth variations achieve maximum bandwidth efficiency 
real time transmission policy prefetches seconds playback smooth bandwidth fluctuations doesn smooth optimal transmission policy 
top plot shows real time algorithm adapts varying available bandwidth 
particular time ms video coding rate drops minimum value rb playback delay drops seconds shown second plot 
real time transmission policy provides bandwidth efficiency close maximum compared 
real time policy nearly satisfies theorem doesn transmitting video frames just time slot rs graph 
order study performance real time algorithm various bandwidth situations respect video coding rate define normalized base layer coding rate rn simplicity assume rb re rest 
figures show evolution measures function rn trace kc ck mc max max kc mc max rate mb rate mb optimal state graph trace time trace time rate mb rate mb trace time trace time second average goodput collected tcp traces mean bandwidth efficiency constants 
depicts variations compared maximum achievable bandwidth efficiency theorem 
see realtime heuristic bandwidth efficiency close maximum rn corresponding favorable situation average available bandwidth high sustain streaming base layer part enhancement layer loss 
rn average available bandwidth closer base layer coding rate resulting loss base layer data increases difference achieved bandwidth efficiency maximum 
shows evolution variability defined section adaptation heuristic 
shows value denoted vel obtained streaming policy just adds removes entire el streaming duration 
plot minimum variability obtained optimal allocation close zero insignificant 
consider variability real time algorithm fgs video notice reaches maximum rn decreases rn increases 
rn large average available bandwidth lower rb re resulting fewer opportunities stream high bit rate video choose high values rs 
see bandwidth conditions total variability obtained heuristic lower roughly equal vel gives indication low level rate variations achieved heuristic 
table give results terms losses video data traces different values rn 
results confirm performance real time algorithm terms high bandwidth efficiency low variability variety bandwidth scenarios 
simulations mpeg fgs streaming platform simulations local testbed consisting streaming server client mpeg fgs decoder provided thomson multimedia french national project visi 
video fps minute video clip depicting city france featuring high low motion sequences 
bl el coding rates respectively rb kbps re kbps 
el mean rate variability link server client set xmax kbps rb re variable cross traffic mean kbps generated server client order yield variable available bandwidth streaming application 
table shows results obtained adaptive algorithm sec compared cases bl layers loss case rate adaptation constant encoding rate rs kbps 
results terms mean psnr sum absolute differences psnr successive images 
see adaptation algorithm gives better image quality compared static case price small increase total quality variability successive images variability induced streaming bl 

streaming tcp friendly gorithms order reduce image quality variation number studies advocate smooth rate tcp friendly algorithms streaming 
section show stored fgs encoded video streaming ordinary tcp achieve essentially low level quality variability achieved smooth rate tcp friendly algorithm 
achieve low level variability combining prefetching coarse grained rate adaptation provided real time heuristic previous section 
real time adaptation algorithm run top tcp top tcp friendly algorithm tfrc tcp friendly rate control defined 
ns collect tcp tfrc traces network conditions 
network topology commonly employed single bottleneck congestion occurs link routers access links delay ms mbits bottleneck link delay ms 
playback delay server client maintained order seconds server ability retransmit lost packets 
assume tfrc connection fully reliable 
red bottleneck queue avoid global tcp synchronization 
collected traces run real time adaptation algorithm different values rn compare results terms measures de trace mbps trace mbps trace mbps vel losses vel losses vel losses mean psnr diff psnr bl loss el rs cst kbps el el loss table simulation mpeg fgs decoder fine network load number simultaneous tcp tfrc connections inside bottleneck 
vary load 
part table shows function network load base layer normalized coding rate rn minimum variability achieved optimal transmission policy theorem 
see minimum variability tcp slightly higher minimum variability achieved tfrc tfrc long term throughput considerably smoother tcp especially low loss rates 
observe cases remains low network loads indicates application layer smoothing approach potential wide range network conditions 
applied real time algorithm tcp tfrc traces 
network load varied smoothing parameter gives different values couple 
choices bring maximum keep minimizes variability second part table gives results variability obtained transmission policy add full el just denoted vel 
columns show corresponding value 
observe network loads 
values remain quite low usually vel difference may probably noticed user 
observe network load competing tcp tfrc connections smoothing parameters minimizes insuring high satisfy tfrc tcp 
tfrc smoother rate variations tcp low loss environment application need smooth bandwidth variations tcp tfrc 
shows rate adaptation provided optimal policy real time algorithm tcp tfrc connections respectively 
bottleneck link shared long lived tcp long lived tfrc connections base layer normalized encoding rate set rn 
cases optimal value smoothing parameter real time algorithm table network load table simulations internet traces load tfrc tcp vel tfrc tcp table performance function network load tfrc tcp 
top plot figures shows coding rate real time heuristic coding rate optimal transmission policy connection goodput 
bottom plot shows time tk amount data seconds client prefetch buffers real time optimal transmission policies 
compare real time transmission policies figures 
top plots show real time rate adaptation algorithm yields smooth variations transmitted video coding rate tcp tfrc consistent low values obtained table load 
furthermore realtime algorithm sustains duration streaming rendering cases ensuring high bandwidth efficiency 
comparing bottom plots see real time algorithm needs prefetch seconds video smooth variations tcp needs prefetch seconds video case tfrc 
comparing optimal transmission policies figures see variability attained negligible cases optimal transmission policies require seconds video data prefetched cases 

new framework streaming stored fgs encoded videos 
derived analytical results method find optimal transmission policy maximizes measure bandwidth efficiency minimizing measure coding rate variability 
real time algorithm adaptive streaming fgs video 
simulations showed heuristic yields near optimal performance wide range bandwidth scenarios 
context streaming stored fgs video client buffering argued streaming tcp gives video quality results comparable streaming smoother tcp friendly connections 
intend improve performance heuristic tak rate mb time tcp tcp goodput real time optimal time playback delay real time playback delay optimal time rate mb time tfrc tfrc goodput real time optimal time playback delay real time playback delay optimal time rate adaptation tcp tfrc load tcp tfrc ing account different rate distortion characteristics successive video scenes 

iso iec jtc sc wg information technology generic coding audio visual objects visual iso iec amd december 
aravind reibman 
packet loss resilience mpeg scalable video coding algorithms 
ieee trans 
circuits systems video technology october 
bansal balakrishnan 
binomial congestion control algorithms 
proc 
ieee infocom pages anchorage may 
de ross 
adaptive streaming stored video tcp friendly context multiple versions multiple layers proc 
international packet video workshop korea may 
floyd fall 
promoting congestion control internet 
ieee acm trans 
networking august 
floyd handley padhye widmer 
equation congestion control unicast applications 
proc 
acm sigcomm stockholm sweden august 
li 
overview fine granularity scalability mpeg video standard 
ieee trans 
circuits systems video technology march 
loguinov radha 
retransmissions schemes real time streaming internet 
proc 
infocom pages anchorage may 
zhang providing smoother quality layered video stream 
proc 
nossdav chapel hill north carolina june 
paxson 
internet packet dynamics 
ieee acm trans 
networking june 
rejaie estrin handley 
quality adaptation congestion controlled video playback internet 
proc 
acm sigcomm pages cambridge september 
rejaie handley estrin 
rap rate congestion control mechanism realtime streams internet 
proc 
ieee infocom pages new york march 
rhee 
error control techniques interactive low bit rate video transmission internet 
proc 
acm sigcomm pages september 
ross 
optimal streaming layered video 
proc 
ieee infocom pages tel aviv israel march 
ross 
streaming stored continuous media fair share bandwidth 
proc 
nossdav chapel hill north carolina june 
tan zakhor 
real time internet video error resilient scalable compression tcp friendly transport protocol 
ieee trans 
multimedia june 
yang kim lam 
transient behaviors tcp congestion control protocols 
proc 
ieee infocom pages anchorage may 
zhang zhu 
zhang 
resource allocation multimedia streaming internet 
ieee transactions multimedia september 
