odyssey local refinement multilevel preconditioning iii implementation numerical experiments stephen bond michael holst 
examine number additive multiplicative multilevel iterative methods preconditioners setting dimensional local mesh refinement 
standard multilevel methods effective uniform refinement discretizations elliptic equations tend effective algebraic systems arise discretizations locally refined meshes losing optimal behavior storage computational complexity 
primary focus bpx style additive multiplicative multilevel preconditioners various additive multiplicative hierarchical basis method hb local mesh refinement setting 
papers shown bpx wavelet hb uniformly bounded condition numbers classes locally refined meshes fairly standard easily implementable red red green mesh refinement algorithms 
third article describe detail implementation types algorithms including detailed discussions datastructures traversal algorithms employ obtaining optimal storage computational complexity implementations 
show algorithms implemented standard datatypes available languages fortran resulting algorithms optimal linear storage requirements resulting multilevel method preconditioner applied optimal linear computational costs 
successfully datastructure ideas matlab implementations open source finite element software package 
finish sequence numerical experiments illustrating effectiveness number bpx stabilized hb variants examples requiring local refinement 
key words 
finite element methods local mesh refinement multilevel preconditioning bpx red red green refinement datastructures 
ams subject classifications 


number effective optimal multilevel methods uniform refinement discretizations elliptic equations handful methods effective algebraic systems arise discretizations locally refined meshes remaining methods typically suboptimal storage computational complexity 
examine number additive multiplicative multilevel iterative methods preconditioners specifically dimensional local mesh refinement scenarios 
primary focus bramble xu bpx style additive multiplicative multilevel preconditioners additive multiplicative hierarchical basis method hb 
shown bpx wavelet author supported part burroughs fund training program uc san diego part nsf aci dms part doe eng 
support provided intel microsoft alias wavefront packard foundation 
second author supported part howard hughes medical institute part nsf nih 
third author supported part nsf career award part ucsd hellman fellowship 
department computer science california institute technology pasadena ca usa cs caltech edu 
department chemistry biochemistry department mathematics university california san diego la jolla ca usa bond ucsd edu 
department mathematics university california san diego la jolla ca usa ucsd edu 
bond holst hb uniformly bounded condition numbers classes locally refined meshes fairly standard easily implementable red red green mesh refinement algorithms 
article describe detail implementation types algorithms including detailed discussions datastructures traversal algorithms employ obtaining optimal storage computational complexity implementations 
show algorithms implemented standard datatypes available languages fortran resulting algorithms optimal linear storage requirements resulting multilevel method preconditioner applied optimal linear computational costs 
successfully utilized datastructure ideas matlab implementations open source finite element software package 
sequence numerical experiments illustrating effectiveness number bpx stabilized hb variants examples requiring local refinement 
problem class interest purposes linear second order partial differential equations pde form 
rd rd symmetric positive definite matrix nonnegative 
shape regular initial partition finite number simplices generate 
refining initial partition red green red local refinement strategies spatial dimensions 
sj simplicial linear finite element fe space corresponding tj equipped zero boundary values 
set nodal basis functions sj denoted nj nj dim sj equal number interior nodes tj 
successively refined fe spaces form nested sequence 
sj 

mesh case red refinement sj framework conforming fe methods discretizing 
bilinear form linear functional representing weak formulation denoted dx dx consider galerkin formulation find sj sj 
employing expansion nodal basis sj problem reduces algebraic equation form nj combination coefficients nj nodal discretization matrix vector arise rs nj 
local refinement preconditioning iii implementation solving discretized form iterative methods subject intensive research enormous practical impact number application areas computational science 
quality approximation physical simulation required meshes containing large numbers simplices leading approximation spaces sj large dimension nj 
iterative methods scale nj effectively usually leads multilevel type iterative methods preconditioners 
optimal methods means methods scale linearly nj memory computational complexity approximation quality requirements sj force nj large parallel computing techniques solve 
overcome difficulty employs adaptive methods involves posteriori error estimation drive local mesh refinement algorithms 
approach leads approximation spaces sj adapted particular target function interest result achieve desired approximation quality smaller approximation space dimension nj non adaptive methods 
solve algebraic system unfortunately available multilevel methods preconditioners longer optimal memory computational complexity 
due fact local refinement setting approximation spaces sj increase dimension geometrically uniform refinement setting 
result single multilevel cycle longer linear complexity difficulty encountered multilevel methods 
storage discretization matrices vectors approximation space required assembling cycle similar iterations longer linear memory complexity 
partial solution problem multilevel methods local refinement setting provided hb method 
method direct hierarchical decomposition approximation spaces sj overlapping decomposition employed multigrid bpx method construction linear memory complexity linear computational complexity single cycle iteration 
unfortunately hb condition number uniformly bounded leading worse linear computational complexity 
condition number growth slow logarithmic dimensions quite rapid geometric dimensions making ineffective local refinement setting 
alternatives hb method including bpx methods wavelet hb methods provide final solution condition number growth problem 
shown bpx preconditioner uniformly bounded condition number certain classes locally refined meshes dimensions shown condition number remains uniformly bounded certain classes locally refined meshes spatial dimensions :10.1.1.13.589
shown wavelet hb method give rise uniformly bounded conditions numbers certain classes local mesh refinement dimensional settings :10.1.1.13.589
view interest examine practical implementation aspects bpx stabilized hb iterative methods preconditioners :10.1.1.13.589:10.1.1.13.589
remainder structured follows 
review algorithms giving unified algorithm framework implementations :10.1.1.13.589:10.1.1.13.589
core sense describes detail datastructures key algorithms employed implemen bond holst tation algorithms 
focus practical realization optimal linear complexity implementations memory operation complexity 
software package leveraged implementations described briefly 
sequence numerical experiments implementations illustrating condition number growth properties bpx stabilized hb methods 
draw 
overview multilevel methods 
article shown bpx preconditioner optimal meshes local red green local red refinement procedures :10.1.1.13.589
classical bpx preconditioner written action operator follows xu nj sj 
prolongation operator level denoted denote prolongation operator level pj 
nj nj defined identity matrix nj matrix representation introduce version smoother sj smoother symmetric gauss seidel iteration preconditioner modified hierarchical sense nj nj sj 
new preconditioner corresponds additive hb preconditioner 
matrix representation formed matrices hj simply tails pj corresponding newly introduced degrees freedom dof fine space 
words hj nj nj nj keeping fine columns nj nj columns pj 
matrix representation hb presence geometric increase number dof assumption optimality single classical multigrid bpx iteration cost local refinement preconditioning iii implementation iteration remain optimal 
case local refinement bpx preconditioner usually known additive multigrid easily suboptimal suboptimal cost iteration see 
hand hb preconditioner suffers suboptimal iteration count 
deficiencies preconditioners overcome restricting sum nodal basis functions supports intersect refinement region 
call set fine dof set contains fine dof immediate neighboring coarse dof 
referred bpx preconditioner local refinement 
xu sj ii ii nj 
nj 
bpx decomposition gives rise basis functions locally supported decay rapidly outside local support region 
allows locally supported approximations illustrated figures 
fig 

hierarchical basis function modification 
fig 

wavelet modified hierarchical basis function iteration symmetric gauss seidel approximation upper lower view 
wavelet modified hierarchical basis wmhb methods viewed approximation wavelet basis stemming bpx decomposition 
similar wavelet multilevel decomposition approach taken bond holst fig 

wavelet modified hierarchical basis function iteration jacobi approximation upper lower view 
orthogonal decomposition formed discrete equivalent inner product 
approach utilizes bpx level decomposition 
adaptive regimes primary method interest wmhb method 
wmhb methods described additive multiplicative schwarz methods 
previous papers shown additive version wmhb method optimal certain types red green mesh refinement :10.1.1.13.589
notational framework method defined recursively follows definition 
additive wmhb method defined 
smooth pde coefficients optimal results established multiplicative version wmhb method :10.1.1.13.589
numerical experiments demonstrate optimal results 
method written recursively definition 
multiplicative wmhb method defined represent subblocks correspond coarse fine fine coarse fine fine interactions dof level respectively 
denotes gauss seidel jacobi approximation 
complete description related algorithms see :10.1.1.13.589
approximation 
implementation 
utility finite element code depends strongly efficient implementation core algorithms data structures 
theoretical results involving complexity little practical importance methods implemented 
algorithms involving data structures usually means striking balance storage costs computational complexity 
finding minimal representation data set useful information accessed efficiently 
local refinement preconditioning iii implementation 
sparse matrix structures 
implementation relies total distinct sparse matrix data structures compressed column col compressed row row diagonal row column drc orthogonal linked list 
storage schemes attempts record location value nonzeros minimal amount information 
schemes differ exact representation effects speed manner data retrieved 
illustrate data structures works practice consider storing sparse matrix col compressed column format commonly sparse matrix type literature 
format chosen boeing matrix collection production codes 
data structure nonzeros arranged column single double precision array indices referred pointers corresponding entry column stored integer array length array ia greater number columns entry equal number nonzeros plus 
difference successive entries ia array reflects number nonzeros column 
column nonzeros index column repeated 
determine location nonzero column row index entry stored integer array restriction entries ordered column columns ordered 
memory required store datastructure nz nc size int nz size double nz nc number nonzeros columns respectively 
row compressed row data structure just transpose compressed column data structure nonzero entries row pointers column indices stored ia ja respectively note example matrix structurally symmetric ia ja arrays identical row col cases 
memory required store datastructure nz nr size int nz size double nr number rows 
bond holst drc diagonal row column format structurally symmetric data structure valid square matrices 
format diagonal stored full vector strictly upper lower triangular portions stored row col formats respectively 
leveraging symmetry nonzero structure ia ja arrays upper lower triangular parts memory required store datastructure row col diagonal full matrix structurally symmetric 
ip fig 

illustration datastructure 
orthogonal linked list format dynamically datastructure methods 
variable length linked lists fixed length array suitable situations total number nonzeros known priori 
datastructure illustrated graphically 
nonzero link containing value row index column index pointers row column 
keep track link row column additional pointer arrays ip jp 
long order nonzeros row accessing entry accomplished order time 
structure traversed rowwise columnwise depending situation 
matrix symmetric lower triangular portion stored 
total storage overhead structure nz size double size int nc nr nz size ptr 
considerably datastructures note asymptotic complexity linear number nonzeros 
jp local refinement preconditioning iii implementation 
sparse matrix products 
key preprocessing step hierarchical basis methods converting nodal matrices vectors hierarchical basis 
operation involves sparse matrix vector matrix matrix products level refinement 
ensure entire operation linear cost respect number unknowns level change basis operations cost nj nj nj nj number new nodes level traditional multigrid algorithm possible enforcing variational conditions operates nodes level just newly introduced nodes 
linear operator converts nodal hierarchical basis written terms change basis matrix nj nj nj nj nj nj nj nj representation assumed nodes ordered nodes nj inherited previous level listed nj new dof listed second 
wavelet modified wmhb unmodified hierarchical basis hb hb case block represents nj rows prolongation matrix blocks zero resulting simple form wmhb blocks computed mass matrix results formula inv hb hb inv hb hb inv approximation inverse preserves complexity 
example simple inverse diagonal low order matrix polynomial approximation 
hb blocks taken mass matrix hb basis hb nodal 
remainder section restrict attention wmhb case 
hb case follows trivially additional subblocks set zero 
reformulate nodal matrix representation bilinear form terms hierarchical basis perform triple matrix product form wmhb gt nodal order keep linear complexity copy fixed number times copied level 
fixed size data structures unsuitable storing product predicting nonzero structure just difficult computing 
reasons chosen strategy copy finest level storing result bond holst eventually wmhb second form product pairwise contributing result 
third nj columns rows wmhb stripped stored fixed size blocks operation repeated level block new nodal algorithm 
wavelet modified hierarchical change basis copy nodal wmhb format 

multiply wmhb wmhb 
multiply wmhb wmhb 
remove formats respectively 
blocks storing row col drc 
removal remains wmhb block 

descending level 

store wmhb note order preserve complexity algorithm matrix matrix algorithms carefully implemented 
example change basis involves computing products 
preserve storage complexity kept compressed column format col actual product loop columns ordered loop nonzeros column loop corresponding row column 
exactly reason able traverse row column chosen orthogonal linked matrix structure change basis 
derive optimal complexity algorithms products ensure outer loop dimension size nj 
due limited ways sparse matrix traversed ordering remaining loops usually completely determined 
gains obtained symmetric case upper lower portion matrix needs explicitly computed stored 

finite element toolkit 
number variations methods described implemented finite element toolkit 
open source finite element modeling package developed holst research group years caltech uc san diego generous contributions number colleagues 
consists low level portability library called minimal abstraction layer object oriented top built general finite element modeling kernel called mc manifold code 
images appearing produced component call sg socket graphics built top 
includes fully functional matlab version mc called shares mc datastructures posteriori error estimation mesh refinement algorithms iterative solution methods 
preconditioners employed local refinement preconditioning iii implementation implemented authors ansi class library extensions mc matlab toolkit extensions 
implementations mathematically equivalent implementation restricted spatial dimensions 
mc implementation threedimensional 
extensions mc distributed library matlab extensions distributed 
sg mc freely gnu general public license gpl 
information www org fig 

adaptive mesh experiment set 
numerical experiments 
test problem follows 
source term constructed true solution sin sin experiment sets adaptivity driven geometric criterion 
simplices intersect quarter circle centered origin radius experiment sets ii respectively repeatedly marked refinement 
boundary conditions domain experiment set 
bond holst boundary conditions domain experiment set ii 
stopping criterion error experiment set red green refinement subdivides simplices intersecting arc radius gives rise rapid increase number degrees freedom dof 
adaptive refinement strategy creates geometric increase number dof see 
experiment set ii designed small number dof introduced level 
order green refinement subdivides simplices intersecting smaller arc radius 
table iteration counts various methods red green refinement driven geometric refinement experiment set levels mg bpx pcg mg pcg bpx pcg pcg pcg mg pcg bpx pcg hb pcg wmhb nodes dof experiments utilize direct coarsest level solve smoother symmetric gauss seidel iteration 
set dof smoother acts fundamental difference methods 
classical multigrid methods smooth dof hb methods smooth fine dof 
wmhb style methods smooth hb methods different basis 
bpx methods smooth fine dof hb methods classical multigrid 
multiplicative methods consideration mg bpx 
guide tables figures 
mg refer classical multigrid particular corresponds standard cycle implementation 
corresponds exactly mg algorithm pre post smoothing restricted fine dof 
bpx refers multiplicative version bpx smoother restricted fine dof immediate coarse neighbors called neighbors 
neighbors fine nodes directly determined sparsity pattern fine fine subblock stiffness matrix 
set dof bpx method smooths simply union column locations nonzero entries corresponding fine local refinement preconditioning iii implementation table iteration counts various methods green refinement driven geometric refinement experiment set ii 
levels mg bpx pcg mg pcg bpx pcg pcg pcg mg pcg bpx pcg hb pcg wmhb nodes dof dof 
observation smoother easily modified bpx smoother 
similar multiplicative methods sense definition difference basis 
particular change basis matrices different result wavelet stabilization projection coarser finite element spaces approximated jacobi iterations 
pcg stands preconditioned conjugate gradient method 
pcg mg pcg bpx pcg hb pcg wmhb involve additive mg pbx hb wmhb preconditioners cg respectively 
sense definition hb wmhb additive versions respectively 
preconditioner implemented manner similar described 
note nodes denotes total number nodes simplicial mesh including dirichlet neumann nodes 
iterative methods view dof union unknowns corresponding interior neumann robin boundary dof denoted 
bond holst flops mg 
bpx dof flops add 
mg bpx hb wmhb dof fig 

flop counts single iteration multiplicative left additive right methods experiment set flops mg 
bpx dof flops add 
mg bpx hb wmhb dof fig 

flop counts single iteration multiplicative left additive right methods experiment set ii 
refinement procedure utilized experiments fundamentally red green described :10.1.1.13.589
remove restrictive conditions simplices level created simplices level bisected green refined simplices refined 
case claimed results hold 
experiments done module package 
key routines implementation produce numerical results appendix 
iteration counts reported tables 
optimality bpx bpx wmhb evidenced experiments 
observed constant number iterations independent number dof case 
hb methods suffer logarithmic increase number iterations 
methods tested bpx closest mg terms low iteration counts 
clearly noted experiments cost iteration various methods differ substantially 
report flop counts single iteration methods see figures 
experiment set cost iteration linear methods 
wmhb methods expensive ones 
emphasize refinement flops local refinement preconditioning iii implementation mg dof flops mg dof fig 

flop counts variational conditions experiment set left experiment set ii right 
experiment set example adaptive refinement geometric increase number dof 
mg exploits geometric increase enjoys linear computational complexity 
experiment set ii realistic sense refinement highly adaptive introduces small number dof level 
observe suboptimal logarithmic computational complexity mg methods realistic scenarios 
accordance theoretical justification highly adaptive refinement mg methods asymptotically suboptimal 
storage complexity severely prevents mg methods viable tool large highly adaptive settings 
coarser representations finest level system algebraically formed enforcing variational conditions 
methods require matrix matrix products 
form called preprocessing step multilevel methods 
computational cost variational conditions regardless having multiplicative additive version method 
computational cost orders magnitude cheaper cost single iteration 
step storage complexity dominate complexity 
due memory bandwidth problems conventional machines careful choice datastructures 
subblock formed coarser level cost variational conditions mg bpx mg bpx cheapest methods 
hand hb require hierarchical basis 
wmhb methods demanding requiring wavelet modified hierarchical basis 
wavelet structure creates denser change basis matrix hierarchical basis 
preprocessing wmhb methods expensive methods 


examined number additive multiplicative multilevel iterative methods preconditioners setting dimensional local mesh refinements 
standard multilevel methods effective uniform refinement discretizations elliptic equations tend effective algebraic systems arise discretizations locally refined meshes losing optimal behavior storage computational complexity 
primary focus bpx style additive multiplicative multilevel preconditioners bond holst various additive multiplicative hierarchical basis method local mesh refinement setting 
papers shown bpx wavelet hb uniformly bounded condition numbers classes locally refined meshes fairly standard easily implementable red red green mesh refinement algorithms 
third article described detail implementation types algorithms including detailed discussions datastructures traversal algorithms employ obtaining optimal storage computational complexity implementations 
showed algorithms implemented standard datatypes available languages fortran resulting algorithms optimal linear storage requirements resulting multilevel method preconditioner applied optimal linear computational costs 
sequence numerical experiments illustrating effectiveness bpx stabilized hb methods adaptive regimes 
expected multigrid methods effective terms iteration counts remaining small constant dof increase suboptimal complexity iteration local refinement setting bpx methods attractive 
furthermore storage complexity prohibits mg methods viable tool large highly adaptive settings 
addition additive multiplicative wmhb methods preconditioners demonstrated similar constant iteration requirements increasing dof cost iteration remains optimal linear local refinement setting 
consequently highly adaptive regimes bpx methods prove effective wmhb methods second effective 
superiority bpx wmhb methods striking large dimensional problems 
acknowledgments 
authors bank enlightening discussions 

appendix highlights implementation 
function multiplicative lev hb multiplicative methods mg bpx prolongation stiffness change basis ring global global level oner oner oner oner global hb bpx get stiffness matrix level eval num str lev lev oner eval oner num str lev recover dimensions eval num str lev num str lev size shorthand top tail vectors matrices local refinement preconditioning iii implementation finite element mesh graph stiffness matrix top tail hb zeros nonzero structure stiffness matrix finite element solution finite element mesh nz finite element mesh graph stiffness matrix graph stiffness matrix nonzero structure stiffness matrix finite element solution nz fig 

dialog box experiment set get change basis matrix level eval num str lev transform hb basis pre smoothing symmetric gauss seidel smooth point hb lev correct smoother result top top hb top tail tail mg bpx nonzero structure stiffness matrix finite element solution nz bond holst zeros zeros bpx smooth point lev mg smooth point lev coarse grid defect restriction bpx oner oner mg top top tail tail recursion top multiplicative top lev hb hb correct coarse solve result tail tail hb tail top top post smoothing symmetric gauss seidel smooth point hb lev transform back nodal basis mg bpx interpolate result tail tail top bpx oner oner oner smooth point lev mg smooth point lev function additive lev hb additive methods mg bpx hb wmhb prolongation stiffness change basis ring global global oner oner oner oner global hb bpx get stiffness matrix level eval num str lev local refinement preconditioning iii implementation lev oner eval oner num str lev recover dimensions eval num str lev num str lev size shorthand top tail vectors matrices top tail hb zeros get change basis matrix level eval num str lev transform hb basis fine smoothing symmetric gauss seidel smooth point hb lev additive mg zeros zeros smoothing symmetric gauss seidel bpx smooth point lev mg smooth point lev coarse grid restriction top top tail tail recursion top additive top lev hb hb transform hb basis interpolate result tail tail top bpx oner oner oner mg bond holst adaptive multilevel numerical methods applications diffusive biomolecular reactions phd thesis department mathematics university california san diego la jolla ca 
holst odyssey local refinement multilevel preconditioning optimality bpx preconditioner siam numer :10.1.1.13.589
anal 
review 
odyssey local refinement multilevel preconditioning ii stabilizing hierarchical basis methods siam numer :10.1.1.13.589
anal 
review 
bank dupont analysis level scheme solving finite element equations tech 
rep center numerical analysis university texas austin 
cna 
bank dupont hierarchical basis multigrid method numer 
math pp 

basic norm equivalence theory multilevel methods numer 
math pp 

bramble new estimates multilevel algorithms including cycle math 
comp pp 

bramble xu parallel multilevel preconditioners math 
comp pp 

multilevel preconditioning numer 
math pp 

demmel gilbert li liu approach sparse partial pivoting siam matrix anal 
appl pp 

duff grimes lewis sparse matrix test problems acm trans 
math 
softw pp 

holst adaptive numerical treatment elliptic systems manifolds advances computational mathematics pp 

wavelet methods fast resolution elliptic problems siam numer 
anal pp 

oswald multilevel finite element approximation theory applications teubner zur teubner stuttgart 
stevenson robustness additive multiplicative frequency decomposition multi level method computing pp 

robust hierarchical basis preconditioner general meshes numer 
math pp 

wang stabilizing hierarchical basis approximate wavelets theory numer 
linear alg 
appl number pp 

wavelet methods design efficient multilevel preconditioners elliptic pdes multiscale wavelet methods partial differential equations oswald eds academic press ch 
pp 

stabilizing hierarchical basis approximate wavelets ii implementation numerical experiments siam sci 
comput number pp 

xu qin remarks multigrid preconditioner siam sci 
comput pp 

multilevel splitting finite element spaces numer 
math pp 

