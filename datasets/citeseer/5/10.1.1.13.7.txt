trickle flood 
active attacks mix types andrei serjantov roger dingledine paul syverson university cambridge computer laboratory andrei 

cam 
ac uk free haven project edu naval research laboratory nrl navy mil 
literature contains variety different mixes deployed anonymity systems 
explore anonymity message delay properties show mount active attacks altering traffic mixes 
show certain attacks destroy anonymity particular message completely 
cost attacks terms number messages attacker insert network time spend 
discuss advantages disadvantages mixes settings appropriate 
look dummy traffic sg promising ways protecting attacks point potential weaknesses existing designs suggest improvements 
modern anonymity systems mixes 
chaum introduced concept researchers developers described mix variations 

different aims approaches fail understand performance anonymity tradeoffs 
fact mixes known fielded systems mix master mentioned briefly literature 
aim start closing gap enumerating exploring variety mlx architectures 
particular consider extent mixes vulnerable active attacks attack 
specifically attacker targeting specific message going mix manipulate batch messages entering mlx message unknown batch target message 
manipulation may involve delaying dropping incoming messages trickle attack flooding batch attacker messages flooding attack 
call attacks combinations blending attacks 
provide rigorous analysis comparison properties mix variant including anonymity latency resistance blending attacks 
give intuition guidelines environments circumstances suitable mlx variant 
blending attack taxonomy past anonymity systems concerned protecting users passive adversaries global local usually citing blending attack vulnerability quoting general applicable method prevent attack 
discuss ways reducing vulnerability 
consider global active adversary able see traffic links delay remove insert arbitrarily messages system short constant time 
reasonable sumptions methods logging packet data high bandwidth links exist possibility building fast hardware insert delay messages 
assume attacker send messages different source addresses infrastructures ensure sender authentication proved difficult build 
importantly source authentication links trivially defeat anonymity free route mlx networks intended protect 
active attacker threat comes power log manipulate messages links 
note global active attacker viewed combination separate attackers insert messages global inserting attacker delay messages global delaying attacker 
known ability insert delay messages may allow attacker determine instance recipient particular message sender 
illustrate case single threshold mlx attack commonly referred attack proceeds follows attacker observes target message leaving sender heading mix delays 
starts sending messages mlx fires 
soon mlx fires stops messages entering mlx sends target message messages 
mlx fires recognize messages leave mix determine destination target message 
consider properties attack going examine similar arrangement mixes 
note attack exact provides adversary ability determine receiver particular message certainty anonymity message passing mlx 
note attack depend rest mix network attacker power isolate trace particular message 
call attack certain 
classify mixes categories vulnerability blending attacks 
attack mix cascade mounting mlx mlx network repeating number mixes path times 
case information theoretic definition usual anonymity set definition 
blending attack reduce anonymity message mlx strongly resistant active attacks 
blending attack reduce anonymity message constant mix blending attack anonymity attacker reduce anonymity message arbitrarily mlx vulnerable non exact uncertain blending attacks 
attacker reduce anonymity message may need spend arbitrary amount resources time messages mix vulnerable exact uncertain attacks 
attacker able reduce anonymity message finite amount resources vulnerable exact certain attacks 
may appear vulnerability goes go list necessarily case cost attack important consider 
example suppose anonymity message going mlx active attack proportional inverse cube number messages expended attack 
mlx seen vulnerable mlx compromised attacker messages 
note mix vulnerable non exact blending attacks mix vulnerable exact certain attacks 
proceed analyze categorize mixes 
suggest blending attack cost functions time number messages necessary 
simple mixes section describe various divided flushing algorithms 
particular set mix type mix parameters flushing algorithm delay messages normal operations attack minimum maximum anonymity provided purely passive adversary analysis blending attacks mix discussion adversaries capable performing blending attacks 
section describes simple messages mix sent time fires 
complex pool discussed section 
describing different mix flushing algorithms working properties assumptions mixes take constant time fire send messages 
mixes limited physical memory contain finite number messages 
finite bandwidth receive certain number messages amount time 
mixes prevent message replays 
flooding overflow replay caches closely related problem example mixmaster expired old entries replay cache providing messages may may arrive uniform rate 
calculating minimum maximum anonymity assume global passive adversary 
vulnerability active attacker described separately 
talk anonymity mean sender anonymity 
similar ideas applied receiver anonymity 
threshold mix parameters threshold 
flushing algorithm mix collects messages fires delivers 
message delay minimum delay target message arrives messages mix 
maximum delay infinite target arrives mlx arrive 
assuming constant rate arrival messages calculate mean delay anonymity anonymity set passive adversary elements 
assume messages batch different senders go different receivers 
blending attack behaviour attack proceeds outlined section usually referred flooding attack 
takes time inserting required messages usually firings mlx take constant time 
attack takes minimum attacker waits mix empty forwards target message mlx attacker messages flush maximum messages attacker wait mix empty 
adversaries attack seemingly requires global delaying attacker capabilities global inserting attacker capabilities 
necessarily 
global inserting attacker able insert messages messages going mlx effectively mounts attack 
possible attack scenario attacker owns mlx free route mlx network 
capability delay messages going mix conditions just right mix contains attacker messages fire soon target message reaches 
capability attack mix route messages going mix controls 
result attacker owns mixes able compromise anonymity message 
window attack flooding adversary 
shows feasibility network securely protects replays periodic key rotation event history forgotten think assumption reasonable ignore replays related issues rest :10.1.1.107.2563
timed mix parameters period 
flushing algorithm mix fires flushes messages seconds 
message delay minimum delay occurs message arrives just mlx due fire 
maximum delay case message arrives just 
mean delay anonymity minimum anonymity set messages arrive entire time period 
maximum anonymity set theoretically infinite practice limited capacity mlx 
mean anonymity set assuming rate arrival msgs ft note threshold timed mixes sense dual 
goal anonymity system guarantee anonymity expense fast message delivery threshold mixes 
scenario spy hostile country anonymity compromised spy caught 
hand timeliness message delivery crucial anonymity bonus timed mlx ideal 
notice messages assumed arrive constant rate properties mixes exactly equivalent 
blending attack behaviour attack exact certain proceeds follows adversary delays target message maximum time mlx fires 
delivers target message blocks incoming messages 
seconds mlx fires producing target message 
takes maximum minimum seconds mix empty fire messages 
attack usually referred trickle attack 
adversaries attack require insertion messages global delaying attacker sufficient 
note attack happen naturally low traffic conditions dishonest mix may able attack hop message simply holding hop empty fire 
threshold timed mix parameters threshold period 
flushing algorithm mlx fires flushes messages seconds messages accumulate mlx 
message delay maximum message delay minimum anonymity minimum anonymity set messages arrive entire time period 
maximum anonymity blending attack behaviour design gives worst case threshold timed exact certain 
adversary choose perform trickle attack flood attack depending prefers wait send messages 
performed minimum messages seconds maximum messages seconds 
adversaries attack performed global inserting global delaying attacker 
threshold timed mix parameters threshold period 
flushing algorithm mix fires flushes messages seconds messages accumulated mlx 
message delay minimum delay maximum delay 
anonymity minimum anonymity mlx maximum anonymity theory infinite limited practice number messages mix hold 
blending attack behaviour attack exact uses combination attacks threshold timed 
takes maximum minimum seconds maximum minimum messages 
adversaries clear mount attack mlx attacker capability delay insert messages 
pool mixes attacks described previous section exact certain low cost 
examine pool mixes give adversary uncertain attack substantially increase cost 
threshold pool mix parameters threshold pool 
flushing algorithm mlx fires messages accumulate mlx 
pool messages chosen uniformly random messages retained mlx 
consider messages feedback mlx 
forwarded 
note threshold threshold messages received fire ongoing operation 
pool distinct threshold messages fire mlx completely empty current mix type 
message delay minimum delay maximum delay infinite new messages arrive mlx fire 
note constant flow messages mix firing periodically small non zero probability message remaining mix arbitrarily long time 
mean delay rounds 
messages arrive rate second average delay tl seconds 
anonymity hcrc wc resort information theoretic definition anonymity described standard set definition probabilities senders receivers sending receiving message arc unequal 
note anonymity message going mlx depends entire history events happened mlx 
wc achieve maximum anonymity amax messages passed mlx come different senders 
carried analysis 
concept minimum anonymity pool slightly elusive 
threshold mlx case wc assumed messages batch come different senders 
regardless previous senders minimum anonymity threshold pool mlx worse corresponding threshold mix 
wc assume messages may come sender provide anonymity bc overly pessimistic entire history mlx consist messages just sender 
minimum anonymity threshold pool mix higher simple threshold mlx 
blending attack behaviour general blending attack phases flushing mlx messages remain inside forwarding target message flushing network 
simple flush phase 
pool longer case 
furthermore small non zero probability message target message remains mix arbitrary length time 
intuitively attack ceases bc certain 
proceeds follows attacker delays target message fills pool mix flushes 
attacker messages don come hc knows messages remain inside pool mix 
hc delays incoming messages tries flush remaining messages mix distinguish come 
course takes messages flush threshold mlx scc details attack exact attacker succeeds getting messages leave mix hc knows 
messages flushed hc just sends target message flushes mix target message comes 
attacker guaranteed flush mlx completely flush target message attack uncertain 
analysis flushing mlx rounds probability particular message mix round mix round messages mlx initially expected number left flushes times 
alternately consider chance messages left mlx round number messages mix attack vary 
example consider pool mix threshold pool messages 
average delay message mix rounds 
assuming attacker targets mix messages expected number messages remaining mix falls rounds attacker messages 
similarly chance messages left pool goes rounds reaches rounds 
pool mlx anonymity system attack uncertain expensive terms attacker messages cost increasing average delay message passing mix 
timed pool mix parameters period pool threshold 
flushing algorithm mlx fires seconds 
pool messages chosen uniformly random retained mix 
forwarded 
fewer messages mix fire 
strictly speaking threshold timed pool mix threshold 
message delay minimum message delay maximum delay messages arrive messages pool leave mix 
case threshold pool mix small non zero probability message remain mlx arbitrarily long time messages flowing mlx 
anonymity timed nature ml allows arbitrarily large number limited memory bandwidth capacity mix messages mixed 
assume constant rate message arrival anonymity provided mbr calculated just way threshold case leave calculation 
alternatively anonymity message going ml calculated history ml record operation ml started 
threshold case ml history includes senders message number messages got ml ed batch potentially host features 
course practice record rounds gives approximation 
minimum anonymity timed pool mbr clearly smaller threshold pool mix threshold 
pool small relative batch size bulk anonymity comes mixing target message batch incoming messages mixing messages pool 
timed mix batch messages ml ing target message minimum anonymity considered worse threshold pool mix large pool maintained 
assuming reasonable parameters shows anonymity contribution pool messages greater messages new batch 
increasing pool size larger effect anonymity increasing batch size 
course increasing pool size increases message delay weakening potential advantages having timed mix 
blending attack behaviour blending attack possible mix 
adversary control mlx fires choose add just messages batch 
prevents messages reaching mlx 
adding messages possible round maximizes probability flush attacker messages left pool 
knows succeeded messages come flush 
approach inefficient terms number messages added attacker probability flushing mix method supposing messages mlx initially 
aims flush messages mix round maximum seconds 
entire attack executed seconds arbitrarily high probability success 
alternatively attacker add just message round rounds 
efficient number messages attack efficient threshold pool mix terms messages clearly terms time 
probability flushing mlx previously mentioned practice upper limit due finite memory capacity bandwidth mix 
approach delays messages mlx tb seconds highly observable users anonymity system 
attacker choose combination approaches send messages delay messages mlx long time 
timed dynamic pool mix cottrell mix parameters period un minimum pool fraction messages sent threshold flushing algorithm mlx fires seconds provided messages mix sending messages threshold constant pool mix mix sends greater messages retains rest pool number messages mlx 
mix remailer system years 
term cottrell mix timed dynamic pool mlx general case greater 
called constant pool simply pool mlx consistency previous literature 
pool mix refer constant dynamic pool 
messages arrive constant rate period cottrell mixes equivalent timed pool mixes threshold constant pool 
specifically rate message arrival mix forward message period retain pool 
general cottrell mlx messages arrive constant rate frac frac equivalent constant pool mlx threshold 
message delay pool mixes minimum delay upper limit delay 
mean delay depends rate arrival messages mix high timed constant pool mix typically higher 
anonymity dynamic pool mlx identical minimum maximum anonymity properties compared timed constant pool mlx 
similarly log mix activity calculate anonymity message passing calculation slightly different 
note anonymity provided mlx higher provided timed threshold constant pool mix number messages mlx goes frac keeps chance message remaining mix constant decreases case timed constant pool mix 
chance message remaining threshold constant pool mix constant flush increased message rate means frequent flushing reducing chance message remaining constant pool threshold mlx unit time 
blending attack behaviour dynamic parameter frac new consequences compared timed constant pool mix 
firstly maximum probability flushing mix messages flush 
possibility flushing mix high probability flush blending attacks timed mixes blocked 
noted similarly resistant flooding constant pool threshold mix 
secondly attacker find messages mix 
course number messages mix easy calculate number messages come 
number messages inside pool mix may arbitrarily high reduced un round 
wish send message harder track send time higher traffic increasing cost terms messages time attempted attacks timed dynamic pool mixes require attacker delay traffic mix substantial number rounds substantial time 
example cottrell mix pool messages fraction requires rounds expected number messages remaining mix fall 
period minutes flushing time rains 
messages part attack 
example shows protection mix provides blending attacks weak 
probability successful attack proportional number rounds 
ideally mlx anonymity go cost attack goes 
happier mix probability successful polynomial small degree 
attack proportional note minimum anonymity cottrell mix worse threshold constant pool mix threshold size larger pool size 
propose larger threshold timed dynamic pool mix improve minimum anonymity properties 
believe modification adverse effects blending attack properties slightly decrease efficiency mix 
resisting blending attacks resisting exact attacks mixes vulnerable exact attacks 
words attacker able find attack successful possibly expend resources try 
unfortunately attacker capable arbitrary message insertions ing hard determine times higher legitimate traffic 
better 
hard determine number messages mlx harder attacker flush mlx know messages needs get rid 
easily possible choosing number messages flush binomial probability distribution flipping biased coin message decide flushed 
weight coin chosen appropriate function number messages mlx 
take attacker rounds establish confidence number messages mlx initially exactly sure history 
introducing randomness appears promising direction note increase cost attack significantly 
shall pursue 
resisting blending vs verification tools give honest protect blending attacks precisely tools dishonest launch 
uncertainty comes letting observers know message leave mix comes letting observers know messages currently inside mix 
flexibility allows mlx prevent adversary learning details message flow time allows compromised mlx manipulate message flow example delaying message ready launch trickle attack downstream hop 
basic mix verification schemes proposed senders observe batches exiting mix confirm processed messages require schemes messages come mix flush 
complex robustness schemes enforce timely message processing adversary threshold participating 
receipt wit ness scheme works mix loses reputation hasn obtained receipt hop allowed 
systems designed ensure messages leave mlx predictably 
verification schemes system pool described 
authors propose commitment scheme ensures mix commits decision receives target message actions verifiable sender target message 
topologies free route mix networks widespread delaying attack difficult perform adversary control sending messages target mix 
case may gain allowing mixes protect blending attacks lose permitting compromised nodes manipulate messages 
extreme cascade topology single compromised mlx absolute control downstream message batch 
case verification correct processing critical pre vent unobservable 
anonymity compromise 
methods detect attack checking successful delivery test messages cascade help detect misbehaving mixes technique works cascade topologies assumes cascade head distinguish test messages 
design new protocols hatching approaches consider tradeoff protection blending attacks verifiability 
cover traffic cover traffic promising protection blending attacks 
consider simple cover traffic policy suggested originally lance cottrell flush dummy put network 
dummy message generated mix looks normal message 
assume current mixmaster dummy generation algorithm default constant length hops ends mlx receiver 
dummy policy allows attacker flush mix free messages certain 
target message inserted mlx round message unknown attacker comes 
naturally messages come attacker knows target message know 
attacker finishes reduced anonymity message possible receivers 
better 
assuming free route mlx network keep tracking messages messages result pass detect message gone recipient 
target message dummy messages mlx 
attack exact expensive described previously 
adversary job harder making mlx choose route length dummies uniform distribution choosing default 
get protection allowing mixes send cover traffic users 
providing complete protection approach hard 
mlx know users system mlx delivers dummies subset users adversary distinguish better probability dummy legitimate message 
note constant rate dummy policies affect blending attack properties provided 
constant dummies simply magnify scale attack changing properties 
example cover traffic policy dummy added flush threshold mix network attacked time large number messages 
provide stronger protection adding variable number dummies batch say choosing geometric distribution flip weighted coin comes heads add dummy flip 
mixmaster remailers begun adopting similar approach 
leave analysis 
current mixmaster dummy policy suffers fact policy user operator manually decide send dummy 
people automated process periodic cron scripts strongly recommend coordinated policy users follow 
making messages link encryption offers limited protection traffic analysis 
encrypted links honest nodes prevent adversary recognizing messages making harder flood mixes watch outgoing messages go 
adversary performing flooding attack choose destination message may able recognize messages 
extreme direct chaff messages mlx message stand 
link padding scheme may able frustrate research remains 
babel introduces inter mix detours scheme mix nodes choose message send randomly chosen new hops sender sure recognizing message leaves mix 
approach help complicate blending attacks introduces reliability risks leave analysis 
limitations go mixes active attacks widely cited literature methods protection suggested informally rigorously analysed evaluated 
concentrate attention particular proposal go 
authors outline techniques protect mix systems active attacks ones considered 
scheme anonymity system mlx cascade requires authentication 
stronger assumption attacker mount distributed attack hostile messages come different users 
unfortunately hard reuse idea free route networks centralized input location authentication compromised mixes claim done authentication traffic generate 
second scheme go sg involves sender es time window message allowed arrive making route message 
message arrives time period forwarded discarded 
attacker ability delay messages limited active attacks harder 
attack uncertain authors argue probability executing attack successfully low 
scheme relies users able accurately calculate security parameter depends estimate rate arrival messages target message go time travel 
words users need able predict traffic levels system remain anonymous 
exploited attacker exact details depend course security parameter calculated 
furthermore active attacker able arbitrarily affect levels traffic mixes target message goes 
conceivable combining sg mixes reputation systems help 
defer evaluation sg precise details parts protocol crucial security system worked 
set mixes examine anonymity message delay blending attack properties 
particular suggest useful partition mixes certain categories vulnerability emphasize cost worst case attack scenario important qualities consider 
simple timed best anonymity infrastructures require low latency 
hand need guaranteed low latency adding pool mix significantly improve anonymity 
allowing pool process fraction waiting messages certain threshold round improves robustness flooding attacks designed flush target message 
show mixes vulnerable active attacks avenues hope 
verification schemes 
touch cover traffic widely solution 
assess cover traffic policy mixmaster point weaknesses discuss approaches strengthening dummy policy 
treated tutorial different styles mixes recommendation implementors alter cover traffic policy introduce thresholds mixes 
average anonymity delay min 
max threshold mlx capacity timed simple thresh 
time thresh 
time mlx capacity constant threshold log log pool timed senders dynamic cottrell senders pool thresh 
time senders gratefully acknowledge support onr darpa epsrc grn wide area programming ec 
andreas pfitzmann providing related adam back george nick mathewson ira moskowitz peter adam anonymous referees comments 

oliver berthold andreas pfitzmann ronny 
disadvantages free mix routes overcome 
designing privacy enhancing technologies proceedings international workshop design issues anonymity observability pages july 

david chaum 
untraceable electronic mail return addresses digital pseudonyms 
communications acm 

cottrell 
remailer attacks 
www 
obs 
com oki er er essay 
html 

george danezis roger dingledine david nick mathewson 
design type iii anonymous remailer protocol 
manuscript 
mixminion net 

roger dingledine michael freedman david david molnar 
reputation system increase mix net reliability 
ira moskowitz editor formation hiding jth international workshop ih pages 
springer verlag lncs 
www 

net papers 
html 

roger dingledine paul syverson 
reliable mix cascade networks reputation 
matt blaze editor financial cryptography fc 
springer verlag lncs forthcoming 
www 

net papers htm 

elke franz andreas anja andreas pfitzmann 
comparison commitment schemes mlx mediated anonymous communication preventing pool mode attacks 
boyd dawson editors rd aus conference information security privacy number lncs 
springer verlag 

tsudik 
email babel 
internet society symposium network distributed sytem security ndss pages san diego ca feb 

markus jakobsson 
flash mixing 
principles distributed computing podc 
acm 
citeseer hi 
nec 
com ash html 

anja 
security improvement mix mediated anonymous communication 
phd thesis universitat dresden 


go mixes providing probabilistic anonymity open system 
proceedings international information hiding workshop april 

ulf er lance cottrell 
protocol version 
un finished draft january 
www eskimo com crypt iix dr aft moe er er prot col 
txt 

andrei serjantov george danezis 
information theoretic metric anonymity 
paul syverson roger dingledine editors privacy enhancing technologies lncs san francisco ca april 

org program 
html 
