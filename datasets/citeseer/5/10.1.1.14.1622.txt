computational interpretation dolev yao adversaries jonathan herzog massachusetts institute technology mit edu 
dolev yao model simple useful framework analyze security protocols assumes extremely limited adversary 
unclear results model remain valid adversary additional power 
show exist situations dolev yao adversary viewed valid abstraction realistic adversaries 
steps 
translate allowed behaviors dolev yao adversary computational model alternate framework powerful adversary 

show suciently strong computational cryptography limit computational adversary behaviors 
tell cryptographic protocol correct 
sure protocol meets security goal 
analyze protocol need choose model collection assumptions proof methods 
computational model example known 
messages protocol assumed bit strings distribution adversary assumed arbitrary algorithm 
cryptography assumed algorithm tuple algorithms satisfy asymptotic property presence arbitrary adversary 
prove protocol correct model show reduction protocol underlying cryptography 
show exists adversary signi cant chance successfully attacking protocol construct adversary signi cant chance breaking underlying cryptography 
conclude cryptography secure protocol secure 
see example 
fairly strong model analysis 
assumption placed adversary ecient executing probabilistic polynomial time ppt 
assumption fairly weak giving model solid meaningful access random coin executes expected time polynomial length input 
notation denotes algorithm runs probabilistic polynomial time 
grounding complexity theory 
hand model extremely dicult 
reductions tend fairly tedious design manually produced protocol 
fortunately alternate models model 
setting messages assumed elements algebra cryptography operation algebra 
adversary assumed speci albeit non deterministic state machine way adversary produce new messages perform certain operations messages knows 
model extremely nice feature simplicity 
participants honest malicious represented state machines composed produce single large system machine 
security properties expressed safety properties machine properties veri ed automatically 
general problem protocol security undecidable automated tools successfully 
see typical examples :10.1.1.145.4394
model drawback dolev yao adversary quite weak 
pick allowed operations non deterministically set operations choose xed quite small 
unclear security restricted adversary implies security realistic adversary models 
seemingly choose simplicity dolev yao model meaningfulness computational model 
choice necessary 
models irreconcilable 
particular necessarily true dolev yao proofs security computational meaning 
large question shall discuss small part adversary 
particular show suciently strong computational cryptography forces equivalence sorts dolev yao adversary computational adversaries 
question partially addressed abadi rogaway showed concept indistinguishability dolev yao model meaningful computational 
showed messages indistinguishable dolev yao adversary translated computational messages indistinguishable computational 
continue build considering issue malleability 
show computational adversary prohibited producing message produced dolev yao adversary 
give dolev yao model complete grounding computational cryptography reasons discussed section represents signi cant step direction 
dolev yao model exploring powers adversary dolev yao model 
setting messages assumed elements algebra values 
types atomic messages texts subtypes names public predictable denoted nonces private random unpredictable denoted keys subtypes public keys private keys compound messages created deterministic operations encrypt pair additionally algebra assumed free value unique representation 
model kinds active parties honest participants adversary 
honest participants follow steps protocol deviation 
engage multiple runs protocol simultaneously di erent parties 
model contains messages send receive internal states modeled explicitly 
network assumed completely control adversary record delete replay reroute reorder messages 
modeled letting adversary network honest participants send messages adversary receive messages adversary 
interested honest participants environment process 
consider execution protocol alternating sequence adversary messages environment responses say environment produces responses 
say great deal hand adversary produces queries 
intuitively query derivable known initially 
initial knowledge set adversary includes 
public keys 
private keys subverted participants subv 
names principals 
nonces generates assumed distinct nonces generated honest participants 
message derivable set messages possible produce applying operations nite number times decryption known learned private keys encryption public keys pairing known elements separation join element component elements 
combine intuitions de nition closure 
closure written smallest subset 

subv 
fjm jg 
fjm jg 


central assumption dolev yao model closure operation represents limit ability adversary create new messages de nition dolev yao adversary 
dolev yao adversary knows set messages produce messages 
dolev yao model messages adversary knows execution 
main result computational cryptography limit computational adversary closure operation 
relating dolev yao computational messages section formalize intuition de nition language computational cryptography series intermediate attempts 
intuitively say hard computational adversary produce message outside closure input 
computational adversary small chance transforming set messages message outside attempt 
encryption operator ideal pr small 
pr indicates probability predicate true running experiments series 
notation indicates drawn distribution set uniform distribution 
algorithm meant distribution output induced distribution input distribution random coin ips 
attempt contains desired intuition small problems unclear set dolev yao messages passed input computational adversary example dolev yao message produced output 
clear small probability purpose section de nition meaningful 
main tool doing mapping dolev yao messages computational messages probability distributions bit strings 
material section exactly abadi rogaway exact analogue adapted case symmetric encryption publickey encryption 
encoding message written depends random tape security parameter arbitrary public key encryption scheme de nition encoding 
security parameter 
random tape partitioned length segment nonce public key public key encryption scheme 
de ned recursively nonce nonce value tape partition associated public private key pair pubkey hd output 
note randomness 
name mapped hm name short bit string uniquely associated care names mapped bit strings long name uniquely represented 
pair mapping pairs distributions distributions pair encrypt encryption mapping pairs distributions distributions enc randomness bits tape represent coin ips atomic elements enforce tape lled random bits 
compound terms bit string concatenation computational encryption scheme 
note coin ips encryption element nite sequences bits 
computational setting public key encryption simple operation triple algorithms parameter randomness publickey key generation algorithm string randomness publickey ciphertext encryption algorithm string string decryption algorithm 
note key generation encryption algorithms randomized 
possible strengthen adversary allowing pick values nonces keys 
technical issue contains interesting details discussed 
algorithm taken tape 
encrypt remains distribution xed 
introduced security parameter re ne notion small probabilities 
mean negligible de nition negligible 
function negligible polynomial suciently large 
re attempt translate de nition computational terms attempt 
encryption scheme ideal 
polynomials suciently large pr subv supp means support distribution 
de nition problematic technical reasons 
may nite number elements subv represent access nite amount information oracles returns encoding name xth participant 

returns public key principal prk 
returns private key subverted principal 
returns encoding nonce second results require technical limitation acyclic 
set messages acyclic encrypts element encrypts sequence keys encrypting keys loops back 
rigorous de nition 
results build abadi rogaway require acyclic sets simply 
discussed realistic assumption trac real world protocols 
arrive nal security condition de nition ideal encryption 
encryption scheme ideal 
acyclic polynomials suciently large pr 

prk 

supp consider complication adversary required produce supp merely appears honest participant 
omit consideration uninteresting complication 
section show exist ideal encryption schemes standard computational model 
ideal encryption show ideal cryptography instantiated standard computational de nition security known plaintext awareness 
requires presence extra party de nition random oracle 
random oracle oracle accessible parties provides random mapping possible inputs bitstrings xed length 
formally de ne plaintext awareness underlying intuition de nition plaintext awareness informal 
encryption scheme allowed private queries random oracle 
scheme plaintext aware 
provides con dentiality semantic security 
exists algorithm called extractor determine plaintext ciphertext produced adversary ciphertext public key encrypt queries random oracle adversary 
plaintext awareness implies adversary aware plaintext ciphertext creates 
suppose adversary creates encryption unknown plaintext 
determine plaintext simply running extractor 
note random oracle plaintext awareness exist extracting plaintext oracle queries simply decrypting ciphertext 
assumes presence random oracle plaintext awareness achieved strongest known de nition security asymmetric encryption 
theorem 
suppose plaintext aware 
ideal 
proof sketch 
provide full proof merely sketch proof suppose adversary violates condition 
acyclic polynomial nitely pr 
prk 


supp consider parse tree root tree 
may nodes parse tree 
suppose path root leaf contains node 
recall closed pairing encryption keys 
membership closed parse tree path root leaf contained node root 
know root 
parse tree contains path root leaf contains element 
path case adversary create encoding internal node create encodings children interior node pair encoding easy separate encoding pair encodings components 
interior node dolev yao encryption hand adversary create encoding adversary creates computational ciphertext 
plaintext awareness tells adversary produce corresponding plaintext encoding dolev yao plaintext 
public keys known adversary produce child interior node 
adversary produce encoding probability able produce probability encoding leaf parse tree 
leaf path lacking nodes leaf node outside 
furthermore leaf nodes atomic elements atomic element outside public information private information created adversary 
honest nonce private key random values 
cases 
rst case related input set parse tree private key corresponding public key parse tree case ability produce single element supp breaks con dentiality computational encryption 
reduction quite involved depends crucially asymmetric encryption analogue indistinguishability result abadi rogaway 

case completely unrelated making independent distributions 
case adversary able guess nonce private key completely independent input 
know odds guessing nonce private key negligible 
reach contradiction cases adversary non negligible chance creating supp open problems primary contribution fold 
rigorous computational de nition ideal cryptography central assumption dolev yao model 

second proof de nition met standard de nitions computational cryptography 
way extended remove random oracle 
presence oracle somewhat controversial assumption computational cryptography removing results increase meaningfulness dolev yao model 
result require ideal cryptography instantiated weaker schemes shown secure chosen ciphertext attack 
way improve remove assumption acyclic 
involve removing assumption results abadi rogaway 
third interesting way extend strengthen de nition ideal cryptography 
current de nition states informally adversary negligible chance hitting target producing encoding 
possible interesting nd encryption scheme keeps adversary hitting target de nition 
encryption scheme ideal adversary create outside closure acyclic polynomials suciently large pr 

prk 

supp lastly importantly interesting extend consider honest participants 
abstracts honest participants environment implicitly assumed encounter error conditions 
real adversaries intentionally create garbage messages 
honest participant encounters 
immediate answers include termination response error code 
actions observable adversary 
release bit information turning honest participants highly specialized oracles 
guarantee ideal encryption scheme remain secure adversary access oracles 
important consider actions honest participants take unexpected occurs secure protocols implementations successfully attacked exploitation error conditions 

mart abadi phillip rogaway 
reconciling views cryptography computational soundness formal encryption 
ifip international conference theoretical computer science ifip tcs number lecture notes computer science pages 
springer verlag 

bellare desai pointcheval rogaway 
relations notions security public key encryption schemes 
krawczyk editor advances cryptology crypto volume lecture notes computer science pages 
springer verlag 
full version www cs ucsd edu users mihir papers relations html 

mihir bellare phillip rogaway 
entity authentication key distribution 
stinson editor advances cryptology crypto proceedings volume lecture notes computer science pages 
springer verlag 
full version available www cse ucsd edu users mihir 

mihir bellare phillip rogaway 
optimal asymmetric encryption encrypt rsa 
de santis editor advances cryptology eurocrypt proceedings volume lecture notes computer science pages 
springer verlag 

daniel bleichenbacher 
chosen ciphertext attacks protocols rsa encryption standard pkcs 
hugo krawczyk editor advances cryptology crypto volume lecture notes computer science pages 

dolev yao 
security public key protocols 
ieee transactions information theory 

lincoln mitchell scedrov 
undecidability bounded security protocols 
workshop formal methods security protocols july 
available www cs bell labs com nch program html 

goldwasser micali 
probabilistic encryption 
journal computer system sciences 

jonathan herzog 
computational soundness formal adversaries 
master thesis massachusetts institute technology october 

gavin lowe 
breaking xing needham schroeder public key protocol fdr 
margaria ste en editors tools algorithms construction analysis systems volume lecture notes computer science pages 
springer verlag 

james manger 
chosen ciphertext attack rsa optimal asymmetric encryption padding standardized pkcs 
advances cryptology crypto number lecture notes computer science pages 

paulson 
inductive approach verifying cryptographic protocols 
journal computer security 

song 
athena automatic checker security protocol analysis 
proceedings th ieee computer security foundations workshop pages 
