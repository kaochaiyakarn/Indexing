ontologies support problem solving monica crub zy mark musen stanford medical informatics stanford university ca usa smi stanford edu musen smi stanford edu problem solving methods ready software components assembled domain knowledge bases create application systems 
ontologies problem solving methods long history intricate relationships 
chapter describe relationships principled manner construct knowledge systems 
developed methodology strongly relies ontologies describe domain knowledge bases problem solving methods independent components reused different application systems second mediate knowledge kinds components assembled specific system 
methodology set associated tools created support developers building knowledge systems conduct psm reuse experiments 
reusable problem solving components ontologies provide structured framework modeling concepts relationships domain expertise 
ontologies support creation repositories domain specific knowledge domain knowledge bases communication sharing knowledge people computer applications 
particular ontologies provide structural semantic ground computer processing domain knowledge perform reasoning tasks 
words ontologies enable actual domain knowledge computer applications 
section provide overview different means specify perform reasoning knowledge base 
retain means problem solving methods provide reusable reasoning components participate principled construction knowledge applications 
monica crub zy mark musen reasoning domain knowledge number ways reasoning performed domain knowledge 
simplest set logical axioms rules complement ontology specify way new facts derived existing facts 
general inference engine draw rules axioms create new knowledge eventually solve simple problem 
include explicit domain ontology typical example rule system mycin medical diagnosis system 
mycin involved base rules symptoms medical conditions laboratory test results possible association infections micro organisms 
rules axioms specific domain 
rules embed implicit procedural knowledge rule ordering conjunct ordering influence actual behavior inference engine 
implicit problem solving knowledge rule base unreliable difficult maintain domain knowledge evolves 
lessons learned experiments early rule systems domain knowledge represented explicit way supported ontology problem solving behavior system carved separate component system 
prominently kads methodology insisted model system components behavior identify distinct clearly interfaced layers knowledge domain layer task layer inference layer 
separating inferencing procedure knowledge system dedicated piece program code 
system developer design sophisticated custom method reason domain knowledge 
instance custom program embed logic extracted mycin rules encode order rules fired grouping assigning priority values depending cases 
resulting knowledge base contain factual knowledge possible types laboratory tests results patients easier evolve 
piece software designed specifically application context program efficient context brittle little adaptable change domain knowledge purpose target system 
overcoming limitations rule systems custom programs problem solving methods psms introduced knowledge engineering paradigm encode domain independent systematic reusable sequences inference steps involved process solving certain kinds application tasks domain knowledge 
strategy identified result analyzing rule systems mycin heuristic classification process identifying class unknown domain situation 
strategy involves main inference steps abstracting facts domain situation patient symptoms condition higher level features ontologies support problem solving domain knowledge patient white blood cell count patient state abstracted suppressed matching set features possible explanations patient gram negative infection set heuristics refining explanation specific micro organism responsible patient infection coli 
rules axioms psms isolate procedural knowledge away domain knowledge making inferencing behavior system role domain knowledge system explicit easy adapt 
custom programs psms designed reusable various domains tasks 
chapter focus type reasoning describe way participates design implementation knowledge applications 
problem solving methods psms prominent result observing recurring patterns reasoning heuristic classification mentioned identifying high level generic tasks ubiquitously performed knowledge hypothesis assessment data abstraction comparing different role limiting methods propose revise cover differentiate goal characterizing taxonomy methods guide system modeling 
psms proposed standard reasoning procedures addressing generic tasks domain independent way 
years knowledge engineering community identified developed psms general usefulness specific high level tasks classification diagnosis design planning 
psm knowledge community studied length propose revise method conducts state search algorithm perform constraint satisfaction problem solving 
specifically propose revise calculates valid configuration domain parameters iteratively assigning values parameters verifying resulting configuration violate domain constraints parameters revising parameter assignments constraint fixing procedures 
psm initially developed benchmark task identifying viable configurations parts involved design elevator 
application parameters dimensions characteristics different parts elevator including specific requirements height available doors desired capacity constraints fixes defined set building codes architectural principles safety constraints 
participating initial experiment studied reuse propose revise types constraint satisfaction problems predicting plausible configurations ribosomal units set experimental data show chapter 
monica crub zy mark musen psms provide reliable form knowledge reasoning usually result thorough analysis types problems tasks occur variety domains understanding solving problems level entails abstraction generic reasoning process involved possibly initially written rules custom code 
result psms mature algorithms characterized tested enable system builders procedural processing knowledge implementation details 
associated piece program code implements psm operational building block programmer incorporate readily working system element mathematical subroutine library 
foster reuse sharing psms method providers build structured libraries methods indexed different domains purposes 
component knowledge systems problem solving task involves reasoning large body domain knowledge reach certain goal state 
consequence identifying psms domain independent reasoning components process building system realize knowledge intensive task merely involves assembling domain knowledge component appropriate psm 
words psms ontologies specify domain knowledge dual building blocks knowledge applications psms provide reasoning component system relies contents domain ontology component solve problems domain 
relationships psms ontologies discussed section 
build performance system application system developer needs select psm library comparing properties requirements available psms desired characteristics application 
analysis required task application criteria explicit goal target system desired performance application form availability domain knowledge 
second developer needs configure selected psm domain hand 
psms act reasoning templates need instantiated domain knowledge new application 
instantiation straightforward psms enable domain knowledge free procedural problem solving knowledge making reusable different purposes conversely psms reusable different applications independent domain 
definition potentially practice invariably mismatch domain ontology psm kept independent 
ontological mismatch needs resolved impairing reusability independence types components 
remainder chapter methodology building component knowledge systems 
heart approach ontologies interoperate provide framework assembling independent ontologies support problem solving domain problem solving knowledge components 
describe ontology methodology detail role type ontology involved 
tools developed supporting activities involved creating managing ontologies process building knowledge system 
illustrate tools excerpts experiments led design validate approach 
conclude chapter open issues perspectives 
ontologies heart knowledge systems psms knowledge engineering community thought ways maximize potential ontologies basis reuse problem solving knowledge tasks psms 
methodologies differ nuances prot methodology associated suite tools relies ontologies support application developers modeling building knowledge systems 
latest version prot tools generic extensible software environment enables users model query apply domain ontology 
specifically prot provides ontology modeling editor domain experts represent knowledge 
ontology model prot automatically generates set knowledge entry forms users fill populate ontology instances classes specific values slots 
domain experts customize forms activity performed users intuitive 
prot adopts okbc compatible frame modeling view ontologies 
accordingly set classes organized subsumption hierarchy represent concepts domain interest slots attached represent properties 
values slots take restricted facets cardinality type range 
classes templates individual instances particular values slots 
ontology reuse psms ontologies constructing knowledge system pervasive 
ontologies support modeling domain knowledge component counterpart psms knowledge applications 
described section psms domain ontologies developed independently main difference prot methodologies commonkads ocml prot task level explicit 
needed prot folds task specific knowledge application ontology domain ontology augmented knowledge important specific application 
simplicity omit describing task level 
protege stanford edu www ai sri com okbc monica crub zy mark musen psm description ontology domain ontology models transforms mapping ontology populates psm defines operates method ontology fig 

ontology approach developing knowledge systems 
domain ontology holds necessary knowledge processed building knowledge system involves ontologies 
psm description ontology models metadata properties competence psms library method ontology specifies required inputs expected outputs psm mapping ontology provides framework expressing transformation rules domain ontology method ontology provide psm knowledge operate 
need reconciled form coherent knowledge system 
basis reconciliation psms declare format semantics knowledge data expect domain perform task 
approach psm provides method ontology elicits input output knowledge requirements independently domain see section 
instance propose revise psm declares needs terms state variables constraints fixes 
way method ontology assigns roles domain knowledge needs fill psm operate knowledge 
method ontology represents assumptions psm domain knowledge explicit way refined versions psm modeled directly weakening strengthening assumptions way additional set ontological statements adapter component 
avoid impairing independence domain method ontologies approach includes mediating component originally developed field database interoperation 
third separate knowledge component holds explicit relationships domain method ontologies assembled specific knowledge application 
underlying mediating component mapping ontology possible mapping relations bridge conceptual syntactic gaps domain method ontologies see section 
aspect approach line notion knowledge adapters sense ontologies support problem solving mapping relations declare isolate knowledge needed adapt particular psm particular domain knowledge base 
ontology provide principled framework modeling important characteristics psms allowing indexed retrieved meaningfully libraries 
approach includes ontology ontology properties competence psms including method ontology 
psm description ontology models relationships psm refined psms components involved knowledge system tasks domain models specification adapters task method decomposition structures 
describes relationships psm ontologies 
sections detail ontologies involved construction knowledge system domain ontology starting psm description ontology 
ontology describing psms build knowledge system developer selects psm suits requirements domain task knowledge 
developer needs review metadata specification competence interface requirements available psms 
instance developer considering propose revise psm may want know implemented psm kind constraints psm capable handling psm outputs optimal solution 
information gives developer indication degree fit available psms domain hand 
characterizing psms collected indexed retrieved meaningfully libraries requires dedicated modeling language :10.1.1.52.7040
unified problem solving method development language upml comprehensive framework modeling libraries psms 
upml provides psm descriptions including formal specifications allow psm providers organize components libraries systems index retrieve psms automatically 
upml takes roots knowledge engineering approaches generic tasks components expertise commonkads principles software engineering reuse semantic web issues 
upml covers aspects modeling psms way configured running applications 
upml focuses psms actual performance components system upml distinguishes kinds components involved knowledge system tasks functions system achieve design psms methods implement reasoning process system realize task possibly task method decomposition www cs vu nl upml monica crub zy mark musen fig 

part upml ontology describing libraries psms 
diagrammatic representation derived prot model upml shows sub hierarchy concepts provided upml specify knowledge components involved system tasks domain models psms described terms ontology 
particular description psm includes set input roles output roles competence possible subtask decomposition associated operational description 
parallel sub hierarchy defines upml notions bridges adapter components connect configure knowledge components specific system 
propose revise constraint satisfaction psm domain models views domain knowledge set safety rules elevator configuration domain tasks psms 
connection kinds components modeled specific mediating constructs bridges express relationship map ontologies kinds components represent stepwise adaptation component meet specific application requirements 
support approach upml defines complete meta ontology primitives describing publishing libraries psms tasks domain models see 
way support reuse psms psm description ontology ensures specification correct models psms 
specifically psm attributes upml include competence method ontology operational description 
competence psm includes input output role descriptions formalization preconditions postconditions associated method formulas hold inputs outputs 
separate method ontology holds definitions concepts relations psm explained section 
operational description psm specifies controlflow algorithm sequences set subtasks compose method ontologies support problem solving 
subtask realized particular 
upml enables psm providers define pragmatics metadata psm including author information publication actual location url psm code 
partial description propose revise psm upml follows see pragmatics title propose revise ontology element parameter defined class element fix defined class fix condition expression rule associated constraint parameter element parameter values defined class element consistent defined logical predicate competence inputs parameters constraints fixes outputs parameter values preconditions fix exactly associated constraint postconditions output parameter values consistent regarding constraints operational description subtasks select parameter propose set parameter values verify constraints revise fix knowledge 
ontology psm inputs outputs mentioned section crucial piece knowledge provider psm needs model ontology concepts represent input output structures psm operates requirements structures 
method ontology provides signature psm assigns roles requirements domain knowledge psm processes 
method ontology expresses knowledge requirements way independent application domain 
method ontology true counterpart domain ontology construction knowledge application 
providing domain independent method ontology psm provides generic explicit framework construe domain knowledge processing 
necessary reconciliation domain knowledge ontology method ontology handled way third ontology described section 
method ontology models concepts involved describing inputs outputs psm filled domain knowledge appropriate format 
mentioned propose revise psm declares input set parameters configured set condition expression constraints need hold parameter values set associated fixes applied constraints violated 
method ontology propose revise defines classes monica crub zy mark musen fig 

method ontology propose revise psm 
diagrammatic representation derived model ontology prot shows definition concepts involved describing inputs outputs propose revise 
instance assign constraint input class requires constraint knowledge provided condition expression rules particular variable 
model inputs constraint fix see 
note extended method ontology modeled upml contains entire set primitive describe behavior psm predicates functions involved expressing assumptions preconditions postconditions psm domain knowledge steps control structure psm 
additional elements method ontology allow developer informed selection psm requirements target application knowledge available domain provide basis refinement specialization psm meet domain requirements weakening strengthening assumptions replacing subcomponents alternative refined 
ontology domain psm mapping relations method ontology domain ontology typically conceptualize knowledge different perspectives independent 
applied propose revise domain elevator configuration state variables constraints fixes psm expected reconciled relevant elevator components constraints 
reused propose revise task predicting plausible dimensional conformations ribosomal units examining experimental data consideration constraints spatial relationships different molecular subunits 
associated ribosome topology domain specified parameters configuration terms genomic objects helices ontologies support problem solving dna strands constraints terms molecular distances angles representation different propose revise method ontology 
keeping domain method ontologies independent maximizes possibility reusing different knowledge systems advocate intermediate ontology mapping component see explicit relations map concrete concepts domain ontology expected concepts method ontology 
mapping relations establish declarative connections contents domain knowledge role fillers input output templates psm defines method ontology 
specifically mapping relations express transformation domain knowledge needed psm focuses pieces aspects knowledge competent reason 
mapping relations isolate knowledge needed adapting psm domain knowledge base particular knowledge application 
mapping relations instances domain concepts interest psm transformed way mapping interpreter see section instances corresponding method concepts psm operate directly 
fig 

ontology mapping relations 
instance level mapping relation connects domain source classes method target class defines set slot level transformations needed compute values required method slots attached method class values available domain slots 
types slot level mapping relations span scope possible operations domain knowledge undergo fit format semantics specified method ontology 
sense categorize types mapping relations expressed situation requires domain psm mapping 
categorization allows conceptualize mappings better way design appropriate tool support see section 
designed generic monica crub zy mark musen mapping ontology shown provides structured encoding various types mapping relations source domain ontology target method ontology instance level slot level 
mapping relation simple renaming correspondence domain class slots method class slots 
ribosome conformation prediction application propose revise need handle complexity ribosomal objects perform task 
sufficient domain ribosomal object part slots renamed method associated slots 
concept exist domain mapping relations specify constant assignments method concepts 
complex instance level mappings express aggregation relations domain method concepts decomposition relations 
slot level mappings express aggregation decomposition operations domain slot values include lexical numerical arbitrary functional transformations slot values 
instance application propose revise psm domain ribosome topology domain constraint includes possible definition range acceptable positions ribosomal objects 
notion range direct equivalent method ontology special mapping relation needs created transform domain instance constraint class instances fix constraint class method bound range see details 
interesting note particular mapping relations similar meaning mapping relations defined mapping range constraint class elevator configuration domain fix constraint class method 
specific mapping rules different relations transform constraints lower upper bounds values domain parameters method constraints specify value comparison expression associated value incrementing value decrementing fixes 
observation suggests mapping relations defined particular application psm may reused different application psm 
configure selected psm operate domain knowledge base application developer needs instantiate mapping ontology set mapping relations link domain ontology roles defined method ontology 
developer creates mapping knowledge base contains direct mappings compute psm inputs domain instance knowledge reverse mappings translate psm outputs back domain form see section 
important note may situations concepts expected method obvious equivalent domain ontology concepts exist replaced constant assignment values mapping relation sophisticated account transformation existing domain knowledge ontologies support problem solving transformation mature domain modeled explicit concept 
cases domain ontology needs extended application ontology purpose building knowledge application 
instance applying propose revise psm problem predicting plausible ribosome conformations add notion fix ribosome topology ontology map naturally equivalent notion propose revise method ontology creating non intuitive mapping concepts domain 
mapping ontology provides basis expressing adaptation knowledge needed configure psm certain application 
sense mapping ontology extends notion domain psm bridges upml framework see section providing structured operational set possible mapping axioms bridge ontologies components 
important note core knowledge needed create method instances domain instances resides set slot level transformation operations attached instance level mapping relation operations change format resolution domain slot values fill required values method slot 
piece software associated psm eventually needs operate data structures filled instantiated method ontology 
mapping ontology accounts ontology level alignment operations transformation operations 
current approaches mapping conceptual schema ontologies focus ontology level operations database integration approaches traditionally concentrate data level transformations needed multiple databases interoperate 
respect approach closer database schema mapping 
tool support reusing psms providing adequate tool support essential knowledge engineering 
particular tools enables systematic design implementation evaluation methodologies 
section kind tools developed psm providers psm users knowledge system developers support ontology methodology 
particular describe way ontologies methodology domain ontology psm description ontology method ontology mapping ontology participate construction running applications 
ontologies heart prot methodology tools early versions system prot suited provide kind tool support necessary psm providers users 
designed improved methodology years integrated aspects tool support psms prot able start evaluating extending 
prot supports domain monica crub zy mark musen table 
table presents actors involved process building knowledge application tools provide expert knowledge produce application specific knowledge 
actors knowledge provided tools knowledge produced domain experts domain models facts prot domain ontology kb psm providers prot upml editor psm models psm library psm models method ontologies psms psm users psm librarian domain kb application requirements selection manager psm libraries selected psm ontology application knowledge mapping editor mapping ontology mapping kb mapping interpreter method kb domain case inputs execution environment psms method case outputs mapping interpreter reverse domain case outputs experts modeling relevant knowledge ontology customizing associated knowledge entry tool outlined section 
expose extended native support prot domain experts tools help psm providers psm users respective activities 
table summarizes type actors tools knowledge involved entire process building knowledge application 
tool support psm providers employed prot native form develop dedicated tool psm providers prot upml editor psm description ontology see section 
tool psm providers model document libraries psms entering descriptions particular psms set instances classes provided upml ontology 
way libraries modeled upml library general purpose search psms library classification problem solving library information agents 
particular psm providers create ontology component psm library lists terms relations important describe psm competence requirements behavior 
addition providers model actual contents method ontologies directly upml library prot upml editor separately base prot system see 
tool support psm users special purpose tools needed users psm libraries developers knowledge system users 
typically developers domain experts capable handling system prot libraries developed part ibrow project www swi psy uva nl projects ibrow home html ontologies support problem solving domain mapping method domain ontology application ontology application knowledge base inputs application knowledge base outputs mapping ontology psm librarian mapping editor mapping knowledge base psm librarian mapping interpreter psm librarian reverse mapping interpreter psm library psm psm library psm description ontology psm librarian selection manager method ontology method knowledge base inputs psm code psm execution environment method knowledge base outputs fig 

process building knowledge application psm librarian tool 
selection manager enables application developer choose psm available upml libraries isolates corresponding method ontology 
mapping editor allows developer create knowledge base domain method mapping relations generic mapping ontology 
mapping interpreter processes mapping relations transform domain knowledge instances including case data inputs corresponding method instances instances method ontology 
configured psm operates solely resulting method knowledge base 
reverse mapping relations processed mapping interpreter translating psm output instances domain compliant instances 
principles underlying construction knowledge system 
applications build templates users instantiate run case data 
support system developers covers range activities involved building knowledge application domain knowledge component psm component 
illustration psm librarian tool built extension prot provide monica crub zy mark musen fig 

psm librarian support psm selection selection manager 
left panels allow developers load browse libraries psms 
right panel displays upml description highlighted psm propose revise centered flow chart diagram psm focuses roles tasks defined psm 
description developers inspect characteristics psm pragmatics metadata ontology competence informed selection meets domain problem requirements 
cal assistance knowledge system developers 
psm librarian supports developers selection appropriate psm domain problem configuration psm particular domain knowledge base hand 
psm librarian accesses knowledge bases prot reuses user interface elements base environment provide familiar customized interaction system developers 
gives synoptic view process building application running support custom tools 
underlying tools ontologies participate proposed methodology constructing knowledge systems 
subsequent figures detail components psm librarian tool focuses selection manager focuses mapping editor shows results produced mapping interpreter 
application configured developers help tools support system users merely consists providing case data entry forms populate application knowledge base running considering activities task selection configuration explicitly process additional steps occur selecting candidate psm detailed 
ontologies support problem solving fig 

psm librarian support domain psm mapping mapping editor mapping domain ribosome topology propose revise psm 
mapping editor provides system developers integrated access elements needed express mapping relations 
left columns display side side application domain knowledge base ribosomal objects method ontology propose revise psm classes top slots 
right panel displays mapping knowledge base top available classes instances instance level slot level mapping relations contents selected mapping relation instance including set associated slot level mappings 
shown transform mapping constraint lower domain class constraint method class fix constraint 
mapping specifies map lower bound value location ribosomal object method constraint specifies value comparison expression associated value incrementing fix expression violated 
instance lexical slot mapping method expression slot defines comparison predicate involving slots ribosome topology domain 
notation access actual values 
similar mapping handles upper bound value constraint 
mapping operations menu mapping knowledge base enables system developer run mapping interpreter populates method ontology instances created available domain instances see 
monica crub zy mark musen mapping interpreter process new domain instances update method knowledge base 
tools provide straightforward support actual execution configured psm step usually handled best outside tool depends type executable psm 
psm librarian interface minimally execution environment provide environment executable file psm upml specification psm instantiated method knowledge base including case data inputs result psm method knowledge base mapping interpreter translates back domain knowledge base declared reverse mapping relations 
fig 

psm librarian support domain psm mapping mapping interpreter 
left screen shot displays instance ribosome topology domain constraint class right screen shot displays resulting instance propose revise method class fix constraint computed mapping interpreter mapping relation shown 
particular mapping interpreter replaced slot value actual value domain instance example replaces lower bound expression slot method instance 
problem solving methods psms provide powerful means model implement performance component application solves reasoning task body domain knowledge 
psms naturally related ontologies ontologies provide basis modeling domain knowledge psms operate 
argue psms related ontologies additional ways support principled methodology reusing psms domain models components different applications 
nuances modern knowledge engineering approaches prot methodology reflects general ontologies support problem solving consensus field 
hallmark methodology definition set explicit ontology mapping relations new application mediates domain knowledge psm inputs outputs 
similarly prot tools primary goal illustrate ontologies models domains psms basis developing support tools problem solving 
methodology associated prot tools led experiments study reuse psms different applications 
experiments reported initiated earlier versions tools ones described section experiments helped designing current tools handle past experiments systematic integrated way 
particular propose revise experiments helped design mapping ontology support tools system builders mapping interpreter 
open perspectives proposed methodology tools include integrating activities related problem definition task specification task configuration application building process studying specialization refinement psms varying task domain requirements 
additional ontologies additional ontology mapping relation types involved extended process enable task method domain views knowledge interoperate 
note identification reusable mapping templates associated psm prove reduce amount involved configuring application 
floor open exploring scope possible extensions mapping approach 
notion psm decade think approach building knowledge systems long live 
particular emergence web services distributed reasoning resources world wide web renew interest potential impact psm centered ontology approach construction web enabled applications 
chapter presents ideas researchers knowledge modeling group stanford medical informatics past decade 
main contributors approach associated experiments include henrik eriksson john gennari john park angel puerta thomas samson tu 
parts funded high performance knowledge base project defense advanced research projects agency contract space naval warfare systems center contract national library medicine lm lm 
figures created plugin prot developed michael sintek 
see www daml org services www org tr wsdl monica crub zy mark musen 
benjamins plaza motta fensel studer wielinga schreiber zdrahal decker 
intelligent brokering service knowledge component reuse world wide web 
kaw 

richard benjamins 
problem solving methods diagnosis 
phd thesis university amsterdam 

breuker van de velde editors 
commonkads library expertise modeling 
ios press amsterdam 

buchanan shortliffe 
rule expert systems mycin experiments stanford heuristic programming project 
addison wesley 

chandrasekaran 
generic tasks knowledge reasoning high level building blocks expert system design 
ieee expert 

chandrasekaran johnson smith 
task structure analysis knowledge modeling 
communications acm 

chandrasekaran josephson richard benjamins 
ontology tasks methods 
workshop knowledge acquisition modeling management kaw banff canada 

clancey 
heuristic classification 
artificial intelligence 

clancey 
epistemology rule expert system framework explanation 
artificial intelligence 

crub zy motta lu musen 
configuring online problem solving resources internet reasoning service 
ieee intelligent systems 

eriksson shahar tu puerta musen 
task modeling reusable problem solving methods 
artificial intelligence 

fensel motta 
structured development problem solving methods 
ieee transactions knowledge data engineering 

fensel motta decker zdrahal 
ontologies defining tasks problem solving methods mappings 
plaza eds editor european conference knowledge acquisition modeling management ekaw volume lnai lecture notes artificial intelligence pages 
springer verlag berlin 

fensel motta van harmelen benjamins crub zy decker grosso musen plaza schreiber studer wielinga 
unified problem solving method development language upml 
knowledge information systems journal 

gennari musen fergerson grosso crub zy eriksson noy tu 
evolution prot environment knowledge systems development 
international journal human computer studies 

gennari altman musen 
reuse prot ii elevators 
acm sigsoft symposium software reusability seattle wa 

gennari tu musen 
mapping domains methods support reuse 
international journal human computer studies 
ontologies support problem solving 
gil 
explicit representations problem solving methods support knowledge acquisition 
thirteenth national conference artificial intelligence aaai portland oregon 
aaai press 

marcus stout mcdermott 
vt expert elevator designer uses knowledge directed backtracking 
ai magazine 

mcdermott 
preliminary steps taxonomy problem solving methods 
marcus editor automatic knowledge acquisition expert systems pages 
boston kluwer academic publishers 

miller hern ndez haas yan ho fagin popa 
clio project managing heterogeneity 
sigmod record 

motta 
reusable components knowledge modelling principles case studies parametric design 
ios press amsterdam 

motta lu 
library components classification problem solving 
deliverable ibrow project ist intelligent brokering service knowledge component reuse world wide web 

musen schreiber 
architectures intelligent systems reusable components 
artificial intelligence medicine 

noy musen 
prompt algorithm tool automated ontology merging alignment 
seventeenth national conference artificial intelligence aaai austin tx 

crub zy fensel benjamins wielinga motta musen ding 
upml language tool support making semantic web alive 
fensel hendler wahlster editors spinning semantic web bringing world wide web full potential 
mit press 

park gennari musen 
mappings reuse knowledge systems 
eleventh banff knowledge acquisition knowledge systems workshop banff alberta 


systematic expert systems knowledge representations problem solving methods 
springer verlag 

th 
schreiber birmingham 
editorial sisyphus vt initiative 
international journal human computer studies 

schreiber akkermans de shadbolt van de velde wielinga 
knowledge engineering management commonkads methodology 
mit press cambridge 

steels 
components expertise 
ai magazine 

tu shahar puerta musen 
problem solving model episodic skeletal plan refinement 
knowledge acquisition 

valente benjamins nunes de barros 
library system derived problem solving methods planning 
international journal human computer studies 

wiederhold 
mediators architecture information systems 
ieee computer 
