computing condensed frequent pattern bases jian pei state univ new york buffalo cse buffalo edu dong wright state univ cs wright edu frequent pattern mining studied extensively 
effectiveness efficiency mining limited number frequent patterns generated large 
applications sufficient generate examine frequent patterns support frequency close approximation full precision 
compact close frequent pattern base called condensed frequent patterns base 
propose examine alternatives design representation implementation condensed frequent pattern bases 
algorithms computing pattern bases proposed 
effectiveness pattern compression efficient computation methods investigated 
systematic performance study conducted different kinds databases demonstrates effectiveness efficiency approach handling frequent pattern mining large databases 
recognized frequent pattern mining plays essential role important data mining tasks mining association :10.1.1.40.6757
widely recognized frequent pattern mining produces huge number patterns reduces efficiency effectiveness mining unrealistic store comprehend patterns :10.1.1.10.7611
efforts devoted address problem 
general interesting proposals classified categories 
concise representations frequent patterns explored frequent closed patterns remove sub patterns support super patterns :10.1.1.27.6266:10.1.1.37.1102
studies shown doing total number patterns rules reduced substantially especially dense data sets :10.1.1.10.7611
second constraints capture users focus effective strategies developed push various constraints deep mining process 
approaches useful may powerful cases 
compression closed pattern approach may effective exist slightly different counts sub patterns 
constraint mining useful hardly pre computation different users wei zou normal univ edu cn jiawei han univ illinois cs uiuc edu may different constraints 
inherent large database may contain numerous frequent patterns easy observe simple fact practice applications need precise support information frequent patterns approximation support count adequate approximation mean frequency frequent pattern estimated guaranteed maximal error bound 
example frequent pattern diaper beer giving exact support count range may range user specified error bound 
condensed frequent pattern base acceptable preferable mining large database small deviation minor effect analysis 
analyst exact information diaper beer bought times transactions approximation diaper beer bought times may essential difference 
analysis deal approximation sooner truncation rounding 
analyst really concerned specified error bound guaranteed 
second condensing frequent pattern base leads effective frequent pattern mining 
computing condensed pattern base number patterns reduced dramatically general information frequent patterns retain 
smaller base patterns certainly helps users comprehend mining results 
third computing condensed frequent pattern base may lead efficient frequent pattern mining 
condensed frequent pattern base smaller complete frequent pattern base 
may need compute access smaller pattern base leads better efficiency 
summary mining condensed frequent pattern base may frequent pattern mining realistic reallife applications 
introduce concept condensed frequent pattern base guaranteed maximal error bound study efficient computation condensed pattern base contributions 
introduce concept condensed frequent pattern base devise systematic representations frequent pattern bases 
show representations achieve satisfactory approximation guaranteed maximal error bound support 
second develop efficient algorithms computing condensed pattern bases transaction databases directly 
algorithms tate relaxation counting requirement prune patterns mining 
third systematic performance study verify effectiveness efficiency condensed frequent pattern bases 
results show computing condensed frequent pattern base promising 
previously ideas approximating frequent patterns probed related studies 
example shows approximative association rules interesting useful 
notion free sets proposed lead error bound approximation frequencies 
previous studies systematically explores problem designing mining condensed frequent pattern guaranteed maximal error bound 
remaining organized follows 
problem computing condensed frequent pattern base introduced section 
level level frequent pattern base construction method section 
section develop effective efficient method frequent pattern base construction max patterns various layers 
section presents comprehensive performance study demonstrate effectiveness efficiency approach 
section concludes study 
problem definition review standard terminology frequent pattern mining 
set literals called items 
itemset pattern denoted omitting set brackets subset items itemset items called itemset 
patterns called super pattern sub pattern transaction tuple transaction id itemset 
transaction said contain itemset trans action database set transactions 
support itemset denoted number transactions containing transaction database support thresh old itemset called frequent itemset frequent pattern problem frequent pattern mining find complete set frequent patterns user specified support threshold set frequent patterns called frequent pattern base fp base short 
expensive find complete set frequent patterns fp base may contain huge number frequent patterns 
propose overcome difficulty caused huge amount frequent patterns follows compute smaller set frequent patterns condensed fp base approximate supports arbitrary frequent patterns 
problem statement 
transaction database support threshold user specified error bound problem computing condensed fp base find subset frequent patterns function holds pattern infrequent frequent null null ab ac ad bc bd cd abc abd ab ac ad bc bd cd abc abd abcd abcd acd bcd lattice frequent patterns acd bcd null ab ac ad bc bd cd abc abd abcd condensed fp base bd condensed fp base bm 
lattice frequent patterns example 
function called support approximation function set condensed fp base example consider transaction database shown table 
support threshold error bound lattice totally frequent patterns shown 
transaction id itemset table 
transaction database transactions 
set condensed fp base 
patterns labelled supports 
pattern function defined follows example tern exists acd bcd infrequent pat sub pattern smallest support count 
known apriori property verify approximate support count frequent pattern required definition 
example approxi mated absolute error bound relative percentage error bound compute condensed fp base 
case satisfied frequent patterns 
condensed fp base plotted 
corresponding approximation function defined pattern follows exists condensed fp bases approximation functions unique 
superset condensed fp base base identical approximation function 
condensed fp base minimal approximation function contain proper subset condensed fp base interestingly minimal condensed unique 
example minimal condensed fp bases 
possible approximation bases prefer requiring little space possible 
condensed offer significant compression effect measured compression ratio defined patterns condensed fp base total frequent patterns clearly smaller compression ratio better compression effect 
observe example condensed fp bases produce considerable space savings small error bound 
example achieves compression ratio achieves achieves better compression previous research considered computing reduced sets frequent patterns including reduction frequent closed itemsets containment reduction 
itemset called closed pattern exists proper superset called max pattern exists super set frequent 
interestingly shown complete set frequent closed patterns minimal condensed fp base error bound complete set max patterns minimal condensed fp base error bound support threshold 
considers approximating supports frequent patterns user specified error bound 
construct condensed fp bases effectively efficiently 
topic sections 
constructing condensed fp base level consider approach constructs condensed fp base examining frequent patterns level frequent pattern added condensed approximated sub patterns base 
method illustrated 
example condensed fp base transaction database table support threshold error bound constructed follows shown approximation function defined example 
pattern denote minimum supports sub patterns currently step 
initialize length mine patterns 
length frequent patterns frequent borders frequent patterns sub patterns base insert length frequent pattern step 
length level frequent patterns length fre quent pattern types insertions length frequent pattern added error bound sup port approximated sub patterns base 
example length frequent patterns approximated properly length sub patterns frequent pattern inserted length ii length frequent pattern frequent pattern max pattern inserted max patterns needed determine pattern frequent 
example length frequent pattern exists 
step 
length level inserted pattern insertion mine length set fre quent patterns see length max pattern 
step 
length frequent pattern max pattern length frequent pattern inserted base contains patterns search downward call resulting base downward condensed fp base 
generalize level level condensed fp base construction method 
define approximation function follows 
definition condensed fp base error bound pattern exists algorithm computes condensed fp base respect approximation function algorithm cfp level level downward search method input transaction database support threshold error bound output condensed fp base method 

length find frequent patterns insert length frequent pattern 

generate set length frequent patterns frequent pattern length ranges length sub patterns calculation done byproduct candidate generation 
insert set 
length frequent pattern super pattern insert rationale max pattern 
goto step 
return advantage method shown example intuitive easily integrated algorithm 
correctness effectiveness algorithm obvious 
limited space omit proof 
kind patterns included computed algorithm 
frequent pattern called seed pattern proper sub pattern interestingly easy show pattern computed algorithm seed pattern 
constructing condensed fp base max patterns algorithm intuitive correct check frequent pattern 
frequent patterns mining cost non trivial 
avoid checking frequent pattern constructing condensed 
section answer question positively providing type condensed fp base efficient mining techniques find base 
intuitively going construct condensed consisting maximal frequent patterns series support thresholds 
specifically sup port threshold error bound divide set frequent patterns number disjoint subsets set patterns support range support range contains patterns support range th subset frequent pattern approximate support maximal error determining subset pattern belongs 
determine subset pattern belongs need record max patterns various layers lower bounds supports ranges 
idea illustrated example 
example transaction database table support threshold error bound condensed fp base constructed follows 
support threshold total number transactions database consider ranges supports mine max patterns support threshold respectively 
max pattern support threshold max patterns support threshold max pattern support threshold patterns form condensed fp base base shown 
approximation function defined example 
essence pattern find super pattern having largest support range support estimate support generalize ideas providing definition condensed fp base 
definition transaction database support threshold error bound number levels define max patterns support threshold name base base max patterns 
approximation function defined 
set called base definition error bound base pattern exists shown base proper condensed fp base function minimal 
limited space omit formal result 
remaining problem find max patterns efficiently condensed fp base methods mining max patterns depth search mafia 
na method compute call max pattern mining algorithm multiple times lower bound ranges support threshold 
mine patterns bases efficiently na method 
roughly speaking propose algorithm mine database max patterns series support thresholds 
algorithm proceeds depth manner 
algorithm uses additional pruning techniques 
demonstrate spirit algorithm example 
example consider mining max patterns support thresholds list base transaction database table 
scanning transaction database frequent items 
items sorted support descending order producing list list divide max patterns disjoint subsets set max patterns containing item containing item containing item containing item pattern max pattern 
mine subsets max patterns 

find max patterns containing item form projected database collecting transactions containing item items local frequent items list formed sorting list local frequent items local support descending order 
max patterns containing item list divided disjoint subsets pattern max pattern containing containing item pattern max pattern 
mine recursively 

support denoted pattern max pattern support threshold 
find max patterns containing form projected database contains items omitted appear transaction projected database 
item having support max pattern support threshold lower bound second range supports 
items frequent recursively mine max patterns forming projected databases 
checked max pattern support thresh old max patterns containing 
find max patterns containing form projected database contains items omitted appears transaction occurs list 
frequent item means exists max pattern containing 
max pattern 
max patterns containing 
find max patterns containing form projected database contains local frequent items max patterns containing list divided subsets pattern max pattern containing pattern max pattern 
mine 
max pattern max pattern max pattern containing similarly check follows max pattern 
max patterns containing 
mine max patterns containing form projected database mine recursively 
verified max pattern 

similarly verified max pattern 
complete set max patterns condensed fp base list shown example general framework depth search 
list frequent items support descending order called list divide data mining task 
general set max patterns divided disjoint subsets th subset contains max pattern having item mine max patterns containing items listed list projected database formed transaction list items list example projected projected database contains transaction see step 
transaction id omitted 
pruning techniques mining verified follows 
determine frequent pattern local max pattern 
lemma proof skipped due lack space 
lemma frequent pattern max pattern sub pattern max pattern item step example pattern determined max pattern support threshold lemma 
second prune unpromising patterns early possible 
lemma 
lemma frequent pattern list list local frequent items item list exists max pattern pruned 
max pattern projected databases proof 
need notice facts stated lemma max pattern follows lemma derive max pattern super pattern lemma 
step example need form mine projected database frequent items max pattern support threshold lemma applied 
analysis summarize algorithm constructing base follows 
projected database support algorithm cfp method mining max patterns various layers input transaction database support threshold error bound output base method set items call function projected database frequent pattern set items processed 
scan find frequent items 
set items appearing transaction 
item contained max pattern support threshold output max pattern step lemma 
list list items support descending order item list processed order 
return pruning criteria lemma satisfied list return subset transactions containing set frequent items call analysis 
correctness algorithm follows lemmas having shown 
algorithm check frequent pattern 
check frequent patterns proper super pattern having exact support count 
furthermore lemma prune patterns approximately contained max patterns 
implementation algorithm involves projected databases containment tests frequent patterns 
accordingly propose implementation optimizations 
fp tree compress database projected databases 
fp tree prefix tree storing transactions 
frequent items transactions stored 
fp trees projected databases derived efficiently 
second critical implementation issue algorithm need identify max patterns containing pattern staying support range 
implementation index max patterns condensed fp base support level pattern length 
facilitate search organize max patterns prefix tree nodes item label linked 
empirical evaluation evaluate effectiveness efficiency condensed fp bases conducted comprehensive set experiments 
section report summary results 
experiments conducted pc pentium iii cpu mb main memory 
programs coded microsoft visual 
synthetic datasets real datasets experiments 
results consistent 
due lack space report results datasets follows 
report results effectiveness efficiency dense datasets mushroom connect uc irvine machine learning database repository 
dataset dense contains long patterns support threshold relatively high 
mushroom dataset contains transactions average length transaction connect dataset transactions transaction items 
typical dense datasets 
mining frequent patterns dense databases challenging 
test scalability fp bases syn dataset erated known ibm synthetic data generator :10.1.1.40.6757
sparse dataset simulating market basket data 
number transactions dataset 
experiments compare algorithms mining condensed fp bases 
dataset gen cfp level level method constructing condensed fp base algorithm 
cfp closet adapt closet algorithm cfp closet mining condensed fp base follows 
cfp closet finds frequent closed patterns checks frequent closed pattern lemma 
outputs frequent closed patterns 
cfp algorithm finds condensed fp base pruning optimization 
effect compression compression effects condensed fp bases measured compression ratio defined equation 
please note smaller compression ratio better compression effect 
fix support threshold test compression ratio respect various error bounds 
results datasets mushroom connect shown respectively 
error bound set percentage total number transactions dataset 
transactions dataset error bound means absolute error bound clearly shown condensed fp base achieve better compression ratio example dataset mushroom support threshold set frequent patterns total frequent closed patterns 
shown smaller condensed fp bases larger error bound better compression ratio 
note error bound exactly set frequent closed patterns 
seen frequent closed itemsets achieve compression ratio 
condensed fp base carry benefit take advantage error bound better compression 
condensed fp base performs better focus compression effect respect support threshold 
results shown respectively 
help verify compression effect plot compression ratio condensed fp base frequent closed patterns 
condensed fp base frequent closed patterns error bound clearly shown figures larger error bound better compression 
results confirm small error bound condensed fp base smaller condensed fp base frequent closed patterns 
compression ratio sensitive distribution frequent patterns respect specific support threshold 
fortunately general trend lower support threshold better compression 
support threshold low frequent patterns similar support counts 
pattern condensed fp base may representative patterns 
similar trends observed compression effect compression ratio larger setting compression power weaker 
efficiency computing condensed fp bases compare runtime cfp cfp closet cfp respect various error bounds 
support threshold set see trends follows 
runtime cfp cfp closet insensitive error bound 
methods find complete set frequent patterns frequent closed patterns respectively dominant costs 
note cost computing pattern cfp super pattern checking cfp closet minor comparing expensive pattern mining algorithms 
cfp fully utilize error bound prune search space 
larger bound faster execution 
faster algorithms error bound small 
observe similar trend dataset mushroom 
limited space omit details 
cfp dramatically slower cfp closet cfp remainder subsection discussion focuses cfp closet cfp 
compare runtime cfp closet cfp respect support threshold 
error bound set total number transactions dataset 
support threshold high runtime methods close 
support threshold low runtime cfp closet increases dramatically mine check complete set frequent closed patterns 
runtime cfp increases moderately support threshold low pruning techniques help confine search small subset frequent closed patterns 
similar trends observed experiments datasets 
omit details 
scaling test test scalability condensed fp bases related algorithms 
test scalability compression ratio condensed fp bases 
curve flatter say curve scalable compression ratio sensible database size 
show results dataset connect 
fix support threshold number transactions original dataset 
compare compression ratio fp base frequent closed patterns interestingly number transactions increases compression ratio increases 
reason transactions patterns various support 
compression effect databases small numbers transactions 
fortunately number frequent closed patterns patterns increase cally 
scalable compression ratio increases moderate way 
second synthetic dataset number transactions tests vary show scalability algorithm cfp 
comparison traditional frequent pattern mining include runtime closet 
closet computes set frequent closed patterns 
results shown 
test error bound cfp set see methods scalable respect number transactions datasets 
runtime close 
closet faster database large need check error bound 
cfp scalability comparable closet time achieves non trivial compression 
summary experimental results draw 
condensed fp bases achieve non trivial compression frequent patterns 
performs considerably better preferable 
second larger error bound compress 
error bound help condensed fp bases compact 
third cfp effi compression ratio runtime seconds error bound percentage total transactions 
compression ratio dataset mushroom 
cfp cfp closet cfp error bound percentage total transactions 
runtime error bound dataset connect 
compression ratio runtime seconds error bound percentage total transactions 
compression ratio connect 
cfp closet cfp support threshold 
runtime support threshold dataset mushroom 
cient scalable algorithm computing condensed comparable closet terms runtime scalability achieves better compression effect set frequent closed patterns 
optimization pruning techniques help cfp efficient scalable 
cfp clear winners frequent pattern base compression corresponding computation 
introduced considered problem mining condensed frequent pattern base 
notion condensed fp base introduced significantly reduce set patterns need mined stored analyzed providing guaranteed error bound frequencies patterns bases 
considered types condensed fp bases downward condensed fp base max pattern condensed fp base interesting algorithms novel optimization techniques developed mine condensed fp bases 
experimental results show achieve substantial compression ratio condensation condensed fp bases algorithms efficient scalable 
discussed interesting extensions methods 
interesting explore effective condensed fp bases efficient mining methods 

supported part nsf iis microsoft research university illinois nserc nce iris canada 
authors anonymous reviewers comments help improve quality 
compression ratio compression ratio freq 
closed pat 
error bound error bound support threshold 
compression ratio support threshold dataset mushroom 
freq 
closed pat 

scalability compression ratio connect compression ratio runtime seconds freq 
closed pat error bound error bound support threshold 
compression ratio support threshold dataset connect 
size dataset percentage total transactions number transactions closet cfp 
scalability runtime dataset agarwal aggarwal prasad 
depth generation long patterns 
kdd 
agrawal srikant :10.1.1.40.6757
fast algorithms mining association rules 
vldb 
bayardo 
efficiently mining long patterns databases 
sigmod 


approximation frequency means free sets 
pkdd 
gehrke 
mafia maximal frequent itemset algorithm transactional databases 
icde 
dong li 
efficient mining emerging patterns discovering trends differences 
proc 
kdd 
gouda zaki 
efficiently mining maximal frequent itemsets 
icdm 
han pei yin 
mining frequent patterns candidate generation 
sigmod 
lakshmanan ng han pang 
optimization constrained frequent set queries variable constraints 
sigmod 
mannila toivonen 
multiple uses frequent sets condensed representations 
kdd 
ng lakshmanan han pang 
exploratory mining pruning optimizations constrained associations rules 
sigmod 
pasquier bastide taouil lakhal 
discovering frequent closed itemsets association rules 
icdt 
pei han lakshmanan 
mining frequent itemsets convertible constraints 
icde 
pei han mao 
closet efficient algorithm mining frequent closed itemsets 
dmkd 
zaki :10.1.1.10.7611
generating non redundant association rules 
kdd 
