human computer interaction volume pp 
copyright lawrence erlbaum associates overview epic architecture 
performance application human computer interaction david kieras david meyer university mi epic executive process interactive control cognitive architecture especially suited modeling human multimodal task performance 
epic architecture includes peripheral sensory motor processors surrounding production rule cognitive processor construct precise computational models variety human computer interaction situations 
briefly describe models demonstrate epic basic properties human performance provides usefully precise accounts performance speed 
david kieras cognitive psychologist computer scientist speciality computation human cognition performance emphasis application human computer interaction system design problems professor department electrical engineering computer science university michigan 
david meyer mathematical experimental interests human cognition action professor th cognition perception program department psychology university michigan 
kieras meyer contents 

epic process interactive control architecture 
fundamental motivations developing epic embodied cognition computational models performance cognition executive process multiple task performance 
description epic architecture overview perceptual processors cognitive processor motor processors 
constructing models epic constraints model construction modeling multiple tasks executive processes need modeling policies 
examples applying epic human computer interaction 
selecting items menus serial search model overlapping search model implications eye hand movements 
driven keyboard data entry overlapping auditory manual processing buffering effects 
eye movements executive control simple dual task simple lockout model executive control interleaved model executive control conc 
complex dual task automation performance deficit produced automation mode task explanation automation deficit relation elementary dual task phenomena general 
cognitive 
cognitive architecture theoretical struc cure set mechanisms cognition models specific tasks phenomena constructed 
proposals anderson laird rosenbloom newell cognitive architectures recognized fundamental theoretical ap epic hci proach cognitive psychology 
architecture proposal synthesis theoretical concepts attempts subsume variety specific models mechanisms single coherent 
architecture represented computationally implications applicability easily rigorously explored tested 
progress rigorous cognitive theory requires development mor comprehensive accurate computational cognitive architectures 
cognitive architecture human computer hci 
significance cognitive architectures practical concerns hci user interface design lies areas 
extent key phenomena relevance hci captured architecture architecture acts codified theoretical summary phenomena 
codification learned applied ci researchers practitioners easily traditional approach study ing attempting apply vast collection isolated phenomena individual experimental results small scale models 
second architecture supports constructing models tasks easily accurate predictions task performance cognitive architecture provides foundation engineering models evaluating user interface designs early development process provide valuable usability information addition traditional user test ing methods 
example discussed john kieras various extant members goms family engineering models simple cognitive architectures useful interface design evaluation 
developing sophisticated architectures predictive power complex situations able develop accurate comprehensive engineering models aid hci design 
epic process interactive control article provides overview epic architecture developed kieras meyer modeling human cognition performance kieras wood meyer meyer kieras 
epic similar spirit model human processor mhp card moran newell epic incorporates theoretical cal results human performance form software framework computer simulation modeling 
epic model con structed represents general procedures required perform complex multimodal task set production rules 
model supplied external stimuli task execute procedures way task requires simulating human performing task generating predicted actions simulated real time 
epic architecture constructing models kieras meyer performance 
learning system mechanisms learning perform task 
purpose epic repre sent detail perceptual motor cognitive constraints human ability perform tasks 
cognitive architectures epic ped primarily addressing hci problems larger scientific endeavor repre sent important theoretical concepts human intelligence abilities 
hci subset human performance pro cognitive architecture allow analyze compare interface designs recommend evaluate improvements 
time epic mainly useful research system exploring human performance limitations determine effects particular interface design low levels specific interaction techniques high levels systems support complex task performance multimodal time stressed domains 
possible develop epic design analysis techniques routinely applied system design 
organization article 
article describe rationale development epic summarize architecture discuss important general modeling issues 
illustrate epic butions hci series application brief examples showing epic predictive explanatory modes address elementary aspects interface design complex phenomena related human interaction semi automated systems 
goal article exhaustively explore application epic architecture justify architecture illustrating wide applicability 

epic process interactive control architecture 
fundamental motivations developing epic embodied cognition historically proposals computational models human cognition cognitive psychology artificial intelligence tended emphasize purely cognitive human system details human perceives environment acts 
approach seriously misleading 
example human visual capacity detect recognize objects uni form varies distance retina fovea 
retina oriented motor system oculomotor mechanism control part epic hci visual environment accessed detail 
tasks availability stimulus depends details eye oriented stimulus 
likewise conventional cognitive theory tended assume human decides act fundamental problems ying intended action 
human motor system complex right interacts strongly cognitive systems rosenbaum 
example different movements take substantial bunt time execute time depend heavily details required movements history previous possibly interfering movements 
furthermore response execution demands perceptual system extreme need vision aimed movements making response may interfere collecting visual information needed part task 
computational cognitive architectures begun embodied include constraints imposed perceptual motor system 
example newell explicitly included constraints outline cognitive architecture effort include perceptual motor mechanisms soar architecture laird 
likewise act architecture proposed anderson begun include perceptual motor mechanisms 
goal developing epic incorporate key facts human tual motor constraints theory human cognition give perceptual motor mechanisms equal status cognition accounting human performance 
epic production rule tive processor surrounded perceptual motor processors time course processing represented detail current human performance research literature 
long takes epic model task depends intimately epic eyes percep tual mechanisms effectors task 
level detail interactions processors task execution remarkably subtle representation task timing computational simu lation model critical understanding human performance 
computational models performance cognition second motivation developing epic corollary fully extend current cognitive architecture computational modeling paradigm field human attention performance 
realized models human performance available years hos saint see card hochberg models generally form cognitive architectures analytic tools kiel meyer practical system design form engineering models discussed john kieras 
field human performance suffered lack computational modeling historically extensively researched practically useful psychological fields 
research human performance conducted level qualitative interpretation empirical results verbally ex pressed evaluated theory 
symptom detailed rigor available computational models key issues concerning fundamentals human information processing remained unresolved years status single channel versus multiple resource debate discussed meyer kieras 
goal developing epic advance state psychological theory theoretically underdeveloped area 
important benefit working human performance domain empirical literature abounds quantitative data typically precision detail purely cognitive task domains 
traditional cognitive modeling efforts committed obtaining detailed quantitatively accurate fits empirical data variety performance task domains 
reason making effort models performance practically useful system design problems reasonably accurate 
fundamental reason trying match detailed data quantitative accuracy serves powerful constraint constructing models phenomena 
key function cognitive architecture provide theoretical constraint possible models see newell 
try ng match detailed quanti data acts constraint reducing number arbitrary decisions constructing epic model task 
constraints imposed combination detailed quantitative effects empirical data task structure fixed architecture mean relatively degrees freedom constructing model fits see meyer kieras discussion 
executive process multiple task performance third motivation developing epic explore mechanism role executive processes control supervise cognitive processes analogous supervisor computer operating see meyer kieras 
theorists human formance various proposals nature execu tive process 
unfortunately thee proposals usually lacked coherent theoretical basis computational representation 
theo proposed executive process implemented type special mechanism sits outside regular cognitive system presumably operation 
epic hci proper supervision behavior simply form skill sought represent executive process way forms skill just supervisory component computer operating system just computer program 
approach understanding nature executive process details human cognitive architecture understand multiple task performance 
multi task situations human perform tasks simultaneously tes 
subdivided tasks meaning fully performed isolation logical subtask tasks performed period time 
example multiple task situation occurs airplane cockpit pilot may need simultaneously pilot aircraft track enemy target radar display 
main problem confronting human execute independent tasks coordinated fashion meets constraints performance giving task priority 
literature multiple task performance extensive summarized review see gopher meyer kieras 
course human information processing limited capacity single channel bottleneck traditionally assumed 
humans multiple tasks impressively ability depends strongly specific combinations tasks involved 
attempt summarize dependencies pose fundamental theoretical dilemma reconcile complex patterns people multitasking abilities notion capacity human system limited 
epic assumption central capacity cognitive processing limited 
assumption traditional lacks empirical justification 
contrast assume limitations human ability structural performance tasks may limited constraints peripheral perceptual motor mecha nisms limited verbal memory capacity pervasive limit cognitive processing capacity 
executive strategy responsibility meeting performance requirements tasks spite structural limitations 
meet performance goals executive process coordinate perceptual cognitive motor resources system tasks conducted proper relative priority speed 
multiple task situations stress human capabilities seriously observed patterns behavior provide clear insights abilities limitations human information processing system architecture 
despite practical importance multiple task performance empirical theoretical understanding multiple task performance quite limited 
epic models successful accounting kieras meyer unprecedented accuracy performance laboratory versions multiple task situations kieras meyer meyer kieras 
addition understanding allocation resources multiple task situations contributes understanding single task situations maximize formance executive process allocate processing resources different parts single task properly coordinated fashion 

epic architecture overview shows structure processors memories epic architecture 
level epic bears superficial resemblance earlier frameworks human information processing incor new synthesis theoretical concepts empirical results comprehensive detailed earlier proposals human performance modeling mhp hos saint see mcmillan 
epic designed explicitly couple detailed mechanisms basic information processing perceptual motor activity cognitive analysis procedural skill represented production system models cct kieras polson act anderson soar laird 
epic production rule cognitive processor surrounded perceptual motor pe applying epic task situation requires specifying production rule programming cognitive processor relevant perceptual motor processing parameters 
epic computational task models production rules supply general proce knowledge task epic interacts simulated task environment epic model generates specific sequence serial parallel human actions required perform specific tasks 
reflecting specific task scenarios task analysis reflected model general class tasks 
software constructing epic models currently implemented common lisp models typically developed macintosh common lisp simulation production runs executed franz common lisp fast unix workstation 
models described cited article implemented run produce predicted results 
simulation soft ware available interested researchers detailed technical de scription architecture focused exclusively developing architecture modeling important tasks stress scientific accuracy architecture 
time epic packaged 
available anonymous fp ftp eecs edu people ps 
epic hci re 
structure epic 
dm 
om ce hg md enact nd de md nd el ment environment user friendly manner full fledged lisp programming expertise required simulation package introductory tutorial user manual 
epic framework includes modules simulating human facilities simulating interaction human external system computer 
shows simulated task environment left simulated human de scribed epic architecture right objects simulated screen items simulated keys making physical interface 
task environment module assigns physical loca tions interface objects generates simulated visual events sounds computer entities environment produce response human behavior 
having separate environment simulation module greatly simplifies programming complete simulation helps enforce generality procedural knowledge kieras meyer represented epic model 
task environment module driven task instance description consists sequence timing events external human user simulated user deal happens simulated task environment 
th regard epic architecture shown 
conventional flow information sense organs percep tual processors cognitive processor consisting rule interpreter working memory motor processors control effector organs 
epic goes mhp specifying separate perceptual processors distinct processing time characteristics sensory modality separate motor processors vocal manual eye movements 
feedback pathways mo tor processors tactile feedback effectors important coordinating multiple tasks 
declarative procedural knowledge distinction act class cognitive architectures represented form separate permanent memories production rules declarative information 
working memory wm contains temporary information needed production rules including control items task goals sequencing indices conventional wm items representations sensory inputs 
wm separate partitions different types informa tion auditory wm visual wm forth 
structure wm properties processors described detail 
numeric values various time parameters labeled standard values assume fixed applications architecture ta values may vary depending es specific task situation 
standard values reading human performance literature may revised refined supposed hold applications archi tecture 
nonstandard parameter values need estimated mode specific task hope additional modeling experience focused empirical studies collections typical parameter values come available constructing new models 
perceptual processors single stimulus input perceptual processor produce multiple outputs deposited wm different times 
perceptual proces sors epic simple pipelines input produces output certain time window time integration effect assumed mhp 
tactile perceptual processor handles movement feedback effector organs feedback important coordi tasks meyer kieras elaborated 
epic hci 
epic model eye includes retina determines kind sensory information available visual objects environment distance angle retina object center fovea 
epic current highly simplified model retina contains zones standard radius fovea periphery 
certain information contents character available fovea information area df filled characters available 
severely limited information location nf objects object just appeared available peripheral vision 
course exact ity visual information different areas retina depends specific physical properties 
example large isolated character discriminable degrees away fovea reading words embedded text displayed small type require words close fovea 
unfortunately human performance literature appear contain body parameterized results properties vision meaning exact time availability parameters visual stimuli estimated new task specific models 
epic visual working memory visual perceptual processor maintains representation objects visible properties 
visual working memory visual situation kept date objects appear disappear change color forth eye movements object movements change visual es available retina 
response visual events visual processor produce multiple outputs different timings 
object appears output representation perceptual event detected standard delay msec followed representation sensory properties shape standard delay msec results pattern recognition task specific particular shape represents left pointing arrow typical delay msec 
auditory processor 
auditory perceptual processor accepts audi tory input ou puts working memory representations audi tory events speech disappear time 
example short tone signal produces item corresponding onset tone standard delay msec item corresponding discriminated frequency tone typical delay msec offset item standard delay msec 
simplicity items simply disappear memory fixed time typical delay sec 
speech input represented items single words auditory ing memory 
auditory perceptual processor requires certain time kieras meyer recognize input words typical delay msec acoustic stimuli produces representations auditory working memory 
items disappear time auditory input 
represent sequential order speech input items contain arbitrary symbolic tags previous item item link items sequence 
speech input word carries tag value word sequence item tag value previous tag 
tags set production rules step auditory working memory items series spoken words processing time 
example models described article processes spoken telephone billing number retrieving recognized code digit tag chained sequence specify key press action 
available empirical literature auditory perception lacks comprehensive results auditory perceptual parameters estimated task specific model construction 
cognitive processor production rules cle tim cognitive processor pro terms production rules epic model task include set production rules specify actions situations performed task 
example production rules models described article 
epic uses parsimonious production system pps interpreter especially suited task modeling 
pps rules format 
rule condition test contents production system working memory 
rule actions add remove items working memory send command motor processor 
cognitive processor operates cyclically 
cycle contents memory updated output perceptual processors previous cycle modifications cycle contents production system working memory updated commands sent motor processors 
mean duration cycle standard msec 
cognitive processor cycles synchronized external stimulus response events 
inputs processors accessed intermittently production system working memory updated start cycle 
input arrives course cycle wait temporarily service cycle begins 
consistent variety phenomena apparent temporal granularity stimulus 
epic run mode cycle duration stochastic standard mean epic hci value msec time parameters scaled stochastic value variance stochastic distribution cycle time chosen produce coefficient variation simple reaction time corresponding typical observed value 

traditional 
production system architec tures require production rule ran fired time actions executed 
rule matching conditions kind resolution mechanism choose rule fire 
soar laird complex production propose operators apply rules fired separate process decides single candidate operator apply 
pps radical simple policy cognitive processor cycle pps fire rules conditions match contents working memory execute actions 
epic models may true parallel cognitive process ing production rule level multiple threads processes represented simply sets happen run simultaneously 
multiprocessing ability cognitive processor parallel operation perceptual motor processors means epic models multiple task performance incorporate gratuitous assumption limited central processing capacity central processing bottleneck 
critical clear exactly claimed 
epic built limit strategies processes cognitive processor executing simultaneously rate execution limited perceptual motor mechanisms course limited memory mechanisms involved task limited 
example reason person perform long divisions head simultaneously limited structural resource verbal short term memory 
example eyes fixate place time hands single processor 
task demands manual responses visual stimuli distributed wide space result severely limited human performance purely cognitive demands trivial 
contrast people otten perform multiple cognitive tasks simultaneously collecting slides answering questions talk long strategies compatible 
omitting central capacity limit bottleneck radical recasting conventional cognitive theory claim consistent ong line empirical theoretical discussion human performance field challenges traditional assumption limited central capacity see meyer 
detailed quantitative modeling variety multiple task data meyer shows epic assumptions nature kieras meyer cognitive perceptual motor limitations quite consistent large variety empirical data 
decision nature human limitations matter scientific tactics theoretical strategy radical ring assumptions explore consequences modeling complicating architecture require start known limitations human memory perceptual motor mechanisms adopt apparent limitations data compel 
ar simple radical set assumptions nature multiple task processing limitations held 

epic production system working memory effect partitioned working memories 
visual auditory tactile memory contain current information produced corresponding perceptual processors 
timing duration forms working memory described earlier 
motor working memory contains information current state motor processors hand movement progress 
information updated cycle 
forms working memory deserve special note 
forms amodal contain information directly derived sensory motor mechanisms 
amodal working memory control store contains items represent current goals current steps procedures accomplishing goals 
important feature pps control information simply type working memory item manipulated rule actions critical modeling multiple task performance production rules execu tive process control subprocesses manipulating control store 
second amodal working memory simply termed general wm store miscellaneous task information 
lime epic include assumptions decay capacity representational properties general working memory 
research strategy developing epic see constraints nature general wm required model task performance detail follow customary strategy cognitive modeling assuming 
epic working memory structure hard wired pps 
pps ally working memory clearly termed production rules 
pps multiple memory system simply term database item indicating type memory item examples article 
likewise format items memory required contents rule conditions fixed architecture preferred develop restrictions modeling experience prematurely prescribe architecture 
epic constraints advance 
capacity loss assumptions memory systems required account time course performance tasks modeled epic far limitations determined perceptual motor systems appear dominate performance 
substantial limitations obscured gratuitous central proc capacity working memory see kieras 
discussion 
similar reasons time epic information lost control store ini capacity control store 
research underway explore loss corruption information epic working memories account occurrence properties human errors task performance 
motor processors epic motor processors elaborate mhp producing variety simulated movements different effector organs varying amounts time 
shown separate processors hands eyes vocal organs active simultaneously 
cognitive processor sends command motor processor consists symbolic name type desired movement relevant parameters motor processor produces simulated movement proper time characteristics 
various processors similar structures different timing proper ties capabilities current human performance literature motor control rosenbaum 
manual motor processor movement forms styles hands single manual processor normally operated time synchronized 
oculomotor processor generates eye movements cognitive command response certain visual events 
vocal motor processor produces sequence simulated speech sounds symbol desired utterance 
preparation eo 
various motor processors represent movements movement basic way 
current research movement control rosenbaum suggests movements specified terms movement features time produce movement depends feature structure mechanical properties 
time complete movement divided preparation phase phase 
preparation phase begins motor processor receives cognitive processor 
motor processor name commanded movement set movement features values depend kieras meyer style characteristics movement generates features standard msec 
time generate features depends features reused previous movements repeated movements initiated sooner features generated advance 
features prepared execution phase begins additional standard msec initiate movement followed actual physical 
time physically execute movement depends mechanical ties terms effector organ involved eye rs 
hand type movement finger flexion press button finger rs 
pointing motion mouse 
movement features remain motor processor memory movements share features performed rapidly 
limits features reused example new movement different style previous move ment features generated anew 
task permits movement anticipated cognitive processor command motor processor prepare movement advance generating required features saving motor memory 
time movement initiation time required com mechanical execution movement 
motor processor prepare features movement time reject subsequent commands received preparation phase preparation new movement done parallel physical execution previously commanded movement 
prepared movement features saved motor memory previous execution complete new movement initiated 
cognitive processor production rules exploit capability sending motor processor new movement command soon ready preparing features new movement 
result series rapid movements total time little sum initiation mechanical execution times 
example operation 
strike key finger peck movement style hunt peck typing cognitive processor commands manual motor processor perform peck movement finger right index specified object environment key 
movement style features peck style hand finger direction extent motion distance current location designated finger location target object 
previous movement peck movement hand finger direction extent generated anew 
movement similar direction extent previous movement epic hci features reused generated anew 
features generated movement initiated 
time required physically execute movement target form fitts law see card chap 
standard minimum execution time msec reflecting th 
small movements large targets physiologically lower bound actual duration muscular movement 
simulated finger hits key left location key await epic manual motor processor represents movement styles including punching individual keys buttons known finger keys may require horizontal motion posing entire hand specified location finger movements poking object touch screen pointing object mouse control joystick position cursor object 
style move ment particular feature structure execution time function specifies long mechanical movement takes actuate device task environment 

epic vocal motor processor elaborated time minimal facilities needed model certain dual task situations see meyer kieras 
complete version vocal motor processor able produce extended utterances variable content account sequential nature speech means movements prepared fly ongoing speech 
current version epic assumes simple fixed utterances designated single symbol require preparation features execution begins 
actual production sound assumed delayed msec initiation continues time determined number syllables words 
development vocal motor proces sor planned 

epic eye movements produced modes voluntary involuntary reflexive 
cognitive processor commands voluntary eye movements saccades designated object 
saccade requires generation features direction extent movement current eye position target object 
execution saccade currently estimated require standard msec degree visual angle 
oculomotor processor involuntary eye movements saccades small smooth adjustments response situation arrow visual perceptual processor oculomotor processor 
kieras meyer sudden onset appearance object trigger involuntary saccade 
fovea somewhat center object produce centering movement automatically help zero object saccade 
eye automatically follow slowly moving object smooth movements occasional small 
tasks article epic ce follow moving objects mixture voluntary involuntary eye 
partial autonomy oculomotor processor permits cognitive proc choose object examine command eye moved leave details keeping centered fovea oculomotor processor 

constructing models epic constraints model construction fixed architecture variable presentation modeling approach document aspects parameters modeling framework fixed supposed generalize applications aspects parameters adjusted fit data estimated data specific situation modeled 
epic important fixed aspect connections mechanisms epic processors supposed apply modification task domains 
models built programming fixed comprehensive architecture task strategy expressed production rules executed cognitive processor 
attempt explain phenomena terms task specific cognitive strategies changing architecture 
key aspect epic free vary task specific way task specific production rule program ming constrained extent written execute task reasonably efficiently 
fixed ee parameters 
fixed parameters time parameters processors feature structure motor processors individual styles movement 
model properties parameters free vary model model task task tas 
specific sensory availabilities perceptual encoding types times involved task constrained similar con stant similar perceptual events second styles movement control device typing rs 
visually guided constrained task 
model inputs outputs 
similarly modeling approach document information model builder supply order epic hci construct model information constructed model produce return supplied information 
construct epic model model builder supply information corresponding free parameters just described production rule representation task procedures 

task specific sensory availabilities perceptual proc ings timings 

movement styles determined task requirements 
addition model builder supply simulated task environment includes physical loca tions characteristics relevant objects external human 
set task instances execution time interest instances specify environmental events timing control environment module simulation 
return inputs epic model interact simulated task environment generating predicted sequences simu lated human actions required task instance predicted time occurrence action 
production rules written describe general procedural knowledge perform task predictions generated task instance subsumed general procedures 
modeling multiple tasks executive processes proce 
theorists multiple task performance postulate executive control process coordinates separate tasks norman shallice 
likewise key feature approach executive control process just set production rules 
rules control task processes manipulating information control store partition production system working memory 
example assume task represented set production rules task goal appearing condi tions executive process rule suspend task removing governing goal control store cause resume opera tion goal 
executive process cause task follow different strategy placing general wm item task rules test enabling set rules disabling 
addition executive process may control sensory motor peripherals directly moving eye fixation point order meyer allocate resources tasks 
postulating executive control mechanism different kind cognitive mechanisms epic uniform mechanism control behavior executive level detailed level individual task actions 
corollary learning coordinate multiple tasks simply learning possibly difficult proposed investigators gopher 
tasks 
epic fo simplest heavily studied dual task situation research literature called psychological refractory period prp procedure 
prp procedure consists temporally overlapping choice reaction time tasks subject instructed response task making response second task 
primary measure interest reaction time rt second task may affected temporal spacing task stimuli 
basic empirical result second response tially delayed spacing stimuli decreases 
conventional interpretation effect prp effect human central response selection bottleneck second response selected initiated response 
details effect depends factors stimulus response modalities tasks form complex pattern satisfactorily explained detail 
meyer kieras provided exhaustive treatment prp effect epic simulations mathematical analyses account quantitatively results published new experiments 
account interprets prp effect product task strategy hard wired central bottleneck 
order conform task instructions subjects adopt strategy initiating second response ensure occur response magnitude delay second response depends second task processing overlapped task turn depends details task structure eye movements required task difficulty task modalities 
epic architecture captures relevant constraints ver meyer kieras able construct models accounted specific patterns effects quantitative detail revealed underlying structure phenomena 
details discuss experiments refute epic account prp available meyer kieras 
lessons multiple task modeling 
immediate insight application epic architecture multiple task domains epic hci possibilities performing task activities parallel 
dual task models epic role cognitive strategies coordinating activity tasks critical accounting observed effects situations strategies surprisingly subtle efficient 
dual task experiments subject supposed complete tasks rapidly higher priority task completed lower task regardless relative speed perceptual motor processing involved ia tasks 
tasks require motor processor perceptual cognitive processing lower priority task go higher priority task allowed control motor processor 
motor processor commenced execution higher priority response lower priority task control motor processor honoring task coordination requirements maximizing speed 
tasks involve different motor modalities portions lower priority response prepared advance response quickly turn comes 
tasks compete eyes hands executive rules dynamically switch control processors tasks processing interleaved minimizing idle time 
dual task situ ation cognitive processor strategies responsible allocating eyes motor processors tasks needed maximize performance 
similarly single multimodal task requirement speed task strategy responsible ensuring individual processors soon possible minimize total time required task 
need modeling policies model fitting performance prediction 
multiple possibilities activities multimodal task overlapped epic architecture 
way identify specific strategy governs overlapping task propose strategy generate predicted performance strategy compare predicted performance empirical data repeat predicted data match empirical results 
typical scientific cognitive modeling devoted verifying cognitive architecture understanding task done acceptable arrive task strategies post hoc model fitting mode 
scientific cognitive architectures progressed simple demonstrations feasibility success priori prediction required fully establish architecture scientific grounds architecture practical settings analyze merits alternative designs 
predicting performance priori basis requires usefully accurate cognitive architecture set modeling policies kieras meyer choose represent task strategies priori basis 
developing policies done systematically charac space possible models testing accuracy example reported kieras 
modeled task previously studied gray john atwood 
ample performance prediction modeling 
kieras 
epic predict performance prac multimodal task telephone operators collect billing numbers spoken customers enter numbers computer workstation verify numbers allowing call proceed 
volume saving seconds time call worth millions dollars annually labor costs 
human operators normally overlap speaking listening customer striking keys watching information appear screen 
time taken handle call simply sum individual activity times complex function activities overlapped extent 
epic models constructed priori basis modeling policies start simple procedural task analysis translated standardized format set epic production rules 
predicted task execution times accurate useful engineering context 
epic architec ture accurately represents perceptual motor constraints task making possible easily construct model priori basis predicts task time accurately aid choosing alternative designs 
effort required construct epic models fairly modest 
return resulting epic models generate predicted execution times possible task instances scope model 
epic models appear engineering models multimodal high performance tasks 

applying epic human computer interac goal article epic architecture show applied variety problems hci 
section emphasize variety presenting series illustrating current applications epic various hci situations ranging low level phenomena complex interactions visual displays dual task settings 
recurring themes critical role visual layout eye movements importance parallel processing multitask execution simple situations 
epic hci 
selecting items menus choosing items pull menu mouse standard feature current interfaces 
research practical design literature contain comprehensive explicit model menu access done 
af fn st glance user visually scan list menu items looking turn desired item movement position cursor 
authors sears shneiderman proposals menu search elaborate detailed empirical support support notion menu search completely random card results appear refute lee macgregor 
epic represent different hypotheses users select menu items predicted results compared data high precision 
working anthony hornof begun model menu access part larger program research visual search visual hornof results suggest epic address variety visual issues interface design see hornof kieras 
hornof modeled performance task condition experiment nilsen subjects selected items poll menu 
experiment subject shown digit clicked target 
cause vertical menu digits appear random order cursor position 
subject pointed clicked previously designated digit menu 
time select digit function location randomly ordered menu fairly linear slope msec item similar results obtained 
serial search model hornof constructed serial search model menu item selection corresponds time hypothesis visual search 
eye moved object menu object matches sought item pointing movement initiated item eye moved object 
shows key production rules model 
rule target saccade waits current visual object bound variable text label property visual working memory fires label match sought label bound variable nt 
rule fires action delete production system database action add database update production system database object current item new current item action instructs ocular motor processor move eye object 
meyer 
rules march model menu selection 
rule repeatedly moves eye menu onf ar text label menu item fails match sought item working memory 
matching item ts second rule points cursor 
ot saccade goal tale step cu object rs object ai free ject label target text nt cup rent item object cup rent 
elt am object object located goal tail step visual visual ws cuts step 
ste send 
point text label object available rule fire 
text label object matches sought label rule get located fire 
rule disables rule firing removing step visual search item database enables step procedure adding step item sends manual motor processor instruction perform right hand movement fl style positions mouse cursor target execution time follows fitts law see earlier card 
applying model task requires estimating parameter long takes recognize text label digits retina recognition done 
hornof assumed digit recognition done fovea required msec digit value similar stimuli models epic hci 
menu selection times solid points times open points dotted lines ar explained text item position domains 
epic run simulated version nilsen experiment predicted menu selection times obtained 
shown serial search model seriously data predicting slope msec item far larger observed value msec 
reason discrepancy epic architecture serial search model require estimated time msec perceptual process identify menu item msec cognitive processor production rule fire initiate eye movement item due savings repeated similar movements slightly msec subsequent eye movement 
perceptual processing takes time msec oculomotor cognitive times long produce slope shallow msec 
summary data nilsen extremely difficult reconcile model assumes strategy sequentially fixating deciding menu item separately 
overlapping search model hornof developed sophisticated strategy fully exploits parallelism possible epic 
scanning process moves eye item relying parallel perceptual processing pipeline complete recognition processing item 
separate matching rule waits sought item recognized appear working memory stops scan initiates mouse movement 
relevant rules shown 
production rule saccade moves eye item item rapidly possible 
movements repeated oculomotor ure production rules rom search model rule moves eye menu le item 
second rule scan ir item appears working memory enables third rule moves eye bck mt ht item mouse movement 
saccade goal task ster visual sweet wh 
itm object object object visual object iee wh wh object send hove xt objec goal ster visual sweet wh ext visual object label step visual gaze wh object 
object hove gaze goal ster 
wh object objec hot rf free ster gaze 
ster hate sen 
hove 
ob ect sen 
ht 
object object epic hci processor produces rapidly described 
eye moves digit fovea gets started perceptual recognition pipeline mentioned eventually recognized label property object gets deposited visual working memory 
rule scanning functions aq independent demon waiting item appear visual working matches target 
soon rule shuts scanning process 
removing item sweep enables rule hove gaze ito ta 
get 
rule launches eye movement mouse cursor move ment matching object 
search matching item conducted partially parallel process recognizing labels desired object overlapped time eye movements required move fovea objects 
parameters digit recognition availability time overlapping search model predicts values shown model predicts slope msec excellent match empirical value 
implications eye hand movements model claims eye movements ex certainly subject empirical test 
possible epic model fit data additional effects nilsen data account see hornof kieras 
important see claims model follow epic architecture 
menu items uniformly spaced single line eye movements items repeated movements meaning feature structure move ment identical previous movement 
started eye movements fast oculomotor processor movement preparation time zero leaving execution time 
cognitive processor simply commands movement soon oculomotor processor ready 
visual stimulus continue processed perceptual recognition pipeline eye moves item 
fully parallel capability epic cognitive processor simple matter completely overlap execution scanning process detection sought item 
possibility epic presents relatively fast menu selection time simple result scanning done parallel matching 
possible model idea menu items recognized outside fovea effective fovea larger 
example digits discriminated ously scanning strategy simply move eye jumps large include item effective fovea 
meyer alternative model requires fewer frequently executed eye movements produces fast menu selection times 
addition important effect nilsen unordered menu data shorter menus processed rapidly board suggests random search strategy argued card 
assuming subjects perform mixture different strategies hornof kieras able account effects nilsen data 
goal line unified account menu selection terms visual search mouse pointing mechanisms ultimate goal evaluation tool visual layout designs visual layout interface specified corresponding epic models task run determine interface demands visual form eye movements perceptual delays 
important detail results concerns contribution mouse movement lime known follow fitts law non linear function 
predicted observed times results happened mouse movement time 
possibility nilsen subjects single mouse movements item scanned mouse cursor menu halting desired item suggested sears shneiderman 
proposing eye scan rapidly difficult accept hand moved quickly quite 
better simpler explanation quantitative explanation provided epic 
happens range target sizes distances involved nilsen menus fitts law times mouse move ment relatively short compared total item selection times close linear 
consequently mouse movement time component total time result noticeable nonlinearity 
contrast verbal reasoning qualitative properties effects detailed quantitative models epic greatly clarify different component mechanisms contribute task execution lime 
illustrates elementary aspect interface involve important subtle aspects human performance architecture 
shows quantitative parameter values built epic pose powerful constraints strategies serve accurate models cognitive processing 
example possible rule serial search strategy epic determines absolute minimum times moving eye making decision item leave time perceptual processing items 
minimum time turn determined epic feature representation movements similarity repeated eye movements resulting epic hci production rule digit model telephone output recognition identifies key struck manual motor enter goal enter number get di wh pro prey digit di share flu hot rp 
oct sot se wit speech nmr wh speech specific visual layout task means take little time prepare 
final quantitative result provided epic mechanisms con linearity selection time function nonlinear component contributed mouse movement time sufficiently large specific layout menu produce nonlinear selection time function 

driven keyboard data entry illustration elementary hci tasks involve con parallelism appears modeling telephone operator tasks 
skilled telephone operator listen string digits spoken customer enter keypad spoken 
processing auditory perceptual processor cognitive processor manual motor processor simultaneously cognitive processor plays role mediator auditory motor processors feeding instructions motor processor rapidly recognized digits available perceptual processor soon motor processor ready keystroke movement preparation 
part kieras performance examined modeled detail 
overlapping auditory manual processing auditory processor produces series auditory working memory items contain recognized digits recoded identities keypad keys chained preserve order heard 
shows production rule nm digit model kieras meyer kieras 

rule uses recoded digits corresponding keystrokes pipeline fashion similar spirit john model transcription typing 
recognized spoken digit represented auditory working memory sequentially tagged item form auditory speech previous prey type digit digit variable represents recoding supplied perceptual processor designates physical target corresponding key 

digit arrives working memory rule fires manual motor processor begun executing previous keystroke sends keystroke command corresponding digit manual motor processor updates pointer wm speech item auditory working memory processed 
rule requires digit typed shape center key keypad key visual working memory ensure target key view 
manual motor processor uses code digit key prepare features peck style movement strike key initiates prepared movement soon hand physically free 
preparation process takes lo msec depending similarity movement previous movement movement takes msec initiate followed minimum lo msec physically execute 
time keystroke execution prepare features keystroke assuming cognitive processor provided keystroke instruction soon 
sequence keystrokes quite rapidly order msec apart 
auditory input supplied rapidly keystrokes exactly slower depends subtle details event timing 
buffering effects telephone operator task subtask entering spoken digits part larger task operator determine customer speech keys strike indicate billing category call enter billing numbers 
operator indicates billing category striking sta sr og key strikes kp sp key signal billing number entered numeric keypad billing number digits 
performance telephone operator task modeled kieras 
special ized epic model explore details auditory digit entry subtask 
model operator waits customer speak digit striking ta pl key followed kp 
spl key strikes digit keys rule shown 
individual stimulus response timings obtained videotaped performances kieras 

shows epic hci ft observed ind predicted rl keystrokes speech input 
observed rts solid points lines open points dotted ke stroke events different task performed 
task involves ke tn followed digits unique timing order horizontal adl keystroke event observed predicted rts keystroke measured auditory stimulus event defined stimulus keystroke 
observed rts set task instances performed single operator task instance unique interaction customer operator different sequence digits spoken different timing pattern instances 
rts shown individual subject observations 
tendency rt decrease sequence keystrokes task instance rts seemingly trivial task vary tremendously task instances 
values predicted epic model capture general trend keystrokes substantially delayed need previous keystrokes completed digit keystroke 
gradually digit keystrokes catch customer speaking digits lower average rate typed 
shortest rts occur processing caught point idle waiting time 
auditory recognition parameter estimated meyer difference observed shortest rts predicted time cognitive motor processing produce keystrokes 
parameter estimate msec earlier described strategy suffices produce observed complex profile rts response speech input 
single observation quality data fit predicted observed rts quite 
model shows keystrokes task delayed architecture requires suggesting performance speeded changing workstation design ways 
keystrokes eliminated placed 
task performance speeded fewer digits buffered working memory 
second customer spoke digits higher rate speech compression produce effect task fact done faster average 
task domain saving second average task time credited considerable financial saving gray ability epic reveal detailed aspects performance important result 

eye movements executive control simple dual task computers just desktop office settings real time contexts airplane displays controls computer interfaces 
mentioned epic developed deal multiple task situations pilot track target display decisions information display 
spatial distribution visual information timing eye movements play critical roles determining performance situations 
remainder article describe studies involving simple form paradigm involving complex form 
modeled results obtained martin emerson wickens especially instructive role eye movements visual information dual tasks 
shows epic model display experimental task 
display represents visual environment epic objects correct sizes positions small gray circle marks location size epic fovea currently choice stimulus larger gray circle marks boundary region intermediate discriminative ability 
lower priority tasks compensatory tracking task carried upper box display 
perturbing epic hci ur epic model martin emerson task 
tracking upper square eye choice arrow appearing scale lower circle 
space go erp ua ial lit 
force drives cursor cross away target small circle subject manipulate joystick right hand keep cursor centered target 
higher priority tasks choice reaction task occasionally stimulus appears choice stimulus area solid circle tracking box left right pointing arrow shown scale display 
subject respond pressing buttons left hand soon possible attempting maintain cursor target 
major independent variable distance visual angle tween tracking target choice stimulus second inde pendent variable difficulty tracking task 
dependent variables rt choice task measure tracking performance viz average root mean square error rm tracking task collected sec period onset choice stimulus 
observed effects choice rt increases angular distance target choice stimulus unaffected tracking difficulty 
rmse increases somewhat angular distance levels tracking difficulty 
models dual task situation assume successful tracking requires eye kept tracking cursor likewise eye moved choice stimulus order discriminate 
meyer choice stimulus close tracking cursor vision adequate discriminate stimulus moving eye 
tasks compete eye 
tasks involve manual responses compete access manual motor processor 
illustrate epic applied task models 
simple lockout model executive control lockout model uses simple strategy consistent traditional thinking dual task situations lower priority task locked suspended higher priority task executed 
strategy shown attempt portray parallel interactive processes flowchart form explained follows 
flowchart left hand side diagrams tracking task 
tracking task process waits cursor movement simply motor movement cursor far target waits cursor movement 
addition simple iterative subprocess ensures eye stays cursor case autonomous oculomotor mechanism fails keep 
right hand side flowchart choice task 
stimulus appears may delay eye movement followed recognition stimulus selection production response 
executive process flow chart center monitors controls processes items production system working memory relations shown dashed arrows 
executive starts tracking task allocates control eye waits choice stimulus appear 
stimulus appears executive process suspends tracking task enables choice task rules moves eye stimulus far away discriminated 
executive waits choice response initiated resumes tracking task returns control eye 
way term executive process allows task done time ensuring choice task priority tracking task eye manual motor processor task time 
unfortunately simple strategy fit aspects data 
shows observed values choice rt tracking error values predicted lockout model 
perceptual recognition ime parameter data fit choice rt function fairly 
data effect tracking task difficulty choice task priority tracking 
points fairly fiat choice stimulus recognized eye need moved 
upward slope curves larger separations reflects time required epic hci rt lockout model martin emerson task tracking tak suspended choice task 
solid lines represent flow execution process dashed lines represent signal control 
executive 
ss cognitive proce ing tr ras process choice task process tas choice stimulus choice response move eye 
fit simulated tracking data extremely poor 
magnitude tracking error seriously effects tracking difficulty visual separation 
lockout model fit tracking data better adjusting relevant parameter values minimum plausible time estimates perceptual motor parameters involved 
rmse measured brief sec period time starting onset choice stimulus ff tracking suspended long period effect substantial 
lockout meyer epic hci observed predicted effects aud culty lockout model observed values solid points lines predicted values re open points dotted lines 
square points tracking condition circular points easy condition 
fit choice rt satisfactory predicted ir fin performance far poor 
process predicted task process choice stimulus degree sep degrees model suspends tracking task long time considerable tracking error accumulates simply inefficient 
interleaved model executive control order provide efficient strategy constructed second model interleaved model executive process overlaps tasks possible strategy shown 
executive process starts lockout model 
flowchart interleaved model martin era non task 
tracking task choice stimulus recognition response selection go interrupted ml am 
time 
wi choice choice stimulus appears executive moves eye immediately begins move eye back tracking task relying pipeline property visual system acquire stimulus continue process eye returned tracking cursor 
tracking task suspended eye away looking stimulus choice task 
executive uses approach prp models allocating control manual motor processor 
choice task chosen response signals executive suspends tracking task gives choice task permission command manual motor processor resumes tracking task right away 
task priorities honored kieras meyer tr task interrupted little possible 
predictions model shown ii 
choice rts fit tracking task predictions extremely close 
executive allocates eye manual motor processor tracking task maximum amount time tracking task rules squeeze movements choice task underway resulting substantially better tracking error lockout odel 
mentioned earlier control eye clearly critical dual task paradigms 
subtle result subjects apparently highly refined strategies surprisingly efficient coordinating dual tasks 
aside model executive handles eye directly moving stimulus appropriate task 
alternative task move eye executive granting permission move eye appropriate task 
approach followed complex dual task model discussed 
important general illustrated particular modeling concerns common misunderstanding computational models 
fact degrees freedom fit data time 
working fixed epic architecture sets powerful constraints 
basic lockout strategy parameter values specific strategy details allow fit data 
way epic model fit data assuming fundamentally different strategy 
general see meyer kieras exercise seeking quantitatively accurate accounts data fixed architecture extremely informative accuracy architecture structure requirements task 

complex dual task automation modeling martin emerson wickens task laid foundations complex dual tracking choice task 
task developed heitmeyer perez resemble class tasks performed combat aircraft analyzing tactical situation 
partially automated board computer 
help explanation show epic model display task 
sight hand box contains pursuit tracking task cursor cross kept target small box 
experiment reported average tracking error data collected various phases experiment 
left hand box epic hci ue observed predicted effects separation aud tracking interleaved model observed values solid points lines predicted values open points dotted lines 
square points circular points easy tracking condition 
fit choice rt tracking error 
separation contains choice task tactical decision task targets tracks classified hostile neutral behavior 
epic eye shown currently targets 
targets repre sent fighter cargo airplanes sites move display subject aircraft travels 
collected choice rt data performance tactical decision task 
actual 
display type target coded icon simplicity epic display represented meyer gm 
epic model display el sk 
troy ring task target find fight targets moving tactical de task display left 
open rectangle bottom left represents response keypad small solid rectangle represents current finger peck keys 
eye blue tor 
keystrokes progress 
ile ex err 
ui err err fil nil nil trl rt 
rrt 
code letter 
track number identifies object 
targets appear near top display move display 
time board computer attempts designate targets indicating outcome changing target color black red blue amber epic display shows character abbreviation 
subject respond color change target ways 
target red hostile blue neutral subject simply confirm computer classification response striking key hostile neutral designation followed key track number 
target amber subject classify target set rules concerning target behavior type hostility designation track number 
response target changes color white disappears display time 
basic dependent variable rts targets measured target changes color second response keystrokes 
epic hci 
investigated different interfaces tactical task 
earlier description pertains interfaces interfaces involved tabular display graphical radar display touchscreen keypad 
model accounts performance graphical keypad interface described 
additional ork underway display response formats 
performance deficit produced automation 
examined effects adaptive automation 
effects arise time time tracking task difficult board computer takes tactical task signaling 
computer generates correct responses target appropriate time color changes showing display manual version task 
tracking easy computer signals returns tactical task subject experiment subject resume tactical task black targets display target simultaneously changed color 
conditions observed automation ct time resuming tactical task subjects produced longer response times tactical task compared usual steady state manual performance 
effect raises serious concerns possible negative consequences automation combat situations automation fails operator lack situation awareness take dangerously long time catch 
model task single task performance estimated parameters basic perceptual encoding operations required tactical task recoding blue red colors appropriate key recognizing hostility different kinds targets takes considerably longer second 
assumed assessing hostility target requires target visually fixated target color available color change events result lumi nance changes visible peripheral vision object onsets offsets 
doing tracking task color change event tactical task detected event tell tactical task requires action 
transient events information disappear visual working memory quickly task strategy involves recoding durable working memory form 
eye moved tactical task display colors kieras meyer individual targets usually available fall 
model task interface uses lockout strategy top level tracking task tactical task involves considerable parallelism tactical task 
te tactical task responsibility human opposed thatf board computer executive process allows tracking run time tactical decision task 
executive process simply notes target appeared continues tracking 
executive waits target change color close circle events detected peripheral vision responsible target color 
executive suspends tracking task allocates eye tactical task 
tactical task follows priority scheme choosing target view process targets nation color amber red blue priority followed targets color changed followed targets color unknown followed nated black target close circle 
targets qualify tactical task terminates executive resumes tracking task 
qualifying target eye moved chosen target qualifying target level priority chosen random 
appropriate response hostility target perceptual information color coding hostility behavior available tactical task process moves eye target track number label available corresponding response chosen 
air second response way manual motor processor process choosing new target parallel completion response 
tactical task major phases choosing stimulus processed selecting producing responses chosen stimulus 
processes overlapped 
explanation automation deficit hypothesis source automation deficit effect resuming tactical task tactical task strategy sort large number 
targets steady state tactical task operation targets handled appear 
assume tactical task automated subject bother store information state tactical display working memory 
time resume tactical task multiple targets tactical display record working memory changed colors color changes occurred 
information required choose target priority epic hci lf 
automation deficit effect shown observed predicted resumption 
tas observed solid points lines predicted re open points dotted lines 
lower curve host lit rt upper curve number rt 
starting event events closely responses delayed speed tactical 
event begins sequence closely events task performed needed able keep 
event scheme missing tactical task strategy simply picks target inspect random 
moving eye waiting color available strategy processes usual red blue amber 
target black processed target picked random priority scheme 
candidate targets dealt tracking resumed target changes processed appear 
automation deficit results tactical task performed normally targets usually processed order change color keeping average rt minimum 
contrast tactical task resumed automation multiple targets inspected information kept order appeared changed color automation little value 
targets inspected random order targets changed wait longer average inspected processed soon changed colors 
shows automation deficit results obtained model comparison detailed data supplied james includes rts correct responses 
graph shows predicted observed rts responses target measured time designated change color order targets tactical task kieras meyer resumed 
event corresponds color change target task resumption event second forth 
quality fit 
important feature data temporal spacing events systematically varied 
starting event whichis simultaneous signal resume tactical task events happen close time thin event usually target display matched pattern event spacing starts event 
tactical processing evenly paced matched periods high workload followed easy stretches 
event rt long tactical task started auditory resumption signal recognized frequently look target delaying processing 
event occurs soon event responding seriously delayed wait delayed processing event completed 
increasing event spacing allows tactical task gradually catch resulting decreasing rts 
starting event events closely spaced subsequent events suffer processing delays dissipate increasing event spacing 
state display monitored time event tactical task able find target quickly case event 
effects event spacing serious tactical display monitoring just resumed ongoing 

defined automation deficit effect difference event rt rt matched subsequent event event 
model accounts measure quite accurately 
relation elementary dual task phenomena modeling task revealed remarkable continuity earlier modeling epic prp task mentioned earlier meyer kieras 
prp task consists overlapping choice rt tasks major effect responding second task delayed response 
time stimuli increased rt second task declines single task value 
chose prp effect phenomenon address epic simplest laboratory version dual task para starting point complex simulated cockpit task produces prp effects declining rt pattern events kind prp effect initial ow responses gradually speed stimulus spacing increases due exactly factors govern prp effect simpler laboratory paradigms 
words automation deficit effect form prp effect thorough understanding prp epic hci effects earlier modeling allowed account performance realistically complex task quantitative detail 
explanation automation deficit may important cations display task design 
example hy resuming tactical task done possible easily select highest priority object display time 
suppose changed object display coded making blink salient peripheral vision 
subject simply look directly blinking object order ensure objects processed priority order 
alternatively automated version task different salient way representing activity subject profitably monitor perceptual events important manual version 
epic architecture supply theoretical framework issues explored resolved rigorous detail epic models evaluate predict effects design changes implied explanations 
general epic computational architecture constructing models human cognition performance represent contributions interac tions perceptual motor mechanisms cognition determining time course task execution 
examples article illustrate epic applied variety situations humans interact computers level elementary interactions menu operation data entry level high speed concurrent execution multiple display intensive tasks 
accounting empirical data high accuracy architectural frame models constructed epic provide explanations task phenomena clarity precision far informal usually deployed hci field 
epic lead comprehensive predictive theoretical account human perform ance complex high performance multimodal tasks 
point epic research system form suitable routine system interface designers 
technol ogy transfer precedent earlier cct production rule models hci led practical interface design technique john kieras kieras 
likewise epic architecture stabilizes experience gained applying human system analy sis problems able devise simplified approach kieras meyer enable designers apply epic develop improved human system 
experience epic architecture suggests metalevel role cognitive modeling science engineering fields human performance human system interaction computational models human information processing cu usefully predict details human performance system design evaluation situations 
developing applying cognitive model task situations relevant real design problems demand test cognitive theory theory successfully represents important properties human abilities fact useful practical settings 
powerful constraints imposed quantitatively fitting models detailed performance data lead discovery plausible task strategies 
short comprehensive detailed quantitative theory human cognition performance best basis applied cognitive psychology 
relying general psychological principles brute force application experimental methodology system design best informed theory addresses phenomena level detail design decisions require 
notes due james naval research laboratory generous assistance making task software available supplying new analyses data 
support 
supported naval research cognitive sciences program david kieras david meyer advanced research projects agency order david kieras 

david kieras artificial intelligence laboratory electrical engineering computer department university michigan advanced technology laboratory building beal avenue ann arbor mi 
mall kieras 
david meyer department psychology university michigan east university ann arbor mi 
mall demeyer umich edu 
hci editorial 
manuscript received december revision received december 
accepted wayne gray 
final manuscript received april 
editor epic hci anderson 

language memory 
hillsdale nj lawrence erlbaum associates anderson 

rules mill nj lawrence ares 

intermittent automation advanced technical report nrl fr 
washington dc naval research laboratory 
heitmeyer perez 

aspects direct manipulation advanced 
proceedings chi conference human factors computing 
new york acm 
polson 

acquisition performance text editing skill cognitive complexity analysis 
human computer interac tion 
card ic 
visual search computer command menus 
bouma eds attention 
control processes pp 

london lawrence associates card moran newell 

computer interaction 
hillsdale nj lawrence erlbaum associates card ic hochberg 
eds 

human jr computer aided engineering national research council committee human factors 
washington dc national academy press 
gopher 

attentional control acquisition execution attentional synergy artifical intelligence cognitive neuroscience tpp 

cambridge ma mir press 
gopher 

workload examination concept 
kaufman handbook perception human vol 
ii cognitive processes pp 

new york wiley 
gray john atwood 

project validation gom prediction explaining real world task performance 
human computer interaction 


eye movements 
il kaufman thomas eds handbook vol 
pp 

new york wiley 
hornof kieras 

cognitive modeling reveals menu search random 
proceedings chi conference human computing stems 
new york acm 
john 

typist theory performance skilled typing 
human computer interaction 
john kieras 

goms family user interface analysis techniques comparison contrast 
acm ns computer human interaction 
kieras meyer kieras meyer 

predicting human performance dual task tracking decision making computational models epic architecture 
proceedings international symposium command control 
dc national defense university 
kieras 

practical goms model methodology user interface design 
helander ed handbook interaction pp 

amsterdam north holland elsevier 
kieras wood meyer 

engineering models ed epic architecture multimodal high performance human computer interaction task 
acm transactions computer human interac ton 


attention psychophysical time 
sanders ed pp 

amsterdam north holland 
laird rosenbloom newell 
universal 
boston kluwer 
lee macgregor 

minimizing user search time menu retrieval systems 
human factors 
martin emerson wickens 

vertical visual field implications head display 
proceedings tht annual tht human 
santa monica ca hu man factors society 
mcmillan sutton van 

applications human pt 
new york plenum 
meyer kieras 

computational theory executive cognitive processes multiple task performance part 
basic mechanisms 
lview 
meyer kieras 
computational theory executive cognitive processes multiple task performance part 
accounts psychological refractory period phenomena 
psychological review 
newell 

unified cognition 
cambridge ma harvard university press 
nilsen 

perceptual motor human computer technical report 
ann arbor university michigan cognitive science machine intelligence laboratory 
norman shallice 

attention action automatic control behavior 
davidson schwartz shapiro eds regulation vol 
pp 

new york plenum 
rosenbaum 
human movement initiation specification arm direction extent 
journal pr ology genera 
rosenbaum 

human motor control 
new york academic 
sears shneiderman 
split menus effectively selection frequency organize menus 
acm computer human interaction 
