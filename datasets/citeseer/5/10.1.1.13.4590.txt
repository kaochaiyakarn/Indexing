stability adaptive routing presence congestion control efficient network resources long important problem large scale network operators 
research efforts proposed automated methods optimizing routes traffic measurements 
efforts considered stability dual feedback control mechanisms adaptive routing congestion control operating 
demonstrate important class adaptive routing algorithms yield stable optimal routes presence congestion control provided congestion control mechanism fair network workload behaves reasonable constraints 
show assumptions necessary class adaptive routing algorithms unstable sub optimal routes may result pathological cases 
efficient network resources long important problem large scale network operators 
exploiting redundant paths response changing workload conditions router link failures adaptive routing potential significantly improving network performance 
believe adaptive routing unnecessary arguing networks loaded design study major service provider showed spikes load links periods minutes spikes load periods hours 
result automated mechanisms adaptive routing attracted significant research attention years resulting substantial progress theory practical systems techniques adding adaptive routing existing routing protocols 
despite little progress deployment adaptive routing operational networks large networks typically rely human traffic engineers optimize systems 
part lack progress due founded fear network operators automated adaptive routing unstable practice yielding sub optimal performance poor reliability due routing oscillations 
fact early experience adaptive routing arpanet showed exactly effects 
focus specific sub problem area adaptive routing algorithms designed stable presence congestion control 
stability mean notion precise section ii repeated operation adaptive algorithm quickly eric anderson thomas anderson department computer science engineering university washington eric tom cs washington edu converges solution system substantially vary traffic changes 
interesting question due interaction feedback control mechanisms adaptive routing adjusting routes response changes traffic load congestion control adjusting traffic load response changes network capacity routes 
congestion control inefficient initial routing configuration self confirming routing mechanism sees traffic congestion control algorithm allows network 
fact show proof counterexample adaptive routing mechanisms stable optimal combined fair congestion control mechanisms potentially unstable reach sub optimal solutions combined friendly congestion mechanisms 
earlier adaptive routing issue assuming workload quasi static inelastic routing changes measured long interval day demand met network 
contrast interested limits routing adaptation short term events link failures temporary increases load 
shorter time scales host congestion control significantly reduce measured load user studies shown web surfing declines network slow 
network operator charging bandwidth reduction demand represents lost opportunity revenue 
restrict class algorithms consideration significant ways analysis tractable 
assume adaptive routing algorithm uses input point point traffic matrix measured network edge interior measurements link utilization 
traditional adaptive routing systems arpanet interior link utilizations easier measure 
systems inherently stable take longer converge systems measurements traffic matrix routing changes directly affect link utilizations link utilizations directly affect routing decisions 
gallager able design stable adaptive routing algorithm link utilizations analysis assumes infinite queues inside network congestion control 
find obvious way extend proofs gallager algorithm 
contrast traffic matrix provides measured demand ieee ieee infocom point network point absence congestion control compute optimal routes linear non linear optimization algorithms 
unreasonable assume availability information optimizing routes single service provider 
legacy pieces network equipment lack capability collect report information new routers cisco added capability long term expect support standard 
second restrict discussion class adaptive routing algorithms property minimizing maximum utilization link network socalled min max property 
class algorithms includes simple min max algorithm linear constraint solver solutions optimize routes network affecting min max property 
just example authors developed adaptive routing algorithm optimizes path length preserving min max algorithm efficient shortest path low moderate load efficient min max network congested 
discuss detail section iv multiple solutions preserve min max property avoid useless route flapping restrict min max algorithms contain systematic tie breaking rules 
course adaptive routing algorithms preserve minmax ones worth consideration example algorithms attempt minimize average link utilization minimize average queueing delay 
proof techniques extend criteria algorithm preserves min max property 
note somewhat completely independent mechanism implement adaptive routes 
source routing mpls fractional routing general purpose able implement min max property networks workloads 
service providers ospf shortest path algorithms computing routes adjusting weights link achieve traffic engineering objectives 
shown computing set link weights optimize min max approximating min max constant factor np hard general networks 
extend efficiently link weight setting algorithms despite attractiveness transition path deploy adaptive routing legacy systems 
full discussion practicality implementing min max adaptive routing scope associated thesis show minmax routing implemented efficiently reliably substantial performance gains relative load insensitive routing typical network topologies workloads 
key insight routing algorithms preserve min max property henceforth referred minmax notational convenience leave maximum congestion control expand newly improved routes avoiding self confirming property poorly chosen routes 
results show hold presence congestion control provided workload feasibly routed current routing configuration nearly optimal min max algorithms converge immediately optimal configuration 
congestion control algorithm fair min max algorithms converge optimal stable solution initial configuration regardless congestion 
weak assumptions congestion control algorithm min max algorithms converge conditions reasonable network congestion 
show counterexample converse min max algorithms achieve optimal performance presence congestion control assumption fair congestion control limited workloads 
rest presents results detail 
define problem formally section ii 
principal results section iii 
section iv consider resolve route oscillation networks min max specify unique solution 
section summarize findings 
ii 
problem definition broadly consider traffic aware adaptive routing algorithms initialization perform steps measure properties network traffic flow link utilization 
compute set routing tables measured properties current system state 
operate network set routing tables 
principle process repeated ad infinitum 
example undesirable behavior consider example network displayed 
example loosely network early arpanet 
traffic moves left right links capacity equal unit traffic period 
suppose network initialized simple shortest path routing tables suppose weights assigned link rule utilization utilization utilization suppose nodes originate quarter unit traffic period destined node links network links utilization links operation algorithm 
initially shortest path routing sends quarter units traffic ieee ieee infocom upper lower fig 

example oscillating network 
nodes left sends equal amount traffic node right 
weight assigned upper lower links equal number flows traverse link 
network initialized shortest path routing 
result oscillation 
quarter unit 
algorithm assigns weights respectively links subsequent routing calculation 
second step paths destination recomputed 
new weighted shortest path routing leaves traffic originating unchanged sends traffic nodes 
new routing utilization links changes 
weights recomputed link 
paths computed weights identical original routing system oscillates 
configuration congestion upper link lower 
routing congestion obtained routing half traffic upper link half lower 
routing achieved link weights example changing weight links joining node node 
case traffic sourced routed 
general see example best set link weights traffic pattern may require changes weights links experience congestion 
problems just theoretical adaptive routing scheme early arpanet exhibited route instability practice 
contributing instability factors including instantaneous queue length rapidly varying measure utilization topology relied links loosely modeled 
observed instability significantly reduced versions adaptive routing algorithm damping hysteresis thresholding 
damping reflects direct tradeoff stability hand responsiveness system ability react changed circumstances 
tuning parameters delicate specific topology 
arpanet designers summed experience follows parameter values necessarily appropriate network topologies 
subsequent research confirmed stability significant issue link utilization schemes 
definition stability identify distinct related desirable properties stable adaptive system system converge state time input change small changes system behavior exhibit large fluctuations 
state system converges nearoptimal achieving routing produces system performance 
system exhibit route oscillation broader system behavior routing tables converge 
properties hold independent network topology 
note stability convergence optimality trivial static routing shortest number hops stable converges quickly yield efficient solution various workloads topologies 
adaptive routing systems experience link weight schemes indicates link utilization routing exhibit favorable stability properties 
show section min max adaptive routing algorithms contrast favorable stability properties 
iii 
convergence section develop formal model analyzing stability adaptive routing systems operate context congestion control 
adaptive routing systems discuss take input measured point point traffic 
measured traffic seen estimate underlying true demand 
analyze convergence formal assumption true demand fixed 
identify optimal routing routing produced min max algorithm true demand 
measure performance algorithm comparing routing optimal routing 
initially assume optimal routing true demand feasibly routed entire measurement interval considered 
remove assumption section iii 
assumption arbitrary starting point may congestion 
workload rapidly changes example previous routing may ill adapted new demand 
event congestion control mechanisms inhibit observed traffic measured traffic may fall short true demand 
adaptive routing system measured traffic repeated application cycle routing measurement attempt improve network performance 
general determine quickly min max algorithm adapts congestion initial sub optimal routing 
practice observed traffic may fail equal true demand reasons 
addition congestion control ieee ieee infocom include router buffering link errors stochastic fluctuations users reducing demand faced slow network 
restrict formal model analysis effect congestion control 
definition model formally define model adaptive routing system follows 
consider routing network nodes capacitated edges capacity routing tables def ij ij denotes proportion traffic leaving node destined assigned link definition proportions outgoing links add ij 
identify demand quantities dij demands purposes predefined constants system rij demands min max algorithm compute routing tables mij traffic result applying dij network 
suppose application true demands network including routing tables results measured flow fm fm path point point path flows useful definitions subsection introduce definitions unrestricted flow network margin support demands optimal network gopt 
definition unrestricted flow fu defined respect sum measured traffic mij fm mij particular set demands routing tables isthe flow computed assigning source node demands dij applying node proportions regard capacity constraints network particular fu may feasible flow sense multicommodity flow formulation 
flow determines routing tables unrestricted flow path simply flow increased ratio true demands endpoints dij rij 
suppose unrestricted flow fu respect particular set demands dij taken presents congestion 
definition edges unrestricted flow fu satisfies fu say supports demands margin 
unrestricted flow respect particular set demands feasible necessarily bounded away full utilization say demands routed definition unrestricted flow fu fu measured traffic subsequent step input min max algorithm demands compute routing tables 
formally min max algorithm computes complete flow fr fr ij ij iterative operation adaptive scheme described schematically follows ij ij ij ij ij 
step consists equating demands measured traffic preceding step computing flow min max algorithm 
step consists applying true demands dij network routing tables derived flow 
challenge determine process converges optimal routing regardless topology regardless starting point ij call adaptive routing system stable 
convenience refer routing tables formal analogue forwarding tables network terminology 
term flow multicommodity flow sense aggregate traffic path individually identified transaction tcp connection 
necessary tcp flow denote 
formally flow amount traffic input output single path network 
route demands denote gopt network routing tables obtained applying min max algorithm true demands min max minimizes worst case utilization produces routing best possible 
characterization min max proposition network supports particular set true demands dij margin network gopt supports dij margin 
proof gopt tables produced min max algorithm 
result immediate definition 
assumptions congestion behavior subsection identify basic assumptions system behavior congestion 
believe assumptions reasonable natural properties congestion controlled networks especially internet routing 
assumptions prove convergence conditions 
making specific assumptions congestion control mechanism particularly fairness demonstrate stronger convergence min max algorithms 
specifically want identify system determines measured traffic combination routing tables true demands especially congestion control flows network bottlenecks 
ieee ieee infocom formally define bottleneck edge edge total flow edge equals capacity 
general assumptions behavior congestion controlled system conditions significant network load assumption measured flow fm uniquely defined network input demands assumption path measured flow exceed unrestricted flow fm fu 
congestion control serves slow rate traffic relative true demands 
assumption path path contains bottleneck edge measured flow unrestricted flow fm fu 
congestion path network admits entire flow path true demands 
assumption formally requires measured traffic point exhibit hysteresis dependence existing flow 
practice congestion control mechanism offers statistical fairness particular connection may achieve bandwidth share instantaneously 
assumption ignores timedependent effects 
second assumption implies true demands limit hosts want send network permitted send rate limited access links measurement interval 
applying congestion control cause true demands increase 
third assumption valid congestion control applied path path affecting flows bottleneck link indirectly bottleneck links upstream downstream link 
model reasonable individual connection tcp udp flow follows unique path destination 
multipath routing systems attempt preserve single path routing individual connections 
single tcp flow split multiple paths transparently host tcp congestion control feedback may generalize loss path reduce flow paths aggregate 
case assumption strictly valid 
expect assumption broadly substantially correct average 
note assumptions address bandwidth allocated competing flows bottleneck link fairness congestion control mechanism 
defer discussion role fairness stability adaptive routing section iii 
assumptions straightforward important immediate consequence min max algorithms 
min max algorithm produces linear solution linear program routing solution measured traffic worse sense worst case link utilization optimal solution true demands proposition suppose network supports particular set true demands dij margin 
solution produced min max algorithm measured traffic mij supports measured traffic margin 
specifically solution flow fr edge strictly capacity margin fr proof proposition solution gopt produced min max true demands dij margin 
assumption measured demands mij exceed true demands 
min max optimizes link utilization routing obtained min max measured demands described flow fr worst case utilization greater margin 
routing worst case utilization restricted measured demands worse margin min max optimizes 
immediate convergence near optimal starting conditions major result min max converge optimal solution immediately 
proposition suppose network supports true demands dij margin 
step measured traffic ij true demands ij dij min max converges optimal solution steps 
dij proof measured traffic ij solution computed min max step input supports demands margin proposition 
measured traffic true demands unrestricted flow fu times flow 
unrestricted flow encounters bottleneck 
case assumption measured flow fm fu paths 
traffic measured step true demand dij 
step min max takes true traffic input computes optimal solution 
optimal routing supports true demands succeeding step measured traffic equal true demands 
reiterate common case practice 
network seriously overloaded initial routing particularly inefficient congestion encountered affect measured traffic severely distort routing required proposition 
stability property fundamentally stronger link utilization schemes utilization link capacity routing develop oscillations fluctuate converging 
see accompanying text 
course able show convergence regardless topology offered load 
show ieee ieee infocom general case min max algorithms demonstrate convergence severe workload conditions assumed proposition 
stronger results straightforward example shows 
example non monotonic network straightforward prove convergence total network flow increased iteration 
case multiple bottlenecks path show subsection 
definition notion monotonic increase flow 
definition network monotonic step measured traffic ij true demands aggregate greater demands ij amount cmin constant cmin network ij ij cmin definition network monotonic initial configuration network sequence iteration min max algorithm monotonic step networks monotonic convergence automatic theorem monotonic network converges number steps proportional proof definition monotonic networks sum measured traffic increases step cmin network demands supports true demands proposition applies 
iteration take dij cmin steps 
unfortunately networks necessarily monotonic example illustrated defined table indicates 
example demands bottleneck links 
assume routing tables flow indicated table flow adds flow bottleneck link 
network supports flow margin 
applying true demands routing tables unrestricted flow bottleneck link 
unrestricted flow exceeds capacity bottleneck links 
measured flow source necessarily fair satisfies assumptions 
case total measured traffic total flow 
see table measured traffic example smaller flow formulation flow measured traffic previous results follow cmin bounded minimum capacity link network includes additional path shown large capacity routing table entry zero 
augmented network supports true demands margin 
omit link diagram simplicity analysis unaffected 
fig 

example non monotonic network 
true demand flow measured traffic commodity network listed table bottleneck links indicated heavy type 
flow maximum utilization 
measured traffic bottleneck links 
network includes additional path large capacity shown 
example illustrates situation aggregate measured flow flow routing tables 
table workload non monotonic example 
true measured demand demand flow traffic step example demonstrates total measured traffic decrease step min max algorithm 
adaptive routing scheme min max algorithm necessarily monotonic 
bottleneck weighted total traffic example units traffic contributes bottlenecks 
case adding total traffic necessarily result quantity monotonically increases step step 
keep track number bottleneck links path traverses prove related monotonicity property 
introduce additional definitions notation 
denote set bottleneck edges 
definition bottleneck weighted measured flow fb measured flow fm multiplied number bottleneck links fb fm definition bottleneck weighted measured increment fi difference measured flow fm flow fr multiplied number ieee ieee infocom bottleneck links determined measured flow fi fm fr definition bottleneck weighted total measured traffic sum bottleneck weighted measured flows fb fb definition bottleneck weighted total measured increment sum bottleneck weighted measured increments fi fi principal result section theorem bottleneck weighted total measured increment equal product sum capacities bottleneck edges 
particular bottleneck edge bottleneck weighted total measured increment strictly positive 

path measured flow may fact decrease compared flow example bottleneck weighted total increment general sum positive negative terms 
theorem total positive 
proof bottleneck weighted total measured traffic definition sum bottleneck weighted measured flows 
sum measured flows paths containing bottleneck edges weighted number bottleneck edges counting bottleneck edge path separately 
conversely capacitated edge network bottleneck edge flow 
bottleneck weighted total measured traffic simply sum flows bottleneck edge capacitated 
flow computed min max network supports flow margin proposition 
corresponding bottleneck weighted total traffic flow weighted bottleneck links bounded bottleneck weighted total measured increment importance result seen corollaries 
note true shown example aggregate measured traffic increases step step point point measured traffic amount mij increase 
corollary measured demand ij exceeds corresponding demand ij sum capacities bottleneck edges number nodes 
proof bottleneck weighted total increment terms mij rij weighted number bottleneck links largest terms bottleneck edges measured traffic assumption measured traffic represents true demand min max algorithm converges immediately 
large average weighting factor exceed dividing average gives lower bound largest value mij rij 
fact important consequence corollary stable state optimal routing 
proof stable state measured traffic congestion optimal proposition 
stable state congestion ij ij ij ij construction corollary measured traffic increase result offers easy convergence proof plausible impractical modified min max algorithm 
suppose apply min max measured traffic ij ij greater measured traffic demand ij max ij ij 
note measured demands larger true demands demand feasibly routed 
applied modified algorithm corollary implies total demands increases step bounded minimum capacity edge modified scheme converges 
modified min max algorithm practical algorithm internet routing 
traffic demands change substantially input erroneously reflect mixture new old demands 
traffic pattern stationary time effect stochastic fluctuations cause considerable distortion demands compared measured traffic 
consequence theorem convergence case traffic encounters bottleneck link 
third corollary arguably covers extreme cases network congestion 
recall link bottleneck fully utilized entire measurement interval exception access links large networks provisioned complete link congestion normally infrequent temporary 
corollary sequence networks path measured flow fm encounters bottleneck link min max algorithm converges 
proof show total measured flow increases step step 
hypothesis weights bottleneck paths 
break total measured flow paths encounter bottlenecks paths 
flows encounter bottlenecks assumptions imply measured flow decrease 
flows encounter bottlenecks theorem implies measured flow increase aggregate bottleneck weighted total measured increment 
reduce description symbols 
denote set paths containing unique bottleneck edge 
measured traffic decomposed traffic traverses ieee ieee infocom bottleneck links traffic ij uncongested paths measured traffic unrestricted flow assumption turn large flow assumption measured flow bottleneck links aggregate greater flow links theorem sum flows step demand construction measured demand step ij ij ij ij combining equations ij ij ij course sum empty bottleneck edges proposition applies 
expect single bottleneck assumption covers large number cases practice 
show convergence regardless workload example shows unable making additional assumptions resources allocated flows congestion 
limits min max property discussion applies adaptive routing algorithm provides guaranteed worst case link utilization regardless particular mechanics congestion control allocate bandwidth bottleneck links noted broad assumptions subsection iii 
natural ask min max property demonstrate convergence corollary extended configurations 
counterexample answers question negative 
example construct pair configurations form cycle particularly clumsy min max algorithm particularly perverse bandwidth allocation combine cause system alternate suboptimal configurations 
consider demands bottleneck links capacity 
capacities links sufficiently large encounter congestion 
demand alternate routing paths corresponding destination listed table iii 
case paths passes bottleneck links passes bottleneck link 
specifically bottleneck link paths go link bottleneck link paths go link 
values true measured traffic example listed table ii 
demand routed single bottleneck link path entire set demands routed utilization 
initial configuration routed bottleneck link paths routed bottleneck link paths 
utilization flow 
application true demands initial configuration congestion appears links 
suppose congestion control mechanism resolves congestion follows demands accepted network restricted amounts units accepted full amount units 
note tcp congestion control presence fifo queues yield just kind pathological allocation 
case link experiences full utilization units 
min max algorithm observes measured traffic 
suppose step minmax routes observed traffic meet utilization guarantee routing link paths link paths 
preserve min max property example link network utilized 
true demands applied routing link experiences congestion 
resolve congestion suppose time congestion control mechanism admits full amount units restricted amount units 
case min max algorithm observes traffic 
suppose minmax algorithm computes routing measured traffic assigning link paths link paths 
routing achieves utilization guarantee second set observed traffic 
configuration resulting second application min max algorithm identical initial configuration cycle repeat indefinitely 
configurations evidently suboptimal respect true traffic true traffic routed utilization actual configurations experience congestion step 
note example contradict theorem bottleneck weighted total measured increment positive step relative previous demand weighted new measured bottlenecks 
potential solution problem restrict specific values assigned essentially unimportant outcome 
consistent assumptions 
ieee ieee infocom table ii counterexample convergence demands 
demand true ref meas ref meas table iii counterexample convergence routing paths 
demand path path class adaptive routing algorithms cascading min max solving minimum worst case utilization identify bottleneck link greatest utilization form residual network eliminating traffic link 
recursively repeat algorithm residual 
approach addresses counterexample requiring minimal 
open question cascading approach refined polynomial time algorithm account systematic evaluation ties modification lead complete proof convergence workloads 
convergence particular congestion control model stronger assumptions behavior system congestion infer traffic demands observed 
result prove convergence cases 
subsection develop model deterministically resolving congestion believe simple plausible 
model minmax algorithm converges cases 
inspired results tcp behavior posit proportional bandwidth sharing model deterministically resolving congestion bottleneck links 
specifically order determine measured traffic flow compute unrestricted flow 
identify edge edge largest ratio utilization capacity 
ratio admit entire unrestricted flow done 
path edge scale amount flow path ratio utilization capacity result scaled flows add precisely full utilization 
fixing scaled flows repeat process remaining flows identify edge scale hitherto unscaled flows ratio calculated respect residual capacity repeat edge 
continuing way flows receive proportionate share bandwidth congested link 
deterministic model min max algorithm converges 
remainder subsection demonstrate claim 
important observation congestion model 
proposition model congestion control mechanics worst case utilization percentage unrestricted flow 
demand routed 
proof step construction proportional bandwidth sharing described worst case scaling ratio identified path flows routed bottleneck link scaled percentage consider second step link worst case utilization ratio identified fixing path flows routed step residual utilization ratio 
worst case utilization ratio identified greater unrestricted utilization ratio determined adding back fixed flows increased percentage greater contradicts choice link 
scaling ratio path flows scaled second step easy induction argument result holds subsequent links 
observation stability proof straightforward 
proposition model congestion control mechanics min max algorithm converges number steps log 
proof suppose worst case ratio unrestricted flow initial conditions 
proposition measured flow path ratio unrestricted flow 
sum measured flows source destination pair ratio true demand 
apply min max measured flow 
result flow subsequent step routed see proposition 
unrestricted flow path determined flow multiplying ratio true demand ratio total unrestricted flow link times capacity 
case maximum ratio unrestricted flow link capacity exceed 
bandwidth sharing model applied second step min max worst case unrestricted link utilization reduced 
step worst case link utilization reduced factor 
inevitably worst case ratio reduced convergence immediate proposition 
convergence rate log number steps approximately inversely proportional guaranteed 
congested networks preceding discussion assumed network overloaded true demands routed margin 
subsection investigate convergence optimality ieee ieee infocom fig 

example suboptimal convergence congested network 
true demands measured traffic listed table iv 
bandwidth sharing mechanism offers precedence traffic routing indicated additional traffic supported 
routing changed reversed additional traffic supported 
measured traffic considered gives indication routings preferred 
table iv suboptimal convergence congested network 
true measured demand demand flow traffic 
fundamental assumption removed 
course extreme case networks provisioned sufficient capacity links persistently unavoidably extensive periods time 
suppose optimal network gopt route true demands dij 
weak assumptions allowing arbitrary congestion control response bottleneck links construct straightforward albeit contrived examples min max stabilizes suboptimal routing 
consider network illustrated table iv 
case listed demands routed destinations causing congestion links denoted heavy lines 
listed routing initial routing congestion control operate bottleneck links give preference demands true traffic originating emerge network 
hand routing originating reversed additional true traffic routed 
admittedly example applies particular congestion control mechanism bandwidth allocation bottleneck links essentially giving complete priority 
fig 

example routing non determinacy 
true demand flow measured traffic commodity network listed table links center network potential sources congestion 
optimal routing algorithm may assign flow entirely left path entirely right split left right long equality traffic bottleneck preserved 
table assumptions network illustrating degeneracy 
see 
commodity true measured difficult construct corresponding examples methods bandwidth allocation 
open question suitably refined min max algorithm devised provide flexible routing convergence case heavy congestion 
example modify min max routing spread traffic links extreme congestion encountered 
similar circumstances load balancing methods provide automatic splitting traffic recommended 
specifically modify min max algorithm provide calculation flow results fully capacitated paths indicating optimal routing result fully capacitated paths traffic applied uncapacitated paths preference shorter fully capacitated paths 
open question desired convergence fairness properties shown hold conditions 
iv 
route determinism order address issue route oscillation minmax adaptive routing systems necessary identify circumstances min max routing uniquely determined 
consider example 
example infinite number equally optimal assignments ieee ieee infocom traffic routes linear solvers general guaranteed reach solution nearly identical inputs opening potential meaningless route oscillation 
example equally valid amounts flow routed slightly different bottleneck part network secondary optimization step select shortest paths 
solution straightforward introduce systematic tie breaking considerations algorithm 
example hysteresis added optimization criteria favor small positive weight compared min max value solutions preserve routing chosen previous step 
alternatively weights links edge network systematically randomly perturbed small amounts 
leave consideration development analysis detailed methods aimed reducing route oscillation presence stochastic variations traffic load 
questions surrounding stability adaptive routing systems long efforts introduce adaptive routing internet 
addressed subproblem adaptive routing designed stable presence congestion control 
answer question affirmative showing rapid convergence stability optimality achieved general network topologies workloads workload feasibly routed adaptive routing algorithm minimizes maximum link utilization congestion control algorithm allocates bandwidth fairly competing users 
show counterexample adaptive routing algorithms preserve min max property converge optimal solution combined behaved congestion control algorithms 
combined advances traffic measurement technology hopefully serve search effective solutions internet bottlenecks adaptive routing 
acknowledgment authors anna karlin steve gribble helpful suggestions 
supported part darpa contract number 

chuah diot tier isp perspective design principles observations routing behavior ipam workshop large scale communication networks 
bertsekas gallager data networks nd ed 
englewood cliffs prentice hall 
fleischer approximating fractional multicommodity flow independent number commodities ieee symposium foundations computer science pp 

garg faster simpler algorithms multicommodity flow fractional packing problems ieee symposium foundations computer science pp 

khanna zinky revised arpanet routing metric acm sigcomm pp 

shaikh rexford shin load sensitive routing long lived ip flows acm sigcomm pp 

garcia luna aceves simple approximation minimum delay routing acm sigcomm pp 

thorup internet traffic engineering optimizing ospf weights ieee infocom pp 

wang crowcroft analysis shortest path routing algorithms dynamic network environment acm computer communication review vol 
pp 

ye optimization ospf weights online simulation tenth annual international workshop quality service iwqos may 
manber personal communication 
gallager minimum delay routing algorithm distributed computation ieee transactions communications vol 
com pp 

ahuja magnanti orlin network flows theory algorithms applications 
englewood cliffs prentice hall 
bertsekas network optimization continuous discrete models 
belmont mass athena scientific 
feldmann greenberg lund reingold rexford true deriving traffic demands operational ip networks methodology experience acm sigcomm pp 

cisco systems cisco ios netflow online 
available www cisco com warp public tech netflow networks internet processor ii asic visibility network operations online 
available www net app note html probe media speed gigabit route aware monitoring online 
available www com probes htm anderson multicommodity flow approach adaptive internet routing ph dissertation university washington 
lakshman minimum interference routing applications mpls traffic engineering ieee infocom pp 

jin low mate mpls adaptive traffic engineering ieee infocom pp 

ospf optimized multipath ospf omp 
roberts statistical bandwidth sharing study congestion flow level acm sigcomm pp 

demers keshav shenker analysis simulation fair queueing algorithm acm computer communication review vol 

ieee ieee infocom 
