competitive coevolution evolutionary complexification kenneth stanley risto miikkulainen department computer sciences university texas austin austin tx usa cs utexas edu technical report ut ai tr december major goals machine learning discovery complex multidimensional solutions continual improvement existing solutions 
argue complexification incremental elaboration solutions adding new structure achieves goals 
demonstrate power complexification neuroevolution augmenting topologies neat method evolves increasingly complex neural network architectures 
neat applied open ended coevolutionary robot duel domain robot controllers compete head head 
robot duel domain supports wide range sophisticated strategies coevolution benefits arms race serves suitable testbed observing effect evolving increasingly complex controllers 
result arms race increasingly sophisticated strategies 
compared evolution networks fixed structure complexifying networks discover significantly sophisticated strategies 
results suggest order realize full potential evolution search general solutions allowed optimize 
evolutionary algorithms class algorithms applied open ended learning problems artificial intelligence 
traditionally algorithms evolve fixed length genomes assumption space genome sufficient encode solution 
genome containing genes encodes single point dimensional search space 
cases solution known exist space 
example global maximum function arguments exist dimensional space defined arguments 
genome genes encode location maximum 
common structures defined arbitrary number parameters 
particular solution types contain variable number parts represented number genes 
example number parts neural networks cellular automata electronic circuits vary miller mitchell stanley miikkulainen :10.1.1.18.4591
fact neural networks different numbers connections nodes approximate function cybenko 
clear number genes appropriate solving particular problem 
ambiguity researchers evolving fixed length genotypes heuristics smaller neural networks generalizing better larger ones order estimate priori appropriate number genes encode structures 
major obstacle fixed length encodings heuristically determining appropriate number genes impossible complex problems 
example nodes connections necessary neural network controls ping pong playing robot 
bits needed neighborhood function cellular automata performs information compression 
answers questions hardly empirical experience analytic methods little known solutions 
possible approach simply genome extremely large space encodes extremely large solution lie 
larger genome higher dimensional space evolution needs search 
ping pong playing robot lies dimensional space gene genome searching space may take prohibitively long 
problematic open ended problems phenotypes meant improve indefinitely known final solution 
example competitive games estimating complexity best possible player difficult making estimate implicitly assumes better player exist 
know 
artificial life domains aimed evolving increasingly complex artificial creatures long possible 
fixing size genome domains fixes maximum complexity evolved creatures defeating purpose experiment 
argue right way evolve arbitrarily structured phenotypes start evolution population small simple genomes systematically solutions generations adding new genes 
way evolution begins searching small easily optimized space adds new dimensions necessary 
approach discover highly complex phenotypes approach begins searching directly intractably large space complete solutions 
fact natural evolution utilized strategy occasionally adding new genes lead increased phenotypic complexity martin section 
biology process called complexification term describe approach 
strategy fixed length genome entire representational space genome encode 
way improve alter strategy sacrificing functionality learned previous generations 
contrast complexification elaborates existing strategy adding new structure changing existing representation 
strategy different number possible responses situations may face increases 
idea implemented method evolving increasingly complex neural networks called neuroevolution augmenting topologies neat stanley miikkulainen :10.1.1.18.4591
neat begins evolving networks hidden nodes 
generations new hidden nodes connections added resulting complexification solution space 
way complex strategies elaborate simpler strategies focusing search solutions maintain existing capabilities 
neat demonstrate power complexification 
neat tested competitive robot control domain complexification 
coevolution evolve robot controllers find better strategies 
chose domain open ended known optimal strategy possible come increasingly sophisticated strategies indefinitely 
main results evolution possible complexification led elaboration significantly sophisticated successful alteration vs elaboration example 
robot depicted circle evolves avoid obstacle 
alteration scenario top robot evolves strategy go left side obstacle 
strategy fails generation obstacle begins moving left 
robot alters strategy evolving tendency move right left 
obstacle moves right new altered strategy fails robot retain old ability move left 
elaboration scenario bottom original strategy moving left fails 
altering strategy elaborated adding new ability move right 
obstacle moves right robot ability avoid original strategy 
elaboration necessary coevolutionary arms race emerge achieved complexification 
strategies evolved complexification 
results imply complexification allows coevolution continually elaborate successful strategies resulting arms race achieves significantly higher level sophistication possible 
reviewing biological support complexification past coevolution followed description neat method experimental results 
background complexification nature mutation nature results optimizing existing structures new genes occasionally added genome allowing evolution perform complexifying function optimization 
addition complexification protected nature mating prohibited 
speciation creates important dynamics differing standard gas 
section discuss important characteristics natural evolution basis approach utilize computationally genetic algorithms 
gene duplication special kind mutation parental genes copied offspring genome 
offspring redundant genes expressing proteins 
gene duplication responsible key innovations body morphology course natural evolution carroll force martin 
major gene duplication event occurred time vertebrates separated invertebrates 
evidence duplication centers genes determine fate cells anterior posterior axis embryos 
genes crucial shaping pattern developmental embryos 
fact differences gene regulation explain great deal diversity carroll 

explain invertebrates single cluster vertebrates cluster duplication significantly contributed elaborations vertebrate body plans 
additional genes took new roles regulating vertebrate anterior posterior axis develops considerably increasing body plan complexity 
martin argues additional clusters explained single gene duplications accumulating generations opposed massive genome duplications researchers agree gene duplication contributed significantly important body plan elaboration 
detailed account duplicate genes take novel roles force 
base pair mutations generations duplication partition initially redundant regulatory roles genes separate classes 
embryo develops way genes determine body plan confined specific roles 
partitioning phase completes redundant clusters genes separated longer produce identical proteins time 
partitioning mutations duplicated cluster genes alter different steps development mutations original cluster 
words duplication creates points mutations occur 
way developmental processes 
order implement idea artificial evolutionary systems faced major challenges 
systems evolve variable length genomes difficult cross losing information 
example depending duplications occurred ancestral histories different genomes gene may exist different positions 
conversely different genes may exist position 
artificial crossover may lose essential genes misalignment 
second may difficult variable length genome ga find innovative solutions optimizing genes takes longer optimizing meaning complex genotypes may eliminated population sufficient opportunity optimized 
nature solved problems 
nature mechanism aligning genes proper counterparts crossover data lost obscured 
alignment process clearly observed coli sigal alberts 
special protein called takes single strand dna aligns strand attaching strands genes express traits called homologous genes 
process protein aligns homologous genes called 
experiments vitro researchers protein complete process fragments dna homologous 
second innovations nature protected speciation 
organisms significantly divergent genomes mate different species 
organisms larger genomes compete mates species population large 
way organisms may initially lower fitness general population chance reproduce giving novel concepts chance realize potential prematurely eliminated 
turns complexification possible evolutionary computation abstractions speciation part genetic algorithm 
neat method section implementation idea genome adding new genes turn encode new structure phenotype biological evolution 
complexification especially powerful open ended domains goal continually generate sophisticated strategies 
competitive coevolution particularly important domain reviewed section 
competitive coevolution competitive coevolution individual fitness evaluated direct competition individuals population objective fitness measure 
words fitness signifies relative strengths solutions increased fitness solution leads decreased fitness 
ideally competing solutions continually leading arms race increasingly better solutions dawkins krebs rosin van 
practice difficult establish arms race 
evolution tends find simplest solutions win meaning strategies switch back forth different idiosyncratic uninteresting variations darwen floreano nolfi rosin belew 
methods developed encourage arms race angeline pollack ficici pollack noble watson rosin belew :10.1.1.20.8294
example hall fame ensure current strategies remain competitive strategies past 
ficici pollack noble watson introduced promising method called pareto coevolution finds best learners best teachers populations casting coevolution multiobjective optimization problem 
techniques improve performance competitive coevolution directly encourage continual coevolution creating new solutions maintain existing capabilities 
example matter selection performed competitors chosen better solution exists fixed solution space elaboration impossible global optimum reached 
may occasionally easier escape local optimum adding new dimension freedom search space jumping back space led optimum place 
complexification appropriate technique establishing coevolutionary arms race 
complexification naturally elaborates strategies adding new dimensions search space 
progress indefinitely long global optimum reached search space solutions new dimensions added opening higher dimensional space higher optima may exist 
test idea experimentally chose robot duel domain combines predator prey interaction food foraging novel head head competition section 
domain demonstrate neat uses complexification continually elaborate strategies 
section describes neat neuroevolution method followed description robot duel domain discussion results 
neuroevolution augmenting topologies neat neat method evolving artificial neural networks combines usual search appropriate network weights complexification network structure 
approach highly effective neat outperforms neuroevolution ne methods benchmark double pole balancing task factor stanley miikkulainen :10.1.1.18.4591
neat method consists solutions fundamental challenges evolving neural network topology kind genetic representation allow disparate topologies crossover meaningful way 
solution historical markings line genes origin 
topological innovation needs generations optimize protected disappear population prematurely 
solution separate innovation different species 
topologies minimized evolution efficient solutions discovered 
solution start minimal structure grow necessary 
section explain neat addresses challenge 
node sensor node sensor node sensor node output node hidden weight enabled weight disabled weight enabled weight enabled weight weight weight enabled enabled enabled genome genotype node genes connect 
genes network phenotype neat genotype phenotype mapping example 
genotype depicted produces shown phenotype 
input nodes hidden output node connection definitions recurrent 
second gene disabled connection specifies nodes expressed phenotype 
order allow complexification genome length unbounded 
genetic encoding evolving structure requires flexible genetic encoding 
order allow structures representations dynamic expandable 
genome neat includes list connection genes refers node genes connected 

connection gene specifies node node weight connection connection gene expressed enable bit innovation number allows finding corresponding genes crossover 
mutation neat change connection weights network structures 
connection weights mutate ne system connection perturbed 
structural mutations form basis complexification occur ways 
mutation expands size genome adding gene 
add connection mutation single new connection gene added connecting previously unconnected nodes 
add node mutation existing connection split new node placed old connection 
old connection disabled new connections added genome 
new nonlinearity connection changes function slightly new nodes immediately integrated network opposed adding extraneous structure evolved network 
mutation genomes neat gradually get larger 
genomes varying sizes result different connections positions 
difficult problem crossover numerous differing topologies weight combinations inevitable result allowing genomes grow unbounded 
growth necessary complexification occur 
ne cross differently sized genomes sensible way 
section explains neat addresses problem 
dis dis dis dis dis mutate add connection mutate add node types structural mutation neat 
types adding connection adding node illustrated genes phenotypes 
top number genome innovation number gene 
bottom numbers denote nodes connected gene 
weight connection encoded gene shown 
symbol dis means gene disabled expressed network 
shows connection genes appended genome new connection added network new node added 
assuming depicted mutations occurred genes assigned increasing innovation numbers illustrates allowing neat keep implicit history origin gene population 
tracking genes historical markings turns information evolution tells exactly genes match individuals population 
information historical origin gene population 
genes historical origin represent structure possibly different weights derived ancestral gene point past 
system needs know genes line keep track historical origin gene system 
tracking historical origins requires little computation 
new gene appears structural mutation global innovation number incremented assigned gene 
innovation numbers represent chronology gene system 
example say mutations occurred system 
new connection gene created mutation assigned number new connection genes added new node mutation assigned numbers 
genomes crossover offspring inherit innovation numbers gene innovation numbers changed 
historical origin gene system known evolution 
possible problem structural innovation receive different innovation numbers generation occurs chance 
keeping list innovations occurred current generation possible ensure structure arises independent mutations generation identical mutation assigned innovation number 
resultant explosion innovation numbers 
innovation numbers system knows exactly genes match 
disjoint excess excess parent parent parent offspring parent matching genomes different network topologies innovation numbers 
parent parent look different innovation numbers shown top gene tell genes match need topological analysis 
topological analysis new structure combines overlapping parts parents different parts created 
case equal fitnesses assumed disjoint excess genes parents inherited randomly 
disabled genes may enabled generations preset chance inherited gene disabled disabled parent 

genes match disjoint excess depending occur outside range parent innovation numbers 
crossing genes genomes innovation numbers lined 
genes match inherited fit parent equally fit parents randomly 
historical markings allow neat perform crossover need expensive topological analysis 
genomes different organizations sizes stay compatible evolution problem comparing different topologies radcliffe essentially avoided 
compatibility essential order structure 
turns population varying complexities maintain topological innovations 
smaller structures optimize faster larger structures adding nodes connections usually initially decreases fitness network augmented structures little hope surviving generation innovations represent crucial solving task long run 
solution protect innovation population explained section 
protecting innovation speciation neat population individuals compete primarily niches population large 
way topological innovations protected time optimize structure compete niches population 
protecting innovation speciation follows philosophy new ideas time reach potential prematurely eliminated 
historical markings possible system divide population species topological similarity 
measure distance network encodings simple linear combination number excess disjoint genes average weight differences matching genes 
coefficients adjust importance factors factor number genes larger genome normalizes genome size set genomes small consist fewer genes 
genomes tested time genome distance randomly chosen member species compatibility threshold placed species 
genome placed species previous generation condition satisfied genome species 
genome compatible existing species new species created 
reproduction mechanism neat explicit fitness sharing goldberg richardson organisms species share fitness niche 
species afford big organisms perform 
species take entire population crucial evolution 
adjusted fitness organism calculated distance organism population sh sharing function sh set distance threshold sh set spears 
sh reduces number organisms species organism reduction natural species clustered compatibility threshold species assigned potentially different number offspring proportion sum adjusted fitnesses member organisms 
species reproduce eliminating lowest performing members population 
entire population replaced offspring remaining organisms species 
net effect population structural innovation protected 
final goal system perform search solution efficiently possible 
goal achieved complexification simple starting structure detailed section 
minimizing dimensionality complexification systems evolve network topologies weights angeline gruau yao zhang muhlenbein neat begins uniform population simple networks hidden nodes :10.1.1.40.6026
speciation protects new innovations allowing topological diversity gradually robot duel domain 
robots opposite sides board facing away shown lines pointing away centers 
concentric circles robot represent separate rings opponent sensors food sensors available robot 
ring contains sensors appear larger smaller depending activations 
robots lose energy move gain energy consuming food shown small 
food placed horizontally symmetrical pattern middle board 
objective attain higher level energy opponent collide 
complex interaction foraging pursuit evasion behaviors domain allows broad range strategies varying sophistication 
animated demos evolved strategies available www cs utexas edu users demos html 
introduced evolution 
neat protects innovation speciation start way minimally grow new structure necessary 
new structure introduced incrementally structural mutations occur structures survive useful fitness evaluations 
way neat searches minimal number weight dimensions significantly reducing number generations necessary find solution ensuring networks complex necessary 
gradual production increasingly complex structures constitutes complexification 
words neat searches optimal topology complexifying necessary 
robot duel domain hypothesis complexification allows discovering sophisticated strategies strategies effective flexible general include components variations simple strategies 
demonstrate effect need domain possible develop increasingly sophisticated strategies sophistication readily measured 
coevolution domain particularly appropriate sustained arms race lead increasing sophistication 
choosing domain difficult strike balance able evolve complex strategies able analyze understand 
pursuit evasion tasks utilized purpose past gomez miikkulainen jim giles miller cliff reggia serve benchmark domain competitive coevolution :10.1.1.12.6377
past experiments evolved predator prey interesting coevolution task established agents equal engaged duel 
win agent develop strategy opponent utilizing structure environment 
robot duel domain simulated robots try 
robots opposite sides rectangular room facing away 
robots move lose robot neural networks 
food sensors robot sensors detect presence objects robot 
single wall sensor indicates proximity walls energy difference sensors tells robot energy level differs opponent 
difference important robot lower energy loses robots collide 
motor outputs mapped forces control left right wheel 
energy proportion amount force apply wheels 
robots run energy survive entire competition robot higher energy wins collides competitor 
addition robot sensor indicating difference energy robot 
keep energies high robots consume food items arranged symmetrical pattern room 
robot duel task supports broad range sophisticated strategies easy observe interpret 
competitors proficient foraging prey capture escaping predators 
addition able quickly switch behavior 
task suited competitive coevolution naive strategies forage attack sophisticated strategies opponent waste energy attacking 
simulated robots similar mondada 
wheels controlled separate motors 
rangefinder sensors sense food sense robot 
robot energy difference sensor single wall sensor 
robots controlled neural networks evolved neat 
networks receive robot sensors inputs constant bias neat change activation thresholds neurons 
produce motor outputs encode rotation right left third indicate forward motion power 
values translated forces applied left right wheels robot 
complex robot control domain allows competitive coevolution evolve increasingly sophisticated complex strategies understand complexification 
experiments order demonstrate complexification enhances performance ran generation runs coevolution robot duel domain 
full neat method enabled runs complexification turned remaining order see networks compared fixed topologies evolution 
competitive coevolution setup described followed overview dominance tournament method monitoring progress 
competitive coevolution setup evolution robot duel domain open ended reaches final solution 
question domain continual coevolution take place increasingly sophisticated strategies appear run eventually produced 
complexification allow continual coevolution 
experiment set carefully process emerge able identify 
competitive coevolution network play suitable number games establish measure fitness 
encourage interesting sophisticated strategies networks play diverse high quality sample possible opponents 
way accomplish goal evolve separate populations 
generation population evaluated intelligently chosen sample networks population 
population currently evaluated called host population population opponents chosen called parasite population rosin belew 
parasites chosen quality diversity making host parasite evolution efficient reliable random round robin tournament 
single fitness evaluation included competitions east west starting position 
way networks needed implement general strategies winning independent starting positions 
host networks received single fitness point win points losing 
competition lasted time steps winner host received points 
selecting parasites fitness evaluation speciation fitness sharing occur neat 
host evaluated champions species highest fitness 
opponents best best species guaranteed diverse compatibility outside threshold section 
opponents chosen randomly hall fame rosin belew contained population champions generations 
speciation fitness sharing hall fame comprise competent competitive coevolution methodology 
appendix contains neat system parameter values experiments 
noted complexification depend particular coevolution methodology 
example pareto coevolution ficici pollack noble watson advantages complexification 
pareto coevolution requires member population play member running time domain prohibitively long 
order interpret experimental results method needed analyzing progress competitive coevolution 
section describes method 
monitoring progress competitive coevolution competitive coevolution run returns record generation champion populations 
question sequence increasingly sophisticated strategies identified data exists 
section describes dominance tournament method monitoring progress competitive coevolution stanley miikkulainen allows :10.1.1.18.4591
master tournament ambiguity 
champions generations depicted 
arrow pointing champion champion denotes superior direct way comparison 
master tournament reports champion defeats champions champion defeats 
results imply superior 
compared directly wins 
way master tournament results misleading 
method captures order dominance different strategies avoids confusion 
need method performing individual comparisons strategy better 
board configurations vary game champion networks compared different food configurations side board giving total comparisons 
food configurations included symmetrical food positions training plus additional food items placed different positions east west halves board 
starting food positions give initial advantage robot depending close robots starting positions 
wins majority total games demonstrated superiority different scenarios including disadvantage 
say network superior network wins comparisons total comparisons 
definition superiority progress tracked 
obvious way compare network evolution finding strategies beat opponents earlier strategies 
example floreano nolfi measure called master tournament champion generation compared generation champions 
unfortunately methods impractical time intensive domain robot duel competition 
master tournament counts strategies defeated generation champion identifying ones 
fail detect cases strategies defeat fewer previous champions superior 
order track strategic innovation need identify dominant strategies defeat previous dominant strategies 
way sure evolution proceeds developing progression strictly powerful strategies switching alternative ones 
dominance tournament method tracking progress competitive coevolution meets goal stanley miikkulainen :10.1.1.18.4591
generation champion winner game comparison population champions single generation 
jth dominant strategy appear evolution 
dominance defined recursively starting generation progressing definition dominance similar identical definition transitive chain rosin 
dominant strategy generation champion generation dominant strategy generation champion superior wins game comparison strict definition dominance prohibits circularities 
example superior strategies superior superior call nth dominant strategy run 
network generation defeats loses circular superiority defeats newer strategies loses older ones 
circular entered dominance hierarchy 
entire process deriving dominance hierarchy population dominance tournament competitors play previous dominant strategies lose game comparison win comparison previous dominant strategies new dominant strategy 
dominance tournament allows identify sequence increasingly sophisticated strategies 
require significantly fewer comparisons master tournament stanley miikkulainen :10.1.1.18.4591
armed appropriate coevolution methodology measure success ask question complexification result successful competitive coevolution 
results evolution runs lasted generations took days ghz pentium iii processor depending progress evolution sizes networks involved 
neat algorithm computation time spent evaluating networks robot duel task 
evolution fully connected topologies took longer structure growing neat larger networks take longer evaluate 
define complexity number nodes connections network nodes connections network complex behavior potentially implement 
results analyzed answer questions evolution progresses continually 
complexification utilized create sophisticated strategies 
complexification allow better strategies discovered evolving fixed topology networks 
evolution complexity neat run thirteen times time different seed verify results consistent 
highest levels dominance achieved averaging sd 
generation dominance level increased thirteen runs averaged number connections number nodes current dominant strategy runs 
graphs represent total dominance transitions spread generations 
rise complexity dramatic average number connections average number hidden nodes rising 
smooth trend generations number connections dominant strategy grows 
early period dominance transitions occur frequently fewer prior strategies need beaten achieve dominance 
generations dominance transitions sparse continue occur 
th th generations staircase pattern emerges complexity rises dramatically settles abruptly increases 
reason pattern speciation 
generation complexification connections average nodes highest dominant generation complexification nodes complexification connections nodes generations 
graphs depict average number connections average number hidden nodes highest dominant network generation 
averages taken complexifying runs 
hash mark appears generation new dominant strategy emerged runs 
graphs show dominance increases complexity level average 
differences complexity average final dominant dominant strategies statistically significant connections nodes 
species adding large amount structure species optimizing weights complex networks 
initially faster grow structure works ad hoc constructions eventually older species steadily optimizing long period time 
spikes complexity occur structural elaboration leads better strategy complexity slowly settles older structures optimize weights overtake structural innovations 
eventually elaborate structures emerge outperform older structures 
underlying forces progress building new structures continual optimization prior structures background 
product trends gradual stepped progression increasing complexity 
importantly dominant strategies neat adds new structure networks generations speciation species remain simple species complex 
results show just champions generation tend complex dominant strategies networks strictly superior strategy previous dominant strategy tend complex higher dominance level 
results verify continual progress evolution paired increasing complexity 
sophistication complexification see complexification contributes evolution observe sample dominant strategy develops time 
complex networks evolved experiments follow species produced winning network third run progress typical easy understand 
best network generation lth hidden node arise structural mutation course evolution 
track strategic structural innovations order see correlate 
mature zero hidden node strategy main strategy follow opponent putting position chance collide opponent energy 
followed opponent complexification winning species 
best networks species depicted landmark generations 
nodes depicted squares node numbers line thickness represents strength connections 
time networks complex gained skills 
champion generation hidden nodes 
addition respective connections gave new abilities 
appearance refined existing behaviors 
opponent energy leaving vulnerable attack 
clearly switch roles foraging chasing enemy causing opportunities gather food 
generations evolved resting strategy significantly lower energy opponent 
situation robot stopped moving robot wasted energy running 
time opponent got close energy low attacked 
resting strategy example improvement take place complexification involved increasing inhibition energy difference sensor slightly modifying intensity existing behavior 
new hidden node appeared 
node arrived mating optimized generations 
node gave robot ability change behavior consistent attack 
new skill longer needed follow enemy closely times allowing collect food 
implementing new strategy new node possible interfere existing resting strategy switched roles resting danger attacking high energy 
way new structure resulted strategic elaboration 
new hidden node split link input sensor replacing direct connection sigmoid function greatly improved ability attack appropriate times leading accurate role switching attacking foraging 
try follow opponent focusing resting foraging zoom attack victory certain 
final structural addition shows new structure greatly improve accuracy timing existing behaviors 
analysis shows cases weight optimization produce improved strategies 
strategies need extended adding new structure allows new behaviors coexist old strategies 
cases necessary add complexity timing execution behavior accurate 
results show complexification utilized produce increasing sophistication 
order illustrate level sophistication displayed competition conclude section description observed competition sophisticated strategies run evolution 
competition collected available food energy levels equal 
pieces food remained board locations distant sophisticated endgame 
robot dashes piece food collecting second piece 
appeared lose got second piece gray arrow turns ends disadvantage 
chance get piece food saving energy wasted energy traveling long distances 
way sophisticated strategies evolve complexification combining multiple objectives utilizing weaknesses opponent strategy 

danger colliding similar energy levels naive strategy rush pieces food 
fact exactly 
cleverly race second piece opting sit energy temporarily dropped 
consumed second piece headed piece far away 
energy closer got 
received boost energy wasted energy running long distance current position 
strategy ensured energy met 
robot behavior surprisingly deceptive showing high level strategic sophistication evolved 
analysis individual evolved behaviors shows complexification elaborates existing strategies allows highly sophisticated behaviors develop balance multiple goals utilize weaknesses opponent 
question complexification necessary achieve behaviors 
complexification vs fixed topology evolution see complexifying coevolution powerful standard coevolution fixed search space compared methods 
note possible compare standard crossvalidation methodology external performance measure exists domain 
evolved neural networks compared directly playing duel 
run fixed topology coevolution compared run complexifying coevolution playing highest dominant strategy fixed topology run entire dominance ranking complexifying run 
highest level strategy ranking fixed topology strategy defeat measure quality complexifying coevolution 
playing fixed topology champion dominance ranking complexifying run measure performance non complexifying evolution 
addition established baseline comparison playing champions complexifying runs entire dominance ranking complexifying run 
average levels reached complexifying fixed topology coevolution compared 
accordingly performance particular run average highest dominance level strategies defeat complexifying runs normalized total number dominance levels best complexifying network 
highest performing network complexifying coevolution depicted 
network hidden units connections plotted 
network significant structure 
basic direct connections strategy elaborated addition new nodes connections 
lateral recurrent connections refined decisions past experiences 
complexification high dimensional space difficult fixed topology evolution take advantage similarly complex structures 
run 
example strategy defeat including th dominant strategy performance run 
performance complexifying runs averaged obtain performance run 
establish baseline performance playing complexifying coevolution runs 
compare fixed topology coevolution small large networks 
complexifying coevolution highest dominant strategy complexifying runs played entire dominance ranking run 
average performances 
fifth sixth seventh runs able defeat entire dominance ranking run indicating best complexifying runs 
highest dominant network best run shown 
average performance complexifying runs sd 
result sense indicates complexifying runs produce consistently strategies 
average highest dominant strategies qualify top complexifying runs 
complexifying coevolution hidden unit fixed coevolution generations equivalent performance comparing typical runs complexifying coevolution hidden unit fixed topology coevolution 
dominance levels charted axis generations axis 
line appears generation new dominant strategy arose run 
height line represents level dominance 
arrow shows highest dominant strategy hidden unit fixed topology evolution performs th dominant strategy complexifying run th generation 
average sd words generations complexifying coevolution effective fixed topology evolution 
hidden unit fixed topology coevolution fixed topology coevolution uses fully connected networks single hidden layer number hidden units chosen experimenter 
order comparison complexifying coevolution fair reasonable size chosen networks runs 
sensible approach choose complexity approximates complexity highest dominant strategy highest performing complexifying run 
strategy utilized hidden units connections including recurrent connections direct connections input output 
order approximate complexity chose hidden unit fully recurrent networks direct connections inputs outputs total connections 
network type able approximate functionality effective complexifying strategy 
runs fixed topology coevolution performed networks highest dominant strategies compared entire dominance ranking complexifying run 
average performances average 
compared performance complexifying coevolution clear fixed topology coevolution produced consistently inferior solutions 
matter fact fixed topology run defeat highest complexifying coevolution hidden unit fixed coevolution generations equivalent performance comparing typical runs complexifying coevolution hidden unit fixed topology coevolution 
dominance levels charted axis generations axis line appears generation new dominant strategy arose run height line represents level dominance 
arrow shows highest dominant strategy hidden unit fixed topology evolution performs th dominant complexifying run th generation 
average sd best configuration fixed topology evolution takes twice long achieve level performance 
dominant strategies complexifying coevolution 
difference performance illustrated computing average generation complexifying coevolution performance fixed topology coevolution 
generation turns sd 
words generations fixed topology coevolution reach average level dominance generations complexifying coevolution 
effect progress entire fixed topology coevolution run compressed generations complexifying coevolution 
hidden unit fixed topology coevolution arguments complexifying coevolution starting search directly space final solution may intractable 
may explain attempt evolve fixed topology solutions high level complexity failed 
experiment chose evolve fully connected fully recurrent networks hidden nodes 
considerable experimentation level complexity productive fixed topology evolution allowing find best coevolution type ave highest ave highest average equivalent dom 
level generation performance generation complexifying fixed topology hidden node fixed hidden node table comparison fixed topology coevolution complexifying coevolution 
second column shows levels dominance achieved type coevolution average 
third shows average generation dominant strategies appeared indicating long innovation generally continues 
fourth column gives highest dominance level complexifying runs dominant strategy fixed topology run defeat fifth column shows average generation 
differences dominance level performance equivalent generation significant 
main result level sophistication reached complexifying coevolution significantly higher reached fixed topology coevolution 
solutions 
networks utilized connections constituting significantly lower dimensional search space hidden unit networks 
average number hidden nodes highest dominant strategy complexifying runs 
total runs performed hidden node networks average performances 
average sd significantly performance complexifying coevolution 
results hidden unit fixed topology coevolution significantly better hidden units confirming hypothesis search difficult higher dimensional space 
solutions way inferior solutions 
effective complexifying runs defeated fixed topology runs 
dominance level difficult achieve average fixed topology evolution reached performance th complexifying generation sd 
best case fixed topology coevolution average finds level sophistication complexifying coevolution finds halfway run 
comparing fixed topology vs complexifying coevolution table shows different methods coevolution differ number dominance levels generation highest dominance level performance equivalent generation 
complexifying coevolution longer finds higher level sophistication average absolutely 
important ask standard non complexifying coevolution principle reach level sophistication effective complexifying runs 
results show fixed topology coevolution forced search directly space effective solutions reach performance complexifying coevolution 
hand allowed optimize complex networks sophisticated solutions may exist space 
unclear choice topology correct fixed topology evolution 
contrast complexifying coevolution finds appropriate level complexity task allowing discover sophisticated strategies 
discussion results confirm complexification possible find sophisticated strategies 
complexification encourages continual elaboration evolution fixed structures proceeds primarily alteration 
fixed genome represent strategy strategy optimized possible add functionality sacrificing knowledge 
contrast new genetic material added sophisticated elaborations layered existing structure 
dominant strategies usually complex predecessors showing evolution capitalizes capacity 
adding new genes genome expand dimensionality search space 
addition values existing genes optimized preceding generations 
new gene added genome promising part new higher dimensional space 
search higher dimensional space starting blindly evolution began searching space 
reason complexification find high dimensional solutions difficult discover 
complexification find solutions difficult obtain evolving fixed structure fixed sized network able defeat best strategies complexifying coevolution 
fixed evolution complexity guessed just right 
little structure impossible solve problem search space large search efficiently 
complexity guessed right searching high dimensional space final solution may intractable search begins random part space 
complexifying system saves user concerns 
principle complexification process efficient generate just structure solve task 
complexification greedy inaccurate may useful counterbalance process simplification genes occasionally disabled deleted genome 
process useful principle keep evolved structures minimal 
removing structure potentially disruptive adding entire modules accidentally cut small deletion 
removing gene may initially improve fitness gene may necessary construct final solution 
case evolution may stuck generations waiting gene reinstated 
result preliminary experiments find minimization improve performance complexifying system 
processes implemented leverage interesting direction 
advantages complexification imply fixed sized genomes evolve increasingly complex phenotypic behavior 
recall complexification refers addition new structure solution section 
depending mapping genotype phenotype may possible fixed finite set genes represent solutions phenotypes varying behavioral complexity 
example behaviors observed cellular automata ca 
cellular automaton lattice cells change state function current state state cells neighborhood 
neighborhood function evolved case size genome assuming neighboring cells binary state 
mitchell 
able evolve fixed sized ca neighborhood functions determine black white cells majority 
evolved cas displayed complex global behavior patterns converged single classification depending cell type majority 
course evolution behavioral complexity ca rose genome remained size 
ca example correct neighborhood size chosen priori 
choice difficult highly critical order succeed 
desired behavior existed chosen size behavior gradually complex system solve task 
interestingly dead avoided neighborhood genome expanded evolution 
possible ca effectively evolved complexifying expanding genomes protect innovation neat 
chosen genome small represent solution unnecessarily large 
searching space dimensions necessary impede progress 
particular genome size question asked solution possibly exist space smaller genome 
reason sense start evolution minimal space 
example ca desired function existed smaller neighborhood significantly fewer evaluations 
possible efficient neighborhood symmetric contains cells directly adjacent cell processed 
efficient neighborhood may large space searching 
starting search small space incrementing promising part higher dimensional space find solution 
reasons complexification advantage behavioral complexity increase extent fixed space 
preceding example raises intriguing possibility structured phenotype evolved complexification minimal starting point historical markings protection innovation speciation 
addition neural networks ca electrical circuits miller genetic programs koza robot body morphologies lipson pollack bayesian networks finite automata brave building vehicle architectures reilly structures varying complexity benefit complexification 
starting search minimal space adding new dimensions necessary highly complex phenotypes discovered difficult find search began intractable space final solution prematurely restricted small space 
note algorithms grow structure complexifying systems 
cases goal growth form gradually better approximations 
example methods incremental grid growing blackmore miikkulainen growing neural gas fritzke add neurons network approximates topology input space reasonably :10.1.1.31.4273
hand complexifying systems non deterministic neat need evolutionary algorithms 
example harvey introduced deterministic algorithm chromosome lengths entire population increase time order expand search space fahlman lebiere developed supervised non evolutionary neural network training method called cascade correlation new hidden neurons added network predetermined manner order function computes 
complexification important general principle artificial intelligence ai 
primary elusive goals field create systems scale 
sense complexification process scaling 
general principle simple idea elaborating broader application 
ai concerned search complex multi dimensional landscapes highly branching trees possibilities 
intelligence deciding space search searching proper space identified 
problems hard question search searching 
currently humans able decide proper level abstraction solving problems 
program decide level abstraction appropriate domain highly compelling demonstration artificial intelligence 
experiments show complexification genomes leads continual coevolution increasingly sophisticated strategies 
trends experiments evolution progresses complexity solutions increases evolution uses complexification elaborate existing strategies complexifying coevolution significantly successful finding highly sophisticated strategies evolution fixed structures 
results suggest complexification crucial component successful search complex solutions 
complexifying optimizing system discover appropriate representation solution location solution 
acknowledgments research supported part national science foundation iis texas higher education coordinating board arp 
neat system parameters population neat networks total 
coefficients measuring compatibility 
initial compatibility distance 
population dynamics unpredictable hundreds generations assigned target species 
number species grew increased reduce number species 
conversely number species fell decreased increase number species 
order prevent stagnation lowest performing species generations old allowed reproduce 
champion species networks copied generation unchanged 
chance genome having connection weights mutated case weight chance uniformly perturbed chance assigned new random value 
system tolerant frequent mutations protection speciation provides 
chance inherited gene disabled disabled parent 
generation offspring resulted mutation crossover 
mating rate 
probability adding new node probability new link mutation 
modified sigmoidal transfer function nodes 
parameter values experimentally links need added significantly nodes average weight difference significant disjoint excess gene 
performance robust moderate variations values dynamic compatibility distance measure caused speciation remain stable 
force yan joly fritz ho prince wang 

clusters vertebrate genome evolution 
science 
angeline pollack 

competitive environments evolve better solutions complex tasks 
forrest editor proceedings fifth international conference genetic algorithms 
san francisco ca morgan kaufmann 
angeline saunders pollack 

evolutionary algorithm constructs recurrent neural networks 
ieee transactions neural networks 
blackmore miikkulainen 

visualizing high dimensional structure incremental grid growing neural network 
prieditis russell editors machine learning proceedings th annual conference 
san francisco ca morgan kaufmann 
brave 

evolving deterministic finite automata cellular encoding 
koza goldberg fogel riolo editors genetic programming proceedings annual conference 
stanford university ca usa mit press 
carroll 

genes evolution 
nature 
cybenko 

approximation superpositions sigmoidal function 
mathematics control signals systems 
darwen 

evolutionary learning automatic modularisation speciation 
phd thesis school computer science university college university new south wales 
dawkins krebs 

arms races species 
proceedings royal society london series 
fahlman lebiere 

cascade correlation learning architecture 
touretzky editor advances neural information processing systems 
san francisco ca morgan kaufmann 
ficici pollack 

pareto optimality coevolutionary learning 
kelemen editor sixth european conference artificial life 
berlin new york springer verlag 
floreano nolfi 

god save red queen 
competition evolutionary robotics 
evolutionary computation 
force lynch pickett lin yan 

preservation duplicate genes complementary mutations 
genetics 
fritzke 

growing neural gas network learns topologies 
tesauro touretzky leen editors advances neural information processing systems 
cambridge ma mit press 
goldberg richardson 

genetic algorithms sharing multimodal function optimization 
grefenstette editor proceedings second international conference genetic algorithms 
san francisco ca morgan kaufmann 
gomez miikkulainen 

incremental evolution complex general behavior 
adaptive behavior 
gruau whitley 

comparison cellular encoding direct encoding genetic neural networks 
koza goldberg fogel riolo editors genetic programming proceedings annual conference 
cambridge ma mit press 
harvey 

artificial evolution adaptive behavior 
phd thesis school cognitive computing sciences university sussex sussex 
jim giles 

talking helps evolving communicating agents predator prey pursuit problem 
artificial life 
koza 

genetic programming programming computers means natural selection 
cambridge ma mit press 
lipson pollack 

automatic design manufacture robotic 
nature 


steps open ended evolution 
proceedings genetic evolutionary computation conference gecco 
san francisco ca morgan kaufmann 
martin 

increasing genomic complexity gene duplication origin vertebrates 
american naturalist 


efficient bayesian network inference genetic algorithms stochastic local search abstraction 
phd thesis university illinois urbana champaign computer science department urbana champaign il 
miller cliff 

evolution pursuit evasion biological game theoretic foundations 
technical report csrp school cognitive computing sciences university sussex brighton uk 
miller job 

principles evolutionary design digital circuits part journal genetic programming evolvable machines 
miller job 

principles evolutionary design digital circuits part ii 
journal genetic programming evolvable machines 
mitchell crutchfield das 

evolving cellular automata genetic algorithms review 
proceedings international conference evolutionary computation applications 
russian academy sciences 
mondada 

mobile robot miniaturization tool investigation control algorithms 
proceedings third international symposium experimental robotics 
noble watson 

pareto coevolution performance opponents game dimensions selection 
editor proceedings genetic evolutionary computation conference gecco 
san francisco ca morgan kaufmann 
reilly 

emergent design artificial life architecture design 
th international conference artificial life alife 
cambridge ma mit press 
radcliffe 

genetic set recombination application neural network topology optimization 
neural computing applications 


homologous pairing strand exchange genetic recombination 
annual review genetics 
reggia schulz wilkinson 

conditions enabling evolution inter agent signaling artificial world 
artificial life 
rosin 

coevolutionary search adversaries 
phd thesis university california san diego san diego ca 
rosin belew 

new methods competitive evolution 
evolutionary computation 
sigal alberts 

genetic recombination nature crossed strand exchange homologous dna molecules 
journal molecular biology 
spears 

speciation tag bits 
handbook evolutionary computation 
iop publishing oxford university press 
stanley miikkulainen 

dominance tournament method monitoring progress coevolution 
proceedings genetic evolutionary computation conference gecco workshop program 
san francisco ca morgan kaufmann 
stanley miikkulainen 

efficient evolution neural network topologies 
proceedings congress evolutionary computation cec 
ieee 
stanley miikkulainen 

efficient reinforcement learning evolving neural network topologies 
proceedings genetic evolutionary computation conference gecco san francisco ca morgan kaufmann 
stanley miikkulainen 

evolving neural networks augmenting topologies 
evolutionary computation 
van 

new evolutionary law 
evolution theory 
yao 

evolving artificial neural networks 
proceedings ieee 
zhang muhlenbein 

evolving optimal neural networks genetic algorithms occam razor 
complex systems 

