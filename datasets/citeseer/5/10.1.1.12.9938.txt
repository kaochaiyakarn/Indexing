design implementation ngram statistics package banerjee ted pedersen carnegie mellon university pittsburgh pa usa university minnesota mn usa www umn edu nsp html 
ngram statistics package nsp exible easy software tool supports identi cation analysis ngrams sequences tokens online text 
designed implemented nsp easy customize particular problems remain general serve broad range needs 
provides nsp raising general issues ngram analysis summarizes applications nsp successfully employed 
nsp written perl freely available gnu public license 
simple model written text series symbols carry meaning considered 
may wish treat symbols phrases words characters depending motivations 
ngrams simple representation suits view written language 
ngram sequence units tokens text units typically single characters strings delimited spaces 
token xed length character sequence strings embedded spaces depending intended application 
identi cation ngrams interesting way fundamental task natural language processing 
ngram considered interesting occurs expected chance tendency predict occurrence phenomena text 
long history research area 
character ngrams shannon estimate letter entropy english language 
decade large amount developing corpus techniques identify collocations text 
describes ngram statistics package nsp general purpose software tool allows users de ne ngrams wish utilize standard methods statistics information theory identify interesting signi cant instances ngrams large corpora text 
earlier versions package known bigram statistics package bsp 
rst released november limited dealing word sequences bigrams 
june bsp nsp extended handle ngrams 
writing nsp remains active project releases planned 
follows summary nsp designed potential user features package 
review general issues ngram processing brie discuss research incorporated nsp 
tokenization text typical rst step natural language processing application tokenization 
symbols text le divided tokens represent smallest indivisible units text 
tokens de ned space delimited alphanumeric strings individual ascii characters take forms depending application 
nsp designed allow user de ne tokens perl regular expressions 
particular de ne token contiguous sequence characters match set regular expressions 
may token option perl regular expressions 
user provide token de nition regular expressions provide default delimit perl regular expression nw contiguous sequence alpha numeric characters single punctuation mark default says token alpha numeric character string individual punctuation mark 
president george bush visits guests tokens president george bush visits guests 
notation tokens terminated meta character ngrams composed tokens represented concatenating terminated tokens 
representation required tokens may include embedded spaces white space delimiter isn possible 
example george bush represents single token starts ends includes embedded spaces 
token paired create bigram bush 
nsp default de nition token string single punctuation mark may suitable cases 
example may want treat george bush separate tokens represent single entity known george bush 
hand welcome rst time home buyers 
string rst time tokens 
wish distinguish rst time rst time 
punctuation marks part previous word token ignored 
similarly various choices dealing numbers symbols dates abbreviations lack universally appropriate de nition tokens motivates desire support exible notion tokenization nsp 
tokenization nsp done program count pl converts input le long string replacing new line characters spaces 
string matched user provided regular expressions system defaults 
regular expression speci ed checked order see match string starting rst character input string 
match rst character input string considered non token removed henceforth ignored 
matching process stops rst regular expression yields match 
longest sequence characters starting rst character input string matches regular expression identi ed token removed string 
process continues entire string matched text identi ed tokens 
example assume regular expressions de ne tokens george bush nw 
string george bush considered token unbroken sequence alpha numeric characters 
sentence president george bush visits guests output tokens president george bush visits guests 
note president recognized token removed resulting string george bush visits guests matched regular expressions 
regular expression checked order provided matching process stops rst successful match resulting token george bush just george 
ordering regular expressions token de nition imposes sort priority clear user di erent orderings set regular expressions result di erent 
tokens ngrams tokens identi ed count pl assembles sequences tokens ngrams 
typically ngrams formed contiguous tokens tokens occur input corpus 
president george bush visits guests token de nition regular expression nw possible bigrams ngrams bush visits 
similarly possible trigrams ngrams 
may necessary identify ngrams non contiguous tokens tokens separated number intermediate tokens 
example text president george bush may advantageous identify bigrams trigram addition sequential bigrams described 
useful wants report having observed bigram tokens separated intervening token allow ngrams formed non contiguous tokens count pl provides window option 
de nes window contiguous tokens value greater equal value ngram formed tokens long tokens belong single window size tokens ngram occur exactly order original window text 
window size ngram size cn choose ngrams window 
example consider text president george bush visits guests 
possible bigrams window size bush visits guests 
counting ngram frequencies having tokenized corpus text constructed ngrams program count pl counts number times ngram occurs corpus 
outputs frequency unique ngram frequencies various combinations tokens ngram 
counting bigrams suppose nsp counting token sequences alphanumeric strings 
output count pl consists count total number bigrams corpus followed list unique bigrams associated frequency counts 
show small example just shows single bigram counts value number bigrams corpus thought sample size 
note count unique bigrams total number bigrams regard repetition 
line represents bigram shows bigram occurred times corpus 
token george occurred left hand token bigrams corpus includes instances bigram 
similarly token bush occurred right hand token bigrams 
format count pl output compact representation typical contingency table 
example table internal cells categorize bigrams corpus disjoint sets instances bigram bigrams bush second table 
contingency table bush bush george george token george rst token bigrams george rst token bush second token remaining bigrams george rst token bush second token 
observe rest contingency table reconstructed internal cell count marginal frequencies sample size 
note sample size regardless ngram corpus consideration 
value need represented count pl output 
counting ngrams counting bigrams default behavior program count pl user set value option ngram 
trigrams longer ngrams frequency values various combinations tokens computed 
example consider output creating counting trigrams sample size indicates total number trigrams corpus 
line gives counts trigram occurs corpus exactly twice 
token president occurs rst token trigrams token george occurs second token trigrams token bush occurs third token trigrams corpus 
tokens president george occur simultaneously rst second tokens trigrams tokens president bush occur rst third tokens trigrams tokens george bush occur second third tokens trigrams 
data represented table 
trigrams broken categories depending contain contain particular tokens speci positions 
observe count pl produces minimum number frequencies required reconstruct table 
particularly important value grows larger 
ngram count pl represents leftmost token token number ngrams token position token position token table 
contingency tables bush bush president george president george president george president george position ngram rst frequency value reported frequency ngram 
followed frequency values frequencies individual tokens speci positions ngram 
followed choose values 
followed choose values 
choose frequency values 
gives total possible frequency values ngrams size call frequency value frequency combination expresses number ngrams combination tokens speci positions 
default combinations output exactly order shown 
total number frequency values grows exponentially value ngram size consideration 
computing storing displaying large number frequency values resource intensive unnecessary package gives user capability specify frequency combinations wishes computed displayed 
speci cally user option set freq combo provide program count pl le containing inputs hypothetical function specify frequency combinations desires counted 
example compute frequencies trigrams individual tokens trigrams pairs tokens user tell package just count functions 
result counts di erence previous example fact frequency values output 
considerable internal di erences frequency combinations requested counted realizing considerable savings computation time memory utilization large corpora larger values ngram filters necessary lter entire set ngrams observe small subset possible ngrams input text 
example ngrams entirely function words interesting may wish ignore 
package provides di erent mechanisms create smaller subsets ngrams 
rst mechanism user may option pass program count pl le containing list words ngrams entirely words created 
example user provides words words sentence worst kinds bigram ofthe created 
bigrams oneof continue created entirely words word list 
stopping technique particularly useful creation non contiguous ngrams ngrams composed entirely function words 
second mechanism user may specify frequency cut ngram occurs speci ed number times ignored option remove case excluded sample size ect frequency counts counted simply displayed option frequency case included sample size ect various frequencies 
rst case assumes ngrams occur cut number times signi cant include counts second case low frequency ngrams ect counts displayed count pl output 
radically di erent approaches counting appropriate certain circumstances 
user choose cut mechanisms care avoid unexpected results 
measures association ngrams user identi ed counted ngrams components count pl program nsp allows user go apply various measures association data program statistic pl measures judge tokens ngram occur expected chance 
ngram may represent collocation interesting phenomena 
measure returns score assigned statistical signi cance referred precisely test association 
examples supported nsp include log likelihood ratio fisher exact test pearson chi squared test 
measures allow signi cance assigned value include dice coecient pointwise mutual information 
discussing kinds techniques refer generically measures association speci term test association appropriate 
background support measures association ngrams nsp implicitly de nes random binary variables represents th token ngram 
variables indicate particular token occurs position 
example variable represent george occurs rst position ngram 
table rst row contingency table represents ngrams george occurs second row represents ngrams george occur 
similarly rst column represents ngrams bush second column represents ngrams bush 
tests association random variables typically set null hypothesis holds random variables independent 
pair words fail test considered related dependent way failed exhibit statistical independence 
formally speaking words bigram considered independent expect probability words occurring equal product probabilities words occurring separately 
example bigram consideration probability occurrence represented 
words considered independent joint probability equal nearly product probabilities individual words george bush represented 
tests association formal de nition statistical independence 
reject hypothesis independence nd value observed frequency counts diverges expected values hypothesis independence 
ngrams numerous ways formulate null hypothesis 
random variables null hypothesis capture wider range possible models simple independence 
moving tests association general realm statistical model evaluation 
example formulate null hypothesis observed probability trigram re ects words completely independent words dependent independent third 
cases null hypotheses formulated 
null hypotheses represents di erent hypotheses expected values compared observed value determine closely observed values correspond expected values 
recall previous section program count pl allows user compute frequencies option set freq combo 
package allows user create wide range null hypotheses particularly grows larger 
implementation observed frequencies count pl user apply measure association determine words ngram related 
package implements measures association primary design goal facilitate quick easy implementation user favorite measures 
achieved program statistic pl tool designed process list ngram counts produced count pl apply measures association data 
program statistic pl remains unchanged regardless measure association performing 
achieved requiring measure implemented perl module exists le separate rest program plugged statistic pl run time 
module follow set rules specify interface statistic pl ngram corpus statistic pl passes module size corpus various frequency values associated ngram 
module expected return oating point number expresses degree tokens ngram associated 
mechanisms exist module throw exceptions statistic pl exit gracefully 
module implements measure association export functions statistic pl 
rst function called statistic pl pass module information ngram size total number ngrams corpus data structure containing list frequency combinations associated ngram dataset 
ngram statistic pl calls function passes frequency values associated ngram 
function expected return oating point value proportional degree association ngram question 
functions user may implement export functions errorcode 
rst throw exceptions return string containing name measure returned string formatted output program 
advantage design allows user concentrate entirely mechanism statistical measure concern rest infrastructure 
example processing list ngrams corpus text counting storage frequency values taken care 
author new measure need focus measure inputs outputs internal computation 
comparing ranked lists ngrams nsp designed create analyze ngrams corpus text allow user study ect new measures association 
section describes user implement new measure integrate package 
nsp provides program rank pl allows user compare ranked lists ngrams determine di er respect 
user introduces new measure possible determine resembles di ers existing ones 
rank pl implements spearman rank correlation coecient compare measures association 
coecient measures correlation di erent rankings list items 
speci cally set ngrams frequencies observed corpus text rank measures association compute correlation di erent rankings equation 
equation total number unique ngrams corpus di erence rankings ngram lists value correlation 
value ranges 
value implies correlation lists values away imply greater correlation sign value indicates positive negative correlation 
applications ngram statistics package range applications nsp utilized re ects generality ngrams employed 
original motivation developing nsp support second author word sense disambiguation 
developed supervised approach word sense disambiguation learns decision trees bigrams sense tagged corpora 
approach word disambiguated word bigrams occur nearby 
approach proven relatively successful quite easy implement part due nsp 
language independence ngrams nsp demonstrated applications dutch identify collocations involve non content words 
bouman nsp identify collocational prepositional phrases van der uses determine variety non content collocations dutch text 
range possible applications ngrams nsp illustrated projects 
inkpen hirst extend database near synonyms information collocational behavior 
lopez information word bigrams take place parses parse available performing word alignment parallel text 
gill oberlander compare writing styles identifying word bigrams group written text 
number possible enhancements nsp carried years 
ngrams counted storing hash table 
poses problems relatively large corpora tokens process token corpora ecient mechanism developed 
possibility sux trees described church 
nsp version provides small number measures association implemented bigrams 
implement measures trigrams include releases 
addition nsp geared ascii text 
attempted incorporate unicode support provided perl stable 
hopeful situation improve perl allow nsp support unicode 
nsp stand package runs command line 
plan implement set library modules allow included programs take advantage object oriented features perl supports 
plan provide graphical interface perl tk addition command line support 
conjunction increase graphs charts available user exploring data 
acknowledgments ngram statistics package implemented rst author university minnesota 
supported aid research scholarship oce vice president research dean graduate school university minnesota 
authors supported national science foundation faculty early career development award 
rst author currently supported national science foundation 
rec 
opinions ndings recommendations expressed publication authors necessarily re ect views national science foundation ocial policies expressed implied sponsors united states government 

bouman 
corpus acquisition collocational prepositional phrases 
computational linguistics netherlands clin 

church hanks 
word association norms mutual information lexicography 
proceedings th annual meeting association computational linguistics pages 

dunning 
accurate methods statistics surprise coincidence 
computational linguistics 

gill oberlander 
care linguistic features 
proceedings th annual conference cognitive science society pages washington 

lopez hwa resnik 
word level alignment multilingual resource acquisition 
proceedings lrec workshop linguistic knowledge acquisition representation bootstrapping annotated language data 

pedersen 
fishing exactness 
proceedings south central sas user group conference pages austin tx october 

pedersen 
decision tree bigrams accurate predictor word sense 
proceedings second annual meeting north american chapter association computational linguistics pages pittsburgh july 

pedersen 
machine learning lexical features approach senseval 
proceedings senseval workshop pages toulouse july 

pedersen bruce 
signi cant lexical relationships 
proceedings thirteenth national conference arti cial intelligence pages portland august 

shannon 
prediction entropy printed english 
bell system technical journal 

van der 
collocational behavior non content words 
acl eacl workshop collocations toulouse france 

church 
sux arrays compute term frequency document frequency substrings corpus 
computational linguistics 

inkpen hirst 
acquiring collocations lexical choice near synonyms 
siglex workshop unsupervised lexical acquisition th meeting association computational linguistics philadelphia 
