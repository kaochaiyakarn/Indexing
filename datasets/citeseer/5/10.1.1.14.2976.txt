sift mac protocol event driven wireless sensor networks kyle jamieson hari balakrishnan mit laboratory computer science massachusetts institute technology cambridge ma lcs mit edu tay department mathematics national university singapore tay acm org may nodes sensor networks encounter spatially correlated contention multiple nodes neighborhood sense event need transmit information 
furthermore sensor network applications sufficient subset nodes observe event report 
show traditional carrier sense multiple access csma protocols handle constraint adequately take advantage second property leading degraded latency throughput network scales size 
sift medium access protocol wireless sensor networks designed observations mind 
sift randomized csma protocol previous protocols time varying contention window node randomly picks transmission slot 
reduce latency delivery event reports sift uses fixed size contention window carefully chosen non uniform probability distribution transmitting slot window 
show simulations sift offer fold latency reduction compared size sensor network scales nodes 
analytically prove bounds best latency achievable decentralized csma mac protocol sensor networks report event show sift comes close meeting bound 
shared wireless communication channel needs medium access control mac protocol nodes contend channel eventually transmit collisions 
past decades mac protocols designed operation wireless networks today 
protocols traditional data workloads inadequate emerging wireless sensor networks nature data transmissions application requirements different 
argues wireless sensor networks require fresh look mac protocol design proposes new protocol works problem domain advantage application requirements data characteristics 
researchers argue new mac protocols sensor network domain researchers argued protocols conserve energy better traditional protocols 
addition energy reasons rethinking mac design sensor networks 
motivated observations 
sensor networks event driven spatially correlated contention 
sensor networks multiple sensors deployed geographic area usually fault tolerance reliability 
addition sending periodic observations event interest happens sensing nodes observe event send messages reporting event 
result spatially correlated contention 
multiple sensors sharing wireless medium messages send time generate messages response external events 

sensing nodes need report event 
sensor applications nodes sense event need report 
specifically find applications designed sensing node send message subset messages reach data sink 

time varying density sensing nodes 
sensor networks size set sensing nodes changes time target enters field sensors 
sensor networks smart dust lead believe number sensing nodes quickly large 
result need mac protocol handles spatial correlations observation adapts changes number contending nodes 
observations lead problem statement wireless sensor mac protocol design different classical mac design 
specifically shared medium nodes sense event contend transmit channel time goal design mac protocol minimizes time taken send messages collisions 
notice throughput optimization problem classical mac protocols designed 
seek protocol allows winners contention protocol send messages quickly possible remaining potential transmitters suppressing messages sent 
discuss possible ways implementing suppression section 
number proposals controlling flow information sensor network application layer 
believe types protocols extremely useful sensor networks 
heart protocols foregoing observations hold 
furthermore solving problem application layer intelligent mac serious performance issues show experimental evaluation 
believe sift mac useful lower level building block improving performance existing higher level sensor network protocols building new ones 
core randomized csma mac protocols attempt adapt active population size contending nodes 
typically done time varying contention window number slots maintained node collisions unsuccessful transmissions causing window increase successful transmissions causing decrease 
node transmits data slot picked uniformly random current contention window 
approach interested potential reports problems scaling suddenly grows 
result degraded response latency 
protocol sift intuition interested low latency reports important successful slots contention free 
tightly bound response latency contention window non uniform probability distribution picking transmission slot window 
find distribution multiplicatively increases probability picking slot fixed window relative earlier slot works 
give theoretical justification sift choice non uniform probability distribution show simulations sift offer fold latency reduction number sensors radio range scales nodes 
analytically prove bounds best latency achievable decentralized csma mac protocol sensor networks report event show sift comes close meeting bound 
interestingly find sift scalable beats terms throughput large rest organized follows 
section presents details sift explains works 
section presents results simulation experiments including trace driven experiments 
section discusses related mac protocols wireless networks 
conclude discussion advantages limitations sift section 
sift design sift contention window mac protocol 
contention window protocols node picks random contention slot cw transmit 
nodes pick slot transmit cause collision 
happens protocols specify colliding nodes multiplicatively increase value cw varying cw contention window protocols attempt scale current active population size attempt maximize number collision free transmissions incurring long latencies 
problems method 
takes time cw correctly adapt right value active population large happen event observed sensors previous idle period 
second cw large event observed small number sensors latency report event high 
furthermore cw usually chosen ensure active nodes get chance send pick values uniformly random interested collision free transmission potential reports 
contrast previous protocols sift uses small fixed cw slots slot lasts order tens microseconds 
course nodes longer pick contention slots uniform distribution lead collisions moderate values key difference sift previous protocols probability picking slot interval uniform 
intuition leads propose geometrically increasing probability distribution picking contention slot 
distribution shown 
section formally define distribution discuss choose parameter distribution nodes running sift compete slot cw shared belief current population size changes slot node transmits 
belief starts large value node transmission probability 
node starts transmit slot node reduces belief number competing nodes multiplicatively increasing transmission probability second slot 
process repeated slot allowing competition happen geometrically decreasing possible values small total number contention slots cw result sift enables winner chosen rapidly wide range potential population sizes incurring long latency due collisions 
exactly node happens pick contention slot start transmit slot 
transmission finishes competing sift nodes select new random contention slots repeat process backing fixed contention window 
process happens stations happen pick contention slot resulting collision 
shown graphically 
rest section describe sift probability distribution compare optimal contention window scheme 
give formal protocol specification qualitatively compare sift contention window protocols 
sift backoff probability distribution formalize intuition shape sift backoff probability distribution 
suppose sensor picks slot cw non uniform probability say slot silent sensor chooses slot motivation name sift idea non uniform probability distribution collision free winners entire contending set nodes 
probability mass function slot number alpha alpha alpha probability distribution contention slot number sift station chooses 
show various values parameter distribution 
contention slots timeline nodes running sift protocol 
shaded bars indicate packet transmission times 
time medium idle stations backoff random sift distribution transmitting 
stations add constant time interval difs backing 
collision sensor chooses slot 
sensor wins slot choose slot choose slots non silent slot collision 
success sensor wins slot cw 
sift uses truncated increasing geometric distribution cw cw cw distribution parameter 
range increases exponentially slots higher probability 
motivate choice view station choice slot pick decision procedure cw stages 
node starts stage overestimate chooses slot small probability 
node chooses slot indication overestimate node updates belief population fixed parameter defines maximum population size sift designed 
practical macs parameter size decreasing proceeds choose slot certain probability stage 
slot silent belief reduced stage general updated belief silence slots 
may fact value want keep probability success constantly high stage decision process 
specifically want properties hold 
probability success high 
ii probability success constant stage estimate reduced 
get property ii examine node calculates rth stage imaginary decision process 
probability choosing slot silence slots 
silence slot probability success slot probability exactly node picks slot nr nrp large small property ii holds term approximately constant note appears twice equation probability success nrp changes slowly time progresses slot 
emphasize introduced explanatory purposes way understanding choice particular nodes running sift maintain explicit estimate similarly merely mathematical reinterpretation distribution critical sift perform start scheme determining find distribution gives constant cover large number possible values small number slots cw choose exponential scheme belief active population size reduces constant 
fn claim distribution equation satisfies requirement keeping mind sensor picks slot independently competition slots ends sensor succeeds sensor pr chooses earlier slots pr chooses choose earlier slots pr chooses pr choose earlier slots 
cw cw cw cw 
example limited maximum contention window size commodity hardware time written 
show population size sift performance degrades gracefully 
individual probability set probability distribution cw 
small cw set equations imply giving property ii 
property want choose probability success high equation implies cw slots cw silent node choose slot 
chosen node stage cw believes active sensor 
follows equation cw cw plots results experiment sensors choose slots distribution equation 
point graph run sensors ignore line points 
note engineered sift probability distribution maximum number sensors performance degrades gracefully true number contending stations exceeds 
degradation happens slot starts get picked station resulting collision 
ran simulation equal various values 
verified chosen correct range success rate sensitive choice graph shows sensors know fixed distribution probability successful transmission constantly high large range section see probability success fact close maximum achievable sensors knew distribution tuned optimality results contention window protocols suppose contending station perfect knowledge true number contending stations instant started contending shared medium picked contention slot transmit contention period information provided contention period 
appendix prove theorem distribution optimizes probability success 
theorem significant size colliding rts packets small data packets rts cts turned greater contention window size distribution yields best latency contention window protocols 
theorem 
define pr success contenders cw maximum value cw achieved distribution cw cw 
cw cw 
cw shows success probability sift distribution theoretical success probability optimal distribution shown line points 
sift distribution know performs optimal distribution needs know argued section case unknown hard predict 
optimal distribution impractical 
conditions exclude non contention window protocols tree splitting contention resolution 
address protocols sections 
probability success number contending stations logarithmic scale optimal sift comparison sift cw optimal protocol cw 
optimal protocol full knowledge sift knowledge sift distribution shown engineered maximum value nodes degrades gracefully exceeds 
protocol specification pseudocode different states state transitions sift shown 
idle state wait channel idle recv frame self moveto receive xmit queue empty moveto contend state wait recv ack self discard frame moveto idle retransmit frame moveto contend state slot wait difs slot slot channel busy moveto idle transmit frame moveto receive state check frame crc wait sifs send ack moveto idle function picks slot cw random sift distribution described equation 
directive moveto state exits current block code starts executing code new state 
directive wait waits specified time interval condition true 
slot sifs difs defined ieee slot minimum time separation stations transmit slot seconds apart hear onset transmissions 
difs deferral time added new data transmission 
sifs deferral time added data acknowledgment packet allow previously transmitting radio turn receive acknowledgment 
difs sifs slot acknowledgment packets ongoing transmissions take precedence fresh data packets 
total time send data complete receipt acknowledgment packet 
note timescale contention window slots tens microseconds slots contention purposes carry data 
rts cts state machine section detail initial rts cts exchange eliminates collisions large packets 
large packet sizes sift uses rts cts exchange way ieee 
sift backoff distribution compete data packets compete sending rts packet 
replace frame rts ack cts pseudocode 
additionally sending cts station check station reserved channel rts 
reservation time specified rts 
section evaluate performance protocol rts cts disabled sending short data packets 
section run sift experiment rts cts enabled sending large data packets 
implementing suppression described workload sensors suppress event reports number reports sent 
possible ways implement suppression 
scenarios hop base station suppression trivial implement 
sensors listen packets base station 
general sensors listen events timestamped time interval away event interest 
plan detail process 
exploring csma design space binary exponential backoff beb multiple access networks collision detection ethernet 
transmissions backed random slot uniform contention window 
transmission unsuccessful due collision transmitting station uniform contention window doubled length 
resulting probability distribution contention slot station choose probability mass spread twice slots 
bharghavan proposed macaw derivative beb wireless networks 
way share information state wireless medium beb wireless suffers capture problem ethernet 
station just successful transmitting reset contention window minimal value winner subsequent contention competitions 
solution belongs class techniques term shared learning 
improve fairness macaw stations copy contention window winner contention competition 
shared learning technique proposed bharghavan increase contention window collision detected result bad packet crc :10.1.1.16.1535
essence shared learning technique knowledge gained station competes shared 
contention slots timeline nodes running protocol 
large shaded bars indicate packet transmission times 
uniform backoff function shown small bars remaining time left shaded dark gray medium busy backoff countdown expires 
think shared learning help problem high rate change respect time 
intuition node successful transmission correct value cw nodes 
intuition true 
shared learning term copy suffers increases quickly 
substantiate claim section 
shared learning uses memory solve fairness problem 
stations compete set countdown timer random value picked uniformly contention window 
medium busy station pauses countdown timer 
medium idle station wants compete behaves differently macaw beb 
picking new random value backoff window resumes countdown timer 
shows protocol backing simple network nodes 
station successfully transmits resets cw small fixed minimum value cw consequently station rediscover correct cw wasting bandwidth 
garcia luna aceves proposed variant fama family protocols called collision avoidance resolution multiple access 
uses carrier sensing backoff uses tree splitting algorithm resolve collisions 
population size tree splitting protocols undergo log collisions successful packet transmission collisions total transmit packets significant improvement contention window protocols 
time belief decreases sift pay time penalty contention slot length 
time contention resolution tree splits pay time penalty equal length colliding packet 
significant contention slots take time colliding rts packets 
example contention slots take microseconds independent bandwidth 
rts collisions take microseconds mbps longer lower bandwidths 
tree splitting algorithms rely stations waiting transmit able determine transmissions nodes successful 
interference property receiver impossible certainty hard noisy channel 
regard sift practical tree splitting algorithm sift rely able detect receptions successful 
table summarizes design parameters reviewed 
table clear sift explores parameter contention window design space explored 
section shows particular choice design space results performance respect throughput latency fairness 
experiments ran experiments version ns network simulator 
noted packet size simulations bytes nodes range common base station 
experiments compare sift ieee copy 
experimental results average runs different random seeds protocol contention shared memory window learning beb variable macaw variable variable copy variable sift fixed table design parameters contention window csma space 
schemes variable sized contention window uniform distribution pick slot 
sift requires shared learning memory perform 
symbol meaning number nodes responding event number reports needed base station report range sensors detect events table summary parameters vary event driven model meanings 
run fairness experiments section 
trace driven workload constant bit rate tcp flows suffice evaluate protocols sensor networks capture burstiness inherent network underlying physical process network sensing 
want obtain trace events reflective real sensor network see 
propose trace driven workload evaluate design 
response simulated event near sensor sends small sized report packet 
hears base station suppresses report removing packet transmit queue 
modeled sensor network deployed area flat terrain 
model nodes scattered area track locations people cars area 
sensor report meters away moving object sends byte report packet reporting presence object 
sensors model imagined detecting presence metal cars driving vibration shock detectors 
deploying sensor network acquired video street scene shown 
detect movement motion detector software motion live image modified log motion events database 
location event records time motion coordinates motion picture 
trace drive experiments 
run experiment trace driven workload create ns scenario sensors placed uniformly random dimensional plane 
time event database sensors report meters location event send byte report packet 
continuous motion scene events arrive nearby sensors rate times second 
motion sensor senses event 
note data simulations video images event information analysis motion video images 
shows traffic pattern generated 
note data capture process modeling interarrival times motion real world setting capture small differences density sensor deployment image captured video camera showing overheard view street vehicles people move 
data stream generate realistic workload sensor networks 
density randomly placed sensors completely uniform 
latency experiments experiments constantly changing subset nodes send event reports base station 
measure time receive event report varying number sensors report event 
experiment independent workload choose provided workload saturate wireless channel 
shown low minimum contention window size large quickly resolve contention nodes 
number nodes reporting event grows contention window needs grow event report successfully sent 
shared learning help situation stations broadcast underestimates optimal cw resulting similar situation plain 
sift need time adapt large performs large range graph shows latency reduction alluded 
desynchronization experiments experiments run nodes able sense event sensed exactly time 
reality expect pair nodes sense event observations shifted time amount order milliseconds due propagation delays environment variation sensor electronics software system delays sensor nodes 
consequently time sensors attempt report event desynchronized 
skeptic suggest simply introducing uniformly chosen random delay time sensor chooses send event claiming reduce latency 
show fact case 
shows delay delivering reports event function variation event sensing time 
traffic model constant rate event model 
note performance protocol number nodes answering event time number nodes answering events trace driven simulation real world event times acquired video stream motion detection software 
plot number imaginary sensors close respond motion detected video frame function time motion 
detail show excerpt seconds trace lasted minutes 
average delay ms number reports attempted copy sift average delay function number sensors activated report event 
report required sensors detect event time 
number sensors reporting event grows window contention protocols require time adapt active population size 
average delay ms range variation report times ms copy sift average delay function maximum variation time sensor reports event 
sensors report event time event plus random delay uniformly chosen zero axis value 
number sensor reports reports required 
experiment uses constant event rate workload 
change function variation event sensing time 
means unintentionally intentionally adding variation event sensing times improve latency 
throughput experiments compare throughput achieved sift copy variety workloads significant fraction constant bit rate traffic experiment measure sift raw steady state throughput non event driven workload 
purpose experiments show sift performs extremely event workload sacrifice steady state throughput ad hoc network setting number constant bit rate flows operating concurrently 
cbr flows compete send data possible sift shared learning 
number competing cbr flows extremely small sources left graph see sift loses throughput compared 
loss throughput happens cbr flows incur collisions sift winning station wins late slot case sift 
winning flow wins earlier slot 
sift incurs contention backoff slot delays transmission 
note workload consisting cbr flows target design 
number cbr flows increases slightly sift performs center 
number increases sift outperforms terms raw throughput left 
sender cbr traffic rate kbps copy sift ratio packets delivered sender cbr traffic rate kbps copy sift sender cbr traffic rate kbps copy sift packet delivery ratio function sender cbr traffic rate 
left traffic sources center traffic sources right traffic sources 
sift incur collisions increases shape sift distribution winning slot number decrease 
results wasted aggregate bandwidth 
constant rate events measure time takes receive events number nodes reporting event fixed 
experiment measures throughput network steady state dynamic situation nodes just started send network adapting sudden change 
see sift achieves better throughput scenario 
reason sift track sudden change number contenders dn dt sift distribution works large range explore sift performance space vary consider bottommost curve 
fact constant respect axis means matter stations report event sift deliver message small constant latency 
consider additional curve 
distance curve curve measures additional time needed send event reports 
fact curve constant respect means sift deliver messages small constant latency 
shows sift scales respect respect individual events 
trace driven events demanding trace workload examine scaling number events sift report 
traffic pattern bursty high rate number reports needed grows number reports suppressed shrinks quickly reach capacity medium 
happens interface queues senders start build latency sharply increases 
examine capacity medium sift versus increased upper bound interface queue length order magnitude packets packets 
measured latency receive events function results experiment shown 
note position knee various curves 
sift continue delivering low latency events higher values higher capacity workload 
fairness experiments sift protocol wireless nodes access shared medium natural question ask sift allocates bandwidth nodes fairly 
shown minor changes average hop delay ms number reports required copy sift average delay function number event reports required sensors report event 
sensors detect event time 
experiment uses constant event rate workload 
average delay ms number reports attempted average delay sift event reports function show curves number reports required equal powers zero 
experiment uses constant event rate workload 
average delay ms number reports required copy sift average delay function number reports needed camera motion event 
sensor range experiment report fixed 
experiment uses trace driven workload 
yield extremely fair protocol 
duplicate experimental setup authors distributed fair scheduling protocol dfs evaluate sift 
place number nodes radio range set traffic pattern node traffic source traffic sink 
assume node backlogged offered load available wireless capacity 
shows throughput achieved node seconds function cardinal node identifier 
note expected copy outperforms terms fairness 
notice sift outperforms terms fairness 
sift fact achieve perfectly fair bandwidth allocation 
expect major issue sensor networks contain redundant nodes reporting similar observations environment 
due simplicity sift expect similar approach dfs applied sift fairness issue 
related section discuss related mac protocols 
fall categories contention protocols time division protocols energy conserving protocols 
discuss relationship sift problem reliable multicast feedback suppression 
csma compared sift macaw section 
review csma related research 
woo culler compared performance various contention window mac schemes varying carrier sense time backoff increase decrease policies transmission deferral policies 
protocols contention windows uniform distribution 
evaluation conventional protocols exhaustive destination node flow cardinal copy sift destination node flow cardinal copy sift throughput packet count destination node flow cardinal copy sift fairness comparison sift 
left nodes center nodes right nodes 
experiment half flows nodes 
experiment uses cbr workload 
leads design point 
noted energy inefficient listens backoff period backoff period grow quite long 
sift compares favorably regard fixed size backoff window 
cal conti proposed replacing uniform distribution contention window persistent backoff protocol 
estimating population size chose maximize system throughput nodes packet ready transmission 
showed yields suboptimal throughput workload algorithm approach optimal throughput conditions 
contrast assume nodes packet send 
rely estimator may slow adapt changes quickly 
time division multiple access tdma problem simple round robin tdma highly suboptimal 
high rate change subset active nodes respect time results unused time slots 
time spread multiple access protocols assign node unique code deterministically specifies time slots node right transmit 
way protocols try combine contention protocols deterministic bounds message latency tdma offers 
grand algorithm performance depends maximum node degree network max highly variable completely connected network max number nodes network 
result 
frame length wastes large numbers tdma slots 
runs number protocols simultaneously round robin tdma switch protocols 
protocol tuned nodes neighborhood sizes equal increasing powers 
scales terms asymptotic quantities threaded protocol waste slots running protocols albeit asymptotically small number 
example thread protocols resulting latency penalty workloads 
protocols saving energy mac mac protocol designed saving energy sensor networks 
uses periodic listen sleep collision avoidance facilities overhearing avoidance reduce energy consumption 
leach designed sensor networks user wants remotely monitor environment 
includes distributed cluster formation local processing reduce global communication randomized rotation cluster heads extend system lifetime 
leach aims extend system lifetime sensor network 
pamas reduces energy consumption powering nodes overhear transmission neighbors 
mac leach pamas govern medium access degree address contention portion medium access protocol 
sift csma protocol implemented concurrently protocols 
proposals energy saving target higher layers transport layer kravets krishnan proposal example 
protocols implemented completely independently sift mac 
topology control protocols number proposals topology control wireless networks 
goal proposals save energy multi hop wireless networks electing subset nodes network coordinators reducing radio ranges nodes 
coordinator set radio ranges chosen way network remains connected 
protocols run mac layer 
goal energy savings topology formation protocols adapted take account decision procedure possible provide alternate solution problem 
non trivial proposal explore option 
note sift building block underlying mac protocols run arbitrate access large numbers nodes need rendezvous time elect coordinators 
reliable multicast feedback damping idea useful contexts including multicast group membership reliable multicast feedback suppression important scalability 
reliable multicast receiver multicast packet sends feedback sender random delay suppressing feedback message hears feedback message receiver 
biersack proposed non uniform probability distribution similar sift scaling reliable multicast avoiding feedback implosion 
problem idea multicast ensure exactly participant send message quickly pick timer values far possible participant reduce chance duplicates 
sift mac protocol wireless sensor networks performs spatially correlated contention occurs adapts changes active population size 
sift tuned sensor networks sufficient sensors observe event report remaining nodes suppressing transmissions 
key idea sift increasing non uniform probability distribution contention window varying contention window size traditional mac protocols 
simulation results show sift improves terms report latency factor number nodes reporting event scales 
schematically summarizes range showed sift better performance variable window protocols 
sift outperforms ratio low bottom left corner large upper right corner 
explain sift high performance showed sift success probability contention slot little bit lower provably optimal contention window mac protocol knows number contending nodes sift simple window csma protocol easy implement 
believe form important lower layer building block variety sensor information dissemination protocols 
dissemination protocols sift mac layer filter dynamically sending control information informing nodes undefined phase plot showing regions phase space shaded sift performs comparison 
protocols degrade increases infinity 
represents number sensors respond event number event reports required event 
suitable value improving report latency network utilization 
interesting direction integrate sift topology formation protocols span gaf improve energy efficiency 
wireless lan medium access control physical layer specifications aug 
ieee standard 
bertsekas gallager data networks second ed 
prentice hall 
bharghavan macaw media access protocol wireless lans 
proceedings acm conference applications technologies architectures protocols computer communication sigcomm london uk pp 

bharghavan performance evaluation algorithms wireless medium access :10.1.1.16.1535
proceedings ieee computer performance dependability symposium durham nc july pp 

cain deering fenner internet group management protocol version 
ietf oct 
rfc 
cal conti ieee wireless lan capacity analysis protocol enhancement 
proceedings conference computer communications ieee infocom san francisco ca vol 
pp 

cal conti dynamic tuning ieee protocol achieve theoretical performance limit 
ieee acm transactions networking december 
chen jamieson balakrishnan morris span energy efficient coordination algorithm topology ad hoc wireless networks 
proceedings seventh international acm conference mobile computing networking mobicom rome italy july pp 

chlamtac making transmission schedules immune topology changes multihop packet radio networks 
ieee acm transactions networking april 
chlamtac zhang time spread multiple access protocols multihop mobile radio networks 
ieee acm transactions networking december 
fullmer garcia luna aceves floor acquisition multiple access fama packet radio networks 
proceedings acm conference applications technologies architectures protocols computer communication sigcomm cambridge ma pp 

fullmer garcia luna aceves fama pj channel access protocol wireless lans 
proceedings international acm conference mobile computing networking mobicom berkeley ca pp 

garc es garcia luna aceves floor acquisition multiple access collision resolution 
proceedings second international acm conference mobile computing networking mobicom ny pp 

heidemann silva intanagonwiwat govindan estrin ganesan building efficient wireless sensor networks low level naming 
proceedings symposium operating systems principles alberta canada october pp 

heinzelman chandrakasan balakrishnan energy efficient communication protocol wireless microsensor networks 
proceedings rd hawaii international conference system sciences hicss january 
intanagonwiwat govindan estrin directed diffusion scalable robust communication paradigm sensor networks 
proceedings sixth international acm conference mobile computing networking mobicom boston ma pp 

kahn katz pister mobile networking smart dust 
proceedings fifth international acm conference mobile computing networking mobicom seattle wa 
kravets krishnan power management techniques mobile communication 
proceedings fifth annual acm ieee international conference mobile computing networking mobicom dallas tx pp 

madden franklin hellerstein hong tag tiny service ad hoc sensor networks 
proceedings fifth usenix symposium operating systems design implementation osdi boston ma december 
madden szewczyk franklin culler supporting aggregate queries ad hoc wireless sensor networks 
proceedings fourth ieee workshop mobile computing systems applications ny june 
mccanne floyd ns notes documentation 
www isi edu vint nsnam 
metcalfe boggs ethernet distributed packet switching local computer networks 
communications acm july 
biersack optimal multicast feedback 
proceedings ieee computer communications societies infocom san francisco ca vol 
pp 

singh woo raghavendra power aware routing mobile ad hoc networks 
proceedings fifth annual acm ieee international conference mobile computing networking mobicom dallas tx pp 

vaidya bahl gupta distributed fair scheduling wireless lan 
proceedings sixth international acm conference mobile computing networking mobicom boston ma pp 

motion software motion detector 
motion sourceforge net 
wattenhofer li bahl wang 
distributed topology control wireless multihop ad hoc networks 
proceedings twentieth annual joint conference ieee computer communications societies infocom anchorage ak april pp 

woo culler transmission control scheme media access sensor networks 
proceedings seventh international acm conference mobile computing networking mobicom rome italy 
xu heidemann estrin geography informed energy conservation ad hoc routing 
proceedings seventh international acm conference mobile computing networking mobicom rome italy pp 

ye lu zhang gradient broadcast robust long lived large sensor network 
tech 
rep ucla 
ye luo cheng lu zhang tier data dissemination model large scale wireless sensor networks 
proceedings eighth international acm conference mobile computing networking mobicom atlanta ga 
ye heidemann estrin energy efficient mac protocol wireless sensor networks 
proceedings st international annual joint conference ieee computer communications societies infocom new york ny june pp 

proof optimality proof theorem corollary provides intuition recursive function defines optimal distribution reduce clutter cw convenience restating theorem 
recall pr sensor wins slot sensors nontrivial 
define distribution maximizes 

proof np np 
np 
sensors choose slot collision 
maximum occurs interior point necessarily determined 

prove induction set equation get np equation true 
assume equation true setting equation gives 

equation follows equation equation equation equation imply equivalently equation true completing induction 
get equation equation setting verify calculus equation defines maximum 
provide intuition show maximum value 
corollary suppose sensors value 
pr sensor chooses slot choose slot 

ii 
iii pr winner sensor chooses slot 
iv maximum value 
proof follows pr 
equation 
ii definition iii induction 
sensor chooses slot sensors collide slot winner case iii true 
assume iii true 
sensor chooses slot winner winner chooses slot sensor chooses slot winner picks slot 
pr winner chooses slot np induction hypothesis ii completing induction iii 
iv pr winner iii 

