context aggregation dissemination ubiquitous computing systems chen david kotz dartmouth college cs dartmouth edu www cs dartmouth edu solar dartmouth computer science technical report tr february ubiquitous computing applications need constant flow information environment able adapt changing context 
support context aware applications propose graph abstraction collecting aggregating disseminating context information 
abstraction models context information events produced sources flowing directed acyclic graph event processing operators delivered subscribing applications 
applications describe desired event stream tree operators aggregate low level context information published existing sources high level context information needed application 
operator graph dynamic combination applications subscription trees 
motivate describe graph abstraction discuss variety critical design issues 
sketch solar system implementation represents point design space graph abstraction 
ubiquitous computing environment called pervasive computing user may interact dozens hundreds computationally enhanced devices user attention scarce resource 
unreasonable expect user configure manage devices particularly devices interactions change environment changes 
research supported darpa contract dod muri contract microsoft research cisco systems university research program usenix scholars program 
comp applications aware context run :10.1.1.24.6338
context aware applications reduce user distraction dynamically adjusting behaviors current context current state user current computational environment current physical environment :10.1.1.29.5833
context information derived array diverse information sources location sensors weather traffic sensors computer network monitors status computational human services 
fundamental challenge ubiquitous computing collect raw data thousands diverse sensors process data context information disseminate information hundreds diverse applications running thousands devices scaling large numbers sources applications users securing context information unauthorized uses respecting individuals privacy 
address fundamental challenge proposing graph abstraction context information collection aggregation dissemination show meets flexibility scalability challenges 
security privacy features scope 
discuss motivation justification graph abstraction section 
section describe specifics graph abstraction 
section discusses design decisions involved realizing graph abstraction section gives overview specific choices prototype solar system 
mention related section summarize section 
motivation arrived graph abstraction considering structure applications consume context informa tion proper location processing sensor data context information structures encourage reuse code derived context information 
structure flexible extensible meet fundamental challenge diversity 
structure scalable 
sketches evolution alternative structures 
context aware application attempts adapt changing context monitoring variety sensors 
depicts application receiving sensor data sources 
application runs platform commonly mobile embedded host 
sensors located infrastructure 
arrangement sends sensor data network link application platform expects application platform capable transforming raw data desired context information 
situation slow unreliable networks low capability mobile platforms arrangement unworkable 
hundreds thousands applications platforms sharing network connection impossible 
common approach construct context service receives raw source data supplies information current context changes context interested applications 
location service seen systems special case approach 
shows processing moved application platform may shared multiple applications 
context service provider defines semantics context information provides 
possible information meets needs applications general applications process output context service 
alternatively application push application specific processing network proxy essentially application specific context service 
demonstrates approach 
note application specific proxy application scale 
need compromise encourages sharing fundamental transformations sensor data context information allows application specific operations network 
possibility shown supply shared context service install proxy application 
takes approach step decomposing context service smaller modules produce context information various types forms 
application specific proxies may select appropriate inputs processing 
see applications needing context information may able share application specific generic processing steps 
section call abstraction operator graph 
burden converting source data context information servers network application platforms 
decomposed graph structure improves flexibility compared monolithic context service improves scalability avoiding centralized context service avoiding transmission unnecessary data application platforms sharing context processing applications possible 
abstraction ubicomp researchers long recognized need context collection aggregation dissemination 
challenge allow applications define operations describe flexible compositions operations support applications scalable performance 
observations preceding section propose abstraction context collection aggregation dissemination directed acyclic graph dag 
abstraction meet fundamental challenges flexibility scalability security discussion security scope 
section introduce operator graph abstraction 
classify types commonly operators sketch example operator graph office scenario 
discuss subtle semantics operator state time subscription requests 
events operators graphs context aware applications respond context changes adapting new context 
applications event driven structure context changes represented events 
graph abstraction represent context information events 
treat sensors contextual data information sources sense physical properties location computational properties network bandwidth 
information sources produce data events 
sequence events produced event stream inherently unidirectional 
event publisher produces event stream event subscriber consumes event stream 
operator object subscribes processes input event streams publishes event stream 
inputs output operator event streams operators connected recursively form directed acyclic graph event flow graph call operator graph 
notice relationship publishers event streams 
event systems entity may publish events event stream 
app app context service app app app app app app circles information sources white squares operators dark rectangles represent application specific processing 
send raw data sources application converts data context information needs 
context service receives raw source data provides higher level context information applications application specific processing necessary 
push application specific processing network proxy 
decompose processing application independent portions application specific portions 
allow multiple applications share data streams possible 
operator graph consists kinds nodes sources operators applications 
sources subscriptions 
wrappers context sensors 
operators deterministic functions input events 
publish event receive input event 
applications sinks graph 
subscribe event streams react incoming events possibly stimuli interactions user 
operator graph directed edge node node represents node subscribes event stream published node operator graph may tree operator may subscribe multiple streams published output stream may subscriber 
summary publishers graph sources operators subscribers graph operators applications 
common categories operators see 
filter outputs subset input events 
example sensor publishes temperature seconds application needs alerts reading exceeds degrees 
transformer inputs events type outputs events type 
may transformer changes attribute values 
example location sensor reports coordinates application needs symbolic value lobby merger simply outputs event receives 
example active map application types operators transformer filter merger aggregator 
displays current location employees merges readings location sensors 
mergers strictly necessary merger subscribers directly subscribe inputs merger aids re event streams 
aggregator outputs arbitrary type event stream events input event streams 
example max min thermometer operator outputs event detects new maximum new minimum input stream current temperature readings 
example operator graph presents example operator graph show raw events information sources flow operators directly usable applications 
circles represent event publishers letter inside indicates category stands source 
squares represent applications consume events 
loc sensor building locator loc sensor active map bob locator bob messenger bob guide monitor lab log equip people 
people monitor example operator graph 
suppose location tracking sensors installed room badges attached people devices 
time sensor detects signal badge sends event containing badge id timestamp 
sources labeled loc sensor room number transforming operator map badge id person device name associated 
building locator operator subscribes current location badge transformed merged events originate location sensors 
records current location internal state 
discuss stateful operators 
generates location change event sees badge change location 
output event stream active map application display badges current location real time 
subscriber bob locator filters changes bob location 
information guide application running bob pda display information related current location 
reasonable structure shown merge events location sensors transform transformer building locator subscribes 
application cares location events particular room filter building locator output 
approach awkward allows building locator resolve sensor conflicts multiple location sensors report seeing badge time 
returning example operator monitor tracks set badges currently lab 
new badge sensed generates badge entering event 
badge sensed past sensor reports operator outputs badge leaving event 
filter people emits events people devices 
application lab log subscribes event stream records events timestamp 
equipment receives leaving event certain equipment receiving leaving event authorized personnel time publishes alarm event sent lab administrator bob messenger application displays alarms pda 
room bob messenger beeps displays message 
people room messenger 
notice messenger subscribes people operator dashed arrow bob room 
subscription dynamic change bob moves 
discuss concept context sensitive subscriptions section 
advantages operator graph abstraction 
applications receive events semantically closer needs produced sources 
second due modular object oriented design benefit operator reusability data abstraction maintainability 
third due modular design operator graph deployed network achieve benefits parallelism distribution 
fourth filters aggregators dramatically reduce traffic graph edges reduce inter process inter host communication requirements 
sharing common operators event streams system support applications users 
operator state operators need keep internal state information processing events 
state may simple aggregator simply records previous event detect changes 
state may complex operator tracks current location users current value stock market 
filter transformation merger operators stateless aggregators may state 
graph abstraction allows subscriber choose possible semantics new subscription stateful operator subscription treated stateless operators operator push current state subscriber new events published 
semantics operator publishes special sequence events new subscriber events marked state pushing events considered represent current state operator 
feature reminiscent gryphon expansion operation 
consider 
monitor maintains list badges currently lab publishes changes list 
lab log logs change events needs original state 
active map hand needs state push subscribes building locator properly locate slow moving devices printers 
time subscription requests operator graph event oriented abstraction publish subscribe interfaces disseminating information applications 
occasionally application may need ongoing event stream simply needs obtain current value 
system application query information source 
operator graph retain publish subscribe abstraction permitting time subscriptions stateful operators 
application needs obtain current value information published operator time subscription operator 
operator pushes state described cancels subscription 
time subscription approach advantages largely resulting simplicity 
abstraction publish subscribe streams events publisher subscriber 
simplicity avoids need additional interfaces maintains unidirectional data flow 
subscriber control flow remains event oriented blocking results query 
programmer subscriber choose time permanent subscriptions needs 
programmer publisher need know queries time subscriptions state push 
context sensitive subscriptions context aware applications aspect context user location subscribe information context set people devices sensors location 
user changes location application cancel subscriptions locate subscribe appropriate sources new location 
location sensitive subscriptions general case call context sensitive subscriptions 
possible application actively monitor user location example user moves manually adjust subscriptions 
reduce programmer effort avoid redundant monitoring context applications aim support context sensitive subscriptions directly infrastructure 
viewpoint graph links representing context sensitive subscription dynamic events may flow different paths context changes 
discuss potential context sensitive names represent context sensitive subscriptions sections 
design space design issues involved realizing operator space abstraction 
section consider representation events name operators event streams route events publishers subscribers operator programming model 
event representation events passed publisher subscriber typically network connection kind 
ultimately representation agreeable publisher subscriber typical approaches event distribution systems 
event may typed object appropriate particular object oriented language set attribute value pairs usually represented lines ascii string small xml document 
representation advantages disadvantages 
object representation allows event include complex data structure desired 
inherent type hierarchy object oriented language typechecking matching subscribers publishers 
furthermore type inheritance allows subscribers process general class events publishers may send events refined subclasses 
example location aggregator receive location event regardless subclasses 
hand object representation usually tied particular language java 
attribute value representation typically limited object representation hierarchical representations ins provide structure wildcards implicit fields provide limited form inheritance 
simpler representation greatly facilitates content event routing see section language platform independent 
xml encoding provides opportunities structure xml adds substantial overhead 
parsing incoming event constructing outgoing event transmitting information verbose xml format reduces event throughput adds substantial latency event flow 
compressing xml reduces bandwidth consumption adds processing overhead 
operator naming primary feature graph abstraction opportunity re event streams applications users 
possible application construct event flow basic sources tree generic custom operators 
application describes tree asks infrastructure deploy operators supporting infrastructure match new description existing graph identify existing event streams satisfy part new request 
life easier application programmers helpful common event streams constructed named administrator users new applications subscribe event streams name 
need method name event streams equivalently operator publishes stream 
incidentally name sources 
possible approaches naming 
name space organized tree file systems 
publishers names name describes path root leaf tree 
example temperature sensor sudikoff room named sudikoff temp sensor 
enhance scalability multiple levels naming may helpful examples exist common example level name hostname filename urls 
name space may structured 
named publisher set descriptive attribute value pairs :10.1.1.21.3642
temperature sensor named sensor temperature room floor building sudikoff 
arguable approach clear advantages 
case name descriptive handle 
case description tuple attributes values case attributes may implicit structure tree 
depend heavily conventions define names attributes structure tree range values names tree links 
conventions structure tree stricter set attributes may tree attractive dynamic ubicomp environment 
important role naming facilitate resource discovery 
tree names wildcard allows application easily describe large set publishers sudikoff temp sensor 
effect obtained attribute system allows partial matches sensor temperature building sudikoff 
intrigued potential contextsensitive names names binding changes context changes 
example people profs bob location temp sensor refer temperature sensor room bob 
subscription name dynamically rebound subscription appropriate publisher bob changes location 
clear encode level indirection attribute approach 
challenge implement large name space efficiently 
tree structure leads efficient name resolution may encounter bottleneck root 
structural conventions may imposed attribute approach improve resolution scalability 
peer peer systems hash full name step locating object associated name clear approach support wildcards context sensitive names 
event routing graph abstraction links publishers directly subscribers routing events publisher set subscribers essentially multicast problem may implemented ways 
simplest approach unicast send copy event subscriber 
approach scale subscribers 
ip multicast supported applications subscribe unsubscribe event streams joining leaving particular multicast groups 
approach requires ip multicast group publisher scalable 
overlay network application level multicast protocol set servers acting multicast routers traditional multicast groups groups defined names :10.1.1.12.7544
take multicast concept step farther content event routing :10.1.1.100.2117
systems overlay network servers called brokers route events subscribers content attributes events simply destination group name 
effect publishers send events global event stream subscribers describe events want receive filters 
siena filters recognize event sequences 
systems encode simple transform operations 
event brokers implement simple merge filter transform operators tempting add complex operators aggregators 
brokers essentially pattern matching engines unclear extended implement complex operators 
systems balance expressiveness scalability 
reasonable compromise content routing routing substrate operator graph 
implement merge simple filter operations event broker layer complicated operators remain independent operators subscribe routing system publish events back routing system 
programming model abstraction provide application programmer programmer may deal explicitly operator graph abstraction composing event stream describing operator tree named sources generic custom operator classes 
programmer may describe desired events named sources descriptive higher level language translated compiler appropriate operator tree 
explicit approach exposes operator tree abstraction programmer 
programmer manually derives event flow produces context information named event streams generic custom operator classes 
uses subscription language describe structure tree 
may optionally name intermediate final event stream 
speculate act manually deriving event flow temptation existing operator classes available encourage programmers derive similar trees similar situations increasing opportunities re event streams 
similarly programmers name event streams users applications 
complex subscription language operator tree abstraction may transparent programmer 
language describe aggregation events named publishers desired context programmer encodes necessary logic program 
compiler translates subscription tree operators deployed way explicit programming model 
challenge invent subscription language sufficiently powerful encode complicated aggregations simple efficiently parse operator tree 
language java highly expressive language sql xquery may offer structure 
language needs structure encourages programmer describe event flow way easily decomposable match applications operator trees 
sophisticated compiler analysis may possible define operators support finer grain sharing graph 
knowledge semantics compiler may possible rearrange operator trees allow matches occurred 
summary discuss design issues realizing operator graph abstraction 
combination different choices result different systems 
example events represented xml documents application programmer xquery programming language describe subscription compiler translate operator tree set filter expressions provide xml event routing overlay network 
section discuss prototype solar system represents combination design choices 
solar interesting characteristics hope explore design choices related prototypes 
solar system building prototype infrastructure context collection aggregation dissemination operator graph abstraction 
describe prototype solar system detail technical report 
focus graph abstraction related design choices 
solar prototype implemented java 
models events java objects uses java serialization event transmission 
operators small java objects implement simple publish subscribe interface 
solar names sources operators tree structured name space 
operators path names sudikoff temp sensor 
extend tree abstraction types soft links 
alias nodes bind name 
unix symbolic link alias nodes designed change binding certain context changes 
alias people profs bob location may bound sudikoff sudikoff bob walks room 
dynamic directories dynamically compute set children context 
example sudikoff people directory children nodes tree nodes represent people 
combination quite powerful example people profs bob location people directory containing list people located bob 
list changes bob moves people enter leave bob current room 
solar naming conventions encode context name space 
dynamic context captured dynamic soft links 
enable applications monitor changes namespace changes encoded context namespace nodes publishers 
directories publish changes set children aliases publish changes binding 
aliases dynamic directories operators subscribe context information necessary change binding set children 
context sensitive namespace encourage applications subscribe context sensitive names 
application desiring track set people bob meets day subscribes operator name people profs bob location people receives event changes set people surrounding bob 
show solar supports subscriptions context sensitive names 
center solar system star keeps root naming tree maintains operator graph services requests new subscriptions 
star receives new subscription tree description parses description checks name space matches subscription tree internal data structure representing operator graph 
decides deploy operator instantiates operator object planets 
planet execution platform solar sources operators 
applications run outside solar system small solar library allows send requests star manage subscriptions standard network protocols 
planets play key role subscriptions resident operators 
deploying new subscriptions star tells planets record subscription operators operator planet 
implementation network tcp ip connection planets regardless number operators subscriptions planets 
planets support subscription requests involve context sensitive names 
subscription requests mapped subscriptions need changed csn binding changes 
consider operator records name person bob meets 
operator requests subscription csn people profs bob location people currently bound operator planet subscribes name people profs bob location 
planet receives current binding subscribes bob moves suppose binding changes operator planet contacts planet remove data structure contacts planet add data structure 
done planets namespace operators involved 
aspects solar architecture key scalability flexibility 
step experiment solar real world context sensitive mobile applications determine value abstraction performance system 
installed ir location system versus technologies supply location context solar system applications 
plan add information sources enrich context space explore performance flexibility operator graph abstraction 
solar unique mechanisms access control authorization description scope 
www com related studied context aware applications support systems 
xerox parc distributed architecture user agent collects context location user decides context delivered user policy 
laboratories cambridge built dense network location sensors maintain world model shared users applications :10.1.1.12.1285
location context select onthe spot information tourist guide applications 
hp cooltown project adds web context environment allowing mobile users receive urls sent ubiquitous beacons 
hp easyliving focuses smart space aware user presence adjusts environmental settings suit needs 
projects specifically address flexibility scalability context aggregation dissemination 
solar context toolkit distributed architecture supporting context fusion delivery 
uses widget wrap sensor sensor queried state activated 
applications subscribe pre defined aggregators compute commonly context 
solar allows applications dynamically insert operators system compose refined context shared applications 
context toolkit allows applications supply filters subscriptions solar introduces general filter operators maintain simple abstraction 
type desired data systems automatically construct data flow path sources requesting applications selecting chaining appropriate components system repository 
cans replace rearrange components adapt changes resource usage 
apply approach support context aware applications system manager foresee necessary event transformations install component repository 
systems offer specific support applications provide custom operators 
active names hand allow clients supply chain generic custom components data service pass 
active streams support event oriented interprocess communication allow application supplied dynamically inserted data path 
approaches encourage re standard components construct custom event flows 
knowledge specifically encourage dynamic transparent re event streams applications users 
solar re operator instances event streams avoids redundant computation data transmission improves scalability 
solar designed support wide variety sensor data including computational physical parameters 
solar may delivery mechanism systems allow mobile applications adapt changes computational resources 
example odyssey applications aware state resources adapt variations bandwidth battery power :10.1.1.121.328
discuss section options event routing 
solar currently uses point point links publisher subscribers 
implementation multiplexes links planet planet socket connections implements multicast planet may eventually construct overlay multicast network planets 
may consider content event routing support operator graph :10.1.1.100.2117
ultimately need evaluate solar explicit filter operators efficient implicit filtering content event routing system siena 
solar names publishers 
may able names addresses routing 
peerto peer systems typically hash full text name id purpose routing 
approaches easily support context sensitive subscriptions 
summary support context aware mobile applications propose graph abstraction context aggregation dissemination 
abstraction models contextual information sources event publishers 
events flow graph event processing operators customized context individual applications 
graph structure motivated observation context aware applications diverse needs requiring application specific production context information source data 
hand applications unique needs expect substantial opportunity share processing applications users 
situation calls flexibility scalability proposed operator graph abstraction meets challenges 
allows flexible construction event streams composition generic custom operators 
encourages scalability re event streams applications users possible migrating load weak mobile application platforms powerful network servers distributing load network servers 
discuss details operator graph abstraction types operators semantics stateful operators time subscriptions context sensitive subscriptions graph dynamic 
ways realize graph abstraction supporting system discuss design issues involved event representation operator naming event routing programming models 
give overview solar system implements graph abstraction 
interested readers find details technical reports solar smart reminder application built top solar 
abowd atkeson hong long kooper pinkerton 
cyberguide mobile context aware tour guide 
wireless networks october 
adjie winoto schwartz balakrishnan lilley 
design implementation intentional naming system 
proceedings th acm symposium operating systems principles pages kiawah island resort south carolina december 
banavar kaplan shaw strom sturman tao 
information flow event distribution middleware 
proceedings middleware workshop th ieee international conference distributed computing systems austin texas may 
ieee computer society press 
birrell levin needham schroeder 
grapevine exercise distributed computing 
communication acm april 
brumitt meyers krumm kern shafer 
easyliving technologies intelligent environments 
proceedings second international symposium handheld ubiquitous computing pages bristol uk september 
springer verlag 
carzaniga rosenblum wolf 
achieving scalability expressiveness internet scale event notification service 
proceedings nineteenth annual acm symposium principles distributed computing pages portland usa july 
carzaniga rosenblum wolf 
design evaluation wide area event notification service 
acm transactions computer systems august 
chen kotz 
supporting adaptive ubiquitous applications solar system 
technical report tr dept computer science dartmouth college may 
cohen turek wong yeh 
challenges flexible aggregation pervasive data 
technical report rc ibm tj watson research center january 
dabek kaashoek karger morris stoica balakrishnan 
building peer peer systems chord distributed lookup service 
proceedings th annual workshop hot topics operating systems germany may 
davies cheverst mitchell friday 
caches air disseminating tourist information guide system 
proceedings second ieee workshop mobile computing systems applications new orleans louisiana february 
dey 
providing architectural support building context aware applications 
phd thesis college computing georgia institute technology december 
druschel rowstron 
past large scale persistent peer peer storage utility 
proceedings th annual workshop hot topics operating systems germany may 
schwan 
middleware toolkit client initiated service specialization 
operating systems review april 
flinn satyanarayanan 
tool profiling energy usage mobile applications 
proceedings second ieee workshop mobile computing systems applications new orleans louisiana february 
ieee computer society press 
fu shi karamcheti 
cans composable adaptive network services infrastructure 
proceedings rd usenix symposium internet technologies systems san francisco california march 
usenix 
harter hopper steggles ward webster :10.1.1.12.1285
anatomy context aware application 
proceedings fifth annual acm ieee international conference mobile computing networking pages seattle wa august 
heidemann silva intanagonwiwat govindan estrin ganesan 
building efficient wireless sensor networks low level naming 
proceedings th acm symposium operating systems principles pages chateau lake louise canada october 
hong landay 
infrastructure approach context aware computing 
human computer interaction 
jannotti gifford johnson kaashoek toole jr overcast reliable multicasting overlay network :10.1.1.12.7544
proceedings forth symposium operating systems design implementation pages san diego ca october 
fox 
dynamic mediation integrate cots entities ubiquitous computing environment 
proceedings second international symposium handheld ubiquitous computing pages bristol uk september 
springer verlag 
kindberg barton morgan becker gopal krishnan morris se 
people places things web presence real world 
proceedings ieee workshop mobile computing systems applications pages monterey california december 
ieee computer society press 
kubiatowicz bindel chen czerwinski eaton geels gummadi rhea weatherspoon weimer wells zhao :10.1.1.13.4675
oceanstore architecture global scale persistent storage 
proceedings th international conference architectural support programming languages operating systems pages cambridge ma november 
kung 
content network 

lampson 
designing global name service 
proceedings th acm symposium principles distributed computing pages ontario 
mathias 
case study contextsensitive applications 
technical report tr dept computer science dartmouth college june 
senior honors thesis 
mccarthy 
active map visualization tool location awareness support informal interactions 
proceedings international symposium handheld ubiquitous computing pages karlsruhe germany september 
noble satyanarayanan narayanan flinn walker :10.1.1.121.328
agile application aware adaptation mobility 
proceedings th acm symposium operating systems principles pages saint malo france october 
satyanarayanan 
pervasive computing vision challenges 
ieee personal communications august 
schilit adams want :10.1.1.29.5833
context aware computing applications 
proceedings ieee workshop mobile computing systems applications pages santa cruz california december 
ieee computer society press 
schilit 
system architecture context aware mobile computing 
phd thesis columbia university may 
schmidt tuomela laerhoven de velde 
advanced interaction context 
proceedings international symposium handheld ubiquitous computing pages karlsruhe germany september 
snoeren gifford 
mesh content routing xml 
proceedings th acm symposium operating systems principles pages chateau lake louise canada october 
spreitzer theimer 
providing location information ubiquitous computing environment 
proceedings th acm symposium operating systems principles pages december 
vahdat dahlin anderson aggarwal 
active names flexible location transport wide area resources 
proceedings nd usenix symposium internet technologies systems boulder colorado october 
usenix 

