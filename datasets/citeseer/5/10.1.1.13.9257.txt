building virtual framework networked reconfigurable hardware software objects ha serge patrick marc engels hugo de man leuven belgium department electrical engineering leuven leuven belgium 
virtual framework uses hardware software reconfigurable objects 
new framework supports networked hardware software reconfiguration 
virtual framework networked reconfiguration users need develop single service description targeted single hardware software platform 
service able write run 
facilitates new service deployment maintenance 
components design flow implementation aspects virtual framework 
keywords reconfiguration computer architec ture design methodology 
reduce time market react fast changing standards time software hardware reconfiguration widely industry 
rapid development internet enabling technologies trend software hardware reconfiguration network 
updating software network new enhancements bug fixes fairly common electronics industry 
remotely reconfiguring hardware uses programming logic devices field programming gate arrays fpgas new concept sys tem manufacturers just em brace 
networked hardware reconfiguration hardware reconfiguration information transported software service provider client 
enables add new hardware features fix existing ones sending technician field 
results big maintenance deploy ment savings 
client web movie controller native fpga application bitstream code demultiplexing network service provider web page downloading choose movie service software bytecode hardware bytecode deployment web movie service virtual framework 
networked reconfiguration hardware software major impact current internet service industry 
service web movie see fig 
ex ample show new services expected deployed maintained coming 
suppose client wants watch web movies 
web movie player movie files stalled side 
goes web page web movie service provider finds list movies available 
client points mouse items chooses favorite movie 
receiving request client service provider detects client movie player 
automatically sends movie player service byte file client 
service successfully installed client web movie player playback movie files provided service provider site 
web movie service combination software hardware bytecode realizes web movie player 
normally software bytecode describes user inter face hardware software interface computationally non intensive functions player 
hardware bytecode describes fpga reconfiguration information implements computationally intensive functions video decoding 
preparing reconfiguration information bytecode format im plemented wide variety fixed hard ware processors reconfigurable hardware fpga platforms web movie service provider needs write service run client platform 
service web movie devel oped virtual platform networked reconfigurable hardware software objects 
discusses components design flow implementation aspects virtual framework 
section describe components comprise virtual framework 
section application design flow introduced 
innovative component virtual framework hardware virtual machine discussed sec tion 
section service format briefly explained 
framework description section introduces components virtual framework 
components residing service providers clients respectively 
shown fig 

explain blocks unique framework 
framework components framework components service provider client hardware software design software vm hardware bytecode binder 
components virtual frame 
components service provider framework components service provider include hardware software codesign environment software hardware virtual machine service byte code binder 
current codesign environments enable designers partition application system hardware software desired performance resource tradeoff 
tools codesign environment application partitioned different parts implemented hardware software 
achieve goal write run hardware software parts application mapped respective virtual machines 
generated software hardware bytecode combined bytecode binder service 
service information transported service provider client 
components server side hardware virtual machine precompiler new block needs elaborated 
hardware virtual machine precompiler hardware virtual machine precompiler generate fpga routing information 
gate level netlist hardware design compiled technology mapped fpga architecture model discussed section 
placed pre routed model 
resulting physical design information written hardware bytecode file 
fpga model bridge precompiler 
components client framework components client include software hardware virtual ma chines architecture specific operating system asos fixed hardware cpu reconfigurable hardware fpgas 
compared traditional components terminal hardware virtual machine architecture specific operating system especially added build networked virtual framework 
hardware virtual machine hardware virtual machine corresponds virtual machine software part 
works software virtual machine separate architecture architecture independent part architecture specific part 
hardware software byte code run hardware software virtual machines respectively 
providing virtual world service provider needs provide service description targeted virtual platform comprised svm 
implementation aspects discussed section 
architecture specific operating system traditional terminal architecture asos real time operating system 
scalable architecture fixed hardware cpu reconfigurable hardware fpgas 
new resource manager manage fixed reconfigurable hardware needed 
new re source manager asos 
elaborated scope pa 
design flow section introduces design flow service development virtual framework 
describes design flow service providers clients 
design flow service provider side service provider side new service requirement thoroughly analyzed studied designers 
stage service represented functional mod el 
functional model written special toolkit matlab general high level languages java 
functional model partitioned sub models hardware software codesign environment 
sub model describes application part implemented software 
describes application part implemented hardware 
third describes interface partitioned hardware software sub models 
sub models software inter face gone various phases software development generates detailed source code implement sub models 
detailed source code precompiled software bytecode software virtual machine precompiler 
sub model hardware fed hardware design environment 
application concept functional modeling problem partitioning software interface hardware funct model functional model funct model software development source code software virtual machine software bytecode service bytecode binder behavioral synthesis synthesis place fpga bytecode network demultiplexer software hardware virtual machine virtual machine software bitstream user interface interface service provider side client side design flow virtual framework 
havior synthesis sub model hardware transformed register trans fer level rtl hardware description 
rtl description hardware generate gate level netlist logical synthesis 
hardware bytecode obtained placing pre routing gate level netlist fpga model 
hardware software bytecodes sent service bytecode binder produces combined service 
design flow client side client side received service software hardware bytecode respectively 
software bytecode interpreted software virtual machine turned native application software code runs native cpu 
hand hardware bytecode interpreted hardware virtual machine turned native fpga bitstreams configure native fpga 
native application software code fpga bitstream obtained native application software code define programmable interface controller 
defined interface native fpga bitstreams sent fpga reconfiguration 
reconfigured fpga hardware accelerator 
native application soft ware code interacts fpga ator programmed interface 
native application software code sends parameters variables interface gets results interface fpga accelerator finished processing 
native application software code provides graphic user interface menus interact user 
hardware virtual machine described section section hardware virtual machine tive component framework 
researched field 
section describes hardware virtual ma chine 
additionally implementation fpga model converter briefly introduced 
hardware bytecode topics section discuss service format 
virtual fpga model commercial fpgas fpga model see fig 
contains blocks 
logic block routing architecture pad 
logic block segment fpga architecture 
logic block logic block fpga strongly influences fpga speed area efficiency 
different logic blocks fpgas current commercial fpgas logic blocks lookup tables luts 
accordingly research build logic block lut fpgas 
basic logic block shown fig 

contains input lut choose example implement combina tional logic flip flop implement sequential logic multiplexer choose put :10.1.1.41.4505
pin locations logic block chosen randomly mapped real pin locations client fpga 
combination basic logic blocks describe series commercial logic blocks altera fpgas xilinx series 
blocks ways treated simpler logic block 
comprises pads choose example programmed input output basic logic block fpga 
pad 
similarly pins logic block pad locations chosen freely 
position logic block pad specifically defined coordinate system 
routing architecture routing architecture commercial fpgas classified groups 
fpgas xilinx lucent island style fpgas fpgas row altera fpgas hierarchical 
routing architecture fpga model describe groups 
consists array channel segments channel segments fig 

path pins pin pad abstractly described combination channel segments 
position channel specifically defined coordinate system 
part fig 
shows example describe net 
virtual fpga model converter virtual fpga model converter fulfills task interpreting hardware bytecode local fpga programming files hardware bytecode received service provider network 
converter partitions job steps 
converter logic block rebinding 
fpga logic blocks mapped local logic block architecture 
depending large local logic block logic blocks combined new big block 
steps local modification lrm tracks coordinate adjustment 
phase path net hardware passes channel illegal logic block rebinding modified legal channels 
logic blocks rebound local logic blocks illegal tracks removed coordinate system fpga converted local fpga coordinate system 
routing information represented local coordinate system 
converter pin reassignment lrm pins 
pin location logic block reassigned map real location pins local fpgas 
similarly pads converter needs pad reassignment lrm pads 
detailed routing done accurately assign path net track 
details virtual fpga model converter please refer 
service format section discusses format service bytecode file 
service consists stream bit bytes 
service contains hardware software bytecode 
software bytecode framework java bytecode 
software bytecode format follows strictly java class file mat java software bytecode file called class 
hardware bytecode describes hardware accelerator part service application 
standard hardware bytecode define hardware bytecode format 
hardware bytecode format explained example 
coordinate system routing information net described fig 

textual descrip application name example net net name opin pad net name net net name pad appl routing results example application fpga architecture code node type application name node attribute hardware byt net name oo name bytecode segment net hardware bytecode format example bytecode segment net 
tion routing information convert ed binary bytecode segment fig 
format defined fig 

fig 
shows code represent dif ferent kinds routing resources bytecode 
combining software hardware bytecodes service format table 
service magic item supplies magic number identifying service bytecode file 
values bytecode binder version java precompiler version hardware vm precompiler version version numbers produce service bytecode file 
version numbers help demultiplexer software hardware virtual machines decide support service bytecode files generated versions 
value java class count hardware count items greater zero 
give number java class files hardware bytecode files contained application 
java class files follow magic bytecode binder version ava version hardware vm precompiler version java class count java class 
java classes java class java class count hardware count hardware 
hardware hardware hardware byt count table service format 
format defined specification 
hardware bytecode files follow format defined fig 

virtual framework networked discussed 
frame service application abstractly described software hardware objects 
service written run 
greatly helps service providers deploy new services especially need hardware accelerators improve performance 
stinson 
re mote field updates fpgas 
white papers xilinx 
ha engels de man scalable architecture support networked reconfiguration 
proceedings ieee pp 
november 
kress 
java driven codesign prototyping networked embedded systems 
proc 
design automation conference pp 
new orleans 
ha engels de man hardware virtual machine support networked reconfiguration 
proceedings th international workshop rapid system prototyping paris june 
tim frank 
java virtual ma chine specification 
addison wesley reading mass 
miyazaki 
ant fpga mpu hybrid architecture telecommunication data processing 
ieee trans 
vlsi systems pp june 
altera 
data book january 
xilinx programmable logic data book 

yang 
logic synthesis optimization benchmarks version 
technical report microelectronics center north carolina 
sis system sequential circuit analysis 
technical re port 
ucb university california berkeley 
cong ding 
op technology mapping algorithm delay optimization lookup table fpga design 
ieee trans 
cad pp 
rose :10.1.1.41.4505
vpr new pack ing placement routing tool fpga research 
int 
workshop logic applications pp 

