combining collaborative content filtering conceptual graphs patrick paulson miami university department computer science systems analysis oxford oh usa edu university cyprus department computer science box nicosia cy cyprus ac cy 
collaborative filtering content filtering techniques design recommender systems support personalization 
information available user information collection users system processed number ways order extract useful recommendations 
algorithms developed briefly introduce attempt improve performance maximizing accuracy predictions 
describe novel algorithm user models represented conceptual graphs report results obtained eachmovie dataset 
compare algorithms average error prediction standard deviation discuss method strengths advantages 
necessity system originated recommendation imperative human computer interaction complicated 
software packages complex number provided services increasing range selection widening user general confronted numerous dilemmas 
recommender systems guide user processes recommending paths solutions alternatives new ideas 
recommendation cases regarded extension prediction process frequently takes place user modeling systems predicting single item user profile information set items predicted similar fashion 
predicted items play role items recommended user 
remainder article explore key approaches designing recommender systems content collaborative filtering 
category philosophy summarized user mainly characterized content items shows interest recommendations guided pre known interests 
contrary collaborative filtering user seen part group relation users system 
view leads recommendations similar users interests 
subsequently describe number hybrid systems combined methods relatively different route 
introduce novel hybrid system combines conceptual graphs knowledge representation 
strengths advantages approach demonstrated presentation set experimental results experiments compare competing algorithms 
recommender systems definition common situation computer system users browsing web find information trying purchase line just trying gain experience software package finding wondering right decision 
user look correct keywords queries order find particular items 
computer system may requested book example appropriate user personal needs abilities 
need suggestions exists human relationships mentor expertise knowledge particular area person lacks knowledge 
ultimate goal computerized recommender system mentor provide help tailored particular user person 
recommender systems provide recommendations users article focuses systems rely user modeling order provide personalization 
recommender systems designed built address issues described providing options alternatives choices suitable selections particular user 
fact recommender systems regarded information agents serve users trying provide information best serves needs 
personalization identified primary objective online systems 
existing techniques number techniques design recommender system 
categorize techniques content social collaborative hybrid 
content techniques content techniques user model includes information content items interest web pages movies music 
items basis technique identifies similar items returned recommendations 
techniques prove highly suitable users specific interests looking related recommendations 
machine learning techniques applied problem 
researchers working chen jennings higuchi modeled users application neural network methodology 
newsweeder belong category content recommender systems :10.1.1.44.8942
limitations content techniques new topics explored similar topics user profile 
leads specialization restricted seeing items similar rated highly 
addressed cases injection randomness 
content techniques difficult apply situations desirability item example web page determined part multimedia content aesthetic qualities 
types materials generally incompatible type content analysis techniques require order recommendations 
additionally recommender systems kind frequently require feedback relevance suggestions 
users find generating feedback tedious task try avoid 
user model systems consists entirely user ratings items interest 
recommendations solely making main factor influencing performance fewer ratings limited set possible recommendations 
systems machine learning techniques developed literature 
feedback required machine learning techniques need learning process 
techniques require lengthy computation learn user preferences 
computed user preferences remain static 
process need repeated frequency depends quickly user model changes 
collaborative filtering techniques social collaborative filtering system constructs rating profiles users locates users similar rating profiles returns items similar users rated highly 
content techniques systems depend users providing ratings feedback 
scarcity ratings scalability issues social filtering 
user profiles case usually sparse vectors ratings 
partial solution implicit feedback methods increase density dataset 
scalability problem computation grows linearly number users items 
finding nearest neighbors active user order retrieve recommendations task requires definition term similarity particular system 
main points collaborative systems differ 
specifying users considered similar determines performance system terms accuracy recommendations 
keeping mind user considered unusual profile interests probably similar users lead poor recommendations 
information content items kept users similar identical interests considered similar 
collaborative filtering system tapestry significant research field 
algorithms collaborative filtering specifically computing aforementioned similarity users 
examples include pearson correlation coefficients users preference functions vector similarity probabilistic distance measure nearest neighbors bayes rule mean squared differences :10.1.1.44.8942:10.1.1.21.4665:10.1.1.136.4322
advantage social filtering compared content techniques pool recommendations originate restricted items active user demonstrated interest 
pool include items users users respect similar rated highly 
prove instrumental enhancing user model social filtering systems give user opportunity explore new topics items 
breese divide collaborative filtering algorithms memory model techniques 
memory collaborative filtering algorithms predict user rating particular item similarity weighted sum user ratings 
method calculate weights distinguishing characteristic algorithms category 
model algorithms depend model bayesian network built represent user data 
model subsequently queried get recommendations 
construction model learning process time consuming 
time required run hours significant especially user models dynamic 
advantage model determined recommendations returned great speed 
collaborative filtering recommendations comparison models active user population users user models sets votes 
common shortcoming collaborative filtering algorithms recommendations come users active user shares votes 
example pearson correlation coefficient finds similarity user sim user vote item number items users recorded votes mean vote user 
consequently items exist user models contribute similarity 
lead problems relatively votes available active user users comparisons 
default voting overcome problem 
method default votes assigned unobserved items overlap users compared items user observed order increase total number votes 
appropriate default votes user average vote average vote users particular item 
additional extensions memory algorithms include inverse user frequency case amplification 
inverse user frequency borrows main principle inverse document frequency measure information retrieval 
measure words occur frequently documents considered representative document words rarely occur indicative document topic 
collaborative filtering context principle applied transform similarity users methods minimize weights universally liked items compared items liked fewer users 
case amplification transformation applied weights strengthens higher weights weakens lower ones 
hybrid techniques hybrid techniques promise combine positive features content social filtering methods diminish shortcomings produce robust system 
philosophy content items taken consideration identifying similar users collaborative recommendation 
alspector provide evidence collaborative filtering systems enhanced adding content filters 
fab developed stanford university operational uses ideas 
personal group filter altered user relevance feedback 
fab users receive recommendations collection agents represent particular interest area selection agent operates exclusively particular user interests 
grouplens project started university minnesota successfully dealt problem applying collaborative filtering usenet news 
domain greatly different previous movie music related domains new items relatively infrequent lifetimes relatively long 
grouplens team showed collaborative filtering coupled personalized information agents leads better recommendations 
team approach termed item collaborative filtering analyzes user item matrix identify relationships different items uses indirectly compute recommendations 
claypool gokhale miranda system blend content collaborative filters leave entirely separate 
prediction weighted average content prediction collaborative 
weights determined item basis number users votes increase corresponding prediction weight collaborative increased 
basu hirsh cohen proposed inductive learning approach recommendation able user votes forms information item 
return predicted vote return classification liked disliked particular item 
hybrid system conceptual graphs method hybrid approach attempts maintain advantages employer european user attr age agent watch european news high tv programs content social filtering methods 
specifically employ conceptual graphs means representing information user information rated items 
significant advantages including ability capture relationships concepts 
important feature ability maintain domain dependent knowledge pertaining similarity type lattice accommodates intrinsic notion hierarchical ordering concepts 
introduced similarity measure comparison fuzzy conceptual graphs described user modeling 
approach falls memory category breese consider library users sources information prediction build model subsequent 
construct conceptual graphs form user models data available 
ideally user model represent user accurately possible 
believe information captured restricted type user ratings preference items include potentially useful details user job age group characteristics 
leads complete complex picture user 
models include content information voted items merely titles items 
system considered hybrid depends content knowledge ratings users determine recommendations 
expert obj european markets age domain medium high high content level domain fig 
example user model content radar memory collaborative systems predicting interest ip particular user termed probe user done determining similarity user users system library users rated item question 
predicted rating weighted average library user interest 
conceptual graph similarity st conceptual graphs directed graphs types nodes concepts relations 
concept associated concept type relation associated relation type 
concept associated particular value called referent 
arcs flow concepts relations relations concepts 
relation limited incoming arc relations type number outgoing arcs 
earlier defined similarity measure conceptual graphs probe lib maximum sum concept similarity legal matchings concepts relations graphs 
matching legal relations graph matched relations type graph 
furthermore matched relations incoming arcs concepts cprobe concepts cprobe paired matching 
similarity concepts cprobe referents types probe st probe rt probe sr referent similarity st type similarity described 
relation type similarity srt cprobe new term describes similarity relations concepts cprobe outgoing arcs 
noted relation type similarity measure srt cprobe communicative 
necessarily true srt cprobe srt cprobe 
may information available user 
know probe user matched library user similarity high additional information known library user 
know little library user know matches information probe user similarity measure high 
referent similarity considerable expressiveness added user model fuzzy referents allowed concepts 
fuzzy referent specifies fuzzy set associated concept 
instance eachmovie application described fuzzy sets represent user rating movie bomb stars 
similarity fuzzy referents computed means unification associated fuzzy sets 
crisp referents hand similarity 
type similarity zero star star star star star star fig 
fuzzy sets ratings domain type lattice partial ordering defined set concept types plays crucial role approach unique approach providing knowledge user similarity particular domains 
type labels means subtype super type written called proper subtype written proper super type written consider type label common subtype common super type requirements types type lattice eachmovie ratings domain pair type labels minimal common super type written lub maximal common subtype written glb primitive types needed universal type absurd type type world news tv programs european news fig 
type lattice european topics type similarity st types determined type lattice formula lub depth node type lattice 
measure intuitive notion amount similarity possible concepts types increases known types 
example instances ballet known similar instances foot wear 
main shortcomings methods scarcity information users user models include information users provided system feedback 
result systems pictures users incomplete comparisons necessarily yield correct results 
existing systems determine similarity users users voted generally shown interest exact topics 
type lattice way method addresses problem 
users voted topics related type lattice method explore similarity operate data 
example user watch tv programs related european news watch programs related world news 
topics identical definitely similar respect 
type lattice described european news proper subtype world news type lattice system fact determine similarity users 
relation type similarity important component concept similarity collaborative filtering problems relation type similarity 
collaborative filtering problems user concept may outgoing arcs numerous relations represent user rating various items 
users ratings similar items agree determines large degree similarity users 
concepts cprobe concepts compared graphs 
relation nodes concepts arcs grouped relation types 
example user concepts eachmovie experiments links relations types age gender zip movie rating 
relation type relations cprobe arcs paired relations arcs sum match degree matched relations maximized 
eachmovie application example match degree movie rating relations depend content similarity movies rated 
pairing maximizes match degree particular relation type average relation similarity paired relations taken number relations type probe concept arcs 
eachmovie application relation similarity movie ratings depends content similarity movies rated rating user gave respective movie 
stage asymmetry relation type similarity introduced 
average taken number relations probe concept arcs impossible get high degree similarity deal known library user opinions probe user opinions 
final step finding relation type similarity concepts cprobe take weighted average types relations cprobe links average relation similarities computed 
final weighting step provides additional flexibility 
weights determined type concept cprobe 
experiments described weights set similarity movie ratings criteria comparing users 
computational complexity conceptual graph operations memory collaborative filtering systems scalability concern method number comparisons grows linearly number users user library 
description conceptual graph operations appear similarity operation conceptual graphs require computation practical 
conceptual graphs arise practice similarity metric tractable 
expensive operation finding correct match relations determining relation type similarity 
problem reduced problem finding maximal matchings bipartite graph know polynomial time solutions 
results reported indicate method require fewer library users methods order obtain accurate results 
experimental results testing method eachmovie dataset provided compaq systems research center 
data collected month period consists users voted movies movie votes 
user ratings range zero stars 
zero stars indicate extreme dislike stars indicate maximum delight 
feel linguistic values treat fuzzy sets algorithm 
referents concept nodes particular observed movie type 
fuzzy sets defined ratings domain depicted 
example conceptual graph experiments shown 
parts graph included due lack space 
experiments performed protocols defined breese 
protocols 
protocol randomly selected vote removed user profile attempt predict value 
protocols votes selected respectively considered observed votes predict remaining votes 
generally experiment illustrates algorithm performance plenty data available user experiments test algorithm performance data available 
director joseph actor davis actor baxter anne actor sanders george title eve title directed cast cast cast produce year rating star voted keywords user movie keywords actress new york voted keywords director kenneth theater actor blair david movie actor richard fig 
example conceptual graph created eachmovie data specifically referring protocol select user active user 
randomly remove observed movie vote try predict remaining information user model information library users models 
library users voted movie question considered stage 
algorithm employed particular protocol outlined 
take user call active user select random movie active user rated call test movie 
remove rating active user record words re simulating case don know user rating test movie user call user library user library user isn active user library user rated test movie determine similarity library user active user multiply active user rating test movie similarity users sum product computed library user fig 
testing algorithm apart movie ratings user model include information user age group residence location information comparison current experiments similarities ratings similar movies 
hand large cast age sex zip cast cast title actor pc age male rating star keyword keyword keyword produce title hamlet love king year amounts content information observed movies including themes actors director determine similarity movies 
evaluation system performed measuring predicts vote removed time 
primary evaluation metric average error absolute value difference prediction actual rating summed users divided number users 
computed standard deviation demonstrates predictions fairly accurate users excellent bad 
ran experiments sets 
results depicted tables 
algorithms compared originate eachmovie dataset experiments 
algorithm uses pearson correlation coefficient case amplification labeled corr tables uses coefficient inverse user frequency transformation case amplification labeled inv tables 
default votes value user average vote systems 
pop algorithm uses mean average vote movie predicted vote user 
method labeled cg 
bold face indicates lower value pop 
users selected tests rated movies protocol data 
stress randomly selected users protocols algorithms randomly selected ratings protocol 
table 
protocol system users avg 
error std 
dev 
pop corr inv cg pop corr inv cg pop corr inv cg pop corr inv cg pop corr inv cg table 
protocol system users tests avg 
error std 
dev 
pop corr inv cg pop corr inv cg pop corr inv cg pop corr inv cg pop corr inv cg table 
protocol system users tests avg 
error std 
dev 
pop corr inv cg pop corr inv cg pop corr inv cg pop corr inv cg pop corr inv cg experimental results see algorithm performs consistently better algorithms compared 
tests outperformed pop contrast remaining methods perform cases 
specifically protocol algorithm performance terms average error standard deviation times significantly better methods number users system small difference diminishes group users grows larger 
characteristic apparent observing results obtained remaining protocols methods tested behavior data available 
algorithm match performance pop small data set protocol experiments determine anomaly 
protocol run experiments additional sets users apiece formed randomly selecting users observed movies profile 
results summarized table include number datasets algorithm showed better performance lower average error lower standard deviation comparison pop best performance 
algorithm outperformed pop time corr inv methods managed beat time respectively 
cg algorithm scored best average error standard deviation time 
table 
protocol system users tests avg 
error std 
dev 
pop corr inv cg pop corr inv cg pop corr inv cg pop corr inv cg pop corr inv cg table 
summary protocol test results datasets randomly selected users method avg 
error avg 
std 
dev 
better avg 
better std 
dev 
best avg 
best std 
dev 
cg corr inv pop analysis results prediction conceptual graphs means representing users inference competitive filtering methods demonstrates superiority experiments conducted eachmovie dataset 
users case profile consists details user movies rated ratings 
capturing details observed movies include titles include vital information movie genre director actors approach able identify similarities movies result source extract vital information 
example match user observed movies observed different similar movies method fact detect similarity consider users somewhat similar 
methods compute similarity common movies user models find users example dissimilar 
shortcoming serious limited data available dealt adding votes models techniques default voting 
method require extensions performance remains unaffected circumstances 
advantage supported fuzzy sets means representing dealing votes 
way strictly define boundaries star vote star vote second exactly definition 
assuming crisp numbers automatically lead consider ratings star star entirely different fact 
fuzzy star star votes matched compute similarity exploited interpreted supporting factor matching movies 
similarity users increase similar movies observed similar ratings movies 
article new algorithm recommender systems support personalization 
algorithm uses conceptual graphs represent users reason 
conceptual graphs proven suitable means representation successfully application areas 
shown numerous advantages field user modeling 
information captured unique way relating concepts time allowing manipulation 
algorithm lies collaborative filtering category methods due fact employs information available library users order predictions contentbased filtering category uses significant information items user selected 
combination sources provides complete user model model apparently leads better recommendations 
algorithm tested widely purposes eachmovie dataset yielding results undoubtedly indicate wide range conditions outperforms competing methods 
results show method promising explored 
algorithm uses fuzzy values limited number fields believe broadened include additional fuzzy concepts 
great number concepts participate formation user model seen vague unclear lending computation fuzzy sets 
vagueness obvious characteristic communication today rarely speak precise manner nearly imprecise words phrases 
bearing mind natural try describing user 
descriptions rarely crisp representation reasoning fuzzy sets suitable case 
route answers fuzzy 
example meaningful useful return answer similar point value shows similarity 
algorithm article shown significantly improve process recommendation 
definitely possible area application 
theoretically applied area involves personalization fact technique capturing information manipulating assist user 
assistance take forms adapting content web pages proposing solution problem difficulty 

resnick varian recommender systems 
communications acm 

wahlster kobsa user models dialog systems 
kobsa wahlster eds user models dialog systems 
springer verlag heidelberg berlin 
kobsa koenemann pohl personalized hypermedia presentation techniques improving online customer relationships 
knowledge engineering review 

chen modeling user domain knowledge neural networks 
international journal human computer interaction 

jennings higuchi user model neural network personal news service 
user modeling user adapted interaction 

lang newsweeder learning filter netnews 
proceedings th international conference machine learning tahoe city ca 
billsus pazzani hybrid user model news story classification 
kay ed 
user modeling proceedings th international conference 
springer verlag wien new york 
sheth maes evolving agents personalized information filtering 
proceedings ninth conference ai applications 
ieee computer society press 
balabanovic shoham fab content collaborative recommendation 
communications acm 

pazzani billsus learning revising user profiles identification interesting web sites 
machine learning 

oard kim implicit feedback recommender systems 
proceedings aaai workshop recommender systems 
madison wi 
goldberg nichols oki terry collaborative filtering weave information tapestry 
communications acm 

resnick iacovou suchak bergstrom riedl grouplens open architecture collaborative filtering netnews 
proceedings acm conference computer supported cooperative 

breese heckerman kadie empirical analysis predictive algorithms collaborative filtering 
proceedings th conference uncertainty artificial intelligence 
madison wi 
ha haddawy case preference elicitation similarity measures preference structures 
proceedings th conference uncertainty artificial intelligence 
madison wi 
pennock horvitz lawrence lee giles collaborative filtering personality diagnosis hybrid memory model approach 
proceedings th conference uncertainty artificial intelligence 

shardanand maes social information filtering algorithms automating word mouth 
proceedings acm conference human factors computing systems 

wu salton comparison search term weighting term relevance vs inverse document frequency 
proceedings th international conference information storage retrieval theoretical issues information retrieval 

alspector comparing feature clique user models movie selection 
proceedings rd acm conference digital libraries 
pittsburgh pa 
konstan miller maltz herlocker gordon riedl grouplens applying collaborative filtering usenet news 
communications acm 

schafer konstan borchers sarwar herlocker riedl combining collaborative filtering personal agents better recommendations 
proceedings th national conference artificial intelligence 

sarwar karypis konstan riedl item collaborative filtering recommendation algorithms 
proceedings th international world wide web conference 
hong kong 
claypool gokhale miranda combining content collaborative filters online newspaper 
proceedings acm sigir workshop recommender systems 

basu hirsh cohen recommendation classification social content information recommendation 
proceedings th national conference artificial intelligence 

sowa conceptual structures 
addison wesley reading ma 
paulson intelligent information processing user modeling 
proceedings th international conference information processing management uncertainty knowledge systems 
france 
zadeh fuzzy sets 
information control 
research compaq com src eachmovie 
