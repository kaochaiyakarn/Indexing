markov chain simulation method generating connected power law random graphs christos mihail ellen zegura graph models real world complex networks internet www biological networks necessary analytic simulation studies network protocols algorithms engineering evolution 
date available data networks suggest heavy tailed statistics notably degrees underlying graphs 
practical way generate network topologies meet observed data degree driven approach predict degrees graph extrapolation available data construct graph meeting degree sequence additional constraints connectivity randomness 
networking community currently accepted successful approach modeling inter domain topology internet 
propose markov chain simulation approach generating random connected graph degree sequence 
introduce novel heuristic speed simulation markov chain 
metrics reminiscent quality service congestion evaluate output graphs 
report experiments degree sequences corresponding real internet topologies 
experimental results indicate method efficient practice superior previously heuristic 
surge interest complex real world networks 
include www node corresponds web page edge nodes hy second authors funded nsf itr third author funded nsf ani :10.1.1.43.8973
funded georgia tech faculty fellowship 
college computing georgia institute technology atlanta ga email christos cc gatech edu college computing georgia institute technology atlanta ga email mihail cc gatech edu college computing georgia institute technology atlanta ga email cc gatech edu corresponding pages internet level autonomous systems inter domain level node corresponds distinct routing administration domain university isp edge represents direct exchange traffic corresponding domains biological networks nodes correspond genetic metabolic building blocks genes proteins edges represent direct interactions blocks :10.1.1.37.234:10.1.1.161.580
obtaining accurate graph models real world networks necessary variety simulation studies 
robust persistent characteristic complex networks including www internet biological networks average degree constant number nodes grown order magnitude sharp concentration average degree vertices large degrees 
formally degree sequence follows heavy tailed statistics sense ith largest degree graph proportional approaching frequency ith smallest degree graph proportional approaching see detailed internet measurements see www measurements :10.1.1.37.234
sharp departure erd nyi random graph model degrees exponentially distributed mean 
consequently papers proposed plausible graph models notion preferential attachment notion multiobjective optimization explaining phenomenon 
despite elegant principles approaches predicts accurately observed measurements 
fact approaches attempts explain heavy tailed statistics high low degrees simultaneously evidence captured single evolu tionary principle argues pareto distribution result case observed numbers parameters mentioned 
hand graph models complex networks expected pass strict performance requirements 
example networking community uses graph models simulate wide range network protocols accuracy underlying topology model considered important :10.1.1.161.580
alternative degree driven approach generating network topology models adopted 
predict degrees graph generated extrapolation available data example generate graph satisfies target degree sequence additional constraints natural connectivity 
observed connected graphs satisfy degree sequence randomness property fits real internet topologies albeit randomness property quantified :10.1.1.161.580
theory community degree driven approach formalized especially addressed connectivity issue isolating ranges parameter resulting random graph giant connected component :10.1.1.17.213
particular target degree sequence dn vertices vi di th largest degree vi vertex degree di proposed consider di vertices expanding vertex vi di vertices construct random perfect matching size consider graph initial vertices natural way vi connected vj random perfect matching di vertices correspond vi connected dj vertices correspond vj :10.1.1.17.213:10.1.1.17.213
proposed eliminate self loops parallel edges consider largest component resulting graph :10.1.1.17.213
advantages approach implementational efficiency guarantee uniform sampling 
approach drawbacks produce graph matches degree sequence exactly method gives small components size log 
known performance guarantee concerning accurately method approximates target degree sequence :10.1.1.17.213:10.1.1.17.213
networking community approach typified inet topology generator currently method choice 
implementation inet uses heuristic predicts degree sequence di highest degrees frequency ith smallest degree proportional remaining vertices 
constructs connected graph meets predicted degree sequence placing spanning tree guarantee connectivity tries match remaining degrees possible preferential connectivity heuristic 
known performance guarantee method approximate target degree sequence extend graph approximates graph sampled uniformly random target degree sequence 
propose markov chain simulation approach generating random connected graph degree sequence 
section review necessary graph theory obtain initial connected realization degree sequence 
point underlying theory allows great flexibility produced output 
section point markov chain state space connected realizations target degree sequence 
note similar markov chains considered connectivity requirement additional connectivity requirement needs non trivial theorem result connected state space 
markov chain requires connectivity test simulation step 
section introduce novel speed markov chain saves greatly connectivity tests 
example simulate steps speed process time steps original process 
section contains experimental results 
metrics reminiscent quality service congestion evaluate output graphs 
report experiments degree sequences corresponding real internet topologies 
experimental results indicate method efficient practice superior previously heuristic 
markov chain initialization erd conditions algorithm section address problem constructing connected graph satisfies target degree sequence graph exists 
point constructions follow classical graph theory allow substantial flexibility generated output graph 
constructions initial states markov chains sections 
addition fundamental theoretical primitives replace ad hoc heuristics current implementation inet 
denote number nodes graph wish generate 
vi denote nodes dn denote intended degrees nodes 
simple undirected connected graph meeting degree sequence 
sequence degrees dn called realizable exists simple graph nodes precisely sequence degrees 
straightforward necessary condition degree sequence realizable subset highest degree nodes degrees nodes absorbed nodes outside degrees 
stated formally di min di 
necessary condition realization connected graph contains spanning tree means di 
erd theorem states necessary conditions sufficient 
proof inductive provides construction known algorithm 
algorithm iterative maintains residual degrees vertices residual degree difference current degree final degree vertex 
iteration picks arbitrary vertex adds edges dv vertices highest residual degree dv residual degree residual degrees dv vertices updated appropriately 
significance connecting dv highest degree vertices ensures condition holds residual problem instance 
example algorithm start connecting highest degree vertex high degree vertices obtain residual degree sequence reducing degrees vertices repeat process degrees satisfied output realizable 
alternatively algorithm connect lowest degree vertex vn dn resp 
randomly chosen vertex vi resp 
di highest degree vertices reduce degrees proceed 
clearly algorithm runs iterations iteration invoking degree vertex book keeping maintaining residual degrees sorted order 
running time efficient theory practice 
addition sequence picks vertices chosen provides flexibility alluded 
example start higher degree vertices get topologies dense cores start low degree vertices get topologies sparse cores 
example may start highly clustered topology quantified sparse cuts 
erd condition allows flexibility cost additional tests condition repeated efforts condition satisfied 
particular dv vertices chosen criterion provided iteration ensure condition satisfied residual graph part automatic case maximum degree vertices chosen 
choice dv vertices needs repeated 
observation indicates ways implementation improved shall refrain discussions 
deal second requirement obtaining connected topology 
graph constructed described turns unconnected connected components contain cycle 
edge cycle different connected component 
clearly graph edges pairs removing edges inserting edges merge components 
note resulting graph satisfies degree sequence 
proceeding manner get connected topology 
markov chain connected graphs prescribed degree sequence turn question generating random instance space possible connected graphs realize target degree sequence 
experiment observed random instances fits characteristics complex network topologies experiments fall short guaranteeing generated instances correct connected realizations target degree sequence 
sequence integers connected realization consider markov chain 
gt graph time probability gt gt standard trick avoid periodicities 
probability gt determined experiment 
pick edges random say distinct endpoints 
edges consider graph removing edges inserting edges 
observe satisfies degree sequence 
check connected graph 
connected perform switching operation gt perform switching operation gt remains gt 
follows theorem taylor switching operation connected graph transformed connected graph satisfying degree sequence note proof taylor theorem somewhat involved corresponding fact realizations connectivity constraint fact straightforward 
follows standard markov chain theory markov chain converges unique stationary distribution uniform distribution state space connected realizations 
definition transitions probability 
limit simulate markov chain infinite number steps markov chain generate graph degree sequence uniformly random 
arbitrarily close uniform distribution simulating polynomial number steps see details 
similar questions considered connectivity requirement 
particular known uniform generation simple graph degree sequence dn reduces uniform generation perfect matching graph md md contains complete bipartite graph hi li ri ri li di 
vertices ri labeled label denote labels ui ui ui ui 
addition md edge ui uj perfect matching md gives rise unique realization natural way link vi vj contains edge ui uj similarly realization associated di 
perfect matchings md known random perfect matching random realization generated time polynomial corresponds regular near regular graph corresponds bipartite graph 
include case arbitrary power law graphs theory apply 
generating random graph meets arbitrary degree sequence major open problem original jerrum sinclair approximating 
addition note problem rapid mixing connected realizations strictly harder arbitrary realizations connectivity requirement indicated reduction degree sequence dn introduce additional vertex degree forcing realization new sequence new vertex connected vertex connected realizations 
devise efficient stopping rules 
rule decide particular run markov chain converged sufficiently consider quantities interest measure quantities steps 
example quantity diameter 
section consider quantities related quality service average shortest path node node indicator network congestion number shortest paths node link indicator 
may criterion quantities having converged stopping rule 
quantities consideration may converge uniform sampling 
example diameter appears deviate consistently mean see 
better heuristic estimate sample average yt metric consideration time method sample averages considered 
addition consider separate runs markov chain initial points run qualitatively different 
example may consider dense core sparse core starting point mentioned section 
may consider case sample averages converge number separate runs markov chain 
speed markov chain simulation notice main bottleneck implementation markov chain section connectivity test needs repeated step 
connectivity test takes linear time example dfs 
hand operations picking random edges performing swap takes time log random choice constant time swap 
section describe process maintains convergence uniform distribution connected realizations practice performs fewer connectivity tests 
particular consider process 
initially connected realization target degree sequence mentioned sections 
call 
maintaining window estimate steps markov chain simulate connectivity test reasonable probability having connected realization gw steps 
require intermediate step gw connected 
initially window 
algorithm proceeds stages stage consisting simulation steps connectivity test 
general simulation steps ended connected realization accept realization state increase window stage 
ter simulation steps ended non connected realization return connected real diameter steps average diameter steps diameter different stages markov chain 
left depicts value diameter steps 
observe diameter converge single value 
right gives sample average diameter 
underlying graph constructed degree sequence topology 
topology generation process started sparse core 
ization current stage decrease window stage half current size 
heuristic inspired linear increase multiplicative decrease tcp protocol 
way hope result fewer connectivity tests 
notice process strictly markov chain 
size windows vary arbitrarily 
fact need argue stationary distribution uniform distribution set connected realizations 
see partition process stages pj 
starting state stage pj connected realization degree sequence 
window pj fixed stage pj 
state stage pj realization simulation steps final connectivity test 
starting state stage pj coincides final state stage pj 
notice stage fixed process pj markov chain state space connected realizations 
addition process pj symmetric sense probability state started state probability state started state follows symmetry initial markov chain holds connectivity tests transitions connectivity tests probability 
may invoke known fact aperiodic symmetric markov chains converge uniform distribution conclude processes pj unique stationary distribution uniform 
concatenation pj uniform distribution 
term fast markov chain chain speed refer process sliding window said strictly speaking markov chain concatenation markov chains 
evaluation section evaluate efficiency markov chain section speed proposed section 
main application focus case internet topologies level autonomous systems 
data available national laboratory applied networking research traceroute oregon 
involve sparse power law graphs average degree size number nodes november data collection started approximately today 
main results follows 
observe convergence steps quantities interest shortest paths node node 
number shortest paths node 
corresponding running time seconds pentium iii 

running time markov chain speed runs fewer steps 
speed resulted improvement 

convergence time appears scale slowly size topology encouraging larger topologies need generated 

markov chain method advantage method achieves exact target degree sequence realizable sequence differs target sequence power law sequences :10.1.1.17.213:10.1.1.17.213

markov chain method additional advantage 
start extreme initial point dense sparse topology topology consisted connected parts separated sparse cut measure parameters interest intermediate simulation points see parameters converge 
simulations useful stress tests protocols 
specifically measured quantities 
node path average shortest path node 
networking context indication quality service perceived consider quantities mean average path mean taken nodes variance maximum average path 

node path maximum length shortest path node 
networking context indication worst case quality service perceived consider mean maximum nodes graph 
notice maximum maximum path diameter 

link load number shortest paths shortest paths node node considered break ties random 
normalize dividing networking context indication congestion link 
consider mean variance max link load links network 
tables indicate convergence fast markov chain degree sequence internet inter domain topology june 
table corresponds dense initial topology table corresponds sparse initial topology 
column correspond markov chain speed number connectivity tests approximately running time 
may observe convergence sped markov chain weaker behavior slow markov chain example look max average path max max path diameter slow markov chain 
repeated experiments times results identical 
table indicate convergence sped markov chain starting synthetic initial topology consisting parts separated sparse cut 
constructed synthetic topology copies topology simulated sparse cut adding single edge connect parts 
table compare output markov chain method power law random graph method results real internet topology :10.1.1.17.213:10.1.1.17.213
clear markov chain better fit 
addition method produces graphs highest degrees deviate real internet topology :10.1.1.17.213:10.1.1.17.213
tables indicate stopping time topology scaled approximately nodes approximately nodes 
consider metrics average path normalized average link load 
note number steps indicated minimum number steps needed take order metrics consideration converge accurately 
thing notice robustness method 
performed simulations parts network europe degree sequences network years inet topology generator qualitatively similar results 
second important thing notice scaling convergence time node topology node topology mild 
find encouraging evidence convergence times reasonably efficient topologies scale 
open problems challenging open problem area addition target degree sequence may consider underlying metric distances 
reality geographic distances data available 
want construct minimum cost connected realization degree sequence 
connectivity requirement degree sequence nodes mincost perfect matching problem nodes reduction section 
equal tens thousands known exact mincost perfect matching algorithms inefficient 
efficient approximation 
proof rapid mixing markov property initial fast mc fast mc fast mc fast mc fast mc slow mc steps steps steps steps steps steps average path mean variance max max path mean variance max diameter link load mean variance max connectivity tests running time sec table evolution average path maximum path link load various stages dense starting state 
thing observe convergence appears occured steps 
metrics steps appear indicative steady state remain running steps 
underlying graph constructed degree sequence topology nodes 
property initial fast mc fast mc fast mc fast mc fast mc slow mc steps steps steps steps steps steps average path mean variance max max path mean variance max diameter link load mean variance max connectivity tests running time sec table evolution average path maximum path link load various stages sparse starting state 
thing observe convergence appears occured steps 
metrics steps appear indicative remain running steps 
underlying graph constructed degree sequence topology nodes 
property initial fast mc fast mc fast mc fast mc fast mc steps steps steps steps steps average path mean variance max max path mean variance max diameter link load mean variance max connectivity tests running time sec table convergence markov chain initial state graph composed separate components connected single link 
observe high values link load initial graph 
natural graph bad cut 
steady state reached relatively steps order example starting point extremal case graph 
dense sparse property initial final initial final internet path mean path var path max load mean load var load max table comparison average path link load topology markov chain model 
mc converges similar results dense sparse initial points simulating sufficient number steps 
markov chain approach gave results closer real topology model 
topologies generated topology degree sequence 
dense sparse graph nodes links internet initial steps final initial steps final table average path topology synthetic topologies various sizes obtained snapshots topology 
graphs generated starting dense sparse states converge similar values sufficient number steps 
required number steps convergence change dramatically size graph increases 
views indication method scales size topology 
dense sparse graph nodes links internet initial steps final initial steps final table maximum link load topology synthetic topologies various sizes obtained snapshots topology 
graphs generated starting dense sparse states converge similar values sufficient number steps 
required number steps convergence change dramatically size graph increases 
viewed indication method scales size topology 
chains considered 
proof interesting special cases trees 
adamic 
zipf power laws pareto ranking tutorial 
www hpl hp com shl papers ranking 
william aiello fan chung lu :10.1.1.17.213
random graph model power law graphs 
proc 
st symposium foundations computer science focs pages 
ieee 
william aiello fan chung lu 
random evolution massive graphs 
proc 
nd symposium foundations computer science focs pages 
ieee 
doyle willinger 
optimization driven framework designing generating realistic internet topologies 
hotnets 
aldous fill 
reversible markov chains random walks graphs 
monograph berkeley edu users aldous book html 
albert szl barabasi ka albert 
emergence scaling random networks 
science 
claude berge 
graphs hypergraphs 
north holland publishing 
bollob riordan spencer andg dy 
degree sequence scale free random graph process 
random structures algorithms 
broder kumar maghoul raghavan rajagopalan stata wiener 
graph structure web 
th international world wide web conference www computer networks 
tian bu don towsley 
distinguishing internet power law topology generators 
proc 
infocom 
ieee 
chen chang govindan jamin willinger shenker 
origins power laws internet topologies revisited 
proc 
infocom 
ieee 
chung lu 
connected components random graphs degree sequences 
www math ucsd edu fan 
cooper frieze 
general model web graphs 
esa pages 
dill kumar mccurley sivakumar tomkins 
self similarity web 
international conference large data bases pages rome 
fabrikant koutsoupias papadimitriou 
heuristically optimized tradeoffs new paradigm internet 
icalp 
faloutsos faloutsos faloutsos 
power law relationships internet topology 
proc 
sigcomm 
acm 
national laboratory applied research 
route views archive 
nlanr net routing 

realizability set integers degrees vertices graph 
siam appl 
math 

existence finite graphs 
pest 
mat 

jeong albert barabasi 
large scale organization metabolic networks 
nature 
jerrum sinclair 
fast uniform generation regular graphs 
tcs 
jerrum sinclair 
approximating permanent 
siam computing 
jerrum sinclair 
polynomial time approximation algorithm permanent matrix non negative entries 
proc 
symposium theory computing stoc pages 
acm 
jin chen jamin 
inet internet topology generator 
technical report cse tr michigan ann arbor 
john 
authoritative sources hyperlinked environment 
th acm siam symposium discrete algorithms 
extended version journal acm 
kumar raghavan rajagopalan sivakumar tomkins upfal 
stochastic models web graphs 
proc 
st symposium foundations computer science focs pages 
ieee 
kumar rajagopalan sivakumar tomkins 
trawling web emerging 
www computer networks volume pages 
lov sz plummer 
matching theory 
press new york 
medina matta byers 
origin power laws internet topologies 
acm computer communications review april 
medina matta byers 
brite universal topology generation user 
technical report bucs tr boston university 
available www cs bu edu brite publications 
motwani raghavan 
randomized algorithms 
cambridge university press 
erd 
graphs prescribed degrees vertices 
mat 

lawrence page sergey brin rajeev motwani terry winograd 
pagerank citation ranking bringing order web 
stanford digital library technologies project 
palmer 
generating network topologies obey power laws 
globecom 
sinclair 
algorithms random generation counting markov chain approach 
springer verlag 
govindan jamin shenker willinger 
network topology generators degree vs structural 
proc 
sigcomm 
acm 
taylor 
constrained graphs 
siam alg 
disc 
meth 
traceroute org 
public route server looking glass site list 
www traceroute org 
vazirani 
approximation algorithms 
springer verlag 
zegura calvert bhattacharjee 
model internetwork 
proc 
infocom 
ieee 
