greedy heuristics evolutionary algorithm bounded diameter minimum spanning tree problem nther institute computer graphics algorithms vienna university technology vienna austria ads tuwien ac connected weighted undirected graph bound bounded diameter minimum spanning tree problem seeks spanning tree lowest weight path vertices contains edges 
problem np hard number vertices existing greedy heuristic problem called ottc prim algorithm 
ottc usually yields poor results instances triangle inequality approximately holds uses lowest weight edges edges general connect interior nodes low weight trees 
new randomized greedy heuristic builds bounded diameter spanning tree center vertex vertices 
chooses vertex random attaches vertex lowest weight eligible edge 
algorithm faster ottc yields substantially better solutions euclidean instances 
evolutionary algorithm encodes spanning trees lists edges augmented center vertices 
applies operators maintain diameter bound generate valid offspring trees 
operators efficient algorithm scales larger problem instances 
euclidean instances vertices ea improved substantially solutions randomized greedy heuristic 
keywords bounded diameter spanning tree edge list encoding greedy heuristics randomized heuristics local improvement 

tree eccentricity vertex maximum number edges tree vertex 
diameter tree maximum eccentricity vertices maximum number edges path tree 
center tree single vertex permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
sac melbourne florida usa 
acm 
bryant department computer science st cloud state university st cloud mn usa edu tree diameter connected vertices diameter odd minimum eccentricity 
connected undirected graph vertices integer bound bounded diameter spanning tree spanning tree diameter exceed shows vertices diameter centers 
weights associated edge bounded diameter minimum spanning tree minimum weight 
trees called diameter constrained minimum spanning trees shallow light spanning trees 
search finds applications areas telecommunications network linear network design distributed system design considering mutual exclusion bit compression information retrieval 
special case occurs root vertex specified 
called hop problem problem np hard exact algorithm known identifies optimum solutions large problem instances 
peleg shown np polynomialtime algorithm guaranteed find tree weight log optimum 
turn heuristics seek approximate solutions 
peleg described algorithm identifies weight exceeds optimum factor log 
algorithm combines greedy tree diameter vertices vertex center tree odd diameter vertices form center 
heuristic exhaustive search 
unfortunately time suitable small problem instances 
abdalla deo gupta described heuristics problem approximation guarantees :10.1.1.24.6583
iteratively refines unconstrained minimum spanning tree 
heuristic computationally expensive find feasible solution complete graph particularly small 
second greedily constructs low weight imitation prim algorithm unconstrained minimum spanning trees greediness leads away best trees section describes 
new effective greedy heuristic imitates prim begins tree center chooses vertex connect spanning tree random 
section describes heuristic 
evolutionary algorithm ea problem encodes candidate spanning trees lists edges center vertex vertices specified 
crossover imitates prim algorithm parental edges feasible 
different mutation operators take advantage structure imposed trees diameter constraint 
greedy heuristic abdalla deo gupta randomized greedy heuristic evolutionary algorithm compared instances problem vertices diameter bounds 
randomized algorithm returned significantly trees completely greedy heuristic ea identified best trees 
sections describe greedy heuristic abdalla deo gupta fails randomized greedy heuristic ea coding operators ea structure parameters comparison algorithms 

completely greedy heuristic prim algorithm begins arbitrary start vertex builds unconstrained minimum spanning tree repeatedly appending lowest weight edge connects vertex tree tree 
diameter spanning tree step known modifying prim algorithm accommodate diameter bound yields greedy heuristics problem complete graphs 
described abdalla deo gupta 
called time tree construction ottc 
specified start vertex ottc repeatedly extends growing tree lowest weight edge tree vertex non tree vertex inclusion violate diameter bound 
algorithm keeps track path lengths vertices tree 
appending new edge general changes values updating algorithm data structures requires worst case time 
step repeated times algorithm time 
quality tree algorithm identifies depends heavily start vertex 
identify low weight algorithm run starting vertex target graph turn 
time best diameter ottc heuristic finds euclidean instance vertices 
entire process 
massively parallel hardware deo abdalla obtained bounded diameter spanning trees complete randomly created graphs vertices 
greediness ottc ottc applied problem instances vertices points euclidean space edge weights distances points heuristic general yields spanning trees weights larger minimum 
particularly true small compared illustrates 
shows spanning tree identified ottc diameter points unit square 
short edges connect vertices near center tree 
remaining vertices connect longer edges core forming star structure 
backbone tree subgraph induced tree non leaf vertices 
low weight backbone longer leaves connect shorter edges 
heuristic problem prefer lower weight edges builds backbone 
ottc uses lowest weight edge available misled 
observation holds problem instances triangle inequality approximately satisfied applications problem 

randomized greedy heuristic new randomized greedy heuristic problem complete graphs avoids pitfall previous section described 
extending tree nearest unconnected vertex chooses vertex random connects vertex tree edge maintains diameter constraint 
algorithm differs ottc begins fixing tree center 
start vertex chosen random 
center 
odd random vertex depth odd random vertex depth random vertex vertex smallest depth depth depth return randomized greedy heuristic builds low weight diameter bound complete graph vertices vertex chosen random center edge joining tree 
maintaining path lengths vertices randomized heuristic stores depth connected vertex number edges path center 
value set vertex joins tree subsequently change 
vertex may depth greater diameter constraint violated displaced center 
presents sketch randomized heuristic 
set unconnected vertices set depth set vertices new edges may connected 
iteration algorithm randomly picks vertex determines nearest vertex edge added tree 
vertex removed depth added depth new vertex depth vertex connects 
identifying vertex nearest requires time 
operation repeated times time algorithm factor ottc 
running randomized greedy heuristic times best solution ottc 
tests section demonstrate randomized greedy heuristic yields substantially better solutions euclidean problem instances ottc 

evolutionary approach evolutionary algorithms proven effective hard spanning tree problems done representing spanning trees evolutionary search 
studies indicated general usefulness representing spanning trees directly lists edges applying operators yield feasible trees 
adopt edge list coding augment edges appearing parents edges appearing parent determine center parent depth odd random vertices union parents centers depth depth edges incident center edges incident center add nodes iteratively pick edge random pick edge random pick random pick random depth depth depth edges incident edges incident return recombination operator 
chromosome center vertex vertices spanning tree represents 
fitness chromosome total weight tree scanning edge list time 
diameter bound renders initialization variation operators prior eas inapplicable ineffective 
sections describe operators appropriate problem complete graphs 
recombination ea recombination operator provide strong heritability 
means tree produced recombining parent trees consist parental edges 
beneficial favor edges common parents 
presents sketch recombination operator randomized greedy heuristic satisfies goals 
operator selects center vertex vertices random parental centers 
heuristic maintains set unconnected vertices set tree vertices depth 
edges may attached vertices operator maintains sets edges incident vertices may extend tree 
contains edges parents contains edges just 
extend partial tree operator chooses edge random empty 
empty creates edge joining random vertex random vertex case recombination introduce non parental edges offspring tree 
temporary adjacency lists representing parent trees allow quick identification parental edges adjacent vertex quick updating 
recombination operator run time 
ea degree constrained minimum spanning tree problem traveling salesman problem effective recombination operators probabilistically favored low weight edges 
bias helpful described section low weight tree backbone general consist low weight edges 
mutation operators ea applies mutation operators complement search space 
generate valid trees 
improve solution locally significantly speed search low weight trees 
edge delete mutation operator removes random edge parent tree 
odd edge connects center vertices 
parent center builds new recombination parental edges possible new edges necessary 
operator runs time 
center move mutation edge delete mutation preserves parent tree center operator changes 
chooses random vertex va adjacent parent center 
va center offspring tree odd va parental center vertices form offspring center 
operator builds offspring center edge delete mutation 
time center move mutation 
greedy edge replace mutation operator greedy version edge delete mutation 
begins removing random edge parent tree center edge odd 
disconnects subtree rooted vertex set vertices subtree including operator reconnects tree lowest weight edge maintains diameter bound 
operator begins depth search identifies depth vertex parent tree 
identifies height disconnected subtree 
edge may reconnect tree depth 
operator time 
subtree optimize mutation operator chooses vertex depth random parent tree optimally rearranges subtree rooted set vertices subtree predecessor path center 
operator tries vertex root subtree connecting vertices weight subtree root ws subtree minimizes weight part offspring 
finding weight subtree requires time subtrees examine time mutation 
number vertices subtree usually small operator significantly efficient mutations 

ea framework representation operators section described implemented conventional steady state evolutionary algorithm 
ea applies randomized greedy heuristic generate candidate solutions initial population starts diverse collection relatively solutions 
selects parents tournaments replacement 
recombination generates offspring offspring mutated mutation operators 
offspring replaces worst solution population duplicates discarded 
tests section describes ea parameters set experience gained preliminary tests 
particular population contained chromosomes size selection tournaments applied recombination probability 
applied edge delete center move mutation probabilities greedy edge replace subtree optimize mutation probabilities 
ea terminated population best solution improve new chromosomes 

tests ottc heuristic randomized greedy heuristic evolutionary algorithm ea compared euclidean instances problem instances vertices 
instances beasley library listed instances euclidean steiner problem 
library contains fifteen instances size group 
instances consist points unit square 
consider points vertices complete graphs edge weights euclidean distances points 
diameter bound set 
ms ic ac uk info html table results ottc randomized greedy heuristic evolutionary algorithm ea euclidean instances problem 
instance ottc ea nr 
best mean stddev best mean stddev best mean stddev iterations time instance ottc run times starting vertex turn 
run times random start vertices 
ea run times instance 
table summarizes results trials 
instance table lists instance number 
ottc lists weight best average weight standard deviation weights 
ea lists weight best tree trials mean trial smallest weights mean number iterations mean cpu time seconds pentium iii mhz pc trial best tree 
results consistent instances differences mean weights algorithms best trees significant level 
identified substantially better solutions smaller standard deviations ottc 
ottc identified times longer 
ottc greediness selection backbone vertices accounts poor performance observed section 
ea solutions average worse ea applies build initial population 
mean weights ea trees average smaller weights best trees instances 
cpu times numbers iterations show ea scales larger instances 
mean time iteration increases approximately linearly number vertices 
shows lowest weight trees algorithms second instance 
clearly illustrate advantage ottc superiority ea 

connected weighted undirected graph bound bounded diameter minimum spanning tree problem seeks spanning tree lowest weight path vertices contains edges 
prim inspired greedy heuristic problem identifies high weight valid trees backbone low weight tree bounded diameter general consist low weight edges heuristic chooses 
randomized greedy heuristic connects vertices tree random order valid edge lowest weight 
simpler efficient heuristic identifies trees lower weight euclidean problem instances completely greedy heuristic 
evolutionary algorithm encodes spanning trees lists edges augmented center vertices applies operators maintain diameter bound offspring represent valid trees 
recombination operator imitates prim algorithm uses parental edges possible 
mutation operators perform local improvements 
variation operators implemented require linear near linear time ea scales larger problem instances 
instances lowest weight algorithms second problem instance ottc weight randomized greedy heuristic weight evolutionary algorithm weight 
points ea identified lower weight trees greedy heuristic 
particular improved significantly solutions provided initial population randomized greedy heuristic 
acknowledgments supported austrian science fund fwf inf 

abdalla deo gupta 
random tree diameter diameter constrained mst 
congressus numerantium 
bala stern 
multicasting linear network 
ieee infocom pages 
bookstein klein 
compression correlated bit vectors 
information systems 
chartrand 
applied algorithmic graph theory 
mcgraw hill new york 
dahl 
hop spanning tree problem 
technical report university oslo 
deo abdalla 
computing diameter constrained minimum spanning tree parallel 
editors algorithms complexity number lncs pages 
springer berlin 
garey johnson 
computers guide theory np completeness 
freeman new york 
gottlieb 
pr fer numbers poor representation spanning trees evolutionary search 
spector goodman wu langdon 
voigt gen sen dorigo garzon burke editors proceedings genetic evolutionary computation conference pages 
morgan kaufmann 
jordan 
sur les des 
reine angew 
math 

encoding rectilinear steiner trees lists edges 
lamont carroll haddad morton papadopoulos editors proceedings th acm symposium applied computing pages 
acm press 
peleg 
approximating shallow light trees 
proceedings th symposium discrete algorithms pages 
peleg 
approximating weight shallow steiner trees 
discrete applied mathematics 
palmer 
representing trees genetic algorithms 
schaffer 
schwefel fogel editors proceedings ieee conference evolutionary computation pages 
ieee press 
prim 
shortest connection networks generalizations 
bell system technical journal 

efficient evolutionary algorithm degree constrained minimum spanning tree problem 
fonseca 
kim smith editors proceedings ieee congress evolutionary computation pages 
ieee press 

edge sets effective evolutionary coding spanning trees 
ieee transactions evolutionary computation 
appear 
raymond 
tree algorithm distributed mutual exclusion 
acm transactions computer systems 
goldberg 
network random keys tree network representation scheme genetic evolutionary algorithms 
evolutionary computation 
