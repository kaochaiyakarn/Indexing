ginga self adaptive query processing system georgia inst 
technology college computing cc gatech edu categories subject descriptors systems query processing models principles general general terms design measurement reliability experimentation performance 
keywords query adaptation distributed query processing 

adaptive query processing wide area distributed systems received significant attention due dynamics internet 
ginga project currently ongoing georgia institute technology aiming studying research issues building self adaptive query processing system 
identify important failure modes executing queries internet network delays memory shortage sudden unavailability remote data servers 
extended give brief overview design ginga system illustrate proposed adaptation framework network delay scenario example 
query processing system called adaptive characteristics 
collects information runtime environment uses information determine subsequent behavior 
second information collection behavior revision process iterates time generating feedback loop runtime environment behavior system 
query information runtime environment may include statistics specific data sources accessed current state network time access attempted control information entered users 
call query processing system self adaptive satisfies properties information control feedback collected learned automatically system provided interaction users system reacts specified environment changes immediately receiving feedback 
self adaptive characterize ginga system distributed query processing 
ginga query adaptation engine collects information runtime environment high frequency full automation reacts environment change interest immediately 
argue permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
cikm november mclean virginia usa 
copyright acm 
ling liu georgia inst 
technology college computing cc gatech edu calton pu georgia inst 
technology college computing calton cc gatech edu deal frequent unexpected delays experienced accessing data internet important internet search query system self tunable short feedback loop runtime environment system 
ginga project interesting features 
utilizes adaptation space concept manage proactive generation query plans 
adaptation space offers simple powerful abstraction framework create main query plans define system condition changes render current plan sub optimal trigger change new query plan manage change process 
second provides feedback control mechanism allows query engine switch alternative plans detecting runtime environment variations 
third describes systematic approach integrate adaptation space feedback control allows combine proactive reactive adaptive query processing including policies mechanisms determining adapt adapt adapt 
experimental results show ginga query adaptation achieve significant performance improvements response time gain processing distributed queries internet 

system architecture overview ginga system distributed software system supports adaptive query processing 
executing query highly unstable runtime environment query processor needs highly adaptive order cope unpredictable runtime situations unexpected network delays latency fluctuations memory shortage 
ginga brazilian word typically describe quality person needs dancing samba 
rhythm movements samba query processing system equipped ginga efficiently change execution query plan order keep rhythm imposed runtime variations environment 
shows sketch ginga system architecture 
query submitted ginga initially processed query manager 
major tasks query manager coordinate clients query sessions invoke query routing process performs source selection pruning data sources directly contribute answer query 
query routing enduser query transformed set subqueries associated execution dependencies 
subqueries targeted chosen data sources 
query query manager scheduler runtime environment monitoring answer query result assembly runtime system wrapper wrapper wrapper data source adaptation space ginga server proactive engagement phase reactive control phase data source 
data source ginga system architecture 
internet internet ginga query adaptation engine takes resulting queries query routing process builds initial optimized plan alternative execution plans may runtime environment state changes significantly 
query adaptation ginga combines proactive adaptation engagement phase query execution reactive adaptation control phase execution 
engagement phase initial adaptation space built initial optimized plan root alternative plans non root nodes 
query execution ginga monitors runtime environment resource availability continuously determines change query plan adapt choosing alternative plan corresponding adaptation space 

proactive engagement phase proactive engagement phase ginga builds initial query plan establishes selection alternative plans adaptation 
task generate initial optimized plan 
done existing query optimization algorithm distributed databases 
experimental study distributed query scheduler developed 
second task generate query adaptation alternatives pi 

alternative query plans generated ginga consists parts 
part trigger describing significant runtime environmental change may degrade query execution original plan generally current plan execution pi 
second part new query execution plan pi optimized new runtime parameters account change detected 
potential alternative plans organize adaptation space 
adaptation space model general adaptation space consists main components set adaptation triggers set adaptation cases associated triggers 
formal definitions adaptation space model 
ginga adaptation cases query plans pi 
optimized set environmental parameters 
adaptation trigger defined quadruple condition pto wait time 
assuming ginga currently executing query plan condition significant runtime environment change network delay reaches certain threshold happens ginga adapts making transition pto 
wait time component indicates long condition hold described transition takes place 
wait time prevent oscillations adaptation example temporary network latency bandwidth fluctuations cause repeated transitions back forth query plans 
feedback adaptation short wait time results fast adaptation soon onset network delay 
long wait time slows adaptation process decreases probability oscillation 
precise setup wait time hard problem solved implies able predict state runtime environment 
important note constructing adaptation space covers adaptation cases single change runtime environment unrealistic unnecessary due number reasons 
possible changes occur 
second overhead constructing complete adaptation space prohibitive 
realistic approach constructing adaptation space generate adaptation cases runtime environment changes known occur frequency realistic threshold 
ginga initial adaptation space query generated adaptation engagement phase prior query execution 
new adaptation cases inserted initial adaptation space new triggers identified feedbacks runtime environment behavior multiple runs query 
gather information runtime environment monitoring usage resources allocated query execution 
adaptation space described transition graph lattice nodes representing query plans edges representing transition query plan 
illustrate construction adaptation space simple distributed query 
example adaptation space construction suppose want execute query data sources remotely located connected ginga server network links li transfer rate rate li mbps 
assume interested adapting execution rate li drops mbps 
construction adaptation space executing main steps 
generate initial query plan record assumptions runtime environment 
second identify set important adaptation triggers conditions specifying conditions adaptation turned deal delays experienced 
third generate alternative optimized query plan adaptation trigger condition 
construct adaptation space format transition graph 
shows example adaptation space root adaptation case labeled ac initial optimized query plan nodes represent alternative query plans schema key attr key attr key attr ginga server site site query select key key key key initial optimized query plan site network connections site internet adaptation trigger ac rate mbps ac case timeout seconds plan adaptation action plan adaptation trigger ac case rate ac case timeout secs initial query plan adaptation action ac case condition rate mbps rate mbps rate mbps rate mbps ac case condition rate mbps rate mbps rate mbps adaptation space transition graph rate mbps rate mbps ac condition rate mbps rate mbps rate mbps rate mbps ac case condition rate mbps rate mbps rate mbps rate mbps ac case condition rate mbps rate mbps rate mbps ac case condition rate mbps rate mbps rate mbps rate mbps ac case condition rate mbps rate mbps rate mbps rate mbps rate mbps rate mbps initial optimized plan query adaptation space network delays occur 
non root node may alternative query plan plan addresses different network delay duration see example 

reactive control phase query executed ginga reactive control phase monitors conditions specified adaptation triggers relevant current query plan transfer rate network connections 
adaptation trigger fired condition true network delay 
transition plan pto called adaptation action 
adaptation trigger fired ginga checks current stage query execution 
adaptation action beneficial ginga proceeds change query plan pto 
determining adaptation action beneficial depends directly query plan processed 
example adaptation trigger fired collected data source site scheduling adaptation action may provide significant gains final query response time 
adaptation space model discuss concrete steps taken ginga cope environmental changes particularly network delays caused slow delivery 
assume runtime system keep reactive control phase informed current execution 
rate mbps ac case condition rate mbps rate mbps rate mbps rate mbps rate mbps order cope network delays ginga schedules adaptation actions involve materializing independent subtrees original query tree continuing process data retrieval slow network connection independent subtrees materialized problematic connection slow ginga schedules adaptation actions create materialize new joins relations previously materialized 
example adaptation actions suppose query processor starts executing transfer rate connection degrades mbps kbps causing data slowly delivered 
consequently ginga schedules adaptation action start new query plan executes concurrently materialization remote data source 
finish processing concurrently running adaptation necessary 
slow delivery delays processing completion adaptation action scheduled 
example new query plan starts concurrently materialization data source 
goal call independent subtree query tree original plan depend input delayed source 
processing consists retrieving hashing partitioning data change retrieval processing order sources fast sources processed concurrently delayed source 
point query execution plan 
ginga changes plan plan operator schedule changed accordingly 
alternative query plans network delays connection plan plan plan proc legend proc total execution time processing data action total execution time adaptation action proc summary adaptation actions delays detected network connection 
independent query subtrees original plan materialized finished processing adaptation action start joins 
new query plan create materialize new join relations materialized 
example start 
ginga creates new joins query graph associated 
relations joined edge query graph connecting considered creation new joins 
way ginga avoids generation new joins result cartesian products 
eager execution expensive new join operators departure initial optimized plan 
means considered sub optimal compared originally 
may may finish depending completion time processing alternative solution detailed dynamic adaptation query plan generation take factors account 
similar query re optimization 
scheduling results changing right operand originally scheduled join current implementation ginga scenario possible assume joins operators hash execution query plan follows model left operand hash join materialized starting probe right operand pipeline fashion 
summarizes adaptation actions conditions represented labels edges connecting query plans coping network delays detected connection 
action materializations numbered order executed 
observe new materialization operations scheduled way allows smooth transition query plan runtime 

related representative examples relevant adaptive query processing research include query scrambling dynamic scheduling execution dse 
query scrambling uses materialization operator synthesis adapt execution distributed queries presence network delays 
dse adapts execution distributed queries network delays concurrently scheduling execution independent subtrees 
comparison ginga uses unified framework adaptation space model support approaches 
addition ginga framework powerful study query adaptation network delays query adaptation memory shortage sudden unavailability remote sources 
extended outline interesting features ginga primarily experimental study trade offs adapting execution distributed query network delays 
ongoing research efforts include resource constraint trade offs memory shortage sudden unavailability remote sources combined failure modes 
technical details ginga described 

author partially supported capes brazil doe scidac 
authors partially supported darpa doe nsf 

franklin tomasic urhan 
scrambling query plans cope unexpected delays 
pdis 
fabret mohan valduriez 
dynamic query scheduling data integration systems 
icde 
kabra dewitt 
efficient mid query re optimization sub optimal query execution plans 
acm sigmod 
liu 
adaptation cases adaptation spaces notation issues applications part concepts semantics 
technical report ogi cse working 
liu 
query routing large scale digital library systems 
icde 
liu pu 
distributed query scheduling service architecture implementation 

liu pu 
distributed query adaptation trade offs 
technical report georgia institute technology 
schneider dewitt 
tradeoffs processing complex join queries hashing multiprocessor machines 
vldb 
selinger 
access path selection distributed database management systems 
vldb 
shapiro 
join processing database systems large main memory 
acm tods 
stonebraker 
design implementation distributed ingres 
ingres papers stonebraker ed addison wesley 
