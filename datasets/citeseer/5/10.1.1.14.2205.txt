arabic morphology finite state operations finite state morphology successful description computational imple mentation wide variety natural lan guages 
particular challenges arabic limitations implementa tions finite state morphology led researchers believe finite state power sufficient handle arabic morphology 
illustrates morphotactics variation rules arabic described finite state operations approach implemented significant ical analyzer generator 
arabic natural languages challenges morphological analysis description morphotactics variation rules 
morphotactics study morphemes combine formed words 
variations cies underlying mic strings surface realization phonological strings depending purpose grammar 
key insight claim finite state approach morphology karttunen karttunen karttunen morphotactics variation gram mars written regular expressions compiled implemented com finite state automata 
grammars interesting theoretically highly constrained practical computa tional linguistics natural languages finite state automata fast usually compact size bidirectional combinable valid finite state operations kenneth beesley xerox research centre europe grenoble laboratory de france ken beesley xrce 
xerox com language independent lookup code 
finite state approaches morphology cluding readily available implementation known level morphology koskenniemi shown significant projects french english spanish portuguese italian finnish turkish wide variety natural languages 
despite high attractiveness finite state computing investigators con finite state techniques ad equate describing root pattern morphology 
case fully implemented finite state morphology successfully ara bic 
regular expressions writing finite state morphological grammar linguists state vari ation rules metalanguage regular ex higher level languages convenient shorthand notations complex regular expressions 
regular expressions regular relations state transducers regular expression contains alphabet level symbols defines regular language compiles finite state machine fsm accepts regular language 
regular expression contains alphabet paired symbols defines regular relation relation regular languages compiles finite state transducer fst maps string language strings 
necessary finite state algo rithms compilers available components grammar including various rules compiled separate trans combined operations mathematically valid 
xerox implementation finite state morphology includes complete range fun algorithms concatenation union complementation plus higher level shorthand languages kart karttunen beesley replace rules karttunen karttunen kempe karttunen 
finite state operations defining morphotactics variations regular expressions linguist access operations mathematically valid regular languages relations 
brief outline regular expressions xerox notation symbol regular expression denotes regular language consisting sin gle string 
regular languages regular expressions de note regular languages 
cross product denoted relates string upper language string lower language vice versa 
denotes regular relation 
symbols notation equivalent 
formal reasons relations quite manipulable simple languages particular relations closed concatenation union iteration intersection sub traction complementation 
relations closed composition somewhat difficult operation 
denote regular lan guages denote regular relation upper side language lower side lan guage denote regular relation upper side language lower side language composition denoted denotes regular relation maps directly languages intermediate language pears process composition 
defining natural language morphotactics union concatenation basic oper ations required 
variation rules long distance dependency filters applied composition 
shall illustrate arabic root pattern performed intersection composition 
regular expression grammars concatenative morphotactics individual morphemes natural language typ ically consist symbols simply concatenated 
english mor ed ing represent tions respectively 
represents zero length string set regular verb suffixes english repre sented union 
set verb stems endings cludes walk talk formalized concatenation union 
union endings concatenated union verb stems form larger ex pression denotes language looks subset english verbs 
linguist defines symbols verb ps third personal singular past participle bare expression denotes relation maps lower side surface string talks upper side string talk verb ps vice versa 
pre plus signs tag symbols included simply improve human read ability resulting strings plus sign normally special kleene plus symbol regular expressions examples preceding percent sign 
hi hl verb ps past bare convention xerox regular expressions de noting relations relation written simply verb ps past bare english verb fragment shown carefully chosen simple 
classes phenomena union concatenation general inadequate inconvenient de strings appear natural language ab 
zero length string called bracketing denotes language concatenation union intersection optionality equivalent kleene star iteration zero concatenations equivalent concatenations regular language ignoring instances symbol union single symbol strings language minus strings language equivalent 
union single symbol strings minus strings equivalent complement dependencies mor word non concatenative processes variations typically dele tions map strings correct surface realizations 
continue illustrations phe handled finite state gram mar dependencies illustrate dependencies ignore second internal structure ara bic stems postulate set noun stems cluding scribe book student formalized 
set possible case endings includes definite set nominative accusative genitive indefinite set un nominative accusative genitive 
straightforward way proceed describe morphotactics fragment arabic nouns concatenate possible case endings noun stems 
informative spellings un roughly represent pronunciation 
orthographically indefinite case ings consist single symbols distinct single symbols definite endings 
finite state notations prep art noun def nom acc gen nom acc gen lexicon fragment arabic nouns symbols noun def definite def indefinite nom acc gen defined upper side language 
ilk da noun def nom acc gen nom acc gen ll resulting relation includes pairs strings upper noun acc lower arabic nouns prefixed definite article represent prefixed prepositions bi 
optional bi cooccur bi come 
straightforward way allow prefixes concatenate front lar expression 
prep art interpreted symbols parentheses indicate optionality shown 
arabic words prefixed defi nite article fact precluded indefinite case suffixes 
words pre fixed bi compatible genitive case suffixes 
expression written producing ill formed string pairs upper hrt noun acc lower upper prep art noun def nom lower possible rewrite regular expression various ways eliminate overgeneration tedious dangerous requiring making subsequent parallel maintenance multiple copies noun stems 
practice convenient core lexicon subsequently filter bad strings compile time runtime 
straightforward method remove ill strings composition finite state filters 
starting grammar set illegal strings eliminated contains art symbols upper side 
characterize illegal strings regular expression art illegal strings contain prep nom acc upper side 
nom acc union expressions character ill formed upper side strings elim complement notated union denotes strings 
art prep nom filter expression composed top lexicon transducer legal strings matched gal strings fact eliminated result finite state transducer 
variations method pro duce effect beesley dif ferent penalties size resulting trans performance constraint dependencies eas ily accomplished finite state techniques 
non morphotactics structure nat ural languages satisfactorily described just concatenation subse quent filtering constrain de languages mor phenomena notoriously non concatenative particular fixation stem known 
concentrate arabic arguing roots patterns vocalizations formalized regular ex denoting regular languages stems formed intersection regular languages 
illustration assume influential mccarthy analysis fairly closely arabic stems consist root ktb consonant vowel template ui 
mccarthy proposed extension mental theory placing morphemes separate tier proposing association rules combine linearize stem propose formalize data purely finite state terms 
root ktb formalized language consisting strings containing order ig presence symbols 
notation 
equivalent 
denote union rad ical consonants denote union vowels 
cv templates de fined concatenations cs vs xerox interface definitions computed define ktb 
define drs 
define define define define define vocalizations defined regular expres sions denoting regular languages perfect active set strings contain ing zero ignoring symbols vowels 
vocalizations defined similarly define define define definitions evalu ate expressions left indicating intersection root pattern vocal ization return language consisting single string right stem beesley 
ktb ktb drs form ii pattern indicates lengthening previous con realization controlled varia tion rules 
consonant spreading form ix form xii roots symbol beesley 
form vocalizations fact idiosyncratic root imperfect ac tive troublesome kind formalism applies 
patterns allowed contain non radical consonants anal harris hudson definitions complicated slightly prevent radicals intersecting non radical consonants beesley 
dif ferent formalization models proposed mccarthy techniques go finite state power see 
defining variation rules underlying morphemes concatenated intersected resulting strings form perfect active stem vowel ktb hap pens general tion works case roots require imperfect passive vo kv forms 
imperfect active attractive case vowel abstraction form depending root form ii iv eling form vi kv remaining forms vii xv generalization appears uous alternative simply keep vowels patterns resulting way intersection roots patterns harris koskenniemi 
mic may phonological variations morpho phonemic strings ultimate surface pro spelling 
example english nouns usually suffix book books words fly flies 
variation tween underlying surface defined terms level rules replace rules partially mimic traditional rewrite rules superficial syntax chomsky halle 
johnson demonstrated rewrite rules linguists finite state power implemented finite state transducers important result unfortunately overlooked time rediscovered kaplan kay see kaplan kay key mathe foundation finite state morphology phonology 
variation rules required arabic relatively difficult write dif ferent kind power rules required languages 
difficult chal involve called weak roots containing glottal radicals 
concatenation intersection lex icon produces strings fa form perfect active ktb masculine singular wa suffix similarly drs 
particular strings realized fully form rendered rendered 
trivial relaxation rules composed bottom lexicon allowing optional dele tion short vowels system able analyze surface forms ktb drs partially vari ations 
weak roots fi nally weak dictionary generates paral lel forms surface form properly spelled normal dots 
possible spelling underlying 
change reflects fact word pronounced ba 
perfect passive spelled reflecting ciation egyptian ortho graphical practice dots usually dropped yielding 

fem fat underlying dis appears completely phonologically yielding surface bnt 
weak root mor form perfect active gets realized qal reflecting ciation 
suffix begins consonant ta surface spelling reflecting pronunciation 
initially weak example root yields deletion initial radical tud initial tud prefix yields aj tact 
similarly root complications id yields 
yu ad yields rule writer handle number form viii root kr underlying pronounced written accordingly including diacritics clarity 
roots initial saad aad radical underlying form viii emerging form viii assimilating version 
phonologically surprising local tions contextual instabilities garden variety vari ations elegantly handled finite state vari ation rules 
practical applications history computing stems intersection classic level koskenniemi kart finite state lexicons karttunen build underlying strings concatenation tion characteristic theory computational implementations 
koskenniemi understand concatenating languages just special case showed generalizing lexicography allow lar expressions specifically roots patterns denote regular lan guages stems computed intersection regular languages 
principle borrowed alp net prototype analyzer arabic ogy beesley beesley implementation level morphology enhanced mechanism simulated intersection roots patterns runtime 
prototype grew large commercial system beesley beesley 
lauri karttunen personal communication pro posed demonstrated interlisp script intersection roots patterns vocal alternative finite state lution kay tape finite state transducer transducer 
current xerox system current xerox morphological analyzer arabic dictionaries licensed rules organization system extensively rewritten 
system components arabic morphological analyzer starts dictionary database containing entries prefixes suffixes roots patterns arabic 
database includes cod ings 
perl scripts extract pertinent infor mation database reformatting files compiled finite state transducer label core lex icon transducer 
top core fst fil ters composed remove strings ill formed depen 
finite state rules intersect roots patterns compiled transducers composed bottom core leaving personal communication wrote tive level grammars neo neo dialects 
source dictionaries contained separate roots patterns intersected awk scripts koskenniemi format compiled 
filters core lexicon intersect rules variation rules constructing common fst linearized lexical strings variation rules compiled fsts apply shown 
result composition single common fst slightly enhanced strings lower language 
generation purposes user prob ably wants see formally correct fully strings bottom level trivially cleaned layer composed rules 
recognition purposes rules ap plied bottom side include optionally maps empty string 
resulting analysis trans recognizes fully partially usual spellings 
diacritics input output correspondingly ambiguous 
system status current dictionaries contain roots hand coded indicate subset patterns legally combines buck walter 
various combinations pre fixes suffixes concatenated inter stems filtered composition yield fully words 
finite state variation rules map strings fully cal strings additional rules applied optionally delete short vowels di allowing system analyze partially fully variants words 
new entries added easily orig inal le database 
full scale version current sys tem available testing internet ht tp www xrce xerox com research arabic 
java interface renders arabic words traditional arabic script input output 
evan 

pc kimmo level processor morphological analysis 
number occasional publications aca computing 
summer institute lin dallas 
kenneth beesley tim stu art newton 

level finite state analysis arabic morphology 
proceed ings seminar bilingual computing arabic english cambridge england september 

kenneth beesley 

computer analysis arabic morphology level approach detours 
third annual symposium arabic linguistics salt lake city march 
university utah 
published beesley 
kenneth beesley 

finite state de scription arabic morphology 
proceed ings second cambridge conference bilingual computing arabic english september 

kenneth beesley 

computer analy sis arabic morphology level ap proach detours 
bernard eid editors perspectives arabic linguistics iii papers third symposium arabic linguistics pages 
john benjamins amsterdam 
read originally third annual symposium arabic linguistics university utah salt lake city utah march 
kenneth beesley 

arabic cal analysis internet 
cambridge april 
centre middle eastern studies 
proceedings th inter national conference exhibition multi lingual computing 
number 
kenneth beesley 

arabic stem mor finite state intersection 
th symposium ara bic linguistics arabic linguistic society march champaign il 
kenneth beesley 

consonant spread ing arabic stems 
coling 
kenneth beesley 

constraining sep dependencies finite state grammars 
bilkent 
bilkent university 
timothy 

le notation arabic noun pattern morphemes inflectional features 
proceed ings second cambridge conference bilingual computing arabic english september 

noam chomsky morris halle 

sound pattern english 
harper row new york 
harris 

linguistic structure brew 
journal american oriental 
grover hudson 

arabic root pattern morphology tiers 
journal lin 
reply mccarthy 
douglas johnson 

formal aspects phonological description 
mouton hague 
ronald kaplan martin kay 

phonological rules finite state ers 
linguistic society america meeting handbook 
sixth annual meeting new york 
december 

ronald kaplan martin kay 

regular models phonological rule systems 
computational linguistics 
lauri karttunen kenneth beesley 

level rule compiler 
technical report istl xerox palo alto research center palo alto ca october 
lauri karttunen andr kempe 

parallel replacement operation finite state calculus 
technical report rank xerox research centre grenoble france december 
ttp www xrce xerox com html 
lauri karttunen ronald kaplan annie zaenen 

level morphology composition 
coling pages nantes france august 
lauri karttunen 

kimmo general morphological processor 
mary dalrymple edit doron john goodman john mccarthy editors linguistic forum number pages 
department linguistics university texas austin austin tx 
lauri karttunen 

finite state constraints 
proceedings international conference current issues computational linguistics malaysia june 
malaysia 
lauri karttunen 

finite state lexicon compiler 
technical report istl xerox palo alto research center palo alto ca april 
lauri karttunen 

constructing lexical transducers 
coling kyoto japan 
lauri karttunen 

replace operator 
proceedings rd annual meeting acl cambridge ma 
available www xrce xerox html 
lauri karttunen 

directed replacement 
proceedings rd annual meeting acl santa cruz ca 
laura kimmo koskenniemi 

finite state description morphology case study ancient 
coling pages 
martin kay 

finitestate morphology 
proceedings third conference european chapter association computational linguistics pages 
george anton 

computing prosodic morphology 
coling pages 
kimmo koskenniemi 

level morphology general computational model word form recognition production 
publication university helsinki department general linguistics helsinki 
john mccarthy 

prosodic theory morphology 
linguistic inquiry 
