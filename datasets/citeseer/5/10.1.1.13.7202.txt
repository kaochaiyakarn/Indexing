task modelling context sensitive user interfaces tm limbourg jean vanderdonckt universit catholique de louvain institut administration de gestion place des louvain la neuve belgium limbourg 
ucl 
ac 
national institute research development informatics bd bucharest romania 
org 
explosion devices computing platforms contextual conditions user interfaces confronted need adapted multiple configurations context 
past techniques developed perform task analysis obtaining single user interface adapted single context 
user interface may unusable contexts emerges need modelling tasks supported multiple contexts considering multiple combinations contextual conditions 
purpose concept unit task exploited identify point traditional task models break parts contextinsensitive part context sensitive part 
widespread task model notation examine discuss possible configurations modelling context sensitive task 
particular form selected attempts achieve clear separation concern context insensitive part context sensitive part new decision tree branches context sensitive tasks depending contextual conditions 
questions factoring possible elements common multiple contexts representation resulting task model discussed 
user interfaces uis today applications longer executed single fixed context 
multiplication possible contexts provoked new heterogeneity computing platforms device capabilities posing new constraints 
results computing platforms exhibiting drastically different interaction capabilities 
coping differences implies rations ui traditional ui change widget resizing reduction full widget scrollable version graceful degradation sophisticated widget moderate redistribution widgets windows 
classic problem having cross computing platform uis appearing new collection constraints longer imposed computing platforms factors type user external resources manipulated ui network ambient environment 
instance studied registration procedure performed completely different contexts 
context secretary registers child leisure activity personal computer quiet environment accessible facilities 
second context equipped palmpilot register children arriving parents short amount time typically minutes 
atmosphere tense children long time want catch parents collect required information 
children running entrance making context stressed 
reasons interactive task reduced minimum vital 
uis consequently expect gracefully evolve changing environment changes context may occur 
changes may endanger predicted usability predefined ui :10.1.1.48.5184
context defined complete environment user carrying interactive task fulfil role played specific organisation 
types characteristics simultaneously determine context 
characteristics internal application ui computing platform software hardware parameters interaction devices network bandwidth latency screen resolution 

characteristics external technical system type user skills knowledge preferences sound light conditions geographic position building stress level organisation structure information channels 
change characteristics may generate possible change context 
course combination changes multiple characteristics impose complicated change context 
challenge ui designer match ui configuration look feel set constraints imposed new characteristics resulting context 
context sensitivity referred ability ui execute reconfiguration context variation stay adapted new context 
importance designing uis multiple contexts stressed studied limited 
particular underlined return considering model approaches address issues context sensitivity expected due wide variety contexts 
critical models allow elegant way segment different aspects ui design relevant different contexts isolate issues context specific ones 
model approaches task model typically user task elicitation process results task model user model possibly domain model :10.1.1.48.5184
task model recognised fundamental point initiate ui design process user centred 
address issues raised task modelling context sensitive uis 
section reviews efforts undertaken modelling context sensitivity task models examines efforts situated steps method designing context sensitive uis 
initiate method section analyses possible approaches modelling task context sensitive uis selected task model associated notation 
resulting model exploited section highlight various model configurations varying amount context sensitive sub tasks single multiple contexts 
problem factoring common elements models studied section 
case study provided section 
explains main benefits approach model currently tool support rest method 
designing context sensitive user interfaces major steps producing context sensitive ui may identified fig 

production context sensitive task model task model foresee sub tasks considered single context multiple contexts 
activity may involve adding sub tasks especially supported particular context withdrawing sub tasks supported particular context 
task model obey separation concern principle context insensitive part clearly separated context sensitive part showing relationship 

production generic ui model generic ui model supposed model ui independently context considering contextinsensitive part context sensitive task model 

production specific ui model specific ui model supposed model ui depending constraints intended contexts considering context sensitive part context sensitive task model 
due variation constraints multiple ui models may produced 
model covers contexts possible provided usability properties preserved ui hold expected properties simultaneously 

production final running ui previous model exploited design time automatically generate code html css ing style sheets web contexts wml cellular phone contexts xml xsl extensible style sheets xml compliant browsers particular con text interpreted run time produce expected ui 
task model generic model running domain model user ctt html css uiml voice xml xml xhtml wml xml xsl fig 

steps method designing context sensitive user interfaces fig 
highlights approaches languages targeted steps method 
example uiml encompass task model precisely supports smooth transition platform independent ui model platform dependent ui model turn converted code programming language target computing platform 
locate points task model separation points context insensitive part context sensitive part task specified look back concept basic task unit task 
question useful base unit task decomposition parts 
suggest answer question relying concept unit task 
identification elementary task important concern decade generally agreed definition 
card moran newell defined unit task lowest level task user really wants perform 
tauber defined basic task task system provides single command unit delegation 
van van der veer unit task executed performing basic tasks 
relationship unit tasks basic tasks important shows problems user may experience tries accomplish goals ui 
give indication task decomposition done 
ctt notation elaborated patern basic tasks defined tasks decomposed 
basic tasks classified types user tasks application tasks interaction tasks 
classification extends definition tauber tasks related single function provided system 
order design user interface starts specification called user virtual machine uvm conceptual model competent user user knowing delegate task computer 
specification basic tasks done terms conceptual events commands objects states attributes values places entry uvm 
definition tauber relates basic tasks ui objects leaves outside specification user tasks related ui objects 
basic tasks defined tauber roughly correspond interaction tasks ctt 
basic task classification proposed complete comprises user tasks application tasks reflect cognitive activities user 
consider unit tasks potential candidates separate task model context insensitive part stops unit tasks device context independent context sensitive part ends basic tasks device context dependent 
method developed support task models address multiple types user form multiple contexts 
method polymorphic tasks 
main advantage method ability incorporate style variations depending user types single model having different models possibly inconsistent 
section possible approaches modelling context sensitive task initiate instance steps method analysed 
possible approaches modelling context sensitive tasks context sensitive task defined task may require context switching performance 
user performed particular sub task context sub tasks possibly task units located deeper task hierarchy may require user changes current context task carried complete main task 
varying context imposes change user 
necessary sub tasks context sensitive task context sensitive 
task unit require context switching implies encompassing task context sensitive 
addition task unit may particular context multiple contexts similar nature 
imagined context sensitivity intrinsically part carrying global task 
model context sensitive task start scratch invent totally new way modelling tasks take account context sensitivity 
preferred rely existing task modelling technique received attention theoretical soundness experimental studies warrant selection 
notation selected reasons editor exists 
previous expanding original ctt notation support operative tasks possible approaches extend ctt explicitly modelling context sensitive tasks monolithic approach graph oriented approach additional context sensitive part 
monolithic approach consists drawing global task model directly encompass context insensitive parts context sensitive parts 
parts find level task decomposition sub tasks forth 
classic task models represented tree decomposition parent child relationship exploited 
question cut tree show clear separation context insensitive context sensitive task units 
context may occur task accomplishment separation may located task tree 
distinction drawn tree dotted lines surround context sensitive parts distinguishable rest task tree fig 

sim parent child relationship drawn task model temporal relationships omitted temporarily 
context sensitive par rest context insensitive fig 

monolithic approach modelling context sensitive task main advantage approach unicity task model modelled single model 
context sensitive parts hard differentiate nodes branching sub trees reflect possible changes context nodes indicating task units carry context changed 
consequently visual cue identifying changes context 
graph oriented approach attempts address shortcoming extracting sub trees resulting context sensitive part separate trees related needed 
consists establishing relationship sub trees describing task units resulting changes context fig 

fig 

graph oriented approach modelling context sensitive task biggest advantage approach relies distinction sensitive context sensitive parts 
resulting model looses hierarchical structure directed graph 
approach introducing additional relationships may increase model cluttering 
kind graph harder interpret manipulate tool 
conversely representation context may change task model 
context sensitive separation approach attempts solve problem recognising context sensitive part holds types arcs nodes traditional arcs nodes find classic task tree nodes represent task units various levels decomposition arcs express parent child relationship 
decision arcs nodes select particular sub tasks carry depending conditions expressed properties context 
properties called contextual properties example type computing platform screen resolution network bandwidth 
conditions contextual properties called turn contextual conditions 
chaining contextual conditions form decision tree properly branches appropriate task units depending context selected 
context sensitive separation approach consists drawing fig 
dl context insensitive part context sensitive part fig 

context sensitive separation approach modelling context sensitive task context insensitive tree containing decomposition tasks units change context changes ends decision points branch decision tree considering right context points fig 

series context sensitive trees modelling task units supported contexts middle fig 

decision tree right part fig 
summarising contextual conditions 
expected branch labeled contextual condition time avoid multiple logical formula branches appearing level form partition possible values contextual condition 
instance contextual condition currently computing platform possible values pc macintosh webtv 
decision tree de detailed needed levels contextual conditions con textual condition considered time 
leaves tree branch context sensitive tree tree having respectively root 
approach clear distinction context insensitive part context sensitive part decision tree making link parts 
different contexts may considered similarly different locations context insensitive part 
consequently way factor common parts context sensitive part depending selected context 
complete separation approach aimed factoring similar sub trees possibly different locations global task tree minimising duplication context sensitive sub trees 
consists identifying fig 
non context sensitive part similarly produced context sensitive separation approach 
series separate decision trees representing branching possible contexts decision points root middle fig 

series sub trees factored task units carry needed sub tree considered value final contextual condition dotted part right fig 

difference respect previous approach context sensitive part consists collection sub trees may called different places decision tree 
sub tree unique 
dll dll fig 

complete separation approach modelling context sensitive task advantages complete separation approach obviously separated context sensitive separation ap proach context insensitive part decision part context sensitive part consisting unique sub trees decision trees edited independently logic context sensitive context insensitive parts task oriented context detection oriented 
major inconvenience approach dramatically suf proliferation trees unique trees direct linking 
maintaining series trees repository quite complex especially algorithms ui derivation modelling different initial task model noted ctt 
reasons came better solution set combining unique representation monolithic approach decision tree clear separation discussed context sensitive separation approach produce model closer initial ctt notation 
final solution consists fig 

context insensitive part typically modelled ctt task model 

decision tree represented ctt notation elements different contexts linked sequentially optional sub tasks level sequencing operator different contextual conditions expressed sub sub tasks choice operator mutual exclusion fi nally leaves decision trees roots context sensitive part 
context sensitive part series sub trees typically modelled 
final approach close traditional ctt notation respecting identification areas especially decision tree 
preserve hierarchical structure risk sub tree reproduction sub tree context sensitive part different locations case complete separation approach 
context insensitive part context selection tree sub context sensitive st csst csst csst csst csst csst csst fig 

final approach modelling context sensitive task configurations context sensitive task models adopting formalism introduced fig 
may consider different configurations context sensitive task model depending number context sensitive sub tasks model number possible contexts 
assume single interactive task consisting sub tasks level decomposition possible contexts 
depending values different configurations examined summarised table 
graphically depict analyse possible configurations contextsensitive task models assume horizontal line represents ctt operator consider task tree level decomposition parts 
sub task said context sensitive sub sub tasks may change context changes 
table 
possible configurations context sensitive task models single context multiple contexts context context insensitive tree context insensitive tree sub task fig 
decision tree contextsensitive tree fig 
context sen context insensitive tree context insensitive tree sub task decision tree decision tree branch context context sensitive tree fig 
trees fig 
context context insensitive tree context insensitive tree sensitive sub decision trees branch decision trees branches tasks context sensitive trees context sensitive fig 
trees fig 
context context insensitive tree context insensitive tree sub tasks decision trees branch decision trees branches context sensitive trees context sensitive fig 
trees fig 
context sensitive sub task configuration traditionally ctt model single context fig 

multiplicity contexts case affect context sensitive 
decision tree gives rise void context sensitive part fig 

context sensitive sub task decision tree reduced considering branch context sensitive sub task single context fig 
branches multiple contexts fig 

case means context sensitive part conditionally performed change context second case occurrence new context may trigger new decomposition context sensitive part 
sub kl su sst sst sst sst sub sk sst sst fig 

configurations context sensitive sub task single vs 
multiple contexts 
discussed guarantee context sensitive sub tasks remains unique 
sst sst sst sst csst csst csst csst csst csst fig 

configurations context sensitive sub task single vs 
multiple contexts 
numerous context sensitive sub tasks say possible decision trees decision tree part sub task 
branch leads context sensitive task respectively context sensitive tasks single context fig 
respectively multiple contexts fig 

case obtain maximum context sensitive trees 
context sensitive tasks respond possible contexts 
subset appear 
css csst csst csst csst csst csst csst csst fig 

configurations context sensitive sub task single vs 
multiple contexts 
sub tasks context sensitive course longer need keeping context insensitive part empty 
single context task model reduced decision tree branch test right context context sensitive trees related context sensitive sub tasks fig 

csst csst fig 

configurations context sensitive sub tasks single context 
case multiple contexts context insensitive part empty leaves space potentially huge decision tree branches level context sensitive tasks subsequent level fig 
tt 
cases task model begins directly decision tree branch context sensitive sub tasks appropriate consider depending identified context resulting parsing decision tree 
csst csst csst csst csst csst csst csst csst csst csst csst csst csst csst fig 

configurations context sensitive sub tasks multiple contexts 
factoring common parts multiple contexts criticised possible configurations task models examined previous section address problem factoring identical elements tree 
worst consequence similar elements task model task units may reproduced times times part 
raises question concentrate contextual conditions branching different context sensitive tasks decision tree distribute global task tree maximise factoring common parts avoid duplication 
discuss issue assume task model inputting information needs carried computing platforms personal computer cellular phone web appliance low high resolution 
gives rise possible contexts 
assume scenario task contains sub task displaying general information logo date time context consider web appliance additionally display help links provide guidance visitors 
context sensitive task model factoring represented fig 

model begins decision tree contextual conditions identifying computing platform detecting screen resolution 
sub tasks put sub trees leaves decision tree 
fig 
hybrid factoring adopted 
observing sub task display information carried possible contexts sub task extracted rest non context sensitive part 
sub tasks mobile phone case may performed sequential individual manner model prefers leave arrangement sub tasks contextual condition states web appliance detected help links displayed 
arrangement sub tasks unique web case low resolution context sensitive decom position produced maintained 
arrangement sub tasks identical pc web high resolution cases leading contextual condition gathering contexts 
factoring hybrid hand display information correctly factored hand leaves tree unique input name duplicated times 
contextual conditions longer equiv longer simple conditions simple values output necessarily mutually exclusive 
avoid complex contextual conditions avoid possible overlapping values suggest modelling context sensitive task progressive factoring 
fig 
display information sub task common possible contexts kept context insensitive part 
decision tree begins simple contextual condition currently computing platform 
nodes associated values condition give rise individual sub trees computing platform 
observing sub task dis information person location ion seen input input put put put put display display ty de de input inp put form address display display input links person display input input input input input input input input input input address zip ally address zip ally code 
fig 

task model factoring hybrid factoring progressive factoring 
play links common sub cases web appliance case added context sensitive sub task local sub tree 
second contextual condition asked resolution web appliance screen 
possible values give rise individual sub trees detailing specific context sensitive sub tasks perform case 
input person sub task common cases decomposition beneath sense isolate analogy display links sub tasks 
progressive way factoring identical elements context sensitive part ensure simple contextual conditions preserved 
price pay mixing decision tree context sensitive part arcs nodes introduced increasing importance notation see difference 
may desirable factor common parts 
case study illustrate applied introduce case study described user scenario task child registration leisure activity 
child registered leisure club children various activities organised 
time child wants participate activity register organisation issues producing invoice person responsible child 
interactive task carried contexts 
non stressing context written registration form sent club secretariat 
context task may decomposed sub tasks identifying child activity subtasks covers information name name birth date sex computed age phone number responsible person 
information may clude public private information free text case need 
picture added 
identify child secretary searches data base name name 
action may processed iteratively child selected current list 
identifying responsible person child possible person personal identification number provided name name title address city zip code country phone numbers 
registering child depending computed age space availability activities list possible activities displayed 
activity char name monitor place date hours age interval current attendance maximum attendance 
depending information cost registration computed added invoice 
child club member automated registration added cost 

stressing context vocal registration communicated sible person secretary noisy confusing environment 
morning activity date secretary downloads pda list current club members list possible activities day 
child suddenly arrives club entrance responsible person secretary asks name name attempts quickly locate list 
child located secretary assumes rest trouble 
order responsible person long secretary input name address 
remainder filled 
secretary takes picture child id activity selected provided constraints met 
secretary works pressure people arrive time short amount time running children prevent quickly grasp information accurately 
stressing period secretary comes back pc transfers information completes task retrieving information data bases described 
fig 
represents possible task model task restructured depending context holds sub tasks 
task modelling process child registration task simplified follows stressing context operator searching name child list desired courses chosen name child name correspondent address recorded desired courses chosen 
responsible person registration optional child previously recorded 
normal context full registration child correspondent new child performed 
case correspondent child considered 
task modelling progressively illustrated fig 

seen context depending data source written document verbal 
second seen operative correspondent role relevant 
illustrates second context 
context modelled follows 
child registration input child name stressing context full registration performed operator 
correspondent registration stressing context name address recorded 
normal context details recorded optional task 
second context modelled operator 
method modelling context sensitive tasks aid notation 
approaches considered analysed come final approach combining clear separation context sensitive part context insensitive part context decision tree fig 

possible task model child registration leisure activity 
fig 

main task child registration leisure activity partial modeling 
fig 

sub task identifying child 
fig 

sub task identifying responsible person 
preserving hierarchical structure model expressed ctt 
order distinction normal choice operator ones decision tree decided introduce marked structured annotation tasks representing nodes decision tree 
task aug mented current value low moderate high contextual condition considered time available bandwidth 
choose export resulting ctt model xml compliant file facility provided 
xml file transformed compliant file xslt transformations 
file exploited ui derivation algorithms progressively derive generic ui specific ui code generation interpretation described fig 

study derivation process importance piece research context sensitive task model domain model separately simultaneously considered derive presentation dialog models turn refined specific considering user model 
today case studies context sensitive tasks performed method including map annotation assistant described multi context registration procedure stressed highly constrained quiet moderately constrained environments 
limitation cur rent model relying inability highlight change context task accomplishment 
extended model able show different sub task trees depending different contexts considered decision point 
unable show sub task trees branch sub task tree denote dynamic change context context changing user carrying task 

abowd key 
better understanding context context awareness 
technical report research report georgia university technology 
accessible ftp ftp cc gatech edu pub gvu tr pdf 

abrams williams 
uiml appliance independent xml user interface language 
mendelzon editor proceedings th international world wide web conference www toronto may amsterdam 
elsevier science publishers 
accessible org ws papers hypertext media uiml uiml html 


task dialogue task user interface design 
bulletin 

coutaz 
unifying framework development plastic user interfaces 
proceedings ifip wg conference engineering user interface toronto may london 
chapman hall 

card moran newell 
psychology human computer interaction 
lawrence erlbaum associates new york 

eisenstein vanderdonckt puerta 
adapting mobile contexts user interface modeling 
proceedings ieee workshop mobile computing systems applications monterey december pages los alamitos 
ieee press 

eisenstein vanderdonckt puerta 
applying model techniques development user interfaces mobile computers 
proceedings cm conference intelligent user interfaces iui albuquerque january pages new york 
acm press 

johnson 
human computer interaction psychology task analysis software engineering 
mcgraw hill 

nardi 
activity theory basic concepts applications 
acm press new york 
chi tutorial notes vol 


myers hudson pausch 
past user interface tools 
acm transactions computer human interaction 
accessible www acm org pubs art journals tochi myers myers 
pdf 

patern 
model design evaluation interactive applications 
springer verlag berlin 

patern mancini 
diagrammatic notation specifying task models 
howard hammond editors proceedings ifip tc international conference human computer interaction interact sydney july pages boston 
kluwer academic publishers 

santoro 
formal model cooperative tasks concepts application en route air traffic control 
markopoulos johnson editors proc 
th int 
workshop design specification verification systems dsv june pages vienna 
springer verlag 

puerta eisenstein 
representational basis user interface transformations 
ch 
wiecha szekely editors proceedings chi workshop transforming ui enabling increased variety users devices tasks interface transformations seattle april new york 
acm press 


unified user interface design method chapter pages 
lawrence erlbaum associates mahwah 

szekely sukaviriya 
ative interface models user interface construction tools mastermind approach 
engineering human computer interaction pages 
chapman hall london 

tauber 
etag extended task action grammar 
language description user task language 
diaper gilmore cockton shackel editors proc 
rd ifip tc conf 
human computer interaction interact cambridge august pages amsterdam 
elsevier 

coutaz 
plasticity user interfaces framework research agenda 
sasse ch 
johnson editors proceedings th ifip tc international human computer interaction interact edinburgh august september pages london 
ios press 

van van der veer 
ontology task world models 
proc th int 
workshop design specification verification interactive systems dsv june pages vienna 
springer verlag 
