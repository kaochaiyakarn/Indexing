follow leader online optimization adam kalai mit santosh vempala mit prepared operations research seminar april linear optimization central algorithmic problem applications 
consider natural online version optimization problem solved repeatedly sequence periods objective direction upcoming period unknown 
models online versions known optimization problems max cut variants clustering classic online binary search tree problem 
algorithms problem competitive optimal static solution chosen hindsight 
algorithms proofs motivated geometric considerations 
standard linear optimization problem stated follows feasible set objective vector goal choose minimize 
problem special cases widely studied example linear programming semide nite programming discrete problems max cut traveling salesman optimal binary search trees 
problems online version natural 
consider online linear optimization problem feasible set bounded objective vectors choose knowing goal minimize 
consider examples 
max cut multigraph choose cut 
score cut number edges crossing cut refer score cost maximization problems 
online version linear maximization problem edge added time 
knowledge edge choose cut receive score edge crosses cut 
binary search trees nodes sequence accesses nodes 
choose binary search tree minimizes sum depths accessed nodes 
viewed linear minimization problem sequence accesses represented objective vector ith coordinate number accesses node tree represented vector view max cut linear optimization problem consider coordinate pair vertices objective vector coordinate number edges cut represented vector coordinates di erent sides 
feasible set case convex 
ith coordinate depth node online version problem repeatedly choose tree anticipation access 
linear programming consider speci maximization example illustrated 
ine version trivial online version sequence cost vectors 
example illustrates naive follow leader algorithm performs poorly 
worked best empirical distribution past 
choose vector 
clear follow leader rst period total score 

max 

example online maximization problem doing worked best past bad 
illustration fel algorithm uniform cube 
samples directions drawn cube 
maxima directions averaged 
requirement solution changed frequently period period 
follow lazy leader fll algorithm described section addresses issue change expected times sequence length analyze performance online algorithm compare performance optimal ine algorithm 
single solution periods ine knowing advance solution minimizes total equivalently average cost 
give cost min cost min 

compare cost minimum called static ine adversary terms additive multiplicative bounds exibility change period period period know course best cost achieve period min 
impossible competitive dynamically optimal solution dynamic ine adversary 
intuitive solution called follow leader 
period uses best solution observed data example solution achieves score optimal static solution achieves score periods 
similar situation occurs max cut problem 
consider node graph edges request sequence 
worst case follow leader achieves score best static solution gets note randomly breaking ties leader solve problem example ties 
additive error called regret multiplicative error termed competitive ratio 
idea randomness space cost vectors directly space feasible solutions may complicated structure 
attempt solve optimization problem arbitrary feasible sets assume minimization oracle cost vector direction returns minimum 
words arg min 
follow expected leader fel requires convex period 
choose independently distribution 


fel opposed fll set convex choosing average points addition set separation oracle fel implemented polynomial time 
theorems assume jc upper bounds diameter feasible set admittedly arti cial norm problem inherently axis aligned problem 
appendix state corresponding bounds norm general incomparable worse dependence dimension worse applications 
di erence analysis depicted see non overlap region cubes shifted jcj smaller non overlap balls shifted jcj 
general consider bounded set possible objective vectors may contain origin simple modi cations algorithms give bounds depend diameter set manner similar theorem 
uniform cube fel fll fll cost fel cost min cost set periods restart periods fll cost min cost log prob 
fel cost min cost expected number times fll changes solution queries 
assumptions impossible constant competitive multiplicative sense min cost 
assume costs positive 
obtain multiplicative guarantees 
similar guarantees obtained assume 
theorem 
jxj 
fel fll fll cost fel cost min cost log fll changes solution queries probability period 
appropriate schedule reducing restarting fll cost min cost log log prob 
fel cost min cost log theorems proven section 
easy applications online linear programming section statically optimal binary search trees section 
online linear optimization generalizes known problem predicting expert advice section case simplex 
consider situation approximate minimization oracle exact oracle section show algorithm large class approximation algorithms call pointwise approximate 
examples include max cut algorithm classi cation algorithm 
follow lazy leader fll designed serve purposes 
cases convex include examples get high probability bounds expectation bounds picking secondly fll lazy sense rarely changes time 
essentially goal exact distribution fel lazy possible 
ease notation 
distribution chosen 
order update stay large probability move remaining probability 
order move way achieve new distribution assume symmetric origin simple re ection point 
gives follow lazy leader fll symmetric origin 
choose distribution 

period changed 
receiving prob 
max set analysis fel fll may di erent algorithms fact expectation period 
advantage fel achieves bounds high probability requires convex uses calls oracle period 
fll achieves expected bounds fel require convex uses calls oracle 
purpose analysis introduce third algorithm follow random leader frl initially choose 
period 
lemma 
frl fll fel expected costs 
fel frl equal expected costs period 

fll frl equal expected costs period 
proof 
rst statement follows trivially linearity expectation 
distribution period second statement suces show distribution period fll identical distribution frl fll uses frl uses 
seen induction 
base case trivial 
algorithm competitive 
contrast splay trees log competitive 
referring static optimality 
address longstanding conjecture dynamic optimality splay trees algorithms dynamically optimal 
write terms probabilities getting max max min max equality follows induction hypothesis little algebra 
wanted 
probability fll querying oracle period max max dv de nition 
di variation distance shifted di max lemma 
expected number oracle queries fll di 
proof 
follows change variable comparing min cost see changes period 
min cost min cost 


follows de nition 

course knowledge best thing period 
tells period regret 
precise summing get 
min cost follow leader uses period appears similar 
example leader may change 
plan add randomness expectation similar 
introduced frl 
periods expected cost frl cost 
bound cost bound cost period lemma 

min cost 
proof 
objective initial day gives 


de nition 

min cost 
combining gives lemma 
additive lemma lemma order show frl suce show 
close 
single choice quantities may di erent 
fortunately right kind randomness bound expected di erence 

changing expectation correlate long individually distributed 
particular choose possible 
equal depends distribution changes shift variation distance di 
probability di di erence zero 
probability di quantity nonzero max 
argued 
di max 
putting lemma bound additive regret lemma 
chosen periods frl cost min cost di max 
max 
proof 
follows lemmas de nitions min cost frl cost multiplicative lemma di rat max 

rat rat 
combining lemma get lemma 
frl cost max rat min cost max 
geometric parameters vector distribution de ned 
lemma 
uniform distribution cube side vector di jcj proof 
wlog assume components nonnegative suppose uniform cube points coordinate uniform cube points points lie rst cube second exactly measure points union bound di jcj variation distance shifted cubes balls 
balls see shaded regions area sections area 
lemma 
uniform distribution ball radius vector di jcj proof 
think di proportional volume shaded region non overlap balls radius centers distance jcj 
seen gure exactly fraction ball radius lies parallel planes distance jcj center ball 
upper bounded volume cylinder base dimensional ball radius height jcj di jcj vol bn vol bn jcj fact vol bn euler gamma function positive integer 
lemma 
distribution proportional jxj vector rat jcj proof 
triangle inequality rat jxj jx cj jx cj jxj jcj performance guarantees upper bounds diameter feasible set assume jc prove theorems 
proof 
theorem apply lemma chosen 
cube side lemma di jc furthermore max 
jcj 
max 
cube 
lemma frl cost min cost lemma fel frl fll expectation center symmetric 
lemma fll expected number queries equal di queries period 
consider restarting process periods 
suppose completed phases 
frl cost min cost simple algebra shows sum multiply form regret show high probability bounds note total cost sum periods period average ln random variables 
variable nonnegative cherno bounds probability sum larger expectation proof 
theorem lemmas get frl cost min cost max 
jrj ln 
juj jvj get frl cost min cost log lemma fact rst equality theorem follows 
sketch second part run phases 
phase minimum static cost phase restart phase 
tedious dicult show gives expected cost fll cost fel cost min cost min cost log log square roots implies theorem 
similar theorem holds maximization problems 

online linear programming section consider online version linear programming 
standard linear programming problem variables constraints form ax problem maximize linear function 
known classic problem solved polynomial time 
online version repeated optimization problem period new objective vector problem pick solution period knowing cost period 
goal minimize total cost compared best single solution picked hindsight solution linear program min cost min 

ax apply follow expected leader algorithm problem norms described appendix 
diameter bg 
corollary 
periods fel ln schedule uniform ball radius guarantee prob 
fel cost min cost corollary 
suppose periods 
ax fel ln schedule jxj guarantee prob 
fel cost min cost nd approximation algorithms previous section saw online version linear optimization solved optimal ine algorithm 
particular ine optimization problem solved exactly polynomial time online version 
section consider situation algorithm ine optimization problem guaranteed nd approximate optimum 
apply online algorithms change calling exact optimization oracle access approximation algorithm say achieves approximation input cost solution nds times minimum solution minimization problem 
consider optimization problems approximation algorithms special property call point wise approximation 
problems cost incurred online algorithms approximation algorithm exact oracle goes approximation factor de nition 
approximation algorithm linear minimization problem variables said achieve point wise approximation input instance solution nds property optimal solution de nition maximization problems analogous 
algorithms point wise guarantees max cut algorithm metric labeling algorithm feasible set linear optimization problem diameter norm 
approximation algorithm achieves point wise approximation problem 
online version problem cost vector period dimension cost vectors 
theorem 
suppose online minimization problem cost vectors non decreasing vary norm single period 
fll guarantee online cost min cost log similar statement maximization problems replacing example consider max cut problem 
new period edge requested 
online algorithm maintains cut anticipation 
score period edge cut 
goal large reward possible compared reward best single cut chosen hindsight 
corollary 
online max cut problem multigraph nodes fll applied approximation algorithm guarantee online score max score log proof 
easy see randomized algorithm ine problem pointwise guarantee 
remains bound 
examples approximation algorithms pointwise guarantees include randomized vertex ordering algorithms 
binary search trees purposes binary search tree binary tree nodes labeled property node left subtree smaller labels node node right subtree larger labels 
sequence accesses ng cost sequence tree sum depths nodes sequence time required nd node 
sleator tarjan viewed online problem algorithm allowed change tree dynamically cost 
showed splay trees perform factor log best static tree best chosen hindsight 
suppose accesses element cost tree depth 
depth depth vector depths nodes tree fact nding best static tree sequence accesses linear optimization problem objective vector feasible set set depth vectors trees 
dynamic programming nd best tree hindsight time 
pick single tree change trees times variant fll 
lazy trees lt 
choose randomly ng 
accessed ii 
change trees best tree accesses node directly applied fll chose algorithm maintains essential properties fll involve pretending negative fractional accesses updates coordinate time 
essential property maintains period randomly distributed diameter set tree depth vectors algorithm gets accesses lt cost min cost schedule running periods lt cost min cost min cost min cost step follows tree pay access 
note better competitive length access sequence grows 
ignored cost changing trees 
algorithm changes trees expected times accesses time computation tree takes number rotations required 
predicting expert advice problem predicting expert advice special case fx ng coordinate thought expert incurs cost period 
say vector costs period choose prediction convex combination experts predictions cost 
problem require jc typically component bounded 
multiplicative bounds problem observing worst case algorithm fact algorithms period expert incurs cost type bound gives standard min cost log bounds weighted majority 
furthermore view weighted majority fel style algorithm particular distribution computation expected leader done exactly sampling 
trivial see leader change period period multiply weights gives nice analysis algorithm 
conversely may tempted solve problem tools predicting expert advice 
applications solved combining set experts 
terms feasible set expert vertex 
doing best expert imply doing best point feasible set 
problems 
may nitely vertices 
may solved discretization straightforward discretization require number experts exponential give bounds linear dependence logarithmic dependence 
second combining experts require averaging exponential set 
possible particular problems implicitly complicated random walks particular problem requires new solution 
appears linear optimization problems relevant parameter dimension space cost vectors number feasible solutions 
related hope online linear optimization algorithms useful solving problems online algorithms mistake bound learning 
algorithms take optimization oracle add randomness set inputs cost vectors achieve online performance polynomial run times 
common add randomness weights compute feasible solution problems algorithms give generalization terms optimizing adding randomness space costs 
course leader new idea 
fact frl inspired similar solution particular problem list update problem 
algorithm generalize problems arbitrary feasible sets 
results lead questions 
remarked dynamic optimality impossible additional costs possible competitive best dynamic solution allowed change times 
simple trick experts framework competitive algorithm additive term get competitive algorithm solution change times additive ka term 
natural question arises happens introduce cost moving say proportional jx 
dynamically competitive 
question follow leader style algorithms dynamic problems 
problems modifying cost function may allow show dynamic leader change 
imagine comparing scenarios period second periods 
dicult see cost second scenario larger weight second expert rst period 
cost best expert scenarios 
nice better take advantage geometry feasible sets set costs permitted 
nice able algorithms parameter add randomness period period 
great generalize fel nonlinear problems portfolio prediction 
avrim blum 
line learning metrical task system problem 
dimacs workshop online decision making july 
see avrim blum carl burch 
line learning metrical task system problem 
machine learning april 
avrim blum chawla adam kalai 
static optimality dynamic search optimality lists trees 
proceedings thirteenth annual acm siam symposium discrete algorithms soda 
thomas cover 
universal portfolios 
math 
finance 
vempala euclidean embeddings bandwidth minimization proc 
th intl 
symp 
randomization approximation techniques computer science 
feige approximating bandwidth volume respecting embeddings proc 
th acm symposium theory computing 
gr lov asz schrijver geometric algorithms combinatorial optimization springer 
goemans williamson improved approximation algorithms maximum cut satis ability problems semide nite programming acm 
karmarkar new polynomial time algorithm linear programming combinatorica 
khachiyan polynomial algorithm linear programming russian doklady nauk sssr english translation soviet mathematics doklady 
kleinberg tardos approximation algorithms classi cation problems pairwise relationships metric labeling markov random fields proc 
th foundations computer science 
linial london rabinovich geometry graphs algorithmic applications proc 
th foundations computer science 
littlestone warmuth 
weighted majority algorithm 
information computation 
rao small distortion volume preserving embeddings planar euclidean metrics proc 
symposium computational geometry 
daniel sleator robert tarjan 
amortized eciency list update paging rules 
communications acm 
daniel sleator robert tarjan 
self adjusting binary search trees 
journal acm 
appendix guarantees assume jc upper bound diameter theorem 
uniform ball radius fel fll fll cost fel cost min cost appropriate schedule reducing periods fll cost min cost log prob 
fel cost min cost expected number times fll changes solution queries 
assumptions impossible constant competitive multiplicative sense min cost 
assume costs positive 
obtain multiplicative guarantees 
similar guarantees obtained assume 
theorem 
proportional jxj 
fel fll fll cost fel cost min cost nd fll changes solution queries probability period 
appropriate schedule reducing restarting fll cost min cost nd log prob 
fel cost min cost nd 
