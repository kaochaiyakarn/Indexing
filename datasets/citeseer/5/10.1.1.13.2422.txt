appear symposium interactive graphics snap motion assembling run time animations michael gleicher shin lucas andrew computer sciences department university wisconsin madison virtual environments games populated synthetic characters create desired experience 
characters move sufficient realism destroy visual quality experience responsive controllable efficient simulate 
approach character motion called snap motion addresses unique demands virtual environments 
snap motion stm preprocesses corpus motion capture examples set short clips concatenated continuous streams motion 
result process simple graph structure facilitates efficient planning character motions 
user guided process selects common character poses system automatically synthesizes multi way transitions connect poses 
manner connected graphs constructed suit particular application allowing practical interactive control effort manually specifying transitions 
keywords motion synthesis virtual environments motion capture advances graphics hardware rendering software possible build visually rich virtual worlds creating possibilities entertainment training applications 
applications virtual worlds populated believable synthetic characters 
creating characters challenging 
fit visual richness provided virtual environments characters move realistic ways 
time order meet interactivity demands efficiently animated controllable simulation 
introduce methodology allows quality motions synthesized controllable manner little run time overhead 
corpus motion capture data processed set short clips concatenated seamless streams motions run time 
process guided human author identifies independently help system character poses appear frequently corpus 
pose serves jump point motion enters followed motion leaves shown gleicher cs wisc edu www cs wisc edu graphics schematic authoring process 
linear corpus motion single walking motion common pose identified user guided process 
transitions generated common pose forming simple graph 
figures 
result simple graph structure allows clips connected longer motions 
transition generation cleanup operations performed automatically system 
run time character animation module need play precomputed clips valid order determined graph 
user involvement graph construction process allows clips connect ways facilitate control 
animation designer guides system building graph structure contrived easy exploit run time 
particular designer creates graph high branching factor run time motion planner flexibility choose options new action taken 
approach closely related previous non linear animation methods 
particular final graph structures akin move trees common computer games 
key difference graphs constructed opportunistically provided data corpus user guidance form usable graph 
contrast traditional move trees specially contrived motions hand crafted transitions 
sense provide new approach constructing data structures existing approaches real time animation synthesis 
increased automation approach reduces planning effort skill required author graph structures possible author graphs degree connectivity extremely tedious construct traditional methods 
involves main contributions facilitate authoring character motion virtual environments 
provide improved authoring methodology candidate transition points identified automatically 
aids creation graphs small number hub nodes containing large number edges 
speed process adding clips graph allowing author add entire hubs graph time simplify construction automatically suggesting hubs original motion data 
second main contribution provide methods generating multi way transitions 
framework allows cut transitions involve simply concatenating clips processing 
done adjusting original motions transitions seamless smooth satisfy appropriate constraints 
advantages approach keeps resulting graph compact allows efficient generation motions run time 
challenge connect multiple motions manner avoids visual artifacts 
remainder divided sections 
clarify section limitations current tools constructing graphs propose address limitations 
section discuss related 
section describe algorithms explain fit process building graph 
section example results conclude section discussion advantages drawbacks approach 
issues current practices order create streams high quality motion current applications assemble static clips motion created traditional animation techniques motion capture 
assembly process requires making transitions motions 
transitions may difficult create transition running clip character lying trivial clip identical 
practice simple techniques linear blends capable creating transitions cases motions similar 
set motion clips transitions form graph edges pieces motions nodes choice points connecting motions 
graph type called move tree common computer games 
move trees constructed pre planning movements initial clips similar points 
artist chooses exact points clips transitions occur creates transition motions 
commercial motion editing tools character studio xsi diva animation provide support applying simple transition methods linear blends identified points 
structure graph significant impact usefulness 
general connected graph controllable animation 
ideally clips motions connect allowing action take place time 
practice transitions radically different clips prohibitively difficult create 
tradeoffs quality transitions connectivity graphs 
may possible clips connect directly graphs typically nodes incoming outgoing edges 
call nodes hubs 
hubs appear symposium interactive graphics desirable offer advantages flexibility simplifying problem generating motion meets high level requirements 
example particular hub contain different kinds kicks case character easily string sequence strikes high level reasoning module throw punch combination opponent guard 
similarly walking hub outgoing edges correspond step direction 
combined jogging running hubs planning module move characters virtual environment simply specifying speed direction 
graphs containing hubs difficult construct 
authors find places motion corpus motions come devise multi way transitions difficult problem making just clips join smoothly 
current tools offer little support creation hubs 
framework contrast explicitly supports creation hub nodes 
having hand select set clip boundaries conducive quality transitions able automatically provide user sets clips starting frames close 
desired transition locations automatically modify original database cut transitions possible 
specifically transition clips join seamlessly constraints motion foot planted ground enforced constraints exist transition boundaries 
computer games virtual environments move trees demonstrated utility synthesizing motion handcrafted graph 
main limitation technique difficulty authoring process necessary manpower limits complexity graphs range applications afford build 
framework provides alternative manual authoring alleviates problem 
alternate approaches computer animation literature provides number ways generating motion synthetic characters 
virtual environments require continuous streams motion approaches clearly inappropriate 
obvious examples motion capture create individual static clips 
similarly motion capture editing multitarget motion interpolation allow adapt motion new circumstances methods capable producing individual clips 
procedural approaches advantage principle able generate flexible motions arbitrary length 
largest class approaches physically motion synthesis 
physically methods successful natural phenomena failed scale complexities character motions exception particular actions running jumping 
ad hoc procedural methods succeeded larger range character motions require new motion generated hand produce realistic results 
approaches motion synthesis involve constructing mathematical models set motion capture data 
particular researchers hidden markov models switched linear dynamic systems create new motion 
methods provide straightforward way generating streams motion unclear adapted provide high level control required virtual environments 
number graph approaches motion synthesis developed fully automate graph construction process 
methods allow graphs constructed quite quickly expense providing severely limited control graph structure generated graphs unstructured 
contrast explicitly designer structured graphs previous section unstructured motion graphs pre determined connections movements guarantees quickly motion reached 
path motions complex 
methods synthesizing motions unstructured graphs rely search 
looking ahead search algorithms choices meet current needs paths goals 
unstructured graphs inappropriate interactive applications reasons 
interactive systems preclude lookahead search algorithms 
problem difficult know motions possible unstructured graph connectivity complex 
example designer knows certain set transitions required character actions way ensure contained graph 
third control approaches currently interactive applications rely known structure 
reasons believe interactive applications demand designer control graph structure 
graph approach extended graphs fundamental unit static clip motion set carefully chosen clips interpolated 
parameterizing interpolations appropriately finer degree control character example cited specify locomotion continuum directions speeds discrete set choices 
unclear readily approach generalizes larger expressive sets motions 
constructing graphs assume user database motion capture data standard skeletal format 
number motions database irrelevant contain short clips single long clip 
frame motion represented vector parameters 
qn 
vector specifying position root joint world coordinates qi quaternion specifying orientation th joint parent coordinate system oi vector indicating offset th joint parent coordinate system assume linear indexing corpus particular frame vector denoted fi frame corpus 
assume motions annotated relevant constraints effector positions 
limit attention constraints specify heel ball particular foot planted set frames total possible constraints may exist frame 
types constraints far common motion capture data restriction minor 
framework edge graph clip motion node defined group frames transitions motion capture processing systems assume perfectly rigid skeletons case oi explicitly represented 
general skeleton representation employ constraint solver described adds small length changes bones 
appear symposium interactive graphics top diagram schematically represents initial database motions left represented groups frames right corresponding graph 
middle diagram shows result making match set frames 
breaks database smaller clips adds new node graph 
bottom diagram demonstrates addition second match set 
occur 
group frames called match set element match set match frame 
original database motions corresponding graph trivial structure nodes edges refer 
match set naturally partitions database shorter clips turn correspond edges graph attach common node 
system graphs built node time choosing match sets 
desired author simply select match frames manually 
author may specify particular frame system automatically build match set group similar frames 
author system create match set largest collection similar frames database 
graph designer finished creating match sets system automatically adjusts motions corresponding transitions executed simple cuts 
requires choosing common pose match set match frame replaced rigid transformation common pose transforming surrounding frames replacement seamless 
motion leading pose followed motions exiting creating multi way transition 
remainder section details method 
explain process helping graph designer build match sets describe method adjusting original motions generate seamless cut transitions discuss details generating motion final graph 
choosing match frames system helps author create match sets nodes graph finding collections frames similar 
accomplished scalar function fi fj defines distance frames fi fj 
distance function advantage automatically choosing common coordinate system fi fj 
motion fundamentally unchanged rotation vertical axis translation floor plane fj needs aligned fi distance computed 
distance frames fi fj calculated follows 
small neighborhoods frames extracted fi fj 
sets frames converted point clouds 
optimal sum squared distances corresponding points computed point cloud rotated gravity axis translated floor plane 
distance calculation motivated shown 
works clouds points avoid scaling issues angle computations 
small neighborhoods frames extracted fi fj 
point clouds formed attaching markers skeletons 
optimal weighted sum squared distances computed rigid transformations may applied point cloud 
calculate fi fj min appear symposium interactive graphics wk pi pj pi th point cloud generated frame linear transformation consisting rotation degrees vertical axis followed translation 
weights wi sum chosen give importance fi fj importance frames edges neighborhoods 
optimization closed form solution arctan wi xz wi xix xx zz cos sin sin cos barred terms defined similarly 
pair frames database possible transitions connects frames preceding fi frames fj connects frames preceding fj frames fi 
allows assign transitions quality estimate coordinate transformation aligns motion starting motion 
speed interaction system distances aligning coordinate transformations precomputed pair frames database 
particular frame user defined threshold find match set 
fn follows 
motion database form function considering distances frame motion 
local minima functions correspond locally optimal transition points 
form set frames corresponding local minima values threshold 
frames satisfy similarity requirement match frames condition met 
match frame associated displacement map smoothly introduces corresponding transitions motion database 
discussed fully section create displacement maps require match frames wmin frames apart 
order lowest distance add frames wmin frames existing match frame 
graph designer wants serve hub node graph determines transitions connect hub 
interactively choosing different thresholds designer determine appropriate tradeoff number edges attached hub quality resulting motions 
designer may want create node largest group similar frames database 
simply forming frame database returning elements 
ties broken lowest average distance frames frame generate creating transitions graph designer finished creating match sets 
sn system adjusts original database motions join seamlessly transitions points 
transitions occur frames match set sufficient adjust original motions match frames identical values velocities skeletal parameter 
constraints motions accomplished solely adaptation displacement mapping techniques 
constraints matters complicated 
applying displacement maps violate constraints subsequently existing methods enforce motions may change match frames longer identical 
consider cases treating transition generation absence constraints constraints exist 
transitions constraints constraints aren match set si system creates average frame fs skeletal pose representative poses match frames 
pose called common pose 
system applies displacement maps transform match frame common pose 
depicts algorithm 
original database match frames scattered global frame 
compute average pose match frames aligned 
discussed section pair match frames fj fk si rigid transformation aligns top original motions match frames scattered global coordinate system 
middle choose particular match frame align compute average skeletal posture serve common pose 
bottom set displacement maps match frame altered common pose 
purposes executing transition 
transformation applied fj aligns fk 
transformation computed independently equations general inconsistent sense 
attempt find set coordinate transforms consistent example adjusting equation optimize simultaneously coordinate transforms 
point clouds simple closed form solution expensive nonlinear optimization necessary 
hand observe match frames si sufficiently similar coordinate transformations approximately consistent 
may simply select particular match frame define coordinate transforms match frame 
say select fj base redefine appear symposium interactive graphics pq tj 
new coordinate transforms guarantee tpr 
align th match frame si fj base applying transformation base practice fj base chosen arbitrarily 
system attempts choose match frame closest center frames 
corresponds choosing match frame smallest sum distances match frames 
chosen fj base system computes fs aligning match frames coordinate system fj base root position joint offsets joint orientations fs average corresponding quantities match frames 
average joint orientation computed 
form displacement maps replace fk si kj base fs 
match frame identical motion guaranteed continuous transitions 
displacement maps similar previous displacement maps guarantee continuity transitions 
motions different velocity characteristics continuity may insufficient 
reason extend previous efforts building displacement maps preserve continuity 
skeletal parameter compute average velocity match frames 
construct displacement maps motions pass common pose pa motion motion transition motion displacement added motion displacement added transition transitions cause discontinuities motions different velocities 
reason smooth displacement maps 
match frame displacement map smoothly alter motion facilitate transitions depicts motion match frames corresponding displacement maps 
side displacement map extends match frame motion boundary whichever comes 
displacement maps required extend wmin frames side match frames wmin frames apart 
rameter velocities 
motions represented discretely sampled signals care taken computing derivatives 
continuity important scale greater single frame estimate derivatives calculating finite differences point small window filtering results 
side displacement map extends nearest match frame boundary motion whichever comes 
ensure changes occur rapidly require match frames spaced wmin frames apart 
joints skeleton displacement map consists splines root position joint offsets joint orientations 
ends spline zero value derivative center chosen map relevant parameter target value derivative 
construct splines hermite cubic segments orientations construct quaternion splines method 
wmin transitions constraints displacement maps applied original motions constraints motions violated 
consider create smooth multi way transitions simultaneously preserving constraints 
focus common kinds constraints constraints 
constraint specifies left heel right heel left ball right ball fixed ground 
enforce constraint things done positions chosen constrained joint motion smoothly adjusted constrained joints positions 
method enforce constraints 
algorithm important property ensure particular frame altered constraining root balls feet remain current positions 
refer locking frame 
previous section basic strategy construct representative frame fs match set si displacement maps match frames identical fs define con straint exist fs exists majority match frames means individual match frames may gaining losing constraints 
constraints enforced final motion fs satisfy constraints constrained joints ground 
assume true 
section apply displacement maps match sets match frame identical appropriate common pose 
lock match frame apply constraint enforcement algorithm database motions desired properties constraints enforced match set contain identical frames 
choose common poses algorithm section method fails take account constraint information 
problematic locking match frame forcing motions returned constraint solver pass common poses 
example say left heel unconstrained match frame frames away region left heel planted 
left heel happens far ground common pose constraint solver forced generate motion foot leaves ground unnatural speed 
intuitively select fs replace match frame appropriate common pose lock locking little effect possible 
imagine doing locking enforcing constraints match frames remain unchanged 
light step iterative procedure determining particular fs start creating working set initially contains copies match frames appear original motions 
iteration estimates common pose averaging working set creates variant motion passes common pose displacement map technique described section 
possibly violates constraints 
apply constraint enforcement algorithm modified motions possibly adjusting matched frames 
matched frames may longer identical copied back working set 
iteration begins motion original database evolves common pose 
final iteration set common pose fs average poses working set 
experiments small number iterations necessary 
fs generated algorithm necessarily satisfy constraints 
correct choosing positions constraints applying inverse kinematics 
constraint positions general independently fs particular common poses share constraint border clip constraint frame constraint positions common poses chosen clip location 
issue arises common situations character stands place 
describe solution problem appendix 
generating motion run time transition involves pieces information clip re transitioning coordinate transformation aligns current clip 
run time coordinate transformations information needs kept track 
play current clip simply adjust root precomputed requiring match frames constraint state suggested forces exclude potential matches 
appear symposium interactive graphics top frames match set generated automatically short motion 
bottom corresponding common pose 
schematic node martial arts graph generated system 
algorithm creating match sets automatically selected left right ready stances hubs graph 
frame current coordinate transformation transition update transformation 
discussed previous graph approaches motion synthesis certain nodes graph may dead ends sense part cycle 
node entered limit animation produced 
unacceptable virtual environments characters animated arbitrarily long amounts time 
system notifies graph designer possible dead ends finding nodes part largest strongly connected component 
designer may decide add new transitions remove nodes 
results implemented system methods section applied number motion datasets 
screenshot window seen graph designer 
upper right visualization distance function pixel represents fi fj darker pixels corresponding lower distances 
far upper right slice distance function showing distances frame selected user frames database 
bottom window shows schematic graph current match sets 
horizontal black lines represent original motions vertical lines indicate match frames 
frames match set color 
clicking segment schematic causes corresponding clip displayed upper left window 
created set graphs having system automatically create nodes largest sets match frames 
test system started single motion thirteen seconds built graph single node clips see 
moved larger data sets constructing graphs driving input video game controller 
built node graph dataset containing frames seconds martial arts motions 
common poses generated automatically system corresponded ready stances left foot forward right foot forward 
mapped clips buttons allowing user interactively direct character punch kick dodge shuffle step switch stances 
built node graph frames seconds walking data 
graph allowed user guide character specifying curvature path options ranged gentle arc sharp 
combined datasets larger graph allowed previous operations plus ability switch walking fighting modes 
semi automatic nature system possible produce graphs quite quickly 
total amount time necessary build martial arts graph raw data able interactively control character minutes walking graph took minutes 
time spent deciding map clips 
discussion described framework synthesizing character motions virtual environments assembling clips built corpus motion capture data 
meet visual quality demands virtual environments preserving fidelity original motions 
meet performance demands performing processing motions authoring time run time clips simply concatenated appropriate orders 
meet controllability responsiveness demands allowing user guide graph building process ensure graph usable structure 
specifically support encourage creation hub nodes allow different actions reachable common point 
approach automates tedious portions graph construction process possible data opportunistically 
allow graphs created wide range data specifically captured graph construction enable designers build graphs scope expensive produce 
authoring tool described required new techniques developed 
automatically identify potential hub nodes allowing graph designer avoid tedious parts construction process 

introduce displacement maps means creating higher quality cut transitions 

provide method satisfying constraints preprocess allowing complexity constraint satisfaction avoided run time 
run time execution approach intentionally similar current successful methods manually constructed graphs 
believe easier apply methods appear symposium interactive graphics practical virtual environments 
reducing effort required construct graphs suitable run time synthesis hope run time animation accessible broader array applications 
uw graphics group help project 
motion data generously provided gordon house moves studios 
research supported part wisconsin university industry relations nsf ccr ccr equipment donations intel 
lucas supported intel foundation fellowship 
forsythe 
interactive motion generation examples 
proceedings acm siggraph annual conference series july 
matthew brand aaron hertzmann 
style machines 
proceedings acm siggraph annual conference series pages july 
armin bruderlin lance williams 
motion signal processing 
proceedings acm siggraph annual conference series pages august 
michael gleicher 
retargeting motion new characters 
proceedings acm siggraph annual conference series pages july 
michael gleicher 
motion path editing 
proceedings acm symposium interactive graphics march 
jessica hodgins wayne david brogan james brien 
animating human athletics 
proceedings acm siggraph annual conference series pages august 
jun kim soo kim sung yong shin 
general construction scheme unit quaternion curves simple high order derivatives 
proceedings acm siggraph annual conference series pages august 
lucas michael gleicher fred 
motion graphs 
proceedings acm siggraph annual conference series july 
lucas john schreiner michael gleicher 
cleanup motion capture editing 
acm symposium computer animation july 
lee chai paul jessica hodgins nancy pollard 
interactive control avatars animated human motion data 
proceedings acm siggraph annual conference series july 
lee sung yong shin 
hierarchical approach interactive motion editing human figures 
proceedings acm siggraph annual conference series pages august 
yan li wang yeung shum 
motion texture level statistical model character motion synthesis 
proceedings acm sig graph annual conference series july 
karen liu zoran popovi 
synthesis complex dynamic character motion simple animations 
proceedings acm siggraph annual conference series july 
alberto 
understanding motion capture computer animation video games 
academic press san diego ca 
mark john buchanan tom calvert 
data driven motion transitions interactive games 
eurographics short presentations september 
sang il park shin sung yong shin 
line locomotion generation motion blending 
acm symposium computer animation july 
ken perlin 
real time responsive animation personality 
ieee transactions visualization computer graphics march 
ken perlin goldberg 
improv system scripting interactive actors virtual worlds 
proceedings acm siggraph pages august 
zoran popovi andrew witkin 
physically motion transformation 
proceedings acm siggraph annual conference series pages august 
rose cohen 
verbs adverbs multidimensional motion interpolation 
ieee computer graphics application 
arno richard szeliski david salesin irfan essa 
video textures 
proceedings acm siggraph annual conference series pages august 
wiley hahn 
interpolation synthesis articulated motion 
ieee computer graphics application 
andrew witkin zoran popovi 
motion warping 
proceedings acm siggraph annual conference series pages august 
appendix fs generated iterative algorithm section general satisfy constraints constraints explicitly enforced 
amounts identifying positions constraint performing inverse kinematics ensure relevant joints reach positions 
process complicated fact choice constraint positions independently fs consider case si sj share constraints border clip constraints frame 
resulting motion continuous require fs fs transformed aligned place constrained joints location fs fs linked constraints 
constraints exist original motions common poses linked arbitrarily 
linked constraints artifact having bizarre set motions 
contrary occur quite ordinary datasets 
consider example set motions waiting 
character shuffle feet tap toes subtle shifts posture redistribute weight 
event constraints exist frame dataset common pose linked constraints common pose 
ensure continuous motion linked constraint positions fs fs need identical rigid transform 
recall making transition align starting motions match frames position orientation 
section explained determine coordinate transformations values computed section 
free pick different transformations particular select ones specifically align constraint positions 
appear symposium interactive graphics screenshot graph building interface 
rigid transformation configuration feet flat floor uniquely defined distance centers feet orientation foot relative line connecting centers 
problem ensure linked constraint positions identical rigid transformation rigidly similar 
determine common poses linked simply looking clip determining bordering match frames share constraints exist clip 
linked constraints joints foot foot rigid constraint positions automatically rigidly similar 
linked constraints exist joints feet segments connecting centers feet respectively starting common pose common pose 
orientations left right foot starting common pose relative defined similarly 
ensure rigid similarity sufficient require 
linked constraints exist joints different feet situation reduced joint case rotating foot linked joint joint flat floor 
divide common poses equivalence classes constraint linkage 
common pose equivalence class linked constraints feet common pose class 
equivalence class find average foot orientations distance foot centers 
common pose adjusted average parameters 
ensured set linked constraint position rigidly similar 
coordinate transformations align clips computed section may align constraints positions 
addressed redefining coordinate transformations constraint positions identical frame starting clip frame clip 
