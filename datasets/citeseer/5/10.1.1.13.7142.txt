clope fast effective clustering algorithm transactional data yang guan dept computer science engineering shanghai tong university shanghai china yang yl guan xd jy cs edu cn studies problem categorical data clustering especially transactional data characterized high dimensionality large volume 
starting heuristic method increasing height width ratio cluster histogram develop novel algorithm clope fast scalable quite effective 
demonstrate performance algorithm real world datasets compare clope state art algorithms 
keywords data mining clustering categorical data scalability 
clustering important data mining technique groups similar data records :10.1.1.131.5152:10.1.1.121.9220:10.1.1.13.4395
attention put clustering categorical data records non numerical attributes :10.1.1.6.4718
transactional data market basket data web usage data thought special type categorical data having boolean value possible items attributes 
fast accurate clustering transactional data potential applications retail industry commerce intelligence fast effective clustering transactional databases extremely difficult high dimensionality sparsity huge volumes characterizing databases 
approaches means clarans effective low dimensional numerical data 
performances high dimensional categorical data unsatisfactory 
hierarchical clustering methods rock demonstrated quite effective categorical data clustering naturally inefficient processing large databases 
permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
sigkdd july edmonton alberta canada 
copyright acm 
algorithm groups large categorical databases iterative optimization global criterion function 
criterion function notion large item item cluster having occurrence rates larger user defined parameter minimum support 
computing global criterion function faster local criterion functions defined top pair wise similarities 
global approach suitable clustering large categorical databases 
propose novel global criterion function tries increase intra cluster overlapping transaction items increasing height width ratio cluster histogram 
generalize idea introducing parameter control tightness cluster 
different number clusters obtained varying parameter 
experiments show algorithm runs faster clustering quality quite close rock algorithm 
gain basic idea algorithm take small market basket database transactions apple banana apple banana cake apple cake dish dish egg dish egg fish 
simplicity transaction apple banana abbreviated ab small database want compare clustering ab abc acd de def ab abc acd de def 
cluster count occurrence distinct item obtain height width cluster 
example cluster ab abc acd occurrences 
shows results geometrically histograms items sorted reverse order occurrences sake easier visual interpretation 
ab abc acd de def clustering ab abc acd de def clustering 
histograms clusterings 
judge qualities clusterings geometrically analyzing heights widths clusters 
leaving identical histograms cluster de def cluster ab abc histograms different quality 
histogram cluster ab abc acd distinct items blocks cluster acd de def number blocks 
clearly clustering better prefer overlapping transactions cluster 
example see larger height width ratio histogram means better intra cluster similarity 
apply straightforward intuition basis clustering algorithm define global criterion function geometric properties cluster histograms 
call new algorithm clope clustering slope 
quite effective clope fast scalable clustering large transactional databases high dimensions data web server logs 
rest organized follows 
section analyzes categorical clustering problem formally presents criterion function 
section details clope algorithm implementation issues 
section experiment results clope real life datasets compared 
discussion related works section section concludes 

clustering slope notations notations 
transactional database set transactions tn 
transaction set items im 
clustering 
ck partition tn ck tn ci ci cj ci called cluster 
stated respectively number transactions number items number clusters 
clustering group similar transactions 
clustering algorithms define criterion functions optimize maximizing intra cluster similarity inter cluster dissimilarity 
criterion function defined locally globally 
local way criterion function built pair wise similarity transactions 
widely numerical data clustering pair wise similarities lp xi yi metric points 
common similarity measures categorical data jaccard coefficient dice coefficient simply number common items transactions 
large databases computational costs local approaches heavy compared global approaches 
pioneered wang algorithm global similarity measures categorical data clustering 
global approaches pair wise similarity measures individual transactions required 
clustering quality measured cluster level utilizing information sets large small items clustering 
computations global metrics faster pair wise similarities global approaches efficient clustering large categorical databases 
compared clope uses simpler effective global metric transactional data clustering 
better clustering reflected graphically higher height width ratio 
cluster find distinct items cluster respective occurrences number transactions containing item 
write set distinct items occ occurrence item cluster draw histogram cluster items axis ordered occurrences occurrence axis 
define size width cluster occ height cluster defined 
simply write important inferred context 
illustrate detailed histogram cluster 
please note geometrically histogram dashed rectangle height width size occurrence item 
detailed histogram cluster acd de def 
straightforward larger height means heavier overlap items cluster similarity transactions cluster 
running example height ab abc acd height acd de def 
know clustering better characteristics clusterings 
define criterion function height 
take simple database abc def 
overlap transactions clustering abc def clustering abc def height 
choice works better example 
gradient quality measure cluster clustering abc def better gradients clusters larger gradient cluster abc def 
define criterion function clustering need take account shape cluster number transactions 
clustering ck straightforward definition criterion function 
profit ci ci ci ci fact criterion function generalized parametric power follows 
profit ci ci positive real number called repulsion control level intra cluster similarity 
large transactions cluster share large portion common items 
separating transactions different clusters result larger profit 
example compare clustering database abc abcd bcde cde abc abcd bcde cde abc abcd bcde cde 
order achieve larger profit clustering profit clustering greater means repulsion greater ln ln 
contrary small repulsion group sparse databases 
transactions sharing common items may put cluster 
database abc cde hij higher profit clustering abc cde hij abc cde hij needs repulsion smaller ln ln 
state problem clustering transactional data 
problem definition find clustering maximize 
phrase initialization database file read transaction unknown put existing cluster new cluster maximize profit write back database phrase iteration repeat rewind database file moved false database file read move existing cluster new cluster maximize profit write moved true moved 
sketch clope algorithm 

implementation partition clustering approaches approximate best solution iterative scanning database 
criterion function defined globally easily computable metrics size width execution speed faster local ones 
implementation requires scan database build initial clustering driven criterion function cases greater 
transactions sharing common item put cluster 
scans required refine clustering optimize criterion function 
changes clustering previous scan algorithm final clustering output 
output simply integer label transaction indicating cluster id transaction belongs 
sketch algorithm shown 
ram data structure limited ram space keeps current transaction small amount information cluster 
information called cluster features includes number transactions number distinct items width hash item occurrence pairs occ pre computed integer fast access size cluster 
write occ occurrence item cluster fact clope quite memory saving array representation occurrence data practical transactional databases 
total memory required item occurrences approximately bytes array byte integers number dimensions number clusters 
databases distinct items clustering clusters fit ram 
computation profit easy update cluster feature data adding removing transaction 
computation profit cluster features straightforward cluster 
parts algorithm statement 
comparison different profits adding transaction clusters including empty 
computing profit requires summing values clusters value change current cluster tested achieve faster judgement 
int new new occ items new return new new 
computing delta value adding function compute change value adding transaction cluster theorem guarantees correctness implementation 
theorem ci maximum putting ci maximize 
proof observing profit function find profits putting different clusters differ numerator part formula 
assume numerator clustering profit adding subtracting constant new numerators get exactly values returned function 
time space complexity know time complexity 
suppose named birch 
average length transaction total number transactions maximum number clusters time complexity iteration indicating execution speed clope affected linearly number clusters cost linear database size 
transaction kept memory time space requirement clope approximately memory size cluster features 
linear number dimensions times maximum number clusters transactional databases heavy requirement 

experiments section analyze effectiveness execution speed clope real life datasets 
effectiveness compare clustering quality clope labeled dataset mushroom uci data mining repository rock 
execution speed compare clope large web log dataset 
experiments section carried piii linux machine memory 
mushroom mushroom dataset uci machine learning repository www ics uci edu mlearn mlrepository html rock effectiveness tests 
contains records classes edible mushrooms poisonous mushrooms 
treating value attributes items transactions converted categorical attributes transactions distinct items distinct attribute values 
missing values stalk root attribute ignored transactions 
purity purity clusters repulsion 
result clope mushroom 
try different repulsion value step 
results shown 
general impression clustering quality metrics chart 
purity metric computed summing larger number number poisonous cluster 
maximum total number transactions 
number clusters possible clustering transaction cluster surely achieve maximum purity 
number clusters clusters mixed records poisonous purity 
reaches clusters perfect classification purity 
results require 
clusters scans database 
number transactions clusters varies 
results quite close results rock result clusters impure cluster poisonous purity support 
consider quadratic time space complexity rock results clope quite appealing 
results mushroom dataset derived hierarchically recursive clustering impure clusters comparable directly 
try implementation get direct result 
criterion function defined cost intra inter minimum support percentage item large cluster 
intra number distinct small non large items clusters inter number overlapping large items equals total number large items minus distinct number large items clusters 
weight introduced control different importance intra inter 
algorithm tries minimize cost iterations 
experiment default clustering different 
analyzing results maximum value intra results 
increased larger intra expensive 
reached pure results clusters support 
result shown 
purity purity purity clusters minimum support weight intra purity clusters minimum support weight intra 
result mushroom 

clusters 
clusters experiment results mushroom dataset show simple intuition linear complexity clope quite effective 
result clope mushroom better close rock quadratic complexity number transactions 
comparison shows simple idea clope works quite explicit constraint inter cluster dissimilarity 
sensitivity data order perform sensitivity test clope order input data mushroom 
result derived original data order 
test clope randomly ordered mushroom data 
results different close original ones best result reaching purity clusters worst result reaching purity clusters 
shows clope sensitive order input data 
experiment results randomly ordered mushroom data show sensitive data order clope 
berkeley web logs apart market basket data web log data typical category transactional databases 
choose web log files www cs berkeley edu logs dataset second experiment test scalability performance clope 
web logs november preprocess methods proposed 
entries raw log file kept non html entries removed 
entries total distinct pages 
available client ip field user identification 
session idle time minutes sessions identified 
average session length 
scalability test set maximum number clusters run clope sessions respectively 
average iteration running time shown 
execution time seconds percentage input data total sessions clope clope clope 
running time clope berkeley web log data 
see execution time clope linear database size 
non integer repulsion values clope runs slower float point non directory requests having extensions htm 
computational overhead 
results reach maximum number clusters allowed clope clusters session file 
reason fast speed minute iteration dataset 
execution time roughly times clope uses times memory clope cluster feature data 
impression effectiveness clope noisy data run clope november session data maximum number clusters 
resulting clusters ordered number transactions contain 
table shows largest cluster transactions high quality clusters clope 
clusters quite clusters pages different paths grouped 
may reveal common visiting patterns may due noises inherited web log 
results algorithm satisfying 
table 
clusters clope log data 
sa book simple index html occ sa index html occ sa occ sa book index html occ sa video index html occ sa user network index html occ russell html occ russell code doc install html occ russell code doc overview html occ russell code doc user html occ russell intro html occ russell bib html occ occ students classes occ number page name occurrence cluster 
related works clustering large databases clarans birch dbscan clique 
designed low dimensional numerical data exceptions clique finds dense subspaces higher dimensions 
works clustering large categorical databases began appear 
modes approach represents cluster categorical value vector minimal distance points 
distance modes measured number common categorical attributes shared points optional weights different attribute values 
han association rule hypergraph partitioning cluster items large transactional database 
cactus model categorical clustering hypergraph partitioning problem approaches suitable database tuples 
rock uses number common neighbors transactions similarity measure computational cost heavy sampling scaling large dataset 
similar clope 
experiments show clope able find better clusters faster speed 
clope requires parameter repulsion gives user control approximate number resulting clusters little domain knowledge 
minimal support weight difficult determine 
sensitivity tests algorithms show clope sensitive order input data 
works document clustering quite related transactional data clustering 
document clustering document represented weighted vector words 
clustering carried optimizing certain criterion function 
document clustering tends assume different weights words respect frequencies 
see common approaches document clustering 
similarities transactional data clustering association analysis 
popular data mining techniques reveal interesting properties item occurrence relationship transactional databases 
current approaches association analysis needs scans database 
differences 
hand clustering give general overview property data association analysis finds strongest item occurrence pattern 
hand association rules actionable directly clustering large transactional data preprocessing phrase data mining tasks association analysis 

novel algorithm categorical data clustering called clope proposed intuitive idea increasing height width ratio cluster histogram 
idea generalized repulsion parameter controls tightness transactions cluster resulting number clusters 
simple idea clope fast scalable memory saving clustering large sparse transactional databases high dimensions 
experiments show clope quite effective finding interesting clusterings doesn specify explicitly inter cluster dissimilarity metric 
clope sensitive data order requires little domain knowledge controlling number clusters 
features clope clustering preprocessing algorithm mining transactional data market basket data web usage data 

grateful rajeev rastogi vipin kumar providing rock code technical report version 
wish providers uci ml repository web log files www cs berkeley edu 
wish authors help 
comments anonymous referees invaluable prepare final version 

agrawal gehrke gunopulos raghavan automatic subspace clustering high dimensional data data mining applications 
proc 
sigmod seattle washington june 
agrawal imielinski swami mining association rules sets items large databases 
proc 
sigmod washington 
cooley mobasher srivastava data preparation mining world wide web browsing patterns 
knowledge information systems 
ester kriegel sander xu algorithm discovering clusters large spatial databases noise 
proc 
kdd portland oregon 
ganti gehrke ramakrishnan cactus clustering categorical data summaries 
proc 
kdd san diego ca 
gibson kleinberg raghavan clustering categorical data approach dynamical systems 
proc 
vldb new york ny 
guha rastogi shim rock robust clustering algorithm categorical attributes 
proc 
icde sydney australia 
han 
karypis kumar clustering association rule hypergraphs 
proc 
sigmod workshop research issues data mining knowledge discovery 
han pei yin mining frequent patterns candidate generation 
proc 
sigmod dallas tx 
huang fast clustering algorithm cluster large categorical data sets data mining 
proc 
sigmod workshop research issues data mining knowledge discovery 
macqueen methods classification analysis multivariate observations 
proc 
th berkeley symposium math 
stat 
prob 
ng han efficient effective clustering methods spatial data mining 
proc 
vldb santiago chile 
wang xu liu clustering transactions large items 
proc 
cikm kansas missouri 
zhang ramakrishnan livny birch efficient data clustering method large databases 
proc sigmod montreal canada 
zhao karypis criterion functions document clustering experiments analysis 
tech 
report department comp 
sci 
eng minnesota 
www users umn edu karypis publications papers postscript ps 
