evaluation scalable application level multicast built peer peer overlays miguel castro michael jones anne marie kermarrec antony rowstron marvin theimer helen wang alec wolman microsoft research thomson avenue cambridge cb fb uk microsoft research redmond wa usa 
structured peer peer overlay networks chord pastry tapestry implement internet scale application level multicast 
general approaches tree flooding 
evaluates approaches different types structured overlay overlays form generalized hypercube routing chord pastry tapestry overlays numerical distance metric route cartesian hyper space 
pastry chosen representatives type overlay 
best knowledge reports head comparison style versus pastry style overlay networks communication workloads identical simulation infrastructure 
approaches multicast independent overlay network choice provide comparison tree multicast overlays 
results show tree approach consistently outperforms 
treebased multicast show pastry provides better performance 
lack deployment ip multicast led interest application level multicast :10.1.1.1.4196
number application level multicast systems proposed built structured peer peer overlays claim support large numbers members highly scalable manner bayeux multicast scribe :10.1.1.1.4196:10.1.1.20.299
uses different overlay implements application level multicast flooding multicast tree building bayeux scribe 
overlays provide similar high level functionality different underlying algorithms 
fall categories generalized hypercube routing algorithm chord pastry tapestry numerical distance metric guide routing cartesian hyperspace 
flooding approach providing multicast creates separate overlay network multicast group leverages routing information maintained group overlay broadcast messages overlay 
tree approach uses single overlay builds spanning tree group multicast messages group propagated 
attempt compare performance approaches different overlays 
examine performance approaches types overlay 
network simulator workloads consistently experiments enable fair comparison 
chose pastry representatives category structured overlay 
selected multicast scribe representatives flooding approaches providing application level multicast 
scribe tree building approach reverse path forwarding provides better scalability bayeux requires root tree handle group membership 
results show tree building approach multicast achieves lower delay overhead flooding overlays regardless underlying overlay 
biggest disadvantage group overlays cost constructing overlay group 
show multicast trees built pastry provide higher performance ones built 
section ii provides overview pastry 
flooding tree building described section iii 
section iv explores configurations results detailed simulation experiments compare performance approaches pastry 
comparison summarized section related reported section vi 
section vii concludes 
ii 
peer peer overlay networks structured peer peer overlays chord pastry tapestry provide efficient routing namespace 
assign portion namespace node provide primitive send messages keys points namespace 
overlay routes message node responsible portion namespace contains destination key 
main classes routing algorithms chord pastry tapestry divide conquer approach route ring routes cartesian hyper space choosing neighboring node closer destination hop 
different algorithms exploit network locality efficiency varying degrees success scalable fault resilient self organizing 
section provide overview overlays chosen study representative main classes pastry 
overlay network content addressable network organizes overlay nodes dimensional hypercube 
node ieee ieee infocom takes ownership specific hyper rectangle space entire space covered maintains routing table immediately adjacent neighbors 
nodes join hypercube routing join message randomly chosen point space causing node owning region space split region giving half new node retaining half 
node routes message forwarding neighbor closer destination hyper space 
process repeated message reaches node region contains destination key 
dimensional space partitioned equal zones average routing path length hops individual nodes maintain neighbors meaning constant state routing scales 
basic algorithm described number tunable parameters improve routing performance 
described summarize dimensions dimensionality hypercube 
network aware routing ordinary routing chooses neighbor closest destination space 
routing chooses neighbor best ratio progress distance network delay cost 
developed new greedy routing strategy network delay routing ndr chooses neighbor network delay cost subject constraint message moves closer destination hop 
multiple nodes zone parameter allows node inhabit hyper rectangle 
delivers messages zone inhabitants anycast manner 
uniform partitioning node joins network node responsible destination key compares volume region volumes neighboring regions immediately splitting region 
neighboring zone larger current zone join message forwarded neighbor 
test applied repeatedly local maximum size reached point zone split new node obtaining half split zone 
landmark placement landmark placement causes nodes join time probe set known landmark hosts estimating network distances 
node measures round trip time landmark machines orders landmarks nearest distant underlying network 
nodes landmark ordering clustered bin 
choosing random address join space divided evenly sized bins join address randomly chosen bin area 
effect nodes landmark ordering closer space 
earliest steps produce independent implementation simulator 
validate implementation set reproducing results original 
nearly cases able reproduce results percent original values 
pastry overlay network pastry uses circular bit namespace 
assigns overlay node nodeid chosen randomly uniform probability namespace 
message destination key pastry routes message node nodeid numerically closest key 
expected number hops log bn number nodes overlay configuration parameter typical value 
eventual delivery guaranteed nodes adjacent nodeids fail simultaneously configuration parameter value 
purpose routing nodeids keys interpreted sequence digits base node routing table organized levels entries level 
entry column level node routing table points node nodeid shares digits nodeid th digit routing table entry left empty node known 
additionally node maintains ip addresses nodes leaf set set nodes numerically closest current node larger smaller current node id uniform distribution nodeids ensures population nodeid space log bn levels routing table populated average 
additionally entries level populated corresponds local node 
node maintains log bn entries average 
node failure arrival new node tables repaired exchanging log bn messages affected nodes 
routing step node normally forwards message node nodeid shares destination key prefix digit bits longer prefix key shares node id node known message forwarded node nodeid shares prefix key long current node numerically closer key node id node leaf set message arrived node responsible key immediate neighbor 
nodes live adjacent nodes leaf set failed simultaneously 
pastry exploits network locality reduce routing delays 
measures delay rtt small number nodes building routing tables 
routing table entry chooses closest nodes network topology nodeid satisfies constraints entry 
constraints stronger lower levels routing table average ip delay pastry hop increases exponentially reaches average delay nodes network 
iii 
overlay application level multicast approaches taken implementing application level multicast peer peer overlays flooding tree building 
flooding leverages information ieee ieee infocom nodes maintain overlay routing provide broadcast functionality 
nodes participating existing overlay network interested receiving broadcast message potentially provides cheap way propagating 
groups consisting small subset overlay network membership efficient broadcast message entire overlay network mini overlay networks separately constructed utilized 
advantage flooding approach nodes participating dissemination broadcast message group members 
alternative tree approach builds tree group separate overlay network 
multicast messages related group propagated associated forwarding tree 
form application level multicast leveraging object location routing properties overlay network create groups join groups 
application creates manages tree uses propagate messages 
possible ways build trees :10.1.1.1.4196
overlay group implementations multicasting means flooding separate overlay networks group certain features independent choice overlay network employed 
particular clients wishing join group find overlay represents group 
implement lookup function scalable manner requires distributed name service 
experiments implemented functionality means separate global overlay network implement distributed hash table 
pastry support capability naturally 
flooding broadcast algorithm implemented flooding algorithm described significant modifications 
naive approach implement flooding overlay network node receives message forward message neighbors 
nodes cache sequence number received messages filter duplicates 
multicast study presents efficient flooding algorithm exploits structure coordinate space limit directions node forward messages receives 
approach vastly reduces number duplicate messages 
discovered fixed flaws published efficient flooding algorithm 
flaw race condition lead certain nodes overlay receive broadcast message 
second ambiguity algorithm leads larger number duplicate messages specified 
details fixes efficient flooding algorithm scope thoroughly described 
pastry flooding pastry broadcast algorithm uses entries node routing table flood messages 
node wishing broadcast message forwards copies nodes routing table tags copy level destination node routing table 
node receives copy message tagged forwards copies nodes levels greater routing table 
copy tagged level destination node 
repeated nodes receiving copies message nodes forward message 
stage node may missing entries routing table 
missing entry detected level domain may lie node 
done message routed pastry midpoint domain level message tagged level marked midpoint request 
node receives midpoint request numerically closest nodeid 
nodeid requested domain forwards message entries routing table levels greater nodeid domain nodeid node message forwarded node 
message duplicate discarded 
tree group implementations representative example tree multicast scribe approach :10.1.1.1.4196:10.1.1.20.299
scribe generic application level multicast infrastructure originally implemented pastry 
scribe uses reverse path forwarding build multicast tree group formed union overlay routes group members root tree 
group identified key called groupid example hash group textual name concatenated creator name 
node responsible namespace segment containing groupid root tree 
join group node routes message overlay groupid 
message routed root tree 
node route checks tree 
registers source node child forward message 
creates children table group adds source node child sends join message groupid 
nodes children tree called forwarders may members group 
scribe scales decentralized algorithm 
particular randomization overlay addresses ensures tree balanced 
load forward multicast messages handle membership changes distributed group members 
additionally scribe provides mechanism remove bottlenecks node decide load high children node grandchildren overloaded node passing children children 
done way minimize impact latency link stress 
bottleneck described :10.1.1.20.299
scribe may create trees deeper necessary small groups 
possible collapse long paths tree removing nodes members group entry group children table 
mechanism described evaluated :10.1.1.20.299
scribe tolerates forwarder root failures 
study reliability properties scope details scribe general available :10.1.1.20.299
ieee ieee infocom scribe maps pastry straight forward manner requires addition replicated state coordination implemented top 
messages routed directed single node zone groupid part 
iv 
evaluation experimental setup simple packet level discrete event simulator evaluate different approaches 
simulator counts number packets sent physical link assigns constant delay link 
model queuing delay packet losses modeling prevent simulation large networks 
simulations ran network topologies routers generated georgia tech random graph generator transit stub model described :10.1.1.20.299
routers run code maintain overlays implement application level multicast 
code ran nodes randomly assigned routers core topology uniform probability 
system directly attached lan link assigned router 
different random number generator seeds topology 
routing policy weights generated georgia tech random graph generator perform ip unicast routing 
ip multicast routing tree formed union unicast routes source recipient 
similar obtained experimental setting protocols distance vector multicast routing protocol dvmrp 
provide conservative comparison ignored messages required ip multicast protocols maintain trees 
delay lan link ms average delay core links computed graph generator approximately ms 
ran sets experiments 
set ran single multicast group overlay nodes members group 
experiments provide simple setting evaluate different ways implement overlays application level multicast top 
particular evaluated tradeoffs amount state maintained overlay node routing efficiency different ways advantage network locality improve routing performance 
second set experiments ran large number groups wide range membership sizes 
obvious sources real world trace data drive experiments adopted zipf distribution number members group 
number members group defined nr rank group number nodes 
actual group members selected uniform distribution distribution group members close network topology 
allow evaluate ability different implementations concurrently support multiple applications varying requirements 
sets experiments divided phases group members subscribed groups message multicast group 
provide fair comparison careful ensure group contained set nodes sender node experiments ran different implementations 
ran experiment times different topology different random number generator seeds run 
average results obtained runs 
evaluation criteria metrics evaluate different applicationlevel multicast implementations 
metrics evaluate delay deliver multicast messages load network load imposed nodes 
metrics described detail 
relative delay penalty 
application level multicast increases delay deliver messages relative ip multicast 
evaluate penalty measured distribution delays deliver message member group application level ip multicast 
compute metrics delay penalty distributions rmd ratio maximum delay application level multicast maximum delay ip multicast rad ratio average delay application level multicast average delay ip multicast 
metrics avoid anomalies associated method compute delay penalty 
link stress 
application level multicast increases load network relative ip multicast 
evaluated load network link stress metric described 
measured stress directed link network topology counting number packets sent link 
stress measured phases members join group messages multicast 
node stress 
application level multicast nodes responsible maintaining routing information forwarding duplicating packets routers perform tasks ip multicast 
evaluate stress imposed application level multicast node measured number nodes node routing table number messages received node members join groups 
metric proxy amount routing information maintained node cost maintaining information number messages sent node 
duplicates 
application level multicast implementations evaluated generate duplicate messages waste network resources increase load nodes 
measured number duplicates received nodes 
results parameters large number parameters tune performance 
performed extensive exploration parameter space attempting understand combinations parameters lead best rad values unicast communication 
varied ieee ieee infocom state dimensions nodes uniform zone partitioning enabled enabled enabled enabled enabled table representative configurations function neighbor state node 
parameters exploration number dimensions number nodes zone turning uniform partitioning choosing random node assignment choosing routing policy distance ratio ndr 
allow direct comparisons different configurations measured average amount neighbor state node maintains compared instances similar amounts neighbor state 
importance neighbor state actual memory overhead neighbor lists communication overhead represents 
exploration parameter space resulting greater detail 
primary parameter space difficult navigate 
configurations state budget scale linear fashion 
provide general guidelines 
enabling landmark topological assignment provides largest improvement rad parameters 
enabling uniform partitioning provides significant reduction terms neighbor state overhead especially landmark assignment nodes clustered close space 
furthermore uniform partitioning causes rad significantly worse 
ndr routing metric appears perform consistently better routing metrics 
increasing number nodes zone provides predictable improvements rad neighbor state overhead increases linearly 
number nodes system varies parameters perform vary especially number dimensions 
table lists set representative configurations node variety different state overheads 
multicast experiments follow configurations listed table enable uniform partitioning cases vary routing metric distance ndr ratio node assignment policy rand top 
topological assignment top policy set landmarks 
results different experimental configurations overlay network 
run application level multicast implementations variations 
flooding results section explore behavior flooding 
start describing impact various parameters delays 
figures plot delay penalty flooding relative ip 
ratio maximum delays rmd ratio relative delay penalty rmd rad fig 

relative delay penalty flooding different values relative delay penalty rmd rad rand top rand top rand top distance metric ndr metric ratio metric fig 

relative delay penalty flooding optimizations configuration 
average delays rad shown 
plots delay penalty best representative configurations routing table state size 
best representative considered landmark assignment ndr routing metric 
shows effect delays varying routing metric node assignment policy best configuration 
flooding multicast configurations showed effects evident 
interesting things noticeable confirmed benefit landmark assignment translates unicast communications flooding communications 
cases landmark assignment proved dominate random address assignment 
improvements observed 
contrast choice routing metric effect 
variation 
flooding multicast benefit gained increased amounts routing table state uneven 
increasing state yielded slightly poorer delay penalty values increases yielded better delay penalty values 
difference best worst values just 
independence delay penalty routing table state size unsurprising considers flooding algorithm take advantage optimizations employs 
evaluated link stress results subscription publication phases multicasting 
delay penalty landmark assignment yielded uniformly better link stress numbers choice routing metric significant difference 
table ii shows maximum average link stress values best representative configurations routing table state size 
noticeable feature table link stress ieee ieee infocom configuration state size joining phase max average flooding phase max average relative delay penalty table ii flooding 
rmd rad fig 

relative delay penalty tree multicast different values caused having members join multicast group huge grows significantly function amount routing table state maintains 
contrast link stress caused multicast message sent group members considerably smaller drops function routing table state size 
rise link stress values function routing table state size subscription due increased neighbor traffic occur group member joins 
equivalent fall values publication phase understood follows maintenance neighbor state implies greater number routing paths node 
increases chances node employ possible network links emanating forwarding broadcast message 
counted number duplicate messages received overlay nodes 
improved flooding algorithm saw duplicate messages experimental runs 
runs encountered duplicate messages 
tree results section explore behavior tree multicast 
start describing impact various parameters delays figures 
shows delay penalty best configurations varying amount routing table state 
observe benefit increasing amounts routing table state benefit moderate 
improvement smallest largest configuration 
shows effect delays topology aware routing topology aware address assignment best configuration 
relative delay penalty rmd rad rand top rand top rand top distance metric ndr metric ratio metric fig 

relative delay penalty tree multicast topology aware optimizations configuration 
configuration state size max average table iii tree multicast 
configurations showed effects 
flooding results observed landmark assignment dominated random assignment 
improvements observed 
flooding results choice routing metric matter routing purely hyper space distance noticeably worse routing ndr metric ratio routing metric 
routing metrics ndr metric consistently performed slightly better ratio metric case unicast 
observe tree multicast outperform flooding multicast factor respect delay penalties 
table iii shows maximum average link stress values best representative configurations routing table state size 
flooding multicast link stresses subscription publishing phases essentially show 
furthermore noticeable difference link stress values flooding multicast amount routing table state increased relatively minor change values tree multicast 
delay penalty landmark assignment yielded uniformly better link stress numbers random assignment 
improvement link stress far dramatic improvement delay penalties 
typical improvement maximum link stress factor typical improvement average link stress factor 
contrast choice routing metric small difference ndr metric doing best 
examined size forwarding tables tree multicast maintain node nodes act forwarders multicast messages 
table iv shows maximum number entries seen node function routing table state size number nodes having act forwarders function routing ieee ieee infocom configuration state size max number forwarding entries node nodes table iv tree multicast forwarding statistics 
table state size 
size routing tables increases see individual nodes risk suffering concomitant increase maximum number forwarding table entries need support 
time number nodes perform forwarding duties goes 
going larger state configurations concentrate load fewer nodes 
similar node concentration effect observed respect landmark address assignment 
feature results increase maximum number forwarding entries node compared random address assignment 
mentioned earlier employing landmark assignment dramatically reduces link stress system 
employing landmark assignment trade substantial decrease link stress system minor increase node load system 
furthermore scribe bottleneck bound node forwarding load 
example reran experiments bottleneck bound forwarding entries 
bound achieved negligible impact link stress delay 
pastry results parameters studied impact pastry parameters performance implementations application level multicast 
varied value 
recall number bits destination key pastry attempts match hop 
small value reduces amount space routing tables expense increase expected number pastry hops reach destination 
evaluated orthogonal optimizations take advantage topology information improve routing performance pastry topology aware routing table construction tart topology aware nodeid assignment top 
tart similar ndr builds routing tables point nearby nodes network topology ndr optimizes choice neighbor routing hop control set neighbors 
pastry uses topology aware routing table construction described section ii nodes probe estimate delay topological distance estimates optimize routing tables achieve low delay penalty 
ran experiments optimization 
slot routing table pastry normally chooses topologically close node nodeid relative delay penalty rmd rad fig 

relative delay penalty pastry flooding different values satisfies constraints slot 
optimization chooses random node uniform probability set satisfies constraints 
current version pastry topology aware nodeid assignment 
nodeids assigned randomly uniform probability bit name space 
important reliability ensures nodes leaf set randomly scattered network 
fail independently 
topology aware nodeid assignment potentially improve performance 
evaluate benefits ran version pastry nodes numerically close nodeids topologically close 
assigning node name obtained concatenating identifiers transit domain transit node stub attaches stub lan attaches actual stub node lan attached 
sorted overlay nodes name assigned random nodeids ordering nodeids matched ordering names 
note practical implementation uses global knowledge assumes fixed population overlay nodes 
show near perfect topology aware nodeid assignment significant problems outweigh benefits 
refer pastry qualification mean version pastry random nodeid assignment rand tart 
flooding results evaluated impact varying topology aware optimizations performance flooding pastry 
start describing impact various parameters delays 
plots delay penalty flooding relative ip different values shows ratio maximum delays rmd ratio average delays rad decrease increases 
example rad lower 
happens increasing value decreases number pastry hops approximately equal log 
shows effect delays topology aware routing tables tart topology aware nodeid assignment top 
shows optimizations effective reducing delay penalty relative version pastry topology aware optimizations pastry rand tart reduce rad factor combining reduces rad ieee ieee infocom relative delay penalty rmd rad rand top rand top pastry pastry tart fig 

relative delay penalty pastry flooding optimizations 
tart tart rand top rand top max average table pastry flooding topology aware optimizations 
factor 
evaluated effect various parameters link stress induced flooding 
results show increasing value increases maximum average link stress relatively small amount average link stress higher 
expected increasing increases number entries level routing table number messages sent forwarding node 
table shows impact topology aware optimizations link stress 
top reduces average link stress factor maximum link stress factor 
top effective reducing link stress assignment nodeids matches network hierarchy 
pastry hops flooding form spanning tree rooted sender 
top level messages travel long ip namespace distance small number 
number messages increases exponentially leaves tree messages travel increasingly shorter ip namespace distances 
messages travel small number links resulting link stress low 
hand tart reduces average link stress slightly increases maximum link stress 
reduction link stress result reduced number links traversed average message 
ip distance traversed messages increases moves spanning tree 
link stress reduction significant top messages traverse large number physical links 
maximum link stress increases nodes flood levels top routing table ones send messages stub sender tart 
causes link sender stub transit high link stress 
table vi shows routing state size average state size duplicates table vi number unique entries routing table number duplicate messages 
relative delay penalty rmd rad fig 

relative delay penalty pastry tree multicast different values number unique nodes pastry node routing table leaf set different values number increases expected approximately equal log small number nodes pastry leaf set routing table 
average number nodes maximum number nodes 
topology aware optimizations measurable effect numbers 
counted number duplicate messages received overlay nodes different values results appear table vi 
duplicates due missing entries pastry routing tables 
probability missing entries increases number duplicates increases number duplicates large approximately repair routing tables low cost prevent duplicates subsequent multicasts 
topology aware optimizations effect number duplicates 
tree results results experiments evaluate impact varying optimizations performance tree multicast pastry 
shows delay penalty decreases increases 
similar observed flooding explained reduction average number hops pastry routes 
effect tart top optimizations delays tree multicast similar observed flooding 
results 
table vii shows impact tart top optimizations link stress multicasts 
link stress group joins identical tree approach 
results quite different observed flooding 
top reduces average link stress slightly increases maximum link stress 
tart reduces maximum average link stress significantly 
reason tree multicast messages ieee ieee infocom relative delay penalty rmd rad rand top rand top pastry tart pastry tart fig 

relative delay penalty pastry tree multicast topology aware optimizations 
tart tart rand top rand top max average table vii pastry tree multicast topology aware optimizations 
follow reverse pastry routes group member root 
tart rand longest hops top tree 
messages travel small number physical links link stress low 
top longest hops bottom tree 
messages travel large number physical links link stress high 
combining tart top reduces average link stress increases maximum link stress significantly 
bad interaction top node joining algorithm tart 
interaction causes information new nodes join network propagated nodes numerically close nodeids 
results large number nodes pointers representative domain 
decreasing reduces average maximum link stress example tart rand maximum link stress average 
tree multicast scheme adds forwarding table node 
table viii shows maximum number forwarding table entries node different values pastry 
maximum number forwarding table entries 
relatively high scribe bottleneck bound number forwarding table entries node 
reran experiment tart rand upper bound forwarding table entries 
results show bound achieved negligible impact delay rmd change rad increases 
maximum link stress joining increases average maximum table viii maximum number forwarding table entries node different values 
reasonable joins frequent multicasts applications link stress multicasts decreases maximum decreases average 
discussion clear results flooding works pastry topology aware nodeid assignment 
hand topology aware nodeid assignment performs poorly tree multicast 
treebased multicast performs better topology aware routing tables random nodeid assignment 
flooding support multicast efficiently pastry requires creation separate overlay group 
creating separate pastry overlay significantly expensive creating tree induces large load node responsible group base overlay 
treebased approach reuse overlay groups amortize cost creating overlay locality properties topology aware optimizations 
choice pastry clear tree multicast random nodeid assignment topology aware routing tables 
chose value provides balance low delay penalty low link stress requiring small amount space node 
remaining experiments ran choices 
pastry results multiple multicast groups section describes set experiments ran multicast groups just 
group sizes varied zipf distribution described earlier 
explored cases group members uniformly distributed network localized members 
degree locality group members determined zipf distribution 
ran experiments different applicationlevel multicast implementations tree multicast top pastry top flooding top 
multicast implementation picked best configuration overlay network 
particular pastry set tart rand 
configurations topological address assignment ndr routing metric 
figures show cumulative distribution function rmd non localized localized group members respectively 
shows corresponding cumulative distribution function rad localized group members 
omit rad results non localized group members identical 
value point represents proportion groups delay penalty equal point value 
cases tree multicast top pastry yielded best delay penalty values differences roughly comparable observed single group experiments 
aside notable feature noticeably shallower shape cdf curve flooding implementation 
tree users expect fairly tightly bounded delay penalties users flooding approach prepared deal substantially greater ieee ieee infocom cumulative proportion groups pastry tree tree flood relative maximum delay penalty fig 

cdf rmd concurrent multicast groups localized group members 
cumulative proportion groups pastry tree tree flood relative maximum delay penalty fig 

cdf rmd concurrent multicast groups globally distributed group members 
variances multicast delivery times 
interestingly flooding considerably worse tree experiments compares favorably group experiments 
comparisons tradeoffs group overlays versus group multicast trees results show group multicast trees advantages flooding mini overlay network group 
group multicast trees noticeably efficient network usage relative delay penalties typically better factors 
pastry major difference 
probably significantly creation individual overlays group incurs significant overheads 
node joins overlay network needs discover nodes network create neighbor state pastry create routing table 
may involve finding potentially contacting dozens nodes 
contrast multicast trees built single overlay network take advantage routing state established existing overlay network 
joining group lightweight terms space time 
advantage separate overlay multicast group traffic group carried members group 
property important administrative reasons overlay group approach considered 
results argue 
cumulative proportion groups pastry tree tree flood relative average delay penalty fig 

cdf rad concurrent multicast groups localized group members versus pastry group multicast trees results indicate equivalent node state representative tuned settings identical workloads relative delay penalty values obtained pastry typically order better obtained 
looking link stress pastry exhibited average link stress roughly lower seen exhibited maximum link stress roughly lower seen pastry 
similarly maximum number forwarding entries maintained third seen pastry average similar 
bottleneck allows pastry retain delay advantage lowering maximum link stress maximum number forwarding table entries values low conclude multicast trees built pastry provide higher performance ones built 
interesting difference tree multicast top pastry topologically aware address assignment turns diametrically opposite effect link stress case 
topologically aware address assignment drastically improves link stress values doing exactly opposite pastry 
vi 
related tapestry chord similar pastry divide conquer approach route ring 
head head comparison chord tapestry pastry interesting scope 
believe top level results study apply systems pastry locality optimizations provides emulation chord pastry locality provides emulation tapestry 
proposal doing multicast general purpose overlay networks bayeux system tapestry 
bayeux builds multicast tree group differently approach examined 
request join group root records identity new member uses tapestry route message back new member 
tapestry node route records identity new member 
requests leave group handled similar way 
introduces scalability ieee ieee infocom problems compared tree approach 
firstly requires nodes maintain group membership information 
secondly bayeux generates traffic handling group membership changes 
particular group management traffic go root 
bayeux proposes mechanism ameliorate problems improves scalability small constant factor 
noted nodes bayeux network join single group produce similar poor results flooding approach evaluated pastry 
scalable overlay multicast system overcast 
bayeux overcast requires joining nodes coordinate central root node 
significant amount gone overlay networks application level multicast systems designed scale resilient overlay networks system multicast isis horus style virtual synchrony provide benefits 
course constructing multicast distribution trees builds techniques originally developed ip multicast 
vii 
explored possibilities implementing scalable application level multicast peer peer overlay networks 
observing style applicationlevel multicast chosen largely independent style overlay network selected compared combinations application level multicast implementations peer peer overlay choices 
approaches application level multicast peer peer overlay networks considered 
uses reverse path forwarding build distribution tree multicast group 
second builds separate overlay network group uses intelligent flooding algorithms 
approaches run top different peer peer overlay networks representative class peer peer routing schemes 
experiment combinations run simulation infrastructure placement simulated network nodes participating overlay network workloads 
enabled perform head head comparisons flooding versus treebased implementations application level multicast style versus pastry style overlay routing context multicast communications 
best knowledge done head head comparison 
results explorations demonstrate things 
principal tree approach multicast dominates flooding group overlays approach regardless peer peer overlay network employed 
true terms relative delay penalties general overhead 
biggest disadvantage group overlays flooding cost overlay construction required group 
showed multicast trees built pastry provide higher performance ones built 
factor scope various configurations explored compare fault tolerance point view 
represents important area 
sylvia ratnasamy answering questions concerning topology files experiments 
help validated implementation 
jannotti gifford johnson kaashoek toole overcast reliable multicasting overlay network proc 
osdi october pp 


chu rao zhang case system multicast proc 
acm sigmetrics june pp 

zhuang zhao joseph katz kubiatowicz bayeux architecture scalable fault tolerant wide area data dissemination proc 
nossdav june 
ratnasamy handley karp shenker application level multicast content addressable networks proc ngc nov 
rowstron :10.1.1.1.4196
kermarrec castro druschel scribe design large scale event notification infrastructure proc ngc nov 
castro druschel :10.1.1.20.299
kermarrec rowstron scribe large scale decentralized application level multicast infrastructure ieee jsac vol 
october 
stoica morris karger kaashoek balakrishnan chord scalable peer peer lookup service internet applications proc acm sigcomm san diego california august 
rowstron druschel pastry scalable distributed object location routing large scale peer peer systems proc middleware nov 
zhao kubiatowicz joseph tapestry infrastructure fault resilient wide area location routing berkeley tech 
rep ucb csd april 
ratnasamy francis handley karp shenker scalable content addressable network proc 
acm sigcomm aug 
dalal metcalfe reverse path forwarding broadcast packets cacm vol 
pp 

jones theimer wang wolman unexpected complexity experiences tuning extending microsoft research tech 
rep msr tr december 
zegura calvert bhattacharjee model internetwork proc ieee infocom april 
deering cheriton multicast routing datagram internetworks extended lans acm transactions computer systems vol 
may 
andersen balakrishnan kaashoek morris resilient overlay networks th acm sosp oct 
birman joseph exploiting virtual synchrony distributed systems proc acm sosp november pp 

deering estrin farinacci jacobson liu wei pim architecture wide area multicast routing ieee acm transactions networking vol 
april 
ieee ieee infocom 
