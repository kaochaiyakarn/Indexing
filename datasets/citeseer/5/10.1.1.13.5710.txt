self serv platform rapid composition web services peer peer environment quan sheng benatallah dumas oi yan mak school computer science engineering centre information technology innovation university new south wales queensland university technology sydney nsw australia gpo box brisbane qld australia cse unsw edu au dumas qut edu au automation web services interoperation gaining considerable momentum paradigm effective business business collaboration 
established enterprises continuously discovering new opportunities form alliances enterprises ering value added integrated services 
technology compose web services appropriate time frames kept pace rapid growth volatility available opportunities 
development integrated web services ad hoc requires considerable ort lowlevel programming 
approach inadequate size volatility web 
furthermore number services integrated may large approaches development integrated service requires understanding underlying services inappropriate 
addition web services may need composed part short term partnership partnership longer profitable 
integration large number web services requires scalable flexible techniques declarative languages 
execution integrated service existing approaches usually centralised underlying services distributed autonomous 
calls investigation distributed execution paradigms peer peer models su er scalability availability problems centralised coordination 
motivated concerns developed self serv platform rapid composition web permission copy fee part material granted provided copies distributed direct commercial advantage vldb copyright notice title publication date appear notice copying permission large data base endowment 
copy republish requires fee special permission endowment 
proceedings th vldb conference hong kong china services 
self serv web services declaratively composed resulting composite services executed peer peer dynamic environment 
sections overview design implementation self serv system sketch proposed demo 
self serv overview self serv distinguishes types services elementary services composite services service communities 
elementary service individual application java program explicitly rely web service 
composite service aggregates multiple web services referred components 
relies declarative language composing services statecharts widely formalism area reactive systems emerging standard process modeling integration unified modeling language uml 
operation composite service seen having input parameters output parameters consumed produced events statechart glueing elements 
self serv exploits concept service community order address issue composing potentially large number dynamic web services 
service communities essentially containers alternative services 
provide descriptions desired services providing flight booking interfaces referring actual provider ua flight booking web service 
runtime community receives request executing operation delegates current members 
choice delegatee parameters request characteristics members history past executions status ongoing executions 
execution composite service coordinated peer software components called coordinators 
coordinators attached state composite service 
charge initiating controlling monitoring associated state collaborating peers manage service execution 
knowledge required runtime coordinators involved composite service location peers control flow routing policies statically extracted service statechart represented simple tabular form called routing tables 
routing tables contains preconditions 
preconditions determine service executed 
determine done service execution 
way coordinators need implement complex scheduling algorithm 
implementation self serv architecture features service manager pool services 
implemented java 
services communicate xml documents 
documents exchanged java sockets 
oracle xml parser parsing xml documents 
self serv service manager registered service discovery pool services elementary services communities uddi registry composite services composed service editor service internet coordinator coordinator coordinator wrapper legend workflow database applications web accessible programs service discovery engine cs cs es es es es service advertisement routing tables architecture self serv 
service manager consists modules service discovery engine service editor service 
service discovery engine facilitates advertisement location services 
implemented universal description discovery integration uddi web service description language wsdl simple object access protocol soap 
service registration discovery invocation implemented soap calls 
service registers discovery engine uddi soap request containing service description wsdl sent uddi registry 
service registered uddi registry located sending uddi soap request business name service type uddi registry 
implementation extensive ibm web services toolkit showcase package web services emerging technologies 
details implementation discovery engine 
administrator registered service download install pre existing class coordinator implementing concept coordinator 
administrator required build wrapper service downloading configuring class wrapper provided self serv platform 
infrastructure required install configure classes standard java libraries compliant xml parser 
default xml documents containing routing tables stored plain files need dbms site installation performed 
platform configured rely dbms required 
service editor provides facilities defining new services editing existing ones 
service edited visual interface translated xml document subsequent analysis processing service 
service responsible generating routing tables state composite service statechart algorithms 
input programs implementing algorithms statecharts represented xml documents outputs routing tables formatted xml 
tables generated service assists service composer process uploading tables hosts corresponding component services 
assists composer deployment wrapper composite service 
demo scenario travel scenario developed platform 
scenario involves web services including domestic flight booking international flight booking travel insurance accommodation booking attractions search car rental 
travel scenario works follows traveller books domestic flight international flight accommodation ii search attractions performed parallel flight accommodation bookings iii search bookings done car rental performed major attraction far booked accommodation 
self serv platform provides integrated environment service providers register web services download install classes coordinator wrapper ii service composers edit deploy composite services iii users locate web services execute operations 
car rental cr attractions search accommodation booking ab domestic flight booking dfb international travel arrangements ita domestic destination domestic destination near major attraction accommodation near major attraction accommodation defining services self serv 
demonstrate define composite service travel scenario ii deploy register service iii locate execute service self serv platform 
defining composite service 
service editor ers graphical user interface gui allowing composers define composite services 
prior defining composite service service composer search uddi registry find web services component services 
done service discovery engine 
composite service defined drawing statechart diagram top panel 
information associated state transition state id state name input output parameters web service associated state eca rule transition defined bottom left panel 
definition completed service translated xml document bottom right panel 
composite service travel scenario defined shown 
component services referenced composite service assumed previously registered discovery engine 
registration process coordinator wrapper classes downloaded service installed hosts component services 
component services accommodation booking service community elementary services 
deploying registering composite service 
composite service defined service assists composer deployment process 
process takes input xml description composite service involves steps generating control flow routing tables state composite service statechart ii uploading tables hosts component services 
composite service needs registered service discovery engine located executed 
service published uddi registry publish panel ered service discovery engine 
service published wsdl descriptions created deployed 
essentially means placing wsdl descriptions retrieved public urls 
information service service name locations wsdl descriptions provider service provider name contact data entered publish panel 
publish button clicked service discovery engine publishes service details uddi registry 
locating executing composite service 
user locate web services uddi registry search panel ered service discovery engine left panel 
user locating executing services 
search web services providers service names operations top left search panel 
query yields list service providers displayed bottom left part search panel 
provider listed services service listed operations 
user browse lists view detailed information service operation right part search panel 
user execute specific operation service clicking execute button bottom right search panel 
execution window popped bottom left part enables user supplying values parameters needed execute service customer name departure date return date travel scenario 
user click run button 
xml document storing input values created sent service binding details wsdl service descriptions 
wrapper composite service receives document sends message coordinator state statechart need entered place 
coordinator invoke underlying service wrapper 
orchestration composite service execution carried peer peer message exchanges coordinators 
eventually coordinators states exited place send notification termination back composite service wrapper 
point results execution displayed execution result panel 
details peer peer coordination algorithm self serv 
benatallah dumas sheng ngu 
declarative composition peer peer provisioning dynamic web services 
proc 
th int 
conference data engineering icde pages san jose usa february 
casati georgakopoulos shan editors 
special issue services 
vldb journal january 
chen hsu 
inter enterprise collaborative business process management 
proc 
th int 
conference data engineering icde pages heidelberg germany april 
ibm toolkit 
alphaworks ibm 
com tech 
sheng benatallah stephan oi yan mak zhu 
discovering services uddi self serv 
int 
conference ebusiness beijing china may 
