fast depth field rendering surface splatting riv mail fel cz ji ra mail fel cz department computer science engineering czech technical university prague st czech republic new fast algorithm rendering field effect point surfaces 
algorithm handles partial occlusion correctly suffer intensity leakage renders depth field presence transparent surfaces 
algorithm new exploits level detail select surface detail amount depth blur applied 
speed algorithm practically independent amount depth blur 
proposed algorithm extension elliptical weighted average ewa surface splatting 
mathematical analysis extends screen space ewa surface splatting handle depth field rendering level detail demonstrate algorithm example renderings 
keywords point rendering ewa surface splatting depth field lens effect level detail lod 

ability render depth field dof effect important feature image synthesis algorithm 
dof image look natural important depth cue helps humans perceive spatial configuration scene 
effect dof outof focus points space form circular patterns circle confusion coc image plane 
algorithms dof rendering divided groups post filtering multi pass algorithms 
post filtering algorithms follows 
image computed pinhole camera model image sent focus processor turns pixel coc depth 
chakravarty formulas radius coc described light intensity distribution coc functions 
chen simplify distribution uniform 
post filtering algorithms suffer intensity leakage blurred background leaks focused object foreground take mail irisa fr irisa inria rennes campus de beaulieu rennes cedex france account partial occlusion visibility objects change different points lens 
approaches partially solve problems 
algorithms 
multipass algorithms general handle partial occlusion slower 
new fast algorithm renders dof point surfaces 
algorithm similar algorithms involve separate focus processor 
individual points blurred form final image 
allows handle partial occlusion avoids intensity leakage 
algorithm render dof presence transparent surfaces 
algorithm builds top elliptical weighted average ewa surface splatting proposed zwicker 
related splatting include 
nen propose point rendering pipeline handles dof rendering 
method stochastic sampling requires high number samples produce noise free images somewhat slow 
basic idea algorithm blur individual splats convolving gaussian low pass filter blurring image 
essentially means splat enlarged proportionally amount depth 
accelerate dof rendering coarser level detail lod blurred surfaces 
speed algorithm independent amount depth blur 
contributions consist mathematical analysis extending ewa surface splatting dof rendering analysis allowing lod means dof rendering implementation algorithm discussion practical implementation issues 
organized follows section reviews screen space ewa surface splatting algorithm section contains mathematical analysis dof rendering algorithm section presents implementation section gives results section concludes 

example dof rendering surface 
left dof 
middle dof transparent mask focus 
right male body focus mask focus 

screen space ewa surface splatting section briefly reviews ewa surface splatting framework described zwicker 
definition texture function surface point object illustrated 
pointbased object represented set irregularly spaced points pk associated basis function rk coefficients wr wg wb color channels proceed discussion single channel wk 
local surface parametrization sufficient define texture function support functions rk local 
point surface local coordinates value continuous texture function expressed fc uk uk local coordinates point pk 
value fc gives color point render point object texture function fc mapped screen space heckbert resampling framework 
involves conceptual steps continuous texture function fc reconstructed sample points equation second fc local parametrization object space parametrization neighbourhood support basis function 
texture function surface point object zwicker 
warped screen space affine approximation object screen mapping third warped fc convolved screen space prefilter yielding band limited output function gc lastly gc sampled produce alias free pixel colors 
concatenating steps output function gc gc wk uk warped basis function rk prefilter affine approximation object screen mapping point uk 
function warped filtered basis function rk called resampling kernel 
ewa framework uses elliptical gaussians basis functions rk prefilter gaussians possible express resampling kernel closed form single elliptical gaussian 
elliptical gaussian variance matrix gv xt matrix called conic matrix xt const gaussian gv ellipses iff positive definite 
variance matrices basis function rk prefilter denoted vr vh respectively 
usually vh identity matrix 
gaussians equation jt uk jk jacobian object screen mapping evaluated uk 
formulation gaussian called screen space ewa resampling kernel 
infinite support theory 
practice truncated evaluated limited range exponent jt cutoff radius 
surface splatting algorithm takes points pk point computes resampling kernel accumulates fragments accumulation buffer 

dof ewa splatting framework section augment screen space ewa surface splatting dof rendering 
describe dof obtained blurring individual resampling kernels extend dof rendering exploit lod 

dof resampling kernel convolution neglecting occlusion express continuous screen space signal dof coc gc gc continuous screen space signal depth coc coc radius depth intensity distribution function coc radius point circularly symmetric centered origin 
applied gc spatially variant filter 
expanding equation get dof dof coc wk wk dof coc 
means get depth blurred screen space function depth blurring individual kernels summing blurred kernels 
assume depth change support replaced constant zk coordinate point pk 
function coc replaced spatially invariant function zk equation convolution dof coc zk 
compatibility ewa framework choose circular gaussians denote variance matrix coc zk plug get dof form dof jt vi uk 
formulation means get depth blurred resampling kernel easily point pk uni icr vi truncated normalized 
gaussian approximation uniform intensity distribution 
normalization truncated gaussian 
compute variance matrix vi add variance matrix resampling kernel show compute vi section 
blurring resampling kernels individually get correct dof image 

variance matrix intensity distribution function having depth value zk compute coc radius cr 
want find variance ma trix vi brings gaussian close possi ble norm uniform intensity distribution coc radius cr 
uniform distribution cr cr zero 
gaussian circular ai identity matrix scalar 
problem reduces finding suitable cr 
minimizing functional cr cr 
derived lution ln yielding variance matrix vi ln ln trying find best gaussian approximation uniform intensity distribution turn just approximation intensity distribution really function 
reason mathematical intractability intensity distribution function allow express closed form 

dof rendering level detail dof rendering lod slow high number fragments generated rasterization blurred resampling kernels 
accelerate rendering coarser lod render blurred parts objects 
yields blur image texture lod hierarchy typically low pass filtered coarser levels 
steer precisely amount blur need quantify blurring produced coarser lod eventually add additional filtering screen space 
express intuitions rigorously slightly change screen space coc diff object space dof dof 
dof rendering different lods 
definition texture function take account lod hierarchy 
extended surface texture definition 
assume discussion distinct levels lod hierarchy identified integers level leaves 
continuous texture function level represented basis functions rl representation created low pass filtering subsampling texture function fc level 
basis function rl assumed created convolving rk basis function level low pass filter ql rl rk ql 
continuous texture function uk wk rk uk 
application depth blurring 
focus trans screen space forming filters ql depth blurring 
assume basis functions rl low pass filters ql gaussians rl ql ql recall variance matrix ba sis function rk level 
vr rl rk resampling kernel basis function jk jt uk 
variance matrix gaussian jk jt kjt ql jt rk rl 
example lod selection dof rendering 
consider resampling kernel resampling kernel convolved screen space words selecting gaussian ql jt hierarchy level render surface point pk get blurring screen space gaussian ql jt look equation see get blurred resampling kernel dof convolved gaussian get dof convolve gaussian diff variance matrix vi ql jt regarded convolution gaussian diff additional blurring needed produce required blur selected hierarchy level idea lod speed depth blurring select hierarchy level gaussian ql jt just bit smaller smaller gaussian gaussian diff small possible ql jt means amount blur needs added diff small blurring significantly slow rendering 
concept illustrated 
implementation section describe implementation dof rendering screen space ewa surface splatter 
dof rendering lod 
splat compute matrix vi section add variance matrix equation get blurred resampling ker nel dof equation 
rasterized normal surface splatting 
lod selection dof rendering 
adopted hierarchy add new criterion traversal 
projected size node smaller coc radius node 
shows example lod selection dof rendering 
left image visualizes points render image right 
size points corresponds lod 
lod augmented dof rendering 
point pl determine low pass filter ql hierarchy level compute matrix additional screen space blurring steps ql jt vi jt resulting matrix resampling kernel 
function returns variance matrix ellipse ellipses defined conic matrices implementation 
lod selection algorithm designed common case bigger ql jt case simply returns relation sizes inverse example lod ql jt hierarchy traversal finished criterion depth blurring 
surface reconstruction 
buffer accumulate splats described zwicker 
extended depth test threshold depth fragments smaller threshold assumed come single surface merged kept separated buffer 
thresholding prone errors depth values gets extrapolated splat support enlarged screen space filtering prefiltering depth field filtering 
depth test ranges robust especially near silhouettes 
normalization 
splat weights generally sum screen space leads varying texture intensity resulting image 
zwicker solves pixel normalization splatting points 
post normalization weights estimate partial coverage needs precise case dof rendering 
perform normalization preprocess described ren 
ren bind normalization particular choice cutoff radius compute normalization large support reconstruction filters influence truncation negligible 
allows normalized model value having re normalize 
take smaller account rendering divide weights compensation factor truncated splat integrate keeps sum splats close 
visually pleasing dof effect value slightly higher surface splatting dof 
data aperture lod frag pts time plane lion table 
rendering performance shading 
shading done splat pixel 
splat shading 
needed view dependent shading specular highlights 
pixel shading highlights wouldn appear blurred 

results implemented dof rendering algorithm software ewa surface splatter 
illustrates dof rendering surfaces 
compares results rendering algorithm left column algorithm right column taken 
number images averaged produce images 
top bottom aperture increased 
flat objects plane difference hardly perceptible complex objects lion algorithm produces artifacts 
mainly due incorrect merge separate decisions buffer 
reason irregularity points coarser lod levels 
blur splats individually surface reconstruction applied blurring avoid intensity leakage handle partial occlusion 
buffer allows transparent surfaces 
surfaces close intersecting surfaces artifacts avoided incorrect merge separate decisions 
rendering performance summarized table 
measured frames cutoff radius ghz pentium mb ram gcc compiler optimization set pentium architecture 
table shows number generated fragments frag thousands number points pts rendering time objects 
table compares dof rendering speed lod 
rendering time determined number fragments rendering pipeline fill limited 
timings show lod speed practically independent amount depth blur 
time computing images sec 
plane images sec 
lion images 

efficient algorithm dof rendering point objects modification ewa surface splatting requires minimal implementation efforts ewa splatter ready 
renders dof correctly presence surfaces handles partial occlusion suffer intensity leakage 
knowledge algorithm uses lod dof rendering speed independent amount depth blur 
main drawbacks algorithm high sensitivity regularity sample positions surface point objects occasional artifacts due incorrect surface reconstruction buffer 
implement dof rendering algorithm ewa volume rendering 
develop tool normalization pointbased objects 
acknowledgments supported number agency ministry education czech republic 
ji bittner proofreading providing hints improve 
carpenter 
buffer hidden surface method 
siggraph proceedings 
chen 
lens effect synthetic image generation light particle theory 
visual computer 
cook porter carpenter 
distributed ray tracing 
siggraph proceedings 

real time depth field algorithm 
image processing broadcast video production 

importance ordering real time depth field 
proceedings third international conference computer science pages 
heckbert 
fundamentals texture mapping image warping 
master thesis university california 
riv ra 
rendering depth field surface splatting 
technical report dc dept computer science prague 
levoy whitted 
points display primitive 
technical report tr university north carolina chapel hill 
matthews 
analyzing improving depth field simulation digital image synthesis 
master thesis university california santa cruz december 
mulder van liere 
fast perception depth field rendering 
vrst pages 
davis woo 
opengl programming guide official guide learning opengl 
addison wesley reading mass edition 
pfister zwicker van baar gross 
surfels surface elements rendering primitives 
siggraph proceedings pages 
chakravarty 
lens aperture camera model synthetic image generation 
siggraph proceedings 
nen 
surface splatting theory extensions implementation 
master thesis helsinki university technology may 
ren pfister zwicker 
object space ewa surface splatting hardware accelerated approach high quality point rendering 
eurographics proceedings 

fast generation depth field effects computer graphics 
computers graphics 

generating depth field effects virtual reality applications 
ieee computer graphics applications 
rusinkiewicz levoy 
multiresolution point rendering system large meshes 
siggraph proceedings pages 

post filtering depth field simulation ray distribution buffer 
graphics interface 
zwicker pfister van baar gross 
surface splatting 
siggraph proceedings 
zwicker pfister van baar gross 
ewa splatting 
ieee tvcg 

comparison algorithm left solution right 
