reliable computing fl kluwer academic publishers boston 
manufactured netherlands 
interval constraint plotting interactive visual exploration implicitly defined relations timothy hickey tim cs brandeis edu school computer science brandeis university waltham ma qiu csr uvic ca maarten van emden csr uvic ca department computer science university victoria victoria canada 
conventional plotting programs adopt techniques adaptive sampling approximate guarantee correctness completeness graphing functions 
implicitly defined mathematical relations impose greater challenge plotted directly 
address problems investigating interval constraint plotting alternative approach plots hull specified curve 
empirical evidence hull property achieved algorithm 
practical experience shows hull obtained narrowest possible precision underlying floating point arithmetic adequate 
describe java applet serves testbed idea 
keywords interval constraints constraint propagation interval arithmetic implicitly defined relations honest plotting interactive plotting 
mathematical modelling science engineering requires ffl solving system numerical equalities inequalities 
equation sufficiently general term refer collectively constraints 
ffl visualizing solution system dimensional graph 
solution general relation variables selected coordinates 
relation may functional 
existing software concentrates case relation functional specified 
simplest approach sample equidistant values connect resulting points straight lines 
disadvantage detail lost function changes rapidly 
adaptive plotting attempts allocate available number points way problem avoided possible number points 
adaptive sampling significant features may fall successive points missed plot 
independently adaptive sampling difficulties remain 
discussed numerical rounding errors may accumulate unexpectedly evaluating complex equations cause plot stray correct path 
second seriously implicitly defined curves sin cos cos sin need converted functional form 
conversion straightforward 
conversion functional form resort local methods 
successful 
problem implicitly defined relations addressed contouring functions 
method interval constraint plotting property plot shows hull function relation 
property holds independently rounding errors 
cases precision underlying floating point system insufficient limitation shows hull wider necessary remains hull 
plotted hull smallest allowed resolution resulting selected size pixel 
java applet designed implemented th method interval constraint plotting 
start reviewing conventional plotting methods 
contrast call raster scan plotting extremely simple implement handle relation 
raster scan plotting inefficient suffers deformations susceptible rounding errors 
remedy problems introduce general ideas interval arithmetic interval constraints show eliminate problems raster scan plotting 
result call interval constraint plotting 

conventional plotting conventional techniques plotting function usually apply algorithm dx plot naive form dx constant means function sampled predetermined number equally spaced points 
satisfactory curves oscillate strongly areas 
adaptive plotting dx variable determined program add points original ones accurately draw strongly oscillating curves 
fateman identifies undersampling major drawback conventional methods 
adaptive sampling protect choice points 
may choose insufficiently points faithfully render part curve 
problem illustrated produced mathematica 
left plot produced naive plotting right plot employed adaptive plotting 
notice graph erratic adaptive plotting sampling density adapt increasingly rapid oscillation sin 
shows hull graph computed resolutions corresponding approximately effective resolutions plots 
area rapid oscillation near represented graphs rectangular block size theta gamma 
plots sin range mathematica non adaptive plotting left adaptive plotting right 

interval constraint plots sin range grid left grid right 
indicates function takes values gamma provides information 
implicitly defined mathematical relations introduce severe problem conventional plotting techniques 
consider circle defined 
appears necessary transform innocent equation sigma gamma sin cos 
matlab session plot circle 
plot sqrt 
hold plot sqrt transformations convenient 
consider implicitly defined relation sin cos cos sin 
isolation respect easily 
plotting programs kind contour plotting facility set plot constraint plotting single contour function example matlab commands generate contour plot shown left half 
mathematica maple offer similar features 
quality plot discussed 

sin cos cos sin 
contour plot right half discussed section 

contour plot left density plot right function sin cos gamma cos sin range 
contour plot matlab density plot generated applying mathematica function abs sin cos cos sin 
truth plotting 
raster scan plotting algorithm plot equality relation evaluating relation point raster 
call raster scan plotting 
basically dx dy abs eps plot inequality relations handled way 
fact condition statement boolean expression freedom exploited obtain plots fractals condition depends behaviour iteration 
plotting packages offer plotting feature different shades gray represent raster plots different values epsilon 
example mathematica function generates graph right side function sin cos gamma cos sin problems raster scan plotting important advantage able handle definitions functional relational form 
problems ffl graph line eps give thicker line places 
takes get acceptable plot 
conventional plotting bad choice dx far reaching consequences 
arbitrariness introduced additional choice eps 
ffl slow quadratic number points linear dimension 
ffl adapt nature plot featureless areas take time detail 
combining idea raster scan plot interval constraints avoid problems 
idea replace code dx dy solve constraint system dx dy paint rectangle sides dx dy black white success failure 
advantages 
arbitrary choice eps longer needed 
second rectangle plotted white constraint solver prove contains solutions constraint 
result plotted black hull curve 
way features missed sense hull shown 
course features missed sense detail shown elementary rectangles dx theta dy 
sections give brief interval constraints discuss optimizes double loop shown obtain appears linear algorithm 

brief interval constraints section give informal interval constraints illustrate example 
consider example problem computing circle defined 
clear inspection pairs feasible values occur range gamma 
suppose obtained additional information lying 
interval constraint system interest conjunction logical formulas related sharing denote unknown reals 
logical formulas regarded constraints possible values unknowns 
interval constraint implementation computes intervals containing values demonstrate inconsistent 
solutions contained computed intervals 
implementation interval constraints translates constraints primitive constraints 
commonly ones shown table 
table 
primitive constraints 
integer exp sin cos tan complex constraints occur left hand side formula interval constraint system processed directly known methods 
interval constraint system equation translated primitive constraints 
translation process introduces auxiliary variables chosen interval constraint system occur applying interval constraint plotting circle 
stage rectangle theta considered 
variables regarded unknown real associated interval containing values real occur solution 
solve system interval constraints starts intervals large contain solutions interest 
iterates primitive constraints reducing interval subinterval far necessary remove values inconsistent constraint consideration 
consider example constraints form suppose intervals respectively intervals contain inconsistent values 
imply gamma 
values inconsistent conventional sense word inconsistent believe negation logical implication accepts premises 
similar considerations rule values values greater removing inconsistent values priori intervals leaves intervals new bounds computed rules interval arithmetic require rounding direction set appropriately 
interval constraints depends interval arithmetic 
interval constraint system performs constraint contraction primitive constraints 
typically constraints share variables constraint contraction usually performed multiple times constraint time constraint causes interval variable contract constraints containing variable contracted 
changes contractions interval bounds floating point numbers finite number contractions suffices reach state constraints yield null contraction 
constraint relaxation algorithm terminates case 
example solve system implementation starting way infinite intervals variables 
system stabilizes interval contained gamma similarly adding additional constraints results narrowed 
interval constraint plotting original rectangle theta undergoes considerable reduction subset theta 
consistency method removes inconsistent values may remove values may resulting intervals contain solution 
results consistency method meaning solution exists intervals 
interval constraints 

interval constraint plotting conventional plotting single loop linear restricted functions 
raster scan plotting handles relations quadratic 
thought inherent ability handle relations 

interval constraint plotting able dispatch large areas plotting space due failure single interval constraint system 
interval constraint plotting adaptive similar sense adaptive plotting functions featureless areas plotting space require computing effort 
algorithm exploits adaptivity look follows void function plot rectangle rect create solve interval constraint system point rect failure paint rect white return rect small paint rect black return split rect rectangles nw sw se ne plot nw plot sw plot se plot ne execution algorithm follows quad tree far necessary interval constraint systems corresponding large areas fail painted step 
significant savings represent 
get partial answer question instrumented interval constraint plotting algorithm counter record nodes complete quadtree visited 
relation chose sin cos cos sin 
initial rectangle chose size 
ran program recursive levels subdivision corresponding grids size 
upper line shows total number tree grid size 
number nodes visited function number subdivisions 
upper line constraint sin cos cos sin lower line constraint 
lines linear slopes respectively 
nodes visited grid size 
lower line shows corresponding data relation initially interval gamma 
data suggests growth rate linear worthwhile improvement quadratic nature version directly derived raster scan method 
heuristic argument linearity interval constraint plotting method 
observe graph monotone function passes theta rectangular grid cells intersect cells 
graph cross horizontal grid lines vertical grid lines leaving grid 
enter interior grid cells 
crossings grid cell vertices intersections horizontal vertical grid lines crossing accounts intersection new grid cells 
graph intersect gamma grid cells 
assume constraint solver fail cells intersect graph assume relation plotted eventually locally monotone certain number subdivisions refinements graph require linear execution time number new subdivisions 

java applet provides dual capabilities solving non linear constraints interactively controlled interval constraint plotting 
system graphical user interface allowing user enter constraint expressions initiate interval stabilization view resulting intervals plot 
constraint plots sin cos cos sin range mathematica 
left right selected variables 
large number constraints handled large number variables 
selected coordinates plotting 
plotting resolution selected maximum subdivisions plotting window linear dimension 
shows resolutions constraint sin 
subwindow selected mouse plotting window giving effect zooming 
way proceed resolution successive floating point numbers distinguishable 
interval constraint plotting easier follow user number modifications recursive quadtree algorithm previous section 
proceeding depth proceeds level level 
addition keeps non failed rectangles list 
result curves sees contractions proceed curve 
review performance examples introduced section 
seen previous example sin incrementally reveal details curve compared graph plotted mathematica portrays appropriately problematic region near allows interesting features curve displayed higher resolution 
shows comparison mathematica contour plot left interval constraint plot right relation sin cos cos sin range 
exist certain number discrepancies regions disjoint mathematica plot plot 
analyzing solution set locally various intersection points determine graph produced contains solution set topologically correct 
mathematica graph properties 

plots sin cos cos sin range mathematica 
contour plotting left density plotting right 
plot relation identical constraints involving singular functions create problems contour methods 
example see result plotting solutions sin cos cos sin mathematica left right 
observe contour plot incorrectly contains rough approximation graph singularities function 
graph somewhat better distinguishes singular locus white solution set black note tuning choice gray scale map required get particular plot provides approximation specified error bound solution set 
graph produced constraint identical graph interval constraints multiplications divisions symmetrical components ternary product constraint 

related concerned contouring functions variables 
instance implicitly defined relation 
uses quadtrees avoid quadratic behaviour raster scan plotting method 
illustrations suggest behaviour concerned aspect 
method uses discrete points grid subject problem undersampling 
guarantee obtaining hull contour 
papers interval methods plotting 
fateman implemented interval arithmetic plotting functions mathematica enhance plotting facilities 
pointed interval methods give hull property graphs functions property referred honest plotting 

interval constraints represents new approach numerical computation 
shown especially effective solving large numbers nonlinear equations nonconvex global optimization 
basic operation constraint contraction relies interval arithmetic 
implementations benefited experience gathered interval arithmetic especially embodied ieee standard floating point arithmetic provides directed rounding 
interval constraints eliminates inconsistent values variables concerned solutions assuming course underlying interval constraint solving hardware software system correctly implemented 
outcome includes empty interval variable doubt solution 
words false negatives interval constraints 
hand stabilization intervals nonempty means solutions remaining intervals 
words false positives possible 
experience arises situations rectangles large precision underlying floating point system inadequate 
famous numerical analysis wilkinson polynomial examples tend show false positives interval constraints 
interval constraint plotting asymmetry absence false negatives possibility false positives translates fact hull true plot shown 
false positives finer subdivision plotting area 
encouraging computation time appears grow linearly number subdivisions plotting axes 
asymmetry absence false negatives possibility false positives may appear fundamental limitation 
plotting hardly appears case 
suppose interested contour continuous function 
case invoke interval constraint plotting twice 
case white areas interval constraints failed guarantee absence solutions equality 
rounding errors effect making areas slightly small 
contours interval constraint plotting gives certainty area sure negative values area sure positive values 
narrow area uncertainty 
usual proviso narrow area perfectly precise rendering contour 
allow gives plot single interval constraint system course number constraints 
superimpose plots arising different interval constraint systems 
quite slow java virtual machine fast allow enjoyable experimentation reader invited 
acknowledgments gratefully acknowledge natural science engineering research council canada generously providing research facilities 
ying luo helpful conversations 

interval computations academic press 

honest intelligent plotting proc 
issac july montreal canada pp 
acm press 

bajaj hoffman hopcroft lynch tracing surface intersections computer aided geometric design pp 


benhamou older applying interval arithmetic real integer boolean constraints journal logic programming pp 


prolog user guide manual software engineering center research ottawa canada 

fateman honest plotting global extrema interval arithmetic proc 
issac july berkeley ca pp 
acm press 

forsythe pitfalls computation math book isn amer 
math 
monthly pp 


hansen global optimization interval analysis marcel dekker 

hickey java applet accessible www cs brandeis edu tim 

moore interval analysis prentice hall 

snyder interval analysis computer graphics computer graphics july pp 


quadtree algorithms contouring functions variables computer journal pp 


analytic background computation surface intersections douglas aircraft technical memorandum ci cat april 

graphing equations generalized interval arithmetic 
sc thesis department computer science university toronto 

van emden value constraints clp scheme constraints international journal pp 


van hentenryck michel deville numerica modelling language global optimization mit press 

williams quadtree computer journal pp 

