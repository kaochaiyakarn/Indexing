anonymity information hiding multiagent systems joseph halpern kevin neill department computer science cornell university cs cornell edu provide framework reasoning information hiding requirements multiagent systems reasoning anonymity particular 
framework employs modal logic knowledge context runs systems framework spirit earlier secrecy :10.1.1.129.1575
give definitions anonymity respect agents actions observers multiagent systems relate definitions anonymity definitions information hiding secrecy 
give probabilistic definitions anonymity able quantify observer uncertainty state system 
relate definitions anonymity formalizations anonymity information hiding including definitions anonymity process algebra csp definitions information hiding function views 
primary goal provide formal framework reasoning anonymity multiagent systems 
importance anonymity increased past years communication passes internet 
web browsing message sending file sharing important examples activities computer users engage may reluctant receive guarantees anonymity protected reasonable degree 
systems built attempt implement anonymity 
helpful formal framework reason level anonymity systems provide 
view anonymity instance general authors supported part nsf ctc onr dod multidisciplinary university research initiative muri program administered onr afosr 
problem information hiding 
theory computer security fundamental problems research concerned hiding information 
cryptography instance hide contents message untrusted observers passes party 
anonymity requirements intended ensure identity agent performs action remains hidden observers 
noninterference requirements essentially say classified high level users system hidden lowlevel users 
privacy catch term means different things different people typically involves hiding personal private information 
information hiding properties thought providing answers set questions information needs hidden 
need hidden 
need hidden 
analyzing security properties questions mind clear different properties relate 
questions serve test definition usefulness information hiding property able provide clear answers questions 
earlier formalized secrecy noninterference terms knowledge :10.1.1.129.1575
roughly speaking secrecy preserved low level user knows high level user didn initially know 
knowledge provides natural way express properties information hidden know 
surprisingly formalization anonymity similar spirit formalization secrecy 
definition secrecy says classified agent maintains secrecy respect unclassified agent unclassified agent doesn learn new fact depends state classified agent 
agent didn know classified fact start agent doesn know point system 
definitions anonymity say agent performing action maintains anonymity respect observer observer learns certain facts having agent performed action 
turns subtle important differences secrecy standard notions anonymity 
possible preserve complete secrecy having anonymity example possible anonymity preserving secrecy 
considering relationship secrecy anonymity suggests new interesting ways thinking anonymity 
generally formalizing anonymity information hiding terms knowledge useful capturing intuitions practitioners 
knowledge belief formalize notions information hiding 
glasgow panangaden describe logic reasoning security includes epistemic operators reasoning knowledge deontic operators reasoning permission obligation 
characterize security policies terms facts agent permitted know 
intuitively agent permitted know remain hidden 
approach similar specify formulas agent allowed know formulas permitted know 
advantage negative need deontic operators logic 
epistemic logics define information hiding properties including noninterference anonymity 
gray syverson epistemic logic define probabilistic noninterference syverson stubblebine formalize definitions anonymity 
thrust quite different 
gray syverson focus particular definition information hiding probabilistic setting syverson stubblebine focus axioms anonymity 
focus hand giving semantic characterization anonymity framework lends modeling systems 
shmatikov hughes position approach anonymity discussed detail section attempt provide interface logic approaches claim specifying desired properties anonymity formalisms csp claim specifying systems 
agree claim logic approaches specifying properties systems claim appropriate semantics logic need provide interface 
ways specifying systems identifying system set runs traces embedded runs systems framework 
definitions anonymity epistemic logic possibilistic 
certainly believes users including performed action fact performed degree anonymity respect believes probability performed action fact possibilistic assurance anonymity provides little comfort 
best knowledge previous formalizations anonymity possibilistic 
papers presenting formalizations typically conclude acknowledgment important capture probability suggest handled formalism 
significant advantage formalism completely straightforward add probability natural way known techniques :10.1.1.40.8389
rest organized follows 
section briefly review runs systems formalism describe represent knowledge 
section show anonymity defined knowledge relate definition notions information hiding particularly secrecy defined earlier 
section extend possibilistic definition section capture probabilistic concerns 
observed number ways define anonymity 
definitions provide strong guarantees anonymity easier verify practice 
giving exhaustive list definitions focus representative notions show example logic expressive capture notions interest 
section compare framework attempts formalize anonymity schneider sidiropoulos hughes shmatikov stubblebine syverson 
conclude section 
multiagent systems review section briefly review multiagent systems framework urge reader consult details 
multiagent system consists agents local state point time 
assume agent local state encapsulates information agent access 
security setting local state agent include initial information regarding keys messages sent received reading clock 
framework assumptions precise nature local state 
view system global state tuple consisting local state agent state environment 
global state form state environment agent state run function time global states 
intuitively run complete description happens time possible execution system 
point pair consisting run time standard assumption time ranges natural numbers 
point system global state 
take agent local state point 
formally system consists set runs executions 
denote points system runs systems framework compatible standard approaches representing reasoning systems 
example runs event traces generated csp process see section message passing sequences generated security protocol generated strands strand space 
approach rich accommodate variety system representations 
important advantage framework straightforward define formally agent knows point system 
system set points thinks possible agent knows fact point true points 
intuition precise need able assign truth values basic formulas system 
assume set primitive propositions think describing basic facts system 
context security protocols facts key agent sent message 
interpreted system consists pair system interpretation assigns primitive propositions truth value point 
point ftrue falseg 
define means formula true point interpreted system written induction structure formulas iff true iff iff iff usual write points defining anonymity knowledge information hiding definitions anonymity example information hiding requirement 
information hiding requirements include noninterference privacy confidentiality secure 
requirements similar overlap 
noninterference example requires great deal hidden typically implies privacy anonymity classified user state protected noninterference requirement 
looked noninterference secrecy requirements multiagent systems :10.1.1.129.1575:10.1.1.129.1575
secrecy basically requires system classified unclassified users unclassified users able infer actions local states unclassified users 
secrecy needs hidden component information hiding extremely restrictive secrecy requires absolutely classified user hidden 
need hidden component depends situation 
definition secrecy says nontrivial fact valid depends state classified high level agent formula valid 
see discussion definition :10.1.1.129.1575
semantically means high level user exists run low level user view system high level user different 
nonprobabilistic definitions give fairly strong simply secrecy requires hidden :10.1.1.129.1575
probabilistic definitions require agent learn new classified fact learn probability fact 
words agent initially assigns classified fact probability true assigns probability 
perfectly natural possibly quite interesting consider definitions secrecy require hidden allowing classified information declassified discuss definitions require strong secrecy giving definitions stronger nonprobabilistic definitions gave quite strong probabilistic definitions 
defining anonymity basic intuition anonymity actions divorced agents perform set observers 
respect basic information hiding framework outlined information needs hidden identity agent set agents perform particular action 
information needs hidden observers depends situation 
third component information hiding requirements information needs hidden interesting component definitions anonymity 
goal section provide correct definition anonymity 
want avoid giving encyclopedia definitions 
give basic definitions anonymity show framework 
base choice definitions part definitions earlier papers clear relates previous part definitions anonymity expect useful practice 
give extremely weak definition illustrates basic intuition definition anonymity 
formula represent agent performed action 
definition action performed agent minimally anonymous respect agent interpreted system 
definition clear hidden fact performed 
describes information hidden requires sure performed action 
note weak information hiding requirement 
case example agent certain action performed agents making prime suspect 
case able place high probability having performed action isn absolutely certain 
agent know slight probability agent performed action example 
case definition anonymity give want ensure performing action kept anonymous far observer concerned action minimally anonymous respect definition clear anonymity relates secrecy defined :10.1.1.129.1575
explain need describe defined secrecy terms knowledge 
system say nontrivial depends local state agent 
intuitively nontrivial false depends local state knows true 
easy see depends local state implies 
definition agent maintains total secrecy respect agent system nontrivial fact depends local state formula valid system :10.1.1.129.1575
maintains total secrecy respect learn new agent state 
note agent local state keeps track performed action depends state 
assume know going perform action assume nontrivial definition clearly special case definition secrecy 
essentially anonymity says fact agent performed action hidden total secrecy says facts depend agent hidden definition anonymity give stronger 
requires agent performs action anonymously respect agent think possible action performed agents 
abbreviation 
operator dual intuitively means agent thinks possible 
definition action performed agent totally anonymous respect interpreted system definition captures notion action anonymous far observer question concerned performed anybody system 
easy show action totally anonymous minimally anonymous long simple requirements satisfied 
agents system 
college student leave dirty dishes anonymously student able 
second case performed run system 
possible think agent performed know agent perform example consider system agents agent know agents performed action case particular knows performed action performed minimally anonymous respect totally anonymous 
anticipate assumption typically met practice 
certainly consistent examples anonymity literature 
see example 
case met possible tag occurrences action talk kth time performed 
talk ith occurrence action anonymous 
ith occurrence action happen run requirement satisfied 
proposition suppose agents interpreted system action performed agent totally anonymous respect minimally anonymous 
proof suppose action totally anonymous 
agents system agent total anonymity 
clearly 
total anonymity 
exists point 
assumption 
follows minimally anonymous respect definitions conceptually similar definition stronger 
set formulas observer allowed know 
earlier definition formula set 
long doesn know performed action requirement satisfied 
total anonymity formulas allowed know take form 
guarantee know action agents guarantee know action 
definition slightly complicated implication restricts conditions allowed know 
didn perform action don care thinks concerned anonymity respect 
basic idea 
note total anonymity necessarily follow total secrecy 
formula depend local state local state perfectly consistent definition total secrecy learn fact 
secrecy course follow anonymity secrecy requires facts hidden simply performed action 
total anonymity strong requirement 
action totally anonymous anonymous set agents performed action 
situation merits weaker definition anonymity 
precise set agents system suppose anonymizing set agents perform action 
define anonymity terms set 
definition action performed agent anonymous respect ia anonymous message passing system herbivore example users organized cliques cn user wants send anonymous message clique 
dining cryptographers protocol herbivore provides guarantees user able send message anonymously size user clique varies strength anonymity guarantees provided system 
situations necessary fixed anonymizing set definition 
suffices times exists anonymizing set say agents 
leads definition anonymity 
definition action performed agent anonymous respect fia ji kg ia definition says point think possible agents performed action 
note different runs different sets agents thinks performed task 
example dining cryptographers known example anonymity computer security literature chaum dining cryptographers problem 
original description problem cryptographers sit dinner informed host paid bill anonymously 
cryptographers decide bill paid people group outside agency nsa 
want find situations actual preserving anonymity cryptographer paid 
chaum provides protocol cryptographers solve problem 
guarantee works nice check anonymity conditions hold 
assuming system includes set cryptographer agents outside observer agent protocol guarantee agent agent fig act paying anonymous fjg respect outside observer protocol guarantee agent protocol anonymous respect precise definition anonymity set 
requirements symmetric cryptographers description compact naming agents modular arithmetic 
notation denote addition mod 
example assume interpreted system represents instances dining cryptographers protocol interpretation interprets formulas form paid obvious way 
knowledge requirements comprise anonymity portion protocol specification agent paid paid paid paid paid probabilistic variants anonymity probabilistic anonymity definitions section nonprobabilistic 
mentioned serious problem information hidden component definitions 
definitions gave necessary observers think possible multiple agents performed anonymous action 
event possible may extremely 
consider definition total anonymity definition 
states action performed totally anonymous observer thinks performed agent may strong requirement say agents determine performed action probability agents performed action probability agent happy guarantees provided total anonymity 
course appropriate notion anonymity depend application content know agent prove performed anonymous action 
case suffice action minimally anonymous 
cases agent want quantitative probabilistic guarantee considered reasonably agents performed action 
adding probability runs systems framework straightforward 
approach goes back secrecy just briefly review relevant details :10.1.1.40.8389:10.1.1.129.1575
system suppose probability measure runs pair probabilistic system 
simplicity assume subset measurable 
interested probability agent assigns event point 
example may want know point observer places probability having performed particular action 
want condition probability information point 
problem set points probability runs 
problem dealt follows 
set points consist runs going point fr mg idea condition 
sure conditioning defined assume agent run time assigns positive probability set runs compatible happens run time far agent concerned 
assumption define measure points follows 
define set points lie runs sg measurable subsets sets assigns probability consist sets form define 
easy check probability measure essentially defined conditioning 
give semantics syntactic statements probability 
interested formulas form pr similar formulas 
intuitively formula pr true point probability true formally pr similarly give semantics pr pr conditional formulas pr note formulas talk probability true false state 
straightforward define probabilistic notions anonymity probabilistic systems 
example think definition saying far observer concerned probability performed anonymous action assuming nonempty set positive probability 
generalized specifying requiring probability definition action performed agent anonymous respect agent pr definition definition anonymity need long probability having performed action low worry 
thought hard see case 
consider scenario agents 
suppose probability alice bob performed action probability agents performed action agent 
alice probability bob performed action small probability performed action orders magnitude smaller 
obvious bob alice guess determine performed action 
way avoid problems strengthen definition way definition strengthens definition 
definition 
requires agent anonymizing set suspect 
definition action performed agent strongly probabilistically anonymous respect agent pr pr depending size definition extremely strong 
state simply agents observer think reasonably agent performed action says observer probabilities agent 
course weaken definition somewhat requiring probabilities equal requiring approximately equal difference small ratio close 
main point wide variety properties expressed clearly succinctly framework properties involve strong probabilistic requirements 
conditional anonymity shown useful notions anonymity including definitions proposed expressed framework claim important intuitions captured 
suppose example donation cornell university 
clearly case equally equally donation 
course take anonymizing set consist people position large donation insist considered equally 
unfortunately unreasonable priori may known connections cornell considered far donation 
anonymous donor reasonably expect observer learns interactions environment reading newspapers noting donation give information identity donor 
example consider conference research journal provides anonymous reviews researchers submit papers publication 
review process provides anonymity small strongly probabilistic anonymity reasonable set 
example accepted csfw acceptance notice included reviews terminology anonymous program committee 
reviews received written members program committee 
reading reviews able fairly guesses committee members provided reviews knowledge specializations various members content reviews 
fairly idea committee members provide reviews received reviews 
unreasonable hope review process provide strong probabilistic anonymity program committee weaker variant probabilistic anonymity 
probabilistic anonymity require reviews convert prior beliefs program committee members reviewers posterior beliefs program committee members equally 
reasonable 
reviewers hope process give information 
tried capture intuition unclassified user interacts secure system learn classified user didn know :10.1.1.129.1575
formally requiring points unclassified user sees probability particular classified state remain unchanged 
defining anonymity concerned protecting information agent fact performed particular action probabilistic system formula consist set runs true point set points true 
fr obvious analogue requirement points definition says learns probability performed ascribes probability event 
context anonymous donation example say probability donating cornell times 
problem definition allow learn donated cornell 
learned donated cornell may thought donate money cornell 
expect probability donating learning donation 
want give definition conditional anonymity allows observers learn action performed protects possible system fact particular agent performed action 
hand anonymous action performed observer probabilities matter 
suppose wants perform action wants conditional anonymity respect represent fact performed agent 
definition conditional anonymity says prior probability posterior probability points knows points knows performed note prior probability performed somebody 
conditional anonymity says point knows performed probability words shouldn able learn performed performed somebody know began interacting system place 
definition action performed agent conditionally anonymous respect probabilistic system pr note agent performs trivially conditionally anonymous respect may minimally anonymous respect conditional anonymity necessarily imply minimal anonymity 
definition implicitly assumed agent allowed learn performed action anonymity intended hide agent performed somebody 
generally believe need consider anonymity respect observer allowed learn 
want specify example observer allowed know donation learn contents conference review 
definition lets formally 
definition suppose formula true point run probabilistic system action performed agent conditionally anonymous respect probabilistic system pr definition clearly special case definition 
intuitively definitions say observer learns fact connected fact require doesn learn change probabilities 
uses probability previous subsections emphasized probability obtain definitions anonymity stronger section 
probabilistic systems define interesting ways weakening definitions 
real world anonymity systems offer absolute guarantees anonymity specified definitions 
guarantee user anonymity protected high probability 
run user anonymity protected corrupted 
probability event user anonymity corrupted small set runs anonymity protected assigned small probability measure guarantee user interact system 
recall said maintains total anonymity respect fact true point system 
total anonymity compromised run point holds 
set runs total anonymity compromised simply notation previous section 
small maintains total anonymity high probability 
analysis obviously extended definitions anonymity previous sections 
bounds useful analyzing real world systems 
crowds system example uses randomization routing communication traffic anonymity protected high probability 
probabilistic guarantees provided crowds analyzed formally shmatikov probabilistic model checker demonstrates anonymity guarantees provided crowds system change users may honest corrupt added system 
shmatikov uses temporal probabilistic logic express probabilistic anonymity properties properties expressed system framework 
straightforward give semantics ot temporal operators systems see 
case shmatikov analysis real world anonymity system useful example formal methods advocate specify verify properties real world systems 
related knowledge definitions anonymity mentioned knowledge handle definitions security information hiding anonymity 
anonymity formalized epistemic logic syverson stubblebine 
epistemic logic characterize number information hiding requirements involve anonymity 
focus different 
describe logic reasoning anonymity number axioms logic 
agent knowledge roughly speaking follows log system events 
axioms syverson stubblebine give standard axioms knowledge 
known soundness completeness results relating axiom system kripke structure semantics knowledge 
give axioms attempt give semantics axioms sound 
focus hand completely semantic 
tried axiomatize anonymity 
try give appropriate semantic framework consider anonymity 
ways syverson stubblebine model detailed model 
logic includes formulas represent various actions facts including sending receiving messages details encryption keys 
assumptions local state agent including details sequence actions agent performed locally log system events recorded set facts agent aware 
extra details may accurately reflect nature agents real world systems orthogonal concerns 
case easy add expressiveness model simply including details local states various agents 
straightforward relate definitions syverson stubblebine 
consider facts form principal agent 
assume fact single formula single agent name occurs 
clearly example formula 
fact syverson stubblebine assume true formulas means simultaneously true agent perform action run exactly setup proposition 
definition especially relevant discussion relevant definitions similar 
system said satisfy anonymity formula valid observer 
definition says holds agents including observer suspects 
existential quantification agents implicit 
definition essentially equivalent definition anonymity 
certainly implies agents true 
hand true agents formula hold valid 
csp anonymity great deal foundations computer security process algebras ccs csp basic system framework 
process algebras offer advantages simple specifying systems system properties model checkers available verify properties systems described formalisms 
schneider sidiropoulos csp characterize type anonymity describe variants dining cryptographer problem 
verify notion anonymity holds variants problem 
describe approach need outline basic notation semantics csp 
save space give simplified treatment csp 
see hoare complete description csp 
basic unit csp event 
systems modeled terms events perform 
events may built components 
example donate 
represent donate event amount 
processes systems components systems described csp 
process unfolds executes various events occur 
purposes simplifying assumption process determined event sequences able engage 
associate process set traces 
intuitively trace set associated process represents sequence events occur execution informally csp event traces correspond finite prefixes runs explicitly describe local states agents explicitly describe time 
schneider sidiropoulos define notion anonymity respect set events 
typically consists evens form fixed action agent set denote anonymity respect means event occurs equally event particular means agent performs equally agent formally set possible events fa function traces trace returns trace fa identical event replaced fixed event 
process strongly anonymous identify associated set traces 
means events interchangeable replacing event get valid trace schneider sidiropoulos give simple examples useful clarifying definition anonymity 
system agents provide donations charity 
agent gives donation gives agent gives 
followed charity 
events interest gives gives representing events donation representing charity receipt donation signify process ended 
possible traces 
gives 

gives 
donors require anonymity require csp process strongly anonymous set gives 
fact condition satisfied process gives gives interchangeable 
gives followed gives followed 
intuitively agent observes traces determine donor looking amount money donated 
believe schneider sidiropoulos definition best understood trying capture intuition observer sees events generated events know event occurred 
precise translating schneider sidiropoulos definition framework 
step associate process corresponding set runs rp reasonable way doing suffices purposes 
hope explore connection csp runs systems framework detail 
recall run infinite sequence global states form local state agent state environment 
specify set runs need describe set agents explain derive local states agent run 
obvious problem csp analogue agents local states 
get simply tag events agent schneider sidiropoulos fact events 
current purposes simpler approach 
agent care possibly mythical observer able observe event ones events observer knows happened 
may agents system local states irrelevant 
formalize follows 
fix process set events 
schneider sidiropoulos purposes discussion assume consists events form specific action 
say system compatible exists agent conditions hold run time exists trace fa trace exists run fa number events 
intuitively represents trace point point exactly events occurred recorded environment state observed fa point trace precisely events happened observed fa 
say interpreted system compatible compatible event event sequence 
able formal connection definition anonymity schneider sidiropoulos 
setup proposition assume anonymous action performed run 
theorem compatible strongly anonymous alphabet agent action performed anonymous respect proof suppose strongly anonymous alphabet need show action performed anonymous respect point need show ia 
appear performed holds trivially 
need show need show exists point 
compatible exists trace event appears trace identical occurrence replaced strongly anonymous compatible exists point fa 
construction fa fa 


conversely suppose agent action performed anonymous respect need show strongly anonymous 
clear show 
suppose 
follows exist identical occurrence replaced compatible exists run fa 
clearly anonymity 
exists point 
action performed trace trace performing compatible trace required 
assumed observer access information system event performed 
schneider sidiropoulos extend definition strong anonymity deal agents somewhat information 
capture information abstraction operators 
process abstraction operators give new process 
example hiding operator represented hides events set process pnc events internal events new process included traces associated pnc 
abstraction operator renaming operator appeared definition strong anonymity set events consider function fc maps events fixed new event 
difference hiding renaming events hidden observer aware took place 
events renamed observer aware event took place know 
abstraction operators provide useful way model process agent distorted limited view system 
context anonymity allow anonymity hold respect observer limited view system cases hold respect observer see 
anonymous donations example hiding events amount money donated new process pnf strongly anonymous set donation events 
formally abstraction operator set events check requirement strong anonymity process process abstraction easily captured framework 
amounts simply changing local state observer 
example anonymity process pnc framework corresponds anonymity action agent respect observer local state point fa nc 
omit obvious analogue theorem 
major advantage runs systems framework definitions high level properties anonymity depend local states agents question 
want model fact observer limited view system need modify local state reflect fact 
limited views naturally captured csp abstraction operators may 
definition anonymity depend existence appropriate abstraction operator able capture limitations particular observer 
demonstrated approach anonymity compatible approach taken 
definitions stated terms actions agents knowledge intuitive flexible 
generality runs systems allows simple definitions apply wide variety systems agents 
lowlevel csp definitions hand opera tional allows easier model checking verification 
furthermore advantages process algebras general systems represented succinctly 
suggests approaches advantages 
csp systems represented runs systems framework perfect sense define anonymity csp processes knowledge definitions 
definitions turn equivalent low level csp definitions ideal csp model checking programs verification 
system designer simply needs take care runs system derived csp process set processes represents local states different agents appropriately 
anonymity function view semantics hughes shmatikov introduce function views function view way expressing variety information hiding properties succinct uniform way 
main insight requirements anonymity involve restrictions relationships entities agents actions 
relationships expressed functions set entities hiding information observer amounts limiting observer view function question 
example anonymity properties concerned observer able connect actions agents performed 
considering function set actions set agents performed actions specifying degree function opaque observers express anonymity framework 
model uncertainty associated function hughes shmatikov define notion function knowledge explicitly represent observer partial knowledge function 
function knowledge focuses particular aspects function graph image kernel 
recall kernel function domain equivalence relation ker defined ker iff 
function knowledge type triple equivalence relation triple consistent imf intuitively triple consistent represents agent know function complete knowledge function example represented triple imf 
anonymity information hiding general interested agent knows agent know 
formalized terms conditions function knowledge 
hf ki consistent example value opaque jf value opaque possible candidates value similarly value opaque words domain element ruled candidate 
absolutely value opaque value opaque 
conditions closely related nonprobabilistic definitions anonymity section 
consider functions set actions set agents suppose function function action names agent performed action 
value view corresponding observer means essentially action anonymous respect similarly view value opaque action anonymous agent function view provides concise way describing anonymity properties information hiding properties general 
connections precise need explain function views embedded runs systems framework 
hughes shmatikov show define function views kripke structures standard approach giving semantics knowledge 
minor modification approach works systems 
assume interested performs action intuitively set anonymous actions 
set agents partial function intuitively agent performed action undefined agent performed action value function depend point 
value point 
point agent performed easily talk function respect observer example value opaque point respect exists point terms knowledge value says value range thinks possible value result 
hughes shmatikov say function view defined terms kripke structure semantics closely related epistemic logic 
proposition precise easy state similar propositions kinds function view 
proposition interpreted system note defined case agent perform single action 
hughes shmatikov consider partial functions necessary deal fact action may performed 
satisfies system value opaque observer point proof result follows immediately definitions 
stated terms knowledge function view looks lot definitions anonymity 
precisely set ff functions mapping actions agents state theorem connecting anonymity function view 
minor issues deal 
definitions anonymity stated respect single action function deals set actions 
deal domain singleton fag 
second definition anonymity set requires observer suspect agents performs action 
recall true syverson stubblebine definitions 
value requires observer think agents performed action 
deal require action performed 
theorem suppose exactly action anonymous respect agent points value opaque respect proof suppose value opaque 
need show 
value opaque exists point 
conversely suppose agent anonymous respect suppose 
follows 
anonymity 
exists point 
follows value opaque 
proposition easy state analogous theorems connecting definitions anonymity including minimal anonymity total anonymity anonymity forms function view 
omit details 
hughes shmatikov argue epistemic logic useful language expressing anonymity specifications csp useful language describing specifying systems 
certainly agree claims 
propose function views useful interface mediate 
tried argue mediation necessary multiagent systems framework describing systems 
traces csp essentially viewed runs 
believe function views basis useful language reasoning aspects information hiding 
imagine adding abbreviations language talk directly function views 
view abbreviations syntactic sugar notions expressed directly terms knowledge operators introduced 
hand believe function views expressive capture aspects information hiding 
obvious problem adding probability 
easy add probability systems shown capture interesting probabilistic notions anonymity far clear take function views triples primitive 
sum argue reason knowledge probability need possible worlds underlying semantic framework 
multiagent systems approach gives possible worlds way particularly easy relate systems 
semantic framework function views may provide useful syntactic construct reason information hiding 
discussion described framework reasoning information hiding multiagent systems general definitions anonymity agents acting systems 
compared contrasted definitions similar definitions anonymity 
knowledge system framework provides number advantages able state information hiding properties succinctly intuitively terms knowledge observers attackers interact system 
system defined semantics lets reason knowledge systems interest systems specified process algebras strand spaces 
able give straightforward probabilistic definitions anonymity related properties 
obviously important issue mentioned model checking check system specifies knowledgebased properties introduced 
fortunately explored problem model checking multiagent systems framework 
van der meyden discusses algorithms complexity results model checking wide range epistemic formulas runs systems framework van der meyden su results verify dining cryptographers protocol formulas described example 
model checking formulas involving knowledge intractable large problems results promising step able knowledge specification verification anonymity properties 
described way generate set runs csp process basically recording events state environment describing observer able observe subset events 
translation useful comparing definitions anonymity operational csp definitions 
hope explore connections runs systems framework tools ccs csp spi calculus :10.1.1.1.5724
great deal computer security formalized information hiding properties tools 
reasons knowledge various agents informal way tries capture knowledge security properties formalisms 
describing canonical translations formalisms runs systems framework hope able demonstrate formally definitions security capture notions knowledge 
acknowledgments dan grossman dominic hughes shmatikov paul syverson weissman reviewers anonymous program committee useful discussions thorough copy editing 
abadi gordon :10.1.1.1.5724
calculus cryptographic protocols spi calculus 
fourth acm conference computer communications security pages 
chaum 
dining cryptographers problem unconditional sender recipient untraceability 
journal cryptology 
fagin halpern megiddo 
logic reasoning probabilities 
information computation 
fagin halpern moses vardi 
reasoning knowledge 
mit press cambridge mass 
focardi gorrieri 
classification security properties part information flow 
foundations security analysis design pages 
springer 
glasgow panangaden 
logic reasoning security 
acm trans 
computer systems 
goel robson sirer 
herbivore scalable efficient protocol anonymous communication 
unpublished manuscript 
gray syverson 
logical approach security probabilistic systems 
distributed computing 
halpern neill :10.1.1.129.1575
secrecy multiagent systems 
proc 
th ieee computer security foundations workshop pages 
halpern pucella 
relationship strand spaces multi agent systems 
proc 
eighth acm conference computer communications security pages 
appear acm transactions information system security 
halpern tuttle :10.1.1.40.8389
knowledge probability adversaries 
journal acm 
hoare 
communicating sequential processes 
prenticehall 
hughes shmatikov 
information hiding anonymity privacy modular approach 
journal computer security 
milner 
calculus communicating systems 
lecture notes computer science vol 

springer verlag berlin new york 
reiter rubin 
crowds anonymity web transactions 
acm transactions information system security 
schneider 
security properties csp 
proceedings ieee symposium security privacy pages 
schneider sidiropoulos 
csp anonymity 
european symposium research computer security pages 
shmatikov 
probabilistic analysis anonymity 
proc 
th ieee computer security foundations workshop pages 
syverson stubblebine 
group principals formalization anonymity 
world congress formal methods pages 
van der meyden 
common knowledge update finite environments 
information computation 
van der meyden su 
symbolic model checking knowledge dining cryptographers 
unpublished manuscript 
zdancewic myers 
robust declassification 
proceedings th ieee computer security foundations workshop pages 
