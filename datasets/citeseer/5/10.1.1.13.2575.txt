flexible authentication xml documents devanbu gertz kwong martel stubblebine department computer science stubblebine consulting llc university california wayne blvd davis ca usa madison nj devanbu gertz martel cs ucdavis edu stuart stubblebine com xml increasingly format choice information exchange internet 
trend grows expect documents collections thereof may get quite large clients may wish query specific segments documents 
critical areas healthcare law finance integrity essential 
applications clients assured getting complete correct answers queries 
existing methods signing xml documents establish answer query complete 
simple approach server processing queries certifying answers digitally signing line private key server line private key vulnerable external hacking insider attacks 
propose new approach signing xml documents allows untrusted servers answer certain types path queries selection queries xml documents need trusted line signing keys 
approach enhances security scalability publishing information xml format internet 
addition provides greater flexibility authenticating parts xml documents response commercial security policy considerations 
xml increasingly format choice publication information internet critical areas government finance healthcare law integrity essence 
volume information available xml format grows expect clients may wish query specific elements interest 
critical applications clients assured getting complete correct answers queries 
example employer seeking hire driver wish query available information traffic violations social security number 
complete correct listing violations critical 
example servicing requests submitted electronic freedom information act requires government agencies provide online index search records electronic means 
similar procedures allow ad hoc oversight governmental activities concerned citizens 
traditional processes past satisfy requests gratefully acknowledge support nsf itr program 
devanbu gertz supported defense advanced research projects agency space naval warfare systems command contract number 
content information necessarily reflect position policy government official endorsement inferred 
see 
plausible deniability 
may fear governments hide destroy records procedurally sound means 
motivated examples consider question untrusted party returns parts xml document claiming complete correct answer query claim verified 
existing approaches signing xml documents allow server single signature entire document authenticate portion document possible document signature show set document segments complete correct answer query 
certainly server process queries certify answers digitally signing answer line private key server line private key vulnerable external hacking insider attacks 
rate server untrusted having digitally sign answers pointless 
propose new approach signing xml documents allows untrusted servers answer certain types path queries selection queries xml documents need trusted line signing keys 
approach enhances security scalability publishing information xml format internet 
addition provides greater flexibility authenticating parts xml documents response commercial security policy considerations 
approach applied type dtd focus mainly non recursive dtds survey publicly available dtds non recursive 
believe approach useful applications 
approach extends easily recursive dtds simply bounding recursive depth target document recursion depth naturally bounded 
section background information related technologies assumed related 
section basic approach authenticating answers path queries 
conclude section 
background suppose client desires process queries large xml document held trusted server traditional model described 
sk client public key asks server document private key sk result query document 
client eval sk eval sk server returns answer verifiable digital signature scenario practical pre compute possible signatures possible answers server needs trusted needs securely maintain line signing key 
greater security scalability queries processed untrusted servers need line signing keys 
scenario owner computes digest signs query processing done untrusted publisher provides certificate correctness answer 
simplifies key management burden example owner relegate signing key smart card keeps locked safe updates 
detailed operation steps corresponding steps shown 
owner client client client publisher authentic publication xml documents 
document created owner uses special approach 
clients receive digest authentic channel document sent publisher 
response query client publisher returns answer verification object certifying correctness answer 

clients receive data owner signed specially computed digest data algorithm relies way hash function 
digest transmitted securely public key signature 
exception checking database update step cryptographic signature required 

data transmitted data publishers 

client submits request untrusted publisher 

client receives back publisher answer specially computed certificate lets check answer correct 
certificate uses way hash function private signing keys 

shown client runs special verification procedure compares digest received owner results particular hash calculation publisher certificate 
comparison succeeds accepts rejects 
various researchers developed approach settings review detail subsequent section :10.1.1.109.5235:10.1.1.16.2936
seek adapt approach xml documents 
various advantages reported earlier literature scalability flexibility security bring advantages increasingly popular xml data exchange format 
section background material 
introduce simple data model captures essence xml documents relevant purposes introduce dtds path queries selection queries 
review relevant background related area certified data publishing standard securely hashing xml documents xml digital signature standard 
xml document model path queries employ xml document model document represented ordered tree 
conventional terminology xml documents widely proposals xml information set xpath 
assume set element names known tags set string values disjoint 
xml document model xml document node labeled tree described tuple label elem set vertices distinguished element called root node label mapping vertices element names function elem mapping vertices vertices strings known sub elements function list 
sake simplicity motivate basic concepts approach consider entities comments processing instructions occur xml document 
particular consider element attributes easily included approach type node 
node called text node elem leaf nodes document tree text nodes 
node different root node parent node denoted parent 
node unique node path consists sequence nodes starting root node node associating label node node path results called label path denoted path sequence element names 
different node paths label path 
order allow meaningful exchange xml documents formally describe admissible structures xml documents document type definition dtd associated collection xml documents 
dtd includes declarations elements attributes notations entities 
importantly element declarations dtd specify names xml elements content aka content model 
dtd consists element rules element extended context free grammar description elements occur cardinality 
xml document said valid conforms dtd 
shows example xml document linear form ordered node labeled tree 
shows dtd document conforms 
dtd element beneficiary subelements name address 
element subelement element referred root element 
noted dtds just schema formalism xml documents popular widely practice 
schema formalisms xml schema proposed studied literature reached level usage dtds see comparison schema proposals 
providing formal description valid xml documents dtd serves schema querying xml documents 
past years xml query languages proposed including xquery xml ql quilt xql see overview 
languages differ terms expressiveness underlying formalism data model important feature common languages path queries 
primary purpose path query address subtree structures xml document regular expressions xml element names 
path expressions build foundation xpath turn forms basis widely xsl transformation 
focusing specific xml query language base xml document authentication framework path queries client issues document maintained publisher 
framework sufficiently general tailor specific types applications 
principal name pete princ name principal preparer name name preparer witness name bob witness name witness witness name barb witness name witness filing town davis town county county state ca state filing item earth item beneficiary name meek name address main street ca address beneficiary principal preparer witness witness filing name name name town county state item name beneficiary address xml document linear tree form 
text values omitted 
element principal preparer witness filing element principal name element preparer name element witness name element filing town county state element item beneficiary element town pcdata element item pcdata element county pcdata element state pcdata element address pcdata element beneficiary name address element pcdata element name pcdata element address pcdata dtd associated xml document definition path query set element names 
path queries regular expressions 
general syntax regular expression 
ranges expressions empty expression 
expressions stand concatenation alternative expressions respectively 
kleene star stands repeats stands repeat denotes zero occurrence wildcard stands element 
explicitly consider expressions type expressed 
assume wildcard combination kleene star equivalent meaning number elements 
noted concatenation kleene star correspond widely operators respectively xpath 
intuitively document path query determines possibly empty set subtree structures label path root node subtree matches expression example xml document shown path query witness 
name selects subtree structures root subtree label name reached root node document label path matches expression witness 
document subtree structures may contain text values shown immediately evident path query construct equivalent finite state machine known path automaton known transformation regular expressions finite automata 
example path query beneficiary name represented finite automaton shown 
formally define path automaton pa tuple qp fp set element names qp set states fp qp set accepting states transition function qp qp 
consider dtd shown 
see element name occurs different contexts principal preparer witness beneficiary 
dtd evident answer query shown subtree occurs beneficiary name path automaton path query beneficiary name element name reached root labeled nodes labeled beneficiary order 
hand consider path query witness name 
witness tags path query potentially retrieve list subtrees 
examples illustrate central fact path query document conforms dtd dtd constrain priori part document tree answers path query arise 
goal efficiently retrieve authenticate answers path queries 
construct special data structure called xtrie information dtd manner helps process path queries discussed detail section 
path queries specify document structures label paths 
specify conditions string values associated text nodes 
example subtree structures document may match path query application interested structures satisfy certain conditions values text nodes 
aspects resemble functionality projection selection provided relational algebra 
order provide expressive types queries documents xml data authentication framework introduce concept selection queries naturally extend path queries 
obviously selection applied document leaf nodes elem selection query document composed parts path query determines subtrees selection part specifies condition leaf nodes selected subtrees 
definition selection query path queries comparison string constant 
selection query denoted select returns subtree structures 
tn document ti 
ti correct answer path query 
exists leaf node reached path starting root ti text value leaf satisfies comparison predicate note require text node satisfies predicate path selected answer subtrees 
assume typed schema underlying xml documents xml schema values associated leaf nodes assumed strings 
consider example selection query select witness name text barb witness xml document shown 
subtree structures rooted node labeled witness 
selected result query leaf node text barb witness 
certified query processing certifying answers queries xml documents follows efforts aimed producing certified answers queries contexts 
efforts merkle hash tree constructions illustrated 
hash trees enable certified query processing types recursive data structures 
trusted party computes systematic hash digest data structure progressively leaves root secure hash function 
trusted party securely distributes root hash clients 
response query client untrusted party traverse data structure provide answer 
certificate accompanying answer consist part tree traversed search hash values root hash value recomputed checked client 
hl hl hr hr merkle hash tree associates hash values nodes tree case binary tree 
leafs sorted values binary tree 
leaves get hash values interior node gets hash values children combined suitable way 
root digest authenticated trusted party certify answers queries hash values provide evidence correctly conducted search merkle trees way proving presence absence certificates revocation lists :10.1.1.109.5235
example suppose root hash value obtained client 
untrusted party show value occurs leaf tree providing values value hl 
values client recompute root hash sure subject security hash function value occur tree 
likewise pair consecutive values necessary intervening hash values compute root hash establish consecutive values value occur tree 
range queries ask values range handled 
extended line introduced notion authentic publication forms querying relational databases 
idea skip lists related settings 
hierarchical divide conquer type search data structures approach provides answer certificates size order log size answer size data set constructing search data structure 
general result showing data structures admitting efficient search procedures usually adapted authenticated versions similar overheads :10.1.1.109.5235
answer selection queries xml context details section sort leaf values build index data structure values 
index structure gets merkle hashed 
client secure way obtaining root hash structure possible untrusted publishers provide credible evidence complete answers selection queries 
techniques useful context xml documents particularly doing selections divide conquer index structures 
xml data structured requires additional machinery certify answers queries 
sense viewed building index answer path queries certifying index 
hashing signing xml documents described earlier xml documents simple data model trees 
dom standard interface api defines xml documents accessed programs 
dom naturally tree representation admits hashing procedure similar merkle hashing procedure describe illustrated 
way hash functions security 
procedure basically hashes leaves document recursively proceeds document tree hashing element types elements document 
full details available 
purposes note important properties process 
root hash entire document known party possible provide evidence subtree document occurs revealing note subtree get root hash 
just hash values siblings siblings parents recompute root hash hash function assumed way reasonably sure hash values forged really occur process prove subtree occurred subtree document hash values path revealing subtrees hash root value 
xml digital signature recommendation essentially computes signature procedure 
proposal allows great deal flexibility signature process terms algorithms transformations applied parts selected central limitation fixed parts document signed 
possible certify answers selection path queries single signature entire document 
xml signature approach allows single signature entire document authenticate part document certify answer path query complete really entire set traffic violations drivers social security number 
goal eliminate limitation introduce auxiliary structure xtrie dtd enables publisher certify completeness answer query 
purposes assume xml document digital signature 
certifying answers central goal allow certification answers wide range queries xml documents requiring trusted party sign answer query 
certify xml document shot digital signature literally lock secret key drawer 
want certify answers wide range queries document need additional digital signatures 
unfortunately priori limits size variety xml documents conform dtd 
done 
exploit vital property non recursive dtds documents conform dtds infinitely varied arbitrarily long finite number semantically different path queries apply documents 
describe approach steps pure path queries 
argue finitely different path queries document conforming non recursive dtd 
second show naive approach uses property sign document signature certify answers possible different queries document 
show naive approach secure subject cryptographic assumptions 
third describe improvement naive approach structure dtd build optimized data structure xtrie store different possible answers path queries 
illustrate improvements provided data structure empirical data 
describing handling pure path queries describe xtrie conjunction auxiliary data structures perform selection queries 
steps dependent dtd carried dtd results reused document conforming dtd 
mainly focus non recursive dtds 
survey different publicly available dtds www org identified non recursive dtds 
approach easily extends recursive dtds show section 
case simply existing xml documents enumerate paths occur documents enumerating possible paths dtd 
path queries context non recursive dtds non recursive dtd finitely different meanings infinitely syntactically different path queries 
analogy consider projections relational databases schema fixed finitely different projections 
likewise dtd finitely different ways carve path queries 
definition path queries semantically distinct respect dtd exists document conforms dtd give different answers 
lemma non recursive dtd finite number semantically distinct path queries 
proof sketch loss generality consider arbitrary xml document conformant non recursive dtd dtd 
clearly maximum depth bounded 
node number different elements occur children node bounded 
certainly node may number children corresponding element content model includes kleene star 
number different elements occur node bounded finite number different elements appear corresponding element content model 
depth bounded fan different type node bounded finite number different label paths occur documents conforming dtd 
call number 
arbitrary path query select finite number subsets finite number paths 
maximum number semantically distinct path queries documents conforming non recursive dtd 
possible path queries fall finite number groups equivalence classes 
number quite large non trivial dtds 
seen table thousands different paths documents conforming practical dtds 
considering table order entries representing equivalence class quickly see feasible store answers equivalence class table simply retrieve 
better approach subsection improve 
naive approach flexible certification consider naive approach storing potential answers path queries table called path table certifying table 
show approach secure operative way hash function secure 
algorithms constitute approach signs data second processes queries builds establish answers correct third algorithm checks answer certifier ensure answer correct 
certifier cryptographic object uses digital signatures hash computations second algorithm executed untrusted adversary 
details algorithms shown 
algorithms rely facts finite number distinct paths non recursive dtd second xml document subtrees thereof securely hashed hard forge third groups hashes securely verifiably linked single digital signature merkle hash trees 
central security result theorem client reject incorrect answer certifier accept correct ones adversarial party built certifier managed find collision way hash function 
algorithm executed owner 
dtd document conforming dtd table finite number empty entries possible path dtd processes document associating subtree label path subtree root 
builds associating secure hash value subtree 
associates subtree hash thereof entry path table label path 
subtrees associated entry path table 
digested merkle hash tree give digest table entry 
set table entries digested merkle hash tree 
final digest specially computed digest sd mentioned section 
note merkle hash construction allows show entry occurred path table subtree occurred path table entry 
algorithm data certification inputs non recursive dtd table paths associated dtd xml document signing key note table produced independently party dtd 

process document associating root node subtree element name 
give subtree number ordered dfs traversal guarantees earlier parts document get lower number 

build document 

subtree document find associated entry path table enter subtree identifier subtree 
entries order occurrence document 

entries table entry digested merkle hash tree root hash tree associated table entry 

entries table digested merkle hash tree 

root hash tree signed signing key producing root signature sd 
owner produced digest specified correctly transmitted clients untrusted server process path queries clients algorithm 
path query matched entry path table slow improve 
matching entries paths match path query contain subtrees reached paths 
server return just subtrees path table entries 
client compute subtree recompute digests path table entries 
hash paths required verify digests really belong merkle hash tree leading document digest computed algorithm client trust returned values 
algorithm answer certification inputs table entries produced algorithm path query client 

match entry 

matches entry retrieve label path hash path entry table digest subtrees associated table entry 
build certifier matching entry 

return list triples containing answer query certifier client 
algorithm simply verifies certificate list triples produced recomputing document digest 
algorithm answer verification inputs list certifier triples empty document independent table query 
match entry 

matching entry corresponding certifier triple 
corresponding certifier triple reject 

triple returned subtree build merkle tree compute root hash subtrees triple hash path provided entry digest computed step root table digest check root digest matches 
reject 
accept 
theorem assume dtd conforming xml document algorithm executed correctly data signer sd received intact client 
assume query client set returned certifier triples claimed constructed possibly untrusted party described algorithm 
client received sd runs algorithm reject incorrect answer accept correct party running algorithm succeeded engineering collision hash function algorithm 
proof sketch assume client uses dtd compute precise set table entries match query expects publisher set subtrees table entries 
argument client accept correct answer straightforward fact simply repeats computation done algorithms comes root signature sd 
argue client reject incorrect answers 
sufficient establish client accept wrong set subtrees publisher table entry 
adversarial publisher returns incorrect subtree corresponding different process computing digest table entry 
adversary second pre image hashes value step process computing digest entry alternately adversary hash collision step process computing digest entire table 
case publisher engineer collisions hash functions produce specific output 
note contains entries possible paths dtd 
specific document conforming dtd may fewer paths occur construct path table specialized need securely transmit list paths clients document note approach works recursive dtds base table construction document dtd 
efficient path storage xtrie dtd usually find different element tags occur single element 
example beneficiary running example name address 
leads shared prefixes paths elements occur shared path prefix 
naive path table stores paths wastes space addition matching path query entry table wastes repeated effort matching identical repeated prefixes 
compact efficient data structure xtrie storing set possible paths dtd 
constructing xtrie algorithm builds xtrie dtd 
show correctly captures paths arise non recursive dtd provide empirical evidence compactness 
show extend recursive dtds xtrie node element dtd edge element subelements occur 
edge labeled name subelement 
running example node corresponding witness element edge labeled name node corresponding name element 
different occurrences element represented different nodes 
algorithm begins root element occur elements dtd systematically explores element rules finding possible paths exist 
intuitively grows tree representation different paths producing branch tree time path prefix shared different paths 
dtds allow element occur different elements may different labeled paths reach element 
handled array counters ci element track number times element encountered distinct occurrence bumps counter creates new copy element xtrie 
algorithm xtrie corresponding dtd directed tree node edge labels constructed follows initialize 
set element names occur dtd 
initialize table counters ce 

document root element label dtd add node labeled 
add extra top level node labeled element document root element add edge node 
edge labeled added 
initialize agenda list containing 
iterate nodes remain remove node currently agenda list 
element rule associated element named dtd rule mentions element add new node labeled ct add new node agenda processed iteration add edge ct labeled name increment ct ct 
terminate empty terminate 
initialization steps initialize set counters add node element dtd xtrie extra top level node 
top level node edge labeled root element name root element node 
counters associated element get initialized point agenda initialized root element node 
point maximum path length encountered 
construction algorithm doing breadth search possible label paths resulting dtd 
step ensuing iteration xtrie represents paths length 
top level node nodes iteration step looks nodes agenda grows paths adds nodes newly reached node set xtrie adds appropriately labeled edges 
easy see algorithm terminates non recursive dtds finite number nodes element names added agenda 
elements element name count pairs added agenda occur element 
element occur finite number times different elements dtd 
finite number copies finite number elements added agenda time agenda remove element eventually empty 
sample xtrie shown 
note redundancy avoided storing paths common prefix filing 
note element name occur principal principal preparer witness preparer witness name name name filing town county filing state item item name name name town county state name name xtrie constructed dtd shown beneficiary beneficiary address address different places witness preparer copies name reachable different possible parent elements described resemble ways schema graphs dataguides semi structured databases primarily type computations certified query processing 
return central property xtrie captures exactly possible paths specified dtd 
definition sequence labels 
sk edges leading node sk ck top level node called reaching path node sk ck xtrie 
state main completeness correctness property xtrie lemma corresponding reaching path node xtrie construct xml document conforming corresponding dtd contains path 
addition set reaching paths nodes xtrie corresponds possible paths occur document conformant dtd 
proof show induction length reaching path 
initialization step explores paths length inserts xtrie point agenda contains labels associated elements reachable paths length 
induction step assume agenda contains labels elements reachable paths length xtrie includes reaching paths 
label iteration step explores paths length inserts xtrie adds newly encountered elements agenda 
reaching paths length 
algorithm eventually terminates additional path lengthening possible 
xtrie dtd construct xtrie 
node xtrie corresponds possible reaching path xml document conforming dtd 
document conforming note element occur times element dtd xtrie show single node labeled node dtd find subtrees associated xtrie rest process proceeds manner analogous section 
securely digest xtrie 
algorithm special case algorithm described generalized search dags :10.1.1.109.5235
node xtrie associated set pairs document subtree identifiers reached path subtree leaf values subtree leaf section consider path selection queries describe speed selection index values just raw set values digests xtrie nodes node 
order occur document 
values hashed give digest associated xtrie node 
note document may matching subtrees path turn means matching subtrees children xtrie node 
case associate special null value xtrie node 
section see easy construct pruned version xtrie optimizes query processing specific documents contain certain paths 
algorithms section match query possible paths 
construct path automaton corresponding match xtrie 
simple process describe informally 
matching process marks nodes xtrie states path automaton 
initially top level nodes xtrie marked initial states path automaton see section 
match transition labels path automaton edge labels xtrie 
labels match automaton advances node xtrie marked destination state corresponding transition 
process eventually terminates finite number ways mark xtrie nodes path automaton labels 
point process guarantees path automaton state label node path automaton state processing path reaching node 
termination xtrie accepting labels nodes 
nodes correspond desired reaching paths 
similar approach string matching regular expressions normal tries computational biology applications 
parties involved approach client resource limited benefit xtrie match query automata path queries 
note compute xtrie trusted party compute xtrie dtd send client integrity preserving manner 
naive approach total length possible paths states path automata matching process requires comparisons 
edges xtrie process requires comparisons 
section provide empirical data concerning relative sizes published dtds 
practice empirically analyzed published dtds determine number elements dtds total length possible paths specified dtd size xtrie representation 
naive approach require store paths explicitly table match query paths xtrie compressed representation 
goal doing analysis determine degree compression achieved practical standards dtds 
collected separate dtds oasis repository www org 
recursive 
enumerated paths counted total length thereof implemented approach measured total size case 
results shown 
produce smaller representation 
leads proportionate reduction effort required evaluate queries fewer string comparisons required 
addition reasonable expect documents large compared dtds proxy 
done client algorithm quite bit done owner query processor 
log plot showing relative sizes naive approach table paths versus xtrie approach 
xtrie approach significantly lower storage requirements average factor proportionately reduces query processing effort particularly larger complex dtds note dtds elements 
graph includes data points 
outlier possible paths compression factor omitted 
recursive large dtds dtd recursive bound xtrie size 
document conforming dtd xtrie representing paths document finite size typically smaller document 
non recursive dtds document conforming dtd may paths corresponding small fraction xtrie 
handle settings alternate approach publisher proves certain parts xtrie match paths document client need expand parts xtrie 
process describe viewed special case algorithm described shows query data structure viewed searching directed acyclic graph dag digest data structure verify answers queries :10.1.1.109.5235
note xtrie node actual paths set matching subtrees associated node described prior section empty 
verification process assume client knows dtd root digest xtrie path query answered 
client start building xtrie algorithm 
step produce children root xtrie 
client provided digest values associated child nodes hash verify match root digest value 
child node digest value null special value matching subtrees client knows paths xtrie need expand 
example sample xtrie preparer node preparer null digest value proved client avoid expanding children preparer 
child node non null digest client expands node dtd 
client provided digest value nodes town county state children filing sample xtrie 
client hash parent subtree digest verify matches digest value parent 
method readily instantiate generalized proof show client accepts answer correct xtrie associated digest values provided publisher collision hash function :10.1.1.109.5235
expansion continues hit leaves xtrie unexpanded node shown null value 
client xtrie representing paths occur lets client continue prior section match relevant xtrie nodes path query path automaton verify actual subtrees returned publisher hash digest values selected nodes 
note reduction size xtrie expanded achieved having client path automaton prune xtrie xtrie nodes part path matching current query expanded 
example path query applied xtrie client determine child match query needs expanded 
considered approaches compute full xtrie dtd compute xtrie stopping null nodes compute part xtrie matches path query combined stopping null nodes specific 
approaches best depending dtd document path query number queries done specific document dtd 
note parts authenticating answer correctness answer really contained original document completeness answer include part document satisfying query 
noted earlier enables correctness verification 
introduce xtrie completeness verification 
describe ways extending handle recursive dtds optimizations dealing large documents documents don contain subtrees paths allowed dtd 
certifying answers selection queries consider selection queries definition 
recapitulate document query select comparison predicate seek return set subtrees 
tn 
ti correct answer path query 
exists leaf node reached label path starting root ti string value leaf node value satisfies predicate seek provide certified answer query 
queries useful documents contain repeated elements say xml document collection traffic violation reports element records may millions traffic violations violation appear driver license subtree containing social security number leaf element 
clearly employer considering applicant complete list violations candidate involved desire certified complete answer query select records ssn text answer query need locate collection leaf nodes corresponding path records 
ssn located collection leaf nodes need search list find leaves string value identical 
efficient index leaves binary tree search list quickly 
leaves need find subtrees leaves reached path records root element 
answer queries quickly provide compact need slightly modify algorithms shown section 
note efficient index structure leaves support efficient searching 
addition index structure binary tree shown provide compact correct search procedures 
modify procedure section 
document subject selection queries leaf nodes corresponding xtrie node build search tree see set leaves lexicographically ordered merkle hash resulting search tree give root hash 
root hash gets associated xtrie node just set raw leaf values see second paragraph section 
second evaluating query select compute xtrie nodes xs path query element xs search index tree leaves retrieve set leaf values satisfying build certifier search procedure 
part process uses known methods answer certification existing literature described section 
search answer leaves document tree find subtrees reached path query values certify leaf value occurs element purpose reviewed section 
verification procedure modified slightly check described 
selection process merkle hashed search tree leaves reached paths satisfying guarantees retrieved leaves satisfy answer 
hash values individual leaf structures guarantees leaves occur sub trees rooted paths match factors contribute size certifier 
number subtrees satisfying query 
second number entries xtrie matching call ts 
third total number leaves satisfying selection criterion call 
entry ts merkle hashed index tree leaves searched 
induces certifier size mi hx log mi number leaves matching selection particular entry hx height xtrie number leaves indexed tree entry 
clearly bounded size document 
addition leaf carries chain height hd certifying leaf occurs desired subtree hd total height document tree 
get certifier size hd hx log 
note entire document list traffic violations large relative size answer height hd level nesting document 
xml rapidly gaining strength data model choice exchanging information internet 
certifying correctness xml documents clearly important problem 
current xml signature allows certification pre determined pieces xml documents 
certify parts xml documents selected content necessary line signing key 
far way digital signature xml document certify answers arbitrary selection queries documents 
support just functionality 
approach works best non recursive dtds 
empirical analysis indicates majority published dtds non recursive believe approach quite useful variety contexts 
similar approach authenticated publication xml data dtds 
abiteboul buneman suciu data web relations semistructured data xml 
morgan kaufman 
ceri comparative analysis xml query languages 
sigmod record 
laud lipmaa accountable certificate management undeniable attestations 
proc 
th acm conference computer communications security acm 
bray paoli sperberg mcqueen extensible markup language xml 
recommendation february 
chamberlin clark florescu robie simeon stefanescu xquery xml query language 
working draft 
clark xsl transformation xslt version 
recommendation nov 
cowan xml information set 
recommendation october 
clark derose xml path language xpath 
recommendation nov 
damiani de di vimercati paraboschi samarati xml access control systems component approach th ifip working conference database security data applications security kluwer academic publishers 
damiani de di vimercati paraboschi samarati securing xml 
th international conference extending database technology edbt lncs springer 
devanbu gertz martel stubblebine authentic third party data publication 
th ifip working conference database security data applications security kluwer academic publishers 
digest values dom 
rfc www com rfcs rfc html april 
chu comparative analysis xml schema languages sigmod record september solo xml signature syntax processing recommendation february 
fallside xml schema part primer 
recommendation may 
goodrich tamassia implementation authenticated dictionary skip lists commutative hashing discex ii patent filing 
gusfield algorithms strings trees sequences computer science computational biology cambridge university press 
kwong gertz authentic publication xml document data 
nd international conference web information systems engineering wise ieee computer society 
martel devanbu gertz kwong stubblebine general model authentic data publication www cs ucdavis edu devanbu files model pdf merkle certified digital signature :10.1.1.109.5235
advances cryptology crypto 
naor nissim certificate revocation certificate update :10.1.1.109.5235
proceedings th usenix security symposium 

