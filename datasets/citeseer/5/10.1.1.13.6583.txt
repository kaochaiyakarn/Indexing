mathematical framework study coevolution anthony demo lab computer science department ms brandeis university waltham ma cs brandeis edu jordan pollack demo lab computer science department ms brandeis university waltham ma pollack cs brandeis edu despite achieving compelling results engineering optimization problems coevolutionary algorithms remain difficult understand knowledge date coming practical successes failures theoretical understanding 
explaining coevolution succeeds art science 
theoretical framework studying coevolution mathematics ordered sets 
framework describe solutions coevolutionary optimization problems generalizing notion pareto non dominated front field multi objective optimization 
framework focuses attention order structure solution test sets argue key source difficulty coevolutionary optimization problems 
application framework show special case player games pareto dominance closely related intransitivities game 
coevolutionary algorithms progress simple intuition evolve fitness function evolving individuals 
adjusting challenge put evolving individuals hope algorithms tune fitness function push individuals continually increasing capabilities 
number compelling successes field past decade domains cellular automata game playing sorting networks robotics suggesting coevolution holds great potential produce useful interesting results 
karl sims particular offers hope successful engineering problems coevolution support open ended dynamics evolving entities increase capability complexity indefinitely species nature evidently 
unfortunately price paid varying fitness function search coevolutionary dynamics complex difficult understand 
known issues threaten application coevolutionary algorithm 
red queen effect obscure progress coevolving systems rendering difficult impossible tell algorithm accomplished useful 
mediocre stable states arise collusion permits suboptimal individuals appear better 
intransitive superiority cycles related problem cause coevolutionary dynamics cycle set suboptimal individuals making progress :10.1.1.35.88
issues apparently related 
unclear reasonably discuss notions goodness progress coevolutionary setting 
understanding issues common framework motivation 
see particularly section intransitivities closely related underlying payoff structure problem 
statement intuitively clear framework intuition precise exposing methods approaching issue intransitivity systematically 
noteworthy theoretical approach strides direction ficici simple coevolutionary algorithm 
simple coevolutionary algorithm extension vose simple genetic algorithm model dynamics coevolution advance latent articulated pareto coevolution 
borrowing ideas multi objective optimization pareto coevolution treats possible individual objective evolving individuals optimizing 
relevant measure individuals case pareto dominance individual dominated individual better 
pareto dominance offers notion goodness progress coevolutionary domain 
formalize ideas pareto coevolution building mathematical framework study coevolution optimization procedure 
consider class coevolutionary optimization problems represented function form preordered set 
mnemonic device think function payoff set candidate solutions tests results outcomes 
encoding possible interactions candidate solutions tests 
results preorder encoding outcomes better 
function resembles payoff matrices game theory 
contrast payoff matrices function indexes values distinct infinite sets furthermore entries matrix come arbitrary ordered set particular call problems coevolutionary optimization problems 
part aim explore optimized problems 
section define notion solution coevolutionary optimization problems form generalizing common solution concepts genetic algorithm function optimization ga multi objective optimization moo 
introduce dual notion set maximally informative tests tells structure difficulty problem 
application framework section consider special case outcome games showing pareto dominance relation offers new information exactly game theoretic payoff matrices provide ready examples functions 
game intransitive 
section return issues coevolutionary dynamics discussing understood terms framework 
assume reader familiar discrete mathematics 
give relevant background material establish notational conventions appendix freely notions pullback order definition currying function definition 
framework section develop theoretical ordering individuals coevolutionary optimization problem 
order allows rank individuals way express solution set maximal candidates 
applied special case function optimization set maximal candidates set maxima objective function 
applied multi objective optimization set maximal candidates exactly pareto front 
dually order tests informativeness define set maximally informative tests 
key result expressed theorem maximally informative tests induce set maximal candidates full set tests 
see information ranking candidate solutions just maximally informative tests set smaller full set reducing number tests required solve problem impact efficiency practical algorithms 
conclude section arguing difficulty coevolutionary problem relates directly order structure set maximal candidates set maximally informative tests 
section consider coevolutionary optimization problems expressed function constraints place preordered set 
write order solution set maximal candidates common class problems attacked gas start function task finding elements maximize similarly common class moo problems starts set functions task find pareto front fact pareto front type maximum proposition moo maximization pareto front set objectives set maximal elements preorder induced function partial order proof pareto front consists dominated define preorder follows expresses dominates equal observe see definition 
nondominated front fb sg 
condition logically equivalent condition consequently fb sg fb sg set shown result proposition view moo form maximization 
likewise view coevolutionary optimization problems maximization problems 
critical step curry function produce function lt 
function precisely expresses association candidate element vector objective values lt element 
order range pointwise order pw furthermore pull order back curried function lt produce order pulled back order expresses practice multi objective optimization ordering individuals comparing vectors objective valued 
exactly lt pw lt 
preorder propose set maximal elements solution problem formally definition maximal candidates set maximal candidates coevolutionary optimization problem lt explicitly call solution set problem examples illustrating definition example rock scissors simple game 
rules game result comparing rock scissors example rock wins 
give matrix rock scissors rock scissors functions lt rows matrix 
comparing rows pointwise see incomparable 
consequently rock scissors example ga optimization moo consider optimization problems objectives objectives define payoff function adding sides inequality 
follows maximal element respect lt maximal element function result solution set exactly pareto front see proposition 
light observation definition generalizes common solution concepts moo ga optimization natural notion solution coevolution 
particular solution concept independent algorithm choices way problem statement find maxima function independent flavor genetic algorithm uses solve 
respect notion solution lies level solution concepts common maximize average fitness population 
proposition suggests pw really appropriate order 
maximally informative test set define informativeness order tests 
impact definition expressed theorem show maxima informativeness relation sufficient inducing solution set 
discuss structure maximally informative test set measure categorizing coevolutionary optimization problems 
order set recall similarity relation defined tells elements look equal 
define relation possible orders definition informativeness orders corresponding similarity relations 
say informative written write condition roughly speaking informative order incomparable elements equal elements 
idea definition test shows candidates incomparable shows equal give information relate 
relation tells order fewer incomparable elements relation tells order fewer equal elements 
intersection tells equality 
order 
write position describe maximally informative test set 
words set maximal elements respect pullback informativeness order 
formally definition maximally informative test set represent coevolutionary optimization problem ls curried form informativeness order 
pull order back ls write resulting ordered set maximally informative test set problem definition useful borne theorem theorem coevolutionary optimization problem consider restriction maximally informative tests 
brevity write lt lt words maximally informative set tests induces order full set tests consequently induces set maximal candidates 
proof show lt lt explicitly isomorphism equivalent lt pw lt lt pw lt 
unrolling equivalence translates 
forward implication holds trivially consequently focus attention showing show implication result 
definition assume follows informative consequently imply 
holds result 
theorem shows need full set tests order distinguish individuals fact maximally informative test set induce order maximal candidates 
strict subset theory solve problem fewer tests 
illustrative examples example rock scissors revisited rock scissors incidence matrix see example columns ls 
reading left right induced orders rock rock 
orders 
follows example consider formal game fa cg xg outcome incomparable 
matrix orders induced left right fa cg fb cg fa cg 
observe fa bg notice fcg example shows distinct 
solutions need tests 
categorizing problems tests big 
tests respect informativeness order 
case really need representative equivalence class 
observation leads definition value jt test dimension problem theorem function optimization problem 
define test dimension 
proof observation example leads result tests equivalent 
moo problem objectives looks test dimension theorem objectives compare pairs individuals 
individuals tests objectives 
case single individual test 
treat objectives tests moo problem objectives test dimension interpret theorem saying difficult coevolutionary optimization problems 
rock scissors test dimension example 
categorize problems basis test set structure independently search algorithms employ 
furthermore problems simple test set structure simpler solve practice 
instance rock scissors intransitive cycle reflected test set structure 
saw multi objective optimization problems contrast particularly simple test set structure 
structure spelled explicitly definition problem typical coevolution application test set structure known advance implicit function see juill discussion cellular automaton majority function problem 
test dimension simple numerical measure test set structure gives information difficulty problem 
pareto dominance intransitivity application concepts section consider special class problems represented functions 
functions form arise problem learning deterministic game playing strategies self play perfect information zero sum games encountered game theory 
setting view representing relation specific relation subset words relates exactly 
write relation ar intuitively interpret ar loses draws 
represents game usual notion transitivity game equivalent transitivity relation critical problem arises dynamics coevolutionary algorithms stems intransitive superiority cycles 
cycle occurs transitive case finite set players 
transitivity dictate 
coevolutionary dynamics operating game stuck cycling making real progress 
see discussion issue :10.1.1.35.88
promises pareto coevolution help intransitive cycles revealing true relationship individuals cycle 
show close relationship transitivity pareto dominance relation 
particular show theorem preorder pareto dominance equal 
words pareto dominance gives different information payoff function exactly intransitive 
draw fact pareto coevolution detect intransitive cycles 
corollary potentially useful negative result 
glance think multiple iterations pareto relation construction definition provide information problem 
corollary shows case 
applying pareto dominance relation produces new relation applying construction twice equivalent applying 
prove results respect relation set special case 
constructing new relation captures pareto dominance relation definition pareto relation pareto relation written defined follows 
xra pareto dominance reveal incomparable 
worth emphasizing results apply specific context general 
critical symmetry roles candidates tests fact contains comparable outcomes 
pareto relation corresponds usual notion pareto dominance 
intuitively definition says dominates equal draws loses draws loses 
proposition useful proposition preorder 
proof clearly xra xra making reflexive 
want show follows transitivity means xra means xra follows xra words transitive preorder 
theorem theorem preorder proof theorem consequence lemmas lemma reflexive proof prove forward implication assume reflexive imagine show arb 
definition means xra particular ara follows arb 
reverse implication assume preorder proposition reflexive follows 
lemma transitive proof consider forward implication 
assume transitive show arb 
transitivity know xra arb imply 
follows shown reverse implication 
assume want show transitive 
arb brc 
implies equivalently 
coupled assumption arb immediately arc words shown transitive needed 
important consequence theorem iterating pareto relation construction tops applications 
formally corollary mapping idempotent relation set proof follows directly proposition theorem 
corollary tells repeating pareto dominance construction reveal new information 
instance represents rock scissors game identity relation strategy incomparable 
discussion framework aimed understanding static features class coevolutionary optimization problems prior algorithm choices 
insights gained static analysis informs understanding coevolutionary dynamics 
separating definition coevolutionary optimization problem dynamics search algorithms gained insight issues plague coevolutionary dynamics 
particular state precise way means coevolutionary algorithm progress time algorithm individuals pareto dominate individuals time algorithm progress 
stated definition means algorithm solve coevolutionary optimization problem solved problem set maximal candidates general know certain progress solution set observing subsets real algorithm ideas offer approximations may practical situations 
worthwhile examine depth approximations meaningful 
introduced motivated observation intransitivities produce difficult issues coevolutionary algorithms 
subsequently observed section pareto dominance relation closely tied transitivity underlying payoff structure 
possible extend result wider class payoff structures 
importantly feel important information considering local views payoff function instance imagine populations time run coevolutionary algorithm 
act testing candidates tests exposes restricted view mathematically information written pj critical question arising coevolutionary optimization algorithm information pj deduce properties way leads solution set preliminary result direction show incomparable non dominated individuals pareto dominance relation lie cycle underlying game 
theorem goes part way result 
result useful algorithms possible deduce pareto non dominance respect local information pj words individuals non dominated know lie cycle cautious candidate dominating 
results section specific outcome order 
include outcomes lose theorem particular corollary 
apparently outcome order elements situation complicated 
puzzling topic current research 
formulation coevolutionary optimization problems function form excludes multi player games cooperative coevolution 
currently investigating extend framework include complicated approaches 
acknowledgments wish members demo lab help support 
particular frequent conversations ficici edwin de jong richard watson vital bringing ideas 
notation mathematical background briefly recall definitions discrete mathematics particularly theory ordered sets establishing notational conventions 
define ordered sets mathematical objects examine ways objects combine relate 
see elementary ordered sets information advanced concepts pullbacks 
ordered sets recall cartesian product sets set ordered pairs tg 
binary relation set subset binary relation say relate written qs say elements relate comparable incomparable 
binary relation set reflexive 
transitive qs qs imply qs anti symmetric qs qs imply binary relation preorder reflexive transitive 
preorder antisymmetric partial order 
pairs individuals comparable partial order total order linear order 
note analogy partial functions partial pre order need define relations pairs members total order 
call preordered set simply ordered set equipped relation pre partial total order 
write order need refer directly 
binary relation set expresses information directed graph vertices elements correspond edges graph 
think graphs terms incidence matrices 
consequently think concepts ways convenient 
ordered sets combined number ways 
purposes useful cartesian product intersection 
definition cartesian product preordered sets preordered sets 
sets interpret relation relating ordered pairs ordered pairs order kind shown example type order may change 
precise define cartesian product preordered sets 
write product simply take cartesian product preordered set write relation particular define similarly 
example set real numbers totally ordered usual order 
familiar cartesian plane 
order unrolling definition straightforward verify partial order 
total order example incomparable respect definition intersection preordered sets preordered sets 
set 
relation verified der 
consequently define intersection orders 
cartesian product write intersection total order maximum partial preorder maxima referred maximal elements 
definition maximal elements preordered sets maximal element preordered set element property write set maximal elements preordered set possible relations derived order 
definition strict relation ordered set 
define follows definition similarity relation ordered set 
define equivalence relation follows partial order similarity relation equality anti symmetry 
case preordered set lies difference concepts 
rephrase definitions familiar terms instance maximal element preorder partial order quotient respect definition quotient order ordered set 
read modulo equivalence set equivalence classes write equivalence class particular fa ag 
define order write follows 
equivalence classes proposition shows definition reasonable proposition order defined furthermore partial order 
proof show definedness suffices show similarity know chain transitivity defined relation reflexivity transitivity clear definition 
remains show relation antisymmetric 
follows immediately 
consequently imply 
partial order functions ordered sets preordered sets function 
monotone monotonic intuition definition preserves definition maximum partial preorders larger elements set 
purposes maximal elements useful 
pw distinct orders 
fa bg 
observe pw pw order put differently passage function destroy pairwise relations 
regard graphs monotone exactly graph homomorphism 
isomorphism preordered sets monotone bijection additionally monotone 
isomorphic preordered sets typify order structure possibly differing elements labeled 
write indicate isomorphic preordered sets 
isomorphic preordered sets maximal elements isomorphism preordered sets set preordered set function call function preordered set function pullback order 
precise definition pullback orders function preordered set define preorder follows write resulting preordered set refer preorder induced defined largest preorder making function monotone 
convention domain theory write set functions preordered set order ways 
consider pointwise order definition pointwise order functions lie order pointwise write pw just related 
note way state condition 
pointwise order default order 
speak ordered assume pointwise order 
second order consider definition order recall element corresponds preorder pullback order defined 
functions ask write explicitly holds 
shows pw distinct orders general 
action currying function borrowed lambda calculus 
useful occasionally symbol induced preorder words order write context clear mean abuse notation 
take note lambda application comes adjunction cartesian product functor exponential functor cartesian closed category see details 
definition currying function associated curried function 
lambda calculus heavy association write function lb call curried defined follows 
function lb maps 
la defined similarly 
samson abramsky achim jung 
domain theory 
abramsky gabbay maibaum editors handbook logic computer science volume pages 
oxford university press 
michael barr charles wells 
category theory computing science 
prentice hall international series computer science 
prentice hall new york st edition 
dave cliff geoffrey miller 
tracking red queen measurements adaptive progress evolutionary simulations 
european conference artificial life pages 
ficici pollack 
game theoretic approach simple coevolutionary algorithm 
hans paul schwefel marc schoenauer kalyanmoy deb rudolph xin yao lutton juan julian merelo editor parallel problem solving nature ppsn vi th international conference paris france 
springer verlag 
ficici jordan pollack 
challenges coevolutionary learning arms race dynamics open mediocre stable states 
christoph adami richard belew hiroaki kitano charles taylor editors artificial life vi proc 
sixth int 
conf 
artificial life pages cambridge ma 
mit press 
ficici jordan pollack 
pareto optimality coevolutionary learning 
european conference artificial life pages 
carlos fonseca peter fleming 
overview evolutionary algorithms multiobjective optimization 
evolutionary computation 
daniel hillis 
evolving parasites improve simulated evolution optimization procedure 
christopher langton charles taylor farmer steen rasmussen editors artificial life ii volume pages 
addison wesley santa fe institute new mexico usa 
hugues jordan pollack 
coevolving ideal trainer application discovery cellular automata rules 
john koza wolfgang banzhaf kumar chellapilla kalyanmoy deb marco dorigo david fogel max garzon david goldberg hitoshi iba rick riolo editors genetic programming proceedings third annual conference pages university wisconsin madison wisconsin usa 
morgan kaufmann 
christopher rosin 
coevolutionary search adversaries 
phd thesis university california san diego san diego ca 
edward 
mathematics discrete 
brooks cole pacific grove ca 
karl sims 
evolving virtual creatures 
computer graphics annual conference series 
michael vose 
simple genetic algorithm foundations theory 
mit press cambridge ma 
richard watson jordan pollack :10.1.1.35.88
coevolutionary dynamics minimal substrate 
spector goodman wu langdon 
voigt gen sen dorigo garzon burke editors proceedings genetic evolutionary computation conference gecco san francisco ca 
morgan kaufmann publishers 
