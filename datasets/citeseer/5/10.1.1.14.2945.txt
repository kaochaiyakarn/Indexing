case study class library verication java vector class hjb marieke huisman bart jacobs joachim van den berg computing science institute university nijmegen toernooiveld ed nijmegen netherlands marieke bart joachim cs kun nl reasons popularity object oriented programming possibility reuse code 
usually distribution objectoriented programming language comes collection ready classes class library 
typically classes contain general purpose code applications 
classes programmer usually wants know behave methods throw exceptions 
way study actual code time consuming requires understanding particular ins outs implementation eoecient way 
approach study documentation provided 
long documentation clear concise works forced look actual code 
alternative approach verify suitable properties standard classes add documentation 
examples properties termination conditions cases method terminate normally cases throw exception pre post condition relations class invariants 
suoeciently properties understand properties need anymore study actual code order able class safely 
full describes case study verication particular library class vector standard distribution programming language java ag gjs 
vector class basically consists array objects internally replaced array dioeerent size needs verication invariant property vector class 
property says essentially actual size vector number elements contains equal capacity 
property maintained methods vector class holds objects created constructors vector class 
choice vector class fact arbitrary serves purposes involves non trivial amount code including code surrounding classes library gives rise interesting invariant 
classes vector 
arrays java xed size vectors useful known advance storage positions needed 
investment formal verication library classes classes extremely 
result verication may detection errors improvement documentation 
particular verication bring forward errors vector 
pointed places documentation improved 
verication project tools pvs orr proof tool developed sri loop translation tool 
compiler translates java classes logical theories higher order logic pvs 
development tool part called loop project logic object oriented programming authors involved 
initially project aimed reasoning class specications see new branch project concentrated reasoning java 
loop tool translates java classes appropriate denitions language pvs computing semantical value legal java expression generates auxiliary denitions results 
particular importance invariance denitions generated class 
actual verication auxiliary results automatic rewriting 
series logical theories generated compiler applied series java classes loaded pvs 
type checking user state properties prove java classes subsequently try prove full power pvs 
underlying java semantics automatic translation called coalgebras jr rei jac 
special functions useful describing state dynamical systems 
theory coalgebras standard notions invariance bisimulation 
java classes translated coalgebras acting single global memory type consisting innite series cells storing objects 
language constructs java try catch represented pvs call semantic prelude 
standardly loaded theories translated java classes 
information underlying semantics java obtained hj 
contribution fold 
shows feasibility tool assisted verication standard library classes java 
verication results improve class documentation exact contrast informal explanations ordinary language 
secondly illustration capabilities loop translation tool 
translation cover java incorporated allows reasoning real life java programs 
rst time large verication done project 
important point worth making explicit verication programs written clean mathematically programming language actual java programs messy details 
consider challenge able handle details 
ag arnold gosling 
java programming language 
addisonwesley nd edition 
gjs gosling joy steele 
java language specication 
addison wesley 
huisman jacobs 
reasoning classes object oriented languages logical models tools 
proceedings european symposium programming esop volume lncs pages 
springer verlag march 
hj huisman jacobs 
java program verication hoare logic abrupt termination 
manuscript 
hjb huisman jacobs van den berg 
case study class library verication java vector class 
jacobs leavens ller poetzsch editors formal techniques java programs volume informatik berichte hagen 
jac jacobs 
objects classes algebraically 
freitag jones lengauer 
schek editors object orientation parallelism persistence pages 
kluwer acad 
publ 
jr jacobs rutten 
tutorial algebras induction 
eatcs bulletin 
jacobs van den berg huisman van 
reasoning classes java preliminary report 
objectoriented programming systems languages applications oopsla pages 
acm press 
orr owre rajan rushby shankar srivas 
pvs combining specication proof checking model checking 
alur henzinger editors computer aided verication cav volume lncs pages new brunswick nj july august 
springer verlag 
owre rushby shankar von henke 
formal verication fault tolerant architectures prolegomena design pvs 
ieee transactions software engineering february 
rei reichel 
approach object semantics terminal coalgebras 
math 
struct 
comp 
sci 
