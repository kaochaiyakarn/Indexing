tandler architecture beach software infrastructure roomware environments 
cscw workshop shared environments support face face collaboration philadelphia pennsylvania usa december 
architecture beach software infrastructure roomware environments peter tandler gmd german national research center information technology ipsi integrated publication information systems institute ambiente workspaces 
darmstadt germany www darmstadt gmd de ambiente peter tandler darmstadt gmd de shared environments desktop supporting face face collaboration put new requirements software users interact multiple devices collaborate different kinds devices 
configuration devices changing frequently due demands new practices organizations characterized high degree dynamics flexibility mobility 
examples requirements impact architecture software infrastructure environments 
beach software part land ubiquitous computing environment gmd ipsi uses architecture designed meet requirements 
provides functionality synchronous cooperation interaction roomware components room elements integrated information technology 
discusses software requirements roomware environment presents architecture beach 
closes overview current implementation 
keywords roomware synchronous groupware team computer interaction multiple user interaction devices interaction integrated collaboration environment land coast beach support face face team situations access digital information integrated working environment 
land interactive landscape creativity innovation supports team providing collaboration environment combines interaction digital information physical architectural part environment 
called roomware components room elements integrated information technology offer teams appropriate possibilities interaction digital formation meeting collaboration situations 
gives overview roomware hardware infrastructure land 
beach basic environment active collaboration hypermedia provides software infrastructure land 
offers user interface adapted needs roomware components require new forms human computer team computer interaction 
roomware components connected allow synchronous collaboration shared documents distributed multiple roomware components 
beach client beach client dynawall beach cooperation support beach client beach client wireless lan switch hub beach client tcp ip beach client coast mediator persistent store 
roomware component setting land requirements software infrastructure roomware environment discussed 
requirements architecture beach designed 
closes overview current implementation requirements software infrastructure software infrastructure roomware environment requirements compared software running distributed standard pcs 
section explain requirements related collaboration roomware components 
roomware environment offers variety possible settings 
subgroup sitting see fig 
common workspace users dynawall documents independently 
general ability shared documents software cope additional aspects 
user working multiple devices 
roomware components consisting multiple embedded computers 
dynamic reconfiguration roomware components 
integration physical environment 
collaboration different kinds roomware components 
roomware components multiple users time 
different orientation shape displays 
support common tasks requirement multiple device interaction environment land ideas ubiquitous computing iroom user usually access computer :10.1.1.20.7207
meeting user leave walk dynawall give presentation 
software able detect quickly change assignment current user roomware components give user access private information instance prepared material presentation 
continuation previous scenario brings different case multiple device interaction user giving presentation access roomware component parallel dynawall 
view private annotations addition slides uses electronic 
uses devices simultaneously information displayed devices different context influences resulting view different size different level details private annotations 
examples pda device concurrently digital whiteboard table pc literature 
pda access additional information functionality wasting space display 
cases devices show different information offer different functionality 
requirement composite roomware components roomware components currently dynawall see fig 
consist segments separate machine 
due limitations available hardware smart board recognize single pen position time setting allows segment receive pen input simultaneously 
give user impression homogeneous interaction area segments coupled software 
dynawall segments coupled software requirement dynamic configuration meeting happens independent problems identified solved 
situations team usually splits set subgroups trying solve problem 
defined amount time team forms solutions 
scenario shows different kinds collaboration modes supported land 
dynamics meeting reflected design software flexible give team necessary freedom efficiently 
requirement integration environment important aspect arises integration environment 
physical configuration meeting room strongly depends current mode team changes real objects trigger actions software 
cases state change software essential maintain consistency real virtual part world small interactive table assembled quickly independent segments yield larger homogeneous interactive area desired fig 

useful support flexible splitting re joining subgroups 
software capable dynamic changes size format currently available interaction area necessary reflect possibilities conceptual design user interface 
connected requirement collaboration different devices different roomware components equipped broad range displays different sizes different orientations 
differently sized devices different scaling factors account user needs overview document just part document edited 
complicated case multiple users working 
situation standard methods shared editing require collaborating users coupled workspaces exactly size 
software allow tightly coupled components different view properties ensure users get representation fits current working mode 
user working shared workspace user dynawall fig 
need overview representation workspace content second zoomed view 
case located directly front dynawall user see overview overview representation displayed needed navigation 
remote annotating documents dynawall sitting requirement multiple user devices roomware components dynawall offer challenge software persons roomware component interact simultaneously single device 
called single display groupware 
software running device able receive events input streams recognize input different users track concurrent event sequences drawing stroke 
requirement adapted visualization problem arises orientation output necessarily common top bottom left right users working different users look surface different positions 
traditional table users simply rotate page show 
possible 
addition user able keep view object oriented look object preferred orientation 
requirement special support common tasks interview study carried states creative teams recurring tasks 
consequence software offer dedicated help selected set tasks extensible meet needs 
important examples creative sessions presentations meeting moderation project task management 
architecture beach respect requirements described previous section beach layered architecture built top core model coast fig 

layer common models defines basic interfaces documents user interface tools interaction styles 
top models set generic components defined provides basic functionality necessary teamwork meeting situations 
includes example standard data types text graphics informal handwritten input private public workspaces generic collaboration support 
models generic components modules specific support added define tailored functionality distinct tasks 
sections explain layers 
beach modules beach generic beach models beach core coast presentation support table list links refs toolbars room document interaction elements browsers stations gestures prototypes transaction management services config persistency clustering meeting support sensor management replication management physical event handling application model creativity support building interaction display context display management 
layers architecture beach passage replication synchronization order provide computer support synchronous collaboration platform distribution objects needed requirements 
underlying technology beach coast framework chosen developed gmd ipsi 
version framework dolphin system 
addition local object space containing objects coast defines shared object space objects accessed multiple coast available open source www org 
computers 
objects persistent stored coast server 
specialized infrastructure aim core layer beach provide functionality development higher levels easier 
focus multiuser event handling view transformations 
multi user event handling multiple user devices req 
necessary provide interface hardware capable handling multiple users time 
multiple device drivers send events tagged identification originator beach 
alternative standard mouse button events events pen pen moved pen 
support adapted user interface roomware components equipped pen events generated device drivers assembled higher level events 
intuitive draw strokes pen just clicking document pen events combined strokes 
stroke gesture events generated depending shape drawn pen tap line circle 
different kinds events need different strategies dispatching event choose appropriate dispatching strategy 
example key pressed events received controller having keyboard focus button pen events dispatched views position mouse moved events directly discarded effect button pen 
track concurrent event sequences concept trackers extended 
tracker object receiving events directly view hierarchy dispatching 
beach capable handling trackers time keeping mapping input device ids different trackers get events device 
view transformations views different orientations sizes req 
depending current context replaces standard graphics context handles drawing adapted version supports transformations 
transformation object responds messages transforming points graphic primitives images 
transformations applied wrapper objects inserted view hierarchy wrap view transformed needing change 
performance reasons view access transformation responsible 
enables view transform cache objects transformation slow applied redraw 
especially important images scaled rotated speedup drawing long polylines 
basic models model layer beach consists mainly interfaces classes define abstractions components beach handle 
separated generic elements ensure extensibility flexibility reusability interoperability modules components 
document model defines base classes functionality objects part document 
user interface model needed beach defines alternative user interface concept suitable roomware components 
tool component provides additional functionality documents 
prominent examples toolbars browsers 
document browsers special role providing connection userinterface document offering possibilities navigate document 
addition tool controls possible modes degree coupling 
physical model representation parts real world relevant beach 
example term station refers computers running beach client 
able support different styles interaction interaction model specifies different interaction styles defined 
generic collaboration support set generic components defined useful kinds meetings cooperative situations 
contrast elements defined lower layers components visible user 
basis documents created beach hypermedia data model 
instances data model classes part shared object space gives users possibility access objects simultaneously 
generic document elements include workspaces equivalent page handwritten input texts images 
main elements user interface beach segments overlays complete interaction area roomware component divided segments defines space available tool document browser 
addition overlays positioned freely similar windows popular operating systems 
contain tool normally toolbars smaller tools hand time 
tools mentioned document browser toolbars 
currently tools provided layer 
important part representation physical environment configuration roomware components 
able combine stations composite roomware component req 
current setting available shared objects shown 
roomware component consists stations 
station display 
displays stations belonging roomware component combined display area represents complete interaction area roomware component complete area dynawall 
displays added removed display area views showing adjust immediately available size area req 

component beach relationships roomware components stations displays display areas interaction roomware components currently interaction techniques available mouse keyboard gestures written pen support drag drop 
generate gesture events mentioned stroke drawn sent gesture recognizer check similar set supported gesture shapes 
case gesture event generated dispatched 
contrast mouse events refer specific point gesture event associated stroke cross bounds multiple view objects 
dispatcher gesture events provided capable selecting right view controller 
tailored support tasks generic elements available beach useful different situations 
tasks help specific support req 

architecture beach module layer allows modules add elements tailored functionality extend existing components 
way modules support creativity sessions cooperative presentations meeting moderation 
providing hooks add new tools services modules plugged beach having adapt code lower layers 
current state experiences beach implemented visualworks smalltalk 
experiences current version beach quite promising 
prototype german computer fair march give interactive presentations dynawall 
may installation land german occupational safety health exhibition open public 
ambiente team beach collect ideas draw design sketches dynawall team members sitting having brought laptops standing directly dynawall 
usable everyday beach needs better interfacing existing applications 
implementation cooperative applications top coast framework successful lot error prone tasks conflict detection handling caused concurrent actions updating multiple distributed views carried automatically framework 
open issues development beach helpful get feedback usability beach different especially non research contexts 
evaluation pilot installations land beach industry cooperation partners 
latest information activities ambiente beach land www darmstadt gmd de ambiente ambiente activities beach html 
acknowledgments students colleagues helpful discussions supporting time consuming implementation 
norbert streitz thorsten carsten helped improve 

bier freeman 

mmm user interface architecture shared editors single screen 
acm siggraph symposium user interface software technology proceedings uist 
pp 


fox hanrahan winograd 

integrating information appliances interactive workspace ieee cg may june pp 

gei ler 

generation icons 
proceedings th international conference human computer interaction interact norway pp 


gei ler 

shuffle throw take working efficiently interactive wall 
chi summary suite late breaking results real virtual integrating architectural information spaces 

greenberg boyle 

pdas shared public displays making personal information public public information personal 
personal technologies vol march 
elsevier 

bederson 

architecture implementation java package multiple input devices mid 
tech report hcil cs tr umiacs tr computer science department university maryland college park md 
moran van 

tailorable domain objects meeting tools electronic whiteboard 
proceedings acm conference computer supported cooperative cscw acm press pp 


ller 

communication chairs examples mobile roomware components 
chi summary 
suite late breaking results real virtual integrating architectural information spaces 

myers 
collaboration multiple pdas connected pc 
proceedings acm conference computer supported cooperative cscw acm press pp 




new pen centric user interface support creative teamwork roomware environments german diploma thesis gmd ipsi darmstadt technical university department computer science 
rekimoto 

multiple device approach supporting whiteboard interactions 
proceedings chi conference pp 


rekimoto 

multiple computer user interfaces cooperative environment consisting multiple digital devices 
pp 


kirchner sch haake 

designing object oriented synchronous groupware coast 
proceedings acm conference computer supported cooperative cscw acm press pp 

sch sch 

coast ein groupware 
net erfurt germany 

stewart bederson druin 

single display groupware model collaboration 
proceedings human factors computing systems chi acm press pp 


streitz 
land interactive landscape creativity innovation 
proceedings acm conference human factors computing systems chi pittsburgh pennsylvania usa may 
pp 


streitz gei ler holmer 

roomware cooperative buildings integrated design architectural spaces information spaces 
pp 


streitz gei ler haake hol 

dolphin integrated meeting support local desktop environments 
proceedings cscw acm press pp 


streitz burkhardt 
eds 
cooperative buildings integrating information organization architecture 
international workshop cooperative buildings build darmstadt germany february 
lecture notes computer science 
springer heidelberg 

streitz holmer 

arbeiten und erste 
der cscw 
teubner stuttgart leipzig german 

weiser 

computer science issues ubiquitous computing 
communications acm 
