technical report sal solid modeling published handbook computer aided geometric design farin hoschek 
kim eds 
elsevier science publishers shapiro engr wisc edu october spatial automation laboratory university wisconsin madison university avenue madison wi contents premise informational completeness 
outline 
mathematical models postulates 
continuum point set model solidity 
combinatorial model solidity 
generalizations 
computer representations implicit constructive 
representation point classification 
constructive solid geometry 
constructive representations 
enumerative combinatorial 
representation enumeration 
groupings 
cell complexes 
boundary representation compromise 
unification representation schemes 
algorithms fundamental computations 
enabling algorithms 
applications geometric design 
analysis simulation 
dynamic analysis lumped parameter systems 
planning generation 
manufacturing 
systems classical systems 
parametric interaction 
standards interfaces 
unsolved problems promising directions 
summary 
solid modeling shapiro mechanical engineering computer sciences university wisconsin university avenue madison wisconsin usa engr wisc edu solid modeling consistent set principles mathematical computer modeling dimensional solids 
collection evolved years mature termed discipline 
major themes theoretical foundations geometric topological representations algorithms systems applications 
solid modeling distinguished areas geometric modeling computing emphasis informational completeness physical fidelity universality 
article revisits main ideas foundations solid modeling engineering summarizes progress bottlenecks speculates possible directions 


premise informational completeness notion solid modeling practiced today developed early mid response specific need informational completeness mechanical geometric modeling systems 
important notion promoted largely university rochester remains central understanding nature power limitations solid modeling 
concept may appear academic redundant context particular geometric application algorithm simply implies computed results correct 
solid modeling conceived universal technology developing engineering languages systems guarantee maintain integrity precise sense 
constructed representation valid sense correspond real physical object constructed representation represent unambiguously corresponding physical object representation support principle geometric queries may asked corresponding physical object 
survey written author sabbatical stay dip 
informatica universita roma tre italy possible trace origins techniques solid modeling early computerized geometry systems interesting connections documented evolution engineering drawings descriptive geometry earlier methods synthetic geometry employed years ago 
informational completeness expressed requirements fact assumed imply 
implicit requirements recognition physical object may represented way valid representations consistent 
difficulties arise requirements stated terms physical objects objective tests unambiguous comparisons 
clear human operator may able render ambiguous subjective judgement computer program performs desired computer program check computer representations informationally complete notion physical object defined terms computable mathematical properties independently particular computer representation 
definitions guarantees automation standards solid modeling 
similar reasoning led requicha voelcker propose modeling paradigm shaped field solid modeling know today 
real world artifacts associated processes abstracted postulated mathematical models 
space mathematical models operations serves definition corresponding data type class represented computer way representation scheme 
formally representation scheme defined mapping computer structure defined mathematical object 
representation schemes accompanying algorithms organized systems software applications emulate behavior real world artifacts processes 
classical solid modeling new challenges physical systems behaviors physical fields rigid solids parametric families robustness tolerances features interoperability real world mathematical models computer representations sets compact regular semi analytic boolean algebra continuity categories morphisms functors stratification topological polyhedra homogeneous orientable cycle boundary union manifolds fiber bundles constructive solid geometry cell complexes boundary reps winged edge cell groupings octrees bsp ray files algorithms applications systems mesh analysis heterogeneous materials deformations space decompositions cell maps persistent naming constraints dual representations 
modeling paradigm updated reflect current understanding concepts mathematical modeling computer representations solid modeling 

outline modeling paradigm common survey field solid modeling terms developments related mathematical models representations representation conversions algorithms systems applications 
adopts similar approach 
solid modeling mature field hundreds relevant papers published year categories developments covered chapters volume surveys 
accordingly chapter focuses aspects solid modeling distinguish areas geometric computing specifically informational completeness physical fidelity universality representations algorithms 
pointed graphics visualization video imaging scientific consumer applications rely solid modeling driven development field appear critically dependent key characteristics 
concluding section provides brief summary speculates solid modeling 
readers interested traditional exposition solid modeling techniques reading landmark requicha earlier surveys solid modeling proceedings acm symposia solid modeling applications 
monographs treat important subtopics solid modeling various levels detail field developed rapidly comprehensive date text solid modeling available writing 

mathematical models 
postulates early efforts solid modeling focused replacing engineering drawings geometrically unambiguous computer models capable supporting variety automated engineering tasks including geometric design shaping visualization mechanical components assemblies computation integral mass volume surface properties simulations mechanisms numerically controlled machining processes interference detection 
developments described cited articles culminated requicha postulating desired properties solid objects 
manufactured mechanical components finite size behaved boundaries displayed manipulated computer initial focus rigid parts homogeneous isotropic material added removed 
postulated properties translated properties subsets dimensional euclidean space finite size subsets bounded rigidity readily formulated terms congruence rotations translations 
requirement behaved boundary usually interpreted mean set boundary described finite collection piecewise smooth patches equivalently finitely triangulated 
addition collection sets closed set operations material addition removal roughly correspond set union difference operations interference sets modeled set intersection 
class semi analytic sets satisfies clear chapters handbook general transformations projective spaces offer great computational advantages representation visualization curves surfaces dimensional euclidean space 
requirements defined include sets represented finite boolean combinations inequalities form fi fi analytic function sense admitting taylor series expansion point space 
definition semi analytic sets closed boolean set operations include subclass sets sets represented polynomial rational equalities inequalities 
closure projection connected components semi analytic set semi analytic bounded semi analytic sets finitely 
bounded semi analytic subsets euclidean space correspond intuitive notion solid 
semi analytic sets may open closed may heterogeneous dimension 
proper solid homogeneous dimension contain boundary 
notion solidity characterized way mathematically 
common approaches defining solidity rely respectively point set topology combinatorial algebraic topology 
important give rise complementary models computer representations point set model defines local test solidity combinatorial model specifies solids built simple pieces cells 

continuum point set model solidity subset dimensional euclidean space points classified neighborhoods respect full ball neighborhood indicates point belongs interior points partial neighborhoods belong boundary forx considered solid contain interior points boundary points interior points nearby points eroded lower dimensional neighborhoods indicate lack solidity 
see example 
formally set called closed regular closure interior definition introduced studied check neighborhoods individual points set see pass neighborhood test 
points pass solid set solid regularize set closure interior shown 
obviously regularization add points remove points non regular set 
appear problem shows intersection closed regular sets need regular set difference closed regular sets usually closed 
problem solved requiring results usual set operations followed additional step regularization 
new regularized set operations denoted respectively guarantee solidity results outcome may counter intuitive 
example regularized intersection solids overlapping boundaries empty definition long interiors intersect 
may little reason expect new operations context neighborhood point set open ball sufficiently small radius centered intersected dual definition solidity open regular sets advocated allow overlap boundaries assembly modeling catch 
interior non regular set interfering solids regularization intersection closure interior closed regular set regularized intersection 
closed regular sets capture continuum notion solidity terms neighborhoods individual points set 
solids closed non regularized set closed regular sets form boolean algebra regularized set operations 
possess algebraic properties related usual non regularized set operations closed regular sets form new boolean algebra regularized set operations 
closed regular semi analytic bounded sets called sets requicha 
formalism conveniently applies planar shapes surface patches twodimensional solids solid lines curve segments solid curve simply changing dimension type universal set turn modifies mean neighborhood ball 

combinatorial model solidity way characterize set solid combinatorially composed solid simple pieces necessarily dimension usually called cells 
subsets euclidean space cells required orientable orientations corresponding arbitrarily chosen sense direction 
theoretically particular choice cells important solid characterized mere existence non unique decomposition primitive solid cells 
example semi analytic sets decomposed coarse disjoint manifold subsets various dimensions shown resulting submanifolds called strata corresponding decomposition stratification 
alternatively semi analytic set may triangulated decomposed collection curved triangles points curve segments triangular surface patches note commonly term boolean operations ambiguous larger context geometric modeling refer standard regularized types set operations 
confuse theoretical issue practical representational algorithmic consideration representing solids computer cellular structures consider section 
elements triangles play role simplest common denominator cells sense cells may triangulated 
stratification solid boundary dimensional manifold strata whitney regular stratification dimensional set defined zy stratification plane strata sign invariant respect primitives 
minimal whitney regular stratification set connected manifold strata satisfies frontier condition boundary stratum union strata 
combinatorial model defined cell cell fashion geometric computations reduced presumably simpler computations individual cells 
cells usually chosen disjoint open cells disjoint interiors closed cells properly joined cell complex provide finite spatial addresses points innumerable continuum 
formally proper joining cells amounts satisfying frontier condition requires relative boundary cell finite union cells complex 
intuitively means points stratum alike neighbourhoods homeomorphic meet strata 
combinatorial model solidity usually summarized saying addition semi analytic bounded subsets euclidean space solids homogeneously dimensional topological polyhedra 
arguably important property topological polyhedron combinatorial boundary lower dimensional polyhedron obtained pure algebraic computation concept chains 
cell complex dimensional chain simply chain formal cell cell sum dimensional cells ai integer coefficients 
chains cell complex added collecting adding coefficients cells 
collection chains form group chains replace incidence adjacency orientation computations simple algebra 
particular illustrates notions open closed closure interior relative larger set context usually curve surface volume manifold 
oriented boundary operation defined algebraically terms elementary chains coefficients set 
boundary operation chain transfers coefficients cell incident cells sign depending relative orientation 
addition cancels interior cells yields boundary 
repeating operation produces chain coefficients 
boundary dimensional solid chain boundary cycle 
manifold cell edge shared number cells faces 

combinatorial model solidity allows algebraic definition topological properties terms dimensional chains coefficients 
starting dimensional solid represented chain boundary operation produces oriented chain corresponding dimensional cell complex defines dimensional boundary original solid 
apply boundary operation chain obtain chain zero coefficients 
words fundamental property guarantees boundary set closed surfaces called shells formally set boundary zero chain called cycle 
historical reasons restrictive model solidity adapted topological polyhedra restricted orientable dimensional manifolds boundary 
restriction combinatorial boundary defined cycle manifold 
manifold model solidity claims theoretical advantages rules non manifold sets deemed non physical connected manifold boundaries completely classified terms euler characteristics see section 
explain manifold models easier represent computer 
unfortunately restriction manifold solids violates important postulated properties solids closed regularized set union intersection 
union manifold sets touching point non manifold set 
hand important recognize cycle union manifolds 
manifold boundary point neighborhood homeomorphic dimensional open ball point interior point dimensional half ball point lies boundary 

generalizations general computer representations mechanical artifacts include unbounded trimmed curves surfaces aesthetic manufacturing purposes combined traditional solid models represent cracks material heterogeneity simulate surface forming 
turn means paradigm needs expanded include general mathematical models continuum combinatorial 
generalizations relatively straightforward principle essentially amount relaxing original constraints 
general continuum models correspond closed semi analytic subsets general combinatorial model readily seen arbitrary collection cells dimensionally heterogeneous cell complex 
appear competing mathematical theories solid modeling point set continuum algebraic topological combinatorial 
fortunately theories entirely consistent mathematical models interchangeably relying continuum combinatorial properties needed 
key fact closed set topological polyhedron represented finite cell complex 
class closed regular subsets coincides precisely homogeneously ddimensional polyhedra furthermore shown cycle bounds unique solid 
know immediately solid may represented unambiguously boundary boundary combinatorial structure homogeneous polyhedron points homogeneously dimensional neighborhoods 

computer representations ways group various computer representation schemes including requicha widely accepted description pure representation schemes new hybrid representation schemes proposed complete classification appears impractical 
survey takes slightly different view really fundamental ways represent point set closely related mathematical models solidity identified 
implicit constructive representations give rules testing points belong set representations naturally supported point set continuum model solidity enumerative combinatorial representations specify rules generating points set points representations closer spirit combinatorial view solidity 
classification representation methods probably coarsest possible recall informationally complete representation principle support geometric queries 
inefficient way test point belongs set see point points generated enumerative representation perfectly valid way generate points set test candidate points implicit representation determine belong set 
views extreme may appear glance fact representations misused similar fashion support applications originally designed 
higher level view representation schemes representation rules implicit enumerative essentially computable implementations semi analytic functions 

implicit constructive general method defining set points specify predicate evaluated point space true words defined implicitly consist points satisfy condition specified predicate simplest form predicate condition sign real value function resulting familiar representations sets equalities inequalities 
example ax cz conditions represent respectively plane closed linear halfspace open linear halfspace respectively 
complex functions employed define progressively complex geometric shapes giving rise discipline implicit modeling 
natural approach semi analytic sets define complex predicates constructively logical combinations simple primitives equivalent standard set operations sets defined primitive predicates 
see examples 
furthermore theory functions see chapter finite element approximation splines klaus allows conversion representations single function inequality closed semi analytic set 

representation point classification arbitrary point distinct methods deciding membership represented set 
replace constructive representation single inequality predicate truth determined testing sign real valued function point 
approach leads increasingly complex arithmetic computations essentially logical computation appears poor computational strategy functions constructed directly 
attractive alternative represent constructive geometric representation computer usual tree data structure primitive predicates defining primitive halfspaces stored leaves tree logical set operations stored interior nodes 
algorithm point membership query data structure implemented naturally proceeding recursively tree inverting set construction op terms corresponding logical operation algorithms appealing require arithmetic computations leaves tree logical operations internal nodes corresponding boolean structure facilitates various speed techniques pruning localizing restructuring parallelizing computations 
sense representation methods correspond common methods describing functions implicitly parametrically essentially continuous form enumeration 
constructively defined implicit representation union sets defined logical operation single arithmetic expression 
csg representation point membership classification csg requires representation computation neighborhoods points classify respect may may classify respect op 
constructive representations constructive solid geometry 
intermediate 
constructive solid geometry constructive representations solid modeling requires extensions dictated mathematical properties postulated solids section 
rigid body motions constructively defined sets represented usual method coordinate transformations stored intermediate node constructive tree point membership test set transformed motion inverted straightforward fashion recall semi analytic sets closed standard set operations guarantee solidity implement algebra closed regular sets constructive representations modified ways primitive set required closed regular regularized set operations allowed 
may appear relatively minor matter replacing set operation op corresponding regularized op fact dramatically changes computational properties constructive representations point membership queries regularized constructions require substantially implied equation 
specifically combining results classifications respect sets requires logical information representing combining neighborhoods respect aop see example 
constructive representation scheme relying closed regular primitives rigid body motions regularized set operations called constructive solid geometry csg 
design csg limited availability solid primitives necessity represent maintain neighborhood information points primitives combinations 
task particularly non trivial points non manifold neighborhoods lying high degree tangent surfaces 
complete solutions worked solids bounded planar second degree surfaces limited results available complex solids 
attractive properties csg include conciseness guaranteed validity definition computationally convenient boolean algebraic properties natural control solid shape terms high level parameters defining solid primitives positions orientations 
relatively simple data structures elegant recursive algorithms contributed popularity csg academia early commercial systems 

constructive representations principle constructions may added lexicon implicit representations notably offsetting blending convolutions skeletal representations minkowski operations sweeping 
constructions numerous applications mechanical design analysis planning tasks computer graphics computational time guarantee correctness deemed important visually pleasing results 
formal definitions straightforward guarantee solidity result support clear point membership query came regarded formal test unambiguous representation 
popular constructions sweep representation shown considered distinct representation scheme defined set continuous motion infinite union operation sweep denotes set positioned configuration words sweep set points swept occupied time motion 
sweeps relatively understood useful variety representational tasks computing space occupied moving object material removed moving cutter extrusion planar cross section dimensional path 
point membership test sweep follows naturally studies dual infinite intersection operation inverts construction sweep inverted trajectory point sweep intersects original solid see 
definition constructive approach utilized representing sets relying finite set analytic primitives set operations 
operations closure connected component preserve semi may effectively 
particular representation schemes proposed include extension classical csg representations topological operations constructive representations dimensional semi analytic sets 
constructive approaches limited ability compute manage topological neighborhood information points represented sets 
related significant drawback csg implicit representations lack explicit representation parameterization solid interior particularly boundary 
leads practical observe explicit representation boundary implies explicit representation neighborhood information points solid 
sweep planar dimensional solid cross section helical motion generates dimensional solid 
boundary sweep trajectory motion inverted trajectory point belongs sweep trajectory inverted motion intersects solid starting position 

sweep constructive representation set points occupied motion point membership procedure inverts construction 
complications including computational difficulties generating ordered points purpose display engineering analysis 
explicit representation spatial locations points solid portions known priori 
words represented subsets spatially addressable referenced persistently instance attaching labels engineering attribute information 
comparison implicitly represented solids problematic solid admits infinitely constructive representations deciding represented set empty may require non trivial computations 

enumerative combinatorial 
representation enumeration seemingly direct way define points belong solid enumerate points explicit parametric rule 
planar curve commonly defined mapping value points curve defined pair functions 
generating points defined curve segment matter marching unit interval small increments evaluating coordinate functions value testing point belongs curve segment requires complex numerical procedure clearly defined computable task 
similarly define parametric surface patches tri variate solids mappings unit square cube chapters handbook deal non trivial issues related representation parametric curves surfaces complex shapes 
best thing represent complex solid enumerating individual points simple solid chunks cells relying combinatorial properties solids topological polyhedra 
approach leads persistent spatially addressable data structures support development cell cell traversal algorithms controlled locally incrementally particularly convenient point generations local modifications 
point membership query reduces search procedure aimed determine represented cells contains point 
main drawbacks combinatorial data structures size apparent lack means create validate manipulate structures directly 
broadly combinatorial representations classified choice cells restrictions cells fit 
cell 
common requirements include dimensional homogeneity connectedness boundedness 
cells may relatively open closed depending fit form closed set may may required smooth simply connected representation support fundamental computations point testing point generation 
words cells simple unambiguously representable implicitly preferably 
depending type cells solids may assembled cells distinct ways described groupings cell complexes 

groupings groupings solid cells geometric type dimension probably simplest way represent set 
example groupings include collections dimensional cubes called voxels ray files ray segments finite size rectangular columns union overlapping spherical balls files dimensional polygons commonly computer graphics 
common principle underlying groupings assembled closed cells representing small chunks space 
points interior cell characterized constant neighborhood points type neighborhood respect cells chosen simple admit implicit parametric representations 
cells geometric type dimension groupings support development simple brute force algorithms 
example point membership query reduces point cell test repeated cell 
depending particular geometric type groupings may organized compact efficient computational structures trees hierarchical graphs supporting efficient queries processed parallel algorithms specialized hardware 
popular representations category called octree hierarchical method representing grouping orthogonal dimensional boxes usually cubes box intersecting boundary solid subdivided smaller boxes desired level resolution reached 
grouping convex cells defined implicitly intersecting linear halfspaces may efficiently represented binary space partition bsp tree bsp node corresponds particular sequence halfspaces convex subregion space 
construction groupings guaranteed valid solids solids geometry representable unions cells grouping represented exactly 
solids approximated example multi resolution grouping groupings enhanced additional geometric representations specifying precisely geometry approximated 
creating groupings may expensive operating may difficult restrictions groupings example shape cells orientation may imply represented solids closed common transformations 
usual operations rigid body motions set operations may require substantial processing reconstruction 
prefer term grouping dimensional grouping introduced favor spatial enumerations sampled representations wish imply approximation specify source represented data 
serious drawback groupings lack explicit representation incidence adjacency cells grouping conditions usually imposed neighborhoods points respect neighboring cells 
corresponding topological polyhedron computed principle may grouping implies need additional data structures algorithms 
example immediately clear define compute represent defined lower dimensional boundary solid represented grouping 
groupings inherently homogeneous combinatorial structures suitable representing mixed dimensional point sets 

cell complexes key difference grouping cell complex requires neighborhoods points cell constant respect respect cells 
words cell complex representation stratification solid 
cell complex representations implement combinatorial model solidity directly requiring solid topological polyhedron may decomposed finite cell complex assembled solid cells different dimension 
effectively turns geometric topological queries solid simple algebraic syntactic computations 
number data structures proposed representing general heterogeneous cell complexes 
generalizations appear place geometry topology sets representable solid modeling systems 
cellular representation dimensional manifolds sets proposed functional programming language semantics defined operations dimensional polyhedral cell complexes emerged 
representation contain information determine geometry cell incidence cells lies main difficulty representations geometric incidence information independent 
principle defining geometry cell cell complex sufficient represent incidence information geometric tests 
practice geometric tests imprecise searching adjacent cells inefficient specifying geometry adjacent cells independently redundant wasteful incidence constrains corresponding geometries match 
specifically loss generality assume cell subset larger set include closure called carrier definition cell complex cell belongs intersection carriers incident cells carrier cell interpolation incident cells faces 
incidence relations convenient method defining geometry incident carriers 
conditions apply simultaneously independently suffices define complex mathematically 
example simplicial complex coordinates simplices points represented geometrically carriers higher dimensional simplices defined interpolations usually linear edges interpolate points triangles interpolate edges 
contrast geometry solid cells defined set operations example curves intersection second degree surfaces commonly mechanical parts 
situations may words carrier generic dimension independent term possibly unbounded curve surface volume convenient define carriers cells surfaces define carriers cells edges implicitly subsets corresponding intersection curves 
clear geometric carrier cell cell complex interpolates incident lower dimensional cells cell lies intersection carriers incident higher dimensional cells 
shown carriers partial cell complex representing boundary solid 
previous left start right left face right face left previous right winged edge data structure represents incidence local orientation cells manifold boundary representation terms edge records 
record points ordered lists vertices faces edges faces 
vertices faces represented loops edges 
geometric carriers associated cell implied interpolation intersection conditions 

geometric compatibility intersection interpolation conditions incidence information cellular representations independent maintained times 
cellular representations may devised differ choice geometric carriers specified explicitly implied incidence relations adjacent cells 
determines part incidence information determined constant time requires searching 
representing incidence relationships cell complex substantially increases size resulting data structure deemed impractical 
main advantage cell complexes groupings represent exactly explicitly topological information solid including interior boundary dimensional skeletons connectivity 
additional numerical computations required answer topological queries solids may represented exactly principle 
hand graph representation incidence various cells high degree geometric redundancy turns cell complex representations inherently serial linear size structures complicates development efficient algorithms 
maintaining validity cellular representations non trivial task requiring guarantee redundant information remains consistent times represented geometric carriers satisfy intersection interpolation conditions cells remain disjoint required definition cell complex 

boundary representation compromise historically boundary representation computer representations description polyhedral dimensional objects strengths weaknesses representation scheme appreciated better examined terms properties implicit combinatorial representations 
recall solid defined boundary boundary dimensional solid uniquely determines 
fact represent solid implicitly boundary enumerating points solid interior 
words represent solid predicate set bounded rely jordan brouwer theorem generalization planar jordan curve theorem guaranteeing separates euclidean space exactly subsets bounded interior unbounded exterior space 
declare apparently implicit representation solids bona fide representation scheme need give computable point membership query representation suppose representation know represented set boundary unique solid pick arbitrary points point interior point outside path connecting intersect boundary odd number times 
suppose pick point outside solid test point inside outside solid simply counting number times path intersects odd means means 
far easiest way implement choose linear path point infinity reduces point membership test intersecting linear ray set represent answer way long guarantee unambiguous representation solid boundary intersection arbitrary line segment computed 
choose represent boundary implicit constructive parametric combinatorial methods described 
methods various combinations tried main challenge boundary representation assure represented set boundary valid solid 
validity conditions follow clearly combinatorial model solidity making combinatorial representation natural choice 
specifically boundary solid cycle valid cell complex disjoint cells satisfying frontier homogeneously dimensional lower dimensional cell closure dimensional cell edge shared incident number faces orientable means material side defined face globally consistent manner 
furthermore structure guaranteed represent boundary valid solid 
cellular representations proposed boundary representations oldest popular representations enforced conditions manifold solids boundary points neighborhoods homeomorphic dimensional disks 
statement trivial may appear boundary semi infinite set boundary curved face example lying sphere torus general uniquely determine set bounds usually set boundary 
fact cycle orientable explicit representation orientation allows check condition locally extend applicability boundary representations general sets 
boundary representations edge shared exactly faces typified popular winged edge data structure illustrated 
incidence information boundary representation consists linked lists edge records record pointers pointing vertices faces edges enforce locally conditions 
scheme vertex face records defined ordered lists incident edges 
geometric carriers may associated cells data structure parametrically constructively manner satisfies implied interpolation intersection conditions global non interference conditions cells enforced automatically checked 
variety similar spirit manifold boundary representations proposed efforts optimize space ease manipulation handling specific geometric carriers 
boundary representations non manifold solids designed directly representations cycles euclidean space treating boundary non manifold solid union manifold shells 
approaches apply boundary representations arbitrary heterogeneous cell complexes viewed union boundary represented manifolds various dimensions 
cellular structures boundary representations number attractive properties 
boundary solid unique possible invoke additional conditions smoothness connectedness sign invariance orientation order define construct unique canonical decomposition boundary 
due dimensional reduction boundary representations smaller dimensional cellular representations solid 
boundary representations inherit disadvantages cellular structures mentioned particular non trivial construct maintain 
regularized set operations constructions guarantee solidity implemented directly boundary representations approach requires support boundary representations manifold boundary representations closed operations 
alternative devise set direct operations boundary representations preserve validity boundary representations times 
approaches employed briefly discuss section 

unification representation schemes assumed mathematical properties know representation schemes different methods capturing complete geometric information class objects semi analytic subsets euclidean space 
possible convert representations may required different applications 
turn suggests representation schemes simply different ways organize geometric topological data 
data 
representation schemes organized terms finite number operations set primitives 
primitives halfspaces constructive representations geometric carriers cellular structures geometry cells groupings 
cases primitives defined analytic equalities inequalities 
operations primitives produce new primitives interpolation motion deformation produce semi analytic sets set operations closure selecting connected component 
operations strictly speaking resulting structure proper cell complex contains topologically distinct geometrically coincident cells 
queries simply compositions basic operations 
words fixed finite set primitives gives rise representational space consisting transitive closure primitives selected operations 
turns representational space finite finitely semi analytic sets may constructed finite set primitives completely characterized particular stratification space determined primitives 
finite collection primitives consider stratification euclidean space stratum maximal connected manifold respect primitives stratification exists collection semi analytic primitives unique called whitney regular 
reasonable low degree polynomial size strata satisfy frontier conditions 
shows examples 
practical significance stratification lies fact representation constructive combinatorial modeling space essentially optimized union strata 
example boundary representations consists merged dimensional strata vertices edges faces respectively csg representations regularized boolean representations unions dimensional strata 
whitney regular sign invariant stratification space serves lowest common denominator representation schemes allows systematic development algorithms queries 
see additional details 

algorithms 
fundamental computations unified view solid representations allows identify small set fundamental operations primitive selection stratification point generation point membership classification set comparison ordering 
operations fundamental sense algorithms defined composition 
classification mathematical models operations entirely independent example point membership may require stratification operations require form comparison 
specific representation schemes optimized rarely fundamental operations 
practice fundamental operations ordering implemented approximately see section standards section unsolved problems discussion ensuing difficulties 
selection geometric primitives attempting solid modeling computations sure set known primitives carriers sufficient represent result computation 
results geometric computations portions candidate sets 
cases trivial step clear order compute intersection line solid boundary representation line representations surfaces bounding solid 
may obvious true boundary representation solid may constructed boundaries corresponding csg primitives 
situations candidate primitives obvious determined part computation usually unique 
example known carriers words primitive function sign points stratum 
typical boundary representation insufficient csg representation solid far obvious geometric primitives needed describe boundary blend sweep 
stratification difficult solid modeling computations process identifying cells whitney regular sign invariant stratification set primitives 
theoretical stratification process decomposes semi analytic set collection connected smooth submanifolds recursively extracting dimensional solid portions set see 
consider simplest case primitives hi hj 
non empty sign invariant sets corresponding pairwise intersections sets defined signs primitive 
recall intersection required computing representing geometric carriers lower dimensional cells cell complex geometry higher dimensional cells specified directly 
particular boundary representations routinely require computation intersection curves incident faces 
point classification boundary representation requires computing intersections bounding surfaces line popular methods visualizing implicit sets relies ray casting intersecting set grid parallel lines 
furthermore intersection sets may disconnected heterogeneous dimension contain singularities self intersections 
stratification requires computing connected smooth submanifolds intersecting primitives satisfying frontier condition surprising chapters handbook see chapter intersection problems devoted study intersection problems 
theory semi analytic set may stratified exactly appears general practical algorithms resort numerical methods 
point membership classification pmc discussed point membership queries context individual representations schemes constructive combinatorial boundary 
general pmc operates arbitrary point representation set returns depending respectively interior boundary outside solid 
solidity interior boundary topological concepts defined relative universal set example surface curve come surprise pmc point usually requires computing neighborhood relative neighborhoods smooth regular points adequately represented tangent normal information points may require non trivial analysis computations depending representation point generation point generation required produce single representative point set may may special properties center mass generate samples represented set regular irregular intervals 
point generation straightforward sets represented parametrically may difficult representations 
combinatorial representation point generation performed cell serially hierarchically depending cells organized 
implicitly defined sets points may generated sampling classifying pmc desired resolution constructive representations points may generated primitives filtered pmc test described 
comparison comparison points represented coordinates relatively straightforward 
numbers exactly rarely compute distance points appropriately defined metric 
common type distance usual euclidean distance metrics lp hausdorff useful necessary 
comparing sets points substantially difficult task depends sets represented kind metric 
notice distance computation perfectly valid method answering pmc queries comparison usually required order decide sets incident 
implicit parametric representations set points unique general set comparison usually requires point generation classification point comparison 
comparisons different combinatorial representations may formulated terms comparisons individual cells 
comparison solids may require development metrics take account geometric distance topological form 
ordering process combining results primitive computations representation result difficult describe generically ordering process depends way representation organized 
constructive representations ordering produces tree constructions ordering groupings produces serial hierarchical structures ordering cell complexes involves creating maintaining incidence adjacency information 
particularly elegant approach ordering manifold boundary representations takes advantage familiar euler characteristic defined alternating sum numbers vertices edges faces respectively boundary representation 
boundary representation known connected manifold cell homeomorphic dimensional disk number provides complete classification surfaces homeomorphism 
fixed equation viewed dimensional linear subspace dimensional space defined coordinates valid operations boundary representation may change numbers vertices edges faces resulting boundary representations confined plane 
valid operations termed euler operators preserve euler characteristics viewed vectors dimensional linear subspace 
dimensional linear space spanned linear independent vectors independent unique euler operators required build boundary representation polyhedron homeomorphic sphere 
counting principle extended complex boundary representations general cells multiple connected components shells 
example simple counting arguments show number interior face rings counted internal loops faces number connected shells genus 
eliminating euler characteristic equation obtain linear constraint representing dimensional hyperplane dimensional space implying distinct euler operators necessary sufficient span space cell complexes 
euler operators conveniently enforce required combinatorial conditions cell complexes unique approaches constructing maintaining ordering possible 

enabling algorithms geometric queries algorithms solid modeling may constructed sequences fundamental computations 
impractical describe algorithms important solid modeling instructive consider common critical computations cast terms fundamental operations 
specifically focus algorithms broadly classified representation conversions tend re represent solid manner desired computations simpler algorithms shaped solid modeling technology enabled specific applications defined architecture commercial systems 
description optimized clarity efficient algorithms involve essentially steps structured take advantage locality proximity coherence symmetry hierarchy specific assumptions known properties particular geometric representations 
ray casting ray casting ray tracing popular techniques rendering solids boundaries representing solid grouping line segments performing pmc boundary representation solid performing types analysis 
algorithms require computing intersection possibly unbounded line segment representation solid 
representations ray casting algorithm reduces computing intersection unbounded candidate line geometric primitives leaves csg tree carriers highest dimensional cells yielding unsorted list points line 
points classify solid discarded points classify respect line segment 
remaining points solid bound linear segments result intersection 
points sorted line order induce classification segments line bound 
result regularized topology line want solid line segments may require constructing dimensional neighborhoods points additional pmc tests 
ray casting particularly popular csg representations due elegant divide conquer algorithm similar merge sort merges ordered lists intersection points interior node tree 
sampling polygonization application algorithms require sampling approximating represented solid 
include rendering path generation motion planning machining computation integral properties finite element meshing 
broadly algorithms produce dimensional grouping simplified cell complex solid representation 
generate points dimensional grouping solid boundary generates points boundaries candidate primitives geometric carriers boundary representation note euler operators guarantee validity results additional geometric conditions satisfied 
boundary primitives csg tree classifies candidate points representation solid 
similar processes may generating points interior solid candidate points generated dimensional space example regularly spaced grid space containing solid 
see generate dimensional groupings 
dimensional groupings usually triangles polygons constructed points generated solid boundary 
construction may require vertices edge polygons classification respect solid faces edges information available 
constructed edges polygons may ordered valid cell complex satisfying usual combinatorial conditions 
popular dimensional sampling include octrees tetrahedralization 
octrees constructed recursively classifying orthogonal boxes respect solid intersecting boundary solid 
subdivided desired level resolution reached 
box solid classification turn reduced classifying vertices box intersecting edges faces box solid boundary ordering result 
octree cells may subdivided tetrahedra tetrahedra may constructed directly dimensional grouping points sampled generated interior solid example delaunay constraint 
set membership classification general computation subsumes pmc ray casting cell sampling computations sense 
representations sets candidate set set solids dimension 
smc procedure partitions candidate set respect set solid portions context solidity defined respect single point smc reduces pmc described fundamental computations curve segment solid smc curved ray casting procedure outlined 
generally smc subsumes geometric computations solid modeling 
example solids regularized intersection dimensional face curve lying surface portion curve contained region bounded face 
smc considered fundamental computations implemented directly reduced sequence fundamental computations illustrated examples 
boundary evaluation merging queen representation conversion procedures complexity importance solid modeling called boundary evaluation procedure produces valid boundary representation solid constructive representation 
csg representations procedure conceptually straightforward 
solid represented sequence regularized set operations collection primitives hn difficult show hn words boundary representation solid may stitched boundary pieces csg primitives 
pieces 
pieces classify respect csg representation called faces boundary representation 
generic terms boundary evaluation reduces performing smc hi primitive representing union result 
turn requires partitioning hi candidate pieces may may lie solid boundary 
efficiency want pieces big possible need small portion shown sufficient necessary partition obtained intersecting hi boundaries primitives csg representation 
portion hi bounded trimmed intersection curves potential candidate face single pmc test point interior candidate face sufficient determine face belongs boundary representation 
face passes test represented resulting boundary representation typically necessarily boundary consists segments connected dimensional manifold strata intersection curves called edges 
sufficient set candidate edges obtained intersecting intersection curve surfaces points classifying respect face belong boundary representation 
typical boundary evaluation algorithm involves computing intersection curves primitive surfaces computing intersection curves surfaces generating points tentative curves faces followed pmc testing points respect solids faces ordering passing edges faces valid cell complex 
consider special case solids boundary representations combined union regularized intersection operation 
steps procedure compute intersection sets involves trimming faces edges boundary representations merge resulting pieces new boundary representation 
special important case boundary evaluation called boundary merging 
conceptual structure csg boundary evaluation procedure provides recipe types boundary evaluations 
example suppose wants perform boundary evaluation constructive representation containing sweep operation defined 
general procedure involves exactly steps generate sufficient set candidate surfaces trim surfaces produce set candidate faces edges generate point candidate cell perform pmc sweep representation order results cell complex 
intuitive shown formally sweep sweep means candidate surfaces obtained sweeping edges faces boundary solid 
challenging general boundary representations motions various approximations sweep surfaces proposed sampling polygonization techniques 
boundary evaluation constructive representations requires similar sequences fundamental computations 
practical implementations usually optimized generate smallest possible number candidate faces edges assumes construction properly defined supports unambiguous point membership test unfortunately definitions may available common constructions blending repeat computations employ coarse spatial tests localize computations possible 
representation conversions shown computations category designed systematically sequences fundamental steps 
example csg representations may computed boundary representation roughly follows select sufficient set primitives intersect primitives produce usual stratification space generate point sign invariant dimensional component stratification classify generated points corresponding components boundary representation regularized union components classifying correspond disjunctive canonical sum products csg representation optimized boolean optimization techniques 
step relies repeated point membership tests comparison 
difficult step procedure selection sufficient set primitives solved restricted common types boundary representations 
details boundary csg conversion may 
representation maintenance utilities comparing optimizing constructive representations approximating solids groupings computing silhouettes meshes may systematically designed similar procedures composed fundamental computations 

applications variety applications may developed help fundamental computations enabling algorithms 
briefly survey popular engineering applications helped shape solid modeling know today 

geometric design historically activity geometric design largely devoid physical analysis seeks efficient methods creating modifying visualizing annotating geometric representations solid shapes 
definition constructive representations suited constructing modifying models high level engineering parameters distances angles radii coordinate systems encoded parameters constructions 
resulting solid shape implicit may controlled modifying parameters 
time constructive representations provide explicit information boundaries difficult visualize modify locally annotate 
contrast combinatorial representations boundary representation particular ideal visualization annotation tasks require direct access traversal solid boundary 
combinatorial representations difficult construct manipulate directly appear ill suited design activities 
facilitate subsequent editing solid models critical issue vast majority designs fact modifications earlier designs constructive combinatorial representations supplemented constraints expressed equations inequalities parameters constructive representations coordinates carriers combinatorial representations 
typical constraints include tangency incidence distances angles 
approaches apply constraints directly cells stratification underlying constructive parametric model 
effect desired modification user typically changes values constraints parameters changes reflected updated systems equations solved new values parameters coordinates leading new instance solid model 
see chapter parametric modeling christoph hoffmann robert joan details 

analysis simulation solid modeling computations category may abstracted single valued functions solids possibly variables correct answers 
popular applications include rendering computation integral properties assembly modeling interference detection simulation mechanisms nc numerical control machining simulation 
rendering computation mass properties fact quite similar sense require form finite enumeration points cells grouping associated solid interior boundary 
case integral property computations include volume surface inertial properties integrals functions defined solid interior boundary contribution individual cell added result 
case rendering contribution cell displayed screen 
main principles computations sampling dimensional reduction 
dimensional reduction relies generalized stokes theorem reformulate computation solid terms computation boundary 
volume integral may computed directly reformulated surface integral integrals individual faces may reformulated terms path integrals edges bounding face 
similarly rendering may performed visualizing solid cells drawn screen depth order boundary cells surface normal information drawing edges silhouette curves generated boundary representation 
sooner computation reduces evaluating function relatively simple constituent cell line curve segment triangle polygon tetrahedron cube evaluation polynomial functions linear polyhedral cells may performed exactly machine precision general functions cells evaluation performed approximately function values carefully chosen gauss points cell 
assembly collection solids positioned oriented rigid motions space subject mating non interference conditions 
mating conditions identify pairs contacting surfaces require explicit boundary information 
non interference solids requires regularized intersection empty solids interiors disjoint empty non regularized set intersection implies contact boundaries non interference conditions may defined computed unambiguous representation recall deciding emptiness constructive representation non trivial matter 
moving solid easily represented applying rigid motion coordinate system solid designed 
mechanism solids assembly moves relative coordinate system static mating non interference conditions enforced times resulting complex dynamic conditions 
dynamic non interference moving solids may formulated static non interference stationary sweep motion relative dual operation formulate compute queries largest smallest non interfering objects 
continuous motion may simulated discretely evaluating static solid configuration small time increments 
see survey 
maintaining proper assembly conditions time steps may require substantial computing resources 
simple pairs solids may chained graph structures model mechanism linkages robot arms 
mechanism motion instantiated combining individual relative motions graph procedure called forward kinematics involves multiplication matrices representing individual relative motions 
inverse kinematics algorithms require solving systems non linear equations determine individual relative motions motion point coordinate system mechanism 
mechanism modeling may viewed natural extension constructive representation allows continuous motions opposed instances motions position solid space 
simulating numerically controlled nc machining application similar mechanism modeling solid cutter moving relative solid stock fixed solid motion cutter determined nc program purpose simulation determine moving cutter removes desired amount material interference material removal operation modeled regularized difference operation time step material removed solid cutter subtracted stock accurate approximation nc machining process requires computing sweep estimating volume removal rates integral properties 
see discussion related issues 

dynamic analysis lumped parameter systems simulation rigid body motion externally applied forces moments requires computation solid mass properties mass moments inertia center mass solving acceleration solid time instant integrating time modify solid velocity 
effect approximates solution ordinary differential equation solid motion 
repeating computation small discrete time intervals produces realistic simulation motion 
sophisticated simulation applies procedure system rigid bodies interconnected joints solving constrained system ordinary differential equations 
case physical object consideration better represented combinatorially graph solids links specify types motions allowed joints interference allowed individual solids time motion 
task requires dynamically tracking distances identifying collisions moving solids handled albeit high computational cost standard solid modeling methods 
contact geometry joints mechanism structure usually assumed computing require full power solid modeling discussed plus adequate models contact friction mechanics 
logical step enhance simulation model proper model impact mechanics predict motion impact takes place 
addition need identify precisely time type possible contacts apparent contacting solids usually constitute non manifold geometric model considered mechanism contact joint time impact 
commercial implementations simulations available limited lack models impact mechanics include mechanical deformations experimentally determined coefficients 
dimensional graph structure interacting solids employed general systems ordinary differential equations arising branches physics 
graph structures known long time commercial software systems 
graphs composed nodes represent lumped constitutive properties masses inertia resistances spring constants plus finite number transducers convert couple different physical models single structure 
context spatial information serves purposes computation lumped properties associated solid visualizing response system terms solids managing spatial incidence adjacency lumped elements interaction solids 

planning generation contrast analysis simulation applications planning generation tasks typically unique answer produce acceptable solutions usually large spaces feasible answers 
application category usually constructed heuristic search procedure repeated querying known solid models typically fundamental operations described section 
motion planning requires finding collision free path moving object respect solids 
addition numerous popular robot motion planning tasks applications category include generation tool paths nc machining automatic inspection plans coordinate measurement machines 
feature recognition process matching portions represented shape previously known parameterized forms shapes processes purpose constructing manufacturing process plan identifying parts inspection purposes 
vast majority features appear defined relationships portions solid boundary faces edges special points incidence convexity symmetry specific sizes 
important example application category mesh generation process constructing cell complex representation solid called mesh satisfying specific requirements size shape number topology cells 
requirements defined analysis application seeks approximate answer boundary value problem particular type spatial discretization domain finite element finite differences hexahedral simplicial meshing procedures require generating points solid interior boundary ordering form complex topology conforms geometrically closely possible solid boundary 
clear outset guaranteed validity solid models holds great promise automatic design engineering artifacts 
constructive representations appear particularly suited task way relate construction integrated may proper way described lumped 
types problems entirely independent course analysis simulation computations approximate correct answers unique fact may depend difficult planning generation tasks 
parameters desired design functional characteristics 
constructive representation may viewed procedural definition computer program implements design algorithm outputs valid solid represented design 
number languages grammars generating solid represented designs proposed faced challenges evaluation generated solids required explicit geometric combinatorial information physical functional information normally geometric modeling system 

manufacturing effective application solid modeling techniques possible traditional manufacturing processes idealized unit processes characterized input output geometry 
simulation planning verification unit processes particularly machining assembly main catalysts development solid modeling 
range supported applications greatly expanded include sheet metal manufacturing injection stamping pipe routing 
applications supported solid modeling framework specialized user interfaces force designers create models terms limited application specific lexicon 
example machined parts designed terms pockets holes machining features sheet metal parts designed sequences bending stamping operations draft angles automatically added injection parts 
usually operations translated application specific constructive representations evaluated combinatorial usually boundary representations 
addition heuristic knowledge systems emerging capable identifying common geometric features may may supported particular manufacturing process 
traditional manufacturing solid approximately represented computer grouping dimensional cells manufacture process grow solid depositing individual cells 
basic idea underlies host new manufacturing techniques referred build solid layer layer solid imaging printing employ deposition processes reminiscent printing methods solid free form fabrication cell cell deposition process removes constraints solid shape 
layered process correctly valid solid representations accepted different sources 
defacto standard representation purpose called stl boundary representation constructed collection grouping triangular oriented cells 
main virtue representation simplicity groupings stl representation approximate lacks information incidence cells sensitive round precision errors quite unreliable 
ability rapidly manufacture solids arbitrary shape specialized tooling naturally leads attractive idea object copying 
involves sampling points existing object constructing solid representation process called reverse engineering followed layered reproduction process 
detailed discussion reverse engineering chapter martin handbook 
briefly reverse engineering process general notion reverse engineering include reproducing functionality shape artifacts 
constructing solid representation unorganized cloud points sampled boundary existing physical object accuracy 
terms fundamental solid modeling operations process involves comparing ordering points strata dimensions points edges faces union represents boundary object reconstructed 

systems 
classical systems saw constructive combinatorial approach solid modeling offers specific practical advantages comes implementing particular engineering applications 
theoretically approaches equivalent informationally complete respect postulated mathematical models capable supporting fundamental enabling computations discussed 
constructive representations parameterized concise robust representations come built point membership test natural choice creating editing programming solid models poor choice applications requiring point generation boundary traversal persistent spatial addressing 
contrast combinatorial representations provide explicit persistent spatially addressable enumeration solid boundary possibly interior perfectly suited applications requiring point generation sampling appear greater geometric coverage combinatorial representations verbose sensitive errors inconsistencies difficult create manipulate directly 
early solid modeling systems designed single carefully chosen representation schemes usually csg boundary representation mid virtually single representation systems enhanced extended auxiliary representation features making fact hybrid dual representation systems 
emerging architecture dual representation solid modeling systems shown 
constructive representation facilitates model creation editing terms application specific constructions reflect individual user concepts mentality associated combinatorial representation supports applications requiring generation traversal spatial referencing 
computations may performed representation 
combinatorial representation usually takes form boundary representation approximate polygonal model octree produced automatically constructive representation 
note representation conversion way constructive representation combinatorial partly inverse conversion problem difficult conversion process usually capture constructive semantics particular applications 
implies combinatorial representations allowed edited modified directly lead inconsistency representations 

parametric interaction late parametric modeling acquired new decisively critical ingredient constructions constraints applied interactively incrementally making direct previously constructed cellular representation geometry 
resulting construction method strongly reminiscent datum dimensioning system engineers resulting graphical user interface design examples inputs reals vectors integers algebraic expressions csg constructive csg representation representations combinatorial representations boundary evaluator evaluation rep data structures usually archived sampling grouping usually archived rendering analysis downstream applications classical open loop dual representation systems allowed constructive updates direct boundary modifications examples inputs reals vectors integers algebraic expressions csg points curves surfaces complete reps parametric csg representation feature constructive failures combinatorial representations boundary evaluator evaluation rep subsequent data structures constructions usually archived sampling grouping usually archived rendering analysis downstream applications modern systems general inputs parametric constructions refer previously constructed geometry guarantee result 
architecture classical dual representation solid modeling systems defined limited representation conversion technology architecture new parametric systems shown side side 
ers primary job produce engineering drawings fast mistakes 
new parametric solid modeling systems complex multi layered architecture shown schematically combines constructive combinatorial representations constraint solving heuristic algorithms 
earlier systems direct modifications cells boundary representation allowed architecture may lead loss consistency corresponding construction evaluation parametric edit modify cells boundary representation affecting constructions refer cell 
recall combinatorial representations including boundary representations support persistent spatial addressing means cell representation unique name identifies set points associated cell 
contrast constructive representations define sets points may indistinguishable case connected components disconnected set defined intersection simpler sets 
solid modeling construction refers particular cell boundary representation example new hole positioned respect existing face assumes cell persistent 
cell evaluated earlier construction may different name boundary model regenerated different time modified parameters conditions 
name cell changes constructions change semantics resulting drastically different underlying mathematical problem difficult may appear ordering connected components implicitly semi analytic set computing boundary combinatorics difficult enumerating multiple roots system equations solved 
unpredictable behavior see example 
problem assigning unique names cells boundary representation generated parametric definition came known persistent naming 
characterized formally solved certain conditions heuristic approaches proposed general solution known time 
come surprise architecture parametric modeling system illustrated allows failed operation feedback loop 
parametric solid modeling systems produce solid models constructions defined semantics guaranteed succeed solid results may predictable repeatable 
suppose moment completely solve difficult problems persistent naming representation conversion 
eliminate apparent difficulties parametric modeling 
hardly 
consider solid model generated response parametric change shown 
solid produced system correct 
depending definition correctness 
retrospect surprising parametric modeling guarantee properties results solidity 
classical mathematical models assumed scenario correspond instances reflect parametric nature modeling systems 

standards interfaces different users applications rely different systems representation schemes 
common approaches critical problem data exchange transfer include native translation neutral standard file format standardized programming interfaces 
general ubiquitous approach neutral format require knowing priori systems involved lead proliferation special purpose translators 
formats designed common csg boundary representations early adopted part international standards product data description 
currently underway extend formats representation parametric representations including specification common parametric constraints constructions 
allow systems exchange representation nominal solid syntax associated parametric family guarantee family valid systems see discussion 
commercial solid modeling systems provide application programming interface api allows access compute models system 
standardizing api way alleviate problem data exchange 
number limited proposals standard apis surveyed 
stratification solid model cells provides common theoretical framework unifying representations provides basis designing representation free api formal general 
initial effort goal described 
existing approaches data exchange standardization undermined accuracy robustness problems solid modeling 
recall fundamental operations particular stratification point membership classification computed exactly approximated systems 
different systems widely varying incompatible assumptions accuracy precision approximations times making data exchange standardization difficult impossible 
original solid constructed shown position parameters edit edit different commercial systems produce inconsistent incorrect parametric updates shown system edit system correctness parametric update depends definition parametric family transformations 
case transformation boundary representation relative orientation adjacent cells preserved 

absence standard mathematical models parametric solid modeling systems produce incorrect inconsistent results 


unsolved problems promising directions continuing improvements computer representations algorithms general computing technology led mature industrial strength implementation modeling scenario shown 
safe predict improving data structures increasingly complex geometric shapes relatively efficient tested algorithms fundamental enabling computations advantage latest techniques hardware increasing computing power result evolutionary progress specialized situations growing array engineering consumer applications 
advances solve major outstanding problems solid modeling require substantial revision fundamental premises assumed mathematical models 
number issues promising directions discussed logical order necessarily correspond importance priority 
robustness geometric modeling computations systems remained challenge despite numerous advances accuracy consistency see sample 
fundamental issue theory geometric solid modeling classical model exact geometry engineering data computations approximate 
strictly speaking means theorem exact geometry assumed hold approximate model proved presence errors 
compute results accurately consider special cases errors may lead inconsistent results contradictions 
ultimate solution robustness problem requires recognizing imprecise nature mathematical models reformulation key concepts computations 
example meaning approximate stratification intersection imprecise primitives related approximate point membership test 
persistent naming cells combinatorial representation terms primitives operations corresponding constructive representation required order support regeneration editing exchange parametric models 
mathematically problem reduces difficult problem indexing connected components implicitly represented set 
promising approach devise new class constructive representations component named persistently construction example interactive 
parametric families solids widely accepted poorly understood notion 
informally dealing families physical objects reasonable expect small changes values parameters solid result solid similar near original solid 
principle eliminate jumps sudden changes unpredictable behaviors observable current systems 
formally assumption corresponds notion continuity mapping parameter space space subsets representations 
lies major difficulty parametric modeling representation scheme way define notion continuity furthermore different solid representations schemes imply different parametric families 
specifically distinct methods defining continuous parametric families boundary representation vary widely computational properties 
expected csg boundary representations solid normally imply different families may related tools category theory 
parametric systems rely simultaneously constructive boundary representations generating classifying solids combined family maintaining consistency distinct parametric families emerged major technical challenge met hope computer interpretation parametric models required shape optimization standardization parametric definitions 
metrology includes issues accuracy variability measurement reconstruction important manufacturing applications 
pillars modern mass manufacturing doctrine interchangeability mechanical parts assembly main technical task deciding boundary representations belong continuous family requires constructing explicit maps may difficult impossible existing data structures designed model solid instances properly record changes orientation dimension 
calls precise geometric specification part may replace part assembly affecting functionality 
suggests strongly proper models mechanical parts include notion mechanical variation tolerance procedure deciding parts interchangeable 
simple minded approach mechanical endow parameters solid representation variations range 
easy implement approach suffers severe limitations including restriction perfect form ambiguous semantics 
geometric dimensioning gd approach consistent modern mechanical engineering practices notions tolerance zones gives basis various national international standards 
researchers proposed mathematical extensions solid modeling theory accommodate gd clear formal semantics national standards completely defined 
despite massive efforts standards time standard approach computational modeling tolerances defined may require fundamentally reformulating notions variational control 
absence common mathematical standard tolerances treated syntactically attributes attached labels solid features surfaces 
nominal solid models plan sampling points surface corresponding actual parts numerous commercial packages numerically fit sampled data curves surfaces typically proprietary algorithms fitting algorithms standard today 
interoperability refers ability solid modeling systems exchange compute models constructed systems applications 
plays role virtual interchangeability computer models mechanical parts 
full interoperability subsumes issues standardization representation conversions robustness defined semantics parametric models tolerances 
furthermore clear notion interoperability depends application type queries 
solid models may considered equivalent purpose space packaging studies point membership testing may interchangeable comes performing engineering analysis parametric studies manufacturing process planning 
systematic formulation solution problems critical fruitful area research 
physical field modeling natural generalization solid modeling aimed modeling spatially temporally distributed physical properties 
nutshell problem amounts developing methods representing constructing manipulating discrete continuous variations physical quantities defined geometric domain subject postulated physical laws 
example classical solid models presume material homogeneity new modeling techniques needed support design analysis manufacturing objects materials vary resulting products superior structural properties compliant mechanisms embedded sensors 
similarly engineering analysis requires representing computing assumed physical properties displacement energy temperature stress flux solid interior boundary 
predominant approach problems requires conforming approximation solid particular type spatial discretization supports numerical computations problem hand 
finite element finite difference meshing emerged major research area substantial bottleneck advances engineering analysis 
practical point view representation conversions computationally intensive numerically sensitive procedures difficult automate proliferation different incompatible techniques undermines standardization robustness integration interoperability efforts described 
fundamentally modeling physical fields generalize subsume continuum combinatorial solid modeling constructive combinatorial representations 
suitable continuum generalization set concept fiber bundle solid model playing role base space fiber space corresponding field defined solid 
corresponding generalization combinatorial model may defined algebraic topological finite cell complexes 
just notions boundary cycles needed define valid boundary representations dual notions formally capture combinatorial physical balance laws satisfied valid field models see 
reasonable expect models field problems continuum fiber bundles combinatorial provide different characterizations field lead computationally complementary representations 
example fiber bundle model naturally leads new methods field description analysis limited traditional mesh methods difficulties cochain models physical distributions instrumental developing new geometric languages describing physical phenomena improved numerical techniques preserve indicated physical laws 
operation cochain transfers coefficients cell incident cells sign depending relative orientation 
addition coefficients yields total quantities enter cells boundary 
repeating operation produces chain coefficients 
cochain associates coefficient cell represent distribution physical quantity cell complex case cochain vector quantity distributed boundary solid 
cochain corresponding model physical equilibrium respect physical quantity 

combinatorial models physical fields 
compare 
applications systems continue get faster robust sophisticated breakthroughs solid modeling technology require solving problems introducing new mathematical models paradigms 
application solid modeling engineering problems involving complex physics deformation phase changes example arising etching compression metal casting requires complete geometric characterization controlled transformations merging solid physical field modeling techniques 
contrast current trend function criterion driven design requires rethinking role geometric models synthesis mechanical artifacts centuries reduced catalogue search posteriori numerical analysis 
engineering function usually influences design shape geometry usually serves multiple functions 
somewhat paradoxically observations suggest synthesis tools may effective partial geometric information different stages turn demands updating classical notions informational completeness validity membership classification solid modeling include general physical process characteristics 

summary solid modeling conceived universal informationally complete geometric language describing physical artifacts support industrial automation 
dramatic effect areas classical notions sufficient 
evolutionary progress solid modeling decade led dramatic improvements speed reliability domain coverage widespread commercial solid modeling systems 
time solid modeling grew expanded point longer adequately supported original theoretical foundations 
emerging applications guarantee correctness results heuristic idealized geometric analysis physical problems 
guarantee possible expensive compute heuristic wrong answers tolerated long generated quickly checked human user system correctness downstream applications producing annotated engineering drawings manufacturing process planning engineering analysis 
validity guarantee appear replaced effective iterative paradigm demands speed interactivity supporting encouraging incremental improvements solid modeling technology 
longer term view field progress solid modeling requires development new mathematical models support computer representations increasingly complex physical artifacts 
pragmatic approach assume models may application dependent 
particular design analysis manufacture engineering systems driven manufacturing processes physical criteria variability incomplete information 
suggests corresponding notion informational completeness solid models modified recognize attributes important associated nominal geometry 
acknowledgments supported part national science foundation dmi dmi dmi ccr 
am grateful alberto numerous stimulating discussions course writing survey jeff lutz malcolm sabin nick herb voelcker careful reading criticism preliminary versions soo kim patience encouragement 

acm symposium solid modeling applications 
acm press 

abdel malek blackmore joy 
swept volumes foundations perspectives applications 
international journal shape modeling 
submitted 

max 
algebraic topology 
marcel dekker new york 


combinatorial topology volume 
press rochester new york 

arbab 
set models boolean operations solids assemblies 
ieee computer graphics applications pages november 

armstrong bowyer cameron jared martin sabin salmon 
geometric interface solid modeling 
uk 

david baraff 
issues computing contact forces non penetrating rigid bodies 
algorithmica 


geometric modeling computer vision 
computer science stanford university 

de 
representation management feature information cellular model 
computer aided design 

bloomenthal wyvill 
interactive techniques implicit modeling 
computer graphics march 

jules bloomenthal ken shoemake 
convolution surfaces 
computer graphics 

booker 
history engineering drawing 
publishing london 

bowyer 
user manual 
information uk 

boyer stewart 
modelling spaces objects 
international journal robotics research 

braid 
synthesis solids bounded faces 
communications acm pages 

braid stroud 
stepwise construction polyhedra geometric modeling 
mathematical methods computer graphics design ed 
academic press 


representing geometric structures dimensions topology order 
discrete computational geometry 

brunet 
solid representation operation extended octrees 

chen hoffmann 
generic naming generative constraintbased design 
computer aided design 

jeffrey shapiro 
data structure differential forms equations 
imacs transactions journal mathematics computers simulation 

chen hoffmann 
feature attachment 
computer aided design 

cremer steward 
architecture newton general purpose dynamics sim 
ieee international conference robotics automation pages 
ieee press 

dobkin laszlo 
primitives manipulation dimensional subdivisions 
proc 
rd symp 
computational geometry pages 

fortune ed 
special issue implementation geometric algorithms 
algorithmica 

egli stewart 
framework system specification chains cell complexes 
computer aided design 

elber kim 
special issue sweeps minkowski sums 
computer aided design 

ellis kedem menon voelcker 
engine ray representations 
proceedings symposium solid modeling foundations cad cam applications pages 
acm press 

guibas stolfi 
primitives manipulation general subdivisions computation voronoi diagrams 
acm transactions graphics 

choi prinz 
vertex representation non manifold boundaries 
turner editors geometric modeling product engineering pages 
north holland 


triangulation algebraic sets 
proceedings symposia pure mathematics algebraic geometry vol 
pages 

young 
topology 
dover publications new york 

hoffmann rossignac 
road map solid modeling 
ieee visualization computer graphics march 

hoffmann 
geometric solid modeling 
morgan kaufman usa 

hoffmann 
crc handbook discrete computational geometry chapter solid modeling pages 
crc press llc boca raton fl 

hoffmann 
kim 
valid parametric cad models 
computer aided design 


american system mass production 
johns hopkins university press 

hui 
solid modelling sweep csg representation 
proceedings csg set theoretic solid modelling techniques applications pages 

shapiro 
approach systematic part design 
proceedings th ifip wg workshop geometric modeling cad pages may 

shapiro 
dual sweep 
computer aided design march 

research triangle institute 
interoperability cost analysis automotive supply chain 
technical report nist 

qiang ji michael 
machine interpretation cad data manufacturing applications 
acm computing surveys 


mechanism persistently naming topological entities history parametric solid models 
computer aided design 

kumar burns dutta hoffmann 
framework object modeling 
computer aided design 

kuratowski mostowski 
set theory 
north holland publishing usa 

jean claude latombe 
robot motion planning 
boston kluwer academic publishers boston 

lee gossard 
hierarchical data structure representing assemblies part 
computer aided design 

lee lee 
partial entity structure compact non manifold boundary representation partial topological entities 
th acm symposium solid modeling applications ann arbor mi 

lee requicha 
algorithms computing volume integral properties solids ii family algorithms representation conversion cellular approximation 

lien james kajiya 
symbolic method calculating integral properties arbitrary nonconvex polyhedra 
ieee computer graphics applications 


subdivisions dimensional spaces dimensional generalized maps 
proc 
fifth acm annual symposium computational geometry pages 


light gossard 
modification geometric models variational geometry 
computer aided design 

lin gottschalk 
collision detection geometric models survey 
ima conference mathematics surfaces pages 
san diego ca 


triangulations semi algebraic sets volume series 
della normale di pisa 

lutz 
numerical methods near singular boundary integrals fracture mechanics 
phd thesis cornell university computer science department may 


solid modeling 
computer science press maryland usa 

marsan dutta 
survey process planning techniques layered manufacturing 
proc 
asme design technical conferences 
sacramento ca 


analysis finite volume finite element finite difference methods concepts algebraic topology 
comput 
phys 

mckinsey tarski 
closed elements closure algebras 
annals mathematics 

meagher 
geometric modelling octree encoding 
computer graphics image processing 

menon voelcker 
comprehensive formulation nc verification mathematical computational problem 
proceedings winter annual meeting asme volume pages 
anaheim ca 

menon voelcker 
completeness conversion ray representations arbitrary solids 
proc 
acm symposium solid modeling applications pages 
may 


applications vector sum operator 
computer aided design 

james 
elements algebraic topology 
addison wesley reading massachusetts 

connor rossignac 
dimension independent model internal structures incomplete boundaries 
ifip nsf workshop geometric modeling ny 
north holland september 

kubo 
tips technical information processing system computer aided design drawing manufacturing 
editor computer languages numerical control pages 
north holland amsterdam 

owen 
step 
information uk 

owen 
algebraic solution geometry dimensional constraints 
rossignac joshua turner editors proc st acm symposium solid modeling foundations cad cam applications pages 

owen 
survey unstructured mesh generation technology 
th international meshing roundtable 
michigan oct 

palmer shapiro 
chain models physical behavior engineering analysis design 
research engineering design 

bernardini cattani dimension independent modeling simplicial complexes 
acm transactions graphics 

henry paynter 
analysis design engineering systems 
press cambridge massachusetts 

pratt 
modelling material property variation layered manufacturing 
mathematics surfaces ix cambridge uk 

pratt 
solid modeling 
encyclopedia computer science technology volume supplement pages 
marcel dekker new york ny 

pratt bill anderson 
shape modelling application programming interface step standard 
computer aided design 


models representations parametric family parts 
phd thesis department mechanical engineering univeristy wisconsin madison september 
spatial automation laboratory technical report sal 

shapiro 
boundary representation deformation parametric solid modeling 
acm transactions graphics october 

shapiro 
consistent updates dual representation systems 
computer aided design 

ari 
geometric modeling new fundamental framework practical implications 
sma proceedings third symposium solid modeling applications pages 

requicha 
solid modeling update 
editor cad programming sensory robots pages 
springer verlag 

requicha 
mathematical models rigid solid objects 
technical report tm pap university rochester rochester ny november 

requicha 
representations rigid solids theory methods systems 
acm computing surveys december 

requicha 
theory geometric 
international journal robotics research 

requicha rossignac 
constructive non regularized geometry 
computer aided design january 

requicha 
mathematical foundations constructive solid geometry general topology closed regular sets 
technical report tm pap university rochester rochester ny june 

requicha voelcker 
constructive solid geometry 
technical report tm pap university rochester rochester ny november 

requicha voelcker 
geometric modeling applications mechanical design production 
tou editor advances information systems science vol 

plenum publishing 

requicha voelcker 
solid modeling historical summary contemporary assessment 
ieee computer graphics applications pages march 

requicha voelcker 
solid modeling current status research directions 
ieee computer graphics applications october 

requicha voelcker 
boolean operations solid modeling boundary evaluation merging algorithms 
proceedings ieee january 

ricci 
constructive geometry computer graphics 
computer journal may 

rossignac 
constraints constructive solid geometry 
proc 
workshop interactive graphics crow pizer eds pages 
acm press 

rossignac requicha 
offsetting operations solid modeling 
computer aided geometric design 

jarek rossignac 
cracks solid modeling 
coquillart eds editors object modelling advanced visualization 
springer verlag 

jarek rossignac requicha 
solid modeling 
ieee computer graphics applications pages september 

jarek rossignac requicha 
solid modeling 
webster editor encyclopedia electrical electronics engineering 
webster john wiley sons 

jarek rossignac herbert voelcker 
active zones csg accelerating boundary evaluation redundancy elimination interference detection shading algorithms 
acm transactions graphics 

roth 
ray casting modeling solids 
computer graphics image processing 


theory functions applications 

russian 

shapiro 
transfinite interpolation implicitly defined sets 
computer aided geometric design 

sabin shapiro 
modifications cellular models 
technical report na university cambridge uk september 


advanced techniques automatic finite element meshing solid models 
computer aided design 

shapiro 
representations semi algebraic sets finite algebras generated space decompositions 
phd thesis cornell university cornell programmable automation ithaca ny february 

shapiro 
theory functions applications primer 
tech 
report tr computer science department cornell university ithaca ny 

shapiro 
maintenance geometric representations space decompositions 
ternational journal computational geometry applications 

shapiro 
simulation deforming domains 
computer aided design 

shapiro voelcker 
role geometry mechanical design 
research engineering design 

shapiro 
construction optimization csg representations 
computer aided design january 

shapiro 
separation boundary csg conversion 
acm transactions graphics january 

shapiro 
parametric family solids 
rd acm symposium solid modeling applications salt lake city utah may 

yagel 
rapid previewing volume solid modeling 
proceedings rd symposium solid modeling applications pages 


silva 
alternative definitions faces boundary representations solid objects 
technical report tm pap university rochester rochester ny november 

john snyder james kajiya 
generative modeling symbolic system geometric modeling 
computer graphics siggraph proceedings volume pages 

brunet 
system constraint modelling 
kunii editors modeling computer graphics pages 
springer verlag new york 

alexander 
function representation sweeping moving solid 
ieee transactions visualization computer graphics 

srinivasan 
efforts asme ansi standard 
proc 
rd cirp seminars computer aided pages 
editions paris 

srinivasan 
geometric product specification language classification symmetry groups 
computer aided design 

william thibault bruce naylor 
set operations polyhedra binary space partitioning trees 
computer graphics 


set membership classification unified approach geometric intersection problems 
ieee transactions computer october 


exploiting spatial structural locality geometric modeling 
technical report tm pap university rochester rochester ny october 

requicha 
closure boolean operations geometric entities 
computer aided design september 

robert 
extending solid modeling systems mechanism design kinematic simulation 
ieee computer graphics applications 


formal structure physical theories 
istituto di matematica del politecnico di milano milan 

national research council unit manufacturing process research committee 
unit manufacturing processes issues opportunities research 
national academy press 

martin cox 
reverse engineering geometric models intro duction 
computer aided design 

voelcker 
modeling design process 
dale compton editor design analysis integrated manufacturing systems 
national academy press washington dc 

voelcker 
current state affairs dimensional 
integrated manufacturing systems 

voelcker requicha 
research solid modeling university rochester 
editor fundamental developments computer aided modeling 
academic press london 

wang wang 
geometric modeling swept volume moving solids 
ieee computer graphics applications pages 

weiler 
topological structures geometric modeling 
phd thesis rensselaer polytechnic institute 

whitney 
elementary structure real algebraic varieties 
annals mathematics november 

whitney 
local properties analytic varieties 
editor differential combinatorial topology symposium honor morse pages 
princeton university press 

woo 
combinatorial analysis boundary data structure schemata 
ieee computer graphics applications 


blends geometric modeling 
martin editor mathematics surfaces ii pages 


yamaguchi kimura 
topology coupling entities 
ieee computer graphics applications january 


engineering analysis subsets 
phd thesis cornell university ithaca ny may 
index algorithms smc boundary evaluation boundary csg conversion comparison csg boundary conversion distance computation enabling fundamental mass properties ordering planning generation pmc point generation polygonization ray casting rendering sampling boolean operations closure regularized requirements boundary cycle combinatorial evaluation manifold merging representation manifold non manifold point classification properties winged edge bsp trees carrier cell cell carrier properties representations cell complex solid model incidence representations type cells chains algebraic topological classification point set membership algebraic topological completeness informational csg constructive solid geometry design automatic constraints geometric parametric dimensional reduction euler characteristic characteristics operators feature recognition fiber bundles field modeling frontier condition groupings dimensional properties informational completeness interoperability cycle boundary manifold definition solid mass properties meshing modeling assembly continuity deformations materials lumped parameter systems mechanisms motion nc machining physical fields solid tolerances unit processes motion planning neighborhood constant cell point octrees parametric constraints design families persistent naming pmc point membership classification point classification generation polyhedron topological primitives candidate functions ray casting tracing regular sets regularization representations boundary bsp trees cell complexes constructive conversion csg enumerative grouping implicit implicit functions octree cells scheme stl sweep unified winged edge functions reverse engineering robustness sets closed regular semi analytic smc set membership classification solidity combinatorial model cell complex generalized model manifold point set model closed regular sets postulates semi analytic sets spatially addressable standards data exchange stratification computing definition intersection sign invariant whitney regular sweep applications definition point classification systems classical dual representation parametric tolerances triangulation whitney regular stratification winged edge data structure 
