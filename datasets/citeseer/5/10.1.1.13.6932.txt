find files 
new methods automating attribute assignment attribute naming enables powerful search organization tools increasing user data sets 
tools useful combination accurate attribute assignment 
existing systems rely user input content analysis enjoyed minimal success 
discusses new approaches automatically assigning attributes files including forms context analysis highly successful google web search engine 
extensions application hints web links downloaded files inter file relationships possible infer useful attributes files making attribute search tools effective 
storage capacity increases amount data belonging individual user increases accordingly 
soon storage capacity reach point reason user delete old content fact time required wasted 
challenge shifted deciding keep finding particular information desired 
meet challenge need better approaches personal data organization 
today systems provide tree directory hierarchy organize files 
easy users reason provide flexibility required scale large numbers files 
particular strict hierarchy provides single categorization cross referencing information 
deal limitations groups proposed alternatives standard directory hierarchy :10.1.1.34.6746:10.1.1.17.1174
systems generally assign attributes files providing ability cluster search files attributes 
attribute metadata describes file systems keywords category value pairs 
key challenge assigning useful meaningful attributes files 
assign attributes systems suggested largely unsuccessful methods user input content craig soules gregory ganger carnegie mellon university analysis 
users understanding files create time consuming unpleasant distill information right set keywords 
result users understandably reluctant 
hand content analysis takes user time performed entirely background eliminate potential performance penalty 
unfortunately complexity language parsing combined large number proprietary file formats non textual data types restrict effectiveness content analysis 
complementary alternative methods context analysis 
context analysis gathers information user system state creating accessing files uses assign attributes files 
useful ways 
context related content file 
example user may read email friend dog look picture dog 
second context may user remembers best searching files 
example user may remember working downloaded file named file 
discusses categories context analysis access context analysis inter file context analysis 
gathers information state system user accesses file 
second propagates attributes related files 
combining methods existing content analysis user input increase information available attribute assignment 
remainder organized follows 
section discusses background related 
section describes access context analysis 
section discusses recognition inter file relationships 
section presents initial findings 
section discusses challenges facing ideas approach 
background users difficulty locating files 
exist variety tools locating files searching directory hierarchies don solve problem 
groups proposed attribute naming systems rely user input content analysis gather attributes remain largely unused 
web search engines greater success obtaining attributes combining content analysis context analysis 
section discusses common approaches file organization proposed systems relevant web search engine approaches 
directory hierarchies key factors limit scalability existing directory hierarchies 
files hierarchy single categorization 
categories grow finer choosing single category file difficult 
linking giving multiple names file provides mechanism mitigate problem exists convenient way locate update file links reflect re categorization unidirectional 
second information describing file lost defined detailed naming scheme 
example name family picture contain names family member 
third related files placed common sub tree relationship lost 
way try overcome limitations provide tools search hierarchies 
today unix systems users locate files tools find grep 
tools provide ability search hierarchy text file providing rudimentary content analysis 
glimpse system provides similar functionality utilizes index improve performance queries :10.1.1.17.6054
microsoft windows search utility provides similar indexing service filters gather text known file formats word documents 
going step systems perform content analysis known file formats provide attribute searching features hierarchy locating function definitions source code 
proposed systems go limitations directory hierarchies groups proposed extending file systems provide attribute indexing 
example extends directory hierarchy adding new organizational structure indexing files attribute 
system takes set file keyword pairings creates index allowing fast lookup attribute value return associated file 
structure useful files set known attributes index email message sender 
semantic file system provides way assign generic category value pairings files increasing scope namespace 
attributes assigned user input file content analysis 
content analysis done set transducers understand single known file format 
attributes assigned user create virtual directories contain links files particular attribute 
search narrowed creating virtual subdirectories 
groups explored ways merging hierarchical attribute naming schemes 
detail set rules constructing various hierarchical flat namespaces venn diagrams 
gopal defines goals merging hierarchical name spaces attribute naming evaluates system meets goals 
groups looked problem providing attribute naming scheme network computers 
harvest scatter gather system provide way gather merge attributes number different sites :10.1.1.34.6746
semantic web proposes framework annotating web documents xml tags providing applications attribute information currently available 
systems provide number interesting variations attribute naming 
rely user input content analysis provide useful attributes limited success 
context analysis early web search engines lycos relied user input user submitted web pages content analysis word counts word proximity 
valuable success systems success google :10.1.1.109.4049
provide better search results google utilizes forms context analysis 
uses text associated link decide attributes linked site 
text provides context creator linking site user clicks link site 
times particular word links site higher word ranked site 
second google uses actions user search decide user wanted search 
example user clicks links search return fourth link best match 
provides user context search terms user believes terms relate particular site 
unfortunately google approach indexing translate directly realm file systems 
information google relies links pages exist file system 
google query feedback mechanism relies properties users normally looking popular sites perform query large user base repeat query times 
unfortunately properties true file systems users usually search files accessed long time usually remember accessed files reside access directly generally single user set files frequent queries generated file 
access context analysis section outlines approaches automatically gathering attributes file created accessed 
approaches context user session time file accessed assign attributes 
uses application assistance second uses existing user inputs 
application assistance computers provide vast array functionality people computer limited set tasks 
tasks performed small set applications turn access create user files 
modifying applications provide hints user context provide invaluable attribute information 
example user executes web search downloads pictures pictures similarly user saves email attachment subject email re marketing report attachment related marketing report existing user input users willing input additional information willing choose directory name file 
sub directories path file name probably contain context information assign attributes 
example user stores file papers fs attribute semantic ps believe file having fs attribute semantic google attribute file system obtain information user queries 
user initially queries system semantic file system chooses file contains attribute semantic addi tional terms file system applied file 
possible matches order system believes relevant having user choose files list may indicator success failure 
done web search engines system elicit feedback user query completed allowing indicate success query sort scale 
unfortunately mentioned individual files queries reducing amount information available method 
inter file relationships relationships established attributes shared related files 
helps propagate attributes individually hard classify files 
conjunction approaches generate attributes application assistance content analysis propagation categorize broader set files 
section outlines approaches automatically gather inter file relationships 
approach leverages user access patterns second approach examines content similarities potentially related files 
user access patterns users access files pattern accesses provides set temporal relationships files 
relationships previously guide variety performance enhancements 
possible information help propagate information related files 
example accessing ps gopal ps followed updating related tex may indicate relationship files 
subsequently accessing related tex creating files ps may indicate transitive relationship 
inter file content analysis content analysis continue important part automatically assigning attributes 
addition existing file analysis techniques focus creating context connections files suggests source attributes content relationships 
example current file systems hashing eliminate duplicate blocks file system locate similarities non block aligned boundaries :10.1.1.18.8085:10.1.1.10.8444
content overlap identify related files treating files large matching data sets related 
users system keep slightly different versions file 
files generally contain differences inherent information contained change user may keep instances resume focused different type job application 
gives sys tem opportunities content analysis 
content comparison identify related files 
second performing content analysis solely differences versions may possible determine attributes making easier users locate individual version instances 
initial findings section discusses insights drawn trace analysis user activity 
exploring creation time attributes shows charts indicating percentage files created different programs single user home directory 
data gathered trace single graduate student home directory tree month period 
chart shows breakdown file created directory tree 
second chart shows breakdown files explicitly organized user created named program believed permanence temporary scratch files 
excludes things caches logs program configuration files compiler output cvs source repositories organized external entity generally programs create 
large number files created user home directory files organized user invoked programs user 
user organized files trace created applications text editor email program emacs web browser mozilla document creation tools latex 
created various manual fs tools cp cat 
examining results suggests combination automated attribute assignment techniques described provide useful context information web browser generate hints files creates 
example trace file docs online pdf downloaded doing search sml robert harper clicking robert harper home page sml programming guide located 
files created text editors generally accessed conjunction various files creating inter file relationships 
trace source code files accessed conjunction file named class homework tex programs create files 
shows programs created files single graduate student home directory 
chart left shows breakdown created file 
files category caches web pages email archived source code tar gzip cvs repositories heavily 
chart right shows files explicitly organized student 
include files downloaded web hand edited files files created creation tools image technical poster 
ing files probably related class homework document creation tools latex take input different files output single postscript file homework ps 
relationship distill input attributes smaller set shared attributes assigned output file 
shared attributes passed back input files 
image manipulation program create poster outlining importing text images variety related sources resulting similar relationship 
exploring inter file relationships examine inter file relationships created simple tool extract inter file relationships trace 
tool tracks file access program relates file file accessed 
relationships form groupings related files 
method tool successfully groups files correctly manual inspection owner 
example source tree grouped resulting program output backup variety unrelated source files separated 
unfortunately grouped source tree variety unrelated files false positives 
examination false positives showed created occasional find grep 
graduate student question uses find grep search content particular files 
attribute naming system find grep replaced integrated searching system 
removes false positives potentially improve accuracy feedback user queries described section 
ongoing challenges initial results encouraging large number challenges described 
section outlines challenges initial ideas approach 
system evaluation research challenges faced exploring automated attribute assignment evaluating accuracy 
groups done automated file content analysis little evaluation accuracy mechanisms reported 
probably due difficulty evaluation accurate importantly true value kind system helping users locate lost files difficult demonstrate long term deployment 
unfortunately getting users system proving value difficult resulting classic catch possible approach feed trace user activity application hints attribute assignment system compare results attribute assignment done user 
unfortunately approach fails account user behavior 
user may initially categorize file way may look way 
example search terms year file creation may differing initial categorization 
mechanisms successfully assigning file attributes step creating attribute naming system important aspects mechanism storing attribute mappings user interface system 
mentioned section groups looked methods storing attribute mappings 
methods generally worked small number attributes 
automatically identifying large numbers attributes challenges arise 
existing methods may need extended handle large numbers attributes 
second system identify relevant attributes file large set associated attributes weighting false positive removal 
groups looked problem user interfaces attribute naming system 
stores file attribute pairings database provides variety file visualizations help user locate files 
lifestreams provides time ordered stream incoming information user simple interface filtering sorting information variety attributes :10.1.1.55.8788
complements may provide useful insight aspects attribute naming 
user context switches context information potential provide large number useful attributes 
user switches context relationships created may invalid 
helpful system notice user context switches 
solution user input user indicates system currently working 
user diligent system may create false positives 
possibility infer user context switches actions 
example switching particular application email browser may consistently indicate context switch 
data set associated user grows organizing information difficult 
hierarchies useful aspects scale 
flexible attribute naming scheme needed effectively manage large personal data sets 
proposes automating attribute assignment access context analysis inter file relationships 
obtaining new attributes schemes greatly increase utility attribute naming 
acknowledgments members companies pdl consortium including emc hewlett packard hitachi ibm intel microsoft network appliance oracle seagate sun veritas interest insights feedback support 
berners lee hendler lassila 
semantic web 
scientific american 
bolosky goebel douceur 
single instance storage windows 
usenix windows systems symposium pages 
usenix association 
bowman danzig manber schwartz 
scalable internet resource discovery research problems approaches 
communications acm 
brin page :10.1.1.109.4049
anatomy large scale hypertextual web search engine 
computer networks isdn systems 
cutting karger pedersen tukey :10.1.1.34.6746
scatter gather cluster approach browsing large document collections 
acm sigir international conference research development information retrieval pages 
acm 
fertig freeman gelernter 
lifestreams alternative desktop metaphor 
acm sigchi conference pages 
gemmell bell drucker wong 
fulfilling memex vision 
acm multimedia pages 
acm 

practical file system design file system 
morgan kaufmann 
gifford jouvelot sheldon toole jr semantic file systems 
acm symposium operating system principles 
published operating systems review october 
gopal manber 
integrating content access mechanisms hierarchical file systems 
symposium operating systems design implementation pages 
acm 
hardy schwartz 
essence resource discovery system semantic file indexing 
winter usenix technical conference pages 
kuenning popek 
automated hoarding mobile computers 
acm symposium operating system principles 
published operating systems review 
acm 
macdonald 
file system support delta compression 
masters thesis 
department electrical engineering computer science university california berkeley 
manber wu 
glimpse tool search entire file systems 
winter usenix technical conference pages 
usenix association 
mauldin 
retrieval performance ferret conceptual information retrieval system 
acm sigir conference research development information retrieval pages 
acm press 
kandemir choudhary 
exploiting access patterns multi collective conference file storage technologies pages 
usenix association 
muthitacharoen chen mazieres 
low bandwidth network file system 
acm symposium operating system principles 
published operating system review 
acm 
quinlan dorward 
venti new approach archival storage 
conference file storage technologies pages 
usenix association 
feeley hutchinson veitch 
deciding forget elephant file system 
acm symposium operating system principles 
published operating systems review 
acm 
www com 

blending hierarchical attribute file naming 
international conference distributed computing systems pages 
steffen 
interactive examination program 
winter usenix technical conference pages 
usenix association 
strange 
analysis long term unix file access patterns applications automatic file migration strategies 
ucb csd 
university california berkeley computer science department august 
