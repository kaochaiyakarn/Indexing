th acm symposium operating system principles sosp mesh content routing xml alex snoeren kenneth david gifford mit laboratory computer science cambridge ma developed new approach reliably multicasting data heterogeneous clients mesh overlay networks 
facilitate intelligent content pruning data streams comprised sequence xml packets forwarded application level xml routers 
xml routers perform contentbased routing individual xml packets routers clients queries describe information needs downstream nodes 
pc xml router prototype route mbit second xml stream 
routers novel diversity control protocol dcp router router router client communication 
dcp received stream packets senders copy packet arrive sender 
node connected parents resulting network resilient router independent link failures repair 
associated mesh algorithms permit system recover resilience node link failure 
deployed distributed network xml routers streams real time air traffic control data 
experimental results show multiple senders improve reliability latency compared tree networks 
research motivated interest highly reliable data distribution technologies deliver information clients low latency presence node link failures 
low latency crucial certain data extremely time critical 
example real time trading systems rely timely arrival current security prices air traffic control systems require second data aircraft position status gaps delay live network video audio feeds distracting 
research supported part darpa 

alex snoeren supported national defense science engineering graduate fellowship 
snoeren gifford lcs mit edu environments sub second pause data feed delivery network retransmits reconfigures may unacceptable 
studies shown internet recovers failures slower scale order minutes :10.1.1.161.2760
observe achievable latency reliable data stream bounded packet loss recovery mechanism 
packet losses handled retransmission redundant coding 
retransmission methods limit recovery time round trip delay communicating nodes 
order avoid retransmission face loss redundant data sent 
assumption certain cases value reliable timely data delivery may justify increased transport costs cost increase allows meet desired reliability goal 
systems try avoid delay penalty loss resistant coding schemes encode redundant information data stream 
extend redundancy network delivery paths senders 
overlay networks shown multiple distinct paths exist hosts internet :10.1.1.161.2760
attempt leverage redundant network links 
may consider additional bandwidth wasteful believe system described presents interesting elegant method utilizing additional network resources achieve levels reliability latency previously difficult obtain 
basic approach construct content distribution mesh node connected parents receiving duplicate packet streams parents 
value configuration parameter select desired trade latency reliability transport costs 
maintaining acyclic mesh approach guarantees minimum cut mesh nodes independent links 
mesh resilient node independent link failures say resilient repair 
mesh failure occurs recovery algorithms restore mesh resilience seconds 
architecture overlay network transports xml streams 
xml packet single independent xml document 
xml stream sequence xml packets xml packet stream different document type definition dtd 
clients join overlay network specify xml query describes xml packets receive 
job overlay network configure deliver desired xml stream client reasonable cost reliability goals 
queries expressed general language xquery 
overlay network implemented xml routers 
xml router node receives xml packets input links forwards subset xml packets receives output link 
output link query describes portion router xml stream sent host link 
xml routers components distributed network implement selective forwarding xml packets subscriptions described queries 
xml number advantages byte stream multicast delivery 
xml permits network interpret client data needs terms defined xml queries 
second xml packets suggest logical units data processed client aid network scheduling 
third tools standards exist xml making easy data originator receiver build robust applications 
approach allows applications databases push part processing network fabric 
expect query languages xquery standardized allowing single language describe data requirements 
standardization permit applications program network fabric deliver data need simple consistent fashion 
primary disadvantage xml thought increased number bytes required represent information xml compared application specific encoding 
experimental results suggest conventional data compression eliminates disadvantage 
xml stream decompressed router wishes query matching router passes packets client bypass xml switch component entirely decompression compression need performed 
routers include fast path clients subscribe unfiltered xml stream 
distinct novel contributions xml routing 
best knowledge describe packet network xml router support arbitrary content routing 
believe systems xml routing useful wide variety contexts efficient xml wrapper overhead removed appropriate data compression technology 
mesh overlay networks 
describe overlay network multiple redundant paths simultaneous transport multicast streams 
mesh approach offers better latency performance tree approaches 
diversity control protocol 
describe novel protocol uses source independent sequence numbers reliably reconstruct sequenced packet stream multiple sources 
dcp reduces latency improves reliability compared conventional single sender approaches 
remainder describes current xml routing infrastructure sections previous section architecture xml routing system section mesh algorithms distribution protocol section experimental results air traffic control application section issues involved routing xml mesh section section previous xml routers dcp builds large body past reliable multicast overlay networks 
consider related areas reliable multicast overlay networks redundant coding transmission schemes publish subscribe networks 
reliable multicast reliable multicast systems send stream packets set receivers 
reliable multicast systems built ip multicast 
ip multicast packets duplicated network layer late possible minimize network resources consumed deliver single packet multiple receivers 
acknowledgments required ip multicast reliable 
packet damaged transmit lost receiver send negative acknowledgment sender lack positive acknowledgment receiver cause sender retransmit 
express single source multicast system simplifies ip multicast face multiple data sources integrated network fabric 
particular note rmx shares similar goals 
rmx provides real time reliable multicast heterogeneous clients application specific transcoding gateways 
example supports re encoding images lossy compression service provisioned clients 
xml tags architecture allows similar functionality provided general fashion having clients different resource constraints subscribe different non disjoint portions data stream 
overlay networks overlay network virtual network fabric implemented application level routers communicate clients normal ip network facilities 
overlay networks typically reliable point point byte streams tcp implement reliable multicast 
goal overlay network typically provide increased robustness additional sophisticated network services wide area stream broadcast underlying network assistance :10.1.1.19.7440:10.1.1.161.2760
fact network operators may unaware services running network 
advantage building network overlay easy modify deploy cooperation network providers 
adopted overlay networks effective way build robust mesh effectively route xml packets 
system multicast overlay multicast system constructs meshes spanning tree discovery redundant mesh links information delivery 
redundant encoding transmission loss tolerant encoding schemes termed erasure tornado forward error correcting fec codes redundant information support reconstruction data stream face certain amount packet loss 
example digital fountain meta content protocol packets encoded allow receiver recover data stream certain fraction meta content packets received 
approach redundancy sender channel diversity loss tolerant encoding schemes typically packet diversity 
channel diversity experimental data suggests internet packet errors highly path dependent :10.1.1.134.20
sender diversity single sender systems sender failure cause stream gap recovery 
assumptions believe appropriately configured levels mesh redundancy sender channel diversity provide lower loss rates latency packet diversity albeit higher cost 
previous systems leveraged channel diversity sender diversity fashion 
routing ida split transfer information multiple network paths provide enhanced reliability performance 
simulation results analytic studies shown benefits approach 
addition tornado codes suggested combine parallel downloads improve reliability performance 
application level routing ida parallel downloads multiple network paths provide loss recovery single path network fabric 
application level routers allows perform loss recovery inside network fabric improve loss resilience 
block encoding scheme digital fountain may add additional latency decoding 
discuss loss resilience results section 
publish subscribe systems publish subscribe networks tibco tib tm rendezvous elvin siena gryphon permit receivers specify portion data stream receive 
receivers typically subscribe messages query summarizes interests 
streams may encoded content varying levels fidelity may requested client 
siena gryphon provide distributed implementations singly connected graphs information distribution provides xml routing 
publish subscribe system xml packet streams permits queries specific header field 
semantics permit queries field xml packet 
believe overhead making xml packet fully formatted document small price pay resulting flexibility rational query semantics 
especially case data compression causes markup overhead xml packet negligible 
knowledge existing stream publish subscribe network uses redundant meshes reliability performance enhancement 
resilient mesh networks shown typical overlay network routing xml stream contains root routers variable number internal routers variable number edge clients 
root routers origin data assumed independent means generating xml stream 
internal routers receive xml stream parent routers mesh network comprising root routers inner xml routers clients 
ward elements stream children required 
clients connect routers provide query describes portions xml stream receive 
content carried routers mesh statically dynamically configured 
typically static configuration internal routers carry xml packets available root routers 
static approach content configuration clients wide choice routers service request reconfiguration delay 
unfortunately mesh requires fixed bandwidth capacity 
leverage expressive power xml better control bandwidth usage 
dynamic content configuration allows router carry packet stream necessary service children 
case router queries receives children forwards resulting query parent routers 
note router combines queries children subscribing parent routers router need store queries immediate children 
results significant bandwidth savings clients full contents data stream 
disadvantage scheme mesh may sufficient number routers currently carry traffic needed node searching additional parent mesh construction repair 
client requests information available portion mesh delay mesh supply required information additional startup delay tolerable situations 
reconstruction data available current parent set 
initialization simply adds slight additional startup latency 
clients wishing join resilient mesh perform distinct operations composing xml query describes data desired contacting existing routers service query sending routers xml query composed receiving xml stream described query 
particular algorithm discovering routers described section 
router includes query table describes portion xml stream children wishes receive 
router functions splitter takes single xml stream refines child 
child interested subset stream air traffic landing seattle 
expressing desire routers saves mile bandwidth host processing 
architecture admits xml combining routers 
combining router merges xml feeds different sources single xml feed 
accomplished simply forwarding unmodified packets sources involve application specific processing 
example air traffic control application investigating merging xml stream air traffic data xml stream runway conditions 
call node resilient combination nodes independent links mesh fail node receive xml stream 
say mesh resilient nodes resilient 
level resilience network vary needs clients 
heretofore described uniform mesh architecture fixed router fan entirely possible build meshes non uniform fan 
constraint order assure desired level resilience way root resilience child parents equal greater child desired resilience 
example build core network resilient certain clients choose resilient 
failure core router reduce resilience level peripheral routers clients mesh reconfigure mesh continue provide service clients clients directly connected failed node 
certain circumstances may sense improve resilience key portions network provide service clients 
investigating issues surrounding optimal mesh configuration 
algorithms protocols xml router implements key algorithms protocols xml router core 
xml core engine receives forwards packets queries 
job efficiently evaluate received xml packet output link queries 
diversity control protocol dcp 
dcp implements resilient mesh communication allowing receiver reassemble packet stream diverse sources 
mesh initialization maintenance 
set algorithms automatically organizes routers clients mesh repairs mesh faults occur 
xml router core shows internal structure xml router 
xml router consists major components input component acquires xml streams presentation xml switch 
input component responsible maintaining dcp connections parents router implementing mesh initialization reconfiguration algorithms 
addition input component implements data decompression 
input component connect tcp xml streams compatibility 
instances input component acquire single xml stream routing input component connect distinct meshes merge multiple xml streams routing 
input component responsible forwarding disjunction link queries parents 
dcp tcp input xml switch output dcp tcp link query internal architecture xml router comprises input component xml switch output component 
output link queries control xml packet forwarding 
xml switch compares received packets link queries forwards matching packets requesting links 
efficient xml switch attempts combine distinct link queries single state machine matches link queries single pass incoming packet 
output component forwards packets output links dcp 
addition output component responsible handling join requests prospective children implements link data compression 
output component additionally produce tcp xml streams potential compatibility non dcp children 
diversity control protocol diversity control protocol dcp named inherent sender diversity implements 
essential idea dcp receiver reassemble packet stream diverse senders 
dcp stream packets sent receiver multiple sources desired level redundancy may vary nodes mesh 
shown dcp receiver packet stream error free packet received source 
sequencing proper order packet stream reassembly requires dcp packets assigned identifiers admit total ordering total ordering known participants 
dcp requires identifiers obey invariants content stream packet identifiers associated packet content sender specific 
allows receivers properly reassemble stream identifiers 
packets may travel variable number intermediate router hops identifiers particular stream selected root routers remain identifiable diversity control protocol dcp packet stream diverse senders 
mesh 
set root routers particular stream originate packet stream assign identifiers packets 
true root routers generate stream precisely time rate 
receiver identifier processing admit gaps 
intermediate routers may forward packets containing content requested particular receiver identifiers packets received 
approach satisfying invariants assign monotonically increasing bit application serial number dcp packet packet created root router 
router forwards dcp packets maintains packet sent output link 
sent link included packet packet current number 
including client specific previous packet permits receiver reassemble stream packets sender presence missing ans 
application missing ans caused filtered xml packets 
routers may remove packets datagram stream dcp reliable transport protocol 
missing datagram indicated hole sequence chain retransmitted 
order maintain redundancy invariants mesh retransmissions requested hop endto 
similarly packets buffered transmitted order hop 
ensures node consider parent independent source ordered datagrams 
return consider implications order forwarding section 
dcp currently uses udp transport mechanism facilitate deployment application layer 
distinct dcp streams currently transmitted separate udp ports 
application dcp packet transport xml packet 
possible xml packets relatively small 
xml packets fit single ip packet envelope describe xml packet number transmitted ip packet xml packet 
important invariant content packet generated 
ver 
flags checksum previous dcp packet header shows layout dcp packet 
addition ans mentioned dcp packet includes bit version number allow dcp evolve set bit flags 
flags permit sender request acknowledgment receiver send acknowledgment request retransmission exchange keep alive connection establishment tear information 
entire packet covered bit checksum may optionally disabled encapsulated udp carrying streams insensitive corruption 
dcp datagram protocol dcp equally suited transmission byte streams 
bit flags field indicate dcp operating stream mode 
stream protocol simply refers sequence number byte datagram tcp 
similarly previous refers byte previous packet stream mode 
note construction allows fragmentation dcp packets desired albeit expense additional complexity buffering receivers 
additionally multiple root servers server take care sequence data identically 
datagram streaming mode dcp connection 
retransmission receiver joins multiple dcp senders waits packet arrive hosts uses packet current 
packets subsequently received lower current discarded packets received buffered 
packet current previous field considered packet reassembled stream current updated 
receiver receive appropriate packet fixed interval sends negative acknowledgment nack senders current 
retransmission sent receiver requesting 
fashion similar tcp fast retransmit nack generated shorter timeout packet subsequent received indicating lost reordered packet 
nack serves request senders retransmit packets receiver current 
assuming regular mesh construction equal numbers parents children negative acknowledgment process suffer ack implosion high degree 
individual receiver generates nack received parents 
due assumed pairwise independence packet loss distinct senders receivers probability drops exponentially degree discussed section 
probability sender receives nacks decreases increasing degree avoiding nack implosion problem 
senders transmit packets order receiver request acknowledgment receiver time time 
current implementation requests positive acknowledgment fixed number packets sent 
receiver responds request acknowledgment acknowledgment contains byte streaming mode processed 
serves limit amount buffering required node allows rapid resynchronization senders receivers 
current sender sent byte transmissions byte 
receiver send unsolicited acknowledgment sender 
contrast receiver continually fails respond acknowledgment requests persistently lags sequence space indicating insufficient bandwidth sender receiver connection terminated 
receiver reconnect new point mesh presumably higher bandwidth link 
mesh formation maintenance mesh begins life set root routers capable supplying xml stream interest 
assume failures root routers independent independent means deriving xml stream 
noted roots uniform dcp packetization sequence number selection 
additional roots may added mesh time provided mechanism synchronize content stream existing root nodes 
mesh discovery outside scope document method distributing set root nodes particular content stream dns 
ip addresses root routers service stored dns address record 
example stream asdi faa gov dns name maps set root routers supply xml stream air traffic control data north america 
adding routers clients new internal router added mesh statically configured set parents new router select parents performance experiments 
wide variety automatic configuration algorithms form mesh depending particular desires node 
may vary widely depending mesh controlled single administrative entity concerned characteristics mesh resilience depth new node specific purpose 
clients join mesh fashion 
specify particular algorithm policy admit host possibilities providing set mesh primitives new nodes discover topology mesh locate 
router supports primitives join new node added child router query provided current node willing admit child query 
children router responds children subscribe subset full child list may elicited specifying query matches entire stream 
parents router responds parent set 

initialize set root routers 

node send join request remove node 
node accepts join add parent set quit 

node declines join ask list children add 
empty go step 
parent selection algorithm 
node runs algorithm construct resilient mesh 
operations possible new node completely walk mesh determine optimal location 
note optimum location may vary depending particular desires joining node 
currently implemented simple algorithm automatic parent selection client seeking resilience shown 
simple algorithm seeks find set routers closest root routers uses timing responses select candidates 
algorithm assumes potential parents configured reject join requests maximum desired capacity wish service requested query 
contemplate additional research improved algorithms depth mesh observed packet latency select optimal parents new child 
routers may refuse serve parents policy reasons receiving portion xml feed necessary service new child query subscribed 
prospective parent receiving part feed necessary new child prospective parent may configured push expanded query parent propagating information request mesh 
mesh repair mesh repair algorithm recovers parent failures 
parents node fails node actively attempts join new parent 
method obtain new parent currently identical obtain initial parents caveat 
guarantee mesh acyclic router maintains level number greater maximum level parents 
router level number established router joins network 
mesh recovery router join parents level number level number 
possible recovery router disconnect children cold re initialization return desired level resilience 
repair algorithm recovers resilience mesh non root router fails 
discussed earlier resilience fundamental property acyclic mesh child parents 
seen forming acyclic graph dual mesh 
dual graph child represented vertex directed edges child parents 
min cut graph vertices edges vertex degree nodes distinct paths fail node connected root 
due occasional internal node failures mesh repaired algorithm tendency flatten time nodes forced select parents lower level numbers repair process 
mesh structure serve extremely longrunning streams may necessary nodes occasionally remove mesh select entirely new location order preserve depth mesh prevent overloading root nodes 
explored efficient algorithms determining start process 
evaluation developed separate implementations xml router 
full featured multi threaded java implementation uses dcp router router router client communication 
implemented prototype high performance router click 
goal java implementation adequately support air traffic control application attempt maximize absolute performance 
contrast click router attempts achieve production grade performance freely available xml parsing technology 
report experiences routers 
mainly interested understanding routers behave mesh varying configurations 
evaluation focuses effects mesh redundancy dcp reliability performance 
provide performance results click xml router 
dcp performance diversity control protocol attractive features independent format data stream 
particular meshes achieve substantially lower effective loss rates latency tree distribution networks 
redundancy utilized absorb unexpected decreases link capacity nodes 
section quantify effects java xml router 
results section represent average experiments consisting xml encoded asdi packets 
experimental design experimental setup consisted mhz running linux running freebsd 
machine mbit intel pro ethernet controllers mbytes memory 
roots intermediate xml router nodes run linux machine sun jdk version 
xml client node run linux machine sun jdk version 
experiment root node received xml feed containing kbyte second substream live asdi flight data described section 
node experimental topology requests entire test xml stream specifying xml query predicate packet parsed intermediate nodes part forwarding process 
intermediate nodes connect root loopback interface packet loss 
desired link loss rates intermediate client nodes obtained routing dcp connection freebsd machines passed packets appropriately configured dummynet tunnel 
effective loss rate client avg 
parent loss rate loss rates experienced client function individual parent loss rates number parents 
way latency client parent nodes negligible ms respect millisecond granularity timing mechanisms measure packet latency 
variability observed latency xml packets attributed inherent non uniformity xml parsing times thread scheduling uncertainties jdk 
redundancy reduces loss exponentially assume packet loss independent parents 
assumption false problematic portion communication path set parents shared 
ideal model parent identical loss rate node parents expect combined loss rate verifies experimentally showing dcp loss rate experienced clients parents loss rate parent independently identically distributed uniform probability varying 
traditional tree distribution network loss rate experienced client corresponds directly loss rate parent 
graph shows mesh topology able provide acceptable delivery rates extremely lossy channels 
node parents expect loss rate parents individually experiences loss rate 
internet links experience extremely high loss rates 
fact typical long term average loss rates order substantially higher burst rates 
cases mesh limits loss rate client substantially 
decreased loss rate gain multiple parents 
latency cases acceptable loss rates provided treebased network reliability may assured retransmission significant improvements latency achieved increasing redundancy 
dcp loss detected receipt packet individual packet acknowledged 
avg 
latency client ms avg 
parent packet loss rate average packet latency root client function individual parent loss rates number parents 
avg 
latency client ms effective loss rate client average packet latency root client range effective loss rates 
effective loss rates level redundancy taken 
expect internet reorder packets packet assumed lost time successor arrives currently ms 
order magnify effects retransmissions lan environment short round trip times test xml feed specifically constructed relatively long inter packet intervals 
experiments single retransmission adds approximately ms latency lost packet 
practice streams shorter inter arrival period longer rtts resulting similar effect 
seen packet loss significantly impacts average packet latency client non redundant configurations 
meshes higher levels redundancy perform better 
redundant topology performs better effective loss rate suggests 
clients multiple parents copy xml packet receive 
general expected minimum multiple samples distribution tcp dcp erasure coding experimental multi tier topologies 
hop tcp path tcp splice middle resilient dcp mesh depth erasure code disjoint paths length simple forwarding intermediate nodes 
loss rates links identical 
guaranteed expected value single sample 
shows average latency levels redundancy respect effective loss rates 
multi tier meshes improvement latency throughput dramatic depth mesh increases 
demonstrate measuring throughput performance tier mesh dcp tcp analytically derive expected performance carousel erasure code scheme 
shown experimental resilient dcp mesh nodes servers delivering identical streams intermediate nodes client 
case tcp mesh nodes server client intermediate node splices separate tcp connections 
cases client server intermediate nodes connected point point ethernet links 
analyze performance erasure coding hypothetical topology consisting server client connected disjoint hop paths 
nodes middle simply forward packets tcp dcp request retransmissions lost packets 
experiments dummynet limit bandwidth link kbits second set server transmit data byte bursts rate kbits second significantly link capacity 
link mesh way latency ms 
shows throughput observed client loss rate adjusted links uniformly 
note tcp throughput drops rapidly loss rate increases 
redundant links tcp duplicate tcp connection redundant path suffer fate 
dcp hand able utilize links time provide successful transfer higher loss rates 
note case multi hop networks sufficient bandwidth dcp outperforms carousel erasure coding techniques digital fountain 
schemes retransmit lost packets 
encode data stream fixed rate erasure code enables lost packets recovered simply receiving additional number encoding throughput bytes second dcp tcp erasure coding avg 
parent packet loss rate observed throughput tier mesh uniform link loss rates resilient dcp tcp 
stream served byte chunks rate bytes second 
dcp downloads utilize parents tier tcp support tier 
plot expected performance simple carousel erasure code disjoint hop paths 
packets 
maximum distance separable erasure code requires client simply receive packets comprised original data stream regardless packets 
practice codes including digital fountain quite maximum distance separable requiring additional packets 
carousel erasure coding typically deployed retransmissions network loss rates hop cumulative 
dcp stream retransmits full set redundant packets tier mesh 
naive carousel distribution network support applications ensuring packet contains data necessary decode current input packet plus additional redundant data required support erasure code 
carousel erasure code utilize redundant links sending encoded version data packet available links 
calculate upper bound performance erasure code assuming packet encoding set received 
distribution network separate paths comprised hops link loss rate easy see path successfully delivers packet probability best case data packet successfully decoded client encoding packets received occurs probability recover lost packets client receive additional encoding packets lost probability 
throughput scheme computed simply multiplying input data rate effective reception rate 
formula shows expected performance sufficiently low rate maximum distance separable erasure code tier topology shown 
ouput rate packets second input rate packets second forwarding rates click xml router varying number children 
child requested entire input xml stream specified trivial xpath expression 
xml routing performance shows forwarding rates achieved click xml router installed kernel module 
measured forwarding capacity generating constant stream identical udp packets containing byte xml encoded asdi flight update similar fixed rate sending xml router 
router parses xml packet applies appropriate child predicates forwards packet children matching predicates 
tests conducted mhz dual processor intel piii uni processor mode ethernet controllers board intel pro mbit pci controller intel pro gigabit ethernet pci card 
uni processor mode xml parsing code known smp safe 
packets received mbit interface forwarded gigabit interface 
click support polling mbit controller packet input interrupt driven 
maximum loss free forwarding rate varies number children 
additional children add processing overhead additional link queries 
client simple query expression implementation able forward slightly byte packets second mbit second 
complicated packet expression slower forwarding rate 
order better understand impact query complexity timed xml parser query evaluator separately 
click xml router uses gnome xml library 
library provides xml parser xpath subset xquery evaluator 
attempts optimize performance library 
measured performance represents lower bound expect efficient implementation perform better 
table shows time taken apply variety queries byte sample xml flight packet 
find complex expressions take twice time evaluate context xml packet simple ones 
cases packet processing cost dominated xml parsing time 
xquery time parse true flight altitude starts string flight id twa substring string flight coordinate lat table time evaluate various queries mhz piii 
parsing standard byte xml flight update requires 
xquery expressions shown select entire feed flights feet trans world airlines flights flights currently north cancer respectively 
experience air traffic control data original motivation developing xml routers build infrastructure distributing processing real time air traffic control data 
laboratory receives aircraft situational display industry asdi feed private ip intranet connection department transportation dot 
asdi feed provides detailed information state north american airspace 
asdi messages include information flight plans departures flight location 
position update received approximately minute enroute aircraft 
asdi feed directly distributed major airlines collaborative planning faa airlines 
asdi feed distributed dot encoded ascii specific compact character encoding asdi message type 
efforts native asdi messages compressed format virtue 
asdi feed union feeds multiple air route traffic control centers countries usa canada 
unfortunately messages parsed asdi specification arise 
outset built asdi feed parser carefully gathered examples non standard messages 
slowly tuned asdi feed parser handle undocumented cases today find occasional new message format 
early decided convert asdi message corresponding xml packet create xml packet stream 
decision guaranteed applications easy parse defined xml dtd consume 
furthermore centralized interpretation asdi feed updated new undocumented message types identified 
call xml stream created asdi feed xml atc stream 
shows sample flight asdi encoding xml encoding 
xml encoded asdi packets contain widely varying amounts data depending type event reported flight departures arrivals position updates auditing information 
packet size ranges bytes bytes average bytes packet 
stream diurnal peaking early evening average packet inter arrival time ms resulting xml data stream kbytes second 
asdi format ual xml format xml version flight id ual id status active speed type ground speed altitude type reported mode plain altitude coordinate lat lat lon lon coordinate flight flight data formatted asdi xml 
practice omit message id field xml encoding 
bytes second xml asdi time day average bandwidth utilization full xml stream native asdi format vs time day 
cases message id field see removed packets root nodes 
primary concern converting asdi feed xml potential bandwidth bloat 
shows bandwidth asdi feed native xml formats averaged minute intervals 
simply converting feed xml results approximately fold increase bandwidth compared native asdi feed 
ran xml native asdi streams lempel ziv data compressor 
shows bandwidth compressed forms streams shown 
asdi feed compresses factor xml feed compresses factor 
net result compressed xml atc stream slightly larger compressed asdi feed efficient raw asdi feed 
bytes second time day xml asdi average bandwidth utilization compressed xml stream compressed asdi format vs time day 
cases message id field removed packets root nodes 
run mesh networks root routers internal routers single root router typical 
dot link single point failure terminates root router 
adding second communication line dot connect backup asdi system 
enable root routers independent failure modes 
application serial numbers ans atc application provided faa 
synchronizing multiple roots straightforward 
asdi message includes message id corresponding xml packet 
shows interface xml atc stream 
graphical client implements dcp connects xml router mesh 
panel left screen control display aircraft information 
different colors depict aircraft altitude client coast position aircraft position updates 
particular application domain air traffic control data xml proved robust efficient mechanism distribution 
anticipate adding new types clients including xml stream recorder current system 
discussion section considers strengths weaknesses approach content routing xml 
believe techniques developed atc application widely applicable assumptions clear 
generation difficulty providing redundant packet sources providing standardized sequence space packet streams obey invariants outlined section 
application specific solutions source derived sequence numbers time codes 
absence sequence numbers necessary approaches cumulative byte counts block fingerprint matching derived metrics 
java client xml atc stream showing controls air traffic 
combining router merges xml streams packets combined stream appropriate ans 
simply ans original packets packets combined stream typically packets different streams general incomparable ans 
solution combining router root new stream establish totally ordered space 
create single point failure sequence assignments space coordinated combining router 
approach space partially ordered 
example space combined stream pair source packet original stream integer suffix identifies source xml stream 
packets ans different source streams sequenced streams client recover ordering xml packets stream 
flow control nodes responsible monitoring loss rate streams parent adjusting predicates appropriately 
limited child buffering available node clients may disconnected consequently unable consume data stream acceptable rate 
mechanism dcp allows parents avoid wasting bandwidth sending packets child child received 
child unable keep long term average rate stream queues build action taken 
client able smaller subset data stream may wish conduct join experiments order determine appropriate xml query bandwidth constraints 
clients persistently unable keep data stream disconnected parents 
redundancy expect mesh networks 
level redundancy allows single points failure allows mesh repair proceed stream flow interruption 
expect networks increase capacity moderate amount packet redundancy acceptable high value streams achieve specific reliability performance goals 
secondary storage replicated similar reasons 
assumed analysis errors different parents independent 
assumption violated numerous ways reason shared communication path components child parents 
addition network wide effects distributed denial service attacks cause independent parents dependent packet losses 
maximize link independence plan explore routers distinct internet autonomous systems ass ensuring mile bandwidth adequate 
certain applications may possible private intranets better control error assumptions 
router xml stream reassembly routers original xml stream processed xml switch 
guarantee xml packet forwarded router allow client ask retransmissions parents potentially allow xml switch keep stream dependent state packets queries 
amount buffering required bounded requiring positive acknowledgments discussed section 
xml packets forwarded order xml switch router necessarily need buffer packets recreate original sequenced xml stream 
case atc application atc application xml router recreate original xml stream 
xml router need recreate original xml stream router process received packet independently need process packet xml stream 
scenario client places increasing reliance redundancy mesh ensure timely delivery packets received particular router 
particular levels may forward sequence latency induced retransmission request client may large 
considered handle reliable order delivery bounded latency 
packet acknowledgments asynchronous variable bandwidth data streams packet loss detected lack packet acknowledgments sender gap packet sequence receiver 
dcp currently relies technique 
inter arrival times large acks may required provide appropriate level responsiveness 
unfortunately positive acknowledgment schemes admit known implosion problem sender flooded acknowledgments children 
implementation currently uses unicast udp transport dcp packets dcp employ ip multicast available 
negative acknowledgment system describe capable handling ip multicast packet losses 
ip multicast employed dcp output component send single packet appropriate multicast group children children queries 
dynamic timer adjustment robust dcp implementation able automatically adjust timers characteristics link nodes 
particular negative acknowledgment timer set long admit observed packet reordering clearly depends inter packet arrival flow 
slow results poor latency results wasted bandwidth 
similarly timers relating mesh benefit automatic refinement 
particular nodes expect receive data parents 
data available interval parent sends keep alive message 
similar mechanism employed parent insure continued presence children 
clearly timer proportional stream data rate order avoid excessive probing 
currently exploring applying known techniques problems 
key ideas 
introduced idea xml routers switch self describing xml packets field 
second showed xml routers organized resilient overlay network tolerate node link failures reconfiguration interrupting real time data transport 
introduced diversity communication protocol way peers redundant packet transmissions reduce latency improve reliability 
wide variety extensions presently reported protocol refinements additional functionality 
actively investigating methods dcp self tuning adaptive timers sophisticated flow control 
dcp uninterpreted byte streams 
dcp ideas may find application contexts outside xml routers 
example contemporary reliable overlay networks dcp ron communication protocol maximize performance reliability :10.1.1.161.2760
just secondary storage viewed pursuit enhanced functionality performance believe certain tightly constrained applications network bandwidth multiple paths may similarly viewed spent return substantial gains reliability latency 
multiple disjoint paths excess capacity exist mile client 
installations may benefit meshes change lower levels redundancy critical network points points presence mile cable 
scope xml routing current xml routers extended support 
sophisticated xml mesh building maintenance algorithms 
combiners integrate multiple xml streams multicast transport single stream 
xml routers duplex communication 
xml network components stream storage replay 
transcoding xml routers produce output packets derivatives input packets client queries 
current form believe architecture demonstrates xml viable mechanism content distribution providing natural way encapsulate related data convenient semantic framing mechanism intelligent network transport routing 
acknowledgments qian wang gutman early version xml router graphical asdi client shown 
dcp conducted emulab net utah network emulation testbed primarily supported nsf ani cisco systems 
indebted chen members click project assistance benchmarking click xml router 
greatly comments earlier drafts chuck blake frans kaashoek anonymous reviewers shepherd maurice herlihy 
remember jochen liedtke bruce jay nelson mark weiser great life forces friends 

www org 
andersen balakrishnan kaashoek morris resilient overlay networks :10.1.1.161.2760
proc 
acm sosp oct 
armstrong multicast transport protocol 
rfc internet engineering task force 
banavar chandra mukherjee strom sturman efficient multicast protocol content publish subscribe systems 
proc 
int conf 
dist comp 
systems icdcs may 
simulation study capacity effects routing fault tolerant realtime channels 
proc 
acm sigcomm aug pp 

bestavros adaptive information dispersal algorithm time critical reliable communication 
network management control volume ii malek eds 
plenum publishing new york new york pp 

bray extensible markup language second edition 
www org tr rec xml recommendation 
byers luby mitzenmacher accessing multiple mirror sites parallel tornado codes speed downloads 
proc 
ieee infocom mar pp 

byers luby mitzenmacher digital fountain approach reliable distribution bulk data 
proc 
acm sigcomm sept pp 

carzaniga rosenblum wolf achieving scalability expressiveness internet scale event notification service 
proc 
acm podc july pp 

chamberlin xquery xml query language 
www org tr xquery working draft 
chawathe mccanne brewer rmx reliable multicast heterogeneous networks 
proc 
ieee infocom mar pp 

chu rao zhang case system multicast 
proc 
acm sigmetrics june pp 

floyd jacobson mccanne liu zhang reliable multicast framework lightweight sessions application level framing 
ieee acm trans 
networking dec 
holbrook cheriton ip multicast channels express support large scale single source applications 
proc 
acm sigcomm aug pp 

jannotti gifford johnson kaashoek toole overcast reliable multicasting overlay network 
proc 
usenix osdi oct pp 

chiu wesley tree reliable multicast tram 
technical report tr sun microsystems lab 
karn partridge improving round trip time estimates reliable transport protocols 
acm ccr aug 
kohler morris chen jannotti kaashoek click modular router 
acm trans 
computer systems aug 
labovitz ahuja jahanian routing stability convergence 
proc 
acm sigcomm aug pp 

lempel ziv universal algorithm sequential data compression 
ieee trans 
information theory may 
lin paul rmtp reliable multicast transport protocol 
proc 
ieee infocom mar pp 

manber finding similar files large file system 
proc 
winter usenix jan pp 

maxemchuk routing store forward networks 
phd thesis university pennsylvania may 
mcauley reliable broadband communication burst erasure correcting code 
proc 
acm sigcomm sept pp 

mccanne jacobson receiver driven layered multicast 
proc 
acm sigcomm aug pp 

moser melliar smith agarwal bud papadopoulos totem fault tolerant multicast group communication system 
acm apr 
oki siegel skeen information bus architecture extensible distributed systems 
proc 
acm sigops dec pp 

paxson internet packet dynamics 
ieee acm trans 
networking june 
shi verma waldvogel almi application level multicast infrastructure 
proc 
usenix symp 
internet technologies systems usits mar pp 

rabin efficient dispersal information security load balancing fault tolerance 
acm apr 
rizzo dummynet simple approach evaluation network protocols 
acm ccr jan 
rizzo vicisano reliable multicast data distribution protocol software fec techniques 
proc 
ieee june 
feeley hutchinson veitch elephant file system forgets 
proc 
workshop hot topics operating systems hotos vii mar 
savage anderson aggarwal becker cardwell collins hoffman snell vahdat voelker zahorjan detour case informed internet routing transport 
ieee micro jan 
segall arnold boot henderson phelps content routing elvin 
proc 
auug june 
stoica ng zhang reunite recursive unicast approach multicast 
proc 
ieee infocom mar pp 

tridgell efficient algorithms sorting synchronization 
phd thesis australian national university apr 
tridgell rsync algorithm 
tech 
rep tr cs australian national university 
national transportation center tion applications division 
aircraft situation display industry functional description interfaces 
dts report aug 
overview reliable multicast transport protocol ii 
ieee network jan 
wu sharma smith thin streams architecture multicasting layered video 
proc ieee int workshop network operating system support digital audio video may 
yavatkar griffioen sudan reliable dissemination protocol interactive collaborative applications 
proc 
acm conf 
multimedia nov pp 

