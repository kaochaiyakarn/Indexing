free form deformations sketching manipulating scalar fields presents novel scalar field free form deformation sffd technique founded general flow constraints implicit functions 
contrast traditional lattice ffd driven parametric geometry spline theory employ scalar fields embedding spaces 
deformation scalar field vertices move accordingly result freeform deformations embedded object 
scalar field construction sketching manipulation natural intuitive 
tightly coupling self adaptive subdivision mesh optimization sffd versatile multi resolution free form deformations achieved algorithm adaptively refine improve model fly improve mesh quality 
enforce various constraints embedded models enable technique preserve shape features facilitate sophisticated design 
system demonstrates sffd powerful intuitive shape modeling 
significantly enhances traditional ffd techniques facilitates larger number shape deformations 
categories subject descriptors computer graphics computational geometry object modeling computer graphics methodology techniques interaction techniques general terms algorithms design keywords deformations interaction techniques scalar fields 
free form deformation ffd important technique shape modeling animation simulation 
ffd techniques applied existing object appealing alternative traditional modeling independent objects representations 
various ffd techniques proposed past decades 
difficulties permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
sm june seattle washington usa copyright acm 
jing hua hong qin computer science suny stony brook qin cs sunysb edu object embedded scalar field deformed altering scalar field 
shows cross section entire scalar field see plane single level set see transparent surface 
shows deformed object 
associated current ffd techniques 
performing deformations complex control lattices extremely time consuming general 
axis ffd approaches directly manipulated ffd approaches relatively intuitive efficient methods offer limited deformations 
second control lattice flexible arbitrary topology easily 
difficult afford large number deformation types 
third traditional ffd operation generally single operation applied static models 
refinement optimization occur deformation 
low curvature low resolution region subdivided prior deformation model longer capable representing deformation accurately 
propose novel free form deformation technique sffd vertex flow constraints implicit functions employs scalar field embedding space 
users interactively sketch scalar field implicit function mouse embed entire model part model 
embedding space scalar field diverse type implicitly defines complicated geometry arbitrary topology 
deformation embedding space modification scalar field vertices move enforced flow constraints results free form deformations embedded object 
deformation velocity vertex model general adopt user desired constraints easily 
sffd technique generalizes traditional ffd technique affords larger number shape deformations 
scalar field construction sketching manipulation natural easy previous ffd techniques 
furthermore order represent deformations accurately embedded models equipped self optimization capability 
adaptive subdivision mesh optimization tightly coupled sffd supporting versatile multi resolution free form deformations 
sffd evolution process allows self adaptive refinement mesh improvement interleave shape deformation sffd operation 
algorithm adaptively subdivide model regions require high resolution 
sffd deforms object curvature affected surface checked see subdivision necessary 
incorporate various constraints embedded models enable technique facilitate feature design 
results demonstrate proposed ffd technique useful powerful shape editing solid design 

related sederberg parry pioneered ffd concept solid geometry 
ffd accomplished lattice structure 
coquillart developed extended free form deformation extension sederberg parry technique uses non parallelepiped lattices 
joy free form deformation technique uses arbitrary lattices catmull clark subdivision volumes 
technique allows variety deformable regions defined broader range shape deformations generated 
lattice space definition time consuming difficult 
technique requires great deal cpu time memory 
jin proposed constrained local deformation technique generalized 
singh fiume wires interactive geometric deformation 
free form deformation technique deformation primitives 
note combination deformations blending functions counter intuitive need tuned different type deformations 
introduces new sffd technique establishing deformation methods defined scalar fields avoids parameterization process 
interactive design scalar field bloomenthal skeleton methods construct implicit surfaces 
blobby model known soft object popular technique design implicit surfaces 
raviv elber interactive sculpting paradigm employed set scalar uniform trivariate spline functions object representations 
schmitt approach constructive modeling solids defined real valued functions uniform rational cubic spline volumes primitives 
turk brien introduced new techniques modeling interpolating implicit surfaces 
related level set approaches 
osher sethian level set methods 
level set models deformable implicit surfaces deformation surface controlled speed function level set partial differential equation 
graphics desbrun breen level set methods shape morphing 
level set framework interactively editing implicit surfaces 
level set methods essential problem construct implicit functions implicit models application oriented speed functions 
note models deformed converted volumetric representation represented single iso surface 

sffd algorithm general surfaces expressed implicit form formulated 
function called implicit function field function defines scalar field 
related level set called iso surface corresponding iso value function may mathematical expression 
may arbitrary procedural process black box function produces scalar value point space 
scalar field ffd embedding space wraps deformed object 
note fundamentally different traditional ffd space sffd space implicit function scalar field lattice geometric object 
shows implicit function scalar field corresponding function 
deforming scalar field shown embedded object deformed accordingly 
shows deformation example 
model embedded inside scalar field 
changing scalar field significantly deformed 
shows implicit function graph shows corresponding scalar field 
object free form planar curve embedded scalar field shown deformed changing embedding space shown 
overview idea applying scalar field implicit function perform free form deformations existing polygonal models 
embed entire model part model scalar field calculate scalar values vertices embedded part 
ffd process vertices constrained level sets originally reside enforcing vertex flow constraints 
users deform scalar field vertex move accordingly results free form deformation embedded object 
sffd enforces relocation position vertex deformed object remains level set scalar field space deformed trajectory vertex represented 
derivative yields dx dx dt gradient simplify notation represent gradient abbreviate re written follows dx 
dt note dx dt vectors 
ambiguity solution vertex velocity unique 
flow constraint velocity dx dt uniquely solved 
dividing dx dt vn vt vw represents unit principle normal vector iso surface scalar field represents unit tangent vector represents unit vector know normal velocity vn perpendicular constraint line 
dot product retains item containing vn 
obtain velocity normal flow vn normal flow scheme essentially basis level set methods widely computer vision level set applications tracking target objects 
normal flow scheme considers evolution velocities normals iso surfaces 
minimizing similarity active model target model 
intermediate deformations natural addressed aforementioned 
essence main task level set methods design normal velocities vn evolve function objective provide general ffd technique 
compute vertex velocities change motion embedded object inside scalar field natural versatile strong limitation 
need consider velocities linearly independent directions simultaneously 
consider general velocity dx dt coordinate axes space 
general velocity represented vx vy vz order obtain unique solution flow constraint equation maintain smooth motion deformed model sffd process add smoothness constraint model 
vertex velocity variation inside local region minimized 
gives rise minimizing objective function dx lagrangian multiplier 
discretizing objective function minimized iteratively 
considering vertex neighboring vertex set qk optimized mesh qk jk denotes set edges embedded model 
note mesh model undergo optimization process described section 
error flow constraint approximation follows vx vy vz smoothness motion local region computed velocity difference vertex neighboring ones qk 
qk vx vx qk vy vy vz vz qk denotes number vertices qk 

solution satisfying vx vx vx minimize objective function derivative respect vx vy vz equal zero yields equations vx vy vz solved 
vx vy vz vx vy vx vz vy vz vx vy vz vx vy vz average velocity neighboring vertices qk qk qk 
solving equation obtain iterative solution vk vk vk 
formulations designed dynamic continuous sffd algorithm follows 
generate desired scalar field embeds model deformed initialize velocities vx vy vz vertices 
altering scalar field embedded model begins deform 
deformation process perform loop vertices reach level set originally resided 
time step 
update scalar field vertices 
deduce 
calculate finite differences 
compute current vertex velocities 
deduce 
update vertices positions xt xt 
perform sffd model optimization 
xt terminate advance time step repeat steps 
sffd evolution process allows self adaptive refinement mesh improvement interleaved model deformation iteration 
algorithm step size vertex evolution specified users 
parameter controls iterations takes meet conditions 
set loop meets conditions time step 
deformation just traditional free form deformation static model 
model needs extensively refined optimized order represent shape deformation accurately single deformation operation value set smaller 
model refined optimized deformation 
usually set 
displaying sequence continuously get animation showing dynamic deformation process 

sffd model optimization existing adaptive subdivision methods propose add triangles high curvature areas prevent subdividing low curvature regions deformation 
intent method adaptive subdivision schemes apply subdivision static model 
means low curvature region previously subdivided begins deform model longer capable representing deformation accurately 
interleave shape evolution self adaptive refinement single deformation 
allows embedded model represent deformation accurately deformation 
method generate additional triangles fly regions require subdivision 
low curvature regions previously subdivided get chance refined deformation 
sffd deforms object curvature affected surface checked see subdivision necessary 
triangles added criterion met 
local adaptive subdivision scheme adds triangles regions require additional subdivision addition deformed regions checked ensure subdivision occurs appropriate regions 
incorporate complimentary decimation process merges faces nearly planar areas reduces polygon mesh complexity number vertices edges faces 
trigger decimation testing deviation surface normals edge endpoints 
refinement strategy supports multi resolution deformation existing models 
free form deformation continuous evolution process able control dynamic model deformation process 
mesh quality improved maintained time step 
consider issues vertex distribution proper vertex density aspect ratio triangles 
research conducted field producing valuable algorithms 
employ mesh improvement operations include edge split edge collapse edge swap 
conditions operations valid discussed 
edge split edge collapse keep appropriate node density 
edge split triggered edge long 
similarly neighboring vertices close edge connecting vertices collapsed 
essentially operations split long edges delete crowded vertices ensure proper vertex density 
edge swap ensure aspect ratio triangles 
swap edge doing increase minimum inner angle adjacent faces 
repeated applications swap operation keep increasing minimum inner angle result constrained delaunay triangulation procedure 
try keep vertices uniformly distributed performing laplacian smoothing triangulated surface 
practice mesh optimization steps interleaved shape deformation iterations computational mesh 
helps iterative solver minimizing objective function 
ordering operations way produce best mesh mesh improvement steps 
edge swap operation clean simple edge split edge collapse operations mesh smoothing invoked optimize neighborhood shapes 
method maintaining computational mesh triangulated surface iterative incremental making appropriate scalar field free form deformations shape change gradually time 
shown flow algorithm interleaving shape evolution mesh optimization tends equalize edge lengths allowing vertices distribute evenly sffd operation 

sffd space construction order users easily sffd technique perform free form deformations existing polygonal objects sffd technique equipped approaches scalar field construction deformation 
detail follows 
dynamic spline scalar fields utilize scalar trivariate functions underlying shape primitives 
different scalar spline patches defined working space collected form volumetric implicit function represent spaces complicated geometry arbitrary topology 
essence function hierarchical organization scalar spline patches dynamic property coefficients timevarying 
users directly manipulate scalar values evolve function 
please refer full detail dynamic manipulation spline volumetric implicit functions 
shows example dynamic spline implicit functions 
teapot model embedded scalar field defined dynamic spline implicit function deformed changing scalar field shown show single level set coarse mesh 
system allows users interactively define skeletons skeleton scalar field generated blending field functions gi set skeletons si gi skeletons si geometric primitive admitting de fined distance function points curves parametric surfaces simple volumes field functions gi decreasing functions distance associated skeleton gi gi si si distance si gi defined instance pieces polynomials 
enforce global local control underlying scalar field separate ways defining manipulating skeleton defining adjusting implicit functions defined skeletal element defining blending function weight individual implicit functions 
employ sketching technique scalar field construction modification 
approach manipulated scalar field signed unsigned distance field 
sketched contour silhouette zero level set resulted distance field 
sketching technique greatly ease editing scalar fields designers 
strokes gathered mouse collection points 
system input strokes curves open closed 
open curves resulted distance field unsigned interior exterior defined 
plane containing curve called drawing plane 
system contour perpendicular direction drawing plane meets bounding space user specified bounding region 
practice store distance field drawing plane slices distance field perpendicular direction exactly 
obtain distance value point space simply project point drawing plane perpendicular direction drawing plane assign perpendicular foot distance value point 
method avoids compute entire distance field 
computational expense greatly reduced 
euclidean distance closed contour calculated stored discrete point image 
calculate distance required point methods chamfer distance transforms vector distance transforms propagate known distances image 
interpolation function determine distance point located quad bounded distances known grid points 
practice distance values quad reconstructed corner distance values stored quad standard bilinear interpolation 

sffd operations novel sffd technique simple intuitive efficient scalar field construction deformation approaches users easily perform various sffd operations existing models 
bending operations users may draw set skeletons define source scalar field 
shows bending operation nozzle model 
operation curve skeleton 
user just simply sketches straight line segment near center object bending curve define distance fields 
object deformed difference fields 
original model bending shrinking middle part inflation parts shrinking part near bottom top parts 
shrinking inflation users define sets skeletons source target define scalar fields 
embedded object inflate shrink field deformation source target 
users just modify parameters source skeletons perform deformation 
examples shown user employs gaussian blobs skeletons nozzle model inflates shrinks forms 
users perform tapering operations simply sketching strokes 
shown ship model tapered front part 
user sketches open stroke shown red 
user sketches shown green 
source target distance fields generated locally strokes 
localized front part tapered field change 
tapering ship model 
squeezing operations users may sketch closed stroke define distance field modified distance field adding stroke 
operation perform deformation vertices positive distance values 
example shown user sketches closed stroke red body dinosaur 
corresponding distance field sketched stroke generated method described section 
user sketches stroke green deform distance field 
embedded dinosaur squeezed shown sffd 
users completely sketch new stroke define target distance field creating modifying existing stroke 
dinosaur deformed body squeezed neck stretched position neck moved 
stretching users force tools directly drag embedding scalar field equivalent drag embedded object directly 
essence force tools alter scalar field force vector result stretching effect embedding model force vector 
example shown user picks vertex bottom dinosaur neck drags arrow produce stretching deformation dinosaur neck 
users alter part object location moving operations 
please see example 
user sketches straight line segment near center line dinosaur neck defines source distance field 
user draws stroke small rotation define target field 
localized dinosaur neck moved shown due field change 
users apply operations object easily 
operations users paint grey scale image existing define embedding space object 
shows image global map 
surface obtained projecting sampling points object normals corresponding grey scale values 
system generate local distance field region interest surface 
scalar values shortest distances surface 
image similar concept displacement map 
difference need explicitly map displacement point base model 
operations source scalar field base model initialized zero 
deformation zero source scalar field locally constructed distance field produce effects embedded models 
shown image soap shape sketch space construction approach sffd technique 
reverse distance field opposite direction easily perform operations models 
shows grey scale image define scalar field 
shows deformed object 
easy sffd create sharp creases embedded models generally difficult traditional ffd 
users perform operations simply sketching strokes 
shown user shape creases sides deformed cup model 
user localizes region creases formed 
user sketches open strokes shown red generating source distance fields 
unsigned distance fields computed strokes localized regions near side cup model 
user sketches open curves shown green 
target unsigned distance fields generated curves regions 
sffd forms sharp creases field change source target 
shows original model sketched strokes sides cup 
red ones strokes generating source distance field green ones strokes generating target distance field 
shows sharp creases formed sides cup 
deformation analytic implicit functions 
locally perform aforementioned sffd operations polygonal models allowing movement vertices scalar value evaluates specified scope 
vertices move deformation 
users specify implicit function localize part models deform 
prototype system provide users types primitives localize regions include rectangular box cylinder sphere 
combining primitives users able localize part embedded models 
technique provides general sffd mechanism sense easily accommodate various geometric constraints 
enforce constraints simply augment original objective function constraint energy ec en ec en denotes new objective function ec denotes additional cost term introduced added constraints 
note ec linear combination cost functionals 
standard implicit iterative method employed numerically compute minimization objective function 
gradient minimization process numerically approximated central difference objective function current position model vertex small perturbation 
advantage approach relatively general offer accurate stable solution large systems suited purpose sffd operations 
available operations constraints perform interesting deformations mannequin model shown 
deformations facial features maintained enforcing constraints normal curvature constraints 
drop smoothness constraints deformation allowing vertex velocities specified directions order produce bump hair effect 
mannequin model deformed available sffd operations enforcing constraints 

articulated novel scalar field free form deformation sffd methodology flow constraints functions 
new sffd paradigm fundamentally different traditional ffd techniques employ scalar fields ffd embedding spaces 
scalar field embedding space diverse type space definition simple powerful intuitive solid modeling applications 
prototype system developed easy techniques efficiently constructing manipulating space flexibly interacting various geometric shapes 
sffd method users directly sketch scalar field implicit function control deformation embedded model 
addition embedding space complicated geometry arbitrary topology 
deformation velocity model point general constrained subject user specified requirement 
sffd technique affords larger number shape deformation types 
furthermore embedded model self adaptive optimization capability sffd process order accommodate versatile deformations maintain mesh quality preserve shape features 
conducted large number experiments demonstrate new sffd technique powerful flexible natural intuitive shape design solid modeling animation interactive graphics 

christensen 
volume sculpting level set method 
proceedings international conference shape modelling applications pages 
bloomenthal wyvill 
interactive techniques implicit modeling 
proceedings symposium interactive graphics pages 
breen whitaker 
level set approach metamorphosis solid models 
ieee trans 
visualization computer graphics 

chang 
generalized de approach free form deformation 
siggraph pages 
coquillart 
extended free form deformation sculpting tool geometric modeling 
siggraph proceedings pages 

implicit free form deformations 
proceedings implicit surfaces pages 
desbrun cani 
active implicit surface animation 
proceedings graphics interface pages 
hoppe derose duchamp mcdonald stuetzle 
mesh optimization 
siggraph pages 
hua qin 
haptics volumetric modeling dynamic spline implicit functions 
proceedings ieee symposium volume visualization graphics pages 
jin li peng 
general constrained deformations generalized 
computer graphics 
krishnamurthy levoy 
fitting smooth surfaces dense polygon meshes 
siggraph pages 
lazarus coquillart 
axial deformations intuitive deformation technique 
computer aided design 
joy 
free form deformations lattices arbitrary topology 
siggraph proceedings pages 
breen whitaker barr 
level set surface editing operators 
siggraph pages 
osher sethian 
fronts propagating curvature dependent speed algorithms hamilton jacobi formulations 
journal computational physics 
raviv elber 
freeform sculpting zero sets scalar trivariate functions 
proceedings solid modeling pages 
schmitt schlick 
constructive modeling solids spline volumes 
proceedings solid modeling pages 
sederberg parry 
free form deformation solid geometric models 
siggraph pages 
singh fiume 
wires geometric deformation technique 
siggraph pages 
turk brien 
modelling implicit surfaces interpolate 
acm trans 
graphics 
welch 
serious topological design variational curves surfaces 
phd thesis carnegie mellon university june 
wyvill wyvill 
data structure soft objects 
visual computer 
