discovering objects dynamically generated web pages james georgia institute technology college computing atlanta ga cc gatech edu web grows content hidden reach traditional search engines 
thor scalable efficient tool mine objects hidden web 
precision recall thor automatically extracts objects interest dynamically generated web pages 
customized algorithms applied locate interesting objects page 
show pages tend homogenous subset pages web pages may separated distinct clusters structurally similar pages 
homogeneity clusters traditional information retrieval techniques propose phase clustering scheme consisting page clustering algorithm fragment clustering algorithm 
scheme identify object rich fragments page average precision recall 
categories subject descriptors information systems information search retrieval clustering search process selection process general terms algorithms experimentation keywords information retrieval clustering web structure hidden web 
exponential growth dynamic web pages coupled inability modern search engines search dynamic content created situation content hidden 
accessing categorizing making information available way current search engines static web pages available challenge permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
copyright acm xxxxx xx xx xx 
david georgia institute technology college computing atlanta ga cc gatech edu ling liu georgia institute technology college computing atlanta ga cc gatech edu current search technology 
search engine mean composite underlying technologies including crawler discover information page analyzer categorize index information search front receive queries user deliver relevant results 
unlock web hidden content search engine dynamic content require features efficient means generating web pages dynamic content scalable architecture robust method analyzing indexing dynamic web pages 
emphasis third point system design considers points mentioned 
system called thor focuses analyzing web pages identify important portions page extract relevant objects important portion 
important portions mean portions page relevant query generated page place 
consider dynamically generated web pages tend contain irrelevant content particular search query 
example search harry potter amazon com yields results page loaded content unrelated harry potter standard navigation bar standard links partner websites boilerplate 
news results page include series objects related original search case list titles harry potter books relevant links prices reviews 
contention relevant information indexed search engine page entirety query relevant object rich regions 
system discover important objects page contend major challenges 
automatically extract object rich regions page dynamic search system independent particular manual semi automated encoding structure page particular representation schema 
obvious reasons inefficient impractical tie performance search engine billions pages manual encoding potentially millions sites 
second dynamic search system robust handle inherent heterogeneity web 
web pages tend differ content links tag structure underlying technologies enable pages html xml javascript web technologies 
web continues grow axes variability resulting increasing complexity 
hoping silver bullet bring order dynamic web xml ex ample naive impractical 
technologies may bring relative order segments web reasonable expect vast majority web continue patchwork heterogeneous pages 
spite inherent heterogeneity web considered piecemeal display significant homogeneity 
example series different keyword searches amazon com result series results pages displaying different query related content similar content layout similar page presentation structure 
navigation bar advertisements boilerplate occur pages 
homogeneity layout structure may leveraged automatically efficiently extract objects dynamically generated web pages 
thor designed provide high level precision recall operate independently hand tuned solutions specific sites 
successful identification object rich portions pages leveraging relationships similar pages structural clustering html tag trees exploiting similarity content layouts similar pages clusters 
traditional information retrieval methods employed explore level clustering web pages tag structure similarity content layout similarity 
novelty thor page content analysis dynamic object identification summarized follows thor considers page isolation solely page text links context similarly structured pages particular web site flexible process large numbers web sites specialized generate page specific information helpful recognizing parsing important objects thor automatically cluster structurally similar pages respectable success rate capable identifying relevant objects page just indexing entire content page 
sections design ideas technical details thor section description fundamental representations algorithms thor 
section system architecture 
experimental results discussed section 
related section 
conclude section final thoughts suggestions extensions 

thor page content analyzer design ideas web lange content structure organization 
small particular subsets web tend closely related terms structure content 
explore idea relatedness bit closely 
single design firm may produce web site physician attorney 
sites concerning different subjects structured similarly site layout page structure 
clearly sites related structurally degree 
com amazon com contain pages devoted books common sites 
laid differently sites closely related terms content 
unfortunately cost identifying leveraging forms relatedness naive similarity metrics prohibitive scaling tool size web 
key insights challenge incorporating relatedness search engine manageable 
experience web sites tend structure dynamically generated pages similar fashion reusing standard template 
consider pages generated particular html form single domain potentially structurally related 
dynamically generated pages tend differ somewhat html tag structure depending category output empty results page exception page normal results page 
certainly larger sites google com amazon com ibm com true 
particular category results pages say set normal results pages amazon com cross page content information may yield clues fragments page contain interesting data 
fragments contain information similar pages cluster fragments dynamically generated response particular user query 
suggests phase clustering approach takes advantage levels relatedness 
cluster collection dynamically generated pages different page clusters page templates discovered separate structurally different exception pages normal results pages amazon com example 
refer phase page clustering phase 
second assume content page fragments page clusters belongs single cluster intra cluster similarity metrics filter common content hone effectively interesting content fragments 
call second phase fragment clustering phase 
key details thor necessary describe formally ideas far 
modeling web pages tag trees primary web page representations thor 
page transformed formed tag tree consisting tag nodes content nodes 
tag nodes content candidate subtree separately transformed vector space representation 
page may divide underlying markup source tags text 
tag mean characters opening bracket closing bracket tag tag name br head td set tag attributes 
text sequence characters consecutive tags 
convert html xml page tag tree requires page conforms basic notion formed 
requirements formed page include limited start tags including standalone tags matching tag attribute values quotes tags strictly nest requirements necessary pages may consistently transformed tag tree representation 
pages satisfy criteria automatically html head title sample page title head body object hr object body html raw html sample web page head title sample page html object body hr object tag tree representation transformed formed pages standard conversion tool tidy 
page formed may transformed tag tree representation consisting tag nodes leaf nodes 
tag node consists characters particular start tag corresponding tag labeled name start tag 
leaf node consists characters start tag corresponding tag tag start tag 
label leaf node content 
title sample page title example tag node 
sample page example leaf node 
may formally define notion tag tree 
tag tree web page vt vc vt finite set tag nodes vc finite set content nodes representing directed edges 
tag tree representation example page node tag tree represents subtree fragment page 
complete transformation tag tree requires define notion path node 
root node html case exists path node defined page 
result may describe node tag tree unique path 
path html head title uniquely identifies path root node title node numbers brackets indicate order child tag tree 
similarly node corresponding object may denoted path html body 
critical analysis sections notion minimal subtree 
call subtree anchored node minimal subtree property smallest subtree meets condition subtree say subtree satisfies property condition ancestor minimal subtree correspond notion potentially object rich fragments web page 
transforming tag trees vector space techniques common information retrieval community may represent tags content web page vector terms weights 
thor uses different vector space representations tag signature page clustering structurally similar pages content signature subtree page cross page content analysis 
vector space representation tags allows measurements similarity tags terms tag structure 
vector space representation component subtrees allows measurements similarity component subtrees terms size shape depth breath component subtrees 
typical information retrieval applications document usually preprocessed remove commonly occurring words called words examples include transform word base form removing prefixes suffixes called stemming 
document represented vector terms weights weight initially assigned frequency term occurrence document 
document containing words described term weight term weight vector particular document may normalized term frequency inverse document frequency tfidf technique term vectors characteristics documents entire document space 
case clustering web pages tag signatures space documents set pages generated particular search form 
space terms document set representative tags document 
case clustering content set pages set structurally similar pages 
space terms document keywords summarize document distinguish document collection 
variation fairly standard version tfidf prescribes weight term document wik log max frequency max maximum frequency document space total number documents document space nk number documents document space contain 
normalize vector 
tfidf weights terms highly frequently occur relevant pages infrequently occur corpus documents 
conversely term occurs document weight low term poor discriminator 
cosine similarity metric normalized dot nk product tag content signatures essentially inverse distance metric vector space 
similarity wik weights term document document respectively 
orthogonal vectors example completely dissimilar similarity 
combining similarity metric tfidf weight system leads situation terms price order occur amazon com pages force dissimilar vectors considered similar 
subsections describe design idea page clustering algorithm role separating content rich pages exception error pages 
describe fragment clustering algorithms cross page content analysis fragment level clustering discovers object rich content regions 
clustering pages page templates empirically observed dynamically generated pages particular site tend fall number closely related structural patterns 
structural patterns mean tag tree layout page 
site may templates error pages results span pages results span single page 
knowing thor segments pages particular site related clusters 
thor designed fully automated system infeasible build supervised learning classifier site web large dynamic cost labeling training data prohibitive 
result necessary rely unsupervised clustering techniques 
pathological case pages belong distinct cluster 
case assumption relatedness pages generated particular site particular dynamic page generating mechanism fail benefits system nullified 
extreme cases regular indexing techniques suffice 
possible options representation cluster pages converting trees simple strings string similarity algorithms direct tree comparisons nodes links weighted differently 
prototype implementation thor choose simple effective representation normalized tag signature page 
page define normalized tag signature normalized vector tags tag occurrences 
continuing example normalized tag signature sample page html head title body hr collection tag signatures representing set domain specific dynamically generated pages options clustering 
chosen means simple effective efficient 
means works initially generating random tag signature cluster centers 
tag signature assigned cluster closest center 
new centers calculated centroid cluster 
see section details centroid calculation 
cycle calculating centroids assigning tag signatures clusters repeats cluster centroid changes 
section experimental results support choice representation choice clustering algorithm 
omit concrete algorithm construction normalized tag signature detail means algorithm clustering web pages due space restriction 
readers interested details may refer technical report 
discovering object rich content fragments collection dynamically generated pages clustered groups structurally similar pages page templates discovered structurally different exception pages separated set normal results pages 
clusters normal results pages cross page content analysis conducted yield clues fragments page contain interesting data fragments response particular user query 
refer fragments query object rich content regions page 
formally fragments minimal subtrees page contain interesting data 
problem discovering object rich content regions page reduced problem accurately identifying minimal object rich subtrees page 
thor conduct cross page content analysis pages page cluster analyzing subtrees average similarity metric cosine similarity measure 
similar normalized tag signature representation page clustering described section normalized content signature subtree representation subtree analysis 
consider note subtree rooted body denoted path html body 
content consists occurrences object 
may represent content signature object exploit content subtree necessary define canonical representation candidate subtree particular cluster web pages 
vector space canonical representation defined terms centroid group subtrees centroid defined average vector group subtrees 
denote cluster identifier cluster web pages 
terms define centroid cluster term shared pages cluster page gives weight term frequency term 
centroid cluster defined vector elements consists term average weight term pages 
term term calculate centroid identify common subtrees pages cluster 
centroid particular subtree meaningless subtree existed subset cluster pages 
particular cluster similarly structured domainspecific pages reasonable expect subtrees subtrees corresponding advertisements navigation bar relatively static object rich portions vary dramatically page page 
vector space non object rich subtrees clustered closely centroid object rich subtrees widely dispersed 
cosine similarity metric centroid object rich portion may defined subtree dissimilar centroid 
relatively easy extend analysis allow identification multiple object rich subtrees 
sites google com object rich subtree sites amazon com cnn com tend multiple interesting subtrees 
efforts past quite successful identifying portion indexing failed extend general case 
similarity cutoff may determined experimentally subtree may classified object rich 
readers interested details may refer technical report 
section discussed phase clustering scheme clustering pages page templates cross page content analysis fragment level clustering discover object rich regions web pages 
section briefly describe thor system implementation architecture supports phase clustering scheme 
section report experiments showing effectiveness phase clustering approach benefits thor system 

thor system overview system architecture system architecture illustrated 
system works major steps 
web page generation cleaning transformation clustering structurally similar pages identification object rich fragments identification object separators subtree 
page generation cleaning efficient representative generation dynamic pages focus important feature development search engine dynamic content 
random selection dictionary words input search forms located various web sites 
course imagine potentially effective schemes generate pages selection terms related linked pages leave avenue research 
page generated placed set corresponding site form generated 
book pages amazon com book search form distinct dvd pages dvd search form 
page cleaned markup normalization tool tidy formed 
page converted tag tree 
clustering structurally similar pages tag tree converted corresponding tag signature described sections 
means clustering algorithm applied page assigned appropriate cluster 
identifying object rich fragments particular cluster subtree page transformed content vector 
subtrees ranked descending order similarity centroid particular subtree 
identify object rich fragments subtrees dissimilar centroids 
identifying object separators object rich subtrees identified necessary determine actual objects divided subtree 
table tr tag may relevant object separator separation objects trivial 
previously developed methodology finding correct object separator tag step process 
certain tags minimal subtree labeled candidate object separator tags 
characteristics tag patterns paths size forth candidate tags analyzed determine correct object separator tag 
second number tags frequently identify object boundaries various types content structure html pages 
example paragraph separator tag paragraph structure table row separator tr table structure list item separator li 
designed set algorithms produces ranked list object separators characteristics tag appearance counts standard derivation identifiable tags partial path count sibling count 
separator tags identified objects extracted raw text data web page 
object defined fragment adjacent object separator tags 
object construction algorithm analyzes common hypertext structure list candidate objects extracted determines adjacent fragments combined single object accordingly 
see detailed discussion techniques 
implementation details software underlying thor architecture written java relies key libraries implementation tidy cleaning algorithm university waikato weka means clustering package 
parameters thor parameters influence effectiveness final precision recall algorithms identification query specific object rich content regions dynamically generated web pages 
number clusters group pages single web site 
typically expect number small forms generate types data list html files step step step step prepare documents cluster pages type cluster subtrees extract objects formed documents clean pages construct tag tree tag tree tag extraction weighting set weighted tag vectors clustered pages cluster tool results matching input terms exception page results match 
web sites may support additional intermediate non query related pages ncbi blast delay page 
experimentally obtain results setting number clusters 
second parameter number candidate subtrees page examine page cluster discover minimal object rich subtrees 
simplest solution examine possible subtrees computationally prohibitive match analyze possible subtree page 
experiments shown average web page contains excess nodes 
expensive execute subtree clustering algorithm node page cluster web pages 
prototype implementation thor limited analysis subtrees considered promising terms set tree characteristics fanout content size tag count link density 

experiments section report sets experiments designed evaluate thor system 
set experiments dedicated studying effectiveness phase algorithm page clustering phase 
assess different page representations various clusterer settings 
second set experiments investigate effectiveness fragment detection object extraction phase 
final experiment examine thor flexibility identifying multiple object rich fragments single page 
experiments generated words standard unix dictionary plus nonsense words 
breadth crawl web starting author homepage google com identified unique search forms 
randomly selected search forms 
passed word search forms resulting dynamically generated pages cached locally resulting set pages analysis testing 
focus research page content analyzer object separator identification focused subtree extraction weighting set weighted content term vectors cluster elimination subtree centroid thor system architecture object extraction data rich subtrees extracted objects experimental results assessing quality thor identifying object rich subtrees 
previous research discovering object separators subtree shows direct correlation minimal subtree identification phase object boundary discover object extraction phase correct subtree identified object separation extraction definitely fail correct subtree identified object separation extraction succeed time 
page clustering set experiments examine page clustering phase phase scheme 
success clusterer driven underlying representations chosen investigate different page representations tags page top keywords page entire text page mixture tags top keywords page mixture tags entire text evaluate approach generated vector space representation described section ran collection means clusterer set clusters 
summarize results 
labeled page correctly clustered cluster half pages type normal results page exception page 
results reflection power representation differentiate pages 
expect text page cluster yields poor results 
expect pages dynamic content vary greatly content text creates sparse scatter pages vector space difficult find natural clusters 
hand tags group pages tend better indicate kind page results page ibm com substantially different tag signature normal results page 
top keywords performs adequately table page clustering comparison pages correctly std dev clustered tags top keywords text tags top words tags text random table average tag signatures ibm normal results body font head html option select table td th title tr vector length mixture representations cases alternatives tag signature 
note poorer performers possess larger standard deviation indicating clusterer site site 
baseline indicate results random clustering pages 
collection cluster average members cluster 
completely random assignation average mis cluster pages 
results choose tag signature fundamental page representation 
illustration effectiveness tag signature consider 
listed average tag signature results pages normal results pages ibm com 
inspection tag signatures see clustering successful 
tag signatures differ presence certain tags relative contribution tag signature 
example normal results pages include tags option select tags 
conversely results pages include tag 
additionally conducted extensive experiments various means version expectation maximization version 
experimented various cluster settings varying number clusters means performed better varying cluster number resulted minor changes performance system 
additionally encouraged simplicity efficiency means 
set number clusters greater number actual clusters clustering algorithm merely generate table single object rich fragment precision recall average table multiple object rich fragments precision recall average refined clusters 
problem context object extraction dependent quality cluster sufficiently cluster yield reasonable results regardless grain cluster 
fragment detection second set experiments assessed precision recall pages actual query related objects 
measured precision percentage recommended subtrees thor correctly labeled 
measured recall percentage recommended subtrees contained object rich subtree subset 
table summarizes results single object rich subtree case 
expect performance figures may improved significantly versions thor algorithmic parameter optimizations 
inspection mis labeled pages discovered thor confused pages region dynamic non query related data 
example pages generate advertisement region varies somewhat space pages 
result intra cluster content analysis may incorrectly identify dynamic advertisement object rich region 
interesting note sites analyzed previously incorrectly labeled heuristics object extraction system 
sites goto country thor successful identifying appropriate object rich subtree 
extracting multiple object rich fragments final experiment evaluated thor effectiveness identifying multiple object rich portions 
experiment runs page collections 
sets pages contained object rich regions 
result considered thor top recommendations just top ranked 
summarize results table 
amazon com books example top object rich subtrees identified thor main results section see related items sidebar 
see related items sidebar filled query related items amazon com stores toys dvds music sections amazon com 
finding non obvious object rich regions greatly improves power thor success rate thor automated object extraction web pages 

related object extraction closely related answer extraction problem context natural language question answering 
efficiently extracting objects web provides foundation answer extraction increased scope possible data sources query filtering noise inherent web noise navigation bars advertisements boilerplate 
object extraction problem previously explored 
rely inter page similarities differences thor analyzes page independently 
drawback concentrates single fragment page draw data objects distinguish relevant content types complex page regions navigation bars 
current pages complex contain multiple data regions complex regions thor able accurately detect extract discard appropriate 
whirl system uses tag patterns textual similarity items stored deductive database extract simple lists hot lists lists hyperlinks 
authors methods identifying interesting structures web page 
system relies previously acquired information deductive database order recognize data target pages 
data extraction heterogeneity web approach infeasible 
bar yossef rajagopalan identified distinct subsections web page idea somewhat similar minimal subtree formulation 
suggest proper unit information retrieval due pervasive templates generating web pages 
identification relies close similarity 
contrast subtree identification process finds equivalent subtrees constrained set pages content dissimilar 
crescenzi roadrunner algorithm automatically extracting data web pages 
algorithm compares pages generated query form constructs regular expression differences pages 
applied sites approach quickly breaks minor variations non data portions pages subsequently identified attributes 
problem classifying web pages previously tackled glover 
glover web structure classify page larger space web documents 
approach appropriate textual relevance content document query inappropriate clustering pages domain identifying appropriate sections document 

steps identification extraction relevant objects dynamically generated web pages powerful tool necessary realization dynamic search engine 
main thrust level clustering web pages tag structure similarity content layout similarity 
thor phase clustering scheme capitalizes ir techniques exploit local homogeneity dynamically generated web pages relationships hold pages 
extensive experiments shown thor effective platform power generation search engine searching indexing dynamic web content 
research continues direction improving coverage success rate thor 
interested improving sampling quality dynamically generated web pages 
simply supplying random words search form reasonable step expect context sensitive selection search terms yield better coverage entire space possible pages 
interested exploring page representations clustering methods refinement ir tools utilized 

acknowledgments special ashwin ram helpful suggestions chris sprague advice implementing clustering engine 
third author partially supported nsf doe darpa 

abney collins singhal 
answer extraction 
proceedings anlp april 
bar yossef rajagopalan 
template detection data mining applications 
proceedings www may 
burger issues tasks program structures roadmap research question answering march 
liu pu 
fully automated object extraction system web 
proceedings icdcs april 
liu 
discovering objects dynamically generated web pages 
technical report georgia institute technology january 
cohen 
recognizing structure web pages similarity queries 
proceedings aaai july 
crescenzi mecca merialdo 
roadrunner automatic data extraction large web sites 
proceedings vldb september 
duda hart stork 
pattern classification 
john wiley sons new york 
glover lawrence pennock flake 
web structure classifying describing web pages 
proceedings www may 
porter 
algorithm suffix stripping 
program 

clean web pages html tidy 
salton buckley 
term weighting approaches automatic text retrieval 
readings information retrieval 
morgan kauffman san francisco ca 
salton wong yang 
vector space model automatic indexing 
communications acm 
witten frank 
data mining practical machine learning tools java implementations 
morgan kaufmann san francisco 
world wide web consortium 
formed xml documents 
