theory natural language interfaces databases ana maria popescu university washington computer science seattle wa usa amp cs washington edu need natural language interfaces databases increasingly acute people access information web browsers pdas cell phones usable map natural language questions sql queries correctly schneiderman norman argued people unwilling trade reliable predictable user interfaces intelligent unreliable ones introduce theoretical framework reliable foundation fully implemented precise nli prove broad class semantically tractable natural language questions precise guaranteed map question corresponding sql query report experiments testing precise questions drawn user studies benchmark databases find questions semantically tractable questions precise answers correctly 
precise automatically recognizes questions handle requests paraphrase show precise compares favorably mooney learning nli microsoft english query product 
categories subject descriptors database management query languages sql information interfaces presentation user interfaces natural language general terms languages algorithms reliability keywords natural language interface database reliability keith golden dan weld bonnie weber lau comments previous drafts research supported part onr 
permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
iui january miami florida usa 
copyright acm 
oren etzioni university washington computer science seattle wa usa etzioni cs washington edu henry kautz university washington computer science seattle wa usa kautz cs washington edu 
understanding arbitrary natural language sentences widely regarded ai complete understanding questions chinese restaurants seattle straightforward machine natural language sentences potential subtle complex ambiguity simple straight forward clear attempts formalize intuition identifying classes questions easy understand defined sense 
research natural language interfaces databases largely tapered mid need increasingly acute people access wide range databases web browsers pdas cell phones accessing services tiny screen keyboard cell phone pda interaction paradigms direct manipulation browsing far appealing form factors increase appeal coupled speech recognition 
years significant advances dialog management see spoken language dialog systems tutorial systems core problem reliably understanding single sentence far solved :10.1.1.16.5797
anticipate due reliability precise attractive module dialog system 
reliable satisfy users misinterpret questions rarely imagine mouse appropriately responds click time periodically user apparently random location posit users worse reaction told restaurant open sunday turned closed nli understand user indicate attempt engage clarification dialog actively misunderstand user form inappropriate sql query provide user incorrect answer user trust render nli unusable 
consequently twin goals introduce theoretical framework analyzing reliability nli formally defining soundness completeness identifying class semantically tractable natural language questions sound complete built 
second show theory practical import measuring prevalence semantically tractable questions performance sound complete nli 
essence introduces new methodology nli research loosely analogous taxonomic paradigms popular knowledge representation kr computational learning theory colt computer science colt long history easy hard concept class cnf learnable pac framework term dnf similarly kr researchers identified wide range kr formalisms description logics analyzed decidability complexity inference analogy taxonomic theory seeks carve classes questions semantically tractable context claim nli users restrict questions subset english practice identifying classes questions semantically tractable experimentally measuring prevalence questions worthwhile avenue nli research 
goes pure taxonomic results describe fully implemented precise system maps english questions sql queries measures precise efficacy empirically independently gathered sample questions posed university students distinct databases domains restaurants jobs geography report key experimental results semantically tractable questions fact quite prevalent questions mooney data second theoretical analysis able build nli accurate benchmark databases answers semantically tractable questions requests paraphrases intractable ones 
organization remainder organized follows introduce basic notation formalize class easy questions give example precise action describe component precise nli easy questions intuition precise specifying natural subset english efficiently accurately interpreted non recursive datalog clauses state formal results soundness completeness approach empirical results show precise high coverage accuracy common english questions conclude discussion related 

semantic tractability section begins formalize notion semantically tractable questions start preliminary definitions 
database types elements relations attributes values element distinct unique attribute element particular column particular relation value element value particular attribute 
attribute relation containing attribute attribute compatible relation wh word word set database attribute set compatible wh values 
precise accessed www cs washington edu research nli token set word stems matches database element instance require experience need experience match database attribute required experience different tokens match database element conversely token match different elements different types token set possible types value token attribute token corresponding types database elements matches syntactic marker token belongs fixed set database independent tokens semantic contribution interpretation question 
terms defined formalize notion semantically tractable questions definition observation natural questions specify set attribute value pairs free standing values attribute implicit attribute relation may paired wh word 
example consider question french restaurants located downtown context database containing relation restaurants attributes name cuisine location word french refers value french implicit database attribute cuisine words located downtown refer explicit attribute location value downtown restaurant refers relation restaurants corresponds wh word 
fact attributes may implicit allows form ellipsis occurs frequently questions recovering missing information important challenge semantic interpretation 
definition semantically tractable question captures intuitions require set tokens exists word appears exactly token refer token set complete tokenization precise uses attachment function model syntactic attachment constraints derived question parse tree 
attachment function pairs tokens true false instance example tokens located downtown attached tokens downtown 
order sentence interpreted context database complete tokenization map set database elements follows token matches unique database element means match tokens tokenization attribute token corresponds unique value token 
means database attribute matching attribute token database value matching value token compatible attribute token value token attached 
instance consider tokens locate matches location attribute downtown matches value downtown 
downtown compatible location tokens attached locate corresponds downtown 
relation token corresponds attribute token value token 
means database relation matching relation token database element matching attribute value token compatible relation token attached corresponding attribute value token 
syntactic markers tokens job system hp unix sql query lexicon question job hp jobs unix system 
description platform developer system admin hp unix stratify hp select distinct description job hp platform unix transformation question hp jobs unix system sql query context database containing single relation job attributes description platform 
instance relation token restaurant matches relation restaurants corresponds attached value token french matches value french corresponding attribute cuisine note value token need corresponding attribute token sentence form ellipsis mentioned earlier 
mapping complete sentence tokenization set database elements conditions satisfied valid mapping see section sentence tokenization contains distinct tokens value tokens matches wh value refer corresponding sentence semantically tractable 

precise system question precise determines semantically tractable outputs corresponding sql query queries problem finding mapping complete tokenization set database elements semantic constraints imposed conditions satisfied reduced graph matching problem 
precise uses max flow algorithm efficiently solve problem max flow solution corresponds possible semantic interpretation sentence 
precise collects max flow solutions discards solutions obey syntactic constraints retains rest basis generating sql queries corresponding question section begins example precise action 
subsequently describe precise modules detail 
precise action illustrate precise behavior consider maps example question hp jobs unix system sql query question chosen illustrate sort ambiguity precise able resolve automatically brevity clarity example refers single relation job attributes description platform look slightly modified version sentence shows handle multiple relations 
tokenizer produces single complete tokenization question hp job unix system note tokenizer strips syntactic markers 
looking tokens lexicon precise efficiently retrieves set matching database elements token 
case hp unix value tokens system attribute token job relation token see 
matcher constructs attribute value graph shown understand meaning nodes graph helpful read column column left right leftmost node source node value tokens column consists tokens matching database values turn db values column 
instance token hp ambiguous match value attribute value platform attribute edges added value token matching database value solid edges represent final flow path dashed edges suggest alternative flow routes denote flow network 
matcher connects database value corresponding database attribute attribute connected matching attribute tokens node stands implicit attributes attribute tokens link node stands explicit attributes link sink node notice instances column containing db attribute nodes unit edge db attribute node ensures unit flow fact traverses node edges needed db value compatible db attribute db attribute may match attribute token definition valid mapping requires db attribute see section 
graph interpreted flow network ca lexicon contains synonym information system platform synonyms 
hp value tokens unix db values db attributes db attributes attribute tokens description platform hp hp platform unix description platform description platform system attribute value graph created precise question hp jobs unix system relation tokens jobs town db relations relation graph built precise question hp jobs unix platform small town edge indicated capacity edge number attribute tokens example capacity edge number value tokens minus number attribute tokens difference example 
setting capacity difference forces maxflow algorithm send unit flow value token explicit db attribute matcher runs maxflow algorithm graph subject capacity constraints searching integer solution maximum flow network example fact maximum flow graph constructed precise matcher equal number value tokens value token participate match produced algorithm 
solid arrows indicate path chosen maxflow algorithm note ambiguity regarding hp name platform automatically resolved maximizing flow algorithm decides hp choice allows flow edges capacity node edge capacity choice maximizes flow graph algorithm decided hp platform possible interpretation unix final flow 
attribute value tokens matched database elements precise ensures relation tokens correspond value token attribute token 
case unique relation token job amounts checking matching database relations contains attribute matching attribute token example job matches job algorithm match sentence tokens database elements satisfies semantic constraints set conditions semantically tractable sentences 
job city point precise checks match satisfies syntactic constraints represented pairs attached tokens job hp job unix system 
attachment constraints satisfied means valid mapping valid mapping converted sql query precise return set non equivalent queries example single valid mapping precise returns sql query bottom 
consider slightly different version sentence hp jobs unix system small town context database containing job city table addition description platform attributes job contains field 
city attributes name size foreign key corresponding job 
lexicon precise determines town synonym city 
precise builds attributevalue graph similar time node column contains node value token small matches value small database attribute city size value tokens attribute token capacity edge remains capacity unique maximum flow solution exists suggests token database element mapping hp matches job hp unix matches job platform unix small matches city size small system matches job platform 
attribute value tokens matched types flow networks allow syntactic information earlier generation valid mapping initial set edges pruned attachment information max flow procedure runs modified version original flow graph :10.1.1.14.1564
parser plug database lexicon tokenizer english question precise matcher equivalence checker query generator sql query set answer set precise system architecture database elements precise ensure relation tokens correspond value token attribute token solve problem building additional relation flow network detailed 
precise records database relations employed attribute value maxflow solution job city relation flow network unit capacity edges constructed shown 
precise finds max flow solution network relation tokens solution yields oneto match relation tokens database relations contain attributes values match sentence attribute tokens value tokens 
precise ensures relation tokens attached attribute value tokens means valid mapping 
valid mappings query generator constructs sql interpretation corresponding sentence valid mapping contains multiple database relations different sql interpretation built join path corresponding set relations example assumes database contains tables job city possible join path job city 
sql query built select distinct job description job city job hp job platform unix city size small job city 
system architecture look components system greater detail see overview 
lexicon lexicon supports operations word stem ws retrieve set tokens contain ws 
token retrieve set database elements matching describe manner lexicon derived database names database elements extracted split individual words word stemmed corresponding set synonyms identified general purpose word ontology word net database element associated set word stems word stem turn associated set synonyms set sd stemmed words corresponding database element augmented set word stems computed successively replacing word stem sd possible synonym instance set require experience yield set need experience synonym augmented word set represents token matching database element example require experience need experience tokens matching database attribute required experience tokens derived manner point hash tables containing database elements match furthermore tokens placed hash table indexed word stems level storage structure ensures lexicon easily perform defining operations 
tokenizer tokenizer input natural language question output set possible complete question tokenizer proceeds stemming word question looking lexicon set tokens containing word stem potential token tokenizer checks words token question example word price contained tokens matching database attributes breakfast price lunch price dinner price question contains phrase price breakfast relevant attribute breakfast price relevant token price breakfast tokenizer assigns token types database elements potentially match value attribute relation 
potential tokens identified computing set complete equivalent np hard problem exact set covering practice average number complete close tokenization takes seconds wall clock time 
matcher matcher embodies key innovation precise reduce problem finding semantic interpretation ambiguous natural language tokens database elements graph matching problem precisely reduction maximum bipartite matching problem side constraints value token attribute token nodes specified subset db value db attribute nodes involved match matcher runs polynomial time length natural language question maximum ambiguity question tokens :10.1.1.14.1564
parser plug precise relies charniak parser parse question 
precise extracts attachment relationships tokens parse tree example parser enables precise realize question capitals states token capital attached token state attachment relationships matcher generation valid mappings semantic interpretations satisfy syntactic attachment constraints represent valid mappings 
query generator query generator takes database elements selected matcher weaves formed sql query case single relation queries process straightforward select portion query contains database elements paired wh words portion contains conjunction attributes values portion contains relevant relation name attributes case multi relation queries generator adds join conditions clause reflect join path contains relations implicitly invoked attributes query participating relation names listed clause join path unique generator terminates 
generator generates query possible join path submits queries equivalence checker possible multiple join paths yield sql queries equivalent leading precise flag question ambiguous omit technical details brevity see formalization detailed examples :10.1.1.14.1564:10.1.1.14.1564
equivalence checker equivalence checker tests multiple distinct solutions maxflow problem solutions translate distinct sql queries show finding distinct max flow solutions amounts finding maximum matchings bipartite subgraphs current flow graph employ known enumeration algorithm :10.1.1.14.1564
precise checks query equivalence algorithm polynomial time acyclic conjunctive queries 
precise finds distinct sql queries output answer certain query right precise asks user choose competing semantic interpretations particular tokens example consider question systems analyst jobs austin systems analyst refer job title systems analyst hand systems refer area systems analyst refer job title analyst precise asks user indicate appropriate interpretation 
completes overview precise modules tokenizer equivalence checker intractable worst case practice precise quite fast average seconds query wall clock time 

theory section formally define class semantically tractable questions show class questions precise provably reliable see theorem section start introducing necessary notation definitions 
set database elements ea er denote sets values attributes relations set database elements token refers unique matching element tv ta tr denote sets value tokens attribute tokens relation tokens define notion valid mapping question tokenization attachment function lexicon set database elements say valid mapping conditions hold 
sentence token database element match match respecting tokens database elements 
attribute token value token correspondence attribute token corresponds unique attached value token formally ta tokens assigned value attribute token pairs tv ta token appearing tv ta attached tv ta pair unique value attribute pair dv da av tv ta match dv respectively da described 
implicit attributes value token matches database value compatible database attribute database attributes may match attribute tokens sentence refer implicit attributes formally extended set adding attribute elements grouped set er consisting distinct database relations set av compatible attribute value pairs database element appearing relation er contains attribute av 

relation token attribute value token correspondence relation token corresponds attached attribute token attached value token formally tr token assigned attribute token value token creating pair tr properties elements pair attached tr matches relation element dr er matches element av pair dr compatible 
valid mapping question straight forward syntactic manipulation construct sql interpretation see laborious details :10.1.1.14.1564:10.1.1.14.1564
introduce key taxonomic distinction question said semantically tractable relative lexicon attachment function complete tokenization tokens distinct 
contains wh token 
exists valid mapping respecting set database elements semantic interpretation algorithm said sound returns valid mappings algorithm said complete returns valid mappings properties soundness completeness essential nli reliability soundness blocks erroneous interpretations user questions completeness ensures user question ambiguous multiple distinct interpretations system detect ambiguity respond appropriately 
definition semantically tractable questions simplified facilitate exposition theory fact precise handles broader subset english includes sentences containing repeated tokens database specific functions aggregate operators negation formal results discussion definitions place state key guarantee regarding precise 
theorem 
lexicon attachment function precise sound complete semantically tractable question 
furthermore question precise detect semantically tractable holds corollary 
question semantically tractable respect precise output set non equivalent sql interpretations question precise reject question semantically intractable 
naturally theoretical results apply assumptions enumerated earlier satisfied instance prevent misunderstanding precise declines answer questions containing words absent lexicon 
restriction key reliability single unknown word easily change meaning question 
course theory guarantee reliability full blown dialog system believe interface designers see great value having provably reliable nli module enable interface designer localize interpretation errors modules recover appropriately 
prevalent semantically tractable questions practice 
rare results limited interest 
fact experimental results provide evidence semantically tractable questions quite common 

experimental results ran experiments benchmark databases domains restaurants jobs geography database tested set english questions corresponding sql query manually generated expert 
experimental question prevalence semantically tractable questions 
addressed question measuring frequency questions mooney independently collected set questions detected question semantically tractable running precise question precise generated answers question knew question semantically tractable precise automatically rejects intractable questions results shown table see semantically tractable questions quite common ranging geography database restaurant database examples complex semantically tractable questions include largest city state smallest population river traverse state smallest population set intractable questions geography database includes questions containing unknown words requiring databases english questions corresponding queries generously supplied ray mooney group 
restaurants geography jobs table prevalence semantically tractable questions mooney data 
database functions handled precise inquiring information database instance question population density major cities semantically tractable context geography database information concerning population density states available question neighborhoods chicago handled precise word neighborhood unknown 
second experiment augments theoretical soundness result precise precise provably guaranteed sound result holds assumptions spelled section happens practice 
benchmark databases precise mistakes sql queries generated ones generated hand mooney data reasonable believe captured user intent asking natural language question result important meeting goal building reliable nli see 
assess difficulty problem compared precise accuracy mooney learning nli microsoft nli sql server english query metric precision adapted information retrieval literature formally precision nli data set number english questions nli correctly maps question corresponding sql query divided number questions nli answers nli declines answer questions 
precise shows better precision learning nli massively outperforms microsoft product databases tested 
precision mooney data rest geo jobs mooney precise eq precision mooney data precise errors precision differences precise mooney nli statistically significant geo job dbs sample test 
surprised extent research prototypes outperformed microsoft english query eq 
eq trouble identifying correct database elements referred sentence instance restaurant domain names counties mistaken names cities addition eq learning nli ignore parts question fail parse yielding incorrect answers contrast precise refuses return sql query cases key advantage precise compared learning nli mooney precise sensitive changes distribution questions inductive learning systems typically suffer distribution data time changes distribution training data measure impact distribution drift mooney system collect new data set questions domain graduate students university washington manually labeled correct sql queries input questions learning nli precise results show learning nli precision dropped average 
contrast precise remained precise 
precision new data rest geo jobs mooney precise precision new data precision learning nli sensitive distribution changes precise remains error free 
differences shown statistically significant 
tested experiments decline answer questions refer number questions answered nli divided total number questions nli recall recall different shown precise recall lower geography databases important keep mind precise highly portable system require training examples manually labeled appropriate sql query precise require extensive manual customization case microsoft english query 
sharp contrast early semantic grammars typically took months programmer time database 

related approach language understanding differs natural language systems spoken language dialog systems tutorial systems speech systems employed grams combination cfg grammars language modeling purposes addresses large scale dependency grammars include semantic information hierarchical statistical language models powerful systems don offer theoretical guarantees different algorithms extensive earlier different 
precise transportable arbitrary databases sense contrast hand crafted semantic grammars tailored individual database ladder 
undergraduate spent hours database customize microsoft product 
recall mooney data rest geo jobs mooney precise eq recall mooney data precise handles slightly fewer questions mooney learning nli questions microsoft english query 
recall differences precise learning nli statistically significant job dataset 
early similarities precise done field sublanguages previous research sublanguages focused subsets natural language restricted single domain medicine 
kittredge realized applications machine translation text generation systems better chance achieving high performance tailored specific domains 
order correctly analyze text kittredge relies semantic constraints stated entire english language written domainspecific grammar addition sublanguage typically relies hand crafted domain specific lexicon sublanguages medical domain sublanguage may specialized word formation rules traditional sublanguage looked defining sublanguages various domains suggests ai techniques learn aspects sublanguages automatically 
viewed generalization traditional sublanguage research domain independent rely domain specific grammar lexicon lexicon automatically extracted input database standard parsers restricting particular domain restrict sublanguages english defined generally example shows questions mapped non recursive datalog clauses semantically tractable addition offering formal guarantees report experiments quantify prevalence sublanguage sample questions collected independently mooney 
uses description logics translate logical form question sql interpretation logical form question obtained compositional manner syntactic information 
precise system uses extensive domain specific knowledge evaluated experimentally 
focus inspired mooney argued convincingly renewed interest showed strong performance achieved combination novel learning methods built directly mooney experimental framework chosen explore different point nli design space focus high precision expense recall example analyze word sentence mooney nli ignore unknown words try interpret sentence learning approach obviates creating training examples labeling example appropriate sql queries insist able plug state art parsers leverage ongoing improvements mooney easily accommodate natural consider synergies approaches complimentary strengths example precise source training examples mooney learning systems 
developing precise independently literature search uncovered chu meng system stores information database graph nodes represent database tables edges represent different types relationships tables natural language question system uses statistical approach order recognize database elements relations attributes values referred question system relies heuristics supplement information extracted question adding join conditions 
valid sql query formed precise system transportable graph graph representation associated semantic interpretation algorithm different chu meng system reduce semantic interpretation matching problem able offer theoretical guarantees 
system evaluated empirically difficult assess effectiveness practice 
group exact natural language interface builds precise theoretical framework laid exact composes extended version precise sound complete planner develop powerful provably reliable interface household appliances 

described novel theoretical practical approach problem producing reliable nli databases interfaces increasingly important web sites particularly people access information pdas cell phones devices small screens guis appealing best knowledge formal guarantees soundness completeness nli shown experimentally guarantees result nli highly reliable practice 
precise provided correct answers questions data sets correctly identified rest questions understand 
precise effective semantically tractable questions plan explore increasingly broad classes questions experimentally analytically 
precise extended handle additional types sql statements database specific functions plan include precise module full fledged dialog system investigate theoretical guarantees broader context 
important direction helping users understand types questions precise handle dialog enabling build accurate mental model system capabilities 
precise responses questions decline answer helpful example precise extended say please simpler sentences analysis parse tree indicate limitations knowledge don geographical information outside 

allen ferguson stent 
architecture realistic conversational systems 
intelligent user interface 
androutsopoulos ritchie 
natural language interfaces databases 
natural language engineering vol part pages 
baader hollunder 
terminological knowledge representation system complete inference algorithms 
proceedings international workshop processing declarative knowledge 
charniak 
maximum entropy inspired parser 
proceedings naacl 
chekuri 
conjunctive query containment revisited 
proceedings sixth international conference database theory 
chu meng 
database query formation natural language semantic modeling statistical keyword meaning disambiguation 
technical report ucla cs dept 
core moore zinn 
initiative tutorial dialogue 
proceedings workshop empirical methods tutorial dialogue systems 
cormen leiserson rivest 
algorithms 
mit press cambridge massachusetts 
donini lenzerini nardi nutt 
complexity concept languages 
information computation 
etzioni kautz popescu :10.1.1.14.1564
theory natural language interfaces databases 
submitted publication 
grosz appelt martin pereira 
team experiment design transportable natural language interfaces 
artificial intelligence pages 
hendrix sacerdoti 
developing natural language interface complex data 
acm transactions database systems pages 
kittredge 
sublanguages 
american journal computational linguistics pages 
kittredge variation homogeneity sublanguages 
kittredge editors sublanguage studies language restricted semantic domains pages 
de gruyter berlin 
adaptive information extraction sublanguage analysis 
proceedings ijcai 
litman kearns walker 
optimizing dialogue management reinforcement learning experiments njfun system 
journal artificial intelligence research jair 
satoshi 
new direction sublanguage nlp 
new methods language processing pages 
stallard 
terminological transformation natural language question answering systems 
proceedings acl 
tang mooney 
multiple clause constructors inductive logic programming semantic parsing 
proceedings th european conference machine learning ecml freiburg germany pages 
uno 
algorithms enumerating perfect maximum maximal matchings bipartite graphs 
international symposium algorithms computation isaac pages 
valiant 
theory learnable 
communications acm pages 
yates etzioni weld 
reliable natural language interface household appliances 
submitted iui 
