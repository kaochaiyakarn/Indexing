recognizing objects adversarial clutter breaking visual captcha greg mori jitendra malik computer science division computer science division university california berkeley university california berkeley berkeley ca berkeley ca mori cs berkeley edu malik cs berkeley edu explore object recognition clutter 
test object recognition techniques gimpy ez gimpy examples visual captchas 
captcha completely automated public turing test tell computers humans apart program generate grade tests humans pass current computer programs pass 
ez gimpy see fig 
currently yahoo gimpy fig 
captchas word recognition presence clutter 
captchas provide excellent test sets clutter contain adversarial designed confuse computer programs 
developed efficient methods shape context matching identify word ez gimpy image success rate requisite words gimpy image time 
problem identifying words severe clutter provides valuable insight general problem object recognition scenes 
methods instances framework designed tackle general problem 
ez gimpy captcha yahoo 
captcha program generate grade tests 
humans pass gimpy captcha 
task list different words image 

current computer programs pass captcha stands completely automated public turing test tell computers humans apart 
concept program arose real world problems faced internet companies yahoo altavista 
yahoo offers free email accounts 
intended users humans yahoo discovered various web pornography companies bots sign thousands email accounts minute send junk mail 
solution require user solve captcha test receive account 
program picks word dictionary produces distorted noisy image word see fig 

user image asked type word appears image 
type deformations humans succeed test current programs including ocr programs fail test 
goal screening bots achieved 
manuel blum group cmu designed number different captchas 
strongly recommend visiting www captcha net view examples 
gimpy word recognition presence clutter 
task identify approximately words cluttered image 
yahoo test easier version called ez gimpy involves single word 
pix image recognition typically categories 
chew baird developed test involving heavily degraded fonts 
captchas designed auditory recognition 
visually impaired humans may appropriate tests 
underlying principle design captchas reduction hard ai problem 
words ahn blum langford program passes tests generated captcha solve hard unsolved ai problem 
hope provide challenge problems ai researchers 
problem solved computer programs captcha provide practical help companies yahoo altavista solved marks scientific progress hard ai problem 
vision researchers decided take challenge defeating ez gimpy gimpy 
describes algorithm achieves goal 
ez gimpy program correctly identifies word time implies yahoo longer screen bots 
success rate gimpy renders ineffective screening tool 
datasets provide just toy problem 
explore major aspects object recognition difficult clutter tradeoffs recognition parts versus object 
captchas challenging clutter designed difficult computer programs handle 
recognition words lends easily approached recognition parts individual letters bigrams objects entire words 
importantly datasets large 
words need recognized 
source code generating captchas available public access practically infinite set test images 
stark contrast object recognition datasets number objects limited difficult generate reasonable test images 
definitely limitations dataset terms studying general object recognition 
notably objects variation due pose 
addition shading lighting effects synthetic images words 
believe ability quantitative experiments large set test images difficult clutter outweighs drawbacks 
hope researchers attempt techniques captchas 
computer vision researchers worked problem object recognition 
approaches plausible candidates success domain le cun amit 
lecun convolutional neural networks perform handwritten character recognition 
amit point features combined graphs match various deformable objects 
techniques somewhat robust clutter obvious deal kind adversarial clutter gimpy images 
structure follows 
section describe general purpose matching framework 
section explore tradeoffs parts holistic matching 
describe algorithms framework sections apply ez gimpy gimpy 
conclude section 
matching shape contexts database images known objects 
task find instances objects cluttered environment 
case gimpy images objects words letters possibly variety fonts 
compare objects shapes represented discrete set points sampled internal external contours shape 
belongie introduced shape context descriptor representation deformable template approach match handwritten digits objects 
consider set vectors originating point sample points shape 
vectors express configuration entire shape relative point 
obviously set vectors rich description gets large representation shape exact 
full set vectors shape descriptor detailed shapes sampled representation may vary instance category 
distribution relative positions robust compact highly discriminative descriptor 
point shape compute coarse histogram relative coordinates remaining points bin histogram defined shape context descriptor sensitive differences nearby pixels suggests log polar coordinate system 
example shown fig 

related approach developed data spin images technique johnson hebert 

matching framework belongie resulted extremely performance accuracy mnist digit set variety object recogni log log shape contexts 
sampled edge points shapes 
diagram log polar histogram bins computing shape contexts 
example shape contexts samples marked 
shape context log polar histogram coordinates rest point set measured point origin 
dark large value 
note visual similarity shape contexts computed relatively similar points shapes 
contrast shape context quite different 
tion problems 
applying deformable matching algorithm large database models computationally prohibitive 
deal problem mori described stage approach object recognition :10.1.1.112.3378
fast pruning query image able quickly retrieve small set candidate shape location pairs potentially large collection stored shapes 

detailed matching small set candidate shapes perform expensive accurate matching procedure find best matching shapes query image 
matching framework style 
sections describe new descriptor extension shape contexts 
provide details stages recognition framework fast pruning detailed matching 

generalized shape contexts extended shape context descriptor encoding descriptive information point counts log bins 
edge point attach unit length tangent vector direction edge bin sum tangent vectors points falling bin 
bin bin holds single vector direction dominant orientation edges bin 
compare distance similar distance 
bins call extended descriptors generalized shape contexts 

fast pruning goal fast pruning stage construct small set hypotheses objects various locations query image 
tests representative shape contexts accomplish goal 
matching process proceeds manner 
known shapes precompute large number shape contexts query image compute small number representative shape contexts 
compute shape contexts randomly select sample points image 
comparisons known shapes shape contexts voting scheme 
cluttered images shape contexts contain noisy data located shape known shapes find best representative shape contexts ones smallest distances 
call set indices 
distance normalizing factor measures native representative shape context shape appear times query image 
sets model group nearby representative shape contexts obtain sets 
set shapes 
obtain estimate position shape image best matches point votes shape location point weight representative shape context shape final estimate location result fast pruning procedure set tuples 
threshold set distance obtain small set candidates 
voting ideas object recognition lamdan 
method different ones geometric hashing uses soft weighting votes locations making hard decisions 

detailed matching detailed matching stage uses deformable template approach 
approach query shape compared candidate model shape attempting deform model alignment query shape 
implement iterations correspondence shape context matching deformation thin plate splines 
cost performing deformation computed shape context distance matching cost model query 
details 

approaches recognition important types data available solving word recognition tasks lexical information visual cues 
lexical information set words set bigrams set letters depending scope view 
visual cues grayscale patches edges features image 
order design recognition algorithm exploit information cues 
study role tradeoffs exist 
field handwriting recognition different levels lexical information studied 
approaches take holistic approach recognizing entire words focus recognizing individual characters 
srihari provide extensive survey 
holistic approaches incur computational cost models expressive discriminative power visual cues gathered large areas 
efficient essentially parts algorithms faster difficulty clutter visual cues parts corrupted 
sections develop algorithms 
takes bottom parts approach finding characters lexical information decide characters formed words stage 
second algorithm uses holistic approach tries find words immediately 
devise pruning methods deal associated efficiency problems 
experiments algorithm break ez gimpy algorithm ez gimpy gimpy 
show clutter gimpy corrupts visual cues degree individual letters longer discriminable 
scenarios holistic approach desirable 
visual cues ez gimpy efficient parts approach merits 

algorithm algorithm finding words images works bottom starting visual cues incorporates lexical information 
consists steps 
perform series quick tests hypothesize locations letters image 
extract strings hypothesized letters form candidate words 
choose word evaluating matching score words example processing image stages method shown fig 

general philosophy follow coarse fine matching strategy computational efficiency 
start quick approximate tests prune away search space 
tests may high false positive rates reject correct hypotheses 
way computationally expensive accurate tests final comparison determines word 
need apply expensive tests small number remaining hypotheses 
previous geman viola jones follow similar vein thought 
specifically step method prunes large space letter locations letters occur image hypothesized tuples 
second step analyzes set tuples produce actual words dictionary 
expensive task assigning score word performed small set 
sections provide details step algorithm 
steps algorithm demonstrated simple example gimpy image locations hypothesized letter locations dag possible strings letters scores top matching words shown paths dag 
word profit best matching word 

finding letter hypotheses step method hypothesize list tuples 
stage fast location image letters 
start training set images uncluttered image single letter 
run canny edge detection images construct generalized shape context edge point training image 
gives pre computed database approximately generalized shape contexts 
employ voting scheme represen shape contexts technique described section :10.1.1.112.3378
sample number canny edge points image compute representative shape contexts 
number typically 
process outlined gives set tuples 
threshold scores obtain final set hypotheses total 

extracting candidate words point set hypotheses image 
tend clusters hypotheses real letters image shown fig 

step find sequences letters form candidate words 
construct directed acyclic graph dag node letter hypothesis edge note images containing background texture canny edge detector fire nearly 
need way choosing representative shape contexts near letters wasted background 
sample representative shape contexts near high values texture gradient operator 
operator designed measure texture differences interior homogeneous texture small response 
nodes letter hypothesis letter succeeding word 
compute consistency pair letters considering bounding boxes obtained training images letters 
letter location left letter words read left right 
second bounding boxes overlap far away 
enforces spatial continuity words 
path dag represents possible word 
typical gimpy image easily paths dag 
paths nonsense strings letters 
wish quick pruning order reduce number paths dag 
tri grams pruning 
tri gram sequence letters possible tri grams 
letter word tri grams 
probability trigrams word appearing chance dag low 
fact devise pruning method 
precompute tri grams words dictionary ez gimpy uses words 
obtaining dag letter hypotheses test image quickly compute tri grams usually 
prune dictionary word image tri grams 
small number remaining words check path dag tri grams occur sequence 
words pass final test listed final set candidate words 
note technique example strategy string matching 
studied subject 

choosing word set candidate words wish choose answer gimpy test 
final step computationally intensive 
left words need evaluated 
score ranking set candidate words deformable matching cost individual letters similar belongie matching handwritten characters 
scores obtained matching costs generalized shape contexts 
score word average score matching letters 
final step 
compute matching scores candidate words 
answer gimpy test word best matching score 

results ez gimpy captcha consists single deformed word cluttered image 
see fig 
examples typi collar join flag canvas smile line horse jewel weight sound rice spade examples results ez gimpy images 
best matching word shown image 
examples produced correct results incorrect results 
cal ez gimpy images 
algorithm quickly find word images 
experiments generated examples ez gimpy captcha code available www captcha net 
examples tuning parameters bounding box similarity computation texture gradient modules 
remaining examples test set 
test cases top matching word method correct success rate 
note possible soft probabilistic strategy involving hmms choose word dag making hard pruning decisions 
examples ez gimpy captcha images top matching words shown fig 

full set test images results viewed online www cs berkeley edu mori gimpy ez 
examples letter sized patches gimpy captchas 
difficult read isolated letters long range context appear 
read words 
processing gimpy image algorithm 
input image 
process pair words separately 
edge detection output single pair words 
hypothesized bigrams 
pixels remaining guess word round 
multiple iterations step guess word remove pixels guess remaining word performed 

algorithm second algorithm holistic attempts find entire words looking letters 
severe clutter parts occluded highly ambiguous 
case gimpy letters 
shows example letter sized patches gimpy images 
nearly impossible determine character patches 
sees entire word clear word displayed 
motivation holistic approach recognition 
construct shape contexts elliptical shape outer radius characters horizontally character vertically 
features doing recognition word level 
approach representative shape contexts compare word dictionary infeasible computational cost 
pruning reduce set words manageable size holistic approach match complete words 
shows steps processing image algorithm 

pruning bigrams shows examples gimpy captchas 
image contains words duplicates overlaid pairs background clutter 
examine pair words separately 
task correctly recognize words 
images salient parts words letters 
opening closing bigram number possible candidate words small 
pruning observations 
word gimpy dictionary distinct opening closing bigrams 
accurately determine bigrams left small number candidate words 
bigram pruning done fast pruning method outlined 
experiments gimpy truncate list bigrams ordered shape context distance left shortlist candidate words 
holistic matching done reduce size shortlist 
experiments sorted candidate words word sized shape contexts features fast pruning process left words 

layers words gimpy captcha words appear pairs 
guess words try remove recognize second word remaining pixels 
removal pixels done assignment problem 
match edge pixels guess word edges image 
remove edges image matching repeat bigram pruning obtain new shortlist possible second words 
type analysis similar transparency 

final score layers analysis left pairs words guesses word guesses second word 
final step assign scores words 
pair produce synthetic image words overlaid estimated locations pruning method 
compute shape contexts synthetic image 
final score word representative shape contexts pruning cost sizable fraction experiments edge pixels word value number edge points match 
edges center word corrupted recognition isn useful final scoring 
words pair scored separately select best edge points word 
gimpy captcha task recognize words 
choose words best score answer 

results tested algorithm instances gimpy captcha 
order pass program guess words image 
results shown fig 

successfully guess words image time 
accuracy captcha ineffective applications screening bots computer flood application thousands requests 
correct words percentage tests results gimpy 
task guess words image 
pass test time 
words guessed correct frequently 
sharp decrease accuracy fig 
unexpected 
assume accuracy words independent single word accuracy expect pass test time 
applied algorithm searching entire words layers analysis instances ez gimpy algorithm correct word success rate 

explored methods performing object recognition clutter 
explored tradeoffs high level lexical information case dictionary words guide recognition versus relying low level cues 
tested algorithms word captchas allow experiments test images 
clutter involves real objects words gimpy images recognition difficult heavily textured backgrounds ez gimpy 
algorithms able effectively deal types clutter break captchas high frequency success 
problem identifying words severe clutter provides valuable insight general problem object recognition scenes 
parts ambiguous clutter time anchoring obvious parts improve efficiency 
algorithms dry clear medical door farm important public nose receipt true carriage potato clock church tongue bad narrow bulb right sudden apple oven results gimpy 
words guessed algorithm shown image 
instances general framework applied recognition problems 
amit kong 
graphical templates model registration 
ieee trans 
pami 
belongie malik puzicha 
shape context new descriptor shape matching object recognition 
nips november 
belongie malik puzicha 
shape matching object recognition shape contexts 
ieee trans 
pami april 
chan 
sound oriented captcha website drive research 
chew baird 
human interactive proof 
proceedings spie electronic imaging document recognition retrieval pages january 
geman 
model classification trees 
ieee trans 
info 
theory 
gusfield 
algorithms strings trees sequences computer science computational biology 
press university cambridge 
jepson fleet black 
layered motion representation occlusion compact spatial support 
european conference computer vision 
johnson hebert 
spin images efficient object recognition cluttered scenes 
ieee trans 
pami may 
lamdan schwartz wolfson 
affine invariant model object recognition 
ieee trans 
robotics automation 
lecun bottou bengio haffner 
learning applied document recognition 
proceedings ieee november 
govindaraju 
role holistic paradigms handwritten word recognition 
ieee trans 
pami february 
martin fowlkes malik 
learning find brightness texture boundaries natural images 
nips 
mori belongie malik 
shape contexts enable efficient retrieval similar shapes 
cvpr volume pages 
island driven large vocabulary line handwriting recognition character confidence scoring 
icassp 
line line handwriting recognition comprehensive survey 
ieee transactions pattern analysis recognition january 
szeliski avidan anandan 
layer extraction multiple images containing reflections transparency 
ieee computer vision pattern recognition 
viola jones 
robust real time object detection 
nd intl 
workshop statistical computational theories vision 
von ahn blum langford 
telling humans computers apart automatically 
cmu tech report cmu cs february 
