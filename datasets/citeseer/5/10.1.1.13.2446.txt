astrolabe robust scalable technology distributed system monitoring management data mining robbert van renesse kenneth birman werner vogels department computer science cornell university ithaca ny ken vogels cs cornell edu scalable management self organizational capabilities emerging central requirements generation large scale highly dynamic distributed applications 
developed entirely new distributed information management system called astrolabe 
astrolabe collects large scale system state permitting rapid updates providing fly attribute aggregation 
capability permits application locate resource knowing machines resides offers scalable way track system state evolves time 
combination features possible solve wide variety management self configuration problems 
describes design system focus scalability 
describing astrolabe service examples astrolabe locating resources publish subscribe distributed synchronization large systems 
astrolabe implemented peer peer protocol uses restricted form mobile code sql query language aggregation 
protocol gives rise novel consistency model 
astrolabe addresses security considerations built pki 
scalability system evaluated simulation experiments confirm astrolabe scale thousands millions nodes information propagation delays tens seconds 
categories subject descriptors computer communication networks network architecture design network communications computer communication networks distributed systems distributed applications programming techniques concurrent programming distributed programming operating systems communications management network communication operating systems reliability fault tolerance operating systems security protection authentication operating systems organization design distributed systems information systems information search retrieval information filtering information systems information storage retrieval distributed systems information systems online information services data sharing 
research funded part darpa afrl part nasa ree program administered jpl part nsf cise 
authors grateful support afrl cornell information assurance institute 
general terms algorithms monitoring management performance reliability security 
additional key words phrases membership failure detection epidemic protocols gossip aggregation scalability publish subscribe 
wide availability low cost computers pervasive network connectivity organizations facing need manage large collections distributed resources 
include personal workstations dedicated nodes distributed application web farm objects stored computers 
computers may located room spread building campus scattered world 
configurations systems change rapidly failures changes connectivity norm significant adaptation may required application maintain desired levels service 
growing degree applications expected self configuring range permissible configurations grows enormously complex undertaking 
management subsystem contemporary distributed system web services system reporting data collected set corporate databases file systems resources complex application 
technology options building management mechanisms lagged 
current solutions cluster management systems directory services event notification services scale adequately designed relatively static settings see section 
time writing widely scalable distributed management system dns :10.1.1.156.7859
dns directory service organizes machines domains associates attributes called resource records domain 
designed primarily map domain names ip addresses mail servers dns extended variety ways dynamic support wider variety applications 
extensions include round robin dns rfc support load balancing server record rfc support service location naming authority pointer rfc uniform resource names 
date acceptance new mechanisms limited 
describe new information management service called astrolabe 
astrolabe monitors dynamically changing state collection distributed resources reporting summaries information users 
dns astrolabe organizes resources hierarchy domains call zones avoid confusion associates attributes zone 
dns zones bound specific servers attributes may highly dynamic updates propagate quickly typically tens seconds 
astrolabe continuously computes summaries data system onthe fly aggregation 
aggregation mechanism controlled sql queries understood type data mining capability 
example astrolabe aggregation monitor status set servers scattered network locate desired resource basis attribute values compute summary description loads critical network components 
information changes automatically rapidly recompute associated aggregates report changes applications registered interest 
aggregation intended summarizing mechanism 
example aggregate count number nodes satisfying property concatenate names list list unbounded size 
approach intended bound rate information flow participating node worst case conditions independent system size 
aggregate restricted scope computed behalf visible nodes 
aggregates high global value global scope 
number aggregating queries active scope assumed reasonably small independent system size 
ensure applications accidentally violate policies nodes seeking introduce new aggregating function administrative rights scope computed 
initial experience astrolabe aggregation mechanisms demonstrates system extremely powerful despite limits 
managers application technology monitor control distributed application aggregates summarize state network domains scopes composed 
new machine joining system astrolabe discover information resources available vicinity exploiting scoping mechanisms aggregation facility resources reported domain value applications joining region network 
failure astrolabe notification coordinate reconfiguration 
broadly form loosely coupled application astrolabe platform coordinating distributed tasks 
astrolabe uses capabilities self management 
may sound designing aggregate sufficiently concise high value applications art 
problem turns relatively straightforward design hierarchical database 
relatively small number aggregating mechanisms suffice deal wide variety potential needs 
experience supports hypothesis forms information needed large scale management configuration control generally amenable compact representation 
astrolabe maintains excellent responsiveness system large exhibits significant dynamicism 
loads associated technology small bounded level message rates seen participating machines loads imposed communication links 
astrolabe small footprint sense computational storage overheads 
astrolabe system looks user database virtual database reside centralized server support atomic transactions 
database presentation extends aspects 
importantly zone viewed relational table containing attributes child zones turn queried sql 
database integration mechanisms odbc jdbc standard database programming tools access manipulate data available astrolabe :10.1.1.20.5411
aggregation complex topic 
just begun explore power astrolabe existing mechanisms considered possible extensions 
limits mechanisms implemented current version astrolabe focuses believe common ways 
design astrolabe reflects principles 
scalability hierarchy scalable system maintains constant slowly degrading overheads performance size increases 
astrolabe achieves scalability zone hierarchy 
bounds size amount information zone computational communication costs astrolabe bounded 
information zones summarized exchanged zones keeping wide area storage communication requirements manageable level 

flexibility mobile code different applications monitor different data single application may need different data different times 
restricted form mobile code form sql aggregation queries allows users customize astrolabe installing new aggregation functions fly 

robustness randomized peer peer protocol systems centralized servers vulnerable failures attacks 
astrolabe uses peer peer approach running process host 
processes communicate epidemic protocol 
protocols highly tolerant failure scenarios easy deploy efficient 
communicate randomized point point message exchange approach astrolabe robust face localized overloads may briefly shut regions internet 

security certificates astrolabe uses digital signatures identify reject potentially corrupted data control access potentially costly operations 
zone information update messages configuration client credentials encapsulated signed certificates 
zone tree forms public key infrastructure 
discusses principles 
section overview astrolabe service 
section illustrates astrolabe number applications 
astrolabe implementation described section 
describe astrolabe security mechanisms section 
section explain astrolabe leverages mobile code section describes performance scalability 
show astrolabe scale thousands millions nodes information propagation delays tens seconds 
section describe various related astrolabe borrows heavily 
section concludes 
astrolabe overview astrolabe gathers disseminates aggregates information zones 
zone recursively defined host set non overlapping zones 
zones said non overlapping hosts common 
structure astrolabe zones viewed tree 
leaves tree represent hosts see 
processes hosts run astrolabe process access astrolabe service rpc protocol remote astrolabe process 
example level astrolabe zone tree 
top level root zone child zones 
zone including leaf zones hosts attribute list called mib 
host runs astrolabe agent 
zone root local zone identifier string name unique parent zone 
zone globally identified zone name path zone identifiers root separated slashes 
usa cornell pc 
host runs astrolabe agent 
zone hierarchy implicitly specified system administrator initializes agents names 
example usa cornell pc agent creates usa usa cornell zones exist 
zone hierarchy formed decentralized manner ultimately determined system administrators 
see representatives set agents elected take responsibility running gossip protocols maintain internal zones fail unsuitable protocol automatically elect take places 
associated zone attribute list contains information associated zone 
borrowing terminology snmp attribute list best understood form management information base mib information certainly limited traditional management information 
snmp astrolabe attributes directly writable generated called aggregation functions 
zone set aggregation functions calculate attributes zone mib 
aggregation function zone sql program takes list mibs zone child zones produces summary attributes 
leaf zones form exception 
leaf zone set virtual child zones 
virtual child zones local corresponding agent 
attributes virtual zones writable generated aggregation functions 
leaf zone virtual child zone called system agent allows new virtual child zones created 
example application host may create virtual child zone called snmp populate attributes snmp mib 
application responsible updating astrolabe mib snmp attributes change 
astrolabe designed assumption mibs relatively small objects bytes millions 
application dealing larger objects include object mib export information object url downloading copy time stamp version number content summary 
examples treat individual computers owners leaf zones assume machine reasonably small amount state information report 
astrolabe support systems individual objects leaf zones track states large numbers files database records objects 
astrolabe aggregation functions query states objects 
keep mind aggregation functions summarize outputs bounded size 
design aggregation function count pictures containing images tall thin man list pictures strongest match 
aggregation list pictures 
fact easy enumerate nodes contribute counting aggregate done application aggregation function 
describe mechanism aggregation functions construct mib zone 
aggregation functions programmable 
code functions embedded called aggregation function certificates signed timestamped certificates installed attributes inside mibs 
names attributes required start reserved character 
zone astrolabe agent host scans mibs child zones looking attributes 
finds name different values selects evaluation 
aggregation function evaluated produce mib zone 
agents learns mibs zones gossip protocol described section 
thinks astrolabe form decentralized hierarchical database table relation zone 
column leaf zone value extracted corresponding node object 
column inner zone value computed aggregating function summarize children 
columns different children 
example child zones report loads numbers files containing pictures tall thin men inner zone column giving mean load children counting total number matching pictures reported children third listing child nodes strongest matches 
case probably column giving actual quality matches aggregation performed higher levels zone hierarchy 
isn required astrolabe scoping mechanism search matching pictures single zone corner tree defined scope 
effect leaf nodes sharing common ancestral zone agree layout mib ancestral zone sibling zones level hierarchy different schemas different kinds data different columns 
addition code may contain information 
important uses information requests run time configuration 
information request afc specifies information application wants retrieve participating method description find contacts time scope search astrolabe agents scope set contacts addresses specify addresses initial agents connect get attributes zone event queue report updates attributes zone get children zone event queue report updates zone membership set attribute zone attribute value update attribute table application programmer interface 
host aggregate information zone hierarchy 
specified sql queries 
configuration afc specifies run time parameters applications may dynamic line configuration 
examples uses 
applications invoke astrolabe interfaces calls library see table 
initially library connects astrolabe agent tcp 
set agents library choose specified contacts 
optionally eligible agents automatically find contacts 
time parameter specifies long search parameter specifies search broadcast request local network 
simplest case astrolabe agent run host application processes connect agent local host need worry connection breaking 
library allows applications information astrolabe tree setting connections agents necessary 
creation termination connections transparent application processes programmer think astrolabe single service 
updates attributes zones updates membership zones posted local event queues 
applications update attribute virtual zones attribute 
native interface library sql interface allows applications view node zone tree relational database table row child zone column attribute 
programmer simply invoke sql operators retrieve data tables 
selection join union operations programmer create new views astrolabe data independent physical hierarchy astrolabe tree 
odbc driver available sql interface existing database tools astrolabe directly databases import data astrolabe 
sql support instant notifications attribute changes applications need notifications need obtain native interface 
astrolabe agents act web servers information browsed changed standard web browser going library 
examples foregoing overview describes full feature set system may convey simplicity elegance programming model enables 
examples follow intended illustrate power flexibility astrolabe brings distributed environment 
example peer peer caching large objects distributed applications operate large objects 
infeasible keep objects central server copy internet process needs copy 
loading time long load network high 
solution processes find nearby existing copy internet side load object peer peer copying protocol 
section look astrolabe locate nearby copies manage freshness 
suppose trying locate copy file game db 
assume host database files contains entry file 
fact written odbc driver host file system appear database 
find particular host copy file may execute sql query host select count file count files name game db count host copy file 
may hosts copy file need aggregate information location files 
purpose example assume host installs attribute result containing host name leaf mib 
practice attribute extracted query say registry host 
aggregation query counts number copies zone picks host zone file 
host name exported result attribute zone select result result sum file count file count file count simply combine queries information request afc ir afc install 
ir afc propagates astrolabe hierarchy necessary information collected aggregated 
discussion may sound typical application install new aggregation queries fairly broad global scope 
noted earlier case pattern violate scalability system creating zones near root large numbers attributes 
aggregate just shown global importance value limited smaller zone programs need result short lifetime find file terminate 
notice aggregation intrinsically parallel 
aggregated value seen zone regional value computed zone children 
example searching game db common need node doing aggregate find nearby copy distance metric define attrs astrolabe sql extension returns named attributes rows 
necessary specify clause select statement input table 
necessary nested statements 
astrolabe hierarchy 
effect applications aggregation search different files albeit ones matching query 
somewhat counter intuitive property aggregates astrolabe far powerful case root aggregation value interest 
purposes root aggregation helper function values inner zones useful 
particular find nearest copy file process inspect local zone mib lists result 
simply travel hierarchy finds zone result attribute root zone 
root zone result attribute empty copy file 
example care freshness copy retrieved 
suppose file maintains version attribute 
zone list host version file follows select result version version select max version process may determine version number checking version attribute root zone 
process wishing obtain latest version simply go tree starting leaf zone finds right version 
process wants download new versions available simply monitor root zone version number find nearby host copy 
example illustrates astrolabe data mining resource discovery 
move example explore raw information may collected 
odbc standard mechanism retrieving data variety sources including relational databases spreadsheets large variety vendors 
language specifying data accessed sql 
data represented odbc data structures 
developed agent connect odbc data sources retrieve information post information astrolabe zone tree 
host runs astrolabe odbc agent 
odbc agent inspects certificates astrolabe tree names start prefix odbc 
certificates specify data source connect information retrieve 
agent posts information virtual system zone local astrolabe agent 
odbc certificates may specify information aggregated astrolabe 
applications update certificates fly change data sources actual information retrieved aggregated 
new agent host astrolabe zone hierarchy longer true leaf node 
host understood zone child nodes represent objects programs files reside host 
astrolabe representation capable holding information object potentially worldwide network millions hosts billions objects 
course user see vast collection information place 
astrolabe completely decentralized technology user sees parent zones children 
power dynamic aggregation massive network parent zones dynamically report status example selectcast zone elects routers forwarding messages forwarding messages 
sender sends message router child zone root zone 
vast numbers objects 
suppose example virus enters system known change particular object 
merely defining appropriate afc system administrator able identify infected computers virus detection software disabled 
agents retrieving data possible 
written windows registry agent retrieves information windows registry including large collection local performance information 
similar agent unix system information available 
example peer peer data diffusion distributed games applications require form multicast scales fairly reliable put tcp unfriendly load internet 
face slow participants multicast protocol flow control mechanism force entire system grind halt 
section describes selectcast multicast facility built astrolabe 
selectcast uses astrolabe control sets tree tcp connections transporting messages 
full length preparation selectcast subsystem limit high level summary 
multicast group name say game 
participants notify interest receiving messages group installing tcp ip address attribute game leaf zone mib 
attribute aggregated query select game game 
zone selects participants tcp ip addresses see 
call participants routers zone 
routers allows fast recovery case fails 
fail recovery happen astrolabe automatically select new routers mechanism relatively slow 
participants exchange messages form zone data 
participant wants initiate multicast lists child zones root zone child non empty game attribute sends message child zone data router child zone selection 
time participant router receives message zone data participant finds child zones zone non empty game attributes recursively continues dissemination process 
approach effectively constructs tree tcp connections spanning set participants 
tcp connection cached long points remain active participants re different query 
tree updated automatically astrolabe reports zone membership changes terminating unneeded tcp connections creating new ones appropriate 
sure dissemination latency suffer slow routers connections tree measures taken 
participant post astrolabe rate messages able process 
aggregation query updated follows select highest performing participants routers 
select game game order rate senders monitor outgoing tcp pipes 
fills may want try participant corresponding zone 
possible routers zone concurrently constructing fat tree dissemination care taken drop duplicates reconstruct order messages 
currently investigating option implementation 
mechanisms effectively route messages slow parts internet resilient overlay networks accomplishes point point traffic 
selectcast provide mechanism scenarios messages may arrive members particularly set receivers dynamic 
additional reliability implemented top selectcast 
example bimodal multicast combines message logging facility epidemic protocol identifies recovers lost messages achieving reliability high probability 
running bimodal multicast selectcast remove bimodal multicast dependence ip multicast poorly supported internet provide bimodal multicast notion locality may improve performance message retransmission strategies 
notice distinct selectcast instance data distribution pattern requires separate aggregation function 
noted previously astrolabe support bounded numbers aggregation functions level hierarchy 
single astrolabe instance probably support selectcast instances number unbounded 
third example explores options obtaining general form publish subscribe layering additional filtering logic selectcast instance 
doing potential eliminating restriction numbers simultaneously active queries benefiting robustness scalability basic selectcast data distribution tree 
detailed evaluation selectcast outside scope compared performance system application level router architectures ip multicast 
find steady multicast rates selectcast imposes message loads latencies comparable application level solutions ip multicast achieves lower latencies lower message loads benefit implemented hardware routers 
solution fully optimized reason peak message forwarding rates lower application level solutions critical path selectcast tree changing simply involves relaying messages received incoming tcp connection number outgoing connections 
obvious tradeoff fanout done router depth forwarding tree latency control topology tree determined human administrator assignment zone names 
example publish subscribe publish subscribe systems receivers subscribe certain topics interest publishers post messages topics 
just noted selectcast protocol introduced previous section supports form publish subscribe generalization termed selective multicast mechanism handle limited numbers queries 
explore means filtering selectcast instance obtain form subset delivery limitation largely eliminated 
extended protocol message tagged sql condition chosen publisher message 
say publisher wants send update hosts having version object 
install selectcast query calculates minimum version number object zone call say min version 
call covering query 
attach condition min version message 
message forwarded selectcast 
recall selectcast participants layer simply forward message routers calculate zone selectcast query 
extended protocol participants selectcast protocol apply condition filter clause added selectcast query calculates set routers decide routers forward message 
topic publish subscribe expressed having publisher specify message delivered subscribers particular topic 
challenge efficiently evaluate query losing scalability 
example new attribute potentially defined sql condition system doing scales poorly conditions 
solution scales reasonably uses bloom filter compress single bit query bit vector :10.1.1.20.2080
solution associates fixed size bit map covering query 
assume moment goal simply implement publish subscribe potentially large number topics 
define hashing function topics mapping topic bit value 
condition tagged message hash topic associated attribute aggregated bitwise 
case hash collisions solution may result query cached limited amount time currently seconds high throughput overhead amortized messages assuming condition small set conditions 
bloom filters directory service ninja system lead messages routed destinations strictly necessary safe inefficient :10.1.1.105.9822
size bitmap number covering selectcast queries adjusted dynamically rate collisions acceptably low 
notice resulting protocol needs time react condition time new subscriber joins system aggregation mechanism need time update bloom filter 
period filter updated astrolabe tens seconds new destination process receive messages intended 
warmup period reliability selectcast performance limited speed participants forward messages 
case selectcast gossip recovery message logs solution reliable 
elaborate filtering mechanism behavior extended 
example siena system provides content publish subscribe 
siena subscribers specify information content message interested publishers specify information content message send 
subscribers specifications aggregated internal routers siena matched publishers specifications 
adding aggregation functionality astrolabe sql engine extend solution support expressions just single topic time matching full fledged content addressing manner siena 
example synchronization astrolabe may run basic distributed programming facilities scalable manner 
example barrier synchronization may done having counter participating host initially 
time host reaches barrier increments counter waits aggregate minimum counters equals local counter 
recall astrolabe currently configured impose low background loads expense somewhat slower propagation new data 
precisely gossip rate parameter uses gossip rate seconds 
delay barrier notification occurs scales gossip rate times log size system logarithmic base size average zone 
assume zones size system nodes update global aggregations seconds quite acceptable settings grid computing latencies high case 
similarly voting done having attributes addition attribute aggregated sum 
participants access total number members number voted favor number voted 
information variety distributed algorithms commit protocols 
time writing implementation reliable publish subscribe selectcast development systematic performance evaluation undertaken 
tempting speculate behavior astrolabe high gossip rates doing leads misleading 
gossip convergence times probabilistic distribution nodes see event rounds earlier 
astrolabe predictable behavior large scale settings value system lies scalability speed real time characteristics 
value solution scales extremely exist scalable monitoring control mechanisms 
small configurations astrolabe slow way solve problem 
contrast traditional consensus protocols fast small configurations costs linear system size phase commit sort circular token passing protocol core 
participants solution break 
synchronization problem comes astrolabe applications afc propagation takes time amount time probabilistically bounded 
long process wait sure agent received afc 
question answered summing number agents received afc simple aggregation query afc 
sum equals attribute root zone agents received afc 
implementation host runs astrolabe agent 
agent runs astrolabe gossip protocol agents supports clients want access astrolabe service 
agent access keeps local copy subset mibs astrolabe zone tree 
subset includes zones path root sibling zones 
particular agent local copy root mib mibs child root 
stated centralized servers associated internal zones mibs replicated agents zones 
replication lock step different agents zone guaranteed identical copies mibs queried time agents guaranteed perceive update mib 
astrolabe protocols guarantee mibs lag old version mib forever 
precisely astrolabe implements probabilistic consistency model updates leaf mibs cease long operational agent arbitrarily reflect updates seen operational agents 
call eventual consistency discuss property section 
turn attention implementation astrolabe protocols 
gossip astrolabe propagates information epidemic peer peer protocol known gossip 
see protocol scalable fast secure 
basic idea simple periodically agent selects agent random exchanges state information 
agents zone state exchanged relates mibs zone different zones exchange state associated mibs common ancestor zone 
manner states astrolabe agents tend converge data ages 
root mib calculated locally agent needs communicated agents 
usa self usa self usa cornell self usa cornell pc self asia europe cornell mit pc pc pc pc system inventory monitor simplified representation data structure maintained agent corresponding usa cornell pc 
conceptually zone periodically chooses sibling zone random exchange mibs sibling zones 
exchange adopts mibs issued timestamps 
details protocol somewhat complicated particularly leaf zones correspond individual machines internal zones collections machines collectively responsible maintaining state gossiping state peer zones 
elaborated section astrolabe gossips membership information just gossips mibs data 
process fails mib eventually expire deleted 
process joins system mib spread parent zone gossip occurs aggregates reflect content mib 
remainder section describes astrolabe protocol detail 
astrolabe agent maintains data structure depicted 
level hierarchy agent maintains record list child zones attributes child zone represents zone self 
bottom record contains local virtual child zones attributes updated writing directly rpc interface 
remaining records mibs pointed self calculated agent locally aggregation functions 
mibs learned gossip protocol 
mib zone required contain attributes id local zone identifier rep zone name representative agent zone agent gen erated mib zone issued timestamp version mib replacement strategy epidemic protocol failure detection contacts small set addresses representative agents zone peer peer protocol agents run 
servers small set tcp ip addresses representative agents zone applications interact astrolabe service 
total number hosts zone 
attribute constructed sum attributes child zones 
pacing multicast location mechanisms calculation averages 
id rep automatically assigned values programmable 
id attribute set local identifier parent zone rep set full zone name local agent 
provide values attributes 
compute value issued local wall clock time 
contacts attribute dynamically computed aggregation function routers selectcast section 
effect zone elects set agents gossip behalf zone 
election arbitrary characteristics load longevity agents 
note agent may elected represent zone run gossip protocol described 
maximum number zones agent represent bounded number levels astrolabe tree 
agent periodically runs gossip algorithm 
agent updates issued attribute mib virtual system zone re evaluates depend attribute 
agent decide levels zone tree gossip 
decision agent traverses list records 
agent gossips behalf zones contact calculated aggregation function zone 
rate gossip level set individually config certificate described section 
time gossip zone agent picks child zones list random 
agent looks contacts attribute child zone picks random contact agent set hosts typically refer agents contacts applications choose agents installing appropriate afc 
may advised high rate agents joining leaving system 
peer topeer systems suffer degraded performance network partitioning high rate churn occurs 
currently focused astrolabe comparatively stable settings see topic interesting deserving study 
attribute 
gossips different child zones child zone level gossip occur 
gossiping agent sends chosen agent id rep issued attributes child zones level thing higher levels tree root level 
recipient compares information mibs memory determine entries date entries 
sends updates category back requests updates second category 
important detail deciding mib newer 
originally simply compared issued timestamps scaled system rely clocks synchronized 
lack synchronization reason rep attribute compare issued timestamps agent identified rep zone maintain mib representative agent generated mib 
times see section 
expose astrolabe clients mib representatives 
compare issued timestamps select received update 
currently process evaluating various compression schemes reducing amount information exchanged way 
gossip zone spreads quickly dissemination time growing number child zones zone see section 
gossip going continuously rate independent rate updates 
sole impact high update rate compression algorithms perform network loads may somewhat increased 
properties important scalability astrolabe discuss section 
membership tacitly assumed set machines fixed 
large distributed application chances machines joining leaving high rate 
frequency crashes rises linearly number machines 
keeping track membership large distributed system easy matter :10.1.1.20.5411
astrolabe membership simpler agent know relatively small subset agents logarithmic total size membership 
gossip contacts parent child zones 
aspects membership removing members failed disconnected integrating members just started previously partitioned away 
mechanism failure detection astrolabe fairly simple 
described mib rep attribute contains name representative agent generated mib issued attribute contains time agent updated mib 
agents keep track zone representative agent zone mibs representative agents 
agent seen update zone particular representative agent zone time removes corresponding mib 
mib zone removed zone removed agent list zones 
algorithm detect remove failed participants empty zones seconds 
grow logarithmically membership size see turn determined attribute :10.1.1.20.5411:10.1.1.20.5411
part membership integration 
true network partitions setting aggressively possible astrolabe tree splits independent pieces 
new machines machines recovering crashes form independent degenerate astrolabe trees parent exactly child 
need way glue pieces 
astrolabe relies ip multicast set initial contact trees 
tree multicasts gossip message fixed rate typically order seconds 
collective members tree responsible multicasting tossing coin seconds weighted attribute root zone 
member multicasts average rate current implementation astrolabe occasionally broadcasts gossips local lan order integrate machines support ip multicast 
addition astrolabe agents configured set called relatives addresses agents occasionally contacted point point messages 
strategy allows integration astrolabe trees reach form multicast 
mechanisms described detail 
astrolabe assumes administrators responsible configuring system assign zone names manner consistent physical topology network 
particular performance desirable siblings leaf node reasonably close network 
zones typically contain members vast majority messages exchanged sibling leaf nodes 
trivial placement property holds astrolabe overload long distance network links 
eventual consistency astrolabe takes snapshots distributed state provides aggregated information users 
aggregated information replicated agents involved snapshot 
set agents dynamic 
raises questions consistency 
example retrieving aggregate value incorporate latest changes distributed state 
users retrieve attribute time obtain result 
snapshots reflect single instance time 
looking snapshot snapshot guaranteed snapshot taken snapshot 
answer questions 
sake scalability robustness rapid dissemination updates weak notion consistency adopted astrolabe 
aggregate attribute depends attribute astrolabe guarantees probability update update eventually reflected call eventual consistency updates cease replicated aggregate results eventually 
aggregate attributes updated frequently progress may monotonic 
issued time mib time aggregation calculated ignores times leaf attributes calculation updated 
possible new aggregation calculated different agent attributes older previously reported aggregated value 
example agent computes mean load zone averaging loads mibs child zones known agent computes mean load 
design astrolabe computations occur concurrently temporarily incomparable attribute sets data child zone data child zone phenomenon cause computed attributes jump time effect confusing 
avoid problem astrolabe track min max interval issued attribute associated inputs afc 
min issued time earliest updated input attribute max issued time updated input attribute 
update interval accepted minimum issued time new mib large maximum issued time current 
way guarantee monotonicity attributes aggregation strictly newer old aggregated value 
seeing update aggregate result received gossip update generated completely new set input attributes chance propagate 
see propagation may take rounds gossip rounds practical mariner hierarchies 
user sees fewer updates values represent sensible progression time 
trade applications 
communication tacitly assumed astrolabe agents simple way address exchange gossip messages 
unfortunately age firewalls network address translation nat dhcp hosts way addressing firewalls stand way establishing contact 
solution mail gossip messages hosts rejected solution efficiency considerations 
realized ipv may long time coming managers reluctant create holes firewalls 
currently offer solutions problem 
solutions involve communication protocol underlying gossip rely ability firewalls nat boxes set connections firewall server outside firewall possibly proxy server 
solution deploys astrolabe agents core internet reachable application level gateways aol instant messenger www aol com aim groove www groove net 
solutions simultaneously 
solution host wishing receive message sends post request alg see 
alg respond message available 
host wishing send message sends post request message body alg 
alg forwards message appropriate receiver available response receiver post request 
alg limited capacity buffer messages arrive receiver post requests 
firewall alg core internet firewall application level gateway 
receiver sends receive request post request sender sends message send request post request alg forwards message receiver response alg sends empty response back sender 
persistent connections efficiency reasonable alg close connected receivers 
turns special encoding necessary messages 
deployed stand core internet servlets existing enterprise web servers 
efficiency scalability reasons hosts preferably receive nearby alg requires sufficient number servers deployed internet 
note machines directly connected core internet receive messages alg receive directly 
solution works mobile machines efficiency included redirection mechanism inspired cellular phone networks 
mobile machine connecting new part internet set redirection address nearby alg home alg 
sender tries connect home alg mobile host sender informed alg closer mobile host 
solution deploy ordinary astrolabe agents core internet 
astrolabe agents gossip udp 
minor problem gossip initiated outside firewall inside updates spread rapidly gossip initiated inside firewall outside response causes updates spread direction 
larger problem astrolabe hierarchy carefully configured zone located firewall attributes visible outside firewall sibling zone outside firewall 
increase scalability efficiency designed new way addressing endpoints 
particular machines communicate directly udp efficient mechanism going 
define realm set peers communicate single communication protocol 
example peers corporate network source site core internet site alg server alg server destination ways gossip travel source host site destination host site 
site hosts representative agents associated sites firewall 
representatives site connect different alg servers receive messages outside firewall 
typically form realm 
fact realms udp realm 
peers alg form realm 
peers static ip addresses core internet firewalls form udp realm 
peer may multiple realms 
realm local address 
peers may realm common 
assign realm globally unique identifier called realm id alg realm called internet 
corporate network realm may identified ip address firewall plus udp qualifier viz udp resp 

define peer address set set triples form realm id address preference realm id globally unique identifier realm peer address address realm locally unique preference indicates preference sorting order corresponding communi cation protocols 
currently udp preferred 
peer may multiple triples realm different addresses multihoming typically fault tolerance reasons address distinct realms 
fault tolerance purposes receiver registers multiple multiple addresses chat realm see 
peer wants send message peer determines common realms 
typically weighted preference preferences decide address send message 
astrolabe agents randomize choice order deal permanent network failures particular realms 
detail wide area networking astrolabe described 
fragmentation messages astrolabe grow size approximately function branching factor hierarchy 
larger branching factor zones need gossiped larger gossip messages 
reason branching factor limited 
practice astrolabe requires bytes compressed mib gossip message 
concern udp messages typically limited approximately kbytes just contain mibs message 
limit reached easily astrolabe able fragment gossip messages sent udp 
astrolabe agents simple protocol fragmentation 
including updated mibs gossip message agent just include fit 
order compensate lost time agent speeds rate gossip accordingly 
example average half updated mibs fit gossip message agent gossip twice fast 
turns strategy choosing mibs include message random selection described section 
security astrolabe zone separate unit management set policy rules 
policies govern child zone creation gossip rate failure detection time outs introducing new policies secure control administrator 
administration astrolabe decentralized zone centrally administered fully secure fashion 
zone may administrator zone nested 
believe important principle achieving scale hierarchical system children way override policies enforced parents 
principle unintuitive means managers zones machines control machines managers larger encapsulating zones 
creates interesting tension managers large zones control machines control machine managers small zones 
astrolabe designed conform principle guarantees management decentralized scalable 
security astrolabe currently concerned integrity write access control confidentiality secrecy 
wish prevent adversaries corrupting information introducing non existent zones 
individual zones astrolabe decide want public key cryptography shared key cryptography cryptography decreasing order security overhead 
simplicity exposition follows just public key mechanisms experience real system suggests shared key cryptography option represents best trade security overhead 
certificates zone astrolabe corresponding certification authority ca issues certificates 
practice single server process responsible cas 
astrolabe agent know trust public keys cas problem confidentiality significantly harder involve replicating decryption key large number agents inherently insecure solution 
ancestor zones 
certificates issued principals astrolabe autonomously decide trust trust principals 
astrolabe certificate signed attribute list 
attributes id issuer certificate issued time certificate issued 
astrolabe uses attribute distinguish old new versions certificate 
optionally certificate attribute expires specifies time certificate longer valid 
mechanism agent clocks approximately synchronized real time 
zone astrolabe public private key pairs associated ca keys private key kept corresponding ca zone keys 
create kinds certificates 
zone certificate binds id zone public zone key 
signed private ca key parent zone 
note root zone turn need zone certificate 
zone certificates contain attributes addition id issued name zone name pubkey public zone key 
parent ca private ca key sign certificates adversaries introduce arbitrary child zones 

mib certificate mib signed private zone key corresponding zone 
gossiped corresponding zone certificates hosts propagate updates 
signature prevents false gossip zone 

aggregation function certificate afc contains code information aggregation function 
agent install issued directly ancestor zones specified id attribute clients see bullet 

client certificate authenticate clients astrolabe agents 
client defined user astrolabe service 
agents maintain client database certificate signed correctly ca key ancestor zones agent specified id attribute connection accepted 
client certificates specify certain restrictions interactions client agent attributes client may inspect 
client certificates capabilities 
client certificate may contain public key 
corresponding private key sign created client 
order function correctly agent needs configured zone name path public ca keys zone 
important agents access private ca keys 
saw discussing network protocols section agents zone root zone need private zone keys corresponding zone certificates zones allowed post updates 
particular host needs private key leaf zone 
root zone exception sibling zones gossips updates needs ca keys uses signing certificates behalf top level child zones 
common issue trade fault tolerance security hosts private key zone fault tolerant system key get compromised 
potentially problem fixed threshold scheme investigated option 
note zone certificates chained 
signed private ca key parent zone agents configured public ca key ancestor zone recursive checking necessary 
chaining imply transitive trust scale violates astrolabe governing principle zones powerful ancestor zones 
ca zone ca create new child zones generating new zone certificate corresponding private key preventing impersonation attacks 
private key sign mib certificates updates mib new zone accepted zone certificate signature checks public ca key mib certificate signature checks public key zone certificate 
similarly zone ca control afc code installed zone 
described detail section treats question clients allowed types access 
client access mentioned astrolabe agents maintain information clients 
ca zone may choose keep information accessible astrolabe agents believe solution scale eventually clients track 
astrolabe provides mechanism features capabilities access control lists 
client wants astrolabe obtain client certificate ca 
client able access astrolabe zone ca 
contacts agents ca agent id attribute certificate determine zone fact zone public key zone 
uses public key check certificate signed correctly allowing access agent 
sense client certificate capability zone ca signed 
additional fine grained control clients exercised ways 
client certificate specify certain constraints holder access 
example may specify attributes client allowed read update 

zone specify update run time certain constraints access holders client certificates signed ancestor zones 
client constrained union security restrictions specified certificate restrictions specified zones path leaf zone agent connected zone signed certificate 
general client certificates issued larger zones different security rules client certificates issued child zones 
power larger zones power smaller zones 
reason users may require set client certificates 
security scale policies changed fly 
zone restrictions changed run time installing config afc zone see section 
client certificates share disadvantage capabilities certificates general easily revoked expire 
considering possible solutions 
client certificates short expiration times 
certification revocation lists 
scaling problems 
mechanisms discussed far take care authentication authorization issues 
prevent impersonation spoofing attacks prevent authorized agents clients lying attributes 
lies significant impact calculated aggregates 
take example simple program select min load load function exports minimum load attributes children zone zone attribute name 
intention root zone load attribute contain global minimum load 
clients agents holding valid certificates substantial damage aggregated data 
clients lie load installing unrealistically low high load leaf zone mib agent holds private key zone gossip value different computed minimum child zones loads 
application robust attacks recommend removing outliers possible 
unfortunately standard sql provide support removing outliers 
planning extend astrolabe sql engine support 
applied recursively result aggregation removing outliers may unclear semantics 
aggregation functions aggregation function zone reads list mibs belonging child zones produces mib zone output 
code afc provided attributes child zone mibs name starts character 
attribute lists 
afc attributes addition standard certificate attributes lang specifies language program coded 
code contains sql code 
deps contains input attributes output function depends 
astrolabe reduces overhead re evaluating input changed 
category specifies attribute afc installed 
see explicit specification prevents rogue users correctly signed 
astrolabe secured faulty aggregation functions 
example suppose aggregation function expected report highest load zone incorrectly reports zero 
aggregation value seen users bounce reflecting correct value reflecting erroneous input 
may possible form voting overcome failures simply known security deficiency initial system 
function description min attribute find minimum attribute max attribute find maximum attribute sum attribute sum attributes avg attribute weight calculate weighted average attribute bitwise bit map attribute bitwise bit map attribute return set attributes random attribute weight return set randomly selected attributes table extended sql aggregation functions 
optional weight corrects imbalance hierarchy usually set described afc may attributes copy boolean specifies afc adopted adoption controls propagation sibling zones 
level afc weak strong strong replaced ancestor zones weak issued attributes 
client case afc issued client attribute contains entire client certificate client 
client certificate may checked ca key issuer afc may checked public key client certificate 
section discuss programmed propagation rules 
programming extended sql set new aggregation functions helpful applications pursued 
complete table current set functions appears table 
aggregation query installed astrolabe default may changed run time select sum max depth depth contacts contacts servers servers total number hosts zone depth nesting level zones contacts representative gossip addresses zone servers tcp ip addresses clients interact zone 
weigh values calculating average value actual average calculated average averages 
astrolabe sql engine simple exception handling mechanism produces descriptive error messages standard output attribute 
propagation application introduces new afc writing attribute virtual child zone astrolabe agent 
astrolabe agent automatically start evaluating afc 
astrolabe architecture includes mechanisms afc propagate system 
afc include afc usually copy part output 
propagation mechanism employed output afc copied appropriate parent mib evaluated mib computed parent 
approach causes aggregation process recursively repeat root mib reached 
gossip protocol automatically propagate agents just normal attributes 
agents share ancestor zones need second mechanism propagate leaf mibs 
second mechanism called adoption works follows 
astrolabe agent scans ancestor zones new afc attributes 
detects new agent automatically copy afc virtual system mib described section 
way introduced afc propagate agents entire astrolabe tree 
jointly afc propagation mechanisms permit application introduce new afc dynamically entire system 
afc rapidly spread appropriate nodes typically tens seconds new mib attributes computed 
purposes garbage collection creator afc specify expiration time time periodically advanced introducing afc new issued expiration time aggregation function eventually expire computed attributes vanish system 
clear secure mechanism necessary prevent clients spreading code change attributes arbitrarily 
security rule certificates considered propagation afc correctly signed ancestor zone client preventing outsiders installing 
case afc signed client client granted propagation client certificate 
afc expired 
category attribute afc name attribute installed 
prevents rogue client trying afc attribute intended 
call valid 
possible fact common afc installed subtree astrolabe 
doing requires corresponding zone sign certificate signature easier obtain ca signature root zone 
adoption mechanism allows certificates propagate astrolabe tree 
agent continuously inspects zones scanning new certificates installs mib afc satisfies conditions category installed new preferable 
copy attribute set installed zone 
preferable partial order relation certificates category means certificate preferable certificate iff valid valid level strong child zone valid stronger note rules propagation allow cas exercise significant control certificates installed 
controlled propagation exploited run time configuration 
astrolabe configures way 
config certificate contains attributes control run time behavior astrolabe agents 
certificate gossip rate security policies controlled zone astrolabe tree 
performance section simulation results support scalability claims experimental measurements verify accuracy simulations 
describe various implementation details gossip protocol current internet 
latency sibling zones exchange gossip messages zone hierarchy network topology load network links routers remains reason 
rule thumb collection machines divided groups separated single router groups disjoint zones 
hand see smaller branching factor zone tree slower dissemination 
care taken zones small terms number child zones 
day network packet sizes cpu speeds memory sizes number child zones approximately 
near hope improving compression techniques support higher branching factors 
membership grows may necessary create zones 
initially new machines added simply leaf zones point necessary divide leaf zones smaller zones 
note re configuration involves machines leaf zone 
parts astrolabe need know re configuration extremely important scaling deploying astrolabe 
know time gossip disseminate flat population grows logarithmically size population face network links participants failing certain probability 
question slow growth latency true astrolabe uses hierarchical protocol 
answer appears albeit latency grows somewhat faster 
demonstrate conducted number simulated experiments 
astrolabe currently deployed approximately machines sufficiently large system evaluate scalability 
expected rounds bf bf bf flat members average number rounds necessary infect participants different branching factors 
measurements number representatives failures 
experiments varied branching factor tree number representatives zone probability message loss ratio failed hosts 
experiments balanced tree fixed branching factor 
simulated members 
simulation gossip occurred rounds members gossiping time 
assumed successful gossip exchanges complete round 
typically astrolabe agents configured gossip seconds assumption reasonable 
experiment conducted times 
small numbers members 
experiments variance observed low 
experiment varied branching factor 
branching factors 
experiment just representative zone failures 
measured average number rounds necessary disseminate information node nodes 
show results log scale compare flat non hierarchical gossip 
flat gossip impractical real system required memory grows linearly network load quadratically membership provides useful baseline :10.1.1.20.5411
flat gossip provides lowest dissemination latency 
corresponding line graph slightly curved astrolabe agents gossip significantly improves performance number members small 
hierarchical detailed discrete event simulations members gossip rounds randomized fashion gossip propagates faster round gossip provides useful worst case results 
non representative node source information 
representatives advantage information disseminates significantly faster 
expected rounds flat members average number rounds necessary infect participants different number representatives 
measurements branching factor failures 
gossip scales significantly slower flat gossip 
latency improves branching factor increased doing increases overhead 
example members branching factor levels tree 
member maintain gossip mibs 
gossip messages include mibs destination agent gossip message contains mibs 
branching factor member maintains gossips mibs 
limit flat gossip member maintain gossip impractical mibs 
representative zone astrolabe highly sensitive host crashes 
protocols faulty representatives detected replaced automatically detection replacement takes time leads significant delays dissemination 
astrolabe preferably configured representative non leaf zone 
show average number rounds necessary infect participants astrolabe tree branching factor 
experiments produced numbers varied number representatives 
increasing fault tolerance representatives decrease time disseminate new information 
times representatives leads times load routers advantages come cost 
experiment determined influence message loss dissemination latency 
experiment branching factor time fixed number representatives 
gossip exchanges allowed fail certain independent probability varied 
seen results loss lead slower dissemination flat gossip amount delay surprisingly low :10.1.1.20.5411:10.1.1.20.5411
practical setting probably observe dependent message loss due faulty expected rounds loss loss loss loss members average number rounds necessary infect participants different message loss probabilities 
measurements branching factor number representatives 
overloaded routers network links devastating effects 
randomized nature gossip protocol updates propagate faulty components system 
example dependent message loss presence crashed hosts 
final simulated experiment stopped certain agents gossiping order investigate effect host crashes astrolabe 
branching factor representatives 
message loss occur time host probability varied 
large numbers members doing probability representatives zone high 
astrolabe aggregation functions automatically assign new representatives cases 
message loss effect crashed hosts latency quite low see 
configure astrolabe agents gossip seconds normally see updates propagate latencies order tens seconds hours case dns ttl settings large 
load interested load astrolabe agents 
consider kinds load number received messages round number signature checks agent perform round 
average message reception load easily determined average agent receives message round zone represents 
levels agent represents zones level worst average load messages second 
obviously load grows expected rounds members average number rounds necessary infect participants different probabilities host 
measurements branching factor number representatives 
due randomization possible agent receives message round level 
variance message load agent expected grow process involved epidemics iid distributions epidemic involves number participants branching factor astrolabe tree variance simply times variance load individual epidemic 
order evaluate load astrolabe agents experimentally representatives zone eliminated host message omission failures serve reduce load 
ran simulation rounds fifteen minutes case round seconds measured maximum number message received round agents 
results shown 
reflects best trade choosing small large branching factors mentioned earlier 
simply checked signatures messages arrived overhead checking enormous 
number mibs message grows computational load grow larger branching factor higher load larger branching factors result mibs message easily run thousands signature checks round moderately sized populations 
checking signatures time message arrives agent buffers arriving mibs processing start new round gossip 
mibs new respect agent knows buffered 
zone agent checks signature mib second mib finds correct signature usually max messages second bf bf bf members maximum load terms number messages round function number participants branching factor 
experiment agents agents host description table hierarchies experiment 
time 
versions mib ignored 
artificially limited computational load affecting speed gossip dissemination 
fact maximum number checks round number levels branching factor 
computational load approximately agents worse agents represent zones 
approach limit computational overhead byzantine voting approach 
removes need signature checking 
validating simulations order verify accuracy simulator performed experiments astrolabe agents hosts 
experiments created topology experimental topology consisting hosts mbps lans routers connected mbps backbone link 
emulab network testbed university utah 
set consists lans consisting compaq sharks mhz strongarm processor mb ram mbps ethernet interface running netbsd connected ethernet switch 
indicated sharks broken 
set includes routers consisting mhz intel pentium iii processors mb ram mbps ethernet interfaces running freebsd 
routers ethernet interfaces switches connected cisco switch configured depicted 
hardware created different astrolabe hierarchies see table obvious mappings hardware topology 
example experiment created level hierarchy 
top level zone consisted child zone router 
child zone turn grandchild zone lan 
experiments reflect presence routers astrolabe hierarchy simply created child zone lan 
experiments th th lan 
experiments ran agents host 
agents configured gossip seconds udp maximum number representatives zone configured 
experiment measured long took value updated agent disseminate agents 
accomplish dissemination installed simple aggregation function select sum test test 
agents monitored attribute test top level zone noted time attribute updated 
updated test attribute virtual system zone right agent bottom right topology agent longest gossiping distance agents 
experiment executed times 
report measured average minimum maximum confidence intervals experiment 
reports simulation results experiments 
simulations assumed message loss easy way modeling actual behavior loss emulab testbed 
simulations show regular latency latency experiment experiment results experimental measurements corresponding simulations 
axes indicate experiment number table 
error bars indicate averages confidence intervals 
behavior experiments 
give slightly pessimistic results simulations agents gossip synchronous rounds non synchronized gossip disseminates somewhat faster 
results simulations correspond results experiments giving confidence simulations predict actual behavior large networks 
experimental results show presence outliers latencies rounds gossip explained occasional message loss 
plan comprehensive experimental data astrolabe forum 
experiments continuing emphasis understanding rounds random round robin random self round robin self entries gossip message cost fragmentation 
system behaves larger configurations stress rate updates higher 
fragmentation described section underlying network may enforce maximum transmission unit size 
order deal limitation reduce number mibs message speed gossip rate accordingly 
order decide method choosing mibs include messages simulated basic strategies variant 
basic strategies round robin random 
agent fills gossip messages round robin manner second agent picks random different mibs 
variant strategy agent mib forced included exactly entries 
show results number hosts hierarchy flat 
round robin performs better random including local mib sending agent idea 
current implementation astrolabe agent uses random filling includes local mib 
reason round robin hierarchical epidemic round robin cause mibs entire zones excluded 
related directory services done area scalable mapping names objects machines meta information objects 
best known examples dns ldap rfc standards :10.1.1.156.7859
similar dns particularly influential design astrolabe clearinghouse directory service 
clearinghouse early alternative dns internally xerox corporate internet 
dns maps hierarchical names meta information 
dns centralize authority parts names space particular servers 
top levels name space fully replicated kept eventually consistent gossip algorithm astrolabe astrolabe clearinghouse apply aggregation functions hierarchical gossiping scalability inherently limited 
amount storage grows total bandwidth taken gossip grows size gossip messages grows linearly number members 
clearinghouse scaled servers 
astrolabe time analysis simulation indicate astrolabe potentially scale millions 
applies variants clearinghouse protocol databases bayou anti entropy protocol golding timestamped anti entropy protocol :10.1.1.34.7444:10.1.1.21.3642
systems suffer scalability problems limiting scale thousands participants 
influential design astrolabe butler lampson design global name service experience grapevine clearinghouse 
enumerates requirements name service include large size high availability fault isolation tolerance mistrust believe astrolabe supports 
design include aggregation shares advantages astrolabe dns 
intentional naming system names objects properties location 
self organizing resolver maps names locations route messages objects environment mobile hosts 
extension ins partial matching properties peer peer protocol 
globe system example scalable directory service maps arbitrary object names object identifiers location 
globe supports locating objects move 
network monitoring network monitors collect runtime information various sources network 
standard retrieval snmp protocol rfc 
large variety commercial academic network monitors exist 
systems provide tools collecting monitoring data centralized place visualizing data 
systems provide little support dissemination large number interested parties aggregation monitored data security 
scale systems intended limited clusters machines 
guardian www com closest astrolabe uses regional agents collect information hierarchical fashion install agents monitored systems 
monitoring information reported single site sites guardian support aggregation 
note astrolabe retrieve monitoring information just provides ability disseminate aggregate data 
astrolabe provide visualization 
monitoring agents visualization tools provided products astrolabe form interesting marriage 
event notification event notification publish subscribe services allow applications subscribe certain classes events interest systems post events 
examples isis tib rendezvous tm gryphon siena :10.1.1.22.8918
note astrolabe processes events route subscribers processes determine aggregate state snapshot distributed system 
publish subscribe system built top astrolabe described section 
www com system built mit encode events xml format allow routing queries xml content messages :10.1.1.13.3922
system protocol routing similar selectcast section protocol routing content messages aggregate state environment messages routed 
systems support scale security events low level generated aggregating low level event histories 
order monitor collective state distributed system process subscribe event sources entire event processing internally 
strategy scale 
event notification publish subscribe services intended disseminate information sources subscribers integrating information sources 
sensor networks sensor network large number sensors monitor distributed system 
problem detecting certain conditions querying state network 
projects area 
couple relate closely cougar unnamed project described :10.1.1.21.3642
cougar user express long running sql query astrolabe 
centralized server breaks query components spreads various devices 
devices report back server combines results reports result user 
processing network cougar centralized server may prevent adequate scaling robustness 
sensor network wireless system described :10.1.1.21.3642:10.1.1.21.3642
active networks code dynamically installed network routes filters events 
routing mechanism called directed diffusion events routed areas interest 
event matching specified low level language supports binary comparison operators attributes 
system allows application specific filters installed network aggregate events 
studied various epidemic protocols including ones astrolabe power constraint wireless sensor networks 
clear study hierarchical epidemics astrolabe networks protocol send messages large distances albeit occasionally 
cluster management clear directory services network monitoring tools support dynamic distributed configuration 
number cluster management tools available take care configuration example beowulf distributed configuration platform eks 
astrolabe scale dozen machines provide various problem specific functionality management distributed system 
astrolabe shrink wrapped application incorporated cluster management system support scalability 
peer peer routing peer peer routing protocol prp routes messages locations determined location independent key included corresponding message 
protocol may build called distributed hash table simply having location provide way map key value 
known examples include chord pastry tapestry protocols implement distributed file systems application level multicast protocols :10.1.1.111.1818:10.1.1.105.3673
astrolabe location runs agent 
receiving message agent inspects key responsible key forwards message agent knows key 
number hops grows named size routing tables maintained agents 
functionalities prp astrolabe orthogonal comparison proves interesting 
called location protocols find object place object location able retrieve object 
astrolabe hand able find object attributes object 
astrolabe quite limited objects find short period time potentially handle high loads 
implementations interesting differences routing protocol astrolabe 
astrolabe exploits locality heavily implementation try optimize length hops chosen routing called proximity routing 
hop routing path number eligible hops small effectiveness approach may variable 
worse agents join leave system called churn objects moved potentially large distances 
prp protocols employ ping failure detection large distances 
additionally treat agents identical astrolabe able select agents representatives routers various attributes load operating system type longevity 
assume agents homogeneous astrolabe tries exploit heterogeneity offered agents 
epidemic protocols earliest epidemic protocol aware gene spafford usenet protocol predecessor today nntp rfc february gossiped news uucp connections starting 
epidemic nature connections intentionally randomized stochastic analysis impossible 
system randomization purpose previously described clearinghouse directory service solve scaling problems designers facing initially success 
bibliographic database system uses gossip replication strategy databases bimodal multicast see section gossip 
astrolabe directly earlier described 
astrolabe dns distributed management service differs dns important ways 
astrolabe updates propagate seconds tens seconds tens minutes best days commonly dns 
second astrolabe users introduce new attributes easily 
third astrolabe supports fly aggregation attributes making possible example find resources attributes name 
restricted form mobile code form sql select statements possible change way attributes aggregated rapidly 
aspects database presentation build existing knowledge base tool set database application development making easy integrate technology existing settings 
astrolabe uses peer peer architecture easy deploy gossip protocol highly scalable fault tolerant secure 
properties enable new distributed applications scalable system management resource location services sensor networks application level routing peer peer services 
currently pursuing improvements astrolabe 
currently amount information maintained attributes astrolabe zone grow kilobyte 
sending deltas entire new versions believe significantly compress amount information send gossip protocol increase size number attributes significantly 
alternatively additionally set reconciliation techniques 
aimed increasing scale looking ways direct flow information nodes requesting aggregation 
copy attribute certain level control flow possible looking additional ways allow increase number concurrently installed aggregations considerably 
people various contributions astrolabe design tim clark demers dan eager johannes gehrke barry gupta kate jenkins anh look yaron minsky andrew myers richard emin gun sirer werner vogels zhou anonymous reviewers 
adjie winoto schwartz balakrishnan lilley 
design implementation intentional naming system 
proc 
seventeenth acm symp 
operating systems principles kiawah island sc december 
aguilera strom sturman chandra 
matching events content subscription system 
proc 
acm symp 
principles distributed computing atlanta ga may 
andersen balakrishnan kaashoek morris 
resilient overlay networks 
proc 
eighteenth acm symp 
operating systems principles pages banff canada october 
balazinska balakrishnan karger 
ins twine scalable peerto peer architecture intentional resource discovery 
mattern naghshineh editors pervasive computing international conference pervasive rich switzerland august proceedings volume lecture notes computer science pages 
springer 
birman hayden xiao budiu minsky 
bimodal multicast 
acm transactions computer systems may 
birman joseph 
exploiting virtual synchrony distributed systems 
proc 
eleventh acm symp 
operating systems principles pages austin tx november 
birrell levin needham schroeder 
grapevine exercise distributed computing 
cacm april 
bloom :10.1.1.20.2080
space time tradeoffs hash coding allowable errors 
cacm july 
bonnet gehrke seshadri 
sensor database systems 
proc 
second int 
conf 
mobile data management hong kong january 
carzaniga rosenblum wolf design evaluation wide area event notification service 
acm transactions computer systems august 
demers greene hauser irish larson shenker sturgis swinehart terry 
epidemic algorithms replicated database maintenance 
proc 
sixth acm symp 
principles distributed computing pages vancouver bc august 
golding :10.1.1.21.3642
weak consistency architecture distributed information services 
computing systems fall 
golding long wilkes 
distributed bibliographic database system 
proc 
usenix pages winter 
gribble welsh von behren brewer culler czerwinski gummadi hill joseph katz mao ross zhao :10.1.1.105.9822
ninja architecture robust internet scale systems services 
computer networks special issue computer networks pervasive computing 
heidemann silva intanagonwiwat govindan estrin ganesan :10.1.1.21.3642
building efficient wireless sensor networks low level naming 
proc 
eighteenth acm symp 
operating systems principles pages banff canada october 
lampson 
designing global name service 
proc 
fifth acm symp 
principles distributed computing calgary alberta august 
minsky 
spreading rumors cheaply quickly reliably 
phd thesis department computer science cornell university ithaca ny february 
mockapetris :10.1.1.156.7859
domain name system 
proc 
ifip international symposium computer messaging may 
oki siegel skeen 
information bus architecture extensible distributed systems 
proc 
fourteenth acm symp 
operating systems principles pages asheville nc december 
petersen spreitzer terry theimer demers 
flexible update propagation weakly consistent replication 
proc 
sixteenth acm symp 
operating systems principles pages saint malo france october 

directory services technology deployment 
international thomson computer press 
reese 
database programming jdbc java nd edition 
reilly 
rowstron druschel 
pastry scalable distributed object location routing large scale peer peer systems 
proc 
middleware november 
sanders :10.1.1.20.5411
odbc developer guide 
books 
snoeren gifford 
mesh content routing xml 
proc 
eighteenth acm symp 
operating systems principles pages banff canada october 
stallings 
snmp snmpv 
addison wesley 
stoica morris karger kaashoek :10.1.1.105.3673
chord scalable peer topeer lookup service internet applications 
proc 
symp 
communications architectures protocols cambridge ma august 
acm sigcomm 
tennenhouse smith wetherall 
survey active network research 
ieee communications magazine january 
van renesse 
distributed processing system replicated management information base 
united states patent june 
van renesse 
power aware epidemics 
proc 
international workshop reliable peer peer distributed systems osaka japan october 
van renesse 
collaborative networking uncooperative internet 
proc 
st symposium reliable distributed systems osaka japan october 
van renesse minsky hayden :10.1.1.20.5411
gossip style failure detection service 
proc 
middleware pages 
ifip september 
van steen hauck tanenbaum 
locating objects wide area systems 
ieee communications magazine pages january 
zhao kubiatowicz joseph :10.1.1.111.1818
tapestry infrastructure faulttolerant wide area location routing 
technical report ucb csd university california berkeley computer science department 

