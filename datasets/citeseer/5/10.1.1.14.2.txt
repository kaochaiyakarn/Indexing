planning spectrum infinity marco pistore university trento pistore dit unitn moshe vardi rice university vardi cs rice edu linear temporal logic ltl widely defining conditions execution paths dynamic systems 
case dynamic systems allow nondeterministic evolutions specify ltl formula paths required satisfy formula 
extreme cases universal interpretation requires satisfy formula possible execution paths existential interpretation requires satisfy formula execution paths 
ltl applied definition goals planning problems nondeterministic domains extreme cases restrictive 
impossible develop plans achieve goal nondeterministic evolutions system weak require goal satisfied executions 
explore alternative interpretations ltl formula extreme cases 
define new language permits arbitrary combination quantifiers allowing instance require finite execution extended execution satisfying ltl formula ae finite execution extensions satisfy ltl formula ea 
show combinations path quantifiers relevant corresponding alternation quantifiers length ae ea aea infinity ae ea 
presents planning algorithm new language automata theoretic approach studies complexity 

automated task planning description dynamic domain basic actions supported part asi project :10.1.1.57.3126
supported part nsf ccr ccr iis iis eia bsf intel 
performed goal defines success condition achieved find suitable plan description actions executed domain order achieve goal 
classical planning concentrates called reachability goals goals define set final desired states reached 
quite practical applications require plans deal goals general sets final states 
planning approaches proposed temporal logic formulas goal languages allowing goals define conditions plan execution paths sequences states resulting execution plans see :10.1.1.16.2125:10.1.1.3.2139:10.1.1.45.7847
approaches linear temporal logic ltl goal language 
ltl allows express reachability goals reach maintainability goals maintain goals combine reachability maintainability requirements reach set states maintained boolean combinations goals 
planning nondeterministic domains actions allowed different outcomes possible know planning time different possible outcomes take place 
nondeterminism action outcome necessary modeling realistic way practical domains robotics autonomous controllers 
instance realistic robotic application take account actions pick object result failure object slips robot hand 
consequence nondeterminism execution plan may lead possible execution paths 
distinguish goal satisfied possible execution paths case speak strong planning possible execution paths weak planning 
case ltl goal strong planning corresponds interpret formula universal way asa weak planning corresponds interpret existential way 
weak strong plans extreme ways satisfiability ltl formula 
practical applications impossible achieve goals strong way instance robotic application impossible fulfill task objects keep slipping robot hand 
hand weak plans unreliable achieve goal overly optimistic assumptions outcomes action executions 
case reachability goals strong cyclic planning shown provide viable compromise weak strong planning 
formally plan strong cyclic possible partial execution plan extended execution reaches goal state 
strong cyclic planning allows plans encode iterative trial error strategies pick object succeed 
execution strategies may loop forever case action pick object continuously fails failure achieving goal unfair execution usually acceptable 
branching time logics ctl ctl allow expressing goals take account nondeterminism 
shows encode strong cyclic reachability goals ctl formulas 
ctl ctl path quantifiers interleaved temporal operators making difficult extend generic temporal goals encoding strong cyclic planning proposed 
define new logic allows exploring different degrees ltl formula satisfied exist strong goal weak goal 
consider logic formulas form ltl formula path quantifier generalizes quantifiers strong weak planning 
path quantifier finite infinite word alphabet fa 
path quantifier seen definition players game selection outcome action execution 
player corresponding symbol chooses action outcomes order goal fail player corresponding symbol chooses action outcomes order satisfy goal 
turns player controls outcome action execution finite number actions passes control player 
say plan satisfies goal player winning strategy possible moves player player able build execution path satisfies ltl formula 
different path quantifiers define different alternations turns players instance require formula satisfied independently hostile player chooses outcomes actions ask strong plan 
goal require formula satisfied action outcomes chosen friendly player ask weak plan 
require plan execution led path quantifier finite word player turn chooses action outcome rest infinite execution 
player extended player successful execution satisfies formula case reachability goal corresponds asking strong cyclic solution 
goal ea require initial set actions controlled player guarantee formula satisfied independently player choose outcome actions 
final example goal ae 
require formula satisfied executions player possibility controlling action outcome infinite number times 
path quantifiers define arbitrary combinations turns players different degrees satisfying ltl goal 
show surprisingly finite number alternatives exist strong weak planning canonical path quantifiers give rise plans different strength path quantifier equivalent canonical 
canonical path quantifiers correspond games length ae ea aea games defining infinite alternation players ae ea 
show case reachability goals canonical path quantifiers collapse 
different degrees solution possible corresponding weak strong strong cyclic ae planning 
planning algorithm new goal language study complexity 
algorithm automata theoretic approach planning domains goals represented suitable automata planning reduced problem checking automaton nonempty 
proposed algorithm time complexity doubly exponential size goal formula 
known planning problem exptime complete goals forma complexity algorithm optimal 
structure follows 
section preliminaries automata theory planning temporal logics 
section define ae ltl new logic path quantifier study basic properties 
section planning algorithm ae ltl section apply new logic particular cases reachability maintainability goals 
section comparisons related works concluding remarks 

preliminaries 
automata theory nonempty alphabet infinite word infinite sequence symbols 
finite state automata proposed finite structures accept sets infinite words 
interested tree automata finite state automata recognize trees alphabet words 
definition tree tree subset root tree 



arity number children arity jfi 
gj 
tree tree arity labelled tree pair tree 
denote labelled tree dom 
labelled tree 
path possibly infinite sequence nodes dom 
denote set finite paths set infinite paths finite infinite path denote string 

sequence nodes path say finite resp 
infinite path finite resp 
infinite extension finite path sequence nodes prefix sequence nodes finite path strict extension finite path extension tree automaton automaton accepts sets trees 
consider particular family tree automata parity tree automata 
definition parity tree automata parity tree automaton parity index tuple finite nonempty alphabet finite set arities finite set states initial state transition function kg parity mapping 
tree automaton accepts tree accepting run automaton tree 
intuitively parity tree automaton state reading ary node tree labeled nondeterministically chooses tuple hq copies child node tree state th copy updated run parity tree automaton accepting infinite path minimal priority visited infinitely number 
definition tree acceptance parity tree automaton accepts labelled tree exists accepting run exists mapping arity hr 

infinite path minimal integer infinitely 
tree automaton nonempty exists tree accepted shown emptiness parity tree automaton decided time exponential parity index polynomial number states 
theorem emptiness parity tree automaton states index determined time 
planning domains plans nondeterministic planning domain expressed terms set states designated initial state set actions transition function describing execution action leads state possibly different states 
definition planning domain planning domain tuple ri finite set states initial state finite set actions transition relation 
require transition relation total 
assume states ordered write 
plan guides evolution planning domain issuing actions executed 
case nondeterministic domains conditional plans required action issued plan may depend outcome previous actions 
consider general definition plans plan mapping sequence states representing past history domain evolution action executed 
definition plan plan partial map 

iff 
dom 
dom dom defined iff initial state domain 
conditions previous definition ensure plan defines action executed finite paths reached executing plan initial state domain 
consider nondeterministic planning domains execution action may lead different outcomes 
execution plan planning domain described labelled tree 
component label tree corresponds state planning domain component describes action executed state 
definition execution tree execution tree domain plan labelled tree defined follows initial state domain xn 

xn 
dom 



planning problem consists planning domain goal defines set desired behaviors 
assume goal defines set execution trees execution trees exhibit behaviors described goal say execution trees satisfy goal 
definition planning problem planning problem pair planning domain goal 
solution planning problem plan execution tree satisfies goal 
temporal logics formulas linear temporal logic ltl built top set rop atomic propositions standard boolean operators unary temporal operator binary temporal operator 
assume fixed set atomic propositions rop define prop set subsets rop 
definition ltl ltl formulas rop defined grammar rop define auxiliary operators eventually 
ltl formulas interpreted infinite words 
write ltl infinite word satisfies ltl formula 
formal definition semantics ltl 
ctl example branching time logic 
path quantifiers paths path prefix arbitrary combinations linear time operators 
definition ctl ctl formulas rop defined grammar rop ctl formulas interpreted labelled trees 
definition semantics ctl 
theorem states possible build tree automaton accepts trees satisfying ctl formula 
tree automaton number states doubly exponential parity index exponential length formula 
proof theorem 
theorem ctl formula finite set arities 
build parity tree automaton accepts labelled trees satisfy automaton states parity index length formula 
logic path quantifiers section define new logic ltl extends possibility defining conditions sets paths satisfy ltl property 
precisely consider logic formulas form ltl formula path quantifier defines set infinite paths formula checked 
extreme cases path quantifier denote hold paths path quantifier denote hold paths 
general path quantifier finite infinite word alphabet fa defines alternation selection modalities corresponding instance writing ae require finite paths infinite extension satisfies writing ea require extensions finite path satisfy 
path quantifier seen definition game selection paths satisfy ltl formula 
player corresponding tries build path satisfy ltl formula player corresponding tries build path ltl formula holds 
different path quantifiers define different alternations turns players game starts path consisting initial state turns players extend path finite number nodes 
case path quantifier finite word player moves game extends finite path built far infinite path 
formula satisfied tree player winning strategy possible moves player able build path satisfies ltl formula 
rest section give formal definition study basic properties logic path quantifiers 

finite games start considering games finite number moves path quantifiers corresponding finite words fa 
definition ae ltl ae ltl formula pair ltl formula fa path quantifier 
definition describes games corresponding finite path quantifiers 
definition semantics ae ltl finite path labelled tree finite extensions holds 
finite extension holds 
infinite extensions holds ltl 
infinite extension holds ltl 
say labelled tree satisfies ae ltl formula write root investigate path quantifiers equivalent select sets paths 
definition equivalent path quantifiers path quantifiers 
say implies written labelled trees ltl formulas implies 
say equivalent written lemma describes basic properties path quantifiers 
lemma finite path quantifiers 

aa ee 

aea 
ae ea prove main result finite path quantifier equivalent canonical path quantifier length 
theorem path quantifier canonical path quantifier fa ae ea aea implications hold canonical path quantifiers aea ae ea lemma theorem depend usage ltl formula 
depend general observation player select game set paths subset selected game consideration applies case infinite path quantifiers 

infinite games consider infinite games path quantifiers consisting infinite words alphabet fa 
see infinite games express finite path quantifiers studied previous subsection infinite games corresponding infinite alternation players expressed finite path quantifiers 
case infinite games assume player moves strategy suggests extend finite path 
say infinite game strategy player infinite paths obtained allowing player extend path arbitrary way requiring player follows strategy satisfies ltl formula 
definition strategy strategy labelled tree mapping maps finite path finite strict extensions 
require path strict extension order guarantee player takes control game situations avoided path extended 
definition semantics ae ltl 
fa infinite path quantifier 
infinite path possible outcome game strategy infinite sequence finite paths finite prefixes root tree arbitrary strict extension tree satisfies ae ltl formula written strategy ltl paths possible outcomes game strategy 
lemmas extend case infinite games analysis equivalence path quantifiers 
lemma shows finite path quantifiers just particular cases infinite path quantifiers correspond infinite path quantifiers infinite sequence ofa lemma finite path quantifier 
lemma show games players alternate infinitely equivalent games ae ea assume player extends path turn passes player 
lemma infinite path quantifier contains infinite number infinite number ae ea lemma contains auxiliary results path quantifiers 
lemma finite path quantifier infinite path quantifier 


complete picture theorem finite infinite path quantifier equivalent canonical path quantifier defines game consisting alternated moves players length infinity 
definitions implication equivalence relations definition apply case infinite path quantifiers 
theorem finite infinite path quantifier canonical path quantifier fa ae ea aea ae ea implications hold canonical path quantifiers aea ae ae ea ea conclude section showing arrows diagram theorem describe strict implications canonical path quantifiers different 
consider fi qg labelled binary tree root labelled node children labelled consider ltl formulas player satisfy formula moves visiting labelled node 
player satisfy formula visit infinite number labelled nodes final move finite game moves infinitely infinite game 
player satisfy formula takes control game certain point final move finite game 
player satisfy formula player plays player immediately visit labelled node 
player satisfy formula playing turn moving left child root node 
graph shows formulas hold path quantifiers aea ae ae ea ea 
planning algorithm ae ltl section planning algorithm ae ltl goals 
start showing build parity tree automaton accepts trees satisfy ae ltl formula 
show tree automaton adapted accepts trees correspond valid plans planning domain 
way problem checking exists plan domain ae ltl goal reduced emptiness problem tree automata 
study complexity planning ae ltl goals prove problem exptime complete 

tree automata ae ltl formulas shown ae ltl formulas expressed directly ctl formulas 
reduction exploits equivalence expressive power ctl monadic path logic 
tree obtained ae ltl formula reduction theorem 
describe simpler reduction better suited algorithmic purposes 
labelled tree satisfies formula suitable subset paths tree satisfy 
subset paths chosen order characterize subsets paths suitable assume marking tree labels define selected paths 
precisely associate ae ltl formula ctl formula tree satisfies formula marking satisfies 
definition ae ltl ctl ae ltl formula 
ctl formula defined follows ea fw aea fw ae ae ea case path quantifiers direct translation ctl exploit marking 
marking labelled tree fw wg labelled tree dom dom 
cases ctl formula conjunction sub formulas 
characterizes markings path quantifier second guarantees paths selected marking satisfy ltl formula 
case path quantifiers ea aea mark nodes reached guarantee formula satisfied 
selected paths contain node labelled formula 
case path mark descendants node define infinite path satisfies 
selected paths certain node continuously labelled formula gw certain node follow path marked case path quantifiers ae ea mark nodes player wants reach strategy passing turn player selected paths contain infinite number nodes labelled formula paths player moves infinitely 
theorem labelled tree satisfies ae ltl formula marking satisfies formula 
extension ctl existential quantification atomic propositions defined complexity model checking satisfiability new logic examined 
ae ltl seen subset theorem labelled tree satisfies ae ltl formula satisfies formula 
definition show transform parity tree automaton ctl formula parity tree automaton ae ltl formula 
transformation performed abstracting away information marking input alphabet transition relation tree automaton 
definition fw wg parity tree automaton 
parity tree automaton obtained abstracting away marking defined follows 
lemma parity tree automata definition 
accepts labelled trees marking accepted ingredients defining tree automaton accepts trees satisfy ae ltl formula 
definition tree automaton ae ltl finite set arities ae ltl formula 
parity tree automaton obtained applying transformation described definition parity automaton built theorem 
theorem parity tree automaton accepts labelled trees satisfy formula 
parity tree automaton parity index exponential number states doubly exponential length formula 
proposition parity tree automaton states parity index 
planning algorithm describe automaton exploited order build plan goal domain 
start defining tree automaton accepts trees define valid plans planning domain assume finite set arities compatible domain definition tree automaton planning domain ri planning domain set arities compatible domain tree automaton corresponding planning domain 
definition labelled tree obtained plan domain show converse true labelled tree accepted tree automaton induces plan 
definition plan induced tree labelled tree accepted automaton plan induced domain defined follows finite path 

lemma shows definitions define correspondence valid plans planning domain trees accepted automaton lemma tree accepted automaton corresponding induced plan 
valid plan domain execution tree corresponding plan 
conversely plan domain corresponding execution structure 
accepted automaton plan induced tree define parity tree automaton accepts trees correspond plans domain satisfy goal 
parity tree automaton obtained combining suitable way tree automaton ae ltl formula definition tree automaton domain definition 
definition instrumented tree automaton set arities compatible planning domain parity tree automaton accepts trees satisfy ae ltl formula parity tree automaton corresponding planning domain goal defined follows hq 
lemma shows solutions planning problem correspondence trees accepted tree automaton lemma labelled tree accepted automaton plan induced domain plan solution planning problem 
conversely solution planning problem 
execution tree accepted automaton consequence checking goal satisfied domain reduced problem checking automaton nonempty 
theorem planning domain ae ltl formula 
plan exists goal domain tree automaton nonempty 
proposition parity tree automaton domain goal 
states parity index 
complexity study time complexity planning algorithm defined subsection 
planning domain planning problem ae ltl goals decided time doubly exponential size formula applying theorem tree automaton lemma planning domain 
existence plan ae ltl goal domain decided time doubly exponential time bound tight 
realizability problem ltl formula known exptime complete reduced planning problem goal 
theorem planning domain 
problem deciding existence plan ae ltl goal domain exptime complete 
case goals form algorithm better complexity defined 
case plan exists goal infinite sequence states satisfies action planning problem reduced model checking problem ltl formula problem known pspace complete 
conjecture canonical path quantifiers doubly exponential bound theorem tight 
order complexity satisfiability validity problems ae ltl goals 
problems pspace complete 
ae ltl formula satisfiable ltl formula satisfiable problem known pspacecomplete 
similar argument holds validity 
leave full version study complexity model checking problem ae ltl 

reachability maintainability goals section consider basic classes goals reachability goals corresponding ltl formula maintainability goals corresponding ltl formula start case classical reachability goals propositional formula 
case soon player takes control reachability goal achieved possible relevant cases area lemma labelled tree 
iff ea iff iff ea ae iff aea iff ae goals ae correspond respectively strong weak strong cyclic planning problems 
consider particular case maintainability goals propositional formula 
maintainability goals properties complementary reachability goals 
case tree satisfies paths satisfy path satisfies seen tree satisfies 
soon player takes control maintainability goal violated possible relevant cases area ea lemma labelled tree 
iff ae iff aea iff ae ea iff iff ea goals ea correspond maintainability variants strong weak strong cyclic planning problems 
correspond require condition maintained evolutions despite nondeterminism condition maintained evolutions possible reach state condition maintained despite nondeterminism ea 

related works concluding remarks defined ae ltl new temporal logics extends ltl possibility declaring complex path quantifiers define different degrees ltl formula satisfied computation tree 
propose ae ltl formulas expressing temporally extended goals nondeterministic planning domains 
defined planning algorithm ae ltl goals automata theoretic framework studied time complexity 
field planning works temporal logics defining goals 
approaches linear temporal logics goal language able express conditions degree goal satisfied respect nondeterminism execution :10.1.1.45.7847
notable exceptions works described ctl goal language new branching time logic defined allows expressing temporally extended goals deal explicitly failure recovery goal achievement :10.1.1.16.2125
goal languages path quantifiers interleaved temporal operators different ae ltl 
field temporal logics alternating temporal logic atl related 
atl path quantifiers ctl ctl replaced game quantifiers 
obvious way expressed formulas form path quantifier ltl formula atl expressive logic studied 
conjecture logic atl incomparable expressiveness 
automata theoretic framework wider applicability ae ltl goals 
interesting direction investigations application framework variants ae ltl allow nesting path quantifiers goals combine ae ltl formulas ctl ctl formulas 
direction investigations extension approach proposed case planning partial observability assumes agent executing plan observe part state choices actions execute may depend part 
plan explore implementation issues particular possibility exploiting bdd symbolic techniques planning algorithm ae ltl goals 
cases techniques shown able deal effectively domains goals significant complexity despite exponential worst case time complexity problems see 
acknowledgments 
erich gradel comments reduction ae ltl formulas ctl formulas 
alur henzinger kupferman 
alternating time temporal logic 
proc 
th ieee symp 
foundations computer science pages 
bacchus kabanza 
planning temporally extended goals 
ann 
mathematics artificial intelligence 
bacchus kabanza 
temporal logic express search control knowledge planning 
artificial intelligence 
bertoli cimatti pistore roveri traverso 
mbp model planner 
proc 
ijcai workshop planning uncertainty incomplete information 
gradel 
time west note path games 
private communication 
calvanese de giacomo vardi 
reasoning actions planning ltl action theories 
proc 
th int 
conf 
principles knowledge representation reasoning kr pages 
mayer 
bounded model search linear temporal logic application planning 
proc 
nd int 
conf 
analytic tableaux related methods tableaux volume lnai pages 
springer verlag 
cimatti roveri traverso 
automatic generation universal plans non deterministic domains 
proc 
th national conf 
artificial intelligence aaai pages 
aaai press 
cimatti roveri traverso 
strong planning non deterministic domains model checking 
proc 
th int 
conf 
artificial intelligence planning systems aips pages 
aaai press 
dal pistore traverso 
planning language extended goals 
proc 
th national conf 
artificial intelligence aaai 
aaai press 
daniele traverso vardi 
strong cyclic planning revisited 
proc 
th european conf 
planning ecp volume lnai pages 
springer verlag 
de giacomo vardi 
automata theoretic approach planning temporally extended goals 
proc 
th european conf 
planning ecp volume lnai pages 
springer verlag 
emerson jutla 
complexity tree automata logics programs 
proc 
th ieee symp 
foundations computer science pages 
emerson jutla 
tree automata calculus determinacy 
proc 
nd ieee symp 
foundations computer science pages 
emerson 
temporal modal logic 
van leeuwen editor handbook theoretical computer science volume formal models semantics 
elsevier 
fikes nilsson 
strips new approach application theorem proving problem solving 
artificial intelligence 
kupferman 
augmenting branching temporal logics existential quantification atomic propositions 
proc 
th int 
conf 
computer aided verification cav volume lncs pages 
springer verlag 
kupferman vardi wolper 
approach branching time model checking 
journal acm 
doherty 
temporal logic forward chaining planner 
ann 
mathematics artificial intelligence 
moller rabinovich 
expressive power ctl 
proc 
th annual ieee symposium logic computer science lics pages 
ieee computer science press 
penberthy wed 
ucpop sound complete partial order planner adl 
proc 
rd int 
conf 
principles knowledge representation reasoning kr 
peot smith 
conditional nonlinear planning 
proc 
st int 
conf 
ai planning systems aips pages 
morgan kaufmann publisher 
pistore traverso 
symbolic techniques planning extended goals non deterministic domains 
proc 
th european conf 
planning ecp 
pistore traverso 
planning model checking extended goals non deterministic domains 
proc 
th int 
joint conf 
artificial intelligence ijcai 
aaai press 
pnueli rosner 
distributed reactive systems hard synthesize 
proc 
st ieee symp 
foundation computer science pages 
sistla clarke 
complexity propositional linear temporal logic 
journal acm 
warren 
generating conditional plans programs 
proc 
summer conf 
artificial intelligence simulation behaviour aisb pages 
