ieee transactions mobile computing vol 
january march self organized public key management mobile ad hoc networks capkun student member ieee student member ieee jean pierre hubaux senior member ieee contrast conventional networks mobile ad hoc networks usually provide online access trusted authorities centralized servers exhibit frequent partitioning due link node failures node mobility 
reasons traditional security solutions require online trusted authorities certificate repositories suited securing ad hoc networks 
propose fully self organized public key management system allows users generate key pairs issue certificates perform authentication regardless network partitions centralized services 
furthermore approach require trusted authority system initialization phase 
index terms mobile ad hoc networks self organization security key authentication public key cryptography pgp 
definition mobile ad hoc network rely fixed infrastructure networking functions routing mobility management performed nodes selforganizing manner 
reason securing mobile ad hoc networks challenging show applications requires shift paradigms respect traditional security solutions wireline networks 
rely traditional cryptographic primitives 
view extreme ways introduce security mobile ad hoc networks single authority domain certificates keys issued single authority typically system setup phase full self organization security rely trusted authority fixed server initialization phase 
take second approach propose self organizing public key management system allows users create store distribute revoke public keys help trusted authority fixed server 
solution assign specific missions subset nodes nodes role 
main motivation approach comes self organized nature mobile ad hoc networks need allow users fully control security settings system 
capkun 
hubaux laboratory computer communications applications lca school information communication sciences swiss federal institute technology lausanne epfl ch lausanne switzerland 
mail capkun jean pierre hubaux epfl ch 
budapest university technology economics department telecommunications 
budapest hungary 
mail buttyan hit bme hu 
manuscript received june revised dec accepted jan 
information obtaining reprints article please send mail tmc computer org ieeecs log number 
approach developed mainly open networks users join leave network centralized control 
main problem public key security system user public key available way authenticity verifiable 
mobile ad hoc networks problem difficult solve absence centralized services possible network partitions 
precisely users willing authenticate access subset nodes network possibly geographic neighborhood 
best known approach public key management problem publickey certificates 
public key certificate data structure public key bound identity possibly attributes digital signature issuer certificate 
system pgp users public private keys created users 
simplicity assume honest user owns single mobile node 
identifier user node user node denoted 
pgp certificates mainly stored centralized certificate repositories certificates system stored distributed nodes fully manner 
certificate issued limited validity period contains issuing expiration times 
certificate expires issuer issues updated version certificate contains extended expiration time 
call updated version certificate update 
node periodically issues certificate updates long owner considers user key bindings contained certificates correct 
system key authentication performed chains public key certificates way user wants obtain public key user acquires chain valid public key certificates ieee published ieee cs cass comsoc ies sps ieee transactions mobile computing vol 
january march 
certificate chain directly verified public key holds trusts public key 

remaining certificate verified public key contained previous certificate chain 

certificate contains public key target user correctly perform authentication certificate chain node needs check certificates chain valid revoked certificates chain correct false certificates contain correct user key bindings 
find appropriate certificate chains users node maintains local certificate repositories certificate repository updated certificate repository 
certificate repository node contains expired certificates node keep updated 
reason collecting updating expired certificates certificates permanently renewed issuers revoked 
repositories provide nodes estimate certificate graph 
show section information helps nodes perform authentication 
updated certificate repository node contains subset certificates node keeps updated 
means node requests updates certificates contained updated repository issuers expire 
selection certificates node updated repository performed appropriate algorithm 
user wants authenticate public key kv user nodes merge updated certificate repositories tries find certificate chain merged repository 
chain contains updated certificates constructed updated repositories 
authenticate kv checks certificates chain revoked update user key bindings certificates correct 
describe sections performs validity correctness checks locally 
section algorithm construction users updated repositories call maximum degree 
show simulations algorithm high probability finding certificate chains users merged updated repositories size users updated repositories small 
authentication kv updated certificate repositories fails node tries find certificate chains joint updated repositories 
finds chain chain contain expired certificates constructed updated repositories 
complete authentication requests issuers updates expired certificates lay chain checks correctness 
certificates valid correct authenticates kv 
performs certificate correctness check locally 
node find certificate chain kv aborts authentication 
system certificate revocation important mechanism 
enable types certificate revocation explicit implicit 
issuer explicitly revokes certificate issuing revocation statement sending nodes stored certificate question 
implicit revocation relies expiration time contained certificates 
certificate expiration time passes implicitly revoked second mechanism straightforward requires loose time synchronization nodes 
organized follows section overview existing proposals public key management mobile ad hoc networks 
section describe basic self organized public key management scheme 
section simulation results performance system 
section analysis properties local repository construction algorithms 
section conclude give remarks 
state art solutions problem public key management mobile ad hoc networks proposed briefly summarized section 
authors propose distributed public key management service ad hoc networks :10.1.1.13.8133
service public private key pair verify sign public key certificates network nodes 
assumed nodes system know public key trust certificates signed corresponding private key private key divided shares threshold cryptography scheme shares assigned arbitrarily chosen nodes called servers 
service sign certificate server generates partial signature certificate private key share submits partial signature combiner computes signature partial signatures 
application threshold cryptography ensures system tolerate certain number compromised servers sense partial signatures needed compute correct signature 
threshold signatures proposed key management service employs proactive share refreshing order tolerate mobile adversaries adapt configuration changes network 
proposal assumes authority initially empowers servers nodes behave servers 
proposal describes similar approach provides fair distribution burden allowing node carry share private key service 
advantage increased availability nodes local neighborhood requesting node issue renew certificate 
novelty node possessing share obtain share group nodes possessing share 
just nodes initialized trusted authority :10.1.1.13.8133
addition drawback problems proposal capkun self organized public key management mobile ad hoc networks number trade availability robustness clear value changed number nodes significantly increases decreases 
second system vulnerable sybil attack attacker take identities necessary collect shares reconstruct system private key :10.1.1.17.1073
approaches originally designed address ownership problem mobile ipv described 
main idea approaches avoid certificates altogether bind name ip address node public key deriving cryptographically verifiable way public key hashed cryptographic hash function part hash value part ip address node 
approach sense network layer names ip addresses handled machines 
applicable application layer names refer processed people computed hashing public key 
addition public key node compromised revocation requires node change name impractical applications 
described part terminodes project 
results related security published key management cooperation nodes 
area ad hoc network security mobile device security reported papers loosely related security problems addressed :10.1.1.36.6723
basic operations solution follows useful think scheme terms model 
model public keys certificates system represented directed graph stand set vertices set edges respectively 
call graph certificate graph 
vertices certificate graph represent public keys edges represent certificates 
precisely directed edge vertex ku vertex kw signed private key binds kw identity 
certificate chain public key ku public key kv represented directed path vertex ku vertex kv existence certificate chain ku kv means vertex kv reachable vertex ku denoted sequel ku kv 
rest certificate graph designates graph comprising valid expired certificates network 
model represent updated certificate repositories user certificate graphs gu gn respectively 
gu subgraph gn necessarily 
simplicity assume user generates single public private key pair represented single vertex graph 
subgraph may contain implicitly revoked certificates 
briefly describe unfolding basic operations scheme described detail sections follow 
shown fig 
initial phase scheme executed steps creation public private key pairs issuing certificates certificate exchange creation nodes updated certificate repositories 
step user creates public private key pair 
step issues public key certificates knowledge users public keys 
note issuing public key certificates continues system fully operational updated repositories constructed users get information users public keys 
process certificate graph created 
speed creation usable sufficiently connected certificate graph heavily depends motivation users issue certificates 
step node performs certificate exchange 
step node collects certificates creates certificate repository 
creation new certificates certificate exchange continues system fully operational 
means nodes repositories continuously upgraded new certificates 
show simulations nodes mobility determines speed certificates accumulated nodes 
step node constructs updated certificate repository 
node perform operation ways communicating certificate graph neighbors step applying repository construction algorithm described section certificate repository step 
node constructed updated certificate repository ready perform authentication 
solution authentication performed way mentioned user wants verify authenticity publickey kv user tries find directed path ku kv gu gv 
certificates path authenticate kv 
example certificate graph updated local repositories users shown fig 

path ku kv gu gv tries find path ku kv gu gn path updates expired certificates checks correctness performs authentication 
path ku kv gu gn fails authenticate kv 
provide detailed description operation 
creation public keys public key certificates public key corresponding private key user created locally user 
public key certificates issued users 
user believes public key kv belongs user issue public key certificate kv bound signature certificates issued limited validity period tv certificate contains issuing expiration times 
simplicity assume ieee transactions mobile computing vol 
january march fig 

creation nodes updated repositories 
certificates issued validity period 
certificate expires issuer believes user key binding certified certificate valid node issues new updated version certificate 
updated certificate contains user key binding old certificate new issuing time expiration time extended tv may reasons believe kv belongs example may exchanged keys side channel infrared channel time physical encounter 
dynamic nature ad hoc networks enables users gather experience users issue higher number certificates better evaluate confidence certificates issue 
characteristics certificate graphs created mobile ad hoc networks depend applications networks 
useful example possible characteristics certificate graphs pgp certificate graph graph known example certificate graph created self organized manner 
previous analyzed characteristics pgp certificate graph 
showed pgp certificate graph exhibits small world phenomenon graph small average shortest path length scales logarithmically size clustered vertices 
results analysis pgp certificate graph line expectations 
clearly pgp certificate graph reflects existing social relationships users 
way certificates seen indication users existing personal relationships 
argue small world phenomenon naturally emerges self organized security systems ad hoc networks social relationships 
certificate graphs mobile ad hoc networks different pgp certificate graph sense enriched number certificates issued result mobility nodes 
precisely mobile nodes enable users exchange public keys meet provided establish communication short range possibly secure channel 
lead creation small world graph better connected pgp certificate graph 
model creation pgp small world graphs 
model allows generation certificate graphs arbitrary size random manner simulation purposes 
public key management scheme issuing revoking certificates operations performed consciously users 
operations including authentication performed automatically nodes direct user involvement 
certificate exchange certificate exchange mechanism important lowcost mechanism allows nodes share distribute certificates issue hold 
capkun self organized public key management mobile ad hoc networks fig 

certificate graph paths certificates users merged updated local repositories 
initial phase system user holds local repository certificates issued certificates users issued 
assume time user issues certificate binds user public key kv sends certificate way certificate stored twice issuer user issued 
certificate exchange mechanism consists periodic exchange certificates neighboring nodes 
node local time counter periodically polls physical neighbors certificates 
node predefined frequency performs certificate exchange neighbors 
frequency defined terms exchange period te te 
simplicity assume node exchanges certificates exchange period te 
note nodes run exchange synchronously 
certificate exchange performed way 
node multicasts subgraphs gu gn physical neighbors 
message send actual certificates appropriate unique identifiers hash values 
neighbors node receive message reply hash values certificates updated repositories 
node received values certificates holds requests neighbors certificates hold 
important note performing certificate exchange nodes attempt gather updates certificates hold 
nodes gather certificates different user key bindings stored 
certificates hashed issuing expiration times 
local storage node small store additional certificates node remove expired certificates expiration time certificates earliest expiration time deleted 
certificate exchange mechanism nodes accumulate certificates certificate repositories low communication cost exchanges performed locally hop 
show section short convergence time certificate repositories nodes contain certificate graph naturally happens systems certificates exchanged rate higher certificate creation 
initial convergence phase certificates stored users nodes exchange newly created certificates updates previously stored certificates 
important measure certificate exchange convergence time tce expected time issued certificate reaches nodes network 
constructing updated certificate repositories certificate exchange described previous section provides nodes incomplete view certificate graph enables create certificate repositories 
describe mechanism nodes construct updated certificate repositories 
constructing updated certificate repository node means terms model selecting subgraph gu certificate graph assume node uses local repository construction algorithm construct subgraph 
algorithm executed node results subgraph gu 
updated local repository node constructed ways 
approach node applies algorithm results gu 
executing algorithm checks communicating issuers validity certificate stores gu 
second approach node constructs updated repository communicating certificate graph neighbors 
typically algorithms run steps step node decides certificates store proceed exploration certificate graph 
second approach nodes construct updated repositories exploring part certificate graph see example shown section nodes minimal communication cost 
certificate revocation user revoke certificate issued believes user key binding expressed certificate longer valid 
user believes private key compromised revoke corresponding public key 
propose certificate revocation schemes explicit implicit 
explicit revocation scheme revoke certificate issued user issues explicit revocation statement 
due way nodes construct updated repositories node list nodes request updates certificates issued 
user revokes certificate need send revocation nodes nodes ieee transactions mobile computing vol 
january march regularly update 
certificate exchange scheme certificate revocation reach nodes delay certificate exchange convergence time tce implicit revocation scheme expiration time certificates 
specifically certificate implicitly revoked expiration time 
described certificate contains issuing time validity period tv period elapses certificate considered valid anymore 
reason important correctly assign length tv assume node able establish communication certificate issuer time certificate validity period 
assumption true guarantees certificate updates exchanged regularly 
typical example certificate validity period days 
suppose period nodes able update certificate repositories 
period node able update certificates updated local repository node reconstruct certificates available update 
important note tce depends network properties value tv flexibly assigned 
value tv needs chosen carefully allow nodes update repositories 
described revocation schemes enable nodes know status certificates updated certificate repositories informed delay revocation certificates 
furthermore schemes allow user react detected misbehavior issuing revocation statement 
addition key revocation enables users perform authentication higher confidence validity certificates correctness user key bindings contained certificates limited validity period 
key revocation scheme certificate revocation user believes private key compromised revokes corresponding public key notifying users issued certificates 
users certificate revocation mechanisms revoke certificates contain public key question 
note users strong incentives maintain updated certificate repositories order provide sufficient proof authenticity public keys users able correctly authenticate keys 
coping misbehaving users dishonest user may try trick users believing false user key binding issuing false certificates 
may issue types false certificates 
may issue certificate binds key kv user user way dishonest user may trick users believe kv public key user really public key user second may issue certificate binds user false key may cause users believe signed users 
see solution prevents attacks allowing nodes detect inconsistent certificates determine user key bindings correct 
certificate exchange mechanism allows nodes gather virtually certificates enables nodes cross check user key bindings certificates hold detect inconsistencies conflicting certificates 
certificates considered conflicting contain inconsistent user key bindings certificates contain username different contain public key bound different usernames 
certificate received node contains user key binding kv contained certificate updated certificate repositories kv certificates certify labeled unspecified 
certificate labeled unspecified means node information assess user key binding certificate correct 
moment kv received waits predefined period tp period receive conflicting certificates regarding kv status binding certificate certifies changes nonconflicting 
note tp needs longer expected certificate exchange convergence time tce tp tce nodes detect inconsistent certificates users exist network 
node initially issues self signed certificate exchanges nodes certificate exchange mechanism 
waiting period tp expected time self signed certificate reach nodes network 
mechanism prevent users creating virtual identities stealing identity people participate network 
certificate received node contains user key binding kv conflicts user key binding key user third malicious user invent number user names public keys bind appropriate certificates :10.1.1.17.1073
malicious user public keys issue false certificates try convince user certificates correct contained certificate held bindings kv certificates certified labeled conflicting 
node detects conflict checks validity conflicting certificates issuers valid tries resolve conflict 
resolve conflict tries find chains nonconflicting valid certificates public keys kv characteristics certificate paths number length confidence values show user confidence correctness bindings computed 
values compared binding labeled nonconflicting labeled false 
computed confidence values decision respect user key bindings question bindings labeled conflicting node waits information gathered conflict resolved node receives additional set certificates resolve conflict users meet physically guarantees conflict resolved 
discussed approaches computing confidence authenticity key 
detail approaches simply point values capkun self organized public key management mobile ad hoc networks computed compared automatically devices conscious user involvement 
conflict resolution mechanism evaluate trust users issue correct certificates detect malicious users 
authentication helper nodes described key authentication mechanism works 
propose natural extension mechanism 
described users want perform authentication merge updated certificate repositories 
order facilitate authentication simple extension proposed key authentication scheme node performs authentication take advantage certificates updated local repositories nodes physical neighborhood 
case refer nodes hop physical neighborhood helper nodes 
benefits extension shown results simulations 
load balancing described earlier order update certificate repositories nodes contact issuers certificates stored 
approach efficient number nodes require update high certificate issuer handle 
node handle large number certificate update requests available provide certificates nodes need 
propose simple load balancing scheme demonstrate simulations scheme significantly improves distribution communication load nodes 
scheme works follows node provides updates directly nodes additional node needs certificate updates gets nodes get updates directly size updated local repository 
nodes request updates get directly node requests certificate update receives list nodes get updates directly time indirectly updated node requires certificate update randomly selects node list directly updated nodes requests update node 
scheme guarantee perfectly balanced communication load shows simple way enable nodes distribute load nodes 
addition scheme distribution certificate updates robust node failures network partitioning 
unequal load balancing consequence repository construction algorithm characteristics certificate graph 
precisely repository construction algorithm designed nodes keep updated copies certificates issued single node increase communication load 
high communication load single node due 
reasonable design decision set size updated repository node equal number nodes node directly send certificate updates 
specific topology certificate graph 
section formalize observations explore mutual dependence algorithm performance communication load node 
sophisticated solutions proposed solve load balancing problem 
explore load balancing main focus 
simulation results purpose simulations show performance certificate repository construction algorithms communication cost proposed scheme 
section define figures merit describe simulation scenarios provide simulation results 
algorithm performance define values evaluate performance local repository construction algorithms basic performance shortest path performance 
define basic performance pb local repository construction algorithm updated repository size certificate graph ratio number key pairs ku kv directed path ku kv merged subgraphs number key pairs ku kv directed path ku kv certificate graph formally basic performance defined follows pb jf ku kv ku gu gv jf ku kv ku pb expresses fraction existing directed paths reconstructed subgraphs gu gv available 
similar way define shortest path performance psp jw sp ku kv sp ku kv gu gv ku kv ku kv ku gu gv sp ku kv length shortest path ku kv respectively 
analysis assume subgraphs updated local repositories size performance values close means scheme provides essentially service certificate graph available node 
authentication performed helper nodes section denote performance values ph ph sp respectively number helper nodes 
key usage usage ug kv key kv defined ug kv kv gu gj gu denotes set vertices subgraph gu ieee transactions mobile computing vol 
january march key usage user number times key appears updated certificate repositories users 
value indicates times user key authentication certificate chain authentication 
value estimate number times certificates issued user stored users updated certificate repositories 
analytical simulation results show relation key usage performance 
communication cost communication cost public key management scheme consists parts cost maintaining updated local repositories key authentication cost 
costs consequence certificate update key authentication mechanisms described section 
communication cost local repository update directly proportional number certificates local repositories 
update node sends certificate update requests receives responses 
total communication cost updating local repositories nodes cert size su cert req size su avg num hops cert size size bytes certificate cert req size size certificate query su size local repository node avg num hops average number hops nodes network 
cost updating local repositories equally distributed nodes 
clearly nodes certificates stored nodes receive large number certificate requests send certificate updates nodes 
compute maximum cost updating local repositories single node sum cost sending update requests cost responding update requests nodes max cert req size su cert size ku ku load owner ku meaning number certificates certificate updates requested nodes note perfectly balanced load means ku su simulations observe maximum load lmax ku node 
authentication kv requires message exchange 
node initiates authentication requests list hashes certificates located updated local repository replies list requests certificates needs complete authentication node requests certificates needs reconstruct shortest certificate chain kv gu gv 
simulations observe pairs nodes average number certificates node needs obtain node successfully authenticate public key 
convergence certificate exchange observe benefits certificate exchange mechanism described section authentication 
purpose observe values certificate exchange convergence ce user reachability ur 
ce average users fraction certificates contained repository user time value shows quickly certificates exchanged nodes time needed certificates part repositories users 
ur average users fraction keys user find path updated repositories time user reachability shows usefulness certificate exchange scheme authentication repositories 
values depend mobility nodes certificate exchange period tce simulation scenario describe simulation scenario observe public key management scheme 
maximum degree construction algorithm construction updated repositories 
algorithm described 
test performance pgp random artificial certificate graphs created model proposed 
mobility model random waypoint model described 
simulations performed simulator implemented leda library efficient data types algorithms 
maximum degree algorithm maximum degree algorithm selects subgraph consists logically distinct parts bound bound subgraph 
precisely subgraph consists vertex disjoint bound vertex disjoint inbound paths subgraph built resembles star 
starting vertex ku maximum degree builds min vertex disjoint bound ein min vertex disjoint bound paths denote number ku outgoing incoming edges respectively predefined constant represents desired number paths built 
lengths bound bound paths computed ds eine ds respectively input algorithm representing required number vertices resulting subgraph 
algorithm runs multiple rounds 
round algorithm starts selected vertex ku public key user constructing subgraph includes bound subgraph outgoing edges terminating vertices originate ku 
denote set destination vertices edges dout 
step edges terminating vertices selected originate vertices set dout way edges originating vertex lead destination vertex ensures paths disjoint 
step vertices dout replaced set terminating vertices 
practice means node ask nodes belonging vertices dout list outgoing edges 
list easily provided node stores outgoing edges certificates issued 
capkun self organized public key management mobile ad hoc networks fig 

example bound subgraph vertex ku represented dashed lines constructed maximum degree algorithm 
construction bound subgraph similar algorithm starts vertex ku round ein incoming edges originating vertices terminate ku selected bound subgraph 
originating vertices stored list din 
step ein edges added subgraph destinations din edges common originating common destination vertices 
din updated set originating vertices edges selected algorithm 
order ensure bound subgraphs built user know outgoing incoming edges 
reason algorithm requires user notified user issues certificate 
selection edges terminating originating vertices round algorithm degree 
precisely step vertices highest degree selected 
local knowledge neighbors degrees necessary nodes perform maximum degree algorithm 
example bound subgraph constructed maximum degree algorithm shown fig 

random waypoint mobility model random waypoint mobility model mobile node moves finite continuous plane current position new location randomly choosing destination coordinates speed movement time pause reaches destination 
pause time node chooses new destination speed pause time 
repeated node simulation time 
certificate graphs simulations pgp graphs random graphs artificial certificate graphs 
pgp graphs extracted pgp database pgp dtype org 
database contains information public keys public key certificates issued revoked launch pgp project early today 
artificial certificate graphs created model defined 
graphs designed way exhibit characteristics similar pgp certificate graphs notably small world characteristics 
cases simulations full graph strongly connected largest strongly connected component 
results section main simulation results 
figures number vertices number edges graph denoted jv jej respectively 
fig 
shows performance maximum degree algorithm random pgp artificial certificate graphs various sizes 
observe types graphs maximum degree exhibits high performance size updated local repository small compared number users total number certificates certificate graph 
fig 
shows basic performance increased updated certificate repositories helper nodes 
high performance demonstrates simple algorithm maximum degree users high probability performing authentication updated local repositories repositories physical neighbors 
small network partition node fig 

basic performance maximum degree algorithm paths random pgp artificial certificate graphs various sizes updated certificate repositories 
ieee transactions mobile computing vol 
january march fig 

basic performance maximum degree algorithm helper nodes random certificate graphs 
results displayed confidence interval 
communicate helper nodes high probability authentication possible 
table shows average shortest path merged updated certificate repositories small implies small authentication cost certificates need exchanged nodes 
shortest path performance observe lengths shortest paths merged updated repositories significantly longer certificate graph 
communication load results show loadbalancing scheme efficiently limits nodes maximum load size updated certificate repositories 
fig 
introduce mobility order observe certificate exchange convergence user reachability 
see average node collects certificates certificate graph short time 
enables nodes efficiently detect conflicting certificates 
result provides basis estimating necessary values tp tce furthermore user reachability shows short time nodes collected certificates find path users certificate repositories 
shows tion updated local repositories fails high probability node able perform authentication finding certificate paths repository requesting update necessary certificates 
analytical results section analyze important problems find efficient repository construction algorithm minimizes size updated certificate repositories achieves predefined basic performance 
find efficient repository construction algorithm minimizes size updated certificate repositories achieves predefined basic performance achieves balanced key usage 
note discussed earlier section minimizing size updated certificate repositories minimize communication cost public key management system 
formally certificate graph consider problems table average shortest paths lengths shortest path performance psp node maximum communication load lmax average number certificates transferred authentication random pgp certificate graphs maximum degree algorithm note helper nodes number transferred certificates includes certificates obtained helpers certificates obtained nodes 
capkun self organized public key management mobile ad hoc networks fig 

certificate exchange convergence ce user reachability ur random waypoint model max 
speed max 
pause certificate exchange period tce power range random pgp certificate graphs 
problem find local repository construction algorithm minimizes size updated certificate repository 
problem find local repository construction algorithm minimizes size updated certificate repository kv ug kv usage kv 
problem minimize size updated certificate repositories problem stated way find set kv subgraphs pair vertices ku kv exists path ku kv gu gv size largest local repository minimized 
obtain upper bound minimal repository size smin constructing subgraph gv vertex kv union shortest path kv kx shortest path kx kv kx vertex smallest maximal distance vertices minimal local repository size smin bounded smin min kx max kx kv kv kx kv kv kx kv kx length shortest path kv kx reasoning construction easy show sizes local repositories increase users store shortest paths vertex 
construction shows possible achieve simple repository construction algorithm high performance small updated certificate repositories low communication cost 
characteristics certificate graphs 
pgp small world random graphs average shortest paths log jv shows majority users size updated certificate repositories certificate graphs log jv problem minimize size local repositories key usage turn attention problem minimizing size updated certificate repositories limit maximum key usage 
show certain conditions possible compute lower bound size certificate repositories 
assume subgraph construction algorithm generates subgraph gu consists bound subgraph bound subgraph denote gin properties respectively kv exists path kv ku kv exists path ku kv gin denote set vertices gin respectively 
note gin necessarily disjunct 
theorem states desired algorithm performance key usage subgraphs users number vertices size local certificate repositories users number certificates stored smaller jv jv total number users system 
theorem 
consider certificate graph subgraph construction algorithm selects inbound bound subgraph user described 
ug ku ug kv ku kv jv gu ku jv 
proof 
consider arbitrary vertex kw certificate graph 
denote set users vertices stored kw bound subgraph 
formally defined follows kw ieee transactions mobile computing vol 
january march furthermore denote set users vertices stored vertices inbound subgraphs 
formally kz kz gin path kw kz gw gz kz means kz 
words hold jv gu ku trivially follows jv addition ug ku ug kv ku kv jv gu ku easy see ug ku hold ku means js js hold 
get jv jv js js jv js statement theorem follows directly 
tu know sharp lower bound able find construction satisfies conditions theorem achieves strict equality 
construction satisfies conditions theorem achieves subgraph size jv assuming gin kw kv lack space reports 
theorem shows requirement equal key usage severe design criterion meaning respected size updated certificate repositories communication costs high 
hand log jv bound minimal updated repository size shows communication cost low balanced key usage issue 
shown earlier simple loadbalancing scheme alleviate problem high key usage provide nodes high performance low balanced communication cost 
addressed difficult problem key management mobile ad hoc networks 
proposed fully self organized public key management scheme rely trusted authority fixed server initialization phase 
best knowledge proposal public key management fully self organized 
approach user authority issues public key certificates users 
certificates stored distributed nodes node maintains local certificate repository contains limited number certificates selected node appropriate algorithm 
key authentication performed chains certificates 
user wants verify authenticity public key user merge local certificate repositories evaluates authenticity kv certificates contained merged repository 
detection false certificates enabled certificate exchange scheme allows nodes detect conflicting certificates 
main contributions summarized follows 
proposed fully self organized public key management system mobile ad hoc networks 

showed users mobile ad hoc network perform key authentication local information security performed self organized way 

showed simple local repository construction algorithm small communication overhead system achieves high performance wide range certificate graphs 

demonstrated nodes exploit mobility facilitate authentication detect inconsistent false certificates 
public key management scheme designed primarily mobile ad hoc networks 
reason repository construction algorithm assumes partial knowledge certificate graph designed communication overhead mind 
important feature scheme key authentication possible network partitioned nodes communicate subset nodes 
important note proposed solution requires users conscious involvement public private key pairs created issuing revoking certificates operations including certificate exchange construction certificate repositories fully automatic 
includes exploration mechanisms detection resolution inconsistent certificates improvement certificate graph models exploration sophisticated load balancing data management schemes public key management mobile ad hoc networks 
acknowledgments authors thankful ivan mario serge dominique de werra contribution 
supported part national competence center research mobile information communication systems mics center supported swiss national science foundation number www terminodes org 
perkins ad hoc networking 
addison wesley professional dec 
johnson routing ad hoc networks mobile hosts proc 
ieee workshop mobile computing systems applications dec 
jubin darpa packet radio project proc 
ieee 
capkun self organized public key management mobile ad hoc networks practical public key cryptosystem bachelor thesis dept electrical eng massachusetts inst 
technology cambridge 
zimmermann official pgp user guide 
mit press 
zhou haas securing ad hoc networks ieee network vol :10.1.1.13.8133
pp 
nov dec 
kong luo lu zhang providing robust ubiquitous security support mobile ad hoc networks proc 
ninth int conf 
network protocols icnp nov 
douceur sybil attack proc :10.1.1.17.1073
int workshop peer peer systems iptps 
statistically unique cryptographically verifiable identifiers addresses proc 
ninth ann 
network distributed system security symp 
ndss 
shea roe child proof authentication mipv cam acm computer comm 
rev apr 

hubaux gross 
le boudec vetterli self organized mobile ad hoc networks terminodes project ieee comm 
magazine jan 
buttyan capkun giordano 
hubaux 
le boudec self organization mobile ad hoc networks approach terminodes ieee comm 
magazine june 

hubaux buttyan capkun quest security mobile ad hoc networks proc 
acm symp 
mobile ad hoc networking computing mobihoc 
capkun buttyan 
hubaux small worlds security systems analysis pgp certificate graph proc 
acm new security paradigm workshop 
buttyan 
hubaux stimulating cooperation self organizing mobile ad hoc networks appear acm kluwer mobile networks applications monet vol 
oct 
stajano anderson resurrecting duckling security issues ad hoc wireless networks proc :10.1.1.36.6723
seventh int workshop security protocols 
stajano security ubiquitous computing 
john wiley sons feb 
anderson kuhn tamper resistance cautionary note proc 
second usenix workshop electronic commerce 
pfitzmann pfitzmann waidner trusting mobile user devices security modules computer feb 
marti giuli lai baker mitigating routing misbehavior mobile ad hoc networks proc 
acm int conf 
mobile computing networking mobicom 
asokan key agreement ad hoc networks computer comm vol 
pp 

zapata asokan securing ad hoc routing protocols proc 
acm workshop wireless security wise sept 
levine shields belding royer secure routing protocol ad hoc networks proc 
int conf 
network protocols icnp nov 

hu johnson perrig sead secure efficient distance vector routing mobile wireless ad hoc networks proc 
fourth ieee workshop mobile computing systems applications june 
milgram small world problem psychology today vol 

travers milgram experimental study small world problem vol 

watts small worlds 
princeton univ press 
reiter stubblebine authentication metric analysis design acm trans 
information system security vol 
pp 

algorithmic solutions leda www algorithmic solutions com 
camp boleng davies survey mobility models ad hoc network research wireless comm 
mobile computing special issue mobile ad hoc networking research trends applications vol 
pp 

luo eugster 
hubaux route driven gossip probabilistic reliable multicast ad hoc networks proc 
infocom 
capkun received bsc degree electrical engineering computer science university split croatia 
joined doctoral school communication systems department communication systems swiss federal institute technology lausanne epfl 
september joined laboratory computer communications applications lca epfl working phd degree 
current research interests include security positioning issues mobile ad hoc networks 
student member ieee 
received msc degree computer science budapest university technology economics phd degree swiss federal institute technology lausanne epfl 
dissertation concerned formal models authenticated key transport rational exchange protocols 
dr buttyan worked group professor jean pierre hubaux laboratory computer communications applications epfl 
joined department telecommunications currently holds position professor works laboratory cryptography systems security 
research interests include design cryptographic protocols aspects network security including wireless networks problems authentication cooperation ad hoc networks 
student member ieee 
jean pierre hubaux joined swiss federal institute technology lausanne epfl associate professor promoted full professor 
research activity focused mobile networking computing special interest fully mobile ad hoc networks 
particular performed research cooperation aspects security power efficiency distributed algorithms ad hoc networks 
years strongly involved definition launching phases new national competence center research named mobile information communication systems mics see www terminodes org 
served general chair third acm symposium mobile ad hoc networking computing mobihoc held june campus epfl 
associate editor ieee transactions mobile computing elsevier journal ad hoc networks 
year epfl defined curriculum communication systems 
october september chairman communication systems department 
held visiting positions ibm watson research center university california berkeley 
published papers area networking 
past spent years france involved activities area switching systems architecture software 
senior member ieee member acm 
information check epfl ch hubaux 
information computing topic please visit digital library computer org publications dlib 
