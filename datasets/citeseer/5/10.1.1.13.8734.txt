argue usefulness active chart basis system searches globally plausible explanation failure syntactically parse input 
suggest semantics free grammar independent techniques parsing inputs displaying simple kinds ill formedness discuss search issues involved 
problem ultimate solution problem processing ill formed input take account semantic pragmatic factors important understand limits recovery stra age entirely syntax independent particular grammar 
aim explore purely syntactic independent techniques enable recover simple kinds formedness rex 
tual inputs 
accordingly generalised parsing strategy active chart capable diagnosing simple unknown mi uq words omitted words extra noise words sentences languages described context free phrase grammars productions 
strategy advantage recovery process run standard active chart parser terminated unsuccessfully causing existing original parser slowed way previous systems allows full syntactic context exploited determination best parse ill formed sentence 
exploiting syntactic context weischedel approach processing ill formed input modified atn parser 
basic idea ini tial fails select incomplete parsing path consumes longest initial portion input apply special rule allow blocked parse continue iterate process chart techniques parsing ill formed input chris mellish artificial intelligence university edinburgh south bridge edinburgh eh hn scotland 
successful parse generated 
result climbing search best parse relying point longest path heuristic 
unfortunately heuristic yield possible parses instance sentence snow blocks te road partial parse getting past point shown parser fail expecting verb deter miner 
heuristic cause obvious error missed said snow road best news times suspect missing verb misspelled respectively 
cases longest path heuristic fails indicate unambiguously minimal change necessary input acceptable sentence 
surprising left fight bias atn parser allows system take account right context possible problem element 
weischedel longest path heuristic similar locally cost error recovery anderson backhouse scheme compilers 
generally accepted form globally minimum distance error correction costly implement aho ullman 
considered heuristic approaches developing 
feature weischedel system grammar slx recovery rules meta rules terminology 
true systems dealing ill formed input hayes jensen 

grammar specific recovery rules powerful grammar independent rules worth investigating far get rules depend grammar ma sm 
tbe ff need need np vp need vp need vp pp need pp need np need atn parser compare partial parses weischedel introduced machinery represent alternative partial parses simultaneously 
rela tively small step introduce formed substring table active chart allows glo hal assessment state parser 
gram mar form fi changed declarative cf dcgs pereira warren patr ll shieber possi bility constructing partial parses start input 
way right context play role determination est parse 
chart parser leaves information active chart parser leaves consideration post mortem obviously depends parsing kay gazdar mellish 
act re edges particularly important fx point view diag errors unsatisfied active edge suggests place input error may occurred 
expect combine violated expectations constituents hypothesise complete parses 
simplicity assume grammar simple cf psg obvious generalisations 
left right top pars ng guaranteed create active edges kind phrase continue partial parse input 
hand bottom parsing mean left corner parsing top filtering guaranteed find complete merits possible parse 
addition non empty initial segment rule rhs parser create active edges kind phrase predicted occur segment 
top parsing create edge phrase needed parse hypoth top rule fundamental rule np bottom top rule fundamental rule vp bottom top rule fundamental rule np bottom focusing emx 
indicate presence unsatisfied active edge ester point 
subsequent error top parsing create active edge corresponding second may occur constituent predicted error corrected 
simi fight left top parsing indi cate error point combination find necessarily error points 
hand bottom parsing create active edge error point comes immediately sequence phrases corresponding initial segment ri grammar rule 
neces refine predictions detailed level having np may predict existence vp existence types phrases start vp 
approach seen tal top parsing stage right tin active edge artificially allowed way 
seen guarantee sort hill climbing find best solution multiple errors single errors 
combine bottom top parsing effective solution 
focusing error basic run bottom parser input fails find complete parse run modified top parser resulting chart hypothesise possible complete parses 
modified top parser attempts find minimal errors taken account enable complete parse constructed 
imagine bottom parser run input collects autumn 
shows informally top parser focus possible error 
implement kind reasoning need top parsing rule knows refine set global needs fundamental rule able incorporate constituents 
may encounter multiple need express multiple needs need pp 
need mental rule absorb phrases relevant portion chart rule np det sequence marvel need able det 
save need version top rule stops reaches appropriate category bottom 
need handle anchored needs 
anchored need need np know portion chart search take place 
looking np vp sequence happy su initially find complete initial np final vp don know chart phrases express need np vp om symbol denoting position chart remains determined 
generalised top parsing adopt chart parsing edges carry global needs thee considerable effort 
instance refinement edges need np hem need np lead analysis possible nps done twice 
restricting possible mat edges way similar allowing functional composition rule steedman standard chart parsing general done efficiency reasons 
need produce single edge charge computation looking nps 
poss ole nps need combined original edges appropriate form fun rule 
led form generalised edge chart parser 
needs fi om cs 

category lists categories show inside square brackets 
si ate positions chart spe cial symbol 
presence edge kind chart indicates parser attempt ing find phrase category covering por tion chart order succeed satisfy needs listed 
need specifies sequence categories csl contiguously occupy portion chart extending st ei 
format edges defined precise parsing rules 
modified chart parsing rules shown 
modified top ru allows refine need precise rule grammar extra conditions rule prevent refinement phrase category precise part chart 
modified fundamental ru allows need satisfied edge completely ti fied inactive edge stan dard terminology 
new rule simplification ru required relevant housekeeping edge needs completely satisfied 
way rules run follows 
chart starts inactive edges left bottom parsing sin gle seed edge top phase goal needs final position chart 
point fundamental rule run possible 
proceed need refined top rule hopefully search anchored 
fundamental rule may apply account smaller phrases 
run top rule may refine system expectations parts phrase 

just kind focusing discussed section 
edge expresses needs separate places ally get resolved simplification rule apply rest needs worked 
sense assume hypothesised needs eventually resolved rules suffice error narrowed 
ensure introducing special rules primitive kinds errors 
results rules obviously scored way errors wildly hypothesised sorts places 
top rule toe needs cl csl sl cs cs 
toe rhs grammar cl sl toe needs rhs sx toe ff csl empty ffi el csl non empty category cl sl fundamental rule needs cs cs cs el needs toe needs csn sx el cs sl sx el el simplification rule toe needs cs 
toe needs cs cs 
toe garbage rule fronts toe needs sl el cs 
toe fronts toe needs cs cs 
el empty category rule toe needs cl csl cs ca 
toe toe needs cs 
cs 
om toe unknown word rule toe needs cl csl sl ex cs cs 
toe toe needs cs st ex cs cs 
toe cl lexical category sl chart word category 
search control evaluation functions extra rules recognising primitive errors introduced large parsing search space 
instance new funda mental rule means top processing take place different parts chart 
chart parsers notion agenda possible additions chart priority sought organising heuristic search best poss le parse 
considered number parameters deciding edges priority generalised top parsing rules mde mode formation prefer edges arise fundamental rule arise rap rule edges arise applications top nile 
psf penalty far edges resulting garbage empty category unknown word rules penalty scores 
psf counts penalties accumulated far edge 
pb best penalty estimate best possible penalty edge complete 

score psf information parts chart covered instance number words parts lexical entries 
gu ma um number words far partial parse edge prefer edges lead parses accounting words input 
best possible penalty com plete hypothesis involving edge 
short fall score sense 
best possible number words complete hypothesis containing edge 
implementation rule calculates scores new edge contributing edges 
experimented number ways scores comparing possible edges added chart 
promising approach compare mm scores mde gus psf pb 
soon difference scores encountered edge wins account chosen preferred 
putting sequence ensures solution solution minimal penalty score 
rules computing scores need estimates possible penalty scores arise attempting find types phrases parts chart 
number heuristics compute 
instance pres 
ence word appearing lexicon means parse covering word non zero penalty score 
general attempt find instance category portion chart produce penalty score parsing phase yielded inactive edge correct kind portion 
fact grammar assumed productions means attempt find long sequence categories short piece chart doomed produce penalty score similarly sequence lexical categories penalty chart long 
scoring parameters score edge sorts parses just bow internally plausible 
desirable wish construc tion globally plausible solutions drive parsing 
hand introduces number problems chart organisation 
edge apart score may generated different ways may multiple possible scores 
sense point consider best possible scores associated edge current score 
way repeat differently scored version edge 
consider scenario edge added chart 
edge spawned placed agenda 
subsequently scc increases derived new better way 
affect score position agenda 
score edge increases scores edges agenda spawned increase 
cope sort prob lem need sort dependency analysis mechanism propagation changes easily resorted agenda 
addressed problems far implementation treats score integral part edge suffers resulting duplication problem 
preliminary experiments see ideas sense practice performed experiments inefficient implementa tion chart parser small cf psg rules word lexicon entries indicate category ambiguity fragment english 
generated random sentences length con sidered grammar introduced ran dom specific types errors sentences 
errors considered ing correct sentence deleting word adding word completely unknown word word entry lexicon substituting completely unknown word word sen tence 
length original sentence re ts averaged sentences ran generated 
collected statis tics see table results bu cyc number cycles taken see exhaust chart initial standard bottom parsing phase 
number different solutions 
solution deemed description possible set errors minimal penalty score corrected enable com plete parse constructed 
possible errors adding extra word deleting word ing word instance lexical category 
error delete word add unknown word add known word subst unknown word length original table preliminary experimental results bu cycles penalty associated set errors number em set 
number cycles generalised top parsing required find solution 
number cycles generalised top parsing required find solution 
td cyc es number cycles generalised top parsing required exhaust possibilities sets errors penalty solution 
important implementation independent measure amount done parser concept cycle chart parser 
cycle context represents activity parser removing item agenda adding relevant edge chart adding agenda new edges suggested rules result new addi tion 
instance conventional top chart parsing cycle consist removing edge needs np vi front agenda adding chart adding new edges agenda follows 
edge form np needs td cycles chart fundamental rule determines needs vp ct added 
secondly rule np gram mar top rule determines np needs added 
gen top parsing rules considered idea 
top rule implementation schedules collection single additions apply top rule edge single item agenda 
request reaches front queue actual new edges computed added agenda 
result strategy agenda smaller structured cost extra cycles 
evaluation preliminary results show small sentences error enumerating possible minimum penalty errors takes worse times long parsing correct sentences 
finding minimal penalty error quite fast 
great variability types error 
errors involving com pletely unknown words diagnosed reasonably quickly presence unknown word allows estimation penalty scores quite accurate system word addition categories substitute instance 
considered multiple errors sentence expect behaviour dramatically number errors increases 
table show great deal varia bility sentences length kind introduced error 
noticeable errors sentence harder diagnose start 
reflects ler fight orientation parsing rules attempt find phrases starting right error score estimated pb attempt find phrases open ended portion chart starting error may score pb error may occur phrases 
parsing attempts relegated lower parts agenda case second 
disturbing fact statistics number minimal penalty solutions may quite large 
instance ill formed sentence john seen formed adding extra word sentence john seen 
parser possible single errors account sentence 
word added word word missing np 
large number solutions artefact particular gram ram lexicon certainly unclear choose possible solutions grammar independent way 
cases intro duction random error produced gram sentence occurred instance twice sentences length random word 
stage claim experi ments done indicate cer tain concreteness ideas point number unresolved problems 
remains seen performance scale realistic grammar parser 
number detailed issues resolve really practical implementation ideas produced 
indexing stra chart needs altered take account new parsing rules remaining prob lems duplication effort need addressed 
instance generalised version funda mental rule allows active edge combine set inactive edges satisfying needs order 
scoring errors ar better investigated 
extra words introduced accidentally text practice words lexicon 
gave system sen tences known words added may fair test 
scoring system prefer added words words outside lexicon substituted words substitute words open categories deleted words non content words 
confidence system possible substitutions take account standard spelling corrector rewrite word known word hypothesised category 
sophisticated error scoring strategy improve system behaviour considerably real examples course difference random examples ones experiments 
behaviour approach realistic grammars written expressive nota tions needs established 
investigating current ideas conjunction allport interest ing corner parser 
done conjunction serc supported project gr 
am currently supported serc advanced fellow ship 
aho alfred ullman jeffrey princi ples compiler design 
addison wesley 
david 
parsing interesting text 
proceedings second acl conference applied natural language processing austin texas 
anderson backhouse roland locally cost error recovery earley algorithm 
acm 
carbonell jaime hayes philip recovery strategies parsing language 
cl 
gazdar gerald mellish chris 
language processing lisp intro duction computational linguistics 
addison wesley 
jensen karen george miller lance ravin yael 
parse fitting prose fitting getting hold ill formedness 

kay 
algorithm schemata data structures syntactic processing 
research report csl xerox parc 
fernando warren david definite clause grammars language analysis survey comparison augmented transition networks 
ial intelli gence 
shieber stuart design computer language linguistic information 
proceedings coling 
steedman mark 
grammars human language garfield ed modularity knowledge representation natural language pro 
bradford books mit press 
weischedel ralph 
norman meta rules basis hi formed input 

woods optimal search strategies speech understanding control 
artificial intelligence 

