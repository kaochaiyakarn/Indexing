complex queries web repositories sriram raghavan hector garcia molina computer science department stanford university stanford ca usa hector cs stanford edu web repositories stanford webbase repository manage large heterogeneous collections web pages associated indexes 
effective analysis mining repositories provide declarative query interface supports complex expressive web queries 
queries key characteristics view web repository simultaneously collection text documents navigable directed graph set relational tables storing properties web pages length url title 
ii queries employ applicationspecific ranking ordering relationships pages links filter retrieve best query results 
model web repository terms web relations describe algebra expressing complex web queries 
algebra extends traditional relational operators graph navigation operators uniformly handle plain ranked ordered web relations 
addition overview cost optimizer execution engine developed efficiently execute web queries large repositories 
stanford webbase repository special purpose warehouse stores large collections web pages associated indexes 
repository operates conjunction crawler periodically traverses web gather pages populate repository 
pages indexes webbase repository provide rich corpus large scale web mining experiments computing pagerank trawling communities scalable clustering similarity indexing focused web analysis queries 
illustrate types analysis queries run webbase consider examples 
example generates list universities stanford researchers working mobile networking refer collaborate 
generate list examine hypertext links important mobile networking pages inside stanford websites universities see 
example 
weighted set consisting pages stanford edu domain contain phrase mobile networking 
weight page equal normalized sum pagerank text search ranks 
compute set edu domains stanford edu pages point say page points domain points page 
domain assign weight equal sum weights pages point domain 
list top domains descending order weights 
example editor local university newspaper wishes determine relative popularity comic strips dilbert people stanford university 
comic strip associates website cs set cw containing name strip names characters featured strip 
example dilbert boss dilbert com 
uses combination word occurrences link information compute measure popularity strip 
example 
extract set pages stanford edu domain preferring pages urls include character include path fragment people 
call set comic strip example compute number pages contain words cw number pages cs pages point 
measure popularity comic strip examples illustrate key characteristics web analysis queries 
multiple views web repository 
web analysis queries combine navigation operations web graph refer pages hyperlink interconnections text search predicates refer pages content predicates attributes web pages express complex query semantics 
instance example combines predicate domain text search query graph exploration set link weighting ranks 
complex queries simultaneously employ different views web repository view document collection 
collection text documents searched ranked classified keywords phrases view directed graph 
huge navigable directed graph vertices representing pages directed edges representing hyperlinks view relations 
set relational tables storing simple title length domain url computed pagerank page topic attributes web pages comparisons selections projections applied 
ranking ordering top results 
web analysis queries employ user defined notions ordering ranking pages links mechanism dealing size heterogeneity web data sets 
ranking ordering functions enables complex queries prioritize result elements selectively retrieve best results 
instance example query defines ranking domains function pagerank text search rank pages set ranking enables selective retrieval results needed top ranked entries case huge result set 
addition document collection view repository requires support ranking text query operators inherently return ranked results text query contains mobile networking rank pages contain exact phrase higher separately contain mobile networking 
similarly example guaranteed mechanism identifying personal web pages stanford domain heterogeneity play heuristic employed 
query identifies certain url patterns yield personal web pages expresses preference pages conducting analysis 
currently stanford webbase repository provides interfaces content streaming bulk access interface retrieve large pieces repository stream web pages network programmatic interface access repository indexes 
execution complex analysis queries interfaces tedious task requiring users design implement query specific execution plans accessing indexes retrieving pages generating rankings need provide interface declaratively formulating efficiently executing complex web queries 
challenges solution approach design formal model query algebra web repositories poses challenges due unique properties queries highlighted previous section 
query models relational text retrieval systems provide features required support web queries 
instance text retrieval systems employ standard ir models extended boolean vector space probabilistic model bayesian network conjunction query languages enable keyword querying pattern matching regular expressions substrings structural queries 
treating web repository application text retrieval system support document collection view 
queries involving navigation relational operators extremely hard formulate execute 
hand relational model provides rich tested suite operators expressing complex predicates web page attributes 
ranks orders intrinsic basic relational model 
motivated financial statistical applications computing moving averages previous attempts introduce order relations relational operators sequin 
discuss section key differences approach extensions proposed systems 
particular approach admits general class orders uniformly deals ranks orders allows sophisticated ranking functions extends ranking ordering web navigation 
propose formal model algebra web queries features simple relational schema notion web relations model operands results web queries defined semantics combining navigation relational text search operators complex queries mechanism partial orders defining manipulating orders web relations model user defined preferences example operators specify application defined ranking function compose ranks multiple functions retrieve top results prioritized ranks order relationships unified treatment plain ranked ordered web relations including extensions traditional relational operators ii precise definitions navigation operators presence ordering ranking model web repository model repository collection pages links corresponding web hyperlinks associated page link attributes 
relational schema specialized web repositories incorporates ranking ordering pages links 
note relational schema merely conceptual modeling tool impose restriction physical implementation web repository analogous notion physical data independence adopted traditional databases 
instance stanford webbase ranked ordered relations repository implementation involves combination relational database embedded database specially formatted files custom file index structures 
preliminary definitions formally describe model adopt definitions notational conventions page 
term page refer web resource referenced url crawled stored repository html web page plain text file pdf document image media file 
associate unique identifier pageid page 
link 
term link refer hypertext link embedded pages repository 
link associated source page page hypertext link occurs destination page page link refers unique identifier linkid 
separate link identifier allows unambiguously identify link multiple links source destination pair 
ordered relation 
relation strict partial ordering irreflexive anti symmetric transitive binary relation tuples refer pair ordered relation conversely base relation corresponding 
instance define ordered relation tuple domain attribute stanford edu related tuple outside stanford edu domain 
partial order depicted standard hasse diagram notation hasse diagram partial order directed path node node implies conversely 
ranked relation 
relation function assigns weights normalized range tuples define new relation simply additional implicit real valued attribute specifically tuple contains tuple contains attributes addition equal rank refer ranked relation include intra page hyperlinks defining set links :10.1.1.29.9090
loss generality assume attribute names clash specially added rank attributes 
base relation 
instance generate tuples ranked maxr rank tuple 
note require ranking function operate tuple basis 
particular example described rank depend attributes tuples just formally shorthand relation clear context 
note ranked relation associated ordered relation defining ordering iff 
ranking versus ordering 
notions ranked ordered relations help model different kinds application semantics web queries 
ordered relations useful expressing preferences certain kinds pages links necessarily quantifying kind preferred prefer pdf postscript plain text files ms word documents prefer intra host links inter host links prefer pages crawled week older pages 
addition representation preferences partial orders preferences need involve available pages links 
instance express preference html files powerpoint ppt files involve document types defining base relation 
contrast ranked relations useful applications precisely quantify relative preferences html files get weight pdf postscript files get weight weighted ii precomputed ranks generated sophisticated offline algorithms pagerank ii mathematically compose ranks derived multiple sources sum pagerank text search rank 
formal model web repository 
model web repository tuple ip il wr ip resp 
il identifier space pageid resp 
linkid page resp 
link chosen 
loss generality assume ip il il disjoint respect domain attributes wr set plain ranked ordered relations called web relations 
relation said web relation contains attribute domain ip il ip il 
ranked relation ordered relation web relation corresponding base relation web relation 
wr universal page relation 
contains tuple page repository column page attribute 
includes attribute pageid domain ip forms primary key schema form pageid 
wr universal link relation 
contains tuple hyperlink repository column available link attribute 
includes attribute linkid domain il forms primary key addition link include identifier page link occurs destid identifier target hyperlink 
domain destid ip referential integrity constraint pageid 
linkid destid 
set predefined page link ranking functions registered repository see examples 
identify common types web relations 
web relation domain ai ip domain aj ip called page relation 
analogously link relations attribute name explanation pageid unique identifier page page content blob bytes primary url page urls page length page domain page belongs hostname page resided time page crawled headers retrieved page mime type page meta tags page title page pagerank page primary topic page set intra page links number intra page links number going links page language page written link depth page host table sample page attributes attribute name explanation linkid unique identifier link identifier link source destid identifier link target fully qualified url associated link anchor target page applicable intra host link 
intra domain link 
id link cluster link belongs anchor text page html tags immediately surrounding link table sample link attributes relations relations web relations exactly attribute domain il ip il respectively 
definition special relations page link relations respectively 
elements set functions operate plain relations produce ranked relations 
instance may contain element operates page relation yield tuples ranked normalized pagerank constituent pages 
example contain element ranks tuples page relation ranks pages standard tf idf ranking scheme searching string web repositories 
note wr set web relations repository contains special relations addition result complex web query web relation see section query results stored elements wr queries 
schema definitions require attribute typical useful web repository 
tables list names data types page link attributes hypothetical repository 
refer attribute names formulating sample complex queries section 
query operators category operator list select unary relational project group union binary relational intersection set difference cross product rank order ranking ordering prune compose op forward navigation navigation backward navigation table list query operators model section list define query operators build complex web queries 
table lists complete suite operators algebra classified categories 
operators listed table manipulate web relations result operator operands plain ranked ordered web relations 
unary relational operators section define semantics select project group plain ranked ordered web relations 
select 
plain web relation semantics carry unchanged traditional relational algebra 
true ranked relation addition selection predicates operate implicit attribute example applied ranked relation yield ranked relation tuples ande 
ordered relation define wheres defined iff ordering resulting relation simply original ordering restricted tuples remaining selection 
instance referring relation ordered relation representing preference stanford edu pages berkeley edu pages yield includes ordering conditions project 
semantics projection carry unchanged traditional relational algebra changes result projection include attribute domain ip il ip il ensure result web relation 
page link relations contain exactly attribute domains follow convention attribute implicitly retained appear projection list 
noted refer relational algebra multisets sql sets 
group operator plain ranked page relation projection ranked relation retain ranking attribute listed projection list see item 
special projection attribute rank remove ranking yield base relation corresponding ranked relation rank special projection attribute ord remove ordering yield base relation corresponding ordered relation ord group extend standard definition group introducing setof aggregation operator 
operator applies attributes domain ip il implicitly group page link identifiers 
addition specify group computed ranked ordered relations 
plain web relation 
consider relation containing various attributes different pages 
instance may represent pages point website ws interest user represents number links pages pages ws 
operator group incoming links ws language page links occur 
language grouping attribute attribute aggregated sum 
generate resulting relation implicitly aggregate pageid yield domain ip attribute tuple contains pageid tuples belong corresponding group 
instance pageid tuples andf constituting group language english 
general attribute grouping aggregated attributes domain ip il create implicit aggregated attribute 
value aggregated attribute set group operator ordered relation containing values tuples constitute group 
depending domain domain aggregated attribute ip il 
notice definition group page respectively link relation produces respectively relation 
ranked web relation 
group ranked web relation handled merely treating attribute grouping attribute 
case result ranked relation value serving rank tuple 
aggregated attribute 
aggregation operator agg avg min define gm gm agg dropped 
case rank value lost result plain web relation 
illustrates second scenario 
value tuple computed averaging ranks tuples belonging corresponding group 
example 
ordered web relation 
illustrates group ordered page relation 
inthis example partial ordering express preference prefer pages depths 
shown hasse diagram 
applying group yields 
attributes computed approach described 
ordering computed rule tuples iff tuple belonging group corresponding tuple belonging group corresponding 
example andd depth page minimum number links traversed reach page starting root page website page belongs 
binary relational operators set operations ordered relations section extend binary relational operators union intersection set difference cross product handle plain ordered relations 
ranked relation involved operations replace corresponding ordered relation recall section tuples inr iff 
operators preserve operate rank values ordering induced rank operation 
see rank composition operator section operation uses rank values union 
shows ordered relations tuples 
partial orders depicted hasse diagrams 
define thena thena words result includes orderings consistent instance hand related applying clause definition 
set difference 
shows results computing 
note result partial order simply restricted elements result 
formally iff intersection 
illustrates computing partial order result contains order relationships common iff anda setting empty extend definitions handle union intersection set difference combination ordered plain relations 
particular cross product ordered relations reduces case 
note usual union intersection set difference web relations permitted schemas identical domains corresponding attributes 
ranked ordered relations restriction applies corresponding base relations 
cross product cross product operations involve pair plain ranked ordered relations 
challenge define ordering ranking result possible combination operands 
rules set intuition operands ranked ordered result reflect ranking ordering operand operands ordered ordering result consistent operand orderings 
separately consider cases case operands plain relations 
standard definition cross product case operands ordered relations 
define illustrates definition 
example 
case operand plain ordered 
define iff bottom right relation illustrates definition 
tuple result generated related tuple generated case operand plain ranked 
analogous case define ranks purely determined case operand ranked ordered 
compute ranked relation converted corresponding ordered relation case compute 
case operands ranked 
operands converted corresponding ordered relations case applies 
operator note cases cross product operation rank values ordering induced ranks taken account 
need preserve operate actual ranks compose operator see section employed 
ranking ordering operators previous section extended semantics traditional relational algebra operators handle ordered ranked web relations operands 
section define new operators specifically designed creating manipulating ranked ordered relations 
rank 
operator simply formalizes act applying ranking function base relation 
relation ranking function 
compose op 
compose operator merge ranked relations produce ranked relation 
instance associated composition function defines ranks assigned output relation binary set operator op op defines tuples resulting relation constructed 
composition function assigns new rank tuple result ranks tuples operand relations 
provide examples rank composition section 
formally op op 
order 
operator constructs ordered relation ranked relation plain base relation 
applied ranked relation returns corresponding ordered relation recall ordering induced rank values iff 
apply plain relation specify ordering condition 
ordering condition expression valid selection predicates 
words tuples satisfy preferred satisfy 
tuples satisfy conditions removed ordering 
convenience interpret equivalent shows instances operator 
ordering condition orders pages com domains ahead pages org domains 
second ordering condition orders english pages org domains ahead pages non english languages 
prune 
prune operator provides mechanism retrieving fixed size subset tuples relation 
particular relation selects subset size min 
ifr plain relation operator non deterministically choose subset size 
applied ranked relation returns ranked relation containing top ranked tuples 
multiple tuples may values top sets possible actual result non deterministically chosen 
applied ordered relation selects tuples basis ordering 
example consider ordered relation corresponding preference com domains org domains 
relation non deterministically return tuples ord 
return ore ordered similarly relation yield set tuples long part result possible results 
cases result operator ordered relation ordering tuples result simply ordering restricted available tuples 
possible result applying 
formally plain relation chooses random subset min rows ordered relation wheres min iff ranked relation wheres min navigation operators graph navigation complex web queries tends simple structure focusing purely connectivity neighborhood properties pages point page pages point pages clicks away links interconnect sets pages 
contrasts sharply sophisticated operators path expressions navigating branching label structure semi structured database graphs 
reason size immense heterogeneity web data sets web graphs hard formulate precise path queries 
navigating web graphs ability bias choice links pages prefer intra host links inter host links prefer links pages link www stanford edu useful ability precisely specify paths complex regular expressions 
complex path queries formulated execution massive web graphs prohibitively expensive 
key challenge meaningfully propagate user defined ranks orders navigating web graph 
model navigation operators expressed terms cross product group operations involving page link relations 
semantics navigation presence ordering ranking derive semantics operators defined earlier 
define ranks orders propagate single step navigation operation exactly link set pages reach set pages 
extend definition paths web graph 
symbols represent forward links web graph direction actual hyperlinks backward navigation links reverse direction finding pages point set pages respectively 
description focus details similar 
example page web data set translates edges web graph 
operands pages ordered navigation presence ordering pages links ordered binary navigation operator 
operator accepts page relation say link relation say operands 
may plain ordered ranked 
computes set pages reachable step pages links forward direction 
recalling definition page link relations exactly attribute domain ip il respectively 
attributes pageid linkid 
convenience assume link relation includes source destination page identifiers tuple attribute names destid 
destid destid pageid navigation ordering 
formula involves join page link relations followed grouping projection 
illustrate application formula presence ordering take examples involving ordering pages involving ordering pages links 
shows operands example page relation english english preference english pages link relation intradomain intradomain preference intra domain links 
ordering pages 
example ignore ordering links ignore compute shown 
relation represents intermediate step joining page link relations 
final result produced grouping link cs stanford edu db stanford edu stanford edu domain link cs stanford edu www cnn com intra domain 
navigation presence ranking projecting destination page identifiers circled column 
applying rules section tuples generated ordered ahead remaining tuples 
similarly ordering derived applying rules group section 
instance ac bd ac ce 
note ordering final result matches intuition preferences expressed instance inspecting see pages pointed page pages pointed pages expresses preference 
expect pages ordered ahead precisely represented diagram 
ii pages links ordered 
example taken account 
compute shown 
intermediate result represents join page link relations grouped yield 
ordering computed formula intuitively explained looking operand relations 
instance page preferred explained fact page points link intra domain link tuple link tuple 
navigation ranking 
page link relations ranked navigation operator accepts aggregation functions parameters defines combine page link ranks specifies aggregate incoming ranks multiple links may may point target page 
instance illustrates computation max avg 
earlier examples shows intermediate step joining page link relations yield note ranks preserved compose operator max plain cross product 
max function applied computing ac max max function applied grouping generate final result bb cf 
unary navigation operators 
page relation universal link relation 
choosing links set tuples link relation unary navigation operators permit navigation available links repository 
unary operators useful common scenario computing neighborhood neighborhood set pages 
binary operator ranked unary operator includes aggregation query graph example query graphs examples query graph example function indicate combine multiple incoming ranks max indicates page neighborhood receive rank equal maximum ranks pages point 
result page relation recursively apply navigation result compute expanding neighborhoods 
define 
notice ordered ranked neighborhood correspondingly ordered ranked 
unary navigation operators provide natural extension simple unordered unranked path navigation web graphs 
examples complex queries section illustrate various operators algebra take sample web analysis tasks construct corresponding queries 
example described section 
shows query graph analysis task node representing operator algebra 
convenience split query pieces connected intermediate result relation 
notice left piece query graph selecting stanford edu pages universal page relation apply ranking functions assign ranks text search mobile networking fp assign ranks pagerank attribute 
compose ranks operator compute neighborhood ranked set pages labeled 
second part query graph join retrieve domain page attribute group summing ranks group prescribed example choose top ranked domains 
shows query graph example section 
left part shows graph computing set set stanford pages bias pages specific url patterns 
right part compute popularity metric comic strips dilbert 
example 
example webmaster domain org domain net prepares list pages point websites 
particular interested pages deep link web sites link directly deeply buried pages linking main page top level index pages 
illustrates query graph example 
query computes intersection neighborhood websites 
preference deep links expressed preference pages depth 
ordering automatically converted ordering neighborhood pages semantics operator 
urls top pages subject order retrieved 
example operator graphs examples example example 
example generate list important university research pages topic quantum cryptography 
prepare list text search quantum cryptography edu pages repository compute set rank page text search rank sum ranks pages point choosing maximum 
illustrates query graph operation 
output projection operator set alluded 
compute neighborhood intersect neighborhood set composing ranks max choose top ranked elements 
optimizing executing complex web queries part stanford webbase repository developed optimizer execution engine efficiently executing complex queries web data sets 
cost optimizer similar spirit query optimizers employed relational query execution systems 
certain unique features web data sets storage structures web repositories characteristics complex web queries pose new interesting challenges 
discussion section intended highlight challenge provide overview optimization scheme 
joins relational queries optimization navigation operations crucial efficiently executing complex web queries 
difference navigation operators implemented specialized structures represent web graphs hash joins sort merge joins relational tables 
section focus attention techniques devised optimize navigation massive web graphs 
techniques key ideas exploit query locality 
repository may involve pages billions hyperlinks analysis queries focus relatively small piece data set piece pages domains related topic 
indicated navigation local explores node representation immediate forward backward neighborhood piece 
queries localized small portions web graph 
key feature optimizer index structure optimization scheme geared identify exploit locality 
exploit prune 
presence prune operator presents additional opportunities optimization 
typically prune operator employed operation query retrieve subset results 
optimizer push prune operator query tree ideally stage query generating results obtain significant speedup query execution time 
pushing prune operator tree presence ranking ordering challenging problem 
page clusters identify exploit locality query execution partition entire data set repository page clusters 
page cluster represents set pages belong top level domain pages cluster may belong stanford edu lexicographically similar urls possess similar point set pages 
intuitively attempt group related pages pages relevant complex query distributed relatively small number clusters 
refer reader previous reported precise characterization page clusters iterative algorithm partitioning web data set clusters :10.1.1.11.671
briefly describe representation scheme page clusters physically organizing web graph efficient navigation 
section discuss role page clusters optimization query execution strategy 
node representation 
node representation scheme uses page clusters physically organize web graph level structure shown 
top level directed graph called supernode graph node supernode page cluster edge supernode supernode iff page cluster points page cluster supernode points lower level directed graph contains vertex page cluster edge link pages 
ab points lower level bipartite digraph represents links pages cluster pages cluster lower level digraphs called graph chunks represent entire web graph top level supernode graph acts compact cluster level structural summary 
typically supernode graph resides memory graph chunks loaded disk demand 
maintain node graph representation structures web graph transpose aid forward backward navigation respectively 
cluster optimization execution example illustrate cost model page clusters graph chunks generate central optimization execution strategy 
cost query plan measured terms estimated number size graph chunks transferred secondary storage main memory 
addition akin relational optimizers maintain statistics value distributions various pages link attributes 
statistics maintained cluster level repository 
instance single histogram representing distribution pagerank values entire repository maintain histogram page cluster 
search space possible execution plans considered optimizer cost plans primarily dependent navigation operators query 
describe plans enumerated costs computed 
cost navigation operation 
associate sets graph chunks navigation operation 
input chunk set ics set graph chunks available navigation operation execute chunks may conceivably contain source pages links followed operation 
output chunk set ocs set graph chunks conceivably contain pages produced result navigation operation 
cost navigation operation simply sum sizes chunks ics 
illustrate consider query shown left half 
query performs computation set german pointed pages pagerank compute list edu pages knowledge bases point pages 
navigation operators query labeled nav nav 
compute ics ocs nav optimizer uses pieces information fact source pages operation pages pagerank ii fact destination pages german language pages iii cluster level statistics attributes 
instance cluster level histograms pagerank note enable cluster optimization augment node representation scheme supernode records size graph chunk points 
distribution suppose optimizer computes page clusters containing pages pagerank similarly page clusters containing german pages ande 
right half shows portion supernode graph containing supernodes involving ande 
connecting ore pages point german page incoming optimizer concludes ics nav 
estimated cost navigation operation size size size 
plan enumeration 
space possible query plans influenced factors web graph versus transpose 
observe navigation operation irrespective specified direction forward backward executed loading graph chunks web graph loading graph chunks transpose web graph 
instance nav executed links db stanford edu pages german pages web graph selecting german pages links db stanford edu pages transpose web graph 
optimizer compute ics ocs cost strategies 
multiple navigation operators 
far treated navigation operation isolation identifying ics computing costs 
queries involving multiple navigation operators estimated cost operator influenced presence 
specifically consider query plan example navigation operations executed forward navigation loading chunks web graph transpose 
considered ics nav involve german pages superset 
earlier example ocs nav include safely eliminate ics nav 
query containing set navigation operators nk optimizer explores search space 
plans possible orderings nk ni chunks web graph transpose computes cost plan measured terms chunk io chooses minimum cost plan 
exploiting prune 
indicated earlier queries include prune operator opportunity optimization 
ideally stage query aim minimize generating result elements get discarded result pruning 
exploit pruning changes approach described earlier 
computing ics navigation operator optimizer produces sorted list graph chunks opposed unsorted set 
graph chunks ics sorted descending order estimated yield number output results expected produce 
example chunk ics nav sorted number pages pagerank expected yield data cluster level histogram pagerank distribution 
second query execution navigation operators simultaneously scheduled 
akin pipelining relational execution engines navigation operator requests results predecessor pipeline 
operator loads graph chunks ics memory time sorted order 
results chunk computed successor pipeline requests chunk loaded 
experimental results 
conducted extensive experiments measure impact cluster optimization approach reducing navigation times complex web queries 
couple sample results experiments 
experimental results demonstrating impact cluster optimization displays execution time sample web queries page data set approximately links gb html 
queries correspond examples described earlier 
query chart shows execution times cluster optimization 
case query executed simply scanning query tree bottom choosing web graph forward navigation transpose backward navigation 
shows cases enabling cluster optimization resulted reduction query execution time 
generate executed suite web queries different page data sets 
query executed ways relational database store web graph ii node representation optimization iii node cluster optimization 
plots reduction query execution time ii iii opposed 
results indicate average cluster web graph representation structure provides reduction navigation speed 
cluster optimization boosts reduction factor range 
related drawing inspiration graph hypertext query systems number web query languages developed past websql ql weblog weboql struql 
differs past approaches respects 
modeling level languages incorporate notions ranking ordering crucial managing size heterogeneity web data sets 
second implementation level systems intended online queries web web site management opposed warehouse model crawl locally build repository execute analysis queries 
system defines relational schema support sql queries web data 
system primarily aimed relational queries page link attributes support ordering ranking navigation 
theoretical focusing computability web queries addressed 
authors study expressive power relational algebra underlying domains partially ordered 
fundamentally distinct model individual relation partially ordered query specific ordering condition 
context financial statistical applications systems sequin proposed sql extensions incorporate order 
cases intention model sequences linearly ordered data calendar dates sorted list stock prices 
contrast approach partial orders intended model user preferences incorporates uniform treatment ranking ordering 
prune operator discussed section similar sql extension proposed definition extends partially ordered relations 
ranked plain relations semantics prune identical semantics clause 
optimization path queries studied object database community 
key difference object graphs web graphs conform defined schema 
semi structured query optimization techniques depend schema employ structural statistical summaries graph structure 
clustered representation scheme similar spirit specialized web graphs 
addressed problem formulating executing complex expressive queries web repositories 
showed combination navigation text search relational operations ability manipulate application defined ranks orders key characteristics web queries 
query model algebra precisely define semantics web queries properties 
discussed optimization techniques devised efficiently execute queries large web repositories 
useful extension model ability simultaneously query multiple web crawls specifically crawls piece web separated time 
extension enable queries study temporal changes pages web sites web structure 
abiteboul vianu 
queries computations web 
intl 
conf 
database theory 
ricardo baeza yates berthier neto 
modern information retrieval 
addison wesley new york edition 
carey 
saying sql 
proc 
acm sigmod conf pages 
arasu searching web 
acm transactions internet technology august 
ramakrishnan sorted relational query language 
proc 
th intl 
ssdbm conf pages july 
abiteboul data web relations semistructured data xml 
morgan kauffman publishing san francisco st edition 
florescu levy mendelzon 
database techniques world wide web survey 
sigmod record 
lerner shasha 
approach array query languages optimization 
unpublished 
mendelzon milo 
formal models web queries 
proc 
th acm symposium principles database systems pages 
ng levene fenner 
expressive power relational algebra partially ordered domains 
international journal computer mathematics 
garofalakis 
structure value synopses xml data graphs 
proc 
th vldb conf hong kong 
raghavan garcia molina 
representing web graphs 
proc 
ieee intl 
conf 
data engineering march 
seshadri livny ramakrishnan 
design implementation sequence database system 
proc 
nd vldb conf 
ellen spertus lynn andrea stein 
structured query language web 
th intl 
www conf 

