transactions networking vol 

august link sharing resource management models packet networks discusses link sharing mechanisms packet networks presents algorithms hierarchical link sharing 
hierarchical link sharing allows multiple agencies protocol families types share bandwidth controlled fashion 
link sharing real time services require resource management mechanisms gateway 
requiring gateway implement separate mechanisms link sharing real time services approach view link sharing real time service requirements simultaneous respect complementary constraints gateway implemented unified set mechanisms 
white possible completely predict requirements evolve internet decade argue controlled link sharing essential component provide gateways flexibility accommodate emerging applications network protocols 

sally floyd member ieee van jacobson management include services real time traffic link sharing services 
real time traffic characterized fixed adaptive playback time receive realtime packets arriving receiver playback time discarded 
congested network resource management mechanisms required gateway meet realtime traffic requirements controlled delay limited packet drops 
abundance research needs real time traffic link sharing services received somewhat attention research community 
approach controlled link sharing described evolved context internet 
internet decentralized nature composed multiple administrative domains wide range resource limitations control internet resources involves local decisions usage considerations connection requirements 
function link sharing mechanisms enable gateways control distribution bandwidth local links response purely local needs 
allowing received february approved ieee acm networking editor partridge 
director office energy research scientific computing staff ihe dep ment energy contract de ac 
authors network research group lawrence berkeley laboratory berkeley ca usa mail lbl gov van ee lbl gov 
ieee log number ieee isolation real time best effort traffic cooperation packet scheduling algorithms give priority real time traffic controlled link sharing key component enabling deployment priority packet scheduling algorithms designed meet service requirements real time traffic 
requirement link sharing share bandwidth link multiple organizations organization wants receive guaranteed share link bandwidth congestion bandwidth organization available organizations sharing link 
examples range multiple agencies share trans atlantic fat pipe pay fixed share costs individuals share single isdn line 
requirement link sharing share bandwidth link different protocol families sna controlled link sharing desired different protocol families different responses congestion 
third example link sharing share bandwidth link different traffic types telnet ftp real time audio video 
believe needs met link sharing fundamental presence congestion 
particular believe need share links multiple organizations transient stage disappear full commercialization internet congestion disappears 
hierarchical structure organizations transient phenomena availability appropriate link sharing framework reflected continued desire controlled link sharing local resources network bandwidth 
additional needs met controlled link sharing discussed detail include ongoing need accommodate new services need control traffic aggregation order realize advantages sharing connections compatible congestion control mechanisms 
various requirements link sharing taken requirements realtime services naturally lead requirement hierarchical fink sharing 
example bandwidth link shared multiple agencies agency want share allocated bandwidth traffic types 
leads hierarchical link sharing associated individual link network class link sharing structure corresponding aggregation traffic cases individual connection 
transactions networking vol 


august link sharing services real time services involve simultaneous sets constraints satisfied gateway 
addresses interaction real time services link sharing services gateway 
key contribution investigation ways link sharing incorporated general scheduling frameworks priority scheduling 
proposes link sharing explicitly enforced gateway prevent starvation lower priority traffic satisfying needs higher priority traffic give network flexibility accommodate new real time applications 
example interaction real time services link sharing consider link shared classes traffic real time class bulk data class 
purposes link sharing algorithms conceptual distinction general scheduler link sharing scheduler 
absence congestion gateway general scheduler appropriate ranging priority round robin scheduler 
presence congestion gateway determine classes allocated share link bandwidth invoke link sharing scheduler rate limit overlimit class allocated bandwidth 
attempt outline complete packet scheduling algorithm proposing mechanism incorporating controlled link sharing packet scheduling framework 
implementing real time linksharing services separate pieces code preferable integrated set mechanisms real time linksharing services 
identifying set low level mechanisms implement services separating low level mechanisms higher level policy gives flexible resource management framework allows evolution 
outlining complete service model internet explore set low level mechanisms efficiently support range real time link sharing services 
flexibility resource management framework particularly important easy fully anticipate service requirements emerging applications internet 
controlled link sharing key contribution flexibility 
focuses role link sharing resource management framework 
example flexibility afforded link sharing consider current need internet mechanism protect data traffic growing volume real time mbone traffic need protect real time traffic delays caused competing data traffic 
environment limited bandwidth fully meeting needs real time traffic requires suite real time services including flow specifications real time applications set procedure rsvp admissions control procedures control number admitted real time connections addition appropriate scheduling mechanisms gateway 
guaranteeing data real time traffic receive share link bandwidth relevant time intervals linksharing mechanisms protect mbone data traffic aggregate absence full suite real time services 
suggesting link internet requires separate traffic class agency protocol family traffic type traversing link 
example link sharing needed link trans atlantic fat pipe link need organization link sharing 
different links heterogeneous internet different link sharing structures connections aggregated class link separate classes link 
benefit link sharing framework proposed acknowledges decentralized nature internet allows local control bandwidth distribution 
link sharing goals described detail section ii quite modest 
link sharing mechanisms take minimum action required ensure classes receive allocated link sharing bandwidth relevant time interval 
link sharing mechanisms attempt provide congestion control leaf class rate allocate classes absence congestion reshape traffic specify precisely bandwidth received class current demand 
issues determined general scheduler gateway 
link sharing mechanisms attempt implement scheduling policies 
hierarchical link sharing structure specify guidelines distribution excess bandwidth 
imagine complex requirements terms exactly extra bandwidth distributed fraction bandwidth class requires range time intervals restrict attention fairly straightforward requirements expressed hierarchical structures 
section ii notes distribution extra bandwidth constraints imposed hierarchical link sharing structure arbitrary distribution function general scheduler addressed 
approach link sharing hierarchical class resource management proposed initially jacobson 
approach referred class queueing cbq outlines set flexible efficiently implemented gateway mechanisms meet range service link sharing requirements 
appendix discusses implementation cbq simulator gives pointer publically available distributions cbq implementations 
context continuing discussion resource management internet involves contributions people 
examples see 
form motivated part response scheduling architecture proposed 
substantial agreement section viii elaborates disagreement relationship link sharing services real time 
framework heavily framework 
floyd jacobson link sharing resource management models link video telnet fig 
link service classes 
link sharing allocation section describes link sharing goals detail 
section gives general guidelines implementing hierarchical link sharing resource management framework consisting general scheduler link sharing scheduler 
section iv explores link sharing guidelines approximations rigorous guidelines outlined section 
section shows simulations gateway 
section vi discusses relationship link sharing goals goals real time traffic 
section vii discusses link sharing terms isolation sharing traffic 
section viii compares link sharing framework discussed related 
section ix gives discusses 
link sharing goals section gives general discussion link sharing goals 
requirements link sharing link sharing service classes organizations protocol families traffic types 
argue single set mechanisms link sharing implemented carefully coordinated additional mechanisms providing real time service 
link sharing structure specifies desired policy terms division bandwidth particular link times congestion 
example link sharing structure fig link shared number real time traffic classes 
audio video classes examples leaf classes link sharing structure 
aggregated link class interior class 
fig 
telnet class class delay sensitive traffic nfs traffic telnet traffic 
similarly mail class class delay insensitive traffic nntp fax mail traffic 
flat link sharing structure fig 
link sharing requirements fairly straightforward 
linksharing bandwidth allocated class expressed fig 
percentage link bandwidth 
link sharing allocations static permanently assigned network administrator dynamic varying response conditions network predetermined algorithm 
sharing goal class sufficient demand able receive roughly allocated bandwidth interval nm sharing allocation fig 

link sharing multiple agencies families time times congestion 
consequence linksharing goal times congestion classes restricted link sharing bandwidth 
class link sharing allocation zero mail class fig 
bandwidth received class determined scheduling mechanisms gateway linksharing mechanisms guarantee bandwidth class times congestion 
link sharing goals rough quantitative bandwidth commitment network 
associated linksharing goals notion time interval link sharing goals apply 
discussed determined time constant estimating past bandwidth class 
example fig 
considered unacceptable telnet ftp classes denied service minutes time 
hand fine grained scheduling ensure telnet ftp classes receive allocated linksharing bandwidth arbitrarily small time intervals required 
priority scheduling reduce delay real time traffic link sharing mechanisms prevent starvation ftp traffic longer time intervals 
secondary link sharing goal class allocated bandwidth distribution excess bandwidth classes arbitrary follow appropriate set guidelines 
flat link sharing structure distribution excess bandwidth determined scheduling mechanisms gateway specified link sharing structure 
example consider link sharing organizations protocol families fig 

agency little traffic send agency consider unfair arbitrary excess bandwidth agency link sharing agencies protocol families scheduling mechanisms distribute excess bandwidth way takes account relative link sharing allocations entities 
multiple link sharing constraints gateway expressed hierarchical link sharing structure fig 

link sharing structure fig 
illustrates linksharing organizations protocol families service classes individual connections transactions networking 
vol 
august fig 

hierarchical link sharing 
service class meant imply link sharing structures links include forms link sharing 
arriving packets gateway assigned leaf classes interior classes designate guidelines excess bandwidth allocated 
goal service classes agency collectively receive link bandwidth appropriate time intervals sufficient demand 
real time class agency little data send hierarchical link sharing structure specifies excess bandwidth allocated subclasses agency link sharing goals summarized follows 
lin sharing goals interior leaf class receive roughly allocated link sharing bandwidth appropriate time intervals sufficient demand 
leaf interior classes sufficient demand received allocated link sharing bandwidth distribution excess bandwidth arbitrary follow set reasonable guidelines 
implementation link sharing goal discussed detail 
mentioned link sharing goal limited constraints hierarchical class structure 
second link sharing goal concerning distribution excess bandwidth addressed 
second link sharing goal simply states distribution bandwidth constrained hierarchical link sharing structure distribution arbitrary follow acceptable policy 
guidelines distribution excess bandwidth reflect higher level policy concerns realistic limitations imposed efficiently implemented schedulers 
distribution excess bandwidth scheduler simulator discussed appendix 
link om sharing note link sharing goals attempt address questions congestion control gateway 
link sharing mechanisms monitor control bandwidth allocations various classes traffic question congestion control traffic class remains 
leaf classes contain number aggregated connections congestion control class provided transport protocols tcp explicit admissions control procedure class connection scheduling algorithm fifo scheduling class 
classes video traffic congestion control class provided form source receiver rate adaptive congestion control 
classes gateway red gateway mechanisms monitor average queue size provide appropriate feedback sources 
link sharing goals require data structure associated link describing class structure link giving link sharing bandwidth class 
addition possibility dynamic bandwidth allocations existing classes link sharing structure particular link static dynamic components 
static link sharing structure fixed classes bandwidth allocations appropriate link shared multiple agencies case link sharing bandwidth allocated agency set network administrator 
hand link sharing structure dynamic components provisions creation removal subclasses adjustment bandwidth allocations 
dynamic linksharing structure appropriate link sharing mechanism monitor bandwidth specific realtime traffic flows time ensuring real time flows don bandwidth link 
dynamic link sharing mechanism needed limit lifetimes dynamically created classes 
issue lifetime restrictions addressed considered context set protocols admissions control procedures real time traffic 
floyd jacobson link sharing resource management models 
formal link sharing guidelines section gives formal guidelines implementing hierarchical link sharing gateway 
section iv discusses heuristics approximate formal link sharing guidelines 
definitions general scheduler link sharing scheduler assumes class queue gateway conceptual framework assumes scheduling mechanisms include general scheduler schedules packets leaf classes regard linksharing guidelines 
ink scheduler schedules packets leaf classes exceeding link sharing allocations times congestion 
assume arriving packets associated leaf class link sharing structure 
job ot general scheduler provide real time traffic particular delay throughput requirements 
general scheduler number proposed scheduling algorithms determines packet packet scheduling necessary meet service goals 
generally assume hat priority general scheduler specify general scheduler detail 
priorities definitions classes class structure policy issue addressed 
regulated unregulated classes call class regulated class packets class scheduled link sharing scheduler gateway call class unregulated traffic class scheduled general scheduler 
distinction general link sharing scheduler distinction regulated unregulated classes introduced conceptual purposes link sharing algorithms described 
implementation single integrated scheduler 
general classes change status regulated unregulated back conditions network change 
link sharing scheduler number algorithms restrict bandwidth regulated classes 
option link sharing scheduler rate limit regulated class link sharing bandwidth regulation accompanied strategy dropping arriving packets necessary 
options example link sharing scheduler simply decrease priority regulated class general scheduler schedules packets class frequently 
definitions classi er addition general scheduler link sharing scheduler required linksharing mechanisms include estimator 
clas ri ier classifies packets arriving gateway appropriate ass output link 
describes efficient implementation classifier 
open questions concerning guidelines classification questions orthogonal scheduling issues discussed 
particular don take position classification requests service applications packet fields source destination addresses protocol field determined network 
estimator estimates bandwidth class appropriate time interval determine class receiving link sharing bandwidth 
time constant estimator critical parameter time constant determines interval gateway attempts enforce link sharing guidelines 
appendix discusses estimator detail 
focuses interaction general scheduler link sharing scheduler 
absence persistent congestion general scheduler required schedule traffic output link 
presence congestion lhe gateway want take account link sharing goals sharing link bandwidth different traffic types protocol families agencies 
link sharing guidelines section specify class continue unregulated scheduled general scheduler class regulated link sharing scheduler 
conceptual separation general scheduler link sharing scheduler imply schedulers consist separate sections code 
example appendix explains simulator link sharing scheduler general scheduler simply different algorithms setting class parameter called time send field indicates time packet allowed sent class 
definitions overlimit limit class called overlimit allocated link sharing bandwidth bytes averaged specified time interval fraction link sharing bandwidth limit 
limit status class determined estimator determine explicit action taken correct link sharing behavior traffic note definitions root node link sharing structure representing link allocated link bandwidth root class overlimit 
definitions leaf class defined unsatisfied link sharing behavior persistent backlog satisfied 
nonleaf class defined unsatisfied link sharing behavior descendant class persistent backlog 
define persistent backlog detail exact definition policy issue 
intention unsatisfied class class sufficient demand additional bandwidth 
class occasionally packet queue brief time probably considered unsatisfied link sharing behavior simulator implementation formal link sharing guidelines class nonempty queue defined having persistent backlog 
notion persistent backlog approximations formal link sharing guidelines section 
fig 

examples link sharing scenarios 
proposing formal link sharing guidelines consider link flat link sharing structure fig 

case link sharing guidelines fairly clear intuitive 
class overlimit unsatisfied classes class need regulated link sharing scheduler 
class overlimit class unsatisfied overlimit class contributing congestion link regulated link sharing scheduler 
regulation continue class longer overlimit unsatisfied classes 
guidelines link sharing overlimit class regulated class unfilled demand receiving allocated bandwidth specified time interval 
classes satisfied link sharing behavior classes regulated 
hierarchical link sharing structure link sharing guidelines extension guidelines 
define level class link sharing structure 
definitions levels leaf classes link sharing structure defined level interior class level greater highest level children 
example levels shown case fig 

formal link sharing guidelines implement link sharing goals described previous section 
formal link sharing guidelines specify class allowed borrow unused bandwidth ancestor classes 
formal link guidelines class cars continue unregulated conditions hold class overlimit class overlimit ancestor level unsatisfied classes link sharing structure levels lower 
class regulated link scheduler 
cases case legend vol 
august note link sharing guidelines simply decide class allowed scheduled general scheduler unregulated class bandwidth link sharing scheduler 
division available bandwidth unregulated classes determined scheduler 
linksharing guidelines simply determine class allocated bandwidth contributing unsatisfied state class link 
cases illustrated fig 
illustrate formal link sharing guidelines 
example link sharing structure fig 
bold circles mark overlimit classes small queues show classes persistent backlog 
status formal link sharing guidelines applied determine classes need regulated 
fig 
leaf classes labeled real time classes classes labeled time classes 
case consider link sharing classes unsatisfied 
case classes need regulated 
case case overlimit classes agency nonreal time class unsatisfied agency class overlimit 
link sharing guidelines real time class allowed borrow parent classes real time classes regulated 
appendix examines pathological behavior result agency real time class allowed continue unregulated case 
case case agency class agency real time class overlimit agency class agency nonreal time class unsatisfied 
link sharing guidelines agency real time class needs regulated 
formal link guidelines take account limit status ancestor classes hierarchical link sharing provided 
floyd jacobson link sharing resource management models case case leaf classes unsatisfied agency class unsatisfied 
agency class unsatisfied classes levels agency nonreal time class continue unregulated 
link sharing guidelines agency real time class regulated 
example link sharing guidelines provide hierarchical link sharing 
note specify link sharing guidelines frequently scheduler check class needs regulated 
implementation general scheduler checks class continue send unregulated just transmitting packet class check frequently 
control class link sharing scheduler terminated 
possibility regulated class remain regulated long formal linksharing guidelines met 
class oscillate frequently regulated unregulated necessarily problem 
implementation reasons desired reduce frequency oscillations guidelines alternate link sharing guidelines class continue unregulated conditions hold class overlimit class overlimit ancestor level link sharing structure unsatisfied classes levels lower class regulated link sharing scheduler 
regulated class continue regulated conditions hold class class ancestor level link sharing structure unsatisfied classes levels lower definitions exempt bounded isolated classes structure mark classes bounded desired 
introduces notion exempt traffic restricted scheduler allocated linksharing bandwidth regardless level congestion output link link sharing structure designate exempt class assigning class link sharing bandwidth link bandwidth 
class general scheduler admissions control procedure ensure traffic class violate linksharing goals clear understanding scheduling traffic takes precedence link sharing goals 
bounded class allowed borrow ancestor classes regardless limit status classes 
done example traffic class consisting single high priority real time connection low jitter important low average delay 
implementation proposal real time traffic exempt admissions control procedure sole mechanism ensure real time traffic violate link sharing goals 
link sharing structure class parent field giving class parent class tree borrow field indicating class allowed borrow unused bandwidth parent 
bounded class borrow field set allow borrowing 
isolated class allow classes borrow unused bandwidth borrow bandwidth classes turn 
isolated class leave parent field empty simply assigned fraction link bandwidth 
formal link sharing guidelines discussed appendix iv 
approximations formal link sharing guidelines previous section described set formal link sharing guidelines 
formal guidelines decision regulate class depends limit status parent classes satisfied status classes link sharing structure 
possible formal link sharing guidelines efficiently implemented appropriate architectures data structures 
section explore approximations formal link sharing lend readily efficient implementations 
section discusses approximations formal link sharing approximation ancestors link sharing 
second approximation top level link sharing gives improved performance ancestors link sharing ancestors link sharing ease implementation decision regulate class determined limit status class parent classes 
simple example flat link sharing structure illustrates difficulties approach 
link sharing structure fig 
overlimit leaf class remain unregulated root class limit output link full capacity case overlimit class regulated 
straightforward answer allow overlimit class remain unregulated ancestor class simply 
ancestors link sharing guidelines follows ancestors link sharing guidelines class continue unregulated conditions hold class overlimit class ancestor 
class regulated link sharing scheduler 
drawback ancestors approach satisfied status sibling classes examined distinction agency realtime class case agency real time class case 
case agency real time class case regulated unnecessarily required ancestors link sharing guidelines realtime class regulated link sharing goals satisfied 
ions networking vol 

august fig 

sensitivity ancestors link sharing 
ancestors link sharing gives acceptable results occasions robust formal link sharing 
estimator distinguishes limit ancestor classes allowing overlimit leaf class remain unregulated ancestor ancestors link sharing sensitive quantitative parameter distinguish limit classes 
ancestors link sharing sensitive parameters estimator 
link sharing structure fig 
assume period agency traffic link bandwidth priority class agency sent large burst packets just labeled estimator overlimit 
agency real time class continue able send unregulated long estimator continues label agency class regardless unsatisfied state agency priority class 
ancestors link sharing sensitive maximum burst sent previously idle interior class considered overlimit 
illustrate weaknesses ancestors link sharing consider link sharing structure case fig 
assume general scheduler gives priority real time nonreal time traffic 
assume agency real time class little data send extended period time agency real time class unfilled demand 
ancestors link sharing agency real time class allowed send unregulated root class regardless limit status agency result agency root class cycle agency normal time class cycle receiving receiving bandwidth agency limited credit gets idle periods time agency receive allocated link sharing bandwidth 
top level link sharing guidelines slight modification ancestors approach give robust approximation formal link sharing 
top level guidelines gateway examines limit status ancestor classes 
addition top level approach considers levels various classes hierarchical link sharing structure 
gateway maintains top level variable indicates highest level class allowed borrow bandwidth 
formal link sharing classes allowed borrow ancestors level unsatisfied classes level top level link sharing uses top level variable indicate highest level class may borrow bandwidth uses various heuristics set top level variable 
top link sharing guidelines class continue unregulated conditions hold fie class overlimit class art ancestor level top level 
class regulated link sharing scheduler 
range possibilities heuristics setting top level variable 
top level set infinity top level link sharing identical ancestors link sharing 
top level set lowest level unsatisfied class top level link sharing essentially formal link sharing 
example gateway sets top level class overlimit nonempty queue long top level remains set classes overlimit able send packets 
precisely implementing formal link sharing continually updating top level variable queues build disperse classes change limit status top level link sharing avoids overhead heuristics set top level variable 
simulator uses guidelines setting top level variable 
heuristics setting top level variable packet arrives overlimit class set top level 
top packet arrives overlimit class parent lower level say set top level packet sent class class empty queue unable continue unregulated set top level guidelines gateway sets top level gateway knows class send packet borrowing ancestor level setting top level variable reflects partial knowledge gateway 
example guidelines top level variable greater class nonempty queue 
top level link sharing requires additional overhead maintaining top level variable compared ancestors link sharing ways top level link sharing requires overhead ancestors link sharing 
example top level link sharing top level variable scheduler doesn jacobson link sharing resource management models agency age cy cy video ftp ftp source source source 
gateway mb fig 

simula itm scenario link sharing link priority link sharing allocation fig 
ink forthe simulation flat link sharing check limit status parent classes deciding class needs regulated 
link sharing comparisons formal ancestors top level link sharing section illustrates performance differences formal ancestors top level link sharing simulation environment extremely simple traffic arrival patterns 
fig 
shows network scenario simulations 
simulation network single congested gateway various link sharing structures congested link shown figs 

class single constant bit rate source input link congested gateway class sufficient demand entire link bandwidth shared link 
admittedly unrealistic sources simple way explore link sharing free extraneous influences 
simple simulations traffic class generated single source general traffic class consist connections different sources 
simulations ftp packets bytes 
video packets somewhat arbitrarily set bytes audio packets range bytes 
packet sizes chosen simply explore behavior range packet sizes various connections 
priority link sharing fig 

link sharing simulation agency link sharing 
priority sharing fig 

sharing structure simulation agency linksharing 
implementation link sharing simulations gateway maintains separate queue leaf class queue hold packets 
arriving packets class dropped class queue full 
leaf class link sharing structure assigned priority level link sharing allocation 
general scheduler simulator uses strict priority 
classes priority general scheduler uses variant weighted round robin weights proportional link sharing bandwidths classes 
priority level general scheduler distributes bandwidth link sharing allocations classes 
link sharing scheduler simulator regulated class link sharing bandwidth 
estimator general scheduler link sharing scheduler simulator explained detail appendix time constant simulator estimator computing limit status class relatively small equal time transmit packets class simulation fig 
congested link uses flat class structure fig 
high priority classes lower priority class 
axis fig 
shows time axis shows average bandwidth class second intervals percentage link bandwidth 
simulation traffic class turn source stops transmitting seconds 
idle source indicated bottom 
esti defined appendix vol 
august xl time fig 

flat link sharing top level link sharing guidelines 

idle bbl ol xl time fig 

agency link sharing formal guidelines 
simulation shows sources transmitting time time class roughly link sharing allocation 
ftp class stops transmitting seconds time excess bandwidth shared real time classes proportion linksharing bandwidths classes 
sharing results weighted round robin priority levels simulator general scheduler 
video class stops transmitting seconds excess bandwidth audio class general scheduler gives audio class priority ftp class 
similarly audio class stops transmitting seconds small measure excess bandwidth video class 
general scheduler uses priority scheduling link sharing mechanisms ensure ftp class receives link sharing bandwidth sufficient demand 
simulation gives essentially results formal ancestor top level link sharing 
simulations figs 
congested link uses agency class structure fig 

figures show simulations formal ancestor top level link sharing 
solid lines show bandwidth video classes dotted lines show bandwidth ftp classes dashed lines show bandwidth interior classes 
simulation source class stops transmitting seconds 
note class stops transmitting excess 
wa ma pid 
seconds fig 

agency link sharing ancestor link guidelines 
ida aw 
lf fig 

agency link sharing top level sharing guidelines 
bandwidth class agency hierarchical link sharing structure specifies 
agency receives roughly link sharing bandwidth long sufficient demand 
near simulation video sources transmitting ftp class receives link sharing allocation parent class 
note simulation formal link sharing agency link sharing simulation 
simulation ancestor link sharing agency tlp class stops sending extra bandwidth taken agency video class agency receives link sharing allocation part simulation 
problem largely corrected simulation top level link sharing 
simulation fig 
congested link uses agency class structure fig 

simulation video classes marked bounded allowed bandwidth parent classes 
video class link bandwidth regardless traffic link 
simulation shows source ftp classes stops transmitting excess bandwidth ftp classes roughly proportion link sharing allocations classes 
weighted roundrobin scheduler 
near simulation sources transmitting remaining idle duration simulation 
floyd jacobson link sharing resource management models 
seconds fig 

agency link sharing top level link sharing guidelines 
shown bottom 
simulation results essentially formal ancestor top level link sharing 
general simulations ancestor link sharing higher priority classes receive slightly bandwidth allocated agency level link sharing imprecise 
ancestor link sharing sensitive setting various parameters computing limit status interior classes 
problems reduced top level link sharing problems occur simulations formal link sharing 
priori scheduling link sharing framework key feature link sharing framework ability share bandwidth classes different priorities 
section investigate interactions priority schedulers link sharing 
simulations section compare priority scheduler ba sed scheduler approximates idealized fluid flow model link sharing 
simulations agency real time interactive ftp class 
goal simulations investigate advantages disadvantages giving interactive traffic priority ftp traffic 
simulations agency link sharing show arrival process interactive class bursty priority scheduler gives interactive class priority ftp class significantly reduce delay interactive traffic adversely affecting average throughput ftp traffic 
precisely simulations show advantages incorporating priorities linksharing structure pronounced arrival rate higher priority interactive class moderately bursty link bandwidth significantly greater average bandwidth received higher priority class 
fig 
shows network scenario simulations section fig 
shows class structure congested link 
call data connection delay user concerned delay individual packets short bursts packets connection examples include real time telnet nfs traffic 
call data connection throughput sensitive fig 


sink 
general simulation scenario investigation delay mf wb priority fink dth fig 
link sharing structure congested gateway connection transfers fairly large number packets user concerned arrival time packet transfer 
example data connection tile transfer user receive file promptly possible user concerned arrival time individual packets 
simulations section assume traffic real time class constrained admissions control procedure traffic interactive class delay sensitive constrained admissions control procedure 
assume traffic ftp class throughput sensitive tcp traffic consisting large file transfers 
purposes section call class persistent queue congested 
simulation section ftp classes interactive classes active 
active ftp class consists ftp connections maximum windows set absence congestion ftp connections link bandwidth 
simulations active ftp class usually congested 
simulator tcp tahoe tcp 
key parameter simulations average arrival rate active interactive class 
attempting construct realistic source model interactive class goal investigate delay throughput various classes different simulations different arrival rates degrees burstiness interactive traffic 
simulator agency interactive class single udp source generates bursts byte packets exponential time intervals agency interactive class udp transactions networking vol 
august ft packets sco val mid line model fluid part yj soo ink part iii fig 

scenario source sends single byte packets exponential time intervals 
interaction class traffic thought single udp video connection unconstrained admissions control procedure traffic udp whiteboard sessions aggregate large number short lived connections nonstandard congestion control mechanisms 
arrival rate aggregate agency interactive traffic fairly bursty arrival rate aggregate agency interactive traffic fairly smooth 
sets simulations run scenario section 
set simulations illustrated solid line subsequent figures uses link sharing structure fig 

link sharing structure takes advantage bandwidth allocations priorities interactive ftp traffic 
second set simulations illustrated dashed line uses similar link sharing structure change ftp classes priority priority 
second set simulations approximates idealized fluid flow model instantaneous sharing proposed interactive ftp traffic 
simulations formal link sharing guidelines 
class drop tail queue congested gateway packets arriving full queue dropped 
buffer size class packets delay bandwidth product packets single connection 
average queueing delay traffic class determined priority level class buffer size 
soa rete modal fluid part ini ratio part iv fraction bandwidth available class 
simulation scenario shown fig 
agency interactive class agency ftp class active classes 
agency interactive class essentially allocated link bandwidth agency ftp class allocated 
simulations run range values arrival rate interactive traffic exceeding allocated rate agency traffic 
priority simulation set long arrival rate interactive traffic large small bursts interactive traffic transmitted link bandwidth spread fraction bandwidth allocated class 
top graph fig 
shows average queueing delay interactive ftp packets 
second simulations run arrival rate interactive traffic different seeds random number generator 
solid line shows average simulations priority link sharing implementation dashed line shows average fluid flow link sharing implementation 
higher delay interactive traffic heaviest congestion results fact interactive ftp classes buffers size ftp class receives times bandwidth interactive class 
second graph fig 
shows average throughput interactive ftp traffic 
dotted line shows floyd jacobson 
link sharing resource management models wj fluid part 

ico km part ii fig 

pa throughput interactive traffic get throughput matched arrival rate 
third graph fig 
shows fraction arriving packets dropped interactive ftp traffic 
tcp congestion control procedures ftp traffic controlled small number packet drops 
udp interactive traffic hand average arrival rate exceeds available bandwidth fraction packets dropped increases sharply 
bottom graph fig 
shows ratio interactive packets queueing delay fluid flow priority link sharing 
simulations moderate arrival rate agent interactive traffic kb average delay interactive traffic fluid flow link sharing times average 
fig 
scenario 
ca mk sw fine priority modal fluid clef part mm cj priority line mom part delay priority link sharing showing somewhat artificial circumstances advantages priority link sharing significant 
second simulation scenario results shown fig 
traffic added real time classes 
agency real time class consists single connection agency real time class consists connections 
connection peak rate kbps link bandwidth average rate half peak rate 
real time classes 
fig 
shows 
addition real time traffic change benefits interactive traffic having priority ftp traffic class 
low real time class results high priority low arrival rate lower allocated bandwidth 
third simulation scenario results shown fig 
agency ftp class agency interactive class active classes 
agency ftp class essentially allocated ri link bandwidth agency interactive class allocated 
circumstances little performance difference priority fluid flow link sharing implementations 
case average delay delay sensitive packets quite low 
simulations illustrate higher priority class bursty arrivals coupled link bandwidth ons gng vol 
august significantly larger average bandwidth available class priorities general scheduler significantly limit average delay higher priority traffic adversely affecting average bandwidth lower priority traffic 
note simulations attempt investigate realistic traffic scenarios fit condition bursty arrivals aggregate interactive traffic 
vi 
real section considers service models real time traffic paying particular attention relationship linksharing goals real time service models 
linksharing limit bandwidth classes times congestion link sharing isolates traffic classes 
isolation bean important mechanism accommodating emerging service models internet 
lws isolation cart protect needs 
term real time refer traffic fixed adaptive playback time 
discussed gateways explicit admissions control procedures real time traffic nonreal time mean low delay desirable reasonable time scales receiver waits packets ultimately 
believe danger current providing real time services discount needs nonreal time traffic www telnet ftp inte net 
possibility scheduler gateway consider needs real time traffic schedule nonreal time traffic needs real time traffic met having scheduler enforce bandwidth limitations real time traffic 
needs real time traffic met link sharing mechanisms share remaining bandwidth nonreal time classes 
argue type approach link sharing sufficient 
lead starvation nonreal time traffic substantial periods time restricts types real time traffic accommodated network 
sole reliance admissions control procedure policing realtime traffic edge network ill suited needs rate adaptive video problematic presence long range dependence real time traffic 
service models real time traffic assume realtime connections negotiate particular class service including example certain average maximum delay allowing certain statistical fraction packet drops 
slightly different service model introduced defines predictive service loss tolerant applications adaptive playback times 
model motivated part emergence internet applications video vat visual audio tool receiver adapts playback time delay lo 
mc tie mbone informal unenforced network 
model predictive service differed previous service models predictive service connections art explicit agreement network connection deterministic statistical requirements delay packet loss rates met 
admissions control procedure predictive service measurements past class measurements past traffic predictor traffic 
traffic incorrect predictive service class result increased connections 
delay artd drop rates predictive service example need protect nonreal time traffic predictive service class predictions past traffic incorrect conflict link sharing goals predictive service goal imperfectly reliable delay bounds predictive service traffic 
commitment predictive service network admissions control procedures past traffic network control admissions predictive service connections 
predictions past traffic reliable predictive service packets delivered appropriately low delay 
possible admissions control procedure quantitative commitments level service predictions past traffic turn unreliable 
option gateway serve predictive service packets possible real time service commitments met 
option gateway restrict predictive service necessary meet link sharing goals including linksharing goal allocating bandwidth nonreal time traffic time interval 
link core network frequent changes number predictive service connections effectiveness admissions control procedure assisted large number connections frequency connections come go 
assumption past traffic reliable guideline traffic effective large number predictive service connections 
addition times predictive service admissions control procedure overly optimistic core network tks corrected simply waiting short time predictive service connections terminate 
contrast moderate bandwidth link moderate number predictive service connections predictive class admissions control procedure effective protecting link sharing goals 
times predictive service admissions control procedure overly optimistic waiting possible long lived predictive service connections terminate having scheduler rate limit predictive service traffic dropping packets buffer 
options violate commitment predictive service goal provide reliable delay bounds contingent assumption past traffic reliable indicator traffic 
second option protects quantitative link sharing goals admissions control procedure depends rough consensus users mbone 
predictive service goals 
floyd jacobson link sharing resource management models link sharing control bandwidth predictive service traffic times congestion possibility taken account admissions control procedure 
case predictive service admissions control procedure admit new connections traffic measurements indicate delay acceptable class restricted allocated bandwidth 
implication admit new predictive service connections aggregate arrival rate predictive service class exceeding allocated predictive service bandwidth relevant time intervals 
illustrate possible interaction link sharing predictive service consider gateway link sharing structure allocates link bandwidth realtime traffic nonreal time traffic 
assume coupled priority general scheduler gives priority real time class conservative admissions control procedure real time class tries limit real time traffic yc link bandwidth 
case link sharing scheduler regulate bandwidth real time class real time class fact exceeded link bandwidth interval time nonreal time class unsatisfied demand 
goals admissions control procedure happen enforcement link sharing gateway result unacceptable service real time traffic 
time presence link sharing mechanisms ensures nonreal time class denied allocated bandwidth long intervals time 
model predictive service additional service models emerge meet requirements emerging real time applications 
possible new application source receiver rate adaptive video congestion control procedure control connection traffic response congestion 
source rate adaptive video source adjusts transmission rate response feedback receivers possibly layered coding scheme 
receiver rate adaptive video video source partition signal separate layers transmitting layer separate multicast group receivers unsubscribe higher bandwidth layers experiencing congestion 
models rate adaptive video easily accommodated network link sharing gateway allocates certain possibly dynamic link sharing bandwidth class variable bit rate video connections 
absence congestion video traffic bandwidth desired presence congestion bandwidth video class controlled fraction arriving video packets dropped gateway video congestion control mechanisms respond reduce congestion bandwidth limited environment video users require certain minimum bandwidth 
minimum bandwidth guarantee network require admissions control procedure 
class video traffic requirements minimum connection bandwidth user receive frame seconds receive frames admissions control procedures required 
vii 
sharing revisited authors propose addition real time services packet networks viewed terms basic principles sharing 
section discuss implications isolation sharing framework link sharing 
isolating classes traffic network link sharing encourages heterogeneity time allows connections compatible congestion control procedures enjoy advantages cooperation sharing bandwidth single class traffic 
leaf class isolation connections provided round robin scheduling algorithm fair queueing sharing connections provided scheduling algorithm fifo 
authors propose predictive service class fifo scheduling fifo scheduling reduces tail delay distribution compared round robin scheduling reducing delay packets arrive gateway burst packets single connection 
users predictive service class protected misbehaving users admissions control procedure coupled policing edge network 
section briefly discuss benefits sharing classes best effort nonreal time traffic protection admissions control procedure replaced protection compatible congestion control procedures connection 
advantage sharing cooperation traffic class includes implementation efficiencies come minimum connection state class 
second advantage reduction tail delay distribution results fifo scheduling 
potential advantages cooperation traffic classes obvious easy take advantage 
tcp traffic class noncooperative scheduling algorithms fair queueing fairness bandwidth sharing completely local doesn take account factors number congested gateways range roundtrip times different connections 
traffic class fifo scheduling algorithm cooperating connections compatible congestion control algorithms bandwidth distribution connections reflect characteristics system range roundtrip times number congested gateways connection 
congestion control algorithm gateway scheduling algorithm gateway congestion feedback algorithm exploit interaction system characteristics improve purely local fairness round robin schedulers 
take advantage sharing link sharing class best effort traffic form monitoring appropriate ensure connections class iee acm transac networking 
vol 
august fact acceptable congestion control procedures 
example red gateways straightforward identify connections large share class bandwidth times congestion 
classes isolated lower priority lower bandwidth class 
viii 
related approach link sharing described cbq approach proposed jacobson members research group 
cbq single set mechanisms proposed implement link sharing real time services 
mechanisms classify arriving packets appropriate class estimator estimate bandwidth class selector determine order packets various classes sent overlimit action schedule traffic classes exceeded link sharing limits contributing congestion 
introduced terms general scheduler link sharing scheduler conceptual tools exploring algorithms 
selector cbq roughly corresponds general scheduler defined overlimit action roughly corresponds link sharing scheduler referred 
discussed structure motivated part response scheduling architecture proposed 
scheme proposed discussed section vi 
approach defining service model including quality service commitments individual flows link sharing commitments collective entities define precedence ordering various service goals including linksharing goals precedence ordering specify commitments satisfied gateway commitments conflict 
goals include guaranteed real time service predictive real time service classes soon possible service nonreal time traffic hierarchical link sharing 
attempt outline complete service model presents alternate approach reconciling quality service commitments link sharing commitments gateway 
goal hierarchical link sharing described defined approximating close possible bandwidth shares provided idealized fluid flow model instantaneous 
significant differences approach linksharing approach 
link sharing goal restricted providing link sharing entities classes priority 
link goal approximating idealized fluid flow model allow explicit link sharing classes different service priorities realtime nonreal time class telnet lower priority ftp class traffic 
second link sharing takes account bandwidth real time traffic link sharing algorithm affect scheduling real time traffic 
architecture dictates link sharing goals affect admission control decisions real time flows link sharing goals effect scheduling real time packets affect scheduling elastic packets 
maintain just possible way scheduling packets way consistent service model contrast section vi discusses explicit enforcement link sharing goals real time traffic aid gateway serving loss tolerant real time traffic real time traffic drop preference rate adaptive congestion control algorithms controlling bandwidth traffic providing benefits priority scheduling 
section vi presents argument explicit enforcement linksharing goals real time traffic violate goals predictive real time service appropriate admissions control procedures contributes flexibility resource management architecture accommodating new service models 
discusses possibility dropping small percentage preemptable real time packets gateway service commitments danger violated little discussion accomplished 
contention issues considered context hierarchical link sharing decision drop packets particular class depend class ancestor classes substantially contributing congestion network 
previous research link sharing included simulation studies fair queueing user classes user class range individual application collection connections associated particular government agency 
ix 
strengths link sharing framework proposed framework allows priority scheduling algorithms gateway real time traffic incorporating provisions protect linksharing behavior gateway 
argue considering link sharing goals real time service goals leads efficient productive implementations services 
incorporation link sharing mechanisms provision real time simplify add robustness provision real time services internet 
link sharing mechanisms isolating classes priority protecting lower priority traffic starvation add flexibility internet protecting traffic higher priority real time traffic providing appropriate isolation new congestion control protocols response congestion differs tcp 
great number open research questions concerning network resource management 
open question concerns possible scenarios development floyd jacobson link sharing resource management models ofs bytes sent fig 
computation limit status class integration new service models internet 
example plausible potential new service model rate adaptive video reliable multicast new link sharing class opened service model link network allow users experiment 
possible somewhat pattern evolution mbone networks links internet consider creating new linksharing class particular emerging service class somewhat ad hoc classification fields packet headers 
turns useful users request networks create similar link sharing classes expand experience emerging service class service class sufficiently mature full standardization 
ce challenges developing resource management internet continue ability learn working implementations deployed somewhat decentralized fashion mbone www 
believe link sharing mechanisms components meeting challenge appendix implementation simulator estimator estimator determines limit status classes class structure 
appendix describes implementation estimator simulator methods efficiently implement estimator 
key parameters estimator time constant estimator frequency estimator updates limit status class 
time constant estimator explicit design parameter gateway 
simulator gateway recomputes limit status class ancestor classes gateway transmits packet class 
estimator uses exponential weighted moving average ewma tcp compute average round trip delay 
estimator looks inter packet departure times decaying weight distant packets indirectly computes mean inter packet departure time reciprocal mean packet rate 
size transmitted packet bytes link sharing bandwidth allocated class bytes second measured time packet just transmitted previous packet transmitted class shown fig 

gateway sends packets size class precisely link sharing bandwidth allocated class time successive packets seconds 
cliff discrepancy actual time allocated time class packets size 
note cliff negative class exceeding link sharing bandwidth nonnegative 
simulator computes avg exponential weighted moving average cliff variable equation avg avg cliff 
properly scaled versions parameters weight chosen negative power avg computed shift add instructions 
computing cliff function computed explicitly determined packet size index array class 
weight determines time constant estimator 
sending rate class suddenly changes causing computed value cliff variable change value takes ln iji packets sent class computed estimate avg moves way old value cliff new value 
time roughly ln seconds class sending byte packets close class allocated link sharing bandwidth bytes estimator allow previously idle class send overly large burst traffic class estimated overlimit 
implementation estimator explicitly consider maximum burst class send having idle long period considered overlimit 
method implementing estimator class small fraction allocated bandwidth extended period time large value parameter avg 
previously idle class link sharing allocation bytes second value avg send back back byte packets vol 
august ss estimated overlimit log limiting maximum value variable avg 
estimator limit number back back packets sent previously idle class class estimated overlimit 
implementation estimator explicitly consider extent limit status class influenced previous bandwidth class received excess allocated share 
simulator done parameter specifies minimum negative value variable avg 
note estimator explicitly estimate bandwidth class 
estimator fairly accurate estimating class limit exact value avg computed estimator sensitive things packet sizes class 
alternate implementation estimator gateway seconds recompute limit status class seconds 
adequate implementation accuracy gateway satisfying link sharing goals limited ratio value determined desired time intervals link sharing goals enforced 
decreasing increases accuracy gateway satisfying link sharing goals 
formal link sharing leaf classes ancestors top level link sharing scheduler needs tp know class overlimit 
case estimator uses actual link sharing allocation class computing allocated time packets 
contrast interior classes ancestors top level versions link sharing scheduler needs know class 
estimator uses bandwidth slightly link sharing bandwidth allocated class computing allocated time 
example computing root class estimator simulator uses bandwidth slightly actual bandwidth link computing allocated time uses fact class sending back back packets measured time seconds link bandwidth bytes second 
back back packets computed negative cliff seconds 
back back packets value avg tu 
value avg positive long 
condition holds values satisfy 
simulator value avg computed estimator indicate limit status class class time send field 
field indicates time gateway allowed send packet class 
class avg positive estimator sets time send field zero indicating class limit 
class avg negative nonleaf class time send field set time seconds ahead time avg size packet just transmitted class 
gateway waits seconds sending packet class class longer limit 
regulated class avg negative leaf class link sharing scheduler sets time send field class seconds ahead current time 
earliest time class able send packet 
regulated class restricted link sharing scheduler allocated bandwidth regardless excess bandwidth class past 
link sharing scheduler described appendix implementation general scheduler general scheduler schedules packets unregulated classes gateway 
section describes implementation general scheduler simulator 
simulator gateway maintains separate queue class associated output link 
packet transmitted output link general scheduler decides class send packet link 
general scheduler schedules packets higher priority classes 
classes priority general scheduler uses variant weighted round robin weights proportional bandwidth allocations classes 
weights determine number bytes class allowed send round 
class sends allocated number bytes packets aren broken byte sized pieces class byte allocation round correspondingly reduced 
weighted round robin service classes priority level serves functions 
function ensure priority class receives allocated bandwidth fairly small time intervals 
half link bandwidth allocated priority classes priority class sufficient demand guaranteed receive allocated bandwidth round round robin 
second function weighted round robin ensure bandwidth distributed unregulated classes priority proportion bandwidth allocations classes 
discussed section ii distribution excess bandwidth classes arbitrary follow appropriate set guidelines 
priority general scheduler weighted round robin priority levels results excess bandwidth distributed general scheduler floyd jacobson link sharing resource management models higher priority classes distribution proportional relative link sharing allocations classes 
general scheduler transmits packet class scheduler checks limit status class simply comparing class time send field current time 
time send field zero class limit general scheduler allowed transmit packet class 
time send field nonzero current time class overlimit general scheduler allowed transmit packet class 
time send field class greater current time class overlimit 
case general scheduler send packet class permitted link sharing guidelines 
example ancestor link sharing time send field class greater current time general scheduler send packet class ancestor class 
essential issue proposal general scheduler scheduler lend efficient implementations 
describes efficient implementation classbased queueing mechanism uses general scheduler 
implementation link sharing scheduler linksharing scheduler controls scheduling packets regulated classes 
simulator link sharing scheduler working concert general scheduler effectively rate limits regulated classes allocated link sharing bandwidth 
simulator uses different methods rate limiting regulated class 
methods give similar results depending circumstances method preferred reasons efficiency 
describe methods section involving time send field regulated class 
second method appropriate class forced remain idle substantial number packet transmission times involves temporarily removing class linked list classes priority level class timer expires 
method simulator link sharing scheduler sets time send field regulated class seconds ahead current time packet just transmitted contained bytes class link sharing allocation bytes second 
result general scheduler considers class overlimit time indicated time send field time general scheduler allowed send packet class regardless value avg limit status ancestor classes 
class overlimit packet sent indicated avg variable maintained class time send field set seconds ahead current time 
notice simulator regulated class exact scheduling packets regulated class determined general scheduler 
high priority class priority general scheduler general scheduler send packet regulated class soon time indicated time send field 
lower priority class general scheduler delayed somewhat longer sending packet regulated class 
happens frequently avg variable change negative positive indicating previously overlimit class longer overlimit class longer need regulated link sharing scheduler 
point time send field class reset zero 
available cbq distributions contains pointer unsupported version cbq code available ftp cs ucl ac 
uk darpa cbq tar distribution derived code predates research essentially implements variant ancestor link sharing described 
subsequent unsupported version cbq code available 
appendix formal link guidelines appendix gives additional discussion formal link sharing guidelines section hi 
particular section shows long unsatisfied leaf class class allowed send packet unregulated sending packet result class having allocated link sharing bandwidth seconds 
appendix uses discuss limitations starvation lower priority classes 
formal link sharing guidelines properties class overlimit regulated 
classes satisfied classes regulated 
question concerns long unsatisfied class wait begins receive allocated bandwidth 
bandwidth received particular class depends priority class priority general scheduler details estimator general scheduler link sharing scheduler 
general observations 
discussion assume link sharing scheduler rate limits regulated classes allocated link sharing bandwidth 
section ease analysis assume limit status class determined packet transmitted computing bandwidth received class seconds simplicity assume packets size bandwidth allocations translate integer number packets seconds 
assume class considered overlimit time sending packet time result class having allocated link sharing bandwidth seconds 
ease analysis assume class defined having persistent backlog queue class nonempty 
choose method estimator easy analyze link sharing behavior robust ewma estimator 
plain moving average estimator ewma estimator place limitations previously idle class declared overlimit 
transactions networking vol 
august class cl class class time fig 

class denied bandwidth seconds 
assumptions link sharing structure root class allocated link bandwidth nonleaf class sum bandwidth shares allocated child classes equals bandwidth allocated class 
class allocated link bandwidth sum allocations child classes 
assume classes marked bounded 
assume general scheduler conserving link idle class nonempty queue 
assume leaf class unsatisfied time additional observations class allowed borrow nonleaf class long class remains unsatisfied 
long leaf class remains unsatisfied link sharing structure effectively leaf classes children root class 
classes allowed borrow root class 
case long class remains unsatisfied class allowed send packet unregulated sending packet results class allocated link sharing bandwidth seconds 
regulated classes rate limited allocated link sharing bandwidth 
limits starvation lower priority classes section addition assuming leaf class unsatisfied time assume classes link sharing structure higher priority class give quantitative bounds long class prevented receiving bandwidth 
necessarily case second interval time leaf classes receive allocated link sharing bandwidth 
example class higher priority allocated fraction link sharing bandwidth time send unrestricted seconds rate limited allocated bandwidth class receive link sharing bandwidth interval 
note occur arrival rate class 
higher priority classes changed significantly time time pi fig 

example link sharing structure 
priority sharing bandwidth claim explores limits bandwidth leaf classes receive unsatisfied leaf class 
claim assume leaf class unsatisfied time class class time ti ti class ci receives allocated bandwidth interval ti ta class remains unsatisfied 
ti class receives allocated bandwidth interval ti ti ti case consider class overlimit time interval ta class remains unsatisfied class receives allocated bandwidth 
case consider class overlimit time assume class overlimit time tz class begins rate limited allocated bandwidth time time gets send unregulated overlimit interval ta class remains unsatisfied class receives allocated bandwidth 
class overlimit time interval class received allocated bandwidth second interval ends time inclusive 
case assume class overlimit time tz class received allocated floyd jacobson link sharing resource management models class class class cl ii 

time cl fig 
class denied bandwidth indefinitely ancestor link sharing 
bandwidth second interval interval ta 
interval ta class remains unsatisfied class receives allocated bandwidth 
case assume class overlimit time class received allocated bandwidth second interval tz interval ta class remains unsatisfied 
example limited starvation class example limits starvation possible lower priority class fig 
shows bandwidth received link link sharing structure classes cl priorities respectively class allocated link bandwidth 
class receiving link bandwidth time classes ca high demand 
class receives link bandwidth seconds regulated link sharing bandwidth 
similarly classes get transmit shown fig 
class receives bandwidth seconds 
possible construct pathological link sharing allocations arrival patterns class wait significantly longer receiving bandwidth 
depending scheduling algorithms classes link sharing structure link sharing allocations pl class assigned link sharing allocation possible class receive bandwidth pi pj seconds time example classes allocated fraction link bandwidth class lowest priority class receive bandwidth seconds arrival patterns planned adversary 
limited starvation lower priority classes dependent pathological arrival process higher priority classes 
arrival process higher priority classes abruptly change time classes overlimit time continue rate limited classes time continue 
arrival rates classes abruptly change time class receive link sharing bandwidth soon time note delay lower priority class receive limited implementation simulator estimator explicitly limits bandwidth previously idle class receive declared overlimit 
note potential limited starvation applies classes highest priority level 
class highest priority forced wait higher priority classes 
bandwidth received classes determined general scheduler constraint class rate allocated link sharing bandwidth times congestion 
appendix ancestor link sharing section examine pathological case occur ancestor link sharing adversary controlling traffic arrival pattern order deny bandwidth particular class 
example section helps explain rule formal link sharing class borrow overlimit ancestor level unsatisfied class level class descendant ancestor class 
consider link sharing structure fig 
consider priority scheduler ancestor linksharing 
consider highly unrealistic packet arrival process 
assume time packets arrive class class assume simplicity link class limit having transmitted packets class 
allowed transmit pi seconds overlimit additional seconds parent class 
root class limit class acm transactions vol 
august allowed borrow root class 
assume conveniently packets arrive class class empty queue 
assume packets arrive class 
class allowed transmit seconds 
assume packets arrive class seconds class empty queue 
process repeats agency class transmits class transmits pat seconds 
packets arrive class time class transmits seconds 
consider allocations pi psj 
bandwidth congested link shown fig 
classes transmitting turn time transmitted seconds agency longer overlimit packets agency transmitted seconds 
pathological traffic arrival process cycle continues repeat 
class sends pl seconds point agency overlimit 
class sends seconds agency classes send class lower priority sets send packets 
emphasize pathological case requires ancestor link sharing highly artificial packet arrival pattern helped moving average estimator exponential decay 
example consider happen realistic packet arrival pattern packets continued arrive class transmitted packets pi seconds 
class regulated linksharing fraction pl link bandwidth cycle class receiving link bandwidth link bandwidth broken 
similarly classes continued arriving packets bursts link bandwidth classes continue regulated linksharing allocations starvation class 
note pathological behavior described occur formal link sharing guidelines case children allowed borrow parent classes leaf class unsatisfied 
acknowledgment authors clark shenker zhang members irtf research group discussions disagreements link sharing issues management crowcroft jamin paxson helpful feedback various stages 
go mccanne done modi maintaining simulator jamin contributions simulator 

bolot turletti feedback control video internet 
sigcomm aug pp 

shenker integrated services intemet architecture overview request comments rfc ietf june 
clark jacobson efficient resource management unpublished manuscript apr 
clark zhang supporting rest time applications integrated packet network architecture mechanism proc 
aug pp 

simulation study fair queueing policy acm 

rev vol 
pp 
oct 
keshav shenker analysis simulation fair queueing algorithm res exper pp 
vol 

eriksson mbone multicast backbone 
acm vol 
pp 
aug 
ferrari zhang network support multimedia discussion tenet approach appear special issue networking computer networks systems 
floyd connections multiple congested gateways networks part way traf comput 

rev vol 
pp 
oct 
notes guaranteed service resource management unpublished mar 
floyd jacobson random early detection gateways congestion avoidance cm 
networking vol 
aug 
garrett vetterli joint source rg statistically multiplexed real time services packet networks 
networking vol 
pp 
feb 
garrett analysis modeling generation self similar vbr video traffic 
aug pp 

hoffman implementation report cbq kernel presentation rsvp working group ietf ietf july 
url www ietf 
va ud jul tsv rsvp hoffman slides 

early access release rsvp cbq available fip play ound sun rsvp mvp st ti warning consists mbytes compressed code 
jacobson congestion avoidance control proc 
aug pp 

shenker clark admission control algorithm predictive real time service proc 
rd im 
workshop networking oper 
syst 
support digital audio deo san diego ca nov pp 

private communication oct 
clark scheduling service model scheduling architecture integrated services packet network working xerox parc aug 
ghosh crowcroft jacobson implementing mat time packet forwarding policies streams tech 
new orleans la 
pp 

url tlp cs uk darpa usenix cbq ps 
young recursive estimation series analysis 
new york verlag pp 

deering estrin shenker rsvp new reservation ps ieee network sept 
floyd photograph biography see june issue 
research scientist lawrence berkeley laboratory 
