ninth international conference principles knowledge representation reasoning june whistler canada 
satisfiability propositional contexts luciano serafini itc irst sommarive povo trento italy serafini itc propose sound complete satisfiability algorithm propositional multi context systems 
essence algorithm distribution policy built top local reasoning procedures context implemented diversity customized state art sat solvers 
foremost intuition motivated algorithm potential strength contextual reasoning keeping reasoning local possible 
doing improve earlier established complexity results massacci 
approach applied enhance proposals amir mcilraith new reasoning paradigm particularly formalism allows expressive description relations provide algorithm explicitly designed deal expressiveness 
establishment solid paradigm contextual knowledge representation contextual reasoning paramount importance development sophisticated theory applications ai 
mccarthy formalization context possible solution problem generality giunchiglia emphasized principle locality reasoning large common sense knowledge bases effectively pursued confined manageable subset context knowledge base 
contextual knowledge representation formalized ways 
notable propositional logic context developed mccarthy buva mason multi context systems devised giunchiglia serafini associated local model semantics ghidini giunchiglia 
contexts implemented microtheories cyc common sense knowledge base guha 
cyc local microtheories choice contemporary settings semantic web notion local distributed knowledge 
modern architectures impose highly scattered heterogeneous knowledge fragments central reasoner able deal 
copyright american association artificial intelligence www aaai org 
rights reserved 
university twente box ae enschede netherlands itc engenders high demand distributed contextual reasoning procedures 
apart exceptions weyhrauch massacci general approach automation contextual reasoning far rarely pursued 
pioneering weyhrauch interactive multi contextual theorem prover called fol developed giunchiglia mature system 
systems support automatic reasoning single context 
cross contextual reasoning left users 
massacci propose completely automatic tableaux decision procedure contextual reasoning 
procedure leaves open substantial number efficiency issues applies propositional logic context plc 
propose automatic decision procedure called csat computes satisfiability multi context systems mcs 
furthermore mcs proven strictly general plc bouquet serafini show csat applied settle satisfiability plc 
contribution threefold csat sound complete decision procedure propositional multi context systems 
csat sat decision procedure contextual reasoning general improves terms complexity massacci tableaux procedure plc implicit results equivalence results modal logics mcs obtained serafini giunchiglia 
approach applied enhance proposals new partition reasoning paradigm amir mcilraith compared alternative formalisms mcs allows expressive descriptions relations csat deliberately designed deal expressiveness 
proceed follows 
defining propositional multi context systems local model semantics explicate contextual satisfiability problem describe csat 
subsequently consider csat computational complexity conclude discussion pros cons approach comparison similar ones 
multi context systems simple illustration intuitions underlying mcs lms provided called magic box example ghidini giunchiglia depicted 
magic box example look box called magic observers depth 
maintain local representation see 
representations coherent instance thinks ball box believe empty 
show interrelated local representations captured formally 
point departure set indices index denotes context described corresponding formal case standard propositional language li 
state formula li holds context utilize called labeled formulas form ambiguity arises simply refer labeled formulas formulas 
formulas apply different contexts may related called bridge rules 
expressions form 


formulas 
note denote implication ll purpose 
note language include expressions 
called consequence called premises bridge rule 
write cons br prem br consequence set premises bridge rule br respectively 
definition propositional multi context system mcs propositional multi context system li br set indices consists set propositional languages li set bridge rules br 
assume countable br finite 
note assumption apply mcss schematic bridge rules provability multi agent belief systems giunchiglia serafini :10.1.1.16.1418:10.1.1.16.1418
question results may generalized capture cases subject investigation 
example mcs formalizes scenario specified example consists contexts described respectively 
constraint believe box nonempty believes case formalized bridge rule mi denote class classical interpretations li 
interpretation mi called local model li 
interpretations entire mcss called chains 
constructed sets local models 
definition chain chain set indices sequence ci ci mi set local models li 
consistent ci nonempty consistent point wise ci set wise 
chain thought set epistemic states corresponding certain context agent 
fact ci contains model signifies li interpretable unique way 
set wise chains correspond partial knowledge point wise chains indicate complete knowledge 
example consider situation depicted 
agents complete knowledge corresponding point wise chain 
imagine scenario views restricted right half left section box partially hidden magic box partial knowledge observations may interpreted way 
reflected set wise chain epistemic states chain consists concern situation 
arbitrary sets local models may constitute sensible chain 
somewhat vague conception sensibility captured formal notion bridge rule compliance specified 
definition bridge rule compliance satisfiability chain formula li br set bridge rules multi context system ms 
satisfies local models ci 
write 

complies br br br cons br prem br 

satisfiable ms consistent chain satisfies complies br 
contextual satisfiability problem determine satisfiable ms assume conjunctive normal form cnf 
note results easily extended non cnf case lines armando giunchiglia 
example way think bridge rule description information flow different contexts 
bridge rule compliance corresponds information flow 
consider example instance 
knows ball box 
bridge rule know presence ball 
knows right sector empty may conclude ball left sector box 
multi context systems encoded propositional logic simply indexing propositions 
encoding system instance inconsistent 
example consider mcs contexts described respectively subject bridge rules formula satisfied system chain henceforth refer set bridge rules ms br set contexts involved formulas mc assignments directly looking chain satisfies ms attempt iteratively construct called mc assignment 
assignment generate suitable chain 
subsection define mc assignments associated semantics 
restate satisfiability problem terms mc assignments specify way generate chain solves original problem mc assignment solves reformulation 
show procedure sound establish solution reformulated problem exists solution original problem exists 
introduce necessary terminology 
definition local truth value assignment function assigns truth values true false propositional atoms li 
call complete assigns truth value propositional atom li partial 
special case assign truth value propositional atoms li called empty 
local truth value assignment represented set literals 
set contains atom iff true negation iff false 
definition mc local assignment set local truth value assignments 
say consistent nonempty inconsistent 
inconsistent mc local assignment denoted 
call complete contains exactly local truth value assignment local truth value assignment complete 
call partial 
definition mc assignment mc assignment set indices sequence mc local assignments 
mc assignment consistent consistent consistent consistent call complete elements complete called partial 
definition bridge rule compliance satisfiability local truth value assignment mc local assignment mc assignment formula li 

satisfies conjunction elements write 

satisfies write 

satisfies 
write 

complies br br br cons br prem br 
consistent mc assignment satisfies complies br able automatically generate chain satisfies ms established follows definition generated chain set local models generated mc local assignment consists exactly local models li satisfy elements local truth value assignments formally mi literals chain generated mc assignment obtained assigning component set local models generated note inconsistent mc local assignment generates empty set local models 
complete mc assignment generates point wise chain corresponding complete knowledge partial mc assignment generates set wise chain indicating partial knowledge 
quite straightforward see consistent consistent 
complies set bridge rules 
holds 
observations directly obtain result 
proposition soundness consistent mc assignment satisfies complies br satisfies ms opposite holds 
chain may obtain mc assignment elements contain local truth value assignments directly represents local model ci 
local models ci represented local truth value assignment easy see construction preserves consistency satisfaction bridge rule compliance 
leads result 
proposition completeness chain satisfies ms consistent mc assignment satisfies complies br 
summary order solve contextual satisfiability problem may attempt solve reformulation terms mc assignments 
suitable mc assignment determined generate chain proposition constitutes solution original problem 
hand mc assignment exists proposition tells unsatisfiable 
csat approach 
starting initial mc assignment attempt construct sequence 
satisfies 

complies bridge rules comply 

extends sense definition extension local truth value assignments mc local assignments mc assignments set indices 
extends 
extends extends 
extends extends useful observe extension subset extending mc local assignment means restricting set local models generated assignment 
observation important implications 
obviously want initial assignment general don want extension assignment 
assignment exhibiting property components consist empty truth value assignment 

note assignment corresponds chain components contain entire set local models mi 
note doesn satisfy formula 
means particular doesn satisfy bridge rule premise complies br 
second implication extending assignment restricting corresponding set local models formula satisfied intermediate assignment satisfied means satisfied satisfied 

intermediate assignment comply bridge rule br br satisfies br premises satisfy consequence extension comply br satisfy br consequence means satisfy br premises 
obtaining consists extending satisfy consequences bridge rules comply 
intermediate assignment satisfies consequence bridge rule br complies br extensions satisfy br consequence comply br 
note remains shown suitable mc assignment exists algorithm finds 
algorithm csat csat br return alse br br br forall prem br br return cons br br br return csat br br approach implemented csat procedure specified algorithm 
sake generality provide elegant recursion csat designed settle satisfiability set labeled formulas 
apart set formulas takes input mc assignment set bridge rules br set contexts indices subset contexts consistency required 
csat called mc assignment components consist empty truth value assignment yields consistent extension satisfies formula compliance br alse fails construct mc assignment 
extensions constructed locally 
csat determines set contexts concerned formulas calls sub procedure extends satisfy 
local extensions obtained way simply taken form global extension 
inconsistent extension inconsistent 
case csat recognizes failure returns alse 
csat determines set br bridge rules premises satisfied br empty solution 
making comply br yields new satisfiability problem extending satisfy consequence br br bridge rule consequences concern context taken order obtain set consisting formula context new instance csat addressed extend satisfy recursively proceeding mc assignment constructed stage satisfies formulas point inconsistent complies entire set bridge rules br 
algorithm return dpll dpll return return assign contains unit clause return dpll return dpll dpll takes input formula mc local assignment yields consistent extension satisfies empty set fails construct extension 
foremost principle strength contextual reasoning locality 
efficiency contextual reasoning process ensues restricting resources small number contexts 
designed accordingly 
concretely amounts constructing assignment unnecessarily satisfy bridge rule premises 
way chance having re establish bridge rule compliance minimized reasoning contexts required strictly necessary 
useful reformulate idea terms sets local models desired extension correspond set local models obtained removing exactly local models satisfy 
constraint settled requiring complete extension respect 
definition complete extension extension mc local assignment called complete respect formula complete local truth value assignment extends satisfies element extension constructs complete extensions 
fact returns union extensions truth value assignments contained extensions determined sub procedure called dpll variant davis putnam loveland sat procedure davis loveland 
called pure literal rule left avoid incomplete extensions returning suitable local truth value assignment alse assignment exist dpll yields compact representation set suitable local truth value assignments may empty set 
compactness representation formally characterized notion strong non redundancy 
definition strong non redundancy mc local assignment called strongly non redundant literal mutually inconsistent 
case dpll called semantic branching branching truth values propositional variables 
result branching step generates mutually inconsistent local truth value assignments dpll yields strongly non redundant set local truth value assignments 
induction holds 
argued empirically supported agostino giunchiglia sebastiani characteristic implies significant fundamental gain efficiency respect reasoning procedures called syntactic branching branching syntactic structure satisfied formula 
motivated dpll foundation algorithm instance syntactically branching tableau 
example describe simple simulation algorithm 
consider example 
knows ball right section box knows ball leftmost section box 
csat determine satisfiable 
proceeds follows 
assignment determined satisfy comply bridge rule extended satisfy obtain complies bridge rule conveys knows ball presence left section box established earlier example 
termination soundness completeness set bridge rule consequences satisfied mc assignment constructed strictly expanded recursive call csat 
finite number bridge rule consequences satisfied csat bound terminate 
soundness completeness csat easily derived 
see contextual satisfiability problem solved suitable mc assignment constructed csat crucial realize iteration yields complete extension assignment constructed far 
hand csat produces mc assignment know proposition satisfiability 
computational complexity csat deterministic form 
lower bound complexity deterministic solutions classical non contextual satisfiability problem satisfied formula number propositional variables occurring 
complexity csat terms formula satisfiability determined terms bridge rules mcs considered 
br denote set consequences bridge rules br 
immediately obtain complexity results tc dpll tc tc csat br max br notice csat optimal exceed lower bound inflicted complexity classical sat 
parameters csat exert influence complexity apart input formula consequences bridge rules br 
bridge rule premises intricate having impact csat complexity 
construct non deterministic variant csat operates polynomial time 
provide nondeterministic version 
observe essen tial task produce extension mc local assignment satisfies complete respect formula 
established non deterministically proceeding follows 
generate extension 
check satisfaction local truth value assignment verify 
check completeness respect complete local truth value assignment extends extend check equivalently complete unfortunately processes may require exponential time number possible ways appoint extension process number local truth value assignments verified process process respectively may exponential 
show csat adapted case 
return viewing course algorithm terms local models 
remarked earlier extending mc local assignment corresponds removing certain local models verify satisfies sure local model contained 
similarly checking extension complete respect consists verifying models removed satisfy 
non exponential start extending process checking satisfaction process completeness process surely executed polynomial time 
proposition may fact assured 
proposition bounded model property set formulas satisfiable multi context system ms iff satisfied chain contains br local models 
proof 
take consistent chain satisfies compliance br 
br br set bridge rules consequences satisfied br br premise satisfied local model br contained hand formula satisfied local model ci 
chain obtained eliminating local models br br br consistent satisfies compliance br contains br br local models 
non deterministic variant csat may take initial mc assignment 
corresponding chain components entire set local models mi li assignment br corresponds chain br contains br local models 
clearly component br contains br local models 
case process requires time br process guaranteed terminate br 
result non deterministic variant described terminates time br 
corresponding version csat consists constructing initial assignment br nondeterministically executing br times 
constructing br associated chain br merely involves non deterministic assignment truth values atomic propositions br br local models 
done time br br 
contextual satisfiability clearly subsumes classical satisfiability np hard cook 
putting things obtain theorem contextual satisfiability np complete 
satisfiability set formulas compliance set bridge rules br determined non deterministic polynomial time br br max br br related giunchiglia sebastiani considered step general decision procedures contextual satisfiability 
aim define sat decision procedures modal logics 
motivation highly associated possibility defining particular class multi context systems called hierarchical meta contexts instances equivalent various modal logics giunchiglia serafini :10.1.1.16.1418
resulting procedures proven orders magnitude faster previous tableau decision procedures 
csat seen generalization approach entire class multi context systems opposed particular class hierarchical meta contexts 
massacci introduced tableaux procedure determines satisfiability plc 
established nondeterministic time complexity length satisfied formula 
csat designed determine satisfiability mcs lms 
plc embedded mcs lms bouquet serafini csat may applied settle satisfiability plc 
doing attain complexity result theorem satisfiability formula plc computed non deterministic polynomial time 
formula plc 
construct multi context system mcs labeled formula satisfiable mcs iff satisfiable plc 
nesting pattern ist 
ist kn 
mcs contain context labeled sequence 
kn 
language context 
kn consist atomic propositions addition new atomic proposition formula form ist occurring 
equip mcs bridge rules kk ist ist kk ist ist kk ist ist ist kk ist 
kn refers context mcs language contains ist ist ist respectively 
example consider ist ist ist 
mcs consists contexts labeled empty sequence kh kj respectively 
language contains propositions ist ist ist lk contains propositions ist lkh 
bridge rules mcs stated 
proposition bouquet serafini satisfiable plc satisfiable mcs 
proof theorem 
proposition satisfiability problems plc transformed equivalent satisfiability problems mcs lms 
transformation established linear time 
bridge rule mcs involves proposition form ist 
proposition occurs bridge rules 
subformula form ist results proposition form ist language exactly context mcs 
number subformulas form ist bounded 
observations may conclude number bridge rules br mcs bounded 
construction number propositional atoms involved bridge rule mcs 
furthermore length cons br bridge rules correspond notions entering exiting contexts mccarthy buva correspond axiom introduced buva mason 
consequence bridge rule br br bounded 
implies maxi br 
theorem satisfiability mcs determined time br br max br br light observations reducible amir mcilraith defined forward backward propagation algorithms called mp bmp respectively compute satisfiability theory partitioned sub theories partitions 
tn 
partitions related overlap signatures respective languages called communication language partitions 
roughly speaking check satisfiability partitioned theory ti mp determines partial order ti iterating ti propagating logical consequences partition communication language consecutive partitions determines models ti glance strict analogy partitioned theories multi context systems 
partition seen context overlap partitions simulated bridge rules form communication language ti tj 
analogy breaks semantical level 
semantics partitioned theory seen projection global semantics local language ti 
way model combination model ti 
conversely chain associates context set local models 
considered set chunks global model 
words amir mcilraith approach ti represents partial theory world context represents epistemic belief state world 
analogy considering consistent point wise chains 
approaches compared subject hypothesis 
csat exhibits main improvements 
mp 
bridge rules allow express complex relations contexts partitions communication languages 
instance relate contexts bridge rule mp limited considering overlap pairs partitions 
furthermore bridge rules directional imply communication languages describe symmetric relations partitions 
csat general mp require partial order contexts 
naturally deals kind relational structure 
describes csat algorithm computes satisfiability propositional multi context systems 
representational computational point view csat improvement state art contextual modular reasoning systems 
brings worst case complexity bound contextual satisfiability nondeterministic earlier established 
representational perspective computes satisfiability set theories interacting bridge rules opposed set simply overlapping partial theories 
designing algorithm kept mind distributed peer peer implementation 
result csat modular global reasoning consists composing local reasoning procedures csat backtrack free solutions build confined incrementally imposing minimal restriction step 
features support natural implementation csat peer peer architecture peer performs local reasoning context propagates neighbor peers bridge rules 
modularity supports local reasoning backtrack freeness avoids infinite loops 
acknowledgments wish johan van benthem roberto sebastiani anonymous referees useful comments 
amir mcilraith 
partition logical reasoning 
principles knowledge representation reasoning kr 
amir mcilraith 
partition logical reasoning order propositional theories 
artificial intelligence 
accepted publication 
preprint available www cs berkeley edu eyal papers oo reason general aij pdf 
armando giunchiglia 
embedding complex decision procedures inside interactive theorem prover 
annals mathematics artificial intelligence 
bouquet serafini 
comparing formal theories context ai 
artificial intelligence 
accepted publication 
buva mason 
propositional logic context 
national conference artificial intelligence aaai 
cook 
complexity theorem proving procedures 
acm symposium theory computing 
agostino 
taming cut classical refutations analytic cut 
journal logic computation 
davis loveland 
machine program theorem proving 
journal acm 
ghidini giunchiglia 
local models semantics contextual reasoning locality compatibility 
artificial intelligence 
giunchiglia sebastiani 
sat decision procedure alc 
principles knowledge representation reasoning kr 
giunchiglia sebastiani 
building decision procedures modal logics propositional decision procedures case study modal 
journal information computation 
giunchiglia serafini 
multilanguage hierarchical logics modal logics 
artificial intelligence 
giunchiglia 
contextual reasoning 
xvi 
giunchiglia 
getfol interactive multicontext theorem proving 
workshop automated theorem proving ijcai 
guha 
contexts formalization applications 
ph dissertation stanford university 
massacci 
contextual reasoning np complete 
national conference artificial intelligence aaai 
mccarthy buva 
formalizing context expanded notes 
computing natural language volume csli lecture notes 

mccarthy 
generality artificial intelligence 
communications acm 
mccarthy 
notes formalizing context 
international joint conference artificial intelligence ijcai 
serafini giunchiglia 
ml systems proof theory contexts 
journal logic language information 
weyhrauch 
prolegomena theory mechanized formal reasoning 
artificial intelligence 
