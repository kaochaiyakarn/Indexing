semantic template designer web processes john miller verma amit sheth large scale distributed information systems lsdis lab computer science department university georgia athens ga uga edu jam verma amit cs uga edu growing popularity service oriented computing web services standards creating need paradigms represent design business processes 
significant done representation aspects regards 
design modeling business processes open issue 
novel designer business processes allows intuitive modeling web processes template approach semi automatically integrating partners design time deployment time 
done part meteor project concentrates adding semantics entire web process lifecycle 
keywords semantic web services web services business process execution language process designer 

businesses adopting web service technology expose business applications allowing business collaboration organization business partners outside organization 
increasing popularity web services new paradigm business processes gaining significant attention 
services offered various businesses interconnected complex business process workflow 
idea building types combined processes brought importance modeling business processes web service orchestration 
need build complex business process tools aid process developers building processes gaining importance 
providing ease process creation tools expected smarter sophisticated 
ws bpel web process designer tool meteor process designer 
meteor process designer offers gui design interface allow business process design 
key element web process partners process interacts 
currently partner selection process static naive partners selected ahead time developer manually connects uddi registry tries search services fit requirements 
approach guarantee partner resulting business process necessarily optimal 
secondly searches keyword process developer may aware similar services just differently named 
chances service may longer accessible process developer aware 
consider scenario process developer designing process execute purchase order 
process invoked purchase order request buyer specifying desired quantity items plans purchase 
followed querying supplier partner availability items 
desired quantity order item available inventory order placed supplier service 
successful completion order invoice generated purchase order returned caller process 
generally order fulfilled various suppliers 
static partner selection business process tied single supplier 
mean process developer write separate processes supplier wishes interact 
approach limits amount dynamic selection process developer achieve selecting supplier choose 
better approach dynamically select partner design phase process assume virtual supplier designing process perform partner discovery achieve optimal benefits 
approach process developer write single process act blue print may deploy multiple instances process selecting dynamic partner depending varying orders needs 
meteor process designer uses semantic template see partner discovery realize mentioned functionality 
tool process developer able semantically describe expects partner service defer partner selection process till design time deployment time 
meteor research project large scale distributed information systems lab university georgia effort developing system support development complete business processes lifecycle leverage semantics step development cycle 
meteor discussed detail section 
process designer part meteor project addresses issue dynamic discovery partners business processes 
rest organized follows section discusses different ways web processes modeled 
section stresses importance semantics web process composition 
design implementation meteor process designer discussed section section talks related 
sum section 
web processes different methodologies suggested web process creation 
systems sword shop rely ai planning creating processes high level goals 
automated composition web services described owl process models proposed 
systems provide complete automation systems typically limited academic environments 
tools created semi automatic composition web services 
far successful popular category designers gui designers details process language syntax user 
meteor designer fits gui designer category caveat uses semantic templates facilitate dynamic partner discovery 

semantics web services issues search discovery web services currently services searched names 
due words different meaning different contexts impossible search service provides desired operation just searching service name 
keyword search handle complexities checking matching services context service orchestration 
key consideration service orchestration check data mapping outputs inputs successive services 
problems solved service properties described interoperable manner 
semantic template rosettanet ontology considerable effort put apply semantic web methodology web services achieve mentioned goals 
attempt describe semantics web services ontology languages 
input output messages web service annotated concepts ontology describe mean 
similarly operations offered service annotated describe functionality 
annotations allow search service functionally return better results search service named 
ontology languages facilitates service properties machine processable 
tool mentioned data functional semantics dynamically search partners 
process developer specify requirements partner form semantic template 
template works requirement specification desired partners 
semantic template consists set operations inputs outputs 
operations input output messages annotated concepts ontologies 
typical semantic template shown 
architecture meteor process designer section discuss architecture implementation meteor process designer 
meteor mentioned earlier process designer constitutes part meteor project lsdis lab university georgia 
meteor managing operations project lsdis lab addresses issues related workflow process management large scale complex workflow process applications real world multi enterprise heterogeneous computing environments 
follow project called meteor endeavors define support complete lifecycle semantic web processes 
architectural overview meteor appendix 
key steps life cycle web process development deployment semantic web services publication discovery services composition constraint analysis meteor semantics phases :10.1.1.92.5099
addresses step process composition 
architecture meteor process designer follows model view controller mvc architecture 
mvc paradigm input handling modeling functional logic visual feedback state system decoupled handled separately 
view handles manages graphical output ui 
controller interprets user inputs acts link model view 
model manages behavior application logic 
meteor process designer consists main components ui layer view controller layer controller logic layer model physical layer data 
layered structure shown 
view controller model data access ui layer controller layer logic layer physical layer 
meteor semantic process designer architecture ui layer described earlier takes care reflecting current state process contained bpel element user 
logic layer represents memory model entire process 
ui layer reflects current state model classes user 
controller layer responsible handling editing bpel element properties chaining logic ui layer 
part uml diagram architecture shown 
physical layer semantic controller bpel main task module generate output form process file memory model parse process file existing process opened editing 
physical layer components get invoked loading existing process designer saving process design completion 
physical layer generates skeleton process wsdl web process 
ws bpel engine uses process wsdl expose operations process allow clients processes access process web service 
uml sample meteor process designer architecture logical layer logical layer forms core designer 
model classes layer responsible holding current state element business process process process developer works design process 
business element activity defined specification designed model class reflects structure properties outlined specification 
model classes grouped functionality 
groups summarized table 
group shares common behavior 
controller layer controller class designed model class needs ui 
controller class name suggests acts agent model ui presentation 
changes logical layer reflected ui help controller classes 
handles user input form creation deletion new process elements modifications done element properties 
table functional groups bpel elements definitions group namespace variables partners correlation sets structured activities group sequence switch pick flow links scope 
ui layer basic activities group invoke receive reply wait op assignment extensions special activities group correlation compensation handlers fault handlers transaction elements meteor process designer uses graphical editing framework gef part eclipse project design front gui designer 
gef follows model view controller architecture fits design system 
view objects ui layer give visual representation process state user 
views various elements color coded group belong refer table 
helps making process designer intuitive 

features working meteor process designer provides useful features aid process developers build ws bpel processes 
meteor process designer offers easy gui process developers rapidly build web processes 
processes developers offered support dragging dropping process elements process canvas 
combined ease element selection deletion offer simple gui 
selecting particular element opens property sheet allows user modify element properties 
approach helps hiding unnecessary syntax details developer 
meteor process designer uses color coded element icons better understanding process 
process developer quickly get idea element type just looking color icon 
container elements sequence flow nested depth process arbitrary complexity 
appendix shows process created meteor process designer 
seen gui easy comprehend easily process element contained element 

semantic selection process partner support capabilities dynamic partner selections meteor process designer semantic web services described section 
semantic selection process assumed semantically annotated services developed published web service developers 
web service designer annotates data operations web service publishing uddi registry 
meteor uses owl ontologies annotate operations offered web service parameters return types operations 
done wsdl development module meteor discussed detail 
selection process thought constituted phases 
template generation phase process developer specifies requirements partner terms semantic template 
second phase meteor process designer tries find matching partner semantic template specified 
sections discuss phases detail 
phase process developer generates semantic template simple gui 
developer add operations template specify input output messages operation 
entities annotated ontology concepts 
developer create new template choice load existing template 
phase comprises core searching mechanism dynamic partner discovery 
process designer generated selected semantic template particular partner trigger discovery process find matching partner 
meteor process designer extracts semantic information template passes discovery module 
discovery module performs semantic search returns results match template 
process developer choose particular service result set act partner particular process instance 
phase explained 
process developer discover partner service design time differ till deployment time 
provision allow runtime discovery discussed part section 

design time discovery vs deployment time discovery discussed earlier process developer choose discovery partner services design time may deployment time process 
advantages deployment time discovery level dynamism achieved greater compared design time discovery 
chances time process designed gets deployed services yield better match may available 
deployment time discovery look issue data mapping inputs outputs new partner process expects 
discussed details 

related approach model business processes easy process designer 
introduced approach dynamic partner search features semantic web 
section discusses related field 
searching web services approaches similarity searches proposed evaluated better conventional keyword search 
semantics achieving automation process web processes creation web service interactions proposed ontologies describe web service entities 
follows fully automated composition approach 
approaches process developer control exact steps web process 
meteor process designer uses semi automatic composition approach requires human intervention 
amount needed part developer case fully automated process design current business may comfortable approach 
businesses expect control entire process design 
meteor process designer process designer freedom write complete process design provide dynamism final granularity partner selection 
involves part process developer complete freedom entire process design 
area process designer dynamic selection different approaches model web processes proposed existing methodologies uml activity graph similar workflow languages 
bpel process uddi registry results semantic template wsdl process designer semantic publication discovery 
phase ii dynamic partner discovery 
search approach model web processes allows process designer take advantage advancement area semantic web designing web process 
approach proposes template searching mechanism allow dynamic searching business process partners design deployment time web process 
implemented model designer verify usefulness approach 
designer offers user friendly gui process developer construct business processes 
designer gives complete freedom process developer design structure web process plans design 
done part meteor project university georgia 
area involves support browsing web process wsdl searching uddi 
adding dynamic data mapping capabilities enhance deployment time binding proposed 
process designer adapted achieve run time discovery partner services 
done proxy services perform discovery invocation partner services 
mechanism hook designer bpel engine reflect real time feedback suggested value addition 
universal description discovery integration uddi www uddi org web services business process execution language www org committees tc home php wg abbrev meteor semantic web services processes lsdis cs uga edu projects meteor narayanan mcilraith simulation verification automated composition web services international world wide web conference may traverso pistore automated composition semantic web services executable processes third international semantic web conference iswc nov van der aalst ter hofstede 
yawl workflow language 
qut technical report fit tr queensland university technology brisbane rajasekaran miller verma sheth enhancing web services description discovery facilitate composition proceedings st international workshop semantic web services web process composition july meteor cardoso sheth quality service workflows web service processes journal web semantics nau cao lotem mu oz avila shop simple hierarchical ordered planner proceedings sixteenth international joint conference artificial intelligence pages gef graphical editing framework www eclipse org gef verma goodwin lee accommodating inter service dependencies web process flow composition aaai spring symposium series march berners lee hendler lassila semantic web scientific american may 
wsdl web service description language www org tr wsdl vassiliadis model driven dependability analysis web services international symposium distributed objects applications october fox sword developer toolkit web service composition eleventh world wide web conference www web engineering track honolulu hawaii may 
dogac exploiting semantic web services ebxml registries dong halevy madhavan zhang similarity search web services th vldb conference august september uml unified modeling language object management group www uml org paolucci sycara kawamura delivering semantic web services 
proceedings www verma sheth miller adding semantics web services standards st international conference web services june miller verma rajasekaran sheth wsdl proposal wsdl committee lsdis cs uga edu projects wsdl wsdl pdf aggarwal verma miller milnor constraint driven web service composition meteor proceedings ieee international conference services computing scc shanghai china september pp 

verma sheth patil miller meteor scalable infrastructure registries semantic publication discovery web services journal information technology management special issue universal global integration vol 
pp 

kluwer academic publishers 
aggarwal verma miller milnor dynamic web service composition meteor technical report lsdis lab computer science dept uga may 
sirin parsia hendler filtering selection semantic web services aaai spring symposium semantic web services 
miller sheth verma framework semantic web process composition international journal electronic commerce special issue semantic web services role enterprise application integration commerce vol 
winter pp 

sharpe model view controller mvc past heim ifi uio mvc pattern pdf owl semantic markup web services www daml org services owl owl html eclipse platform tool integration www eclipse org appendix 
snapshot bpel designer web process design progress 
