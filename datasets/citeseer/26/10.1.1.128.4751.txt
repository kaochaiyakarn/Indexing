index tcm ons nn ke cf sg sn ni hc bg pjs qn pjs ni 
el mo aist nara ac jp tcm ons nn nl ons nn zn nll ghs gk tcm ons nn index rds index tcm ons ons bb dg jk rj jl index ho zn jn dg tcm ons 
ons index indexing structure efficient subsequence matching databases yoshikawa graduate school information science nara institute science technology national institute informatics nara japan tokyo japan mo aist nara ac jp propose novel indexing structure index searching similar patterns large time 
index sequence line segments compactly approximates original data sequence 
line segment approximate subsequence original data sequence accumulated error threshold value 
scanning index quickly find approximate answers similarity queries 
important feature index approximate answers guaranteed include exact answers 
false dismissal 
experimental result shows index require storage area process similarity queries efficiently 
key words numerical time sequence subsequence matching indexing structure sequence linear segments currently low costs storage media allows vast quantities numerical time sequence data 
example finance science business cal data captured continuously meaningless time sequence databases generated 
technique retrieving similar sequences query sequence massive time 
instance stock price databases meteorological observation databases similarity essential predicting action stock market meteorological phenomenon similarity search numerical time sequences databases classified categories matching subsequence matching 
match ing length original sequences assumed query sequence 
length query sequence assumed smaller original sequences 
subsequences original sequences certain degree similarity query sequence 
re cent studies area focusing subsequence matching 
concentrate sub sequence matching confine discussion subsequence matching straightforward technique retrieving similar ranges original sequence query se quence sequential scanning seq scan 
seq scan searches sequence step step 
seq scan large time sequence databases inefficient reasons 
seq scan data loaded main memory 
large number disk accesses required 
seq scan requires long calculation time 
course seq scan inefficiency occurs match ing algorithm 
purpose solving problem indexing structures subsequence match ing proposed 
studies indexing methods data sequences canbe classified categories 
contains methods dimensionality reduction techniques methods consist levels 
level performing dimensionality reduction onthe data 
step copy generate subsequences size sliding window length reduce dimension copy 
second level spatial access method tree index copy transformed level 
dimensionality reduction techniques include dis crete fourier transform dft discrete wavelet transform dwt singular value decomposition svd 
dimensionality reduction techniques include paa index proposed orig inal data sequences divided segments equal length average segment 
methods drawbacks 
length query exceeds size window performance degrades sharply 

order cope long queries represent original data sequences faithfully need dimensionality vectors 
spatial access methods suffers known phenomenon called dimensional curse performance degrades number di increase 
conversely low dimensionality vectors avoid phenomenon vectors inaccurate representation original data sequences result ing loss filtering effect 

methods meth ods process queries length smaller window size 
second category contains methods sequential linear segments 
approximated sequences linear segments original sequence gen erated 
best authors knowledge literature reporting method 
allows false dismissal means method may correct answers propose index novel indexing method efficient subsequence matching 
index query sequence perform approximate similarity search 
index access original sequence find approximate answers faster seq scan access disk pages containing approximate answers method index guarantee produce false dismissal 
decrease number disk page accesses der hundreds compared seq scan 
rest organized follows 
sec tion define problem discussed 
section introduce method index 
insection demonstrate index show experimental result method outperforms past real synthetic data 
discuss previous works section 
section summarizes method outlines remaining problem index 
preliminaries premise distance measure numerical time sequence sequence short finite sequence real numbers hx 

call value xi sequence 
assume elements predetermined fixed sampling rate 
length sequence refers number sequence 
data sequence ho 
isa sequence stored database subject retrieval 
query sequence data sequence sequence assumed sampled rate query sequence data sequence denoted hq 
metrics proposed calculate distance sequences hx 
hy 

ln natural number metric defined follows ln xi yi ln metric widely distance measure search time sequence data 
especially called manhattan distance called distance 
research field subsequence matching distance main stream similarity measure 
best authors knowledge indexing method distance measure distance 
users may select tan distance similarity measure 
reason metric similarity measure method note ln metric unequal length sampling rate 
propose metrics :10.1.1.45.9798
applications numerical time se quences see differences shapes tendencies sequences values elements 
define distance measure sequences close similar shape differ absolute numerical values 
distance measure gives weight difference shape sequences translated versions sequences 
translation techniques gives weight tothe shape example way subtract mean element values element original se quence shifting way divide element variance element values normalizing shifting technique intend reflect absolute values mov ing distance measure shifted sequence mean element values subtracted original sequence 
formal definition follows 
definition shifted sequence shifted sequence sequence hx 
defined 
xk values sequence sequences length distance measure 
query results data sequence ho 
hq 
define range query nearest neighbor query follows 
definition range query ffl tol erance similarity 
answers range query defined set oi 
oi satisfy 
oi hq 
ffl original sequence sequence linear segments downward deviation time element value upward deviation illustration method build delta seals 
axis represent time represent real value bold lines line segments 
equation correspond approximated line segments respec tively 
definition nearest neighbor query nearest neighbor query defined closest subsequences 
oi query se quence distance measure index method transform data sequence delta seals delta bounded sequence approximated liner segments 
section de build delta seals sequence index file structure delta seals explain subsequence matching index 
guarantee false dismissals respect data sequence 
building delta seals index basic idea delta seals approximate sequence sequence linear segments 
numerous algorithms approximate data sequence lin ear segments available 
pavlidis horowitz pioneered field 
major question optimal number segments 
problem involve trade accuracy sequence linear segments clearly general solution 
authors propose approximate data sequence sequence linear segments automatically selects best value fork bottom merging process 
need adjust accuracy se quence linear segments search performance depend accuracy index system isto select optimal approximation accuracy 
satisfy needs apply squares method line segment delta seals 
linear segment longest possible linear segment error dose exceeds deviation bound delta illustrates method building delta seals 
line segment ends means accumulated error input data sequence ho 
real number delta output hhs 
delta seals 
set empty 

approximated linear seg ment squares method subsequence 
oj 
accumulated error terms ofthe subsequence oi 
greater delta 
append 

endif 

append 
return 
endif 

goto line algorithm building delta seals 
deviation greater delta exceeds delta extend line segment point shows algorithm building delta seals data sequence actual index delta seals additional information stored defined 
definition index file hh 
delta seals hh 
index file storing 
member li li bp start point si 
li slope intercept si 
li pa disk address points elementof data subsequence si approximates 
li deviation difference subtracting sum upward deviation si sum downward tion si 
describe downward deviation andthe upward deviation approximation second line segment 
represents sum deviation represents sum deviation 
note sum exceed deviation bound delta inequality holds delta explain usage deviation difference detail subsection 
index query slide approximated time subsequence matching tc example delta data se quence query sequence 
calculation approximate distance subsequence matching algorithm search forthe approximate answers sliding sequence approximated query om delta seals shown 
sizes index approximated query small approximate distance faster seq scan 
zoom represents shifted delta seals inthe range time time represents shifted delta seals query note average shifted sequences set 
explain method calculating approximate distance ex ample 
break sequence linear segments point corresponds start point 

generated 
interval 
assume thatthe equation linear segments respectively interval calculate distance follows addition assume time intersects tc calculate follows situation little difficult lines intersect 
show equation correct 
sume distance equation equiv calculate distance tx tx calculate approximate distance applying approach 
experimental result shows calculation method times seq scan 
guarantee false dismissals faloutsos noted indexing method false dismissals 
words distance index space satisfy 
lemma index space satisfies con dition indexing method time sequence matching produces false dismissals approximate methods include correct answers 
value space xf yf unfortunately approximate distance proposed satisfy lemma 
may yield false dismissals 
modify satisfy lemma 
call modified distance optimistic bound distance approximate answers approxi mate answers 
outline idea modifying approximate distance 
bound range poten tial approximation error deviation line segment 
call bounding value worst error deviation wed wed set mate actual distance original sequences 
relative position delta calculation wed classified cases 
definition loss generality assume slid points 
bethe normalized delta seals respectively 
assume length hh li 
li pii index resp defined time resp time 
define wed 
asfollows 
situations intersect seg ment 
situations start point jis greater equal time andthe point equal time 
case greater equal segment wed wed 
case equal segment wed wed 
situations start point jis time point jis greater time 
case greater equal segment wed wed delta 
case equal segment wed wed delta 
situations intersects seg ment 
case wed caused wed delta represent cases 
line segment range falls case intersect 
approximation data sequence cause upward deviations total deviations total 
case sum upward deviations increase actual distance sum downward tions decrease actual distance 
value wed 
segment li range falls 
set value wed sim ilar reasoning case 
thirdly line segment li falls case 
case cated cases 
actual distance 
assume worst situation transformation approximation distance 
worst situation downward deviations li occur range inthis worst situation sum upward deviations increase actual distance 
value wed 
likewise case value wed 
lastly line segment li li example sequences line segments cf 
li range falls case 
optimal value wed case know distribution upward downward deviations 
set wed delta method add approximate distance wed position linear seg ment ends 
assure actual distance 
implies optimistic bound distance satisfies lemma 
accordingly ing index guarantee produce false dismissal 
pessimistic bound distance larger similarity tolerance user give sub sequence matching system correct answers system return 
number answers indexing methods increases 
ordinarily approximate answers re fined post process seq scan 
accordingly indexing method retrieving performance come closer seq scan similarity tolerance increases 
overcome problem modified distance larger actual distance 
call distance pbd call approximate pbd approximate answers 
contrary index space satisfies condition value space xf yf indexing method time sequence matching pro duces false alarms mistake incorrect answers correct answers 
bd approximate include incorrect answers 
consequence bd approximate answers included correct answers 
answers need refinement 
way calculate bd similar 
wed lemma subtract approxi mate distance appropriate wed derived rela tivity linear segment position linear segment ends 
modification en sure bd exceeds actual distance situation value similarity tolerance ffl large calculate bd reduce burden post process reduce total cost 
subsequence matching index processes similarity searches ing index search process searches approximate answers post process re fines approximate answers find correct answers 
outline step 
search process transform query sequence normalized delta seals 
load index main memory search bd approximate bd approximate answers correct 
post process accessing disk address approximate answers bd refer false alarm comparing approximate answers generate 
performance evaluation experimental setup implemented index evaluated perfor mance concerning space utilization computational cost compared seq scan 
random generated follows xt xt zt xt xt zt oe xt xt xt xt zt xt xt zt oe zi random value range represents value selected withthe probability 
normalized dataset called normal ized version dataset 
size dataset approximately mb 
constructed indexes varying deviation bounds delta 
query sequences generated selecting subsequences lengths random 
result similarity search contain result query subsequence 
experiments performed sun ultra enterprise running gb physical memory gb secondary storage 
compression ratio delta deviation bound index size vs deviation bound delta note results nearest query space limitations 
claim method outperformed seq scan condi tion experiment range query 
index size observed sizes indexes varying tion bounds delta 
gives compression ratio 
compression ratio calculated 
compression ratio size size original data note elements dataset indexes assumed float type 
shows thatthe size index decreased delta grew 
particular compression ratio delta delta 
indexes corresponding delta useless close original data 
indexes delta 
choosing appropriate deviation bound selecting appropriate deviation bound delta agiven dataset essential order achieve effective query processing 
difficult task cause delta depends characteristics datasets query data 
delta dependent 
assumption characteristics datasets queries consequently adopt strategy efficient query retrieval pick query lengths compute delta suitable queries construct indexes respect delta query select index constructed appropriate delta experiment indexes delta 
way 
cpu time figures depict cpu time range lengths 
axis represents similarity tolerance ffl axis shows ts tl left represents relative query query points points query points normalized cpu time delta vs similarity tolerance ffl cpu cost deviation bound delta right ts tl equation 
ts tl total cpu time seq cpu time index ts tl represents index seq scan 
broken lines square pointers represent ts tl bold represent value delta note appropriate delta selected query length simi larity tolerance ffl described 
seq scan distance calculation soon square distance exceed ffl experimental result answers returned system seq scan consistent system produce false dismissal 
figures see index forms seq scan performance relatively improved grow 
experimental results method suitable longer queries owing fact performance dimensionality reduction worse query length gets longer window size 
related previous works indexing structures forthe subsequence matching exist euclidean distance 
discuss indexing structure reduction methods 
consider st index alternative sequence linear segments 
dimensionality reduction method dimensionality reduction method agrawal method covers matching 
generate indexing struc ture index dft reduce dimensional ity dimensions vector 
vectors organized tree 
query sequence retrieve points distance ffl query vector spatial access method call retrieved points index space approximate approximate answers include points correct answers 
discard answers false alarm seq scan 
faloutsos extended index subse quence matching proposed novel indexing structure st index 
technique index subsequence matching 
authors slide window data copy sequences window size 
reduce dimensionality copy sequences dimensions vectors 
trail dimensions vectors formed 
trail sub trails represented minimum bounding rectangle tree keogh proposed dimensionality reduction approach paa 
authors copy sequences original sequence technique 
divide copy sequence segments calculate segment generate organize index 
data representation sequence segments zdonik recognize original data sequence liner segments greatly reduces required storage search space se quence databases 
authors propose indexing method 
keogh pro posed novel indexing structure stb index sequence liner segments approximate nal data 
asserted stb index enables subsequence matching efficient works dealing distance measures indexing structures 
authors proposed novel distance measure indexing structure case target sequence different sampling rates different length 
authors de fined similarity measure scaling transformation method factors sequences efficiently 
take studies detail differs works basic premise 
proposed novel indexing structure index efficient subsequence matching large numerical time series data 
index consists linear seg ments approximations separated data subsequences perform efficient similarity search advantages method performance better orders magnitude seq scan lows queries arbitrary length process efficiently performance conventional meth ods degrades sharply length queries exceeds window size storage requirement original dataset produces false dismissals linear representation meth ods 
includes development methods computing deviation bound delta theo background performance improvements 
planning combine pruning method 
acknowledgment partially supported ministry culture sports science technology japan 
agrawal psaila wimmers zait querying shapes histories proc 
vldb pp 

agrawal faloutsos swami search sequence database proc 
fodo 
beckmann 
kriegel schneider andb seeger tree efficient robust access method points rectangle proc 
sig mod pp 

berndt clifford finding pattern timeseries dynamic programing approach advances knowledge discovery data mining pp 
chan fu efficient time series wavelets proc 
icde pp 

chu wong fast time scaling shifting proc 
pods pp 

aggarwal wolf yu similarity indexing market basket data proc 
sigmod pp 

das lin mannila andp 
smyth rule discovery time series proc 
kdd pp 

faloutsos ranganathan los fast subsequence matching time series database proc 
sigmod pp 

guttman tree dynamic index spatial searching proc 
sigmod pp 
zdonik approximate queries large data sequence proc 
icde pp 

agrawal singh dimen reduction similarity searching dynamic databases proc 
sigmod pp 

keogh pazzani simple dimen reduction technique fast similarity search large time series database proc 
pp 

keogh pazzani dimensionality re duction fast similarity search large time series databases knowledge information sys tems journal 
keogh pazzani scaling dy namic time warping massive dataset proc 
pkdd pp 

keogh pazzani fast similarity search large time series databases proc 
ssdbm pp 

keogh smyth probabilistic ap proach fast pattern matching time series databases proc 
third conference knowl edge discovery databases data mining pp 

horowitz segmentation ieee transactions computers vol 

rafiei similarity queries timeseries data proc 
icde pp 

sakurai yoshikawa ko tree index structure highdimensional spaces relative approxima tion proc 
vldb pp 

park chu yoon hsu effi cient searches similar subsequences different lengths sequence databases proc 
icde pp 


yi jagadish faloutsos ef ficient retrieval similar time sequences time warping proc 
icde pp 

