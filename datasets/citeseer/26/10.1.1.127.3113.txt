ieee transactions knowledge data engineering vol 
november mining sequential patterns pattern growth prefixspan approach jian pei member ieee computer society jiawei han senior member ieee asl wang helen pinto chen dayal member ieee computer society mei chun hsu sequential pattern mining important data mining problem broad applications 
difficult problem mining may generate examine combinatorially explosive number intermediate subsequences 
previously developed sequential pattern mining methods gsp explore candidate generation test approach reduce number candidates examined 
approach may efficient mining large sequence databases having numerous patterns long patterns 
propose projection sequential pattern growth approach efficient mining sequential patterns 
approach sequence database recursively projected set smaller projected databases sequential patterns grown projected database exploring locally frequent fragments 
initial study pattern growth sequential pattern mining freespan propose efficient method called psp offers ordered growth reduced projected databases 
improve performance technique developed prefixspan 
comprehensive performance study shows prefixspan cases outperforms priori algorithm gsp freespan spade sequential pattern mining algorithm adopts vertical data format prefixspan integrated fastest tested algorithms 
furthermore mining methodology extended mining sequential patterns user specified constraints 
high promise pattern growth approach may lead extension efficient mining kinds frequent patterns frequent substructures 
index terms data mining algorithm sequential pattern frequent pattern transaction database sequence database scalability performance analysis 
sequential pattern mining discovers frequent subsequences patterns sequence database important data mining problem broad applications including analysis customer purchase patterns web access patterns analysis sequencing processes scientific experiments natural disasters disease treatments analysis dna sequences sequential pattern mining problem introduced agrawal srikant set sequences sequence consists list elements element consists set items user specified min support threshold sequential pattern mining find frequent subsequences subsequences occurrence frequency set sequences min support 
pei school computing science simon fraser university canada 
mail cse sfu edu 
han department computer science university illinois urbana champaign urbana il 
mail cs uiuc edu 
wang university minnesota minneapolis mn 
mail cs umn edu 
asl pinto school computing science simon fraser university canada 
mail cs sfu ca 
chen san mateo ca 
mail com 
dayal hewlett packard labs page mill road palo alto ca 
mail dayal hpl hp com 

hsu commerce san francisco ca 
mail hsu com 
manuscript received feb revised july accepted oct 
information obtaining reprints article please send mail tkde computer org ieeecs log number 
previous studies contributed efficient mining sequential patterns frequent patterns time related data 
srikant agrawal generalized definition sequential patterns include time constraints sliding time window user defined taxonomy priori improved algorithm gsp generalized sequential patterns 
mannila problem mining frequent episodes sequence events episodes essentially acyclic graphs events edges specify temporal precedent subsequent relationship restriction interval 
bettini considered generalization association rules 
essentially rules left hand right hand sides episodes time interval restrictions 
lu proposed association rules implication rules sides totally ordered episodes timing interval restrictions 
guha proposed regular expressions flexible constraint specification tool enables user controlled focus incorporated sequential pattern mining process 
studies extended scope mining sequential patterns mining partial periodic patterns 
introduced cyclic association rules essentially partial periodic patterns perfect periodicity sense pattern cycle percent confidence 
han developed frequent pattern mining method mining partial periodicity patterns ieee published ieee computer society pei mining sequential patterns pattern growth prefixspan approach frequent maximal patterns pattern appears fixed period fixed set offsets sufficient support 
proposed methods mining sequential patterns time related frequent patterns priori priori principle states fact super pattern infrequent pattern frequent candidate generation paradigm proposed association mining 
typical priori sequential pattern mining method gsp adopts multiple pass candidate generation test approach outlined follows scan finds frequent items form set single item frequent sequences 
subsequent pass starts seed set sequential patterns set sequential patterns previous pass 
seed set generate new potential patterns called candidate sequences priori principle 
candidate sequence contains item seed sequential pattern element pattern may contain item multiple items 
number items sequence called length sequence 
candidate sequences pass length 
scan database pass finds support candidate sequence 
candidates support min support database form set newly sequential patterns 
set seed set pass 
algorithm terminates new sequential pattern pass candidate sequence generated 
priori sequential pattern mining method reducing search space bears nontrivial inherent costs independent detailed implementation techniques 
huge set candidate sequences generated large sequence database 
set candidate sequences includes possible permutations elements repetition items sequence priori method may generate really large set candidate sequences moderate seed set 
example frequent sequences length hai hbi generate candidate sequences length ab ab represents events happen time slot 
frequent sequences length ha ha ha priori algorithm generate candidate sequences 
notice cost candidate sequence generation test support counting inherent priori method matter technique applied optimize detailed implementation 
multiple scans databases mining 
length candidate sequence grows database scan 
general find sequential pattern length priori method scan database times 
bears nontrivial cost long patterns exist 
priori method generates combinatorially explosive number candidates mining long sequential patterns 
long sequential pattern contains combinatorial explosive number subsequences subsequences generated tested priori mining 
number candidate sequences exponential length sequential patterns mined 
example database contain single sequence length ha min support threshold occurring pattern frequent 
re derive length sequential pattern priori method generate length candidate sequences ha ha ha length candidate sequences length candi date sequences 
obviously total number candidate sequences generated applications dna analysis stock sequence analysis databases contain large number sequential patterns patterns long 
important reexamine sequential pattern mining problem explore efficient scalable methods 
observation thrust bottleneck priori sequential pattern mining method come step wise candidate sequence generation test 
develop method may absorb spirit priori avoid substantially reduce expensive candidate generation test 
motivation study 
systematically explore pattern growth approach efficient mining sequential patterns large sequence database 
approach adopts divide andconquer pattern growth principle follows sequence databases recursively projected set smaller projected databases current sequential pattern sequential patterns grown projected databases exploring locally frequent fragments 
philosophy proposed straightforward pattern growth method freespan frequent pattern projected sequential pattern mining reduces efforts candidate subsequence generation 
introduce efficient method called prefixspan prefix projected sequential pattern mining offers ordered growth reduced projected databases 
improve performance technique developed prefixspan 
comprehensive performance study shows prefixspan cases outperforms priori algorithm gsp freespan spade sequential pattern mining algorithm adopts vertical data format prefixspan integrated fastest tested algorithms 
furthermore experiments show prefixspan consumes smaller memory space 
notice priori cut substantial amount search space 
number length candidate sequences 
ieee transactions knowledge data engineering vol 
november table sequence database comparison gsp spade 
pattern growth methodology extended mining multilevel multidimensional sequential patterns mining structured patterns 
remainder organized follows section sequential pattern mining problem defined priori sequential pattern mining method gsp illustrated 
section approach sequential pattern growth introduced summarizing freespan presenting prefixspan associated technique performance improvement 
experimental results performance analysis reported section 
extensions method research issues discussed section study concluded section 
problem definition gsp algorithm section problem sequential pattern mining defined representative priori sequential pattern mining method gsp illustrated example 
problem definition fi ing set items 
subset items 
sequence ordered list itemsets 
sequence denoted hs sli sj itemset 
sj called element sequence denoted xm xk item 
brevity brackets omitted element item element written item occur element sequence occur multiple times different elements sequence 
number instances items sequence called length sequence 
sequence length called sequence 
sequence ha ani called subsequence sequence hb bmi supersequence denoted exist integers jn bj bj sequence database set tuples si sid sequence id sequence 
tuple si said contain sequence subsequence support sequence sequence database number tuples database containing supports sij si denoted support sequence database clear context 
positive integer min support support threshold sequence called sequential pattern sequence database supports min support 
sequential pattern length called pattern 
example running example 
running sequence database table min support 
set items database fa gg 
sequence ha abc ac cf elements abc ac cf items appear respectively different elements 
sequence instances appearing sequence 
item happens times sequence contributes length sequence 
sequence ha abc ac cf contributes support hai 
sequence ha bc dfi subsequence ha abc ac cf sequences contain subsequence ab ci sequential pattern length pattern 
problem statement 
sequence database min support threshold sequential pattern mining find complete set sequential patterns database 
algorithm gsp outlined section typical sequential pattern mining method gsp mines sequential patterns adopting candidate subsequence generation test approach priori principle 
method illustrated example example gsp 
database min support example gsp scans collects support item finds set frequent items frequent length subsequences form item support hai hbi hci hdi hei hfi 
filtering infrequent item obtain seed set hbi hci hdi hei member set representing element sequential pattern 
subsequent pass starts seed set previous pass uses generate new potential sequential patterns called candidate sequences 
set length sequential patterns generates set candidate sequences hffi ab ac ef ig multiscan mining process shown fig 

set candidates generated self join sequential patterns previous pass 
kth pass sequence candidate length subsequences sequential pattern th pass 
new scan database collects support candidate sequence finds new set sequential patterns 
set seed pass 
algorithm terminates sequential pattern pass candidate sequence generated 
clearly number scans maximum length sequential patterns 
needs scan sequential patterns obtained scan generate new candidates 
pei mining sequential patterns pattern growth prefixspan approach fig 

candidates sequential patterns gsp 
gsp benefits priori pruning generates large number candidates 
example length sequential patterns generate length candidates length sequential patterns generate length candidates candidates generated gsp may appear database 
example length candidates appear database 
mining sequential patterns pattern growth analyzed section example gsp algorithm shares similar strengths weaknesses priori method 
frequent pattern mining frequent pattern growth method called fp growth developed efficient mining frequent patterns candidate generation 
method uses data structure called fp tree store compressed frequent patterns transaction database recursively mines projected conditional fp trees achieve high performance 
mine sequential patterns extension fp tree structure 
unfortunately answer optimistic easy explore sharing set unordered items difficult explore sharing common data structures set ordered items 
example set frequent itemsets share tree branch fp tree 
set sequences common prefix subtree structure shared change order items form sharable prefix subsequences 
explore spirit fp growth divide sequential patterns mined subsequences obtained far project sequence database partition patterns 
methodology called sequential pattern mining 
general idea outlined follows repeatedly scanning entire database generating testing large sets candidate sequences recursively project sequence database set smaller databases associated set patterns mined far mine locally frequent patterns projected database 
section outline projection sequential pattern mining method called freespan systematically introduce improved method prefixspan 
methods generate projected databases differ criteria database projection freespan creates projected databases current set frequent patterns particular ordering growth direction prefixspan projects databases growing frequent prefixes 
study shows freespan prefixspan efficient scalable prefixspan substantially faster freespan sequence databases 
freespan frequent pattern projected sequential pattern mining sequence hs sli itemset sl called projected itemset 
freespan property itemset infrequent sequence projected itemset superset sequential pattern 
freespan mines sequential patterns partitioning search space projecting sequence recursively projected itemsets 
list hx list frequent items sequence database complete set sequential patterns divided disjoint subsets set sequential patterns containing item containing item item fx xng 
general ith subset set sequential patterns containing item xi item fxi xng 
database projection performed follows time deriving projected database db set frequent items db known 
items need projected projected database 
effectively discards irrelevant information keeps size projected database ieee transactions knowledge data engineering vol 
november minimal 
recursively doing mine projected databases generate complete set sequential patterns partition duplication 
details illustrated example example freespan 
database min support example freespan scans collects support item finds set frequent items 
step similar gsp 
frequent items listed support descending order form item support list 
form length sequential patterns hai hbi hci hdi hei hfi list complete set sequential patterns divided disjoint subsets 
ones containing item 
ones containing item item list 
ones containing item item list 
ones containing item sequential patterns related partitioned subsets mined constructing projected databases obtained additional scan original database 
infrequent items example removed projected databases 
process mining projected database detailed follows mining sequential patterns containing item mining hai projected database hai additional sequential pattern containing item 
mining sequential patterns containing item item list 
mining database fha ab ai ab bi additional sequential patterns containing item item list 
ab 
mining sequential patterns containing item item list 
mining hci projected database fha abc ac ci hac bc ai ab proceeds follows scan projected database generates set length frequent sequences bc 
additional scan hci projected database generates projected databases 
mining projected database fha abc ac ci hac bc ai ab generates set length patterns follows ab ci projected database generated 
mining projected database bc ai ab generates length pattern 
mining line terminates 
similarly show mining projected databases terminates generating length patterns projected database 
mining subsets sequential patterns 
subsets sequential patterns mined similarly corresponding projected databases 
mining process proceeds recursively derives complete set sequential patterns 
detailed presentation freespan algorithm proof completeness correctness performance study algorithm 
analysis example observations strength weakness freespan verified experimental study 
hand strength freespan searches smaller projected database gsp subsequent database projection 
freespan projects large sequence database recursively set small projected sequence databases currently mined frequent item patterns subsequent mining confined projected database relevant smaller set candidates 
hand major overhead freespan may generate nontrivial projected databases 
pattern appears sequence database projected database shrink removal infrequent items 
example ffg projected database example contains sequences original sequence database removal infrequent item sequence 
length subsequence may grow position search length candidate sequence need check possible combination costly 
prefixspan prefix projected sequential patterns mining analysis freespan algorithm see may pay high cost handling projected databases 
possible reduce size projected database cost checking possible position potential candidate sequence 
avoid checking possible combination potential candidate sequence fix order items element 
items element sequence listed order loss generality assume listed alphabetically 
example sequence sequence id running example listed ha abc ac cf ha bac ca fc convention expression sequence unique 
examine fix order item projection generation projected database 
intuitively follows order prefix sequence projects suffix sequence examine orderly manner possible subsequences associated projected database 
introduce concept prefix suffix 
definition prefix 
suppose items element listed alphabetically 
sequence eni ei corresponds frequent element pei mining sequential patterns pattern growth prefixspan approach sequence mi called prefix ei em frequent items em alphabetically example hai ha ab ha abc prefixes sequence ha abc ac cf ha bc considered prefix item prefix ha abc sequence frequent definition suffix 
sequence eni ei corresponds frequent element 
em mi prefix sequence mem eni called suffix regards prefix denoted em denote note subsequence suffix regards empty 
example sequence ha abc ac cf abc ac cf suffix regards prefix hai bc ac cf suffix regards prefix ac cf suffix regards prefix ha ab concepts prefix suffix problem mining sequential patterns decomposed set subproblems shown 
lemma problem partitioning 

fhx hx complete set length sequential patterns sequence database complete set sequential patterns divided disjoint subsets 
ith subset set sequential patterns prefix 

length sequential pattern mg set length sequential patterns prefix complete set sequential patterns prefix divided disjoint subsets 
jth subset set sequential patterns prefixed proof 
show correctness second half lemma 
half special case hi 
sequential pattern prefix length length prefix sequential pattern priori heuristic 
furthermore length prefix prefix definition prefix 
exists length prefix jth subset 
hand length prefix sequence unique belongs determined subset 
subsets disjoint 
lemma 
tu lemma problem partitioned recursively 
subset sequential patterns divided necessary 
forms divide andconquer framework 
mine subsets sequential patterns corresponding projected databases constructed 
em 
empty suffix denoted items eni 
definition projected database 
sequential pattern sequence database projected database denoted sj collection suffixes sequences regards prefix collect counts projected databases definition definition support count projected database 
sequential pattern sequence database sequence prefix support count projected database sj denoted number sequences sj lemma regarding projected databases 
lemma projected database 
sequential patterns sequence database prefix 
sj sj 
sequence prefix supports 
size projected database exceed proof sketch 
part lemma follows fact sequence suffix regards equals sequence resulted doing projection regards doing projection regards second part lemma states collect support count sequence sequences database sharing prefix considered 
furthermore suffixes prefix super sequence counted 
claim follows related definitions 
third part lemma size projected database 
obviously projected database number sequences appears sequence sequences super sequences appear projected database 
projected database contain sequences sequence super sequence appears projected database prefix subsequence appears projected database 
size projected database exceed tu examine prefix projection approach mining sequential patterns running example 
example prefixspan 
sequence database table min sup sequential patterns mined prefix projection method steps 
find length sequential patterns 
scan find frequent items sequences 
frequent items length sequential pattern 
hai hbi hci hdi hei hfi notation count represents pattern associated support count 
ieee transactions knowledge data engineering vol 
november 
divide search space 
complete set sequential patterns partitioned subsets prefixes ones prefix hai ones prefix hbi ones prefix hfi 

find subsets sequential patterns 
subsets sequential patterns mined constructing corresponding set projected databases mining recursively 
projected databases sequential patterns listed table mining process explained follows find sequential patterns prefix hai 
sequences containing hai collected 
sequence containing hai subsequence prefixed occurrence hai considered 
example sequence ef ab df subsequence df considered mining sequential patterns prefixed hai 
notice means element prefix form element 
sequences containing hai projected regards hai form database consists suffix sequences abc ac cf bc ae df 
scanning hai projected database locally frequent items 
length sequential patterns prefixed hai ab 
recursively sequential patterns prefix hai partitioned subsets prefixed 
table projected databases sequential patterns subsets mined constructing respective projected databases mining recursively follows projected database consists nonempty suffix subsequences prefixed fh bc ac cf fh ig 
hope generate frequent subsequence projected database processing database terminates 
ii 
projected database consists suffix sequences ac cf ai hci 
recursively mining projected database returns sequential patterns ai hai hci ha bc ha bc ai 
form complete set sequential patterns prefixed 
iii 
ab projected database contains sequences ac cf df leads finding sequential patterns prefixed ab hci hdi hfi 
iv 
projected databases constructed recursively mined similarly 
sequential patterns shown table 
find sequential patterns prefix hbi hci hdi hei hfi respectively 
done constructing hbi hci hdi hei hfi projected databases mining respectively 
projected databases sequential patterns shown table 
set sequential patterns collection patterns recursive mining process 
verify returns exactly set sequential patterns gsp freespan 
pei mining sequential patterns pattern growth prefixspan approach discussion algorithm prefix span follows algorithm prefixspan prefix projected sequential pattern mining 
input sequence database minimum support threshold min support 
output complete set sequential patterns method call hi 
subroutine sj parameters sequential pattern length sj projected database hi sequence database method 
scan sj find frequent item assembled element form sequential pattern hbi appended form sequential pattern 

frequent item append form sequential pattern output 
construct projected database sj call prefixspan sj 
analysis 
correctness completeness algorithm justified lemma lemma shown theorem 
analyze efficiency algorithm follows candidate sequence needs generated prefixspan 
priori algorithms prefix span grows longer sequential patterns shorter frequent ones 
generates tests candidate sequence nonexistent projected database 
comparing gsp generates tests substantial number candidate sequences prefixspan searches smaller space 
projected databases keep shrinking 
indicated lemma projected database smaller original suffix subsequences frequent prefix projected projected database 
practice shrinking factors significant usually small set sequential patterns grow quite long sequence database number sequences projected database usually reduces substantially prefix grows projection takes suffix portion respect prefix 
notice freespan employs idea projected databases 
projection takes string just suffix shrinking factor prefixspan 
major cost prefixspan construction projected databases 
worst case prefixspan constructs projected database sequential pattern 
exist number sequential patterns cost nontrivial 
techniques reducing number projected databases discussed subsection 
theorem prefixspan 
sequence prefixspan says 
sequential pattern proof sketch direction 
length sequence identified sequential pattern prefixspan sequential pattern projected database length prefix ifl length prefix projected database 
sequential pattern lemma sj exactly projected database supports 
sequential pattern sj sequential pattern show sequence pattern prefixspan says 
sequential direction 
lemma guarantees prefixspan identifies complete set sequential patterns theorem 
tu analysis shows major cost prefixspan database projection forming projected databases recursively 
usually large number projected databases generated sequential pattern mining 
number size projected databases reduced performance sequential pattern mining improved 
technique may reduce number size projected databases 
idea outlined follows performing physical projection register index identifier corresponding sequence starting position projected suffix sequence 
physical projection sequence replaced registering sequence identifier projected position index point 
reduces cost projection substantially projected database fit main memory 
method observation sequence projection represented corresponding projection position index point copying suffix projected subsequence 
consider sequence ha abc ac cf physical projections may lead repeated copying different suffixes sequence 
index position pointer may save physical projection suffix save space time generating numerous physical projected databases 
example 
sequence database table min sup sequential patterns mined method follows suppose sequence database table held main memory 
constructing hai projected database represent projected suffix sequences pointer sequence id offset 
example projection sequence ha abc ae cf regard hai projection consists pieces information pointer ieee transactions knowledge data engineering vol 
november table sequence database databases string id offset single integer single projection point set integers multiple projection points 
offset indicates position projection starts sequence 
projected databases prefixes hai hbi hci hdi hfi shown table indicates prefix occurrence current sequence projected suffix empty indicates occurrence prefix corresponding sequence 
table see database usually takes space corresponding physically projected 
avoids physically copying suffixes 
efficient terms running time space 
may efficient disk accessing random access disk space costly 
observation suggested approach original sequence database projected databases big fit main memory physical projection applied execution swapped projected databases fit main memory 
methodology adopted prefixspan implementation 
notice works efficiently prefixspan freespan 
prefixspan offset position clearly identifies suffix projected subsequence 
freespan step pattern growth forward backward directions needs register information possible extension positions order identify remainder projected subsequences 
explore technique prefixspan 
experimental results performance analysis gsp spade influential sequential pattern mining algorithms conduct extensive performance study compare prefixspan 
section report experimental results performance prefixspan comparison gsp spade indepth analysis prefixspan outperforms algorithms 
experimental results evaluate effectiveness efficiency prefixspan algorithm performed extensive performance study algorithms prefixspan freespan gsp spade real synthetic data sets various kinds sizes data distributions 
experiments conducted mhz amd pc megabytes main memory running microsoft windows server 
algorithms gsp freespan prefixspan implemented microsoft visual 
implementation fourth algorithm spade obtained directly author algorithm 
detailed algorithm implementation described follows 
gsp 
gsp algorithm implemented description 

spade 
spade tested implementation provided algorithm inventor 

freespan 
freespan implemented algorithm described 

prefixspan 
prefixspan implemented described turned cases 
case testing role options adopted function turned turned 
data sets performance study kinds data sets real data set group synthetic data sets 
real data set obtained gazelle data set blue martini 
data set kdd cup contains total customers web click stream data provided blue martini software 
customer may sessions web click stream session multiple page views 
session associated starting date time customer sort sessions click stream sequence page views viewing date time 
data set contains sequences customers sessions transactions events page views 
note previous version prefixspan algorithm published introduces optimization technique called bilevel projection performs physical database projection levels 
substantial performance study role bilevel projection performance improvement marginal certain cases barely offset overhead cases 
technique dropped prefixspan options performance study 
pei mining sequential patterns pattern growth prefixspan approach fig 

distribution frequent sequences data set 
products items 
total distinct page views 
detailed information data set 
synthetic data sets large set synthetic sequence data generated data generator similar spirit ibm data generator designed testing sequential pattern mining algorithms 
various kinds sizes data distributions data sets generated tested performance study 
convention data sets follows means data set contains customers sequences number items 
average number items transaction event average number transactions sequence 
average frequent sequential pattern consists transactions transaction composed items 
experiments fair algorithms synthetic test data sets similar performance study 
additional data sets scalability study testing algorithm behavior varied low support thresholds 
test algorithms data set contains customers sequences number items 
average number items transaction event average number transactions sequence set 
average frequent sequential pattern consists transactions transaction composed items 
fig 
shows distribution frequent sequences data set see min support percent length frequent sequences short maximum number frequent patterns total 
fig 
shows processing time algorithms different support thresholds 
processing times sorted time ascending order prefixspan spade freespan gsp 
min support prefixspan runtime seconds orders magnitude faster gsp runtime seconds 
min support reduced percent data set contains large number frequent sequences prefixspan takes seconds times faster fig 

performance algorithms data set 
spade seconds gsp terminates machine 
second test performed data set larger contains customers sequences number items 
sparser data set average number items transaction event average number transactions sequence 
average frequent sequential pattern consists transactions transaction composed items 
fig 
shows distribution frequent sequences data set see number longer frequent sequences smaller shorter ones min support 
fig 
shows processing time algorithms different support thresholds 
processing time maintains order prefixspan spade freespan gsp min support small 
min support percent gsp spade freespan similar running time prefixspan times faster 
fig 

distribution frequent sequences data set 
ieee transactions knowledge data engineering vol 
november fig 

performance algorithms data set 
third test performed data set substantially denser second data set contains customers sequences number items 
average number items transaction event average number transactions sequence average frequent sequential pattern consists transactions transaction composed items 
fig 
shows distribution frequent sequences data set see number longer frequent sequences grows nontrivial range 
fig 
shows processing time algorithms different support thresholds 
testing result clear distinction algorithms tested 
shows ordering algorithms running time prefixspan spade freespan gsp spade slightly faster prefixspan min support 
min support percent number frequent sequences grows case prefixspan run running time seconds fig 

distribution frequent sequences data set 
fig 

performance algorithms data set 
algorithms finish shown 
performance study real data set gazelle reported follows fig 
shows distribution frequent sequences gazelle data set different support thresholds 
see data set sparse data set support threshold lower percent long frequent sequences 
fig 
shows performance comparison algorithms gazelle data set 
fig 
see prefixspan efficient spade freespan gsp 
spade algorithm faster freespan gsp support threshold percent support threshold greater percent running 
figs 
show results scalability tests algorithms data set database size growing sequences different min support threshold settings 
min support percent algorithms terminate seconds database sequences prefixspan best performance gsp marginally better database size sequences 
fig 

distribution frequent sequences data set gazelle 
pei mining sequential patterns pattern growth prefixspan approach fig 

performance algorithms data set gazelle 
min support drops percent prefixspan clear competitive edge 
database sequences prefixspan times faster gsp spade terminate 
test effectiveness performance test conducted compare algorithms 
prefixspan function turned 
prefixspan turned 
spade 
test data data set experiment fig 

min support threshold set low range percent percent 
notice previous test percent percent range freespan gsp run reasonable amount time gsp run min support reduced percent 
distribution frequent sequences data set low min support shown fig 

shows total number frequent patterns grows frequent sequences min support 
testing result shown fig 
demonstrates fig 

scalability test algorithms data set min support percent 
fig 

scalability test algorithms data set min support percent 
prefixspan consistently faster gap big cases percent performance improvement min support 
performance spade clearly prefixspan min support low sequential patterns dense 
compare memory usage algorithms prefixspan spade gsp real data set gazelle synthetic data set 
fig 
shows results gazelle data set see prefixspan efficient memory usage 
consumes order magnitude memory spade gsp 
example support percent gsp consumes mb memory spade just running mb memory prefixspan uses mb memory 
fig 
demonstrates memory usage data set see prefixspan efficient stable memory usage spade gsp 
support percent gsp running consumed mb fig 

scalability test algorithms data set min support percent 
ieee transactions knowledge data engineering vol 
november fig 

distribution frequent sequences data set low min support ranging percent percent 
memory spade reported error message memory array memory tried allocate bulk memory mb memory prefixspan uses mb memory 
explains cases previous experiments support threshold really low prefixspan finish running 
analysis prefixspan needs memory space hold sequence data sets plus set header tables tables 
data set mb bigger gazelle mb consumes memory space gazelle memory usage quite stable mb mb different thresholds testing 
spade gsp need memory space hold candidate sequence patterns sequence data sets 
min support threshold drops set candidate subsequences grows quickly causes memory consumption gsp spade finish processing 
fig 

performance prefixspan versus versus spade data low min support 
fig 
memory usage comparison prefixspan spade gsp data set gazelle 
summary performance study shows prefix span best performance algorithms tested 
spade weaker prefixspan cases outperforms gsp consistently consistent performance study reported 
gsp performs fairly min support high scalability consistent performance study reported 
large number frequent sequences performance starts deteriorating 
memory usage analysis shows part reason algorithms really slow huge number candidate sets may consume tremendous amount memory 
large number frequent subsequences algorithms run slow shown fig 

leaves room performance improvement 
prefixspan high performance 
comprehensive performance study convinced prefixspan clear winner tested algorithms 
question prefix span high performance implementation tricks inherently algorithm 
analysis fig 

memory usage prefixspan spade gsp synthetic data set 
pei mining sequential patterns pattern growth prefixspan approach pattern growth candidate generation 
prefixspan pattern growth approach similar fp growth 
traditional priori approach performs candidate generation test prefixspan generate useless candidate counts frequency local itemsets 
performance shows min support drops number frequent sequences grows exponentially 
candidate generation test approach gsp handling exponential number candidates independent optimization tricks 
wonder gsp costs exponential growth amount time process pretty small database sequences take great deal time generate test huge number sequential pattern candidates 
projection divide conquer effective means data reduction 
prefixspan grows longer patterns shorter ones dividing search space focusing subspace potentially supporting pattern growth 
search space prefixspan focused confined set projected databases 
projected database sequential pattern contains necessary information mining sequential patterns grow size projected databases usually reduces quickly mining proceeds longer sequential patterns 
contrast priori approach searches original database iteration 
irrelevant sequences scanned checked adds overhead 
argument supported performance study 
prefixspan consumes relatively stable memory space generates candidates explores divide conquer methodology 
hand candidate generation test methods including gsp spade require substantial amount memory support threshold goes low needs hold tremendous number candidate sets 
prefixspan applies prefix projected pattern growth efficient freespan uses frequent pattern guided projection 
comparing frequent pattern guided projection employed freespan prefix projected pattern growth prefix span saves lot time space prefixspan projects frequent items suffixes projected sequences shrink rapidly 
mining dense databases freespan gain projections prefixspan reduce substantially length sequences number sequences projected databases 
extensions discussions comparing mining unordered frequent patterns mining sequential patterns step mining sophisticated frequent patterns large databases 
successful development pattern growth sequential pattern mining method prefixspan interesting explore method extended handle sophisticated cases 
straightforward extend approach mining multidimensional multilevel sequential patterns 
section discuss constraint mining sequential patterns research problems 
constraint mining sequential patterns sequential pattern mining applications finding possible sequential patterns database user may enforce certain constraints find desired patterns 
mining process incorporates user specified constraints reduce search space derive user interested patterns called constraint mining 
constraint mining studied extensively frequent pattern mining 
general constraints characterized notion monotonicity succinctness convertible constraints respectively depending constraint transformed categories naturally belong 
classical framework constraint frequent pattern mining 
interestingly constraint mining framework extended sequential pattern mining 
pattern growth framework previously push constraints regular expression constraints handled elegantly 
examine example 
example constraint sequential pattern mining 
suppose task mine sequential patterns regular expression constraint ha bc min support sequence database table 
regular expression constraint antimonotone monotone succinct classical constraint pushing framework push deep 
overcome difficulty guha develop set spirit algorithms pushing stronger relaxation regular expression constraint predecessor pattern mining loop 
basic evaluation framework sequential patterns gsp typical candidate generation approach 
development pattern growth methodology kinds constraints pushed deep easily elegantly sequential pattern mining process 
context prefixspan regular expression constraint nice property called growth antimonotonic 
constraint antimonotonic property sequence satisfies constraint reachable growing component matches part regular expression 
constraint ha bc integrated pattern growth mining process follows hai projected database needs mined regular expression constraint starting sequences contain ieee transactions knowledge data engineering vol 
november frequent single item set fb dg retain hai projected database 
second remaining mining proceed suffix essentially suffix span algorithm symmetric prefixspan growing suffixes sequence forward 
growth match suffix constraint bc projected databases matches suffixes grow sequential patterns prefix suffix expansion manner find remaining sequential patterns 
notice regular expression constraint example special form possible general regular expressions 
special case integration prefixspan suffix span may achieve best performance 
general regular expression form set instantiated regular expressions 
case freespan applied push instantiated items expansion instantiated items 
detailed discussion constraint sequential pattern mining 
problems research sequential pattern growth approach proposed efficient scalable challenging research issues regards sequential pattern mining especially certain large scale applications 
illustrate problems need research 
mining closed maximal sequential patterns frequent long sequence contains combinatorial number frequent subsequences shown section 
sequential pattern length exist nonempty subsequences 
cases prohibitively expensive mine complete set patterns matter method applied 
similar mining closed maximal frequent patterns transaction databases mines longest frequent patterns case max pattern mining longest support case closed pattern mining sequential pattern mining desirable mine frequent maximal closed sequential patterns sequence maximal exists frequent supersequence sequence closed exists supersequence support development efficient algorithms mining closed maximal sequential patterns large databases important research problem 
study proposed efficient closed sequential pattern method called development prefixspan mining framework influenced approach 
mining approximate sequential patterns study assumed sequential patterns mined exact matching patterns 
practice applications need approximate matches dna sequence analysis allows limited insertions deletions mutations sequential patterns 
development efficient scalable algorithms mining approximate sequential patterns challenging practically useful direction pursue 
study mining long sequential patterns noisy environment example direction 
mining kinds structured patterns mining sequential patterns important task mining frequent substructures database composed structured semistructured data sets 
substructures may consist trees directed acyclic graphs dags general graphs may contain cycles 
lot applications related mining frequent substructures human activities natural processes may contain certain structures huge amount data collected large data information repositories molecule biochemical structures web connection structures methods mining structured patterns databases 
mining frequent subtrees frequent subgraphs structured databases shows pattern growth approach clear performance edge candidate generation test approach 
furthermore discussed desirable mine closed frequent subgraphs subgraph closed exists supergraph carrying support mining explicitly complete set frequent subgraphs large graph inherently contains exponential number subgraphs 
study developed efficient closed subgraph pattern method called pattern growth framework influenced approach 
performed systematic study mining sequential patterns large databases developed pattern growth approach efficient scalable mining sequential patterns 
refinement priori candidate generation test approach gsp promote divide conquer approach called pattern growth approach extension fp growth efficient pattern growth algorithm mining frequent patterns candidate generation 
efficient pattern growth method prefixspan proposed studied 
prefixspan recursively projects sequence database set smaller projected sequence databases grows sequential patterns projected database exploring locally frequent fragments 
mines complete set sequential patterns substantially reduces efforts candidate subsequence generation 
prefixspan explores ordered growth prefix ordered expansion results growth points reduced projected databases comparison previously proposed pattern growth algorithm freespan 
furthermore technique proposed prefixspan reduce number physical projected databases generated 
comprehensive performance study shows prefixspan outperforms priori gsp algorithm freespan spade cases prefixspan integrated fastest tested algorithms 
pei mining sequential patterns pattern growth prefixspan approach view implication method far efficient sequential pattern mining algorithm 
demonstrates strength mining methodology methodology achieved high performance frequent pattern mining sequential pattern mining 
discussion shows methodology extended mining multilevel multidimensional sequential patterns mining sequential patterns user specified constraints 
represents promising approach applications rely discovery frequent patterns sequential patterns 
interesting issues need studied mining closed maximal sequential patterns mining approximate sequential patterns extension method mining structured patterns 
especially developments specialized sequential pattern mining methods particular applications dna sequence mining may admit faults allowing insertions deletions mutations dna sequences handling industry engineering sequential process analysis interesting issues research 
acknowledgments authors grateful dr mohammed zaki providing source code spade vertical data conversion package promptly answering questions related spade 
express blue martini software sending gazelle data set allowing publish algorithm performance results data set 
supported part natural sciences engineering research council canada networks centres excellence canada hewlett packard lab national science foundation nsf iis nsf iis university illinois 
opinions findings recommendations expressed authors necessarily reflect views funding agencies 
major value added version conference 
agrawal srikant fast algorithms mining association rules proc 
int conf 
large data bases vldb pp 
sept 
agrawal srikant mining sequential patterns proc 
int conf 
data eng 
icde pp 
mar 
bayardo efficiently mining long patterns databases proc 
acm sigmod int conf 
management data sigmod pp 
june 
bayardo agrawal gunopulos constraint rule mining large dense data sets proc 
int conf 
data eng 
icde pp 
apr 
bettini wang jajodia mining temporal relationships multiple granularities time sequences data eng 
bull vol 
pp 

guha rastogi shim rock robust clustering algorithm categorical attributes proc 
int conf 
data eng 
icde pp 
mar 
han dong yin efficient mining partial periodic patterns time series database proc 
int conf 
data eng 
icde pp 
apr 
han pei asl chen dayal 
hsu freespan frequent pattern projected sequential pattern mining proc 
acm sigkdd int conf 
knowledge discovery databases kdd pp 
aug 
han pei yin mining frequent patterns candidate generation proc 
acm sigmod int conf 
management data sigmod pp 
may 
kohavi brodley mason zheng kdd cup organizers report peeling onion proc 
sigkdd explorations vol 
pp 

karypis frequent subgraph discovery proc 
int conf 
data mining icdm pp 
nov 
lu han feng stock movement dimensional inter transaction association rules proc 
sigmod workshop research issues data mining knowledge discovery dmkd vol 
pp 
june 
mannila toivonen verkamo discovery frequent episodes event sequences data mining knowledge discovery vol 
pp 

psp approach mining sequential patterns proc 
european symp 
principle data mining knowledge discovery pkdd pp 
sept 
ng lakshmanan han pang exploratory mining pruning optimizations constrained associations rules proc 
acm sigmod int conf 
management data sigmod pp 
june 
ramaswamy silberschatz cyclic association rules proc 
int conf 
data eng 
icde pp 
feb 
pasquier bastide taouil lakhal discovering frequent closed itemsets association rules proc 
seventh int conf 
database theory icdt pp 
jan 
pei han lakshmanan mining frequent itemsets convertible constraints proc 
int conf 
data eng 
icde pp 
apr 
pei han asl pinto chen dayal 
hsu prefixspan mining sequential patterns efficiently prefix projected pattern growth proc 
int conf 
data eng 
icde pp 
apr 
pei han wang constraint sequential pattern mining large databases proc 
int conf 
information knowledge management cikm pp 
nov 
pinto han pei wang chen dayal multi dimensional sequential pattern mining proc 
int conf 
information knowledge management cikm pp 
nov 
ramaswamy mahajan silberschatz discovery interesting patterns association rules proc 
int conf 
large data bases vldb pp 
aug 
srikant agrawal mining sequential patterns generalizations performance improvements proc 
fifth int conf 
extending database technology edbt pp 
mar 
wang chirn marr shapiro shasha zhang pattern discovery scientific data preliminary results proc 
acm sigmod int conf 
management data sigmod pp 
may 
yan han gspan graph substructure pattern mining proc 
int conf 
data mining icdm pp 
dec 
yan han mining closed frequent graph patterns proc 
acm sigkdd int conf 
knowledge discovery data mining kdd aug 
yan han mining closed sequential patterns large datasets proc 
siam int conf 
data mining sdm pp 
may 
yang wang yu han mining long sequential patterns noisy environment proc 
acm sigmod int conf 
management data sigmod pp 
june 
zaki spade efficient algorithm mining frequent sequences machine learning vol 
pp 

zaki efficient enumeration frequent sequences proc 
seventh int conf 
information knowledge management cikm pp 
nov 
zaki efficiently mining frequent trees forest proc 
acm sigkdd int conf 
knowledge discovery databases kdd pp 
july 
ieee transactions knowledge data engineering vol 
november jian pei received beng meng degrees computer science shanghai tong university china respectively phd degree computing science simon fraser university canada 
phd candidate university 
currently assistant professor computing science simon fraser university canada 
research interests include data mining data warehousing online analytical processing database systems bioinformatics 
research currently supported part national science foundation nsf 
served program committees international conferences workshops reviewer leading academic journals 
member acm acm sigmod acm sigkdd ieee computer society 
guest area editor journal computer science technology 
jiawei han received phd degree computer science university wisconsin 
professor department computer science university illinois urbana champaign 
previously endowed university professor simon fraser university canada 
working research data mining data warehousing spatial multimedia databases deductive objectoriented databases biomedical databases journal conference publications 
chaired served program committees international conferences workshops including acm sigkdd conferences best award chair student award chair pc siam data mining conferences pc acm sigmod conferences exhibit program chair international conferences data engineering pc 
served serving editorial boards data mining knowledge discovery international journal ieee transactions knowledge data engineering journal intelligent information systems 
currently serving board directors executive committee acm special interest group knowledge discovery data mining sigkdd 
dr han received ibm faculty award outstanding contribution award international conference data mining acm service award 
author textbook data mining concepts techniques morgan kaufmann 
senior member ieee 
asl received bsc msc degrees computing science simon fraser university respectively 
research interests include weblog mining sequential pattern mining online educational systems 
currently working software developer 
wang received phd degree computer science institute computing technology chinese academy sciences 
worked assistant professor department computer science technology beijing university areas distributed systems web search engines visited school computing science simon fraser university department computer science university illinois urbana champaign research fellow mainly working area data mining 
currently research associate digital technology center university minnesota 
helen pinto received msc degree computing science simon fraser university canada 
currently alberta research council calgary alberta canada 
working area intelligent systems applications emphasis knowledge discovery databases 
chen senior technical staff prior worked hp labs hewlett packard senior computer scientist commerce labs commerce principal architect 
current research development activities areas grid services web services process conversation management data warehousing olap data mining 
early research interests include database workflow distributed agent systems 
authored technical publications number patents granted filed 
served program committees international conferences 
dayal received phd degree applied mathematics harvard university 
director intelligent enterprise technologies laboratory hewlett packard laboratories 
research interests data mining business process management distributed information management decision support technologies especially applied business 
dr dayal member acm ieee computer society 
mei chun hsu received ba degree national taiwan university ms degree university massachusetts amherst phd degree massachusetts institute technology 
currently vice president engineering commerce dr hsu led design development efforts commerce conductor web service enabled application integration platform 
prior commerce held positions hewlett packard laboratories eds digital equipment 
member computer science faculty harvard university 
research interests span database systems transaction processing business process management systems data mining technologies 
information computing topic please visit digital library www computer org publications dlib 
