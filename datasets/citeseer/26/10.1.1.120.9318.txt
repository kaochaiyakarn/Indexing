computer supported cooperative new challenges systems design peter carstensen kjeld schmidt center tele information technical university denmark 
collaborative core society difficulties benefits 
clear technology change group possibility result major enhancements productivity 
lot fully understand accomplish 
trial error creative system builders slow discovery process 
required better understanding nature group extent possibilities design space technology features evaluation systems leads theory computer supported operative turn help direct subsequent invention new ways group olson 
general trend modern settings complex 
complex sense characterized complex problem solving decision making activities rule interpretation cooperative processes demands flexibility production time complexity products example reflected trends concurrent engineering helander increasing 
structure context settings differentiated characterized increase speed changes 
activities situations handled modern settings inescapable aspect contingency suchman 
despite increased level automation settings activities complex human activities involving people having different areas competence 
information sources considered decisions mutually interdependent actors 
cooperative arrangements emerge response different requirements serve different generic functions augmentation capacity differentiation combination techniques mutual critical assessment combination perspectives schmidt 
number people involved activities exceeds limit appear kenji itoh ed 
handbook human factors tokyo press 
carstensen schmidt cscw need examine state affairs field example seek answers sub component xyz tested activities john allocated hours 
actors involved cooperative activities need coordinate activities including example meshing allocating scheduling activities actors resources strauss schmidt 
requires handling multitude intertwined interdependent activities complexity coordinating activities increases tremendously 
research field cscw computer supported cooperative addresses collaborative activities coordination supported means computer systems 
series questions central example characterizes cooperative model cooperative computer facilities provided basic characteristics useful platforms cscw systems 
computer support cooperative provided offering better communication facilities providing improved monitoring awareness possibilities actors aiming reducing complexity coordination activities conducted involved actors 
aims introducing essential problems addressed cscw illustrate approaches taken better understanding central aspects cooperative activities design computer systems supporting collaborative activities 
discussion examples large extent taken design oriented domains 
claims generally valid 

cscw research field research field field cscw computer supported cooperative relatively new generally accepted definition established cf 
bannon 
lot confusion debate research questions addressed 
chapter means attempt solve 
consider relevant dimensions characterizing field briefly introduce approach taken central players dimensions 
literature contains course different definitions cscw groupware characterizes groupware technology publications cscw field include definitions impossible provide overview 
exceeds scope chapter discus brief relevant grudin groupware cscw systems defined differently different researchers 
consider technology providing access shared files cscw systems crowley consider mail systems cscw systems kraut ex december carstensen schmidt cscw ample bannon schmidt argued cscw systems reflect understanding cooperative aspects supported mail recognize roles receiver sender considered cscw system 
mail facilities providing shared file servers seen enabling technology 
cscw field argue paradigm shift systems development 
grudin suggests cscw opportunity stress importance workplace democracy engaging users workers meaningfully design process time consuming labor intensive approach may equally appropriate development projects grudin 
defined cooperative design cooperative argue seeing tradition participatory design pd aspect cscw 
argued bannon add confusion fields defining field cscw certainly various forms user involvement important development successful cscw systems pd techniques ideas automatically signify focus cooperative 
cases pd researchers interested directly computer support design practices proposing bannon 
participatory design considered tradition developed introduced number approaches techniques course applied designing cscw applications 
hughes 
argue cscw seen paradigm shift 
seeing sociology having service role cscw cscw seen posing challenge sociology new empirical terrain formed sociology organisations interdisciplinary invoked cscw formative influence hughes 
related systems design discussion characterizes design 
participatory design approach sociological approaches provides useful propositions relevant field cscw example techniques analyzing cooperative deeper coherent understanding magnitude aspects situation important understand compared traditional systems design 
schmidt bannon discuss approach cscw definition focusing need understanding nature cooperative order establish foundation designing information systems support cooperative cscw conceived endeavor understand nature requirements cooperative objective designing computer technologies cooperative arrangements 
conception cscw proposed research area devoted exploring meeting support requirements cooperative arrangements cscw basically design oriented research area 
common ground 
enter change 
december carstensen schmidt cscw cscw considered primarily design discipline 
calls attempt establish better conceptual understanding characterizes cooperative coordination 
general overview take closer look complexity cooperative cscw technologies seek provide support 
order focus description departure examples taken nature design discussion broaden domains 
complexity cooperative design cooperative noted inherently distributed distributed character cooperative varies complexity interdependence depending factors distribution activities time space number participants cooperative ensemble structural complexity posed field interactions heterogeneity degree scope specialization participants uncertainties posed field variety heuristics involved 
distributed activities cooperative arrangement complex articulation activities arrangement 
problems reaching insoluble levels complexity argued christopher alexander classic study conceived cooperative effort entirely different order complexity 
domains process control common field plant ongoing processes essentially advance task basically maintain achieve certain system state defined terms set parameters 
interdependencies largely known advance challenge coordinate distributed time critical processes 
likewise manufacturing challenge handle interdependencies practical purposes intractable due parts undergo variety processes different sequences 
contrast common field cooperative design essentially emerging 
design course situated environment advance 
case design manufacturing similar settings design highly constrained manufacturing capabilities enterprise machinery skills previous designs inventories parts general standards 
likewise software design constrained interface standards target platform software systems existing code libraries 
focal object designers shape 
gist design said consist exploring identifying interactions conflicting requirements able decide acceptable compromise 
including design characterized wicked problem rittel webber 
december carstensen schmidt cscw complexities compounded drastically solving wicked problem involves multiple actors different aspects problem addressed different actors interdependencies aspects actors emerge change design project unfolds 
example problems cooperative observed software development 
pointed frederick brooks software invisible spite progress restricting simplifying structures software remain inherently mind powerful conceptual tools 
lack impedes process design mind severely hinders communication minds brooks jr pp 

traditional strategy managing complexities consisted subjecting cooperative process rigorously hierarchical regime problem defined refined top manner decomposed atomic fragments addressed sequentially 
multiple levels management required handle unavoidable unforeseen interdependencies fragmented activities 
strategy collapsed working areas including design 
cscw approaches cooperative design due growth scientific research activities tighter coupling research production pace technological change accelerating branches production 
enhanced shortening incubation period product design due computer aided design engineering technologies 
order indulge customers shortest possible elapse time order delivery competitive advantage right product life cycles cut short yesterday models superseded tomorrow reinforces demand flexibility versatility manufacturing enterprises 
order humor customers companies expanding list models variants sales catalogues 
result manufacturing product diversification gunn 
environments engineers designers face huge challenges fight manage increasing product diversity trying accelerate design process deal harsh competitive realities global market decreasing product life cycles 
response challenges organization shifting novel organizational concepts concurrent engineering 
doing coordination integration interdependent distributed concurrent activities enormously complex 
cscw technologies may indispensable domains current transition highly responsive organizations concurrent engineering succeed 
conversely domain design december carstensen schmidt cscw engineering attracted attention cscw researchers 
early history cscw research related problems strategies dominant hand cscw researchers explored different approaches capturing design rationale supporting organizational memory course line research number experimental systems conklin conklin answer garden ackerman malone johnson developed put test 
hand researchers especially team japanese researchers hiroshi ishii addressed issue supporting cooperation designers actors distance space means series refined shared display facilities ishii ishii miyake ishii ishii 
pioneering activities undertaken large number depth empirical studies carried cscw community anderson carstensen button sharrock carstensen carstensen rensen grinter potts catledge robertson grinter robertson wagner 
addition studies range anthropological studies design contribute significantly understanding design cooperative effort bucciarelli bucciarelli latour bucciarelli large number studies design organizational perspectives adler perspectives software engineering software development methodology curtis dker gr nb 
studies provides basis better understand cscw technologies assist designers engineers collaborating actors managing challenges faced 
comes studies methodological variety multiplicity design settings studied overriding problem facing contemporary actors overwhelming complexity handling shifting interdependencies distributed activities orderly timely fashion 
cooperative design settings example simple example illustrate point foss electric danish manufacturing produces advanced equipment analytical measurement quality parameters agricultural products compositional quality milk terms fat content count protein somatic cells bacteria time field study engaged large design project called aimed building new instrument analytical testing raw milk 
project project aiming building integrated instrument offer range field research project done henrik peter carstensen carsten rensen 
december carstensen schmidt cscw functionalities previously offered number specialized instruments 
addition innovation compared previous models system introduce measurements new parameters milk acid performance radically increased 
instrument consist approximately components grouped number functional units cabinet unit flow system measurement unit 
foss instrument incorporate personal computer intel pc means configuration operation instrument controlled windows interface 
eventually version software consisted approximately lines source code 
altogether people involved project lasted approximately months version 
design team faced quite challenge different subsystems software control system mechanical chemical processes flow measurement system interdependent interact unforeseen ways 
project introduced measurement new parameters raw milk new technologies developed mastered 
different subsystems developed concurrently requirements satisfied subsystem change subsystems developed 
production facilities manufacturing plant constantly changing existing machines optimized new machines processes introduced 
repertoire manufacturing processes production function offer designers designers take account decisions continually changing 
technological heterogeneity project involved number 
core design team consisted designers mechanical engineering electronics software chemistry 
addition handful persons persons organizational entities production model shop marketing quality assurance quality control service top management involved varying degrees different stages course project 
project significantly complex previous projects foss 
survive challenges participants took number measures reduce complexity managing project foss project participants different technical departments moved office area create shared physical space means participants develop maintain shared awareness state project 
furthermore course sequence meetings scheduled different intervals project took course large number ad hoc meetings arranged 
amount detailed information communicated aligned negotiated required robust measures 
number procedures artifacts introduced keep track state affairs manage december carstensen schmidt cscw relations dependencies actors tasks resources augmented bill materials identified actors responsible parts order support coordination mechanical design process planning production construction prototypes rensen board cause effect diagram addition cards coordinating diagnosis faults mechanical design process planning rensen product classification scheme supporting distributed classification retrieval cad models rensen 
procedures artifacts invented project re designs existing artifacts merely adopted 
dramatic measures taken respect software design process 
early phases software strand project software designers felt overview state project quite defective needed greater coordination 
height crisis software design goals abandoned 
overcome crisis software designers developed repertoire procedures artifacts ensure monitoring control integration software components modules 
important component repertoire software platform institution 
initially software platform just point time software designers coding order integrate bits pieces 
platform integration period designers appointed platform master implied responsible collecting information changes software ensuring software tested corrected released 
software released platform development project schedule updated revised plans tasks weeks 
establishment software platform institution considered absolutely necessary project 
software design team devised introduced procedures artifacts 
importantly bug report form corresponding procedures reporting classifying correcting faults introduced see ensure bugs properly registered corrected bugs reported allocation responsibilities clear visible members 
complementary measure copies bug forms collected publicly available repository form simple binder 
sake illustration elaborate little bug report form 
december carstensen schmidt cscw initials date description instrument report classification catastrophic essential cosmetic involved modules responsible designer estimated time date change time spend tested date periodic error presumed corrected accepted date rejected postponed accepted software classification platform description corrections modified applications modified files actors fill add information testers spec team designers procedure handling bugs tester register classifies bug field tester sends form spec team spec team diagnose classify bug field spec team identifies responsible designer field spec team estimates correction time field spec team incorporates correction plans spec team requests designer correct problem designer corrects bug fills additional correction information field designer sends form central file cfm sends form pm insert copy central file pm verifies correction pm returns form central file translated version bug report form procedure registering diagnosing correcting bugs 
cfm means central file manager pm platform master 
form sheet printed sides 
numbers indicate supposed fill information form carstensen rensen 
bug report form originally just blank sheet involved actors describe nature identified software problem 
project form refined tool registering bugs diagnosing prioritizing bugs coordinating correction tasks verifying corrections reported 
bug report form filled software designers designers people quality assurance marketing people involved testing 
originator described classified problem 
team software designers called spec team added information affected modules responsible designer platform period importance priority viewed software reliability perspective 
forms filed central bug forms file categories describing importance problem corrected corrected postponed rejected verified 
forms successively re classified example spec team due results integration test list unresolved problems continuously produced accessed software designers 
designer responsible fixing problems handling bug forms reporting back person responsible verifying corrections platform master 
flows forms acknowledgments complicated 
software designers described december carstensen schmidt cscw state transition diagram containing states 
thorough description bug report form provided carstensen 
simple model forms flowed actors shown 
flow structure successively negotiated changed due example involvement new designers recognition mis classification bugs rejections responsibility specific problem 
plan manager testers spec team platform master central file manager software designers different roles involved coordination software testing correction flow bug report forms 
arrow numbers indicates sequence standard flow adapted carstensen relating correction activities relevant software modules platform period responsible actors automatically appointed rolling plans easily updated 
bug report form collect classify manage errors suggestions 
mediated coordination information stipulated coordination terms tasks actors software modules responsibilities 
main purpose bug report forms central file problems list accompanying procedures ensure problems registered filed establish visible organization responsibilities prescribe problem handled 
software designers experienced hard way practically impossible handle distributed testing bug registration activities testers designers inter alia bug report form associated procedures 
devising introducing constructs managed alleviate coordination crisis project 
case project particularly valuable witness conception specialized artifacts coordination purposes response overwhelming problems encountered coping complexities articulating distributed interdependent activities cooperative design conditions typical contemporary design 
december carstensen schmidt cscw 
requirements cscw systems assist cooperating actors coping complexities described illustrated cscw technologies fulfill requirements fronts management task interdependencies management common information spaces 
managing task interdependencies obvious fundamental way coordinate align mesh myriad interdependent distributed activities facilitate mutual awareness actors 
actor changes state field field speak emit signals change actors may perceive 
support perceiving changes directly senses indications required 
field tightly coupled system piece music played ensemble changes affect instantly exception 
loosely coupled system hand changes propagate time contingently 
cscw systems provide awareness support reflects characteristics 
phrase differently collaborating actors facilities supporting monitoring state affairs field instance providing actors access equipment crying actions taken ship bridge 
furthermore cooperative arrangement may deployed way respect field actors able perceive state field entirety way perceive section thereof 
cooperating actors mutually interdependent services monitoring provided instance having actors working room providing multimedia emulation shared space ishii ishii miyake ishii ishii 
awareness support include facilities monitoring directing attention handling tasks different levels persistence 
third aspect monitoring status collaborative activities comparing existing plans planning re planning essential coordination activities collaborative settings 
planning re planning requires communication channels structures actors negotiate 
cscw systems offer communication negotiation structures 
task interdependencies order complexity provision facilities mutual awareness ad hoc interactions insufficient carstensen carstensen carstensen rensen grinter grinter wagner 
means required task interdependencies tractable 
called means coordination mechanisms schmidt simone 
coordination december carstensen schmidt cscw mechanism simply put coordinative protocol accompanying artifact instance standard operating procedure supported certain form 
offers precomputation norman task interdependencies instrumental reducing space possibilities facing competent actor situation 
distributed nature cooperative coordination mechanisms 
merely local temporary closures assist actors managing overwhelming complexity 
distributed way evolve process local adaptations 
basic requirement cscw environment supports construction computational coordination mechanisms mechanisms established robust view distributed nature cooperative distributed maintainable distributed manner coordination mechanisms established bottom carstensen rensen linkable possible foresee deviations provide include local control malleable nature malleable embedded flows structures visible actors see schmidt simone elaborate discussion requirements 
managing common information spaces described cooperating actors need keep track field designers joint design navigators ship environment evolves result distributed activities order able see emerging context contribution inspect impact contributions assess interactions crucial problem indexation provision means allow individual assign publicly visible permanent pointer item enable individuals locate items relatively easily reliably 
cope problem actors classification schemes conceptual structure ordered arrangement categories artifact instance catalogue graph 
case project software designers simply directory system development environment manage database software modules 
conditions larger design projects automobiles power plants airplanes require far sophisticated facilities keeping track vast system information objects evolving design expressed 
applies problem managing vast heterogeneous distributed wider design environment previous designs stocks components code libraries 
sophisticated indexation facilities exist widespread decades group technology problem coming fore large scale projects design environments problem typically ignored organizational memory classification schemes required distributed actors able handle repositories evolve time december carstensen schmidt cscw response changing conditions changing conceptualizations evolutionary process distributed 
large scale settings actors negotiate proposed change classification scheme order ensure consensus able negotiate proposed changes agreed categories typically local implications interpretations necessarily known globally community 
classification scheme evolves process partially concerted involves local innovations may gain general acceptance time 
cscw systems provide basic structures establishing maintaining conceptual structures negotiate open flexible local interpretations 
current approaches cscw systems inspired johansen cscw technologies characterized means times matrix separating synchronous vs asynchronous communication time dispersion distributed actors vs non distributed actors geographic dispersion 
prevalent approaches design systems support synchronous interaction cooperation idea establishing shared workspace 
idea lessons early see see systems stefik provide users individual familiar tools 
integrated computer system users communicate interact cooperate share workspaces documents boards dynamically space constraints ishii miyake 
goal provide seamless collaboration media ishii 
illustration systems typically contain shared workspaces actors see manipulations video cameras actors see voice transmission allowing oral communication simple systems provides facilities shared whiteboard facilities pedersen video conferencing systems isaacs 
tradition concerns collaborative writing systems enables number users distributed space document time grove ellis shredit olson 
idea establishing media space integrating video audio technology network technology face face communication supported actors distributed space explored 
xerox rave system gaver known 
system number studies resulting discussions example control mechanisms kind systems dourish privacy influences handled media spaces bellotti sellen ideas supporting awareness gaver establish joint frame interaction systems gaver 
december carstensen schmidt cscw systems approaches asynchronous interaction email conferencing systems 
engelbart discuss means collaboration cf engelbart 
type systems asynchronous category labeled organizational memory record organization embodied set documents artifacts conklin 
focus application data artifact oriented paradigm recording information expanded include relevant recording context result produced process followed producing results 
central idea build systems supporting traceability re ideas establishing consensus example systems answer garden ackerman malone provides facilities routing questions organization relevant experts support discussing establishing keep track design rationale software design project conklin 
comparable system johnson supports exploratory group providing structure schemes describing tasks specifications keeps track variations offering functionality listing registered deviations schemes 
predominant approach idea developing flow systems automating supporting flow tasks data actors recurrent events order improve efficiency effectiveness organizations 
approach paradigm organizations seen networks intertwined flows physical entities structures 
basic units modeling workflows 
domino example system office processes modeled terms information flows including concurrent flows processes alternatives courses activity 
coordinator winograd action workflow management system medina mora workflows modeled terms conversations requests offers agreements assertions assessments 
designed monitoring business processes conducted workflows sequences actions automating repetitive tasks 
tasks defined requests commitments expressed workflow loop 
workflow composed actors procedures information tasks management 
focus coordination activities 
structure workflow defined language acts people coordinate workflow loop concerns single task 
system allows definition rules routing documents spreadsheets forms software programs tasks 
architecture allows interoperability different applications different platforms simone 
december carstensen schmidt cscw workflow enabled application message database process stf processors workflow language interpreter definitions database design workstation agent processor workflow processor transactions database workflow management server architecture action workflow management system adapted simone 
approaches aim supporting coordination cooperation going 
idea models processes specify different kinds support 
focus planning structuring specify models specification languages rules 

systems usually shells environments programmed specific situation 
early example ellis nutt 
intended support cooperative management preparation office documents 
contained facilities handling outgoing mail defining different forms newer example kaplan provide appropriate mechanisms support collaboration specific policies 
policies built mechanisms right mechanisms provided 
conversation action theory winograd flores basis basically understanding coordination hand intertwined hand need supported orthogonal 
active support orthogonality 
mean searching ways supporting tasks remaining sense orthogonal tasks kaplan 
third interesting system 
provides support planning processes 
done modeling communication required coordinate relevant tasks 
modeling intended done iterative process users process plans created modified user allowing users experiment find best processes ibid 
basis system developing known flow fujitsu icl 
manufacturer flow intended actors require workflow system adapt constantly changing requirements organization 
key component graphical planner specifying plans flows 
tool december carstensen schmidt cscw provides facilities involved actors specifying re specifying plans 
done defining roles assess qualification evaluation forms possible choices activity 
example fujitsu icl flow planner actors specify workflows terms activities related possible choices related roles evaluation forms assess qualification characteristics cooperative described previously indicates cscw facilities quite different traditional systems 
implies existing platforms operating systems database systems insufficient 
cscw addressed development new architectures platforms designing cscw systems 
platforms specified supporting development cscw systems mentioned 
coordinator defined platforms building cscw applications 
languages including structures specifically supports development cscw applications specified 
known example specification language oval malone intended general notation expressing coordination 
basic primitives objects views agents links general low level reflect relevant primitives coordinating actual december carstensen schmidt cscw settings proper semantic level cf schmidt 
attempt ariadne specifying coordinative artifacts primary category available actors purpose defining coordination mechanisms 
ariadne implemented agent architecture offers specialized interoperability language simone 
discussions kind requirements nature cscw application sets basic software operating system database system communication protocols taken 
discussed implications distribution technology problem cooperating cscw application users separated geographically rodden schmidt rodden 
shen explicitly addressed control aspects cscw applications discussed architectures supporting cscw organized bentley jeffay 
discussions ideas attempts build basis platforms cscw systems exist trevor 
times matrix suggested johansen useful describing todays existing cscw systems different facilities falling different boxes 
suggest categorize systems platforms times matrix dimension separates tightly loosely coupled interaction collaborating actors dimension separates seeing computer medium interaction regulator interaction cf 

tightly coupled interaction loosely coupled interaction computer medium interaction mutual awareness media space rave clearboard ishii vr systems conceptual structures computer regulator interaction adjustment floor control shared object services rodden simple categorization existing cscw technologies 
coordination coordinator domino oval ariadne december carstensen schmidt cscw 
challenges cscw systems design research indicated research systems design cscw confronted number hard challenges 
better conceptualized understanding cooperative complexity required 
collaborating actors monitor cope immense complex structures field 
order able provide systems communicating monitoring articulating activities respect field understand field conceptualized applied evolve time 
purpose designing usable useful computer systems cooperative settings need know situations complex competent actors computer systems may assistance reduce cope complexity 
natural attitude schutz praxis actor take infinite number possible perspectives points view levels abstractions consideration acting takes granted fellow man understand thought expressed plain language answer accordingly wondering performance may explained 
furthermore search truth quest certainty 
wants information likelihood insight chances risks situation hand entails outcome actions schutz reasonable reasons investigate situation different level abstraction actor stick perspectives levels abstractions relevant project 
relevant level abstraction analyze complexity cooperative determined arbitrarily subjectively determined philosophical dispute probably amounts 
issue relevant perspective level abstraction actor natural attitude 
needs determined empirically 
secondly close relation previous point establish better understand awareness 
mutual awareness mode articulation establishing elementary undifferentiated consciousness state cooperative effort 
provision information pertaining mutual awareness achieved course doing emission dissemination requisite signals signs cues 
acquisition information pertaining mutual awareness non intrusive sense intervene flow 
ability mutual aware seen common social skill 
people distributed time space actors involved type information provided cscw system 
december carstensen schmidt cscw third problem flexibility 
cooperative prescribed level detail computer systems require establish basic building blocks platforms actors establish cscw system fulfilling needs 
problem mainly building blocks provided hand ensure high degree flexibility provide building blocks semantic level sense relation cooperation coordination activities 
far cscw technology failed fulfill needs due shortcomings existing technology 
new better platforms operating systems established 
improved understanding essential characteristics cooperative characteristics transformed new requirements basic technology build cscw systems 
acknowledgments original field foss electric partially funded esprit bra comic project 
carsten rensen henrik participated field study 
bibliography ackerman marc tom malone answer garden tool growing organizational memory proceedings acm conference office information systems acm press pp 

adler paul managing high tech processes challenge cad cam managing complexity high technology organizations edited oxford university press oxford pp 

alexander christopher notes synthesis form 
anderson bob graham button wes sharrock supporting design process organisational context ecscw 
proceedings third european conference computer supported cooperative milan edited michelis simone schmidt kluwer academic publishers pp 

bannon cscw initial exploration scandinavian journal information systems vol 
pp 

bannon kjeld schmidt cscw characters search context ec cscw 
proceedings european conference computer supported cooperative london september 
reprinted studies computer supported cooperative 
theory practice design bowers benford eds 
north holland amsterdam pp 

bellotti victoria abigail sellen design privacy ubiquitous computing environments ecscw 
proceedings third european conference computer supported cooperative september milan italy edited de michelis simone schmidt kluwer academic publishers dordrecht pp 

december carstensen schmidt cscw bentley richard tom rodden peter sawyer ian sommerville architecture tailoring cooperative multi user displays cscw 
proceedings conference computer supported cooperative toronto canada october november edited turner kraut acm press new york pp 

douglas william simon kaplan issues design collaborative systems lessons design computer supported cooperative groupware systems 
th international workshop informatics psychology sch austria june 
brooks jr frederick silver bullet essence accidents software engineering computer software state art selected papers vol 
house publishing usa pp 

bucciarelli louis reflective practice engineering design design studies vol 
july pp 

bucciarelli louis engineering design process making time 
high technology organizations edited temple university press philadelphia pp 

bucciarelli louis designing engineers mit press cambridge mass london 
button graham wes sharrock project organization collaborative design development software engineering computer supported cooperative 
journal collaborative computing vol 
pp 

dker susanne gr nb users designers mutual activity analysis cooperative activities systems design cognition communication edited middleton cambridge university press cambridge pp 

carstensen peter carsten rensen henrik fine mess reducing complexity articulation manufacturing coop 
proceedings international workshop design cooperative systems january antibes juan les pins france inria sophia antipolis pp 

carstensen peter computer supported coordination writings computer science department computer science roskilde university roskilde denmark 
carstensen peter carsten rensen social systematic 
mechanisms supporting coordination design computer supported cooperative 
journal collaborative computing vol 
pp 

carstensen peter carsten rensen talk bugs scandinavian journal information systems vol 
pp 

claudio teams markets systems 
innovation information technology cambridge university press cambridge 
conklin design rationale maintainability proceedings nd annual hawaii international conference system sciences edited shriver vol 
ii ieee computer society pp 

conklin jeffrey capturing organizational memory groupware edited coleman morgan kaufmann pp 

conklin jeff michael hypertext tool exploratory policy discussion cscw 
proceedings conference computer supported cooperative portland oregon september acm new york pp 

curtis bill herb krasner field study software design process large systems communications acm vol 
november pp 

december carstensen schmidt cscw dourish paul culture control media space ecscw 
proceedings third european conference computer supported cooperative september milan italy edited de michelis simone schmidt kluwer academic publishers dordrecht pp 

ellis gibbs rein groupware issues experiences communications acm vol 
january pp 

ellis gary nutt office information systems computer science computer supported cooperative edited greif morgan kaufmann san mateo pp 

engelbart douglas harvey working byte december pp 

bob groupware practical chi human factors computing systems seattle washington edited chew acm press pp 

gaver william thomas moran allan maclean lennart paul dourish kathleen carter william buxton realizing video environment europarc rave system chi conference proceedings 
acm conference human factors computing systems may monterey california edited bennett lynch acm press new york pp 

gaver william abigail sellen christian heath paul luff multiple views media space interchi conference human factors computing systems amsterdam edited acm press pp 

gaver william sound support collaboration ecscw 
proceedings second european conference computer supported cooperative edited bannon robinson schmidt kluwer academic publishers amsterdam pp 

grinter rebecca supporting articulation software configuration management systems computer supported cooperative 
journal collaborative computing vol 
pp 

grinter rebecca doing software development occasions automation formalisation ecscw 
proceedings fifth european conference computer supported cooperative september lancaster edited hughes kluwer academic publishers dordrecht pp 

grudin jonathan groupware cooperative problems prospects art human computer interface edited laurel addison wesley pp 
grudin jonathan cscw convergence development contexts chi 
acm sigchi conference human factors computing systems new orleans april may acm press pp 

gunn thomas manufacturing competitive advantage 
world class manufacturer cambridge mass 
helander martin ed design systems approach concurrent engineering ergonomics taylor francis london 
hughes john dave randall dan shapiro cscw discipline paradigm 
sociological perspective ecscw 
proceedings second european conference computer supported cooperative edited bannon robinson schmidt kluwer academic publishers amsterdam pp 

isaacs ellen trevor morris thomas rodriguez forum supporting interactive presentations distributed audiences cscw 
proceedings conference computer supported cooperative chapel hill north carolina october edited malone acm press new york pp 

december carstensen schmidt cscw ishii hiroshi seamless shared workspace cscw los angeles ca october new york acm press pp 

ishii hiroshi takashi narrowband isdn ecscw 
proceedings third european conference computer supported cooperative september milan italy edited de michelis simone schmidt kluwer academic publishers dordrecht pp 

ishii hiroshi minoru kobayashi iterative design seamless collaboration media cacm vol 
pp 

ishii hiroshi miyake open shared workspace computer video fusion approach cacm vol 
pp 

jeffay lin smith smith architecture artifact collaboration system matrix cscw 
proceedings conference computer supported cooperative toronto canada october november edited turner kraut acm press new york pp 

johansen robert groupware 
computer support business teams free press new york london 
johnson philip supporting exploratory cscw framework cscw 
proceedings conference computer supported cooperative toronto canada october november edited turner kraut acm press new york pp 

kaplan simon william douglas alan carroll orthogonal support aids collaborative tasks sch austria 
kaplan simon william douglas flexible active support collaborative conversation builder cscw 
proceedings conference computer supported cooperative toronto canada october november edited turner kraut acm press new york pp 

thomas frank victor gerd michael supporting design office procedures domino system studies computer supported cooperative 
theory practice design edited bowers benford north holland amsterdam pp 

morten designing cooperation cooperating design communications acm vol 
pp 

latour bruno modern french original translated catherine porter harvard university press cambridge mass 
malone thomas kum yew lai christopher fry experiments oval radically tailorable tool cooperative cscw 
proceedings conference computer supported cooperative toronto canada october november edited turner kraut acm press new york pp 

medina mora terry winograd rodrigo flores fernando flores action workflow approach workflow management technology cscw 
proceedings conference computer supported cooperative toronto canada october november edited turner kraut acm press new york pp 

norman donald cognitive artifacts designing interaction 
psychology human computer interface edited carroll cambridge university press cambridge pp 

december carstensen schmidt cscw olson judith stuart card thomas landauer gary olson thomas malone john leggett computer supported operative research issues behaviour information technology vol 
pp 

olson judith gary olson mack pierre wellner concurrent editing group interface interact third conference human computer interaction elsevier science publishers pp 

pedersen nby kim mccall thomas moran frank halasz tivoli electronic whiteboard informal workgroup meetings interchi conference human factors computing systems amsterdam edited acm press pp 

potts colin lara catledge collaborative conceptual design large software project case study computer supported cooperative 
journal collaborative computing vol 
pp 

rittel horst melvin webber dilemmas general theory planning policy sciences vol 
pp 

robertson toni embodied actions time place cooperative design educational computer game computer supported cooperative 
journal collaborative computing vol 
pp 

robertson toni joan designing distance study cooperative embodied cognition technology enable remote collaboration submitted degree doctor philosophy school computing sciences university technology sydney 
pp 
rodden tom john mariani gordon blair supporting cooperative applications cscw vol 
pp 

schmidt kjeld modes mechanisms interaction cooperative ris national laboratory box dk roskilde denmark 
ris 
schmidt kjeld bannon cscw seriously supporting articulation cscw vol 
pp 

schmidt kjeld tom rodden putting requirements cscw platform design computer supported cooperative groupware systems edited shapiro tauber ller north holland elsevier amsterdam pp 

originally published workshop cscw design sch austria june 
schmidt kjeld carla simone coordination mechanisms conceptual foundation cscw systems design computer supported cooperative 
journal collaborative computing vol 
pp 

schmidt kjeld carla simone peter carstensen betty hewitt carsten rensen computational mechanisms interaction notations facilities computational mechanisms interaction cscw edited simone schmidt university lancaster lancaster england pp 

schutz alfred stranger essay social psychology american journal sociology schutz collected papers vol 
nijhoff hague pp 

schutz alfred common sense scientific interpretations human action philosophy phenomenological research september schutz collected papers 
vol problem social reality edited maurice nijhoff hague pp 

december carstensen schmidt cscw shen access control collaborative environments cscw 
proceedings conference computer supported cooperative toronto canada october november edited turner kraut acm press new york pp 

simone carla monica ariadne flexible knowledge processes information technology knowledge management edited pareschi springer computer science 
press 
simone grasso coordinator domino chaos lotus notes computational mechanisms interaction cscw edited simone schmidt university lancaster lancaster england pp 

stefik bobrow foster revised early experiences multiuser interfaces tois vol 
april pp 

suchman lucy plans situated actions 
problem human machine communication cambridge university press cambridge 
keith robin maxwell matsumoto keith irwin business process environment supporting collaborative planning collaborative computing vol 
pp 

rensen carsten augmented bill materials social mechanisms interaction edited schmidt department computing lancaster university lancaster england pp 

rensen carsten board social mechanisms interaction edited schmidt department computing lancaster university lancaster england pp 

rensen carsten product classification scheme social mechanisms interaction edited schmidt esprit bra comic lancaster england pp 

comic deliverable 
ina wagner negotiating boundaries configuration management software development teams computer supported cooperative 
journal collaborative computing vol 
pp 

trevor jonathan tom rodden gordon blair cola lightweight platform cscw ecscw 
proceedings third european conference computer supported cooperative september milan italy edited de michelis simone schmidt kluwer academic publishers dordrecht pp 

winograd terry language action perspective design cooperative cscw 
proceedings 
conference computer supported cooperative austin texas december acm new york pp 

winograd terry fernando flores understanding computers cognition new foundation design ablex publishing norwood new jersey 
james daniel jones daniel roos machine changed world story lean production associates new york 
reprint published harper collins publishers new york 
december 
