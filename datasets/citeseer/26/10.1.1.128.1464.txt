conservation vs consensus peer peer preservation systems geoffrey roussopoulos harvard university eecs harvard edu problem digital preservation widely acknowledged underlying assumptions implicit design systems address problem analyzed explicitly 
identify basic approaches address problem digital preservation peer peer systems conservation consensus 
highlight design tradeoffs involved general approaches provide framework analyzing characteristics peer peer preservation systems general 
addition propose novel conservation protocol achieving preservation analyze effectiveness respect framework 

number peer peer approaches proposed address problem preservation :10.1.1.160.6666
attempt preserve data available systems face number challenges including dealing natural degradation storage media catastrophic events human errors attacks adversaries change data preserved providing incentives peers help preservation task 
systems differ approaches systems designers characterize approaches different ways archiving back ups digital preservation 
peer peer systems share basic premise peer interested preserving archival units aus uses aid resources peers achieve goal 
provide framework analyzing characteristics highlighting design tradeoffs peerto peer preservation approaches 
suppose preservation system involves au interest replicated subset peer population 
consider particular archival unit replicated subset consisting peers denoted pn 
pi denote copy archival unit held peer pi time simplify scenario somewhat presume peers enter system time 
assert basic approaches providing preservation consensus 
goal peers system come uniform agreement time say pi pj 
essence peer believes version au may questionable willing aggregate opinion community influence copy involves replacing current copy new 
conservation 
goal peer retain indefinitely exact copy au holds initially say pi pi 
essence peer believes version au starts right version attempts preserve copy peers disagree 
suffers damage au seeks help peers recover right version 
fundamental trade approaches 
peer happens wrong version conserving data detrimental preservation consensus helps preserve right version peers happen supply right version consensus version 
hand peer happens right version conserving data helps preserve right version consensus potentially cause get infected wrong version peers happen supply wrong version consensus version 
rest proceeds follows 
section framework analyzing design tradeoffs peer peer preservation systems describe factors affect success system 
section describe example peer peer system embodies consensus approach discuss falls design framework 
documented lockss peer peer digital preservation system 
section describe analyze sierra new peer peer approach digital preservation problem inspired lockss protocol departs fundamentally consensus lockss approach 
section conclude 

framework design considerations design choice conservation consensus straightforward involves balancing prioritizing various conflicting goals choosing best suited approach 
aid process discuss list considerations designing peer peer preservation system 
may useful considerations list particularly useful 
trust source au 
original source au perfectly trusted supply right version au consistently subscriber peers peers hold replicas au conservation better preservation strategy 
hand source supplies right version subscriber peers wrong version consensus help long subscribers right version outnumber wrong version able convince wrong version replace archived documents 
trust means au 
peers system unreliable means obtaining aus archived fraction peers obtain correct copy outset 
circumstance may provide argument favor consensus approach conservation lead preservation invalid copies 
frequency storage faults 
storage degradation frequent environment particular storage medium chosen prove difficult achieve consensus au 
substantial portion peers damaged state point time deadlock situation arise 
peers need get consensus copy recover damage hand peers need recover damage order achieve consensus 
consensus approach may suited systems high frequencies storage faults 
hand conservation approach avoid problem requires recover damage peer able respond au conserved 
frequency human error 
system operators commit errors instance loading au preserved manually recovering au damage occurrence conservation detrimental system may preserving incorrect au consensus help recover right au peers 
resource participants relevance likelihood unit service problem case archival unit interesting participants 
resource relevance high consensus conservation benefit relevance equally suitable 
resource relevance low cooperation require artificial incentives peer peer solution viable conservation better suited require frequent interactions specifically recovery damage smaller number peers participating compared consensus 
presence adversaries 
preservation systems may subject various attacks adversaries 
focus kinds attacks exploit peer interactions system stealth modification attack nuisance attack 
attack adversary goal modify data preserved victim peer detected 
nuisance attack adversary goal create nuisance victim peer instance raising intrusion detection alarms may require human operator intervention 
design preservation system takes adversary presence account typically involve considerations tolerance stealth modification acceptable users preservation system peers successfully attacked stealth modification adversary possibly recovering eventually 
tolerable peers incorrect au 
answer conservation consensus may equally suitable approaches 
system low tolerance stealth modification attacks conservation may appropriate influenced susceptible peers 
consider case substantial likelihood adversaries may subverted peers fear adversarial peers form large percentage peer population 
circumstance consensus dangerous strategy may cause wellbehaved peers right version receive invalid version conservation may appropriate 
downside conservation adversary able carry stealth modification attack successfully victim peer definition believes copy right prevented able recover adversary stopped actively attacking 
tolerance users tolerate frequent 
frequency possible nuisance attacks limited frequency invoking peer participation 
low tolerance nuisance attacks conservation approach may preferable peer relies peers suffers damage 

lockss example consensus approach section consider lockss example preservation system consensus approach discuss design respect framework 
lockss system preserves online academic journals peer peer auditing mechanism 
system provides preservation tool libraries budgets preservation typically quite small 
library peer crawls websites publishers agreed content preserved downloads copies published material academic journals library question subscribed 
cached information satisfy requests library users publisher website unavailable 
web crawling unreliable process making difficult peers determine manual inspection crawled material complete correct replicas aus interest downloaded 
peers need automated way determine copy correct 
lockss uses consensus purpose 
peers perform sampled auditing local copies ensure agrees consensus peers 
lockss design characteristics assumptions design framework trust source au trust means au low long relatively small portion peer population initially acquires incorrect au source procurement means 
frequency storage faults extremely low assumed years average frequency human error high resource relevance participants high libraries subscribe au publishers 
presence adversaries third peer population adversarial adversary assumed unlimited computation power unlimited identities 
tolerance stealth modification medium tolerance low looking characteristics assumptions considering suitability approaches described design framework clearly see system designers chosen consensus approach 
design consensus protocol lockss discuss factors relevant framework way 
peer maintains lists friends list list 
list list peers peer question discovered process participating lockss system 
friends list list peers friends peer knows externally outof band relationship entering system 
peer joins system lists starts containing peers friends list 
periodically rate faster rate natural bit degradation peer poller conducts opinion poll au 
peer takes random sample peers quorum list invites chosen peers voters poll 
voters vote au sending hashes individual copies au peer initiating poll 
poller compares votes receives local copy 
overwhelming majority hashes received agrees poller hash poller concludes copy agrees consensus resets refresh timer determine time check au 
overwhelming majority hashes disagree peer fetches repair obtaining copy au disagreeing peers re evaluating votes received 
peer alters copy au agrees consensus 
agreement disagreement poll deemed inconclusive poller raises alarm 
natural storage degradation assumed relatively infrequent occurrence peers simultaneously experiencing degradation 
inconclusive poll results indication attack progress 
lockss uses alarms way performing intrusion detection attack suspected humans called examine heal restart system 
requirement humans expected examine heal restart system time alarm raised happen poll theoretically worst case rea son system tolerate frequent nuisance attacks 
designers aim nuisance attacks infrequently possible 
poll poller updates list follows 
removes peers voted poll poll different sample peers 
second poller list adding nominated peers peers friends list 
nominated peers peers introduced voters voters invited participate poll 
solely discovery purposes poller replenish list 
vote au votes considered determining outcome poll 
votes implement admission control list 
votes agree poll outcome added list 
bias friends added called churn 
contents list determine outcome polls 
adding friends list poller vulnerable targeted attacks aimed friends 
adding friends list increases potential sybil attacks 
combination defense techniques effort balancing list refreshes churn lockss protocol achieves strong imperfect defense stealth modification adversary 
experimental results show probability point time user peer access bad au increased just 
observed third loyal non adversarial peers attacked stealth modification adversary starts initial subversion peer 
lockss authors reported successful nuisance attacks observed seldom discussed exactly happens alarm raised peer extent adversary rooted real impact nuisance attacks analyzed 

sierra example conservation approach key notion conservation approach peer fully confident version au stores right version attempts conserve version 
peer ignores version may look peers suffers bit rot storage failure event results au damaged point looks peers recovery 
just conservation notion consider simple solution implementing conservation storing au signed hash au remotely peers relying information recovering bit rot 
solution may perfectly acceptable peer topeer backup applications 
lockss application want exploit high resource relevance existing system reduce unnecessary storage overhead avoid long term secrets may unreasonable long term preservation order decades simple solution may suitable 
propose sierra conservation alternative lockss protocol 
sierra shares features lockss exploits resource relevance depend long term secrets 
borrows techniques lockss calling opinion polls sample peer population 
sierra primary goal departs fundamentally lockss 
sierra opinion polls consensus flavor blindly rely results polls 
refer sierra consensus approach achieving conservation goal 
characteristics assumptions relevant design framework trust source au trust means au high frequency storage faults low frequency human error low resource relevance participants high presence adversaries peer population adversarial adversary assumed unlimited computation power unlimited identities 
tolerance stealth modification zero tolerance tolerance low prioritize allowing higher presence adversaries having zero tolerance stealth modification attacks low tolerance nuisance attacks forced stronger assumption high trust source procurement means au 
conservation system assumes complete confidence local au bit rot occurrence need peer rely peers recover au 
remaining time peer self sufficient terms preserving au 
alongside stored au peer stores hash au periodically checks au hash determine time need 
addition introduce host defense techniques help peer conserve au 
peers call polls periodically lockss 
stored au hash match poller ignores result poll 
poller updates list lockss protocol change 
voters votes disagree poller au removed list providing votes poller 
au local hash match poller calls poll enters time need state remains state polls system defined parameter 
time need poll note protocol lockss domain may unreliable procurement means hybrid consensus conservation approaches phase consensus obtain stabilized consensus copy conservation preserve stable copy long term basis poller checks see peers minority agree 
minority threshold number peers agree poller raises alarm notify local operators 
poller repairs version au stored majority 
minority alarm indicates majority minority potentially adversarial 
alarm raised operator expected examine choose right different contending versions au peers supplied incorrect versions 
note larger stealth modification attack detected higher chance poller find subsequent poll minority threshold number peers agree 
sierra voters vote self sufficient state stored au hash match decline poll invitation 
analysis sierra protocol uses basic underlying features lockss protocol calling polls managing peer topeer network analyze effects theoretically start examining existing theoretical properties lockss 
due lack space omit details lockss analysis 
attaining presence victim peer list means protocol adversary launch stealth modification nuisance attack 
call strength adversarial presence proportion list peers adversarial adversary 
way adversary attain higher peer list act loyal non malign voting correct version au entrance poller list 
consider adversary lockss 
model expected number malign adversarial peers mrt loyal peer list time uniform distribution adversaries population function time set system parameters see 
rt ct mrt expected number steady state equilibrium sierra introduces blacklisting means peer may vote invalid copies list recurrence equation sierra somewhat different 
opportunity adversary set malign peers pm vote invalid copy increase expected symbol default description churn rate ratio initial number malign peers quorum voters needed poll total population list size fig 

parameters sierra analysis 
lists target peer pt occurs pt suffers bit rot enters time need state 
suppose threshold raising alarm event minority agreement 
stealth modification adversary seeks win poll avoid detection malign peers vote invalid copy au exist malign peers poll called pt 
adversary attacks ends losing hard earned due blacklisting 
optimal strategy stealth modification adversary case malign peers poll try increase 
recurrence equation change stealth modification adversary assume optimal adversary strategy blacklisting 
adversary wants simply create nuisance raises alarm malign peers vote copy au 
act creating nuisance benefit having peers vote invalid copy best interest adversary peers pm pm perform task 
adversary lose due blacklisting creates nuisance recurrence equation changes 
introduce variables mean time failures terms number polls particular storage system likelihood adversary choose create nuisance likelihood adversary create nuisance peer time need 
represents extent adversary knowledge bit rot occurs particular loyal peer 
adversary perfect knowledge covert channel band means believe realistic cases closer 
adversary tries create nuisance peer pt supplying malicious votes pt evict adversarial peers list 
new recurrence represented equations rt ct mrt mrt rt interested powerful adversaries assume rest analysis adversary perfect knowledge peers suffering bit attack create nuisance peer time need 
effectiveness stealth modification attacks consider question conditions lead adversary able carry attack successfully detected 
attack possible adversary achieved high close victim list detected minority threshold alarm polls called time 
importantly adversary able sustain sufficient number consecutive polls specifically time need polls 
adversary able magically attack exactly damage just occurred victim perfect knowledge victim damage occurrences 
mathematical model discussed earlier show adversary able carry attacks successfully 
recall optimal adversary strategy stealth modification lurking continuously attains 
find adversary unable attain high ensure poll invitations able carry successful attacks 
shows result equations obtain equilibrium value expected number malicious peers list loyal peer different initial subversion values 
see graph initial high equilibrium reaches required ensure poll invitations invitations quorum invitations 
initial equilibrium initial subversion fig 

equilibrium achieved varying initial subversion 
presuming mtbf years nuisance probability minority threshold 
note assumed adversary perfect knowledge victim damage occurrences 
adversary band means acquire knowledge close impossible adversary able entire period victim peer healthy attack exactly suffers damage 
effectiveness nuisance attacks note sierra maximum frequency adversary create nuisance limited bit rot occurrence poll lockss 
observe creating nuisance comes associated penalty peers voting invalid copy operator notified alarm return list 
want show penalty associated blacklisting creates nuisance attacks 
analysis consider adversaries having initial subversion peer population 
small value subversion adversary able carry nuisance attacks 
second adversary higher carry nuisance attacks lose quickly loss suffers due blacklisting 
mtbf years mtbf years mtbf years mtbf years probability creating nuisance fig 

varying nuisance probability 
presuming initial subversion minority threshold 
shows happens vary probability adversary creates nuisance 
observe adversary complete knowledge peer au damaged may substantial incentive create nuisance frequently particularly mtbf sufficiently short adversary time restore representation peer list successive failures 
mtbf years mtbf years mtbf years mtbf years minority threshold fig 

varying minority threshold 
presuming initial subversion nuisance probability 
note axis shows minority threshold absolute number peers quorum 
shows effect varying minority threshold 
see lower minority thresholds adversary incurs lesser penalty adversary incentive create nuisance 
hand know intuitively increasing threshold contributing better defense nuisance attacks leads opportunities stealth modification attacks 

preservation problem 
peer peer systems aimed providing preservation solution face number conflicting design considerations force designers difficult choices 
framework considering tradeoffs involved designing system 
discussed example systems respect framework lockss sierra embody basic approaches preservation consensus conservation respectively 
observe lockss allows assumptions source procurement means au achieving moderately strong defense stealth modification nuisance attacks 
hand sierra achieves stronger defense attacks expense making assumptions high trust source procurement means au 

acknowledgments people helpful feedback suggestions mary baker giuli rachel petros maniatis bryan david rosenthal 
arl association research libraries 
arl statistics 
www arl org stats pub intro html 
burkard :10.1.1.160.6666
herodotus peer peer web archival system master thesis mit jun 
cox brian noble 
honor thieves peer peer storage 
proceedings nineteenth acm symposium operating systems principles pages bolton landing ny usa october 
dabek kaashoek karger morris stoica 
widearea cooperative storage cfs 
sosp 
douceur 
sybil attack 
st intl 
workshop peer peer systems 
distributed disk backups 
available athttp www com 
maniatis roussopoulos tj giuli rosenthal baker 
preserving peer replicas rate limited sampled voting 
sosp 
roussopoulos 
predicting adversary lockss system 
technical report tr harvard university october 
rosenthal roussopoulos maniatis baker 
economic measures resist attacks peer peer network 
workshop economics peer peer systems berkeley ca usa june 
roussopoulos tj giuli baker maniatis rosenthal mogul 

iptps 
wallach 
survey peer peer security issues 
intl 
symp 
software security 
