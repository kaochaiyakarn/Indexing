ieee transactions robotics automation vol 
october probabilistic pursuit evasion games theory implementation experimental evaluation ren vidal student member ieee student member ieee jin kim associate member ieee david shim member ieee shankar sastry fellow ieee consider problem having team unmanned aerial vehicles uavs unmanned ground vehicles ugvs pursue second team evaders concurrently building map unknown environment 
cast problem probabilistic game theoretical framework consider computationally feasible greedy pursuit policies local max global max 
implement scenario real uavs ugvs propose distributed hierarchical hybrid system architecture emphasizes autonomy agent allows coordinated team efforts 
describe implementation architecture fleet uavs ugvs detailing components high level pursuit policy computation map building interagent communication low level navigation sensing control 
simulation experimental results real pursuit evasion games involving fleet uavs ugvs evaluate pursuit policies relating expected capture times speed intelligence evaders sensing capabilities pursuers 
index terms autonomous vehicles multiagent coordination control multirobot systems pursuit evasion games 
berkeley bear project research effort university california berkeley encompasses disciplines hybrid systems theory navigation control computer vision communications multiagent coordination 
goal research integrate multiple autonomous agents heterogenous capabilities coordinated intelligent system modular scalable fault tolerant adaptive changes task environment able efficiently perform complex missions 
highlights theory implementation evaluation probabilistic pursuit evasion games bear test bed unmanned aerial vehicles uavs unmanned ground vehicles ugvs shown fig 

scenario team uav ugv pursuers attempts capture evaders bounded unknown environment 
manuscript received march revised march 
recommended publication associate editor arai editor hutchinson evaluation reviewers comments 
supported office naval research army research office daah 
part ieee conference decision control orlando fl 
vidal kim sastry department electrical engineering computer science university california berkeley berkeley ca usa mail eecs berkeley edu eecs berkeley edu jin eecs berkeley edu sastry eecs berkeley edu 
shim maxtor milpitas ca usa mail david shim maxtor com 
digital object identifier tra ieee fig 

berkeley test bed pursuit evasion games 
cast problem probabilistic game theoretical framework combines pursuit evasion games map building single problem avoids conservativeness inherent classical worst case approaches 
consider computationally feasible pursuit policies local max global max prove global max policy exists upper bound expected capture time depends size arena speed sensing capabilities pursuers 
order implement pursuit evasion game scenario fleet uavs ugvs propose distributed hierarchical hybrid system architecture segments control task different layers abstraction high level pursuit policy computation map building interagent communication low level tactical planning navigation regulation sensing 
architecture modular scalable allowing divide conquer complex large scale system developing integrating simpler components 
traditional sense model plan act decomposition architecture takes consideration dynamics agent system achieve real time performance 
evaluate proposed probabilistic framework hierarchical architecture simulation experimental results fleet uavs ugvs 
expected capture time performance criterion compare local max global max pursuit policies numerous situations varying speed intelligence evaders sensing capabilities pursuers 
experimental results show global max policy outperforms local max policy realistic situation dynamics agent included computer vision detect evaders 
furthermore experiments show global max policy robust vidal probabilistic pursuit evasion games theory implementation experimental evaluation changes conditions game 
designed randomly moving evader policy successful catching intelligent evader 
previous research pursuit evasion games classical approach pursuit evasion games build map terrain play game known environment 
map building stage techniques proposed see 
bayesian estimation implemented extended kalman filter 
main problem map building techniques time consuming computationally expensive case simple dimensional rectilinear environments 
hand literature pursuit evasion games see assumes worst case motion evaders accurate map environment 
practice results overly conservative pursuit policies applied inaccurate maps built noisy measurements 
pursuit evasion game map building problems combined single probabilistic framework 
basic scenario considers multiple pursuers trying capture single randomly moving evader 
extended scenario consider multiple evaders proposed simple vision algorithm evader detection 
included supervisory agents helicopter detect evaders capture 
parallel theoretical pursuit evasion games developing test bed multiagent coordination control 
real time control system regulation navigation uav 
architecture pursuit evasion games described implementations navigation communication sensing layers 
implementation high level mission coordination including components pursuit policy computation map building 
pursuit evasion games considers evaders actively avoid pursuers described dynamic programming solution equilibrium partial information markov process proposed 
vision pursuit evasion games pursuers optical flow determine number moving evaders position orientation 
implementation evaluation techniques forthcoming 
previous research multirobot systems multiagent pursuit evasion game scenario considered fits general framework multirobot systems 
exists large body literature multirobot systems addressing problems machine learning techniques multiagent systems hybrid algorithms multiagent control multirobot localization distributed sensor fusion formation control :10.1.1.1.8859:10.1.1.1.8859
application multirobot systems robot soccer refer reader centralized coordination control multiple robots completely distributed systems :10.1.1.40.1850
ii 
pursuit evasion scenario section describes theoretical foundations probabilistic pursuit evasion games including map building pursuit policies evasion policies 
describe vision algorithm obstacle evader detection 
notation 
denote relevant probability space set possible events related pursuit evasion game family subsets forming algebra probability measure sets events write conditional probability boldface symbols denote random variables 
probabilistic framework consider finite environment square cells containing unknown number fixed obstacles set cells occupied pursuers evaders 
pursuers evaders allowed move cells pursuer evader obstacle 
pursuer evader collects information discrete time instants measurement triple values measurement space denotes measured positions pursuers set cells evaders obstacles detected 
set finite sequences elements sequence measurements taken time practice measurements taken certain subset visibility region 
denote visibility region pursuer 
evader time sensor information assumed imperfect 
simple sensor model probability false positives false negatives pursuer detecting evader obstacle 
assume pursuers perfect knowledge locations capture evader defined follows estimated positions ground pursuer evader time respectively 
say evader captured ground pursuer time metric prespecified capture distance 
captured evaders removed game 
capture time evaders defined time instant evader captured 
assume aerial pursuers detect share information positions evaders capture 
map building assume pursuers able identify evader separately evader moves independently evaders 
loss generality assume omit subscript identifying evader 
posterior probability evader assumption unrealistic general valid global positioning system gps pursuer localization vision evader detection 
ieee transactions robotics automation vol 
october cell time measurement history similarly conditional probability having obstacle cell pursuers estimates evader obstacle maps obtain new measurement recursively estimate steps 
pursuers compute evader captured normalizing constant independent 
number false positives number true negatives number false negatives number true positives 
recall probability sensor reporting false positives false negatives respectively 
second pursuers compute obstacle map order compute pursuers assume markov model motion evader determined probability evader moves unoccupied cell set cells adjacent dated evader map pursuit policies measurement history pursuers need decide move time instant 
desired position pursuers time pursuers occupy cell element control action space define pursuit policy random function measure performance specific pursuit policy expected capture time dependence pursuit policy general complex finding optimal policy minimizes look efficiently computable suboptimal policies performance 
introduce notion persistent pursuit policy show guarantees certain degree success pursuers 
computationally efficient greedy policies show satisfies persistence property certain assumptions distribution obstacles sensing models 
persistent average pursuit policies specific pursuit policy said persistent average integer conditional probability capturing evader set consecutive time instants starting greater equal call period persistence 
persistent average pursuit policies satisfy lemma persistent average pursuit policy period 
lemma shows pursuit policy persistent average probability capturing evader finite time equal 
lemma gives simple upper bound expected capture time evader lemma proved gives sufficient condition policy persistent average 
lemma set sequences measurements length associated evader time sufficient condition pursuit policy persistent average period existence case holds admissible policies obstacle density sensor models order apply lemmas specific pursuit policy need extra assumptions dynamics pursuers distribution obstacles sensor models evader detection 
restrict attention pursuit policies respect dynamics vehicle 
set cells pursuer reach cell time step provided cells empty say pursuit policy admissible sequence measurements pursuers positions specified measurement assume density obstacles environment small cell reached finite amount time 
formally step reachable set computed offline parametric function polynomial time algorithms robust semidefinite programming shown 
vidal probabilistic pursuit evasion games theory implementation experimental evaluation assumption exists finite sequence assume single time step conditional probability evader cell decay certain amount pursuer reaches case probability evader may decay zero evader possible conclude measured data obstacle probability 
assumption holds sensor models 
assumption positive constant sequence evader captured measurements list pursuers positions specified measurement probability obstacle location measurements time strictly pursuit policy greedy policies assumptions previous section focus finding efficiently computable suboptimal pursuit policies 
consider greedy policies local max global max 
policies try maximize probability capturing evader time instant difference local max searches step reachable cells global max searches entire map 
local max policy 
policy pursuer moves cell step reachable set highest probability containing evader evader maps represents probability evader cell time measurements notice local max policy advantageous scalability assigns importance local measurements searching regardless size environment policy computationally efficient computed independently pursuer decentralized pursuit evasion game 
shown general local max policy persistent average 
global max policy 
global max policy searches entire map order compute control maximizes probability capturing evader 
computationally intensive scale local max policy size show nice property persistent average 
take arbitrary sequence measurements compute cell map maximum probability having evader define desired positions pursuers define global max pursuit policy integer underlying navigation policy takes list desired positions pursuers measurements produces position reachable single time step step closer concludes obstacle theorem assumptions hold global max policy admissible pursuit policy persistent average period maximum number steps needed travel cell 
lemma 
proof definition navigation policy admissible 
order prove persistent average show hypotheses lemma hold 
definition number cells pursuer takes steps reach policy exist pursuer just step away consider time set conditional probability finding evader time assumption fact takes steps reach wehave applying lemmas shows evader captured evader intelligent evasion pursuit policies described previous section designed randomly moving evader section iv apply policies case intelligent evader 
allow intelligent evader build map obstacles pursuers employ local min global min policy minimize probability captured 
local min global min evasion policies defined similarly local max global max pursuit policies 
vision detection obstacles evaders assume pursuers equipped camera sense environment 
show estimate position obstacles evaders observed positions image plane pose rotation translation camera pursuer 
define coordinate frames inertial frame uav frame camera base camera head ugv frame relative pose frame respect frame skew symmetric matrix associated axis usual basis observer ieee transactions robotics automation vol 
october uav estimates yaw pitch roll angles helicopter estimate position 
predefined known transformation estimates pan tilt angles camera 
pose camera head respect fixed inertial frame estimate position obstacle evader image plane 
position obtained fixed coordinate evader ground assuming flat terrain camera calibration matrix 
obstacles evaders observed ground pursuer equation applied minor changes 
replace frame frame ugv frame 
estimate heading ugv estimate position observer predefined fixed transformation 
vision system estimate visibility region vehicle 
ground pursuer evader visibility region defined trapezoid vertices computed applied vertices fixed rectangle located horizon image plane 
aerial pursuer camera pointing rectangle image plane chosen image results approximately rectangular visibility region 
iii 
system architecture order implement pursuit evasion game scenario real uavs ugvs propose hierarchical hybrid system architecture segments control agent different layers abstraction shown fig 

different layers allow high level intelligent control strategies applicable uavs ugvs 
abstracting away details sensing control agent gain interoperability unified framework high level intelligent pursuit policies platforms 
section gives overview different layers abstraction system architecture details implementation fleet uavs ugvs 
architecture design inspired architectures automated highway systems air traffic management systems flight management systems 
high level strategy planner map builder strategy planner responsible high level intelligent control vehicles pursuit policy computation described section ii 
maintains state space system useful mission planning tasks agents mission objectives 
map builder gathers sensor information vehicle computes probabilistic maps locations obstacles evaders described section ii 
fig 

system architecture strategy planning map building implemented matlab run laptop visualization 
tactical planning regulation sensing implemented run uav ugv computers 
low level tactical planner regulation sensing tactical planner uses state information maintained strategy planner controlling motion vehicle 
converts strategic plans sequence way points flight modes trajectory planner produce realizable safe trajectory dynamic model vehicle safety routines obstacle avoidance 
final trajectory sent regulation layer performs real time control vehicle specified trajectory 
vehicle observations environment vision system state variety sensors position orientation 
sensor fusion techniques improve quality measurements 
implementation high level control layers implemented strategy planner map builder matlab simulink environment part unified platform conduct simulations experiments 
furthermore transmission control protocol tcp interface connect matlab strategy planner map builder uavs ugvs wireless lan 
unified platform able seamlessly combine experiments simulations 
simulation mode strategy planner sends control commands tcp uav simulator obtained system identification ugv simulator 
visibility regions simulated state variables vehicle detection evaders obstacles simulated probabilistic sensor models 
experiment mode strategy planner sends commands tcp actual uavs ugvs vidal probabilistic pursuit evasion games theory implementation experimental evaluation table simulation results map builder receives vehicle locations gps inertial navigation system ins visibility regions locations obstacles evaders vision system 
implementation low level control layers uavs fleet consists custom designed uavs yamaha max industrial helicopters 
trajectory planner regulation layers implemented embedded pc running qnx real time operating system os 
low level controller tcp interface asynchronously receives desired setpoints high level strategy planner reports uavs current position 
vision system detect obstacles evaders implemented second pc running linux 
see details 
ugvs fleet consists pioneer terrain ground robots 
tactical trajectory planner regulation layer run microcontroller vision system runs pc running linux 
see details 
uavs ugvs share components sensing communication ieee wireless lan connectivity differential gps pc pentium mhz pc running linux color tracking vision system 
components described detail 
iv 
simulation experimental results section simulation experimental results pursuit evasion games fleet uavs ugvs 
table presents mean capture time simulations pursuers evader random initial conditions 
simulations evaluate performance pursuit policies randomly moving evader types visibility regions omnidirectional view trapezoidal view simulations evaluate performance global max policy trapezoidal view different speeds levels intelligence evader 
table ii presents results real experiments ugv pursuers ugv evader 
fig 
shows evolution experiment photographs corresponding snapshots created map builder 
darker cells map experiments performed environment square cells square side centered set difference operator ar denotes isosceles triangle vertex height angle table ii experimental results fig 

experiment actual game ugv pursuers ugv evader 
pursuers move global max policy omnidirectional visibility region 
evader moves randomly fig 

experiment ugv pursuers versus slow ugv evader 
represent regions higher probability having evader 
figs 
show map building snapshots experiments respectively 
fig 
shows snapshots experiment game uav ugv pursuers evader 
game parameters similar table ii pursuer speed ieee transactions robotics automation vol 
october fig 

experiment ugv pursuers versus fast ugv evader 
fig 

experiment uav ugv pursuers versus ugv evader 
initial configuration evader left 
uav pursuer detects evader 
ugv pursuers head global max 
ugv pursuer captures evader 
evader speed evader moved randomly pursuers trapezoidal visibility regions followed global max policy 
capture time discussion simulation experimental results capture time versus visibility region simulations table experiments table ii show regardless pursuit policy pursuers trapezoidal vision outperform omnidirectional vision 
time instant visibility regions cover approximately number cells pursuer trapezoidal view change heading covering new cells pursuer omnidirectional view 
agrees natural predator prey systems 
capture time versus pursuit policy simulations table show global max policy generally outperforms local max policy 
expected global max policy persistent average local max 
capture time versus evasion policy simulations table evaluate global max pursuit policy evader random global min evasion policy 
global max pursuit policy designed randomly moving evader guarantee expected capture time finite case intelligent evader 
conclude simulations takes longer capture intelligent evader randomly moving 
fast evader takes longer capture intelligent randomly moving slow evader takes longer 
capture time versus evader speed simulations table show takes longer capture slower random evader faster random evader 
faster random evader visits cells map increasing chances detected 
argument applied fig 

higher speed allows move away visibility region soon moves visibility region quickly captured 
uav pursuer versus ugv pursuer simulation results experiment show local max policy similar performance uav ugv pursuer global max policy performs better uav pursuer 
probabilistic approach pursuit evasion games involving uavs ugvs 
considered computationally feasible greedy pursuit policies local max global max 
proved global max policy exists upper bound expected capture time depends size arena speed sensing capabilities pursuers 
scenario fleet uavs ugvs hierarchical hybrid system architecture 
experiments evaluating performance proposed pursuit policies respect speed intelligence evaders sensing capabilities pursuers 
results show global max pursuit policy outperforms local max policy realistic situation dynamics agent included computer vision detect evaders 
acknowledgment authors hespanha sharp rashid contributions 
thrun burgard fox probabilistic approach concurrent mapping localization mobile robots mach 
learning auton 
robots vol 
pp 

deng kameda papadimitriou learn unknown environment rectilinear case acm vol 
pp 
mar 
isaacs differential games 
new york wiley 
bas ar dynamic noncooperative game theory nd ed 
philadelphia pa siam 
visibility pursuit evasion extension curved environments proc 
ieee conf 
robotics automation pp 

suzuki yamashita searching mobile intruder polygonal region siam comput vol 
pp 
oct 
vidal probabilistic pursuit evasion games theory implementation experimental evaluation hespanha kim sastry multiple agent probabilistic pursuit evasion games proc 
th ieee conf 
decision control vol 
pp 

vidal rashid sharp kim sastry pursuit evasion games unmanned ground aerial vehicles proc 
ieee icra vol 
pp 

shim kim sastry hierarchical control system synthesis unmanned aerial vehicles proc 
aiaa conf 
guidance navigation control pp 

kim vidal shim sastry hierarchical approach probabilistic pursuit evasion games unmanned ground aerial vehicles proc 
th ieee conf 
decision control pp 

hespanha sastry probabilistic pursuit evasion games step nash approach proc 
th ieee conf 
decision control pp 

vidal sastry vision detection autonomous vehicles pursuit evasion games proc 
ifac world congr 
automatic control 
stone veloso multiagent systems survey machine learning perspective auton :10.1.1.1.8859
robots vol 
pp 

hybrid algorithms multi agent control mobile robots proc :10.1.1.1.8859
int 
joint conf 
neural networks vol 
pp 

bekey collective localization distributed kalman filter approach localization groups mobile robots proc 
ieee icra pp 

martin balch distributed sensor fusion object position estimation multi robot systems proc 
ieee conf 
robotics automation pp 

desai kumar control changes formation team mobile robots proc 
ieee conf 
robotics automation pp 

han veloso perception reasoning learning multiple agent systems robot soccer proc 
ieee conf 
robotics automation vol 
pp 



lee 
perception reasoning learning multiple agent systems robot soccer proc 
ieee int 
conf 
systems man cybernetics pp 

kitano asada kuniyoshi noda osawa matsubara robocup challenging problem ai robotics robocup robot soccer world cup new york springer verlag pp 

lecture notes artificial intelligence 
asada hosoda cooperative behavior acquisition mobile robots dynamically changing real worlds vision reinforcement learning development artif :10.1.1.40.1850
intell vol 
pp 

hespanha kim sastry multiple agent probabilistic pursuit evasion games tech 
rep dept eecs univ calif berkeley mar 
vidal schaffert sastry decidable semi decidable controller synthesis classes discrete time hybrid systems proc 
th ieee conf 
decision control pp 

sastry verified hybrid controllers automated vehicles ieee trans 
automat 
contr vol 
pp 
apr 
pappas tomlin sastry generation architecture air traffic management systems proc 
th ieee cdc dec pp 

koo hoffmann shim sastry hybrid control autonomous helicopter proc 
ifac workshop motion control pp 

sharp sastry vision system landing unmanned aerial vehicle proc 
ieee int 
conf 
robotics automation pp 

rashid design implementation multi agent control pursuit map building thesis univ calif berkeley 
ren vidal received degree universidad cat lica de chile degree university california berkeley currently working ph degree electrical engineering computer sciences 
research interests include multiple view geometry motion segmentation omnidirectional vision vision control mobile robots hybrid systems game theory 
received degrees electrical engineering computer sciences respectively university california berkeley currently working ph degree electrical engineering computer sciences 
research interests include computer vision vision control mobile robots omnidirectional vision hybrid systems game theory 
jin kim received ss 
degree korea advanced institute science technology korea ph degrees mechanical engineering university california berkeley ucb respectively 
currently postdoctoral researcher electrical research laboratory ucb 
current research interests include machine learning control systems robust control modeling unmanned vehicles 
dr kim member aiaa 
david shim received degrees seoul national university seoul korea respectively ph degree university california berkeley mechanical engineering 
currently staff engineer advanced technology group maxtor milpitas ca 
research interests include unmanned aerial vehicles hierarchical motion control systems high performance positioning systems 
dr shim member asme aiaa 
shankar sastry received ph degree university california berkeley 
faculty massachusetts institute technology cambridge ma assistant professor harvard university cambridge ma chaired gordon mckay professor 
currently professor chairman department electrical engineering computer sciences university california berkeley 
coauthored technical papers books including nonlinear systems analysis stability control new york springer verlag 
areas research embedded autonomous software computer vision nonlinear adaptive control robotic control hybrid systems embedded systems sensor networks biological motor control 
dr sastry elected national academy engineering 
