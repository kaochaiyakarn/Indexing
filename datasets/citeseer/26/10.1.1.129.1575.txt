arxiv cs cs cr mar secrecy multiagent systems joseph halpern kevin neill department computer science cornell university halpern cs cornell edu february introduce general framework reasoning secrecy privacy requirements multiagent systems 
definitions extend earlier definitions secrecy shannon sutherland 
roughly speaking agent maintains secrecy respect second agent rule possibilities behavior state agent 
show framework handle probability nondeterminism clean way useful reasoning asynchronous systems synchronous systems suggests generalizations secrecy may useful dealing issues resource bounded reasoning 
show number known attempts characterize absence information flow special cases definitions secrecy 
past decades attempts define means system perfectly secure sense group agents unable deduce behavior 
generally papers computer science variety different settings defined properties secrecy privacy discussed techniques achieving properties 
computer security literature early definitions perfect security different intuitions 
noninterference authors supported part nsf iri iis onr dod multidisciplinary university research initiative muri program administered onr 
kevin neill supported part graduate fellowship national science engineering research council canada 
preliminary version appeared th ieee computer security foundations workshop 
goguen meseguer attempted capture intuition classified agent unable interfere unclassified agent sutherland attempted capture intuition unclassified agent unable deduce state classified agent 
definitions involved notion information flow taken system secure impossible information flow classified user unclassified user 
basic ideas mind definitions security provided wide variety system models including semantic models encode possible input output behaviors computing system language models deal process algebras traditional constructs imperative programming languages 
focardi gorrieri provide classification security properties expressed process algebras sabelfeld myers give survey language techniques 
sutherland definition simple idea system described set worlds encode local states classified unclassified users security maintained classified unclassified states independent sense unclassified user totally rule classified state local state 
shall see closely related shannon probabilistic definition secrecy context cryptography requires classified unclassified events probabilistically independent 
words unclassified agent posterior probability classified event prior probability event began interacting system 
definitions noninterference goguen meseguer early quite different flavor definitions shannon sutherland 
typically represent system set input output traces deem system secure set traces closed operations add remove classified events 
variants idea proposed deal issues verification system composition timing attacks 
definitions useful solving variety technical problems complexity view obscured simplicity earlier definitions notion independence 
criticized inability deal variety security concerns claim basic idea captures notions secrecy privacy elegant useful way 
define secrecy terms agent knowledge runs framework fagin halpern moses vardi 
definitions viewed generalizing notion systems agents interact time 
runs systems framework generalizes standard input output trace models definitions noninterference 
trace approach concerned primarily input output values exchanged user observer interacts system 
trace approach possible define secrecy systems characterized observable input output events 
insufficient modeling variety interesting systems 
focardi gorrieri point example difficult deal issues deadlock purely trace approach 
difficult represent agent notion time systems may exhibit differing degrees synchrony 
shall see added generality runs systems approach lets deal issues straightforward way 
frameworks reasoning secrecy information flow assumed implicitly coarse notion uncertainty 
agent knows certainty fact true definition secrecy respect agent amounts characterization facts agent know facts think possible 
precisely intuition precise section 
literature definitions called possibilistic consider agents consider possible impossible 
practice coarse grained notion uncertainty simply weak easy examples agent possibilistic secrecy intuition suggests secrecy maintained 
extend definitions secrecy incorporate probability fine grained notion uncertainty 
just shannon definitions secrecy viewed probabilistic strengthening sutherland definition definitions probabilistic secrecy generalize possibilistic definitions give 
fact sense definitions different measure uncertainty point precise generalize plausibilistic secrecy section 
approach additional advantage enables provide syntactic characterizations secrecy logic includes modal operators reasoning knowledge probability 
discuss means fact depend state agent show secrecy characterized requirement unclassified agents know fact depends state classified agent 
probabilistic case requirement unclassified agents think fact equally points system 
knowledge characterization lets precise connection secrecy classified agent respect unclassified agent notion secret fact system agent allowed know 
syntactic approach opens door natural generalizations information flow properties require secrecy facts allowing consider notions secrecy computational notions knowledge may appropriate resource bounded agents 
show section approach provides insight number definitions secrecy privacy noninterference proposed literature 
illustrate point considering separability mclean generalized noninterference mclean strategies johnson probabilistic noninterference gray syverson :10.1.1.147.3349
goals section obviously convince reader definitions fact general claim 
importantly hope providing unified framework comparing definitions secrecy facilitate cross fertilization ideas 
rest organized follows 
section reviews multiagent systems framework definition knowledge multiagent systems 
section define secrecy relate sutherland notion 
consider syntactic definitions secrecy logic knowledge 
section considers probabilistic secrecy section considers plausibilistic secrecy 
section compare definitions security literature 
conclude section 
proofs deferred appendix 
knowledge multiagent systems multiagent system consists agents local state point time 
assume agent local state encapsulates information access 
security setting local state agent include initial information regarding keys messages sent received reading clock 
basic framework assumptions precise nature local state 
view system global state tuple consisting local state agent state environment environment consists relevant system contained state agents 
global state form se sn se state environment si agent state run function time global states 
intuitively run complete description happens time possible execution system 
point pair consisting run time simplicity take time range natural numbers 
point system global state 
se sn take ri si agent local state point 
formally system consists set runs executions 
pt denote points system system ki set points pt thinks possible ki pt ri 
set ki called information set intuitively corresponds system dependent information encoded local state point 
natural question ask runs come 
framework deal issue practice interested systems runs generated simple set rules communication security protocol program written programming language process described concurrent process language 
translating rules set runs straightforward doing useful inasmuch forces think carefully features system essential relevant safety correctness issues interested 
turn determines form local states 
reason formally secrecy multiagent systems logic knowledge time 
starting set primitive propositions close negation conjunction modal operators ki context security protocols set consist primitive propositions corresponding facts key agent sent message 
usual ki means agent knows ki point true points ki 
true point true point run time 
course possible define temporal operators operator prove particularly useful definitions 
standard approach fagin halpern moses vardi give semantics language 
interpreted system consists pair system interpretation primitive propositions assigns truth values primitive propositions global states 
global state arises true false 
course induces interpretation points pt simply take 
define means formula true point interpreted system written induction structure formulas iff true iff iff ki iff ki iff exists 
usual say valid write points similarly satisfiable point abbreviate ki pi 
read pi agent possible 
note pi exists point ki 
systems framework lets express natural way standard assumptions systems 
example reason synchronous systems agents know time 
formally synchronous agents points ri standard assumption implicitly systems models considered security literature agents perfect recall 
roughly speaking agent perfect recall reconstruct complete local history 
synchronous systems example agent local state changes tick external clock agent having perfect recall implies sequence ri ri encoded ri 
formalize intuition agent local state sequence point sequence local states gone run time consecutive repetitions 
time time run agent gone sequence si si si si local states si local state sequence si si intuitively agent perfect recall current local state encodes local state sequence 
formally say agent perfect recall system points pt ki agent local state sequence 
agent perfect recall remembers local state sequence times 
easy check perfect recall key property ki exists ki 
see fagin halpern moses vardi discussion definition 
secrecy nonprobabilistic systems defining secrecy section give definitions secrecy motivate definitions runs systems model 
roughly speaking define secrecy ensure low level agents know state high level agents 
section formalize intuitions epistemic logic section 
strongest notion secrecy consider section requirement low level agent local state able determine local state high level agent 
specifically low level agent able rule possible high level state 
terms knowledge means low level agent know high level state incompatible current low level state 
ensure low level agent able rule possible high level states insist low possible low level state compatible possible high level state 
definition agent maintains total secrecy respect system points pt ki kj 
note take low agent high level agent definition just formalizes informal definition 
point rule possible local state total secrecy strong property 
imaginable system fact strong useful 
important respects strong 
respect fact total secrecy protects state high level agent 
systems want part high level agent state kept secret low level agent 
example want high level agent able see state low level agent case definitions strong rule correlation states high level low level agents 
correct situation extracting state information relevant ensuring relevant part state kept secret 
definition information function function pt range depends local state rj 
example local state point includes input output just output component local state 
definition information function agent maintains total secrecy respect system points values range ki simply preimage points 
course rj kj total secrecy special case total secrecy 
total secrecy special case introduced sutherland 
sutherland considers systems characterized set worlds 
focuses agents views represented information functions sutherland says information flows worlds exists world 
notion called respect literature 
see total secrecy special case pt set points system 
point ri 
total secrecy equivalent respect note symmetric information flows iff information flows standard noninterference properties focus protecting state high level agent symmetry appears suggest actions high level agent kept secret low level agent actions low level agent kept secret high level agent 
definitions help clarify issue 
total secrecy defined symmetric maintains total secrecy respect iff maintains total secrecy respect total secrecy symmetric general 
maintains total secrecy respect may sense talk maintaining total secrecy respect may information function 
secrecy instantiation respect appropriate symmetry level translate symmetry level secrecy matters 
secrecy useful conceptually essentially trivial technical generalization basic notion secrecy agent information function reason new agent jf local state point rj 
theorem prove involving secrecy holds secrecy 
reason simplify definitions remainder ignore information functions deal secrecy agent respect 
ability create new agents identifying agent function global states turns quite useful definitions hold change agent created way 
second respect total secrecy strong involves time 
understand issue consider synchronous systems defined section 
systems low level agent knows time knows high level agent knows 
low level agent rule high level states occur current time 
systems agents know time tolerance total secrecy impossible low level agents rule high level states occur distant past 
ways resolving problem 
way weakens total secrecy considering runs points 
total secrecy respect says times agent consider state currently possible 
weaker version total secrecy says times consider possible possible state occurs time point past 
formalize definition 
set points consist runs going point 
definition agent maintains run secrecy respect system points pt ki kj 
easy check maintains run secrecy respect system iff points pt exists run times ri 
relate formal definition informal motivation note state occurs system form point 
suppose state ri 
exists point ri agent considers possible currently state 
currently considers possible state point past similarly thinks state point 
note total secrecy implies run secrecy converse necessarily true shown example 
run secrecy strong security property reasonable total secrecy 
second way weaken total secrecy relax requirement low level agent rule possible high level states 
formal follows 
definition function function pt subsets pt ki pt 
intuitively pt set points allowed rule point 
reasonable insist points considers possible ruled require ki 
definition function maintains secrecy respect points pt ki kj 
pt points pt secrecy reduces total secrecy 
general functions give generalization secrecy orthogonal information functions 
synchrony captured function 
informally says agent allowed know time call secrecy synchronous secrecy 
synchronous systems synchronous secrecy simple characterization 
proposition agent maintains synchronous secrecy respect synchronous system iff runs times ki kj 
proof follows trivially definitions 
synchronous input output trace systems synchronous secrecy essentially equivalent standard notion separability mclean 
total secrecy viewed asynchronous version separability 
see section discussion issue 
security literature typically focused synchronous systems completely asynchronous systems 
advantage framework easily model extreme cases able handle cases considered 
consider system agents know time tolerance 
time example agent knows true time interval 
corresponds function ss appropriate 
believe attempt define security systems require functions 
notions run secrecy secrecy distinct sense systems run secrecy holds secrecy systems holds run secrecy 
agents perfect recall may synchronous secrecy having run secrecy system asynchronous may run secrecy having synchronous secrecy 
see appendix examples 
hand contexts approaches capture intuitions 
consider definition synchronous secrecy 
synchronous secrecy may reasonable condition intuition suggest goes far weakening total secrecy 
informally maintains total secrecy respect learns current state possible states 
synchronous secrecy say learns state current time 
agents perfect recall turns synchronous secrecy implies run secrecy addressing concern 
precise general class functions need definition captures intuition function depends timing 
runs want function map points run contiguous nonempty sets points second run way respects ordering points run covers points second run 
definition function depends timing satisfies conditions runs times exists resp 
exists resp 

easy check synchronous semi synchronous functions depend timing 
show secrecy implies run secrecy depends timing 
proposition system perfect recall depends timing maintains secrecy respect maintains run secrecy respect synchronous systems perfect recall synchronous secrecy run secrecy agree 
reinforces claim definitions natural useful weakenings total secrecy 
proposition synchronous system perfect recall agent maintains synchronous secrecy respect iff maintains run secrecy respect requirement proposition agents perfect recall necessary see example details 
perfect recall things go wrong 
perfect recall able determine time state going time forget time maintains synchronous secrecy respect run secrecy 
second perfect recall learn state past maintain synchronous secrecy respect forgotten information time learns 
examples suggest secrecy interesting agents forget things happened past 
intuitively proving secrecy assumption perfect recall trusting agents forget important facts want 
characterizing secrecy syntactically definition secrecy semantic terms local states agents 
shall see helpful reason syntactically secrecy logic knowledge discussed section 
goal section characterize secrecy terms knowledge precisely lack knowledge agent respect secrecy maintained 
show state agent kept secret agent exactly know formulas depend state dually thinks formula depends state currently possible 
characterization modal logic knowledge described section 
need define means formula depend local state particular agent 
agent formula local interpreted system points rj iff 
easy check local iff kj kj locality characterized syntactically 
see engelhardt meyden moses logic local propositions 
notion locality useful semantic characterization proposition formula local interpreted system iff exists set information sets exactly theorem shows semantic characterizations secrecy section correspond closely intuitions secrecy mean agent maintains secrecy respect precisely rule satisfiable facts depend local state theorem suppose function 
agent maintains secrecy respect agent system iff interpretation point local pi 
total secrecy just secrecy function consists point corollary gives elegant syntactic characterization total secrecy immediate 
corollary agent maintains total secrecy respect agent system iff interpretation formula local satisfiable pi 
corollary says total secrecy requires know local fact valid similar result holds synchronous secrecy 
brevity prove general results sections ignore details 
give similar syntactic characterization run secrecy 
maintain total secrecy respect local necessary think possible 
run secrecy require think possible current run 
recall formula means true point current run 
theorem agent maintains run secrecy respect agent system iff interpretation local satisfiable pi 
results section show secrecy syntactic characterization equivalent semantic characterization 
significant advantages having syntactic characterization 
thing suggests secrecy checked applying model checking techniques techniques developed allow checking pi formulas 
importantly suggests natural generalizations secrecy may practical interest 
example may relevant know satisfiable formulas 
may system designer know certain formulas 
may particularly relevant declassification downgrading noninterference property corresponds set formulas kept secret low level agent formulas declassified removing set 
significant generalization involves replacing knowledge computational notion algorithmic knowledge fagin halpern moses vardi halpern pucella 
recall definition knowledge described section suffers logical omniscience problem agents know tautologies know logical consequences knowledge fagin halpern moses vardi 
context security interested resource bounded agents know 
matter agent unbounded computational resources factor decrypt message long resource bounded agent decrypt message 
requiring agent algorithmically know various facts capture secrecy respect resource bounded agents 
secrecy probabilistic systems definitions secrecy considered possibilistic consider event possible 
capture serious information 
motivating example consider system agents alice bob think sitting separate computer terminals 
suppose language words 
time bob inputs string chosen uniformly random 
time probability system outputs directly alice terminal 
probability system struck cosmic ray bob input transmitted alice case system outputs random string 
bob receives information alice sees 
possible runs system runs cosmic ray hits runs cosmic ray hits 
immediate bob maintains possibilistic synchronous secrecy respect alice high probability alice sees exactly bob input 
reason unwanted information flow example need add probability framework 
example putting obvious probability measure runs run bob inputs cosmic ray hits alice sees gets probability pair run cosmic ray hits bob inputs alice sees gets probability alice sees posterior probability bob input bob typed alice sees 
alice sees posterior probability bob input bob typed alice sees alice learns certainty bob input probability bob input rises soon sees section introduce definitions probabilistic secrecy 
definitions technical results obtain closely resemble definitions results previous sections 
coincidence 
show section probabilistic possibilistic secrecy instances definition plausibilistic secrecy similar results proved generality 
defining probabilistic secrecy reason probabilistic security need way introduce probability multiagent systems framework 
ways doing put probability points probability runs 
consider putting probability points general approach described halpern 
system define probability assignment pr function assigns agent point probability space pr wr fr wr pt sample space probability measure defined subsets wr fr 
fr algebra defines measurable subsets wr call pair pr probability system 
probability system give relatively straightforward definitions probabilistic total secrecy synchronous secrecy 
requiring agent think states possible require states measurable equally subjective probability measure 
definition agent maintains probabilistic total secrecy respect agent pr points pt kj ki fr kj ki fr kj ki kj ki 
probabilistic total secrecy straightforward extension total secrecy 
points probabilistic total secrecy implies total secrecy definition 
proposition pr probability system points maintains probabilistic total secrecy respect pr maintains total secrecy respect total secrecy probabilistic total secrecy unrealistic requirement practice achieved synchronous systems 
matters worse sets kj ki typically measurable common approach defining pr show section 
completely asynchronous systems total secrecy usually impossible achieve measurability reasons 
fortunately obvious probabilistic analogue synchronous secrecy reasonable condition 
definition agent maintains probabilistic synchronous secrecy respect agent pr runs times kj ki fr kj ki fr kj ki kj ki 
note set cosmic ray system previous section probability system way alice probability points reflects posterior probabilities described system immediate bob maintain probabilistic synchronous secrecy respect alice 
consider definitions probabilistic secrecy start probability runs 
define run probability system triple system algebra subsets probability measure defined note run probability system requires probability measure probability measure point agent 
practice measure relatively easy come 
way set runs generated protocol runs probability system generated probabilistic protocol probability set runs sharing common prefix derived multiplying probabilities protocol transitions necessary generate prefix see halpern halpern tuttle discussion 
assume simplicity run probability system contains sets form ki points agents set runs generated agent local state measurable 
assume ki condition information sets 
recall section run total secrecy requires points ki kj 
words run total secrecy property happen runs points 
run probability system information sets positive measure easy see equivalent requirement kj ki 
strengthen run total secrecy requiring probabilities equal information sets 
definition agent maintains run probabilistic secrecy respect points pt kj ki kj ki 
probabilities cosmic ray system defined sets runs 
facts alice sees bob typed correspond information sets exactly definition run probabilistic secrecy 
easy check bob maintain run probabilistic secrecy respect alice 
section consider connection probability measures points runs corresponding connection probabilistic secrecy run probabilistic secrecy 
remainder section consider symmetry context probabilistic secrecy 
section mentioned definitions secrecy symmetric terms agents surprisingly probabilistic secrecy symmetric condition cases interest 
follows deeper fact reasonable assumptions secrecy respect implies probabilistic independence information sets information sets 
see lemma appendix details 
consider probabilities points connection whatsoever pr pr probability system pr obviously reason expect secrecy symmetric 
assume probabilities derived single common probability measure conditioning symmetry follows 
assumption holds probability systems consider standard economics literature morris formalized definition 
definition probability system pr satisfies common prior assumption exists probability space pt fcp cp agents points pt ki fw cp ki pri ki ki fw cp ki 
probability systems satisfy common prior assumption probabilistic secrecy symmetric 
proposition pr probability system resp synchronous probability system satisfies common prior assumption prior probability cp equivalent agent maintains probabilistic total resp synchronous secrecy respect 
agent maintains probabilistic total resp synchronous secrecy respect standard economics literature require cp ki 
requirements placed cp ki 
see halpern discussion issue 
points cp kj ki cp kj resp points cp kj ki cp kj pt pt set points occurring time events ki kj conditionally independent respect cp time 
run probability systems single measure independent agents symmetry provided system synchronous agents perfect recall 
condition holds secrecy may symmetric illustrated example proposition run probability system synchronous agents perfect recall equivalent agent maintains run probabilistic secrecy respect 
agent maintains run probabilistic secrecy respect 
points pt ki kj probabilistically independent respect 
probability runs probability points section described ways adding probability systems putting probability points putting probability runs 
section discuss approach due halpern tuttle connecting approaches 
agent point derive probability measure conditioning ki information point 
problem ki set points set runs straightforward conditioning 
solve problem condition ki set runs going ki ki 
conditioning defined assumption ki positive measure 
define measure points ki follows 
pt set points lie runs 
particular ki consists points ki lie runs fr consist sets form ki define ki ki 
easy check ki measurable respect respect ki 
say resulting probability system pr determined run probability system call underlying measure 
call probability system standard determined run probability system 
note synchronous standard probability systems satisfy common prior assumption defined previous section 
assume runs measurable simply take cp ensures time points relative probability runs exactly needed 
generally pt set time points measurable subset take cp pt follows proposition probabilistic synchronous secrecy symmetric synchronous standard systems 
synchronous standard systems perfect recall probabilistic secrecy run probabilistic secrecy coincide 
example shows requirement perfect recall necessary 
provides evidence notions probabilistic secrecy appropriate synchronous systems 
proposition pr standard system determined synchronous run probability system agents perfect recall agent maintains run probabilistic secrecy respect iff maintains probabilistic synchronous secrecy respect pr 
characterizing probabilistic secrecy demonstrate characterize probabilistic secrecy syntactically nonprobabilistic case 
explain reason probabilistic formulas 
define interpreted probability system tuple pr pr probability system 
interpreted probability system give semantics syntactic statements probability 
interested formulas form pri similar formulas 
formulas semantics fagin halpern megiddo follow approach 
intuitively formula pri true point probability true 
formally pri ki 
similarly give semantics pri pr conditional formulas pr 
note formulas talk probability true false state 
semantics formula pri implicitly assumes set points ki true measurable 
ways dealing sets see fagin halpern megiddo assume relevant sets measurable 
certainly true synchronous standard systems determined run system sets runs measurable 
generally true probability system pr sets probability space pr measurable 
result shows characterize probabilistic total synchronous secrecy 
theorem pr probabilistic system agent maintains probabilistic total secrecy respect agent iff interpretation formula local pr exists constant pri 
pr synchronous probabilistic system agent maintains probabilistic synchronous secrecy respect agent iff interpretation time formula local pr exists constant pri runs characterize run secrecy standard systems operator 
characterization need additional assumption perfect recall 
theorem pr standard probability system agent perfect recall agent maintains run probabilistic secrecy respect agent iff interpretation formula local pr exists constant pri 
example demonstrates assumption perfect recall necessary theorem synchrony suffice 
secrecy adversarial systems easy capture motivating cosmic ray system example synchronous standard system assumed probability set runs 
furthermore hard show bob maintain synchronous secrecy respect alice system 
important arguably inappropriate assumption modeled cosmic ray system probability bob inputs various strings 
took probability uniform necessary assumption probability distribution served point 
critical assumption defined distribution known modeler 
cases probability distribution known 
cosmic ray example think strings words natural language may reasonable view strings equally 
probability string may depend speaker distribution adult people having technical discussion distribution people discussing movie 
type situation initial nondeterministic step followed sequence deterministic probabilistic steps quite common 
nondeterministic step determine choice speaker adversary protocol input probabilistic protocol 
argued rabin vardi setting mix nondeterministic probabilistic deterministic moves reduced initial nondeterministic move followed probabilistic deterministic moves 
setting probability distribution runs system 
partition set runs nondeterministic initial step separate probability distribution set runs corresponding initial step 
example consider setting single agent adversary 
agent uses protocol adversary uses set qn protocols 
system consists runs generated running qk partitioned subsets dn dj consists runs joint protocol qj 
may want assume probability adversary qj typically natural probability distribution set dj 
note capture uncertainty speaker distribution natural language strings way protocol corresponds different speaker string production algorithm 
formally situations nondeterministic choice followed sequence probabilistic deterministic choices characterized adversarial probability system tuple system countable partition fd set probability spaces probability measure algebra fd agents points cells ki fd ki ki 
ways viewing cosmic ray example adversarial probability system 
view input nondeterministic choice take consist runs input 
measure obvious run cosmic ray strike gets probability remaining runs get probability note assign probability assuming bob input distribution 
alternatively assume types agents child adult distribution inputs 
initial nondeterministic choice type agent 
set runs partitioned sets dj assume agents type generate inputs probability prj 
set dj run bob inputs cosmic ray strike probability prj 
runs bob inputs cosmic ray strikes gets probability prj identify adversarial probability system set run probability systems viewing measures constraints single measure fd fd algebra generated measurable sets probability spaces 
straightforward check fd iff ud ud fd 
consist measures conditioned agents points exists cell ki 
follows requirements assumption ki ki ki agents points 
associate written ki ki ki necessarily fd certainly fd ki subset 
brevity shall continue abuse notation write shorthand 
set run probability systems fd 
defining secrecy adversarial systems directly give slightly general definition 
define generalized run probability system tuple set probability measures algebra similarly define generalized probability system tuple pr pr set probability assignments 
define secrecy generalized run probability systems considering secrecy respect probability measure probability assignment 
definition agent maintains probabilistic total resp 
synchronous secrecy respect agent generalized probabilistic system pr pr pr maintains probabilistic total resp 
synchronous secrecy respect pr 
agent maintains run secrecy respect agent generalized probabilistic run system maintains run probabilistic secrecy respect 
straightforward define secrecy adversarial systems reducing generalized probabilistic system 
agent maintains run probabilistic secrecy respect maintains run probabilistic secrecy respect fd 
similarly agent maintains total resp 
synchronous secrecy respect maintains total resp 
synchronous secrecy respect pr pr consists probability assignments determined run probability systems fd 
straightforward analogue proposition holds adversarial systems secrecy symmetric presence assumptions perfect recall synchrony 
secrecy evidence secrecy adversarial probability systems turns closely related notion evidence hypothesis testing see kyburg overview literature 
consider simple example gives coin may fair may double headed 
idea probability coin fair may exceedingly coin double headed 
suppose observe lands heads consecutive tosses 
clearly observation provides strong evidence favor coin double headed 
example hypotheses coin fair double headed 
hypothesis places probability space observations 
particular probability seeing heads coin fair probability seeing heads coin double headed 
talk observation respect hypothesis making observation tell hypothesis matter heads see know probability coin double headed prior probability coin double headed 
fact straightforward computation bayes rule shows prior probability coin double headed probability coin double headed seeing heads adversarial probability system initial nondeterministic choice plays role hypothesis 
thought placing probability observations choice 
observations give evidence choice 
agent obtain evidence choices probability sequence observations choices 
definition agent obtains evidence initial choice adversarial probability system points ki ki ki ki 
roughly speaking obtains evidence initial choices initial choices choice secret 
restriction cells ki ki ensures compatible initial choice 
relate notion secrecy consider adversarial probability systems little structure 
suppose agent set init possible initial choices 
example init consist set possible protocols set possible initial inputs 
init init init consist tuples initial choices 
yi init dyi consist runs agent initial choice yi yn init dy dyi consists runs initial choices characterized dy init 
model fact aware initial choice require points agents exists ki dy 
form agent aware initial choice call adversarial system determined init obtains evidence initial choice learn initial choices agents 
precise framework consist measures cells yn yn dyi initial choices agent independent choices agents 
intuitively choices agents correlated learns agents choices simply making choice 
want rule situations 
note information sets positive probability respect exists information set ki dyi ki sets dyi positive probability 
follows init countable 
denote group agent consisting agents 
particular system consists agents agent 
local state just tuple local states agents fi information function maps global state tuple initial choice 
observed section definitions apply change new agents create identifying functions global states 
particular definitions apply theorem adversarial probability system determined init suppose synchronous system perfect recall 
agent obtains evidence initial choice iff agent maintains generalized run probabilistic fi secrecy respect 
assumption symmetry perfect recall necessary proof relies symmetry run secrecy established proposition 
need assume perfect recall agent theorem deals fi secrecy run constant 
follows agent associated sense described section perfect recall 
thinking terms evidence simpler thinking terms run probabilistic secrecy 
connection evidence secrecy particularly relevant comes relating gray syverson see section 
plausibilistic secrecy far definitions secrecy nonprobabilistic systems probability systems uncertainty represented single probability measure generalized probability systems uncertainty represented set probability measures 
definitions turn special cases secrecy respect general representation uncertainty called plausibility measure friedman halpern friedman halpern 
giving general definition cull essential features definitions point way defining notions secrecy respect representations uncertainty may useful practice 
recall probability space tuple set worlds algebra measurable subsets maps sets elements axioms probability satisfied 
plausibility space direct generalization probability space 
simply replace probability measure plausibility measure pl maps sets elements arbitrary partially ordered set 
pl pl plausible formally plausibility space tuple pl domain plausibility values partially ordered relation pl maps sets elements way pl pl 
assume contains special elements denoted pl pl shown friedman halpern halpern standard representations uncertainty viewed instances plausibility measures 
consider examples relevant discussion straightforward see probability measure plausibility measure 
capture notion possibility trivial plausibility measure assigns empty set plausibility sets plausibility 

set probability measures space viewed single plausibility measure 
special case finite set say take dm consist tuples pointwise ordering de fine plm 
clearly plm plm dm dm 
infinite consider generalization approach 
dm consist functions 
pointwise order functions gives partial order dm dm constant function dm constant function 
define plausibility measure plm plm function fu fu define secrecy measures direct analogy probabilistic case 
system define plausibility assignment pl function assigns agent point plausibility space wr fr plr define system pair pl pl plausibility assignment obtain definitions total plausibilistic secrecy synchronous plausibilistic secrecy simply replacing probability plausibility definitions 
plausibility measure pl system define run plausibilistic secrecy repeat halpern tuttle construction generate standard plausibilistic systems 
need notion conditional plausibility 
motivate definitions come start describing conditional probability spaces 
essential idea conditional probability spaces go back popper de finetti treat conditional probability unconditional probability primitive notion 
conditional probability measure takes arguments generally written 
formally conditional probability space tuple algebra nonempty subset closed supersets domain conditions satisfied 
pairwise disjoint elements vi vi requirements guarantee fixed unconditional probability measure 
requirement guarantees various conditional probability measures fit 
standard identify unconditional probability conditioning space write pr abbreviation pr 
unconditional probability space immediately obtain conditional probability space consist sets defining conditional probability standard way 
starting conditional probability general sense possible extend unconditional probability space conditional probability space contains sets 
words exist conditional probability spaces generality useful reasoning secrecy shall see useful able condition sets probability 
needing assume generalize conditional probability plausibilistic setting need define operators act analogues probability operators add useful algebraic structure plausibility spaces consider 
extend notion algebraic plausibility spaces friedman halpern halpern halpern allow analogue countable additivity 
briefly sketch relevant details 
countably additive algebraic conditional plausibility space tuple pl algebra subsets nonempty subset closed supersets partially ordered pl plausibility measure range intuitively events ones conditioning defined functions pairwise disjoint elements subset 
pl vi pl vi pl vi pl vi 
pl pl pl 
distributes precisely bi bi bi bi dom 
dom dom pl pl 

pairwise disjoint dom pl pl 
reason property required tuples dom dom discussed shortly 
dom understand reason restriction dom dom consider probability 
case take bi max 
hard show distributive property hold general bi consider example bi hold bi property guaranteed hold exist sets 
pairwise disjoint set bi vi probability measure 
shown see halpern halpern constraints imply acts identity element acts identity element just addition multiplication long restrict tuples dom dom respectively care proofs 
constraints imply pl plausibility measures considered earlier viewed examples trivial plausibility measure take max min 
conditional probability space just defined simply defining bi max bi multiplication 
set probability measures space construct conditional plausibility measure plm essentially way constructed unconditional plausibility measure set plm function fv measures fv fv special undefined value 
get simply define pointwise example function 
subtleties involved defining set conditioning defined particular care required dealing sets measures issues affect results assume information sets condition positive probability ignore 
see halpern details 
define run plausibility system pl 
requiring ki probabilistic case require ki agents points 
requirement guarantees conditioning ki defined easier requirement ki 
repeat halpern tuttle construction generate standard plausibilistic systems 
construction explain results sections carry general plausibilistic setting 
general results extend replacing consistently proofs care required 
summarize details stating formal results technical discussion appears appendix 
proposition generalizes run plausibility systems 
theorems carry plausibilistic setting essentially proofs define language reasoning plausibility analogous language reasoning probability formulas form pli 
proposition generalizes common prior plcp provided commutative 
total secrecy require points plcp ki pt plcp kj pt similarly synchronous secrecy require points plcp ki pt plcp kj pt 
proposition generalizes provided commutative points pl ki pl kj 
theorem extended define adversarial plausibility systems appropriately 
results demonstrate essential unity definitions theorems probabilistic nonprobabilistic cases suggest generalizations 
particular may worthwhile consider definitions secrecy representations uncertainty representations uncertainty qualitative probability 
example cosmic ray example consider measure degrees likelihood impossible possible possible 
handle examples strange things happen maintaining simplicity nonprobabilistic definitions section 
related certainly discuss formal definitions secrecy definitions proposed decades 
reason researchers sought ideal definition security example easy verify composable sense systems maintain secrecy composition 
certainly agree composability verifiability important properties believe intuition secrecy isolated stronger properties happen imply secrecy especially worry subtle issues probability nondeterminism 
section consider definitions relate attempts define conditions 
show particular capture done synchronous setting asynchronous setting probabilistic setting 
literally dozens papers way defined notions secrecy privacy section way meant comprehensive representative 
chosen examples inspired definitions examples definitions give insight 
light earlier comments focus definitions tried capture essence secrecy notions concerned issues composability verification 
important strand literature compare directly defining information flow noninterference process algebras related ccs csp see example focardi gorrieri focardi gorrieri ryan schneider ryan schneider goldsmith lowe roscoe 
believe definitions best understood terms capture notions secrecy 
careful discussion issue take far afield 
plan consider issue detail describing processes translated runs systems framework way captures semantics showing process algebraic definitions recast examples secrecy 
halpern neill give instance translation show definitions anonymity csp schneider sidiropoulos captured runs systems framework 
secrecy trace systems papers computer security define notions secrecy referred noninterference trace models 
traces usually defined sequences input output events event associated agent input provides output sees 
subtle differences trace models 
cases infinite traces finite traces 
addition models assume underlying systems synchronous implicitly assume asynchrony 
asynchronous system models common consider synchronous trace systems 
mclean johnson definitions security context synchronous input output traces 
traces essentially restricted versions runs introduced 
consider slightly simplified version mclean framework describe known noninterference properties framework 
li hi finite sets high level low level input variables lo ho finite sets high level low level output variables 
assume sets pairwise disjoint 
tuple li hi lo ho li li hi hi lo lo ho ho represents snapshot system point time describes input provided system low level agent high level agent output sent system synchronous trace sequence tuples 
represents infinite execution sequence entire system describing input output behavior system point time 
synchronous trace system set synchronous traces representing possible execution sequences system 
synchronous trace system local state agent defined trace projection function 
example function projecting low level input output behavior similarly define function extracts high level input output traces function hi extracts just high level input traces 
traces said synchronous input output values specified agent time step agents infer time simply looking number system outputs seen 
trace length prefix tk finite sequence containing state tuples trace 
trace projection functions apply trace prefixes obvious way 
easy see synchronous trace systems viewed systems multiagent systems framework 
trace define run 
simplicity omitted environment state global state construction plays role 
synchronous trace system 
easy check synchronous agents perfect recall 
mclean defines number notions secrecy framework 
consider best known separability mclean generalized noninterference mccullough 
separability name suggests ensures secrecy low level high level agents generalized noninterference ensures low level agent unable know high level input behavior 
definition synchronous trace system satisfies separability pair traces exists trace definition synchronous trace system satisfies generalized noninterference pair traces exists trace hi hi 
definitions special cases discussed section take set worlds information function information function separability hi generalized noninterference 
framework separability essentially corresponds synchronous secrecy generalized noninterference corresponds synchronous hi secrecy 
proposition precise 
fhi information function extracts high level input trace prefix point exactly way hi extracts infinite trace 
proposition synchronous trace system satisfies separability resp generalized noninterference maintains synchronous secrecy resp synchronous fhi secrecy respect 
proof prove result separability 
proof generalized noninterference similar left reader 
suppose satisfies separability 
runs 
want show times kl kh 
satisfies separability exists trace follows immediately kl kh 
difficult see information functions restricted trace projection functions essentially equivalent expressive power selective interleaving functions mechanism defining security properties introduced mclean 
converse proposition quite true 
subtle significant difference mclean framework 
mclean works infinite traces separability generalized noninterference defined respect traces sets points trace prefixes 
see impact consider system high level agent inputs infinitely infinitely output low level agent finitely followed infinitely single trace high level agent inputs infinitely low level agent inputs infinitely system consists traces omitted low level inputs matter high level outputs taken constant 


system maintains synchronous secrecy synchronous fhi secrecy respect looking finite trace prefix tell highlevel inputs satisfy separability generalized interference 
sees infinitely immediately knows high level inputs unreasonable 
agents observations finite points time 
note trace low level outputs high level inputs finite prefix trace prefix trace 
turns key reason system satisfies synchronous secrecy separability 
definition synchronous trace system limit closed emerson syn chronous traces iff time exists trace assumption limit closure get converse proposition 
proposition limit closed synchronous trace system satisfies separability resp 
generalized noninterference iff maintains synchronous secrecy resp synchronous fhi secrecy respect 
believe unreasonable general assume agent view includes entire run mclean definitions implicitly results demonstrate close connection definition synchronous secrecy security properties separability generalized noninterference 
considered synchronous trace model input output events high low users occur lockstep 
trace definitions security asynchronous setting 
consider number definitions secrecy setting 
uniformity terminology mantel carefully compiled variety known trace properties single framework 
mantel framework traces infinite sequences input output event tuples finite sequences input output events 
example low level events high level events possible system trace synchronous trace systems denote projection function set defined low level projection function 
note asynchronous traces sequences events tuples low level projection function ignores high level events altogether 
means low level view system may remain completely unchanged high level input events occur 
asynchronous trace system set traces closed trace prefixes 
straightforward way associating system set runs 
set traces run traces prefix prefix 
intuitively run corresponds maximal run set traces 
formally maximal set run traces 
note infinite exists exactly trace length length tn finite exactly trace length infinite run unique trace length finite length longest trace final state repeats forever 
asynchronous trace system denote set runs form maximal set run traces 
trace security properties usually expressed closure properties sets traces possibilistic definitions secrecy see mantel details 
focus definitions asynchronous separability generalized noninterference lee 
definition asynchronous trace system satisfies asynchronous separability traces trace results arbitrary interleaving traces 
definition generalized noninterference slightly complicated trace results interleaving include high inputs definition asynchronous trace system satisfies asynchronous generalized noninterference traces trace results arbitrary interleaving traces hi exists trace hi hi 
straightforward relate definitions secrecy 
exactly synchronous case fhi information function extracts high level input trace prefix point fhi hi 
proposition asynchronous trace system satisfies asynchronous separability resp 
asynchronous generalized noninterference maintains total secrecy resp 
total fhi secrecy respect 
converse proposition necessarily hold 
demonstrate providing counterexample works separability generalized noninterference 
suppose high output events low output event lo arbitrary sets li hi low high input events respectively 
consider system consisting traces involving events lo occurs occurs follow high input events 
maintains total secrecy fhi secrecy respect local state compatible local state 
system asynchronous learns seeing lo sees lo thinks possible arbitrarily high input events occurred lo 
furthermore learns see lo possible high input events occurred lo may occur 
satisfy asynchronous separability asynchronous generalized noninterference interleavings high input event precedes lo ruled construction 
example illustrates potential weakness approach secrecy 
maintains total secrecy respect sense learns consider point seen lo 
point knows high event occurred see lo 
knowledge violate secrecy depend local state local fact 
sense fact said information correlation high events particular low event 
information leakage problem 
able construct example worth pointing definitions secrecy aim protect local state particular user 
secret information characterized local proposition protected 
case show total secrecy separability equivalent assume particularly strong form asynchrony rules temporal dependence high low events 
formally closed interleavings asynchronous traces 
requirement allows learn high events may occur possibly occurred past rules knowledge ordering high low events run 
requirement total secrecy asynchronous separability coincide 
proposition asynchronous trace system closed interleavings satisfies asynchronous separability iff maintains total secrecy respect 
similar result true generalized noninterference fhi secrecy modify definition closure interleavings allow learn ordering high output events omit details 
secrecy user protocols generalized noninterference context mclean synchronous input output traces captures intuition low level agent rule high level input traces 
protecting input high level agent guarantee secrecy 
way 
problem course possibility uncertainty measure 
second problem captured example illustrates fact string input high level user may completely divorced message wants send 
consider synchronous trace system simplified version described johnson gray syverson 
input output values restricted 
time step high level output value nondeterministically chosen 
time step low level output value exclusive operator high level input time completeness suppose low level output time defined time step 
happens time step unimportant 
set traces represents system satisfies noninterference 
time depends value table shows value consistent traces construct new trace low level input output high level input high level output resulting trace take valid trace system system satisfies generalized noninterference 
problem system malicious high level agent example trojan horse program knows system works transmit arbitrary strings data directly low level agent 
high level agent wants transmit bit time sees high level output bit time ensure low level output time inputting bit time johnson point examples show generalized noninterference guarantee security 
claim fundamental problem generalized noninterference se underlying system model assumes relevant state high level agent captured input output traces 
model agent local state includes protocol transmitting specific string agent generalized noninterference ensure secrecy 
deal problem noted johnson introduced strategies nos 
modify definition slightly compatible mclean framework synchronous traces 
protocol function high level input output trace prefix high level input value hi hi 
intuitively protocol tells agent step seen done 
trace consistent protocol high level input value kth tuple 
synchronous trace system satisfies strategies traces high level strategy consistent trace exists trace consistent protocol high level agent included part local state information function extracts protocol high level agent local state straightforward show nos just synchronous secrecy 
gray syverson extend nos probabilistic systems halpern tuttle framework 
gray syverson terminology low level high level agents probabilistic protocols respectively 
protocols determine agents input seen done far 
system assumed fixed probability distribution determines output behavior inputs outputs seen far 
formally trace prefix length probability measure high level input events occur time projection high level input output similarly probability measure low level input events occur time probability measure output events occur time 
gray syverson require choices system time step probabilistically independent 
assumption determine conditional distribution denote li hi lo ho li hi lo ho 
countable sets protocols low level high level agents respectively 
implicitly sets low high input output values define adversarial probability system straightforward way 
consist synchronous traces input values 
joint protocol consist runs defined earlier mapping synchronous traces runs include low level agent local state high level agent local state 

partition joint protocol denote gray syverson take consist possible probabilistic protocols low level highlevel agent respectively approach sense arbitrary sets protocols certainly reasonable assume countably protocols 
partition 
independence assumptions joint protocol determines probability 


define gray syverson notion secrecy context adversarial systems 
definition adversarial system satisfies probabilistic noninterference low level protocols points protocol high level protocols kl kl 
theorem equivalent satisfies probabilistic noninterference obtains evidence protocol sense definition maintains generalized run secrecy respect init information function maps local state protocol maintains generalized probabilistic synchronous secrecy respect standard generalized probability system determined init 
proof fact implies immediate definitions initial choice protocol equivalence follows theorem 
traces synchronous equivalence follows proposition 
defined general notions secrecy systems multiple agents interact time syntactic characterizations definitions connect logics knowledge probability 
applied definitions problem characterizing absence information flow shown definitions viewed generalization variety information flow definitions proposed past 
attempt provide general framework analyzing secrecy see example focardi gorrieri mantel mclean ryan schneider lee attempts 
believe definitions closely related intuitions people field definitions expressed terms knowledge agents interact system 
definitions probabilistic secrecy plausibilistic generalizations demonstrate underlying simplicity unity definitions 
likewise results symmetry secrecy illustrate close connection notions secrecy independence 
definitions results underlying intuitions knowledge independence depend particular system representation describe broadly applicable 
discussed secrecy largely respect kinds input output systems popular theoretical security community definitions secrecy apply contexts protocol analysis semantics imperative programming languages database theory 
chor goldreich kushilevitz sudan example consider situation user wants query replicated database specific database item wants guarantee able determine query item wants 
hard show definition privacy chor special case secrecy adversarial system cell corresponding possible item choice 
possible directions 
verification secrecy properties 
provided syntactic characterizations secrecy properties terms knowledge local propositions model checking techniques applied directly 
van der meyden gives results modelchecking runs systems framework 
verifying secrecy property requires verifying infinite set formulas developing techniques efficiently require nontrivial advances state art model checking 
course extent interested limited forms secrecy agent restricted knowing small set formulas knowledge model checking techniques may immediately applicable 
rate emphasize goal provide general techniques specification verification secrecy 
direction careful consideration secrecy definitions weakened useful practice 
briefly consider issues involved declassification facts kept secret real world computer system 
canonical example password checking system forced release information tells attacker password invalid 
declassification information flow properties addressed example myers sabelfeld zdancewic 
interesting compare approach syntactic approach secrecy keeping mind syntactic definitions easily weakened simply removing facts set facts agent required think possible 
computational secrecy definitions secrecy appropriate attackers unlimited computational power agents know fact follows logically local state constraints system 
assumption unreasonable cryptographic systems secrecy depends inability attackers solve difficult computational problems 
process algebraic approach advocated mitchell ramanathan scedrov probabilistic algorithm knowledge halpern pucella may help shed light definitions secrecy weakened account agents computational limitations 
quantitative secrecy definitions probabilistic secrecy require independence agent posterior probability distribution possible local states secret agent exactly prior distribution 
requirement weakened information theoretic notions entropy mutual information 
requiring information flow user quantitatively bound mutual information respective local states 
information theoretic approaches secrecy discussed johnson clark hunt malacaria lowe di pierro hankin 
statistical privacy systems databases release aggregate statistical information individuals definitions secrecy strong rule release useful information 
formal definitions secrecy privacy systems proposed gehrke srikant chawla dwork mcsherry smith wee 
definitions seek limit information attacker learn user personal information stored database 
interesting cast definitions weakenings secrecy 
weakenings secrecy conceptually different highly relations connections 
hope help clarify issues involved 
acknowledgments riccardo pucella andrei sabelfeld ron van der meyden useful discussions 
csfw reviewers provided helpful feedback criticism niranjan nagarajan suggested probability measure led example 
examples systems section give examples simple systems show limitations various theorems 
systems involve agents ignore environment state 
describe run notation xi xj xi xj xi xj xi local state agent time asynchronous systems assume final global state xi xj example repeated infinitely 
synchronous systems need different states time step assume global states explicitly listed encode time way change time step 
notational simplicity symbol local state corresponding information set 
example suppose synchronous system consists runs note agent perfect recall agent time agent knows run times 
easy check agent maintains synchronous secrecy respect run secrecy 
reasons take probability measure probabilistic synchronous secrecy run probabilistic secrecy coincide 
shows perfect recall requirement necessary propositions 
example suppose consists runs case state repeats infinitely easy see agent maintains run secrecy respect agent total secrecy synchronous secrecy example 
consider probability measure 
agent maintains run probabilistic secrecy respect maintain probabilistic secrecy respect 
agents perfect recall system synchronous run probabilistic secrecy necessarily symmetric 
example suppose synchronous system consists runs note agent perfect recall agent 
give runs equal probability 
easy check ci ci di di 
yi ri follows agent maintains run probabilistic secrecy respect 
primitive proposition interpretation true local state 
local 
constant pr 
shows assumption agent perfect recall necessary theorem 
proofs section proposition system perfect recall depends timing maintains secrecy respect maintains run secrecy respect proof find run times ri 
depends timing exists point 
proof splits cases suppose secrecy exists point ri 
perfect recall exists ri 
suppose depends timing exists 
secrecy exists point ri 
perfect recall exists 
proposition synchronous system perfect recall agent maintains synchronous secrecy respect iff maintains run secrecy respect proof suppose agent maintains synchronous secrecy respect perfect recall maintains run secrecy respect proposition 
conversely suppose maintains run secrecy respect runs time exists run times ri 
synchrony ri 
maintains synchronous secrecy respect proposition formula local interpreted system iff exists set information sets proof suppose local 
kj 
kj definition likewise kj 
locality 
conversely suppose exists set information sets need show local 
suppose rj 
kj kj clearly kj assumption 
theorem suppose function 
agent maintains secrecy respect agent system iff interpretation point local pi 
proof suppose maintains secrecy respect interpretation point formula local 
secrecy exists point ki kj 
local 
pi required 
converse pt interpretation true iff kj 

clearly local 
assumption pip 
exists point ki definition kj 
ki kj maintains secrecy respect theorem agent maintains run secrecy respect agent system iff interpretation local satisfiable pi 
proof suppose maintains run secrecy respect interpretation local formula formula satisfiable 
choose point 
satisfiable exists point 
maintains run secrecy respect exist run times ri 
locality 
follows pi desired 
converse points interpretation true iff kj 
show ki kj 
clearly local satisfiable pi exists point ki definition exists kj 
follows ki kj 
proofs section proposition pr probability system points maintains probabilistic total secrecy respect pr maintains total secrecy respect proof suppose maintains probabilistic total secrecy respect pr arbitrary points 
definition kj ki kj ki 
kj ki kj ki assumption 
kj ki follows kj ki 
result proved gill van der robins see gr halpern theorem 
general version stated proved proposition lemma suppose probability 
countable partition 
measurable 
equivalent yi yj yi yj yi yj 
yi yi yi yi conditionally independent proposition pr probability system resp synchronous probability system satisfies common prior assumption prior probability cp equivalent agent maintains probabilistic total resp synchronous secrecy respect 
agent maintains probabilistic total resp synchronous secrecy respect 
points cp kj ki cp kj resp points cp kj ki cp kj pt pt set points occurring time events ki kj conditionally independent respect cp time 
proof prove synchronous case 
proof total secrecy identical left reader 
recall maintains probabilistic synchronous secrecy respect times runs kj ki kj ki 
pr satisfies common prior assumption prior probability cp requirement restated cp kj ki cp kj ki 
lemma pt yi information sets time follows maintains probabilistic synchronous secrecy respect iff kj conditionally independent ki conditional pt runs symmetry conditional independence immediately follows true iff maintains probabilistic synchronous secrecy respect lemma system agent perfect recall arbitrary set information sets exists set partition 
proof define set dominated set exists run times consist information sets dominated set 
note see consider set consisting information sets dominate perfect recall local state sequence information set necessarily strict prefix local state sequence information set local state sequence shortest 
follows dominated information set 
furthermore exists information set dominates dominate contradicting construction 

different sets disjoint dominate 
proposition run probability system synchronous agents perfect recall equivalent agent maintains run probabilistic secrecy respect 
agent maintains run probabilistic secrecy respect 
points ki kj probabilistically independent respect 
proof note synchronous perfect recall exists collection information sets set partition case perfect recall follows lemma applied set information sets union clearly 
synchrony take consist sets form ki fixed time suppose maintains run probabilistic secrecy respect definition kj ki kj ki points 
particular points kj kj 
lemma follows kj kj information sets 
follows secrecy kj ki kj information sets ki 
kj ki independent information sets kj ki 
secrecy implies independence holds reverse roles clear independence implies secrecy 
suppose holds points kj ki kj kj ki maintains run probabilistic secrecy respect similarly maintains secrecy respect proposition pr standard system determined synchronous run probability system agents perfect recall agent maintains run probabilistic secrecy respect iff maintains probabilistic synchronous secrecy respect pr 
proof clearly maintains run probabilistic secrecy respect pr standard system determined times kj ki kj ki kj ki kj ki maintains probabilistic synchronous secrecy respect pr 
converse suppose maintains probabilistic synchronous secrecy respect pr 
want show points kj ki kj ki 
show runs times kj ki kj ki 
holds replaced easily follows assumption maintains probabilistic synchronous secrecy respect prove consider cases synchrony perfect recall partition runs ki local state time ki ki 
perfect recall synchrony ki disjoint union sets 
kj ki kj ki kj ki kj ki ki synchronous secrecy kj ki 
argument similar partition runs ki local state time runs kj local state time define ki ki 
needed 
theorem kj kj 
kj ki kj kj ki kj kj kj ki kj kj ki ki kj ki ki ki ki ki ki kj ki pr probabilistic system agent maintains probabilistic total secrecy respect agent iff interpretation formula local pr exists constant pri 
pr synchronous probabilistic system agent maintains probabilistic synchronous secrecy respect agent iff interpretation time formula local pr exists constant pri runs proof prove part 
proof similar 
suppose synchronous maintains synchronous probabilistic secrecy respect interpretation arbitrary time local formula 
local proposition exists set information sets iff 
maintains synchronous probabilistic secrecy respect element constant runs ki 
fix synchrony set partitions ki ki ki ki ki follows pri desired 
converse suppose interpretation time local exists constant pri runs fix time suppose interpretation true iff kj 
proposition local exists constant pri pri follows desired 
kj kj theorem pr standard probability system agent perfect recall agent maintains run probabilistic secrecy respect agent iff interpretation formula local pr exists constant pri 
proof suppose maintains probabilistic secrecy respect agent 
interpretation formula local proposition exists set information sets 
note iff 
lemma exists set partition 
probabilistic secrecy exists constant ki points 
partition points ki ki 
ki ki follows pri 
converse suppose interpretation formula local exists constant pri 
points interpretation true iff kj 
proposition local pri 
follows kj ki ki kj holds replace kj ki kj ki 
gives probabilistic secrecy 
theorem adversarial probability system determined init suppose synchronous system perfect recall 
agent obtains evidence initial choice iff agent maintains generalized run probabilistic fi secrecy respect 
proof forward direction want show maintains generalized run probabilistic fi secrecy respect 
suppose 
information function fi maps information set choices agents choice set set runs form show arbitrary points choice sets di di ki di ki 
assumption choice encoded local state exists unique yi ki dyi obtains evidence initial choice choice sets di dyi dy ki dy ki 
di dyi ki dyi dy ki dyi ki ki dyi 
follows lemma ki conditionally independent choice set dyi 
lemma shows ki conditionally independent choice set di di dyi conditional independence immediate di dyi choice set di di ki di ki dyi di dyi di equality follows assumed choice independent choices agents 
similarly di ki di follows maintain generalized run probabilistic fi secrecy respect converse suppose maintains generalized run probabilistic fi secrecy respect points choice sets di measures 
choice sets di information set ki ki dyi want show 
show exists measure places positive probability cells 
particular measure duration proof 
strategy take countable linear combination cell specific probability measures set runs cell assigned positive probability 
yi yi 
countable enumeration init 
countable enumeration possible choice sets 
define function dy ij dk dk jk straightforward check places positive probability cells furthermore dyi di ki ki dyi di holds replace di 
information set ki yi initial choice ki dyi choice sets di dyi di ki ki dyi di 
prove suffices show ki dyi di ki dyi standard probabilistic manipulations show 
ki dyi di dyi di ki dyi di similar equation holds replace di 
synchronous perfect recall exists set information sets partitions lemma follows choice sets independent information sets 
applying follows choice sets independent information sets 
ki dyi di ki di ki 
di dyi independent assumption follows dyi di dyi 
reduces ki dyi di dyi ki 
true dyi follows ki dyi di ki dyi 
immediate 
generalizing probability plausibility section give details plausibilistic results section 
results correspond probabilistic results previous section cases proofs identical 
brevity focus nontrivial subtleties arise plausibilistic case 
show proposition generalizes run plausibility systems straightforward 
simply replace occurrences multiplication addition proof proposition resulting equations hold properties define analogues theorems need language allows statements form pli constant interpreted plausibility value 
proofs results transfer plausibilistic setting change 
omit straightforward details 
prove propositions prove results generalize lemma 
need definition taken halpern 
define acceptable pl implies understand intuition definition consider special case follows fact nonempty closed supersets get pl analogue situation probability condition set nonzero measure 
lemma pl acceptable 
suppose 
partition yi 
equivalent pl yi pl yj yi yj 
pl yi pl yi proof clearly implies 
see implies note dealing acceptable yj pl yj pl yj 
yi follows needed 
pl yj pl yj yj pl yj pl yj yj pl yi pl yj pl yi yj pl yj pl yi probabilistic setting part proposition holds able conclude yi conditionally independent symmetry independence probabilistic setting conclude conditionally independent yi pr yi pr yi 
plausibilistic setting independence symmetric general additional assumption symmetric 
say commutative operator commutative 
lemma suppose pl commutative acceptable 
partition pl yi yj pl yi pl yj 
yi pl yi pl yi 
proof suppose yi lemma pl yi pl 
yi yi commutative pl yi pl yi pl yi pl pl yi pl yi pl 
similarly pl yi pl yi pl 
pl yi pl pl yi pl 
pl assumption follows definition pl yi pl yi 
yi yi yi closed supersets 
working acceptable pl yi pl yi pl yi pl yi 
results plausibilistic versions propositions proved minor changes proof probabilistic case provided additional assumptions stated main text 
replace lemma lemma 
appeal symmetry conditional independence replaced appeal lemma 
lemma need assume commutative points plcp ki pt plcp kj pt proof total secrecy generalization proposition plcp ki pt plcp kj pt proof synchronous secrecy generalization proposition pl ki pl kj generalization proposition 
assume relevant acceptable propositions commutative 
acceptability proof lemma show argue set yi pl yi 
sets yi form ki assumptions guarantee turning generalization theorem step define adversarial plausibility system 
definition completely analogous adversarial probability system set consists acceptable conditional plausibility spaces fd pld cell assume ki fd ki ki pld ki 
say agent obtains plausibilistic evidence initial choice points ki ki pld ki pld ki 
suppose determined init probabilistic case conditional plausibility spaces defined respect domain plausibility values operations commutative 
fd algebra generated dfd 
init pl consist acceptable plausibility spaces fd pl nonempty subset fd closed supersets fd pl pld agents points exists cell pl ki pl yn pl dyi pl 
state prove plausibilistic analogue theorem 
theorem adversarial plausibility system determined init suppose synchronous system perfect recall 
agent obtains evidence initial choice iff agent maintains generalized run plausibilistic fi secrecy respect init pl 
proof proof basically theorem new subtleties arise dealing plausibility 
forward direction want show maintains generalized run plausibilistic secrecy assumption obtains evidence initial choice 
proof theorem show pl ki dyi di pl ki dyi di dyi dyi continuing spirit proof want show pl di ki dyi pl di dyi pl di 
second equality note assumption pl di dyi pl di pl dyi 
properties acceptable conditional plausibility spaces guarantee pl di dyi pl dyi pl di dyi follows pl di dyi pl dyi pl di pl dyi 
pl dyi pl di dyi pl di 
prove equality want apply lemma 
show pl ki dyi 
see holds recall assumption exists cell pl pld ki ki ki dyi di dyi choice set di 
pl ki dyi pl ki dyi pl ki pl di dyi pld ki pl di assumption pld ki 
pl di follows pl di 
pl ki dyi 
converse construct acceptable measure pl set fd pl init pl 
take consist sets cell pl start arbitrary total ordering cells pl pld highest ranked cell fd 
construction pl behaves identically cell specific measures condition subsets cells 
easy check yi init choice sets di pl dyi di pl dyi pl di 
independence choices follows immediately 
see measure satisfies conditioning axiom definition suppose show pl pl pl 
cases 
highest ranked cell intersects call intersects terms equality determined pld equality follows applying conditioning axiom pld highest ranked cell intersects intersect third terms equality determined pld 
measure pl acceptable required underlying cell specific measures acceptable 
remainder proof relatively straightforward extension probabilistic case 
choice sets independent information sets follows lemma facts agent maintains generalized run plausibilistic fi secrecy cells choice sets non plausibility construction information sets proofs section proposition limit closed synchronous trace system satisfies separability resp 
generalized noninterference iff maintains synchronous secrecy resp synchronous fhi secrecy respect 
proof give argument separability argument generalized noninterference similar left reader 
forward direction follows proposition 
converse suppose maintains synchronous secrecy respect 
trace show 
maintains synchronous secrecy respect exists run rm rm rm 
exists trace follows follows limit closure desired 
proposition asynchronous trace system satisfies asynchronous separability resp 
asynchronous generalized noninterference maintains total secrecy resp 
total fhi secrecy respect 
proof suppose satisfies asynchronous separability arbitrary points 
construction exist traces rl rh interleaving satisfies asynchronous separability 
run set traces contains 
set exist closed trace prefixes 
definition 
length follows rl 
maintains total secrecy respect proof asynchronous generalized noninterference total fhi secrecy analogous left reader 
proposition asynchronous trace system closed interleavings satisfies asynchronous separability iff maintains total secrecy respect 
proof established forward direction 
converse suppose maintains total secrecy respect closed interleavings 
exist points pt rl maintains total secrecy respect exists point rl 
construction exists run set traces traces length follows closed interleavings required 
chawla dwork mcsherry smith wee 
privacy public databases 
appear theory cryptography 
chor goldreich kushilevitz sudan 
private information retrieval 
journal acm 
clark hunt malacaria 
quantitative analysis leakage confidential data 
electronic notes theoretical computer science 
proceedings workshop quantitative aspects programming 
de finetti 

les probabilit 
bulletins des science math matiques re 
di pierro hankin 
approximate non interference 
proc 
th ieee computer security foundations workshop pp 

emerson 

alternative semantics temporal logics 
theoretical computer science 
engelhardt van der meyden moses 
knowledge logic local propositions 
theoretical aspects rationality knowledge proc 
seventh conference tark pp 

gehrke srikant 
limiting privacy breaches privacy preserving data mining 
proc 
nd acm symp 
principles database systems pp 

fagin halpern megiddo 
logic reasoning probabilities 
information computation 
fagin halpern moses vardi 
reasoning knowledge 
cambridge mass mit press 
revised paperback edition published 
focardi gorrieri 
classification security properties process algebra 
journal computer security 
focardi gorrieri 
classification security properties part information flow 
foundations security analysis design pp 

springer 
friedman halpern 
plausibility measures user guide 
proc 
eleventh conference uncertainty artificial intelligence uai pp 

friedman halpern 
plausibility measures default reasoning 
journal acm 
gill van der robins 
coarsening random characterisations conjectures counter examples 
proc 
seattle conference biostatistics pp 

goguen meseguer 
security policies security models 
proc 
ieee symposium security privacy pp 

gray syverson 
logical approach multilevel security probabilistic systems 
distributed computing 
gr halpern 
updating probabilities 
journal research 
halpern 

conditional plausibility measures bayesian networks 
journal research 
halpern 

characterizing common prior assumption 
journal economic theory 
halpern 

reasoning uncertainty 
cambridge mass mit press 
halpern neill 
anonymity information hiding multiagent systems 
proc 
th ieee computer security foundations workshop pp 

halpern pucella 
modeling adversaries logic security protocol analysis 
proc 
formal aspects security lecture notes computer science volume pp 

berlin heidelberg new york springer verlag 
halpern pucella 
probabilistic algorithmic knowledge 
theoretical aspects rationality knowledge proc 
ninth conference tark pp 

halpern tuttle 
knowledge probability adversaries 
journal acm 
kyburg 

inductive logic 
eds philosophy pp 

nj 
lowe 

quantifying information flow 
proc 
th ieee computer security foundations workshop pp 

mantel 

possibilistic definitions security assembly kit 
proc 
ieee computer security foundations workshop pp 

mantel 

uniform framework formal specification verification information flow security 
ph 
thesis universit des saarlandes 
mccullough 

specifications multi level security hook property 
proc 
ieee symposium security privacy pp 

mclean 

general theory composition trace sets closed selective interleaving functions 
proc 
ieee symposium security privacy pp 

meyden van der 
common knowledge update finite environments 
information computation 
mitchell ramanathan scedrov 
probabilistic polynomial time calculus analysis cryptographic protocols 
submitted publication 
morris 

common prior assumption economic theory 
economics philosophy 
myers sabelfeld zdancewic 
enforcing robust declassification 
proc 
th ieee computer security foundations workshop pp 

popper 

logic scientific discovery nd ed 
london hutchison 
version book appeared logik der forschung 
rabin 

process mutual exclusion bounded waiting log valued shared variable 
journal computer system sciences 
ryan schneider 
process algebra non interference 
proc 
th computer security foundations workshop pp 

ryan schneider goldsmith lowe roscoe 
modelling analysis security protocols 
harlow england addison wesley 
sabelfeld myers 
language information flow security 
ieee selected areas communications 
schneider sidiropoulos 
csp anonymity 
european symposium research computer security pp 

shannon 

communication theory secrecy systems 
bell system technical journal 
sutherland 

model information 
proc 
th national security conference pp 

vardi 

automatic verification probabilistic concurrent finite state programs 
proc 
th ieee symp 
foundations computer science pp 

johnson 
information flow nondeterministic systems 
proc 
ieee symp 
research security privacy pp 

lee 
general theory security properties 
proc 
ieee symposium security privacy pp 


