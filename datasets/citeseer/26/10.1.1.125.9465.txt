implementing model design environment clinical information systems janos mathe sean jan werner bradley malin janos department electrical engineering computer science school engineering department biomedical informatics school medicine vanderbilt university nashville tn usa janos mathe sean jan werner malin janos vanderbilt edu 
health care rapidly evolving field increasingly supported clinical information systems cis integrate care providers patients computer applications 
local federal regulations require health care systems define enforce privacy security policies protect sensitive patient data cis 
service oriented architectures soa successfully applied specific clinical services decision support adopted large scale cis need account diverse information technology architectures complex person computer interactions 
demonstrate incorporation model design techniques high level modeling abstractions provide framework rapidly develop simulate deploy cis prototypes 
describes implementation graphical design environment allows cis architects develop formal system models automatically generates executable code deployment 
design tool leverages soa create reusable services rapidly adapted 
illustrate functionality tool modeling secure messaging service vanderbilt patient portal portion vanderbilt university medical center cis 
keywords model integrated computing privacy patient portal workflow treatment patients paramount health care community system errors difficult find address lead serious mistakes patient care 
reduce errors minimize administrative burdens health care organizations migrating traditional records clinical information systems cis provide collection computer applications enable sophisticated services patients health care providers 
electronic medical records shown increase staff productivity patient safety 
cis evolve integrating new applications mathe provide access information manage organizational relationships healthcare environment 
cis leverage incorporate variety technologies provide gateway numerous information organizational components healthcare environment 
result cis enable wide array functions including data sharing decision support training research access materials 
cis web portals tailored provide specific experience role user 
example physician portals designed support daily clinical workflow access guidelines educational materials treatment cost information referral directories 
alternatively patient portals designed provide patients access electronic medical records billing appointment scheduling 

design cis presents unique challenges mainly derive fact dynamic entities constantly evolving policies technologies 
require complex technical socio technical interactions clinical environment 
instance workflows hospitals vary departments department continuous turnover employees differing roles 
cis administrators support diverse regulations federal state local levels influence procedural access policies 
due sensitivity patient information potential increased magnitude errors design cis critical issue directly affects addition patients 
complexities modeled cis ensure secure timely access health information services 
address problem evaluated necessary requirements developed software tool suite called model integrated clinical information systems micis assists formal design verification rapid prototyping cis 
previously high level overview micis architecture respect platform specific engineering type cis abstractions necessary modeling clinical realm 
describe implementation details micis 
micis tool able graphically represent data workflow organizational aspects healthcare environment 
micis translates formal models service oriented architecture soa transforms secure web accessible portal includes procedural access policies 
formal models created micis allow perform rigorous systems analysis investigate privacy security implications cis including data passed care providers patient information stored 
remainder organized follows 
section provide motivation soa clinical realm review research related areas 
addition provide background underlying technologies micis built model integrated computing 
section describe architectural design micis 
micis implemented oracle bpel server model integrated computing toolkit 
section discuss challenge regarding representation policies enforcement 
section discuss limitations steps development micis tool suite 
implementing model design environment clinical information systems background motivation service oriented architectures complexity cis healthcare environment highly variable differ greatly disparate terms alternative software systems hospitals terms responsibilities particular clinics 
soa provide intuitive means resolve integrate diversity 
relying site specific ad hoc design strategies soa provide formal way coordinate services web inspired architectural style relies loosely coupled interacting services compose complex applications 
services context soa independent heterogeneous components accessed predefined interfaces arranged workflows representing business logic 
principal design goals services composability adaptability platform independence lead improved interoperability systems extensibility 
soa successfully applied business sector companies amazon result rich infrastructure soa tools available 
leveraging existing service approach cis gain maintainability scalability generalizability 
design implementation soa cis raises nontrivial challenges 
instance abstractions service representations shelf product may adequately capture role human processes prevalent clinical setting 
traditional business applications human workflow interaction simple accept deny schema person serves approval checkpoint determines execution continue 
clinical domain workflows require human tasks cast binary decision interpretation laboratory reports patient diagnosis clinical evidence 
existing soa tool suites provide way capture tasks 
furthermore cis unique requirements rooted complexity organizational regulatory policies embed 
instance policies specified privacy security rules health insurance portability accountability act procedural access policies supported cis 
procedural policies require secure timely delivery health information 
privacy policies mandate particular accessibility rules patients healthcare providers 
unfortunately existing soa implementations limited require procedural policies hard coded workflow logic define uniform method represent access policies 
possible account simple access polices encryption messages exchanged service provider invoker oasis web services security ws sec 
adopt standard micis execution engine ws sec insufficient express gamut complex access policies common cis access restriction sensitive personal clinical data 
lieu capability complex security left system administrators implement deployment level 
coupling design deployment environments soa implementations bind potential cis developers particular implemented technologies limit system evolution 
mathe approach cis design formal service orientation 
kawamoto successfully applied service oriented software framework clinical decision support systems 
clinical decision support components cis account interactions healthcare domain 
micis novel approach cis design creates verifiable executable workflows domain specific models tailored healthcare environment accounts human machine entities 
micis supports design cis manner loosely coupled particular implementation environment 
enables system architects build experimental infrastructures independently design execution environments inadequately represent specific cis changing system requirements 
formal modeling tools micis workflows capture business logic health portal orchestrate execution services 
orchestration language creates coherent story service execution viewpoint chronology services invoked patient sends message physician 
business process execution language bpel language relies workflow descriptions represent business logic 
bpel standard basis workflow modeling micis compatible oasis compliant bpel execution engine decouples development health portal deployment specific details 
policy specification languages able separate security policies implementation details 
result policies dynamically changed altering underlying implementation 
sun implementation extensible access control markup language xacml formal policy language specification oasis standard 
formal language policies provides greater reuse developer may easily represent high level goals business processes 
bridging gap low level abstractions high level goals explored presents model driven approach access policies 
micis uses similar approach automatically transforming domain models machine enforceable xacml 
model integrated computing mic developed vanderbilt university building software intensive systems 
core idea mic provide domain specific modeling language corresponding modeling environment application domain 
raises abstraction level traditional programming languages provides application developer domain expert familiar concepts 
mic create evolve integrated multiple view models concepts relations model composition principles field 
facilitates systems software engineering analysis models enables automatic synthesis applications models 
approach successfully applied different applications including automotive manufacturing wireless sensor networks integrated simulation embedded systems name 
implementing model design environment clinical information systems core tool mic generic modeling environment gme configured adapted meta level paradigm specifications known metamodels 
metamodels consist uml class diagrams ocl constraints 
created gme automatically configure support new 
specifically software tool called metamodel translator parses metamodels generates xml file containing specifications concise format 
gme turn reads file configures support new 
architecture illustrated top half 
gme sophisticated user interface flexible extension mechanism making easily customizable supporting wide variety modeling languages 
example high level apis different programming languages easy create additional tools interfacing gme model translators 
widely api domain specific high level interface automatically generated metamodels metamodel translator 
documented advantages mic general highly flexible architecture gme particular technologies ideal candidate laying foundation micis 
micis design implementation design micis real world clinical environment collaborated administrators software engineers vanderbilt university medical center 
specifically micis information learned vanderbilt patient portal currently designed vanderbilt university medical center 
illustrative purposes workflows depict services similar offered 
portal provides services patients including access lab results billing information scheduling appointments secure messaging doctors 
architecture overview provides overview micis architecture 
micis achieves agile design assistance gme tool suite modeling block 
help gme tool suite utilize existing soa tools order provide runtime environment designed cis execution environment block provide designers opportunity incorporate verification simulation tools 
components implementations component micis domain specific modeling language editor shown component modeling block 
editor design creation domain specific modeling languages metamodels 
mathe editor create component metamodels formal language represents necessary abstractions cis domain 
shown component modeling block 
tailoring clinical abstractions required series interactions designers patient portal hospital staff 
interactions created abstractions drive domain specific model editor component modeling block 
development abstractions iterative process requiring revisions meta models 
current iteration partition abstractions classes workflows data structures policies deployments organizational structures 
details abstractions described 
set abstractions cis designer specify orchestration logic cis 
process called modeling process designer identify services cis provide 
designer specify manner people computer entities interact components charge implementing services 
fig 
micis architecture facilitate gme tool suite modeling block create design environment cis 
models created design environment model editor translated input various analysis execution engines 
implementing model design environment clinical information systems metamodel translator gme tool suite shown component modeling block uses modeling language automatically configure gme domain enforcing abstractions 
operation allows domain specific model editor enable creation instances abstraction form models graphical modeling environment 
domainspecific model editor depicted component modeling block 
model editor created sample models shown component modeling block 
example workflow model taken model editor 
workflow depicts scenario patient currently logged attempts retrieve history messaging session medical staff 
fig 

service retrieves history messaging session 
shows model editor principal components model builder pane shown upper left corner tree view hierarchical component structure shown upper right corner model parts browser shown lower left corner model information pane attributes preferences properties tabs allow configuration models shown lower right corner 
model builder pane block example workflow model walks series steps described control flow 
term model describe element hierarchical structure models basic building blocks complex structures 
complex structures example workflow model built simple complex building blocks 
roman numbers block describe basic categories models contains data structures ii shows workflow logic iii presents participating services 
workflow unlabeled black mathe lines drawn black filled circle represents starting point empty circle represents endpoint 
example series steps simple sequence operations 
operations sequence reception user input receive model local operation called task performs lookup database table message id input returns message history text output service invocation invokes remote service called assembles results viewable format reception result invoked service sending requested information back user reply 
flow information data structures marked blue hexagons travels components control flow described data flows blue tagged lines diagram 
mechanism helps creator workflow tie distinct aspects separate control structures help common data schema 
explanation model editor works refer reader information language capable expressing additional examples refer reader 
collection micis models intended illustrate formal representation logic drives cis certain part 
collection serves formal documentation form lacks model interpreter translate models executable code 
purpose translator execution environment translator ee connects models block execution environment block 
traverses models help gme interface produces executable code form configuration files execution environment layer functions build 
generate code cost efficient manner facilitate powerful arsenal applications created soa order implement execution environment block fig 
execution environment group applications running set servers contain execution engine policy decision point front 
execution engine charge providing defined services cis managing incoming requests executing defined workflows defined policies 
front provides access services maintained execution engine 
find suitable application serving execution engine examined various applications configured workflow descriptions 
decided oracle bpel process manager version uses bpel workflow representation mature set tools including web console provides access managing workflow instances 
recognize alternative tools note experimented open source evaluated compatibility workflows 
concluded source files exchanged engines minor changes 
explicit representation policies orchestration logic represented workflows cis domain necessity 
discuss aspects policy representations section 
architecture policy decision point pdp implements decisions execution workflow enforces existing defined policies 
subset implementing model design environment clinical information systems policies defines access control cis 
order implement policies chosen generate xacml expressions translator ee enforce help sun xacml implementation axis tomcat installed dedicated servers 
micis compatible soa tools form execution engine implemented translator ee generates code models modeling environment language interpreted components execution engine 
model translator translator ee composed main components model translator workflow mtw orchestration policy enforcement generates input oracle bpel process manager model translator creating policy decisions mtp model translator creating front interface users form html jsp pages mti 
fig 
source files generated translator ee workflow 
shows source files generated component translator 
source files required oracle process manager correct execution workflows 
correspond bpel source file describes orchestration logic web service definition language wsdl interface file necessary data structures form xml schema definition xsd files defines input output messages service allow processes connect bpel deployment descriptor file bpel xml defines location wsdl files compilation deployment apache ant script file build xml charge deploying previous files process manager 
policy enforcement integrated workflows translated xacml policy decision points 
component translator ee developed means generate input execution engine manually create front web pages able interact services 
development currently progress 
order generate front pages plan utilize input output data structures workflow models 
mathe components micis purpose integrating simulator translator translator simulator fig 
provide cis developers ability simulate test implemented orchestration logic 
component architecture various approaches uppaal cpn tools built simulator design environment may provide adequate support feature 
verification tool translator translator model translator policy workflow verification 
component generates input verification tool fig 
part proposed architecture tightly coupled simulator 
verification tool reasons verifies wide range properties cis system simple reachability analysis workflow structures policy validation 
tool implemented current version micis anticipate applying prolog cpn tools component 
challenges policy representation iterations cis design staff required develop workflows specifically tailored problem space easily interpretable staff 
prior research shown defining abstractions broad range policies similarly difficult challenge 
execution engine instantiates executes example workflow assume user invoked service validated user database 
type access control policy validation achieved implementing policy decisions points workflows 
approach requires designer insert decision point control flow workflow requires particular access policy 
avoid inserting multiple policy decision points enforce policy 
achieved combining relevant workflows unified higher level workflow implements common pdp 
approach depicted 
workflow service implements services policies required patient portal messaging example 
created main service sends receives messages patients clinical staff 
service requires invocation retrieval contact list sending messages adheres access policy 
add pdp workflow user validation created higher level workflow grouped services access policy requirement 
doing created simple visual confirmation messaging conform specified policy 
example workflow results unauthorized user fault current user access privileges service 
implementing model design environment clinical information systems fig 
service shows invocation various services tied workflow 
user gets authenticated task policy decision point implemented workflow 
assuming user gets successfully authenticated workflow decides service invoke user input url 
tie result series steps described picture 
sequence diagram illustrates example case user logs example patient portal system 
successful login system invokes messaging service ex user clicks url main webpage 
user invocation causes execution engine instantiate previously described service validates user presenting messaging options 
example user invokes service displays user messaging history service 
important recognize disadvantages approach 
create additional service component integrate real services need implement centralized fashion 
second flattened different concepts difficult understand underlying logic 
better solution policies modeled implemented part workflows depicted 
method assumes enforcement defined policies help implemented independently workflows 
order achieve model operations control flow defined workflows need intercepted matched defined set policies 
depending type operation calling data operation allowed denied decision point 
mathe fig 
possible execution path user simple patient portal take 
services user invokes log service service fig 
fig 
execution example seen fig time pdp implemented separate abstraction layer workflows 
implementing model design environment clinical information systems discussion micis tool suite provides domain specific modeling environment explicitly defining workflows data organization policy relation health portal 
transforms cis domain models executable code managed offthe shelf technology oracle 
result micis decouples developers particular deployment architecture allows greater design flexibility 
micis incorporates technologies allow deployment set userdefined models 
micis progress possesses shortcomings 
prominent reflects incomplete status tool suite 
code generating translators fully implemented provide subset functionality 
currently translation bpel support workflow constructs policy translation requires user data tags automatically generating model 
problems result time constraints addressed near 
second limitation affects policies results incomplete status short term solution require modification 
currently policy enforcement achieved xacml support temporal policies specify action occur action event occurring 
barth proposed language correct limitation execution engine developed 
despite limitations micis currently capable modeling health portals formal domain specific models able generate executable code policy enforcement limited examples 
extending functionality micis automatically deploy interacting services temporal policy enforcement goal overcome current system limitations create tool suite capable modeling simulating verifying deploying prototype cis 

davies nm 
healthcare information management systems society roi ehr productivity hospitals save time money 
journal 


shepherd medical portals web access medical information 
proc rd hicss 


barnett barry robb nicholson morgan overcoming information overload information system primary care physician 
proceedings medinfo pt 

baker giving patients access medical records experience 
journal american medical informatics association 


cimino patel patient clinical information system 
international journal medical informatics 


werner mathe malin proceedings th ieee international conference industrial informatics 
forthcoming 
mathe 
mathe werner malin modeling environment patient portals 
proceedings american medical informatics association annual symposium 
forthcoming 

mathematical foundation service oriented applications design www science unitn pdf jos pdf 
soa terminology overview part service architecture governance business terms www ibm com developerworks library ws index html 
soa terminology overview part development processes models assets www ibm com developerworks library ws soa term index html 
gray conversation werner vogels cto amazon com 
web services portal acm org ft gateway cfm id type pdf 
service oriented architecture www oracle com technologies soa index html 
service oriented architecture soa www sun com products soa index jsp 
soa software solutions soa fabric www soa com index php section solutions soa fabric 
brien bass quality attributes service oriented architectures 
technical note software architecture technology initiative 

department health human services 
standards privacy individually identifiable health information final rule 
federal register aug cfr parts 

department health human services office civil rights 
standards protection electronic health information final rule 
federal register feb cfr pt 


oasis web services security wss tc www oasis open org committees tc home php wg abbrev wss 
oracle soa suite adopt soa download oracle com docs cd core intro htm 
kawamoto proposal fulfilling strategic objectives roadmap national action decision support service oriented architecture leveraging hl services 
am med inform assoc 


oasis web services business process execution language 
www org committees tc home php wg abbrev 
sloman policy driven management distributed systems 
journal network systems management pp 


sun xacml implementation sourceforge net 
oasis extensible access control markup language xacml tc www org committees tc home php wg abbrev xacml 
hafner breu constraint role access control sectet model driven approach 
long misra increasing productivity saturn ieee computer magazine august 
software composition verification sensor networks science computer programming elsevier pp 
april 

davis agrawal modeling methodology integrated simulation embedded systems acm transactions modeling computer simulation pp 
january 
vanderbilt website https www com app implementing model design environment clinical information systems 
generic modeling environment website www isis vanderbilt edu projects gme 
project website www com 
oracle bpel process manager website www oracle com technology bpel index html 
open source engine project website www com active bpel engine overview htm 
uppaal www uppaal com 
wiki daimi au dk wiki 
barth datta mitchell privacy contextual integrity framework applications 
ieee symposium security privacy pp 
ieee press new york 
