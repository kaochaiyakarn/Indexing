information integration logical views jeffrey ullman stanford university 
number ideas concerning information integration tools thought constructing answers queries views represent capabilities information sources 
review formal basis techniques closely related containment algo rithms conjunctive queries datalog programs 
com pare approaches taken labs information manifold stanford tsimmis project terms 
theoretical background addressing information integration issues review basic ideas concerning conjunctive queries datalog programs containment 
logical rule notation ull 
example 

rule talks edb predicate extensional database stored relation idb predicate intensional database predicate relation constructed rules 
examples useful think arc predicate defining graph predicates define certain structures exist graph 
means arc node node case rule says true arc node node arc 
represents paths length 
general atom head left sign zero atoms called subgoals right side body 
head idb predicate subgoals idb edb predicates 
head subgoals 
assume variable appearing head appears body 
safety requirement assures rule left undefined variables head try infer fact head predicate 
assume atoms consist predicate zero arguments 
argument variable constant 
exclude function symbols arguments 
supported nsf iri aro daah air force contract 
conjunctive queries conjunctive query cq rule subgoals assumed edb predicates 
cq applied edb relations considering possible substitutions values variables body 
substitution subgoals true substitution applied head inferred fact head predicate 
example 
consider example rule cq 
true exactly arc graph substitution subgoals true arcs inferred exactly path length crucial question cq contained 
cq say databases truth assignments edb predicates result applying written qi subset 
cq equivalent contained 
turns cases approach known testing equivalence testing containment directions 
information integration applications containment appears funda mental equivalence shall concentrate containment test 
conjunctive queries containment studied chandra merlin cm 
shall give test approach test extends naturally generalizations cq containment problem shall discuss 
test 
freeze body turning subgoals facts database 
replace variable body distinct constant treat resulting subgoals tuples database 

apply canonical database 

frozen head derived 
fact canonical database counterexample containment surely derives frozen head database 
example 
consider cq qi 

informally looks paths length looks nodes arc arc 
intuitively expect case 
examples shall integers starting constants freeze cq obviously choice constants irrelevant 
canonical database constructed consists tuples 
frozen head 
apply substitution yields head 
fact frozen head verified 
incidentally containment test general tests subsections argument works brief test negative constructed database counterexample containment 
test positive implied homomorphism variables variables 
obtain seeing constant variable mapped successful application canonical database variable corresponds constant 
apply database yield particular fact head homomorphism variables database symbols application 
followed homomorphism variables database symbols shows yield head fact 
argument proves 
containment cq np complete cm sar shows common case predicate appears twice body linear time algorithm containment 
cq negation important extension cq allow negated subgoals body 
effect applying cq database substitution constants variables atoms negated subgoals false true negated subgoal true 
containment test slightly complex complete class problems expressed wl vx strings length bounded polynomial function length function computed polynomial time 
test due levy sagiv ls involves exploring exponential number canonical databases provide counterexample containment 
suppose wish test 

consider substitution constants variables body allowing constant substituted variables 
precisely consider partitions variables assign block partition unique constant 
obtain number canonical databases di dk number partitions integer number variables body 
consists frozen positive subgoals negated subgoals 

consider di subgoals true 
note atom negated subgoal may happen di possible di body false 

di body true test includes frozen head database superset di formed adding tuples set symbols di 
may include tuple frozen negative subgoal 
determining frozen head substitution constants variables yielded di 

di body false yields frozen head applied 

example 
consider conjunctive queries qi 

intuitively looks paths length short circuited single arc 
looks paths length start node universal source node reachable arc show need consider partitions 
keeps variables separate groups group pair variables 
table fig 
shows cases outcomes 
partition canonical database outcome yield head body false body false yield head body false fig 

canonical databases outcomes instance case variables distinct arbitrarily chosen constants respectively canonical database positive subgoals frozen 
frozen negative subgoal true case 
yields head test likewise database consisting symbols includes tuples include tuple frozen negative subgoal 
substitution positive subgoals true superset 
negative subgoal explicitly excluded databases 
conclude levy sagiv test holds case 
consider case equated different 
chosen canonical database case consisting frozen positive subgoals 
substitution negative subgoal 
subgoal false 
substitution constants variables derive head need check case test satisfied 
remaining cases checked 
indicated fig 
case cq yield frozen head yield frozen head 
test completely satisfied conclude 
cq arithmetic comparisons important extension cq containment theory inclusion arith comparisons subgoals 
regard consider set values database belonging totally ordered set integers re als 
consider possible assignments integer constants variables conjunctive query may consecutive integers starting consider partitions variables sets equal value blocks partition consider relative order values 
canonical database constructed subgoals uninterpreted predicates negation comparison operator 
negated subgoals consider certain supersets canonical databases section 
negated subgoals canonical databases suffice 
example 
consider conjunctive queries refers graph nodes assumed integers 
qi ask paths length 
qi requires node numerically second requires node numerically third 
number different canonical databases 
consider different partitions fig 

order blocks partition 
partition fig 
variable separate possible orders blocks 
partitions blocks different orders 
partition block order 
example containment test fails 
find cases show failure 
instance consider 
canonical database case body true 
include frozen head 
assignment values subgoals true database 
order subgoals true surely true 
shall subgoal counterexample 
containment test cq arithmetic klug vdm shows problem testing containment cq arithmetic compar complete case dense domain reals 
ls includes arithmetic comparisons negation note technique works negated subgoals arithmetic comparisons 
general approach works interpreted predicates just predicate forms total order appears zo 
technique include cq negated subgoals 
datalog programs return original model rules excluding negated subgoals arithmetic comparisons 
shall consider collections rules call datalog program 
collections rules natural fixedpoint interpretation start assuming idb predicates empty relations 
rules infer new idb facts facts inferred 
semantics datalog including efficient algorithms evaluating idb predicates ul ull 
shall discuss datalog negated subgoals meaning debatable cases principal ideas surveyed ull :10.1.1.49.853
example datalog program semantics 
example 
consider rules 


intuitively think graph kinds arcs arcs arcs 
represent certain kinds paths 
rule says path followed arc path 
rule says single arc path rule says arcs followed paths paths 
may obvious going prove easy induction paths consist number arcs followed equal number arcs 
path fewer arc 
get feel claim holds consider particular graph described edb predicates 
rule says paths relation rule infer path form ab relation precisely path node node follows arc arc true 
rule tells path form aab path rule says paths form aabb paths 
containment questions involving datalog programs harder cq 
shm shows containment datalog programs undecidable cv shows containment datalog program cq doubly exponential 
important case purposes information integration containment cq datalog program question turns complex containment cq 
test cq contained datalog program freeze body just section canonical database see contains frozen head significant difference containment cq containment datalog program case keep applying rules head derived idb facts inferred 
example 
consider datalog program example shall call cq 
freezing body obtain canonical database 
apply rule lets infer 
rule lets infer 
frozen head test concluded positively synthesizing queries views query containment algorithms connect information integration concept called synthesizing queries views 
idea originally studied yl suggested fig 

number edb predicates fig 

predicates truly edb predicates usually don exist physically stored relations thought representing basic concepts queries 
views denoted fig 
represent resources integrator uses internally help answer queries 
view definition terms edb predicates suppose definitions conjunctive queries 
solving queries views query expressed terms edb predicates 
problem find solution query solution expression cq terms views 
order valid solution replace views definitions get expansion query equivalent original query alternative formulation query synthesis problem ask solutions expansion contained properly contained 
solution union partial solutions 
answer answer answer 
jr query solution expansion fig 

constructing query views example 
shall consider example illustrates technical points suffers realism sake points 
suppose single edb predicate interpret mean parent views defined follows vi 

note views body different heads 
view vl produces subset relation child parent pairs child parent individual second view produces straightforward grandparent relation parent relation 
suppose want query information system great grand parents particular individual denote constant 
query expressed terms edb predicate 
problem find cq subgoals predicates vl expansion equivalent query 
bit thought tells si vl 
solution 
replace subgoals sl definition views careful unique variables place variables appear bodies view definitions heads definitions get expansion el 
cq containment test directions prove el intuitively subgoal el superfluous time binding true bind value true 
solutions expanded contained equivalent 
examples vl 
vl vi vl 
vi 
solution equivalent individual child database 
wise appear component relation vl result empty 
conversely 
solution equivalent gives great grandparents individual grandchildren 
minimal solution theorems appear example guess potential solutions query test cq containment tests 
theorems limit search show problem expressing query terms views np complete worse 
discussed section expect queries short np complete problems major bottleneck practice 
principal idea view solution serve func tion query view function may deleted solution 
example subgoal query covered view 
question view covers query subgoal bit subtle views may cover instance consider example expansion el cover query 
precisely may represent parent individual represent parent parent 
note come expansion vl respectively solution sl subgoals different views play role expansion 
define solution query minimal 
sc 

solution fewer subgoals theorem 
queries cq negation arithmetic compar constants body minimal conjunctive query solution query subgoals uses views subgoals 
theorem 
queries cq negation arithmetic com constants body permitted example minimal cq solution query subgoals sum number subgoals number variables theorems offer nondeterministic polynomial time algorithms find 
single solution equivalent query 
set solutions union contained contains solution contained case searches exponential number function length minimal queries 
looking solution equivalent may find conclude searched solutions length bound 
want solutions contained query search bound contained information integration systems information integration long recognized central problem modern database systems 
early databases self contained generally realized great value information various sources making 
difficult problems faced legacy databases altered just wish support new integrating application 
databases ostensibly deal concepts may different shades meaning term different terms concept 
information sources web may fixed schema time varying schema 
common integration architecture shown fig 

sources wrapped software translates source local language model concepts global concepts shared sources 
system components called mediators wie obtain information components may wrapped sources mediators 
mediators provide information components external users system 
sense mediator view data sources 
data exist mediator may query mediator stored data job mediator go sources find answer query 
today components labeled mediator fig 
true mediators data warehouses 
mediator view ware house materialized view 
warehouse holds data con structed data sources 
warehouse queried directly query orl fig 

common integration architecture involvement sources 
numerous problems associated design implementation warehouses see wid difficult expensive keep warehouse date underlying data changes 
research projects developing true mediator capa bilities section shall introduce 
information manifold project 

tsimmis gm project stanford university 
systems logic technology datalog se operation translated datalog 
information manifold information manifold im dialect description logic called carin lr 
description logic fragment order logic thought nonrecursive datalog idb predicates restricted unary certain capabilities description logic datalog provides bor 
shall datalog examples architecture im 
architecture im essentially described section 
points characterize im terms im application collection global predicates terms queries expressed 
information source associated views 
views defined terms global predicates 
definition view usual interpretation source provides facts derivable definition global predicates 
intension view provides facts 
solution query union minimal cq views contained query 
note solutions query sources available im application minimal solutions provide query answers accessible im 
associated source zero constraints 
constraint guarantee certain facts view truth appear 
example source supply parent child predicate view constraint state pairs supplied female children born 
example 
consider integrated information system employees 
example somewhat contrived sake technical points 
system global predicates 
emp meaning employee 

phone meaning phone 

office meaning office 

meaning manager 

dept meaning department 
sources provides view 
definitions views vi emp phone mgr 
emp office dept 
emp phone dept toy 
source supports view vl gives information em phones managers 
second source supports view gives information offices departments employees 
third source supports view provides phones employees em toy department 
notice constraint department toy enforced subgoal dept toy definition 
constraint important asked query employees known toy department know appear minimal solution 
note reason believe phone information provided vl consistent 
entirely possible information incomplete sources provides phone information employee toy department 
fact source tells sally phone phone 
suppose system asked query sally phone office 
express query terms global predicates ql phone sally office sally 
minimal solutions query 
get sally office solutions differ vl get phone 
full answer query ql union cq answer vl sally sally 
answer sally sally 
note expansions solutions answer emp sally phone sally mgr sally emp sally office sally dept sally 
answer emp sally phone sally dept sally toy emp sally office sally dept sally 
equivalent ql cq come closest ql contained ql 
tsimmis tsimmis stands stanford ibm manager multiple informa tion sources darpa funded joint project stanford database group ibm almaden database research group ibm contingent begun information integration project called garlic 
tsimmis follows mediator architecture fig 
allowing create hierarchy wrappers mediators talk 
tsimmis components talk data model called oem object exchange model query language called msl mediator specifi cation language 
msl describe mediators wrappers high level components generated automatically msl specification 
oem 
oem model object oriented data assumed organized objects 
oem object consists 
label roughly name object class 

type value object 
type atomic type integer string java script type set oem objects 

value actual value object atomic set oem objects 
book 
optional object id author fig 

oem object park example 
suggests oem object label library value set objects representing documents library 
see member object label book 
value object set shown members set 
atomic objects labeled title having value ic park labeled author value 
msl 
msl statements logical rules rules exactly datalog 
msl uses form object logic labels values connected triangular brackets 
possible include object id inside triangular brackets optional component 
object id may constructed function symbols hilog 
necessarily members set objects may described enclosing curly braces 
example 
reconsider example sources 
source produces employee phone manager information source produces employee office department information source produces employee phone informa tion members toy department 
sources assumed export appropriate oem objects 
example source exports objects atomic subobjects labeled name phone mgr 
wish describe msl rules mediator named uses sources exports types objects employee phone office objects label epo 
employee department manager objects label 
object types subobjects appropriate labels 
shows msl rules describe objects exported 
epo name phone med emp name phone epo name phone med emp name phone source epo name office med emp name office source edm name dept mgr med emp name mgr emp name dept source fig 

msl mediator description example unrealistic assumption employee names unique 
assemble epo objects employee named object id expecting id unique 
rule says object source name subobject having value phone subobject value create mediator object id label epo 
object subobject label name value second subobject label phone value rules similar rule takes employee phone information source rule takes employee office information source 
important points object id specified rules infor mation employee sources subobjects implied heads rules combined value object id 
typical employee objects subobjects labels name phone ice 
subobjects 
example sources give different phones subobjects labeled phone appear 
single source phones offices employee appear subobjects mediator 
fact rule mentions name phone subobjects source doesn mean fail subobjects manager ject 
msl mentions subobjects needs allowing subobjects 
way rest variable refer subobjects 
assumption variables atomic 
turn sets objects values fact different objects sources may different types values having label 
instance employees may strings names objects name subobjects 
rule fig 
follows somewhat different philosophy constructing edm objects meal 
object produced successful finding employee department source manager source 
missing object employee reed 
contrast rules allow epo object sources mentions note object id component constructed sources optional rule need specify id head rule label value components rules component heads 
converting msl datalog 
way convert msl completely equivalent datalog 
shall go process give simplification help compare im tsimmis 
example 
rules capture content msl rules fig 
epo vi 
epo 
edm vi 
recall vl views introduced example 
correspond sources example 
important way rules differ msl rules fig 

get epo facts employees views find phone office employee 
contrast mentioned example msl rules yield phone office vice versa 
capability msl essential contribution dealing heterogeneous incomplete information sources 
querying tsimmis mediators 
query msl mediator effectively querying objects exported mediator 
notion global predicates im 
refer labels equivalent predicates mediator exports 
completion running example illustrate distinction tsimmis im approaches 
example 
ask sally phone office 
time ask mediator reed exported objects repre sented datalog rules example 
appropriate query answer epo sally 
msl generated mediators answer queries expanding rules mediator defined order get query terms infor mation sources 
simple example replace epo subgoal query bodies rules define epo reed obtaining answer vl sally sally 
answer sally sally 
notice expansion identical im obtained query 
comparing im tsimmis query processors suppose example result equivalent im tsimmis queries accounting difference underlying logics 
processes query translation different 
im uses query synthesis strategy outlined section 
im queries terms global predicates translated views 
tsimmis queries terms predicates synthesized mediator 
concepts turn built views im sense exported sources 
tsimmis uses strategy rule expansion answer queries 
expansion result exponential number terms flavor search different im 
tsimmis expand subgoal query independently rule head unifies example 
example systems differ 
example tsimmis appears flounder emphasize atypical example contrived sake illustration 
suppose wanted know sally office department 
office sally dept sally 
views example im find minimal solution query answer sally 
tsimmis mediator reed example express query epo sally edm sally 
reason awkwardness mediator exports specific collec tion objects 
freedom penetrate query terms mediator sources 
mediator meal process query expanding subgoal 
result pair rules answer vl sally pi ml sally vl sally sally 
answer sally pl sally vl sally sally 
course msl optimizer eliminate redundant terms simplify solution 
completely eliminate subgoals vant views vl 
result produces empty answer case know phone manager sally 
emphasize apparent failure tsimmis example due fact contrived mediator export inconvenient objects 
motivation design tsimmis mediators cre ates may perform complex processing source data produce exported objects 
may feasible define create objects conceivable query 
comparison im limited way combine sources rely particular search algorithm section combine sources 
comparisons im tsimmis addition differences query processing discussed section number ways im tsimmis differ 
levels mediation 
im designed levels sources global mediator 
contrast tsimmis assumes indefinite num ber levels output mediator source higher level mediator 
course principle possible im application source 
wrap appli cation defining fixed set views exported 
face sort awkwardness explored example context tsimmis 
adding sources 
im quite convenient add new sources 
write wrapper sources define views constraints terms global concepts 
change query processing algorithm needed 
new views appropriate query 
contrast new tsimmis sources wrapped mediators redefined msl definitions recompiled 
administrator system new sources 
semistructured data 
mentioned tsimmis supports notion data fixed uniform schema call data tured 
objects label say employee may different sets information available information may appear different structures different objects 
example employees may retired salary subobject 
may integer salary 
may structured salary including base weekly commissions 
msl language designed allow mediator implementor deal lack schema 
reader find important issue handling semistructured data 
constraints 
im explicit mechanism describing special prop erties information particular source supply information query processing algorithm 
automatic generation components 
tsimmis stressed auto matic generation wrappers mediators 
sense im need automatic generation mediators application mediator query processing algorithm uses im application 
tsimmis wrapper generation technology wrap im sources difference models languages oem msl versus description logic direct adaptation impossible 
extensions query view model mediation im tsimmis concentrated conjunctive queries principal model queries views 
exploration projects possibility powerful languages defining views 
natural step recursive datalog programs generate infinite families views 
describing simple source finite set views rules adequate sources support rich query language sql database better described infinite families queries 
example 
suppose source line bibliography allows queries properties specified 
describe source recursive program fig 

answer book 

quals 
property pname value 
fig 

recursive program generating views things understand notation fig 

predicates quals expected expanded possible ways generating infinite set conjunctive queries form answer book property property property query asks books satisfy certain properties 
variables pname value parameters intended filled property allowing cq match queries particular properties required specific values 
typical query query book property author property subject 
idea explored context tsimmis 
proposed extension im lru 
case satisfactory incorporation recursively generated infinite view sets requires extending previously known algorithms containment conjunctive queries datalog programs 
im tsimmis offer interesting approaches difficult problems information integration 
draw similar fairly ancient ideas database logic conjunctive query containment new ideas database theory 
differ number ways including underlying logic approach semistructured data query processing algorithm 
represents exciting direction research database systems creation new class information processing tools 
comments pierre kolaitis alon levy yannis anand rajaraman sagiv greatly appreciated 
bor cm querying semistructured data 
proceedings 
borgida relative expressiveness description logics predicate logics 
artificial intelligence pp 

chandra merlin 
optimal implementation conjunctive queries relational databases 
proc 
ninth annual cm symposium theory computing pp 

chaudhuri krishnamurthy potamianos shim 
optimizing queries materialized views 
intl 
con 
data engineering 
cv gm lru lr ls shm chaudhuri vardi 
equivalence datalog programs 
proc 
eleventh acm symposium principles database systems pp 

chen kifer warren 
hilog order semantics higher order programming constructs second intl 
workshop database programming languages morgan san francisco 
garcia molina papakonstantinou quass rajaraman sa giv ullman widom 
tsimmis approach mediation data models languages 
second workshop generation information technologies systems israel june 
www almaden ibm 
com cs ell ic html kirk levy sagiv srivastava 
information manifold 
aaai spring syrup 
information gathering 
klug conjunctive queries containing inequalities 
acm pp 

levy mendelzon sagiv srivastava 
answering queries views 
proc 
fourteenth acm symposium principles database systems pp 

levy rajaraman ordille 
querying heterogeneous information sources source descriptions 
intl 
conf 
large databases sept 
levy rajaraman ordille 
query answering algorithms information agents 
th natl 
conf 
ai aug 
levy rajaraman ullman 
answering queries limited external processors 

fifteenth acm symposium principles database systems pp 

levy 
rousset 
carin representation language combin ing horn rules description logics 
th european conf 
ai budapest aug 
levy sagiv 
queries independent update 
proc 
conference large data bases pp 

papakonstantinou query processing heterogeneous information sources 
phd thesis dept cs stanford university 
papakonstantinou garcia molina widom 
object exchange heterogeneous information sources 
intl 
conf 
data engineering march 
papakonstantinou gupta garcia molina 
query translation scheme rapid implementation wrappers 
fourth dood singapore dec 
rajaraman sagiv ullman 
answering queries tem plates binding patterns 
proc 
fourteenth acm symposium princi ples database systems pp 

ramakrishnan sagiv ullman vardi 
proof tree trans formation theorems applications 
proc 
eighth acm symposium principles database systems pp 

subtree elimination algorithms deductive databases 
doctoral thesis dept cs stanford univ jan 
shmueli decidability expressiveness aspects logic queries 
proc 
sixth acm symposium principles database systems pp 

ul ul ul vdm wid wie yl db 
stanford edu am ullman principles database knowledge base systems vol 
computer science press new york 
ullman principles database knowledge base systems vol 
ii 
computer science press new york 
ullman assigning appropriate meaning database logic negation computers better partners yamada ohta eds pp 
world scientific press 
van der meyden complexity querying indefinite data linearly ordered domains 
proc 
eleventh cm symposium principles database systems pp 

widom research problems data warehousing 
fourth intl 
conf 
information knowledge management pp 

wiederhold mediators architecture information systems 
ieee computer pp 

yang larson 
query transformation psj queries 
proc 
international conference large data bases pp 

zhang ozsoyoglu 
efficient reasoning implication constraints 
proc 
third dood conference pp 

