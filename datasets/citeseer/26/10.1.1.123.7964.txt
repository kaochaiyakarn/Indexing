taxonomy single sign systems andreas chris mitchell royal holloway university london egham surrey tw ex united kingdom mitchell rhul ac uk www isg rhul ac uk 
network users manage set authentication credentials usually username password pair service registered 
single sign sso proposed solution usability security management implications situation 
sso users authenticate logged services subsequently manual interaction 
architectures sso developed different properties underlying infrastructures 
presents taxonomy approaches puts sso schemes services products context 
enables decisions design selection approaches sso structured context reveals important differences security properties provided various approaches 
network users typically maintain set authentication credentials usually username password pair service provider sp registered 
number sps typical user routinely interacts grown point users memorize required credentials 
common solution users password sp register tradeoff security usability favour 
potential solution security issue single sign sso technique user authenticates automatically logged sps necessary necessarily requiring manual interaction 
sso increases usability network time management relevant system parameters 
author sponsored state scholarship foundation greece 
context service provider entity provides kind service content user 
examples sps include web services messenger services ftp web sites streaming media providers 
tools synchronize passwords www com www com products asp 
eds lncs pp 

springer verlag berlin heidelberg mitchell different sso architectures emerged different properties underlying infrastructures 
identify generic architectures sso systems discuss strengths weaknesses 
remainder organised follows 
section presents taxonomy section discusses main properties architectures 
section presents variety sso schemes context taxonomy section concludes 
taxonomy sso systems mentioned sso systems support automatic user authentication sps 
authentication implies identification sso systems incorporate life cycle management identifiers user known sps registered 
identifiers take various forms 
refer collectively sso identities 
distinguish main types sso systems 
type call pseudo sso involves component achieves sso simply automatically executing authentication mechanisms place different sps 
session user authenticate pseudo sso component call step primary authentication 
key distinguishing feature sso type sso session separate authentication occurs time user logged sp 
pseudo sso component manages sp specific authentication credentials constitute sso identities case 
sso identities sp specific sso identity sp relationship said sso identity corresponds exactly sp user may principle multiple sso identities single sp 
type sso scheme illustrated 
fig 

pseudo sso taxonomy single sign systems pseudo sso fundamentally different second type sso system call true sso 
true sso scheme user authenticates entity called authentication service provider asp 
asp required established relationship sps sso achieved 
relationship requires level trust typically supported contractual arrangement 
typically need supporting infrastructure enable secure communications sps 
key distinguishing feature true sso authentication process involves user occurs user asp sps notified authentication status user called authentication assertions 
statements contain user sso identity authentication status asp 
note transport authentication assertions need secured means specific sso scheme 
exact form sso identities depends system design typically uniform system 
contrast pseudo sso true sso sso identity sp relationship supported scheme user potentially choose pool identities sp sso identity user wishes multiple sps 
enables assignment specific roles sso identities act role pseudonyms defined 
true sso scheme depicted 
fig 

true sso generally information flows sso system shown 
user authenticates asp pseudo sso component step 
service requested step asp pseudo sso component automatically logs user sp step 
true sso identity establishment phase involves asp securely conveying assertions user authentication status sp whilst pseudo sso scheme step simply involves pseudo sso component automatically performing sp specific legacy authentication mechanism user behalf 
assuming step successfully completed service provision proceeds step 
mitchell fig 

information flows generic sso system sso architectures categorised location asp pseudo sso component specifically component local user platform offered service external entity refer sso proxy 
arrive main categories sso systems local pseudo sso systems proxy pseudo sso systems local true sso systems proxy true sso systems 
consider types scheme little detail 
local pseudo sso systems local pseudo sso system pseudo sso component resident user machine 
component maintains typically encrypted database various authentication credentials different sps 
user authenticates pseudo sso component session 
point component automatically executes sp specific authentication protocols needed supplying necessary decrypted authentication credentials 
key property sso architecture user machine needs access cleartext versions long term authentication credentials user trust machine compromise credentials 
proxy pseudo sso systems proxy pseudo sso architecture pseudo sso component resides external proxy server local case external server access user credentials trusted purpose user 
primary authentication occurs user proxy session possibly proxy wishes perform taxonomy single sign systems re authentication 
subsequent user authentication sps redirected intercepted proxy automatically executes sp specific authentication protocol including supplying requested credentials 
key property architecture local machine access user credentials authentication sps occurs directly proxy sps 
local true sso systems explained true sso asp authenticates user subsequently conveys authentication assertions relying sps necessary 
trusted component user system takes role asp resulting architecture falls category local true sso systems 
course trust relationship local asp relying sps supporting security infrastructure exist 
setting asp physical control user mechanisms place guarantee integrity trustworthiness asp component 
proxy true sso systems proxy true sso architecture external server takes role asp 
external server acts broker users sps registered users benefit sso sps maintain trust relationship asp 
worth noting asp trivially impersonate registered user relying sp simply conveying assertion 
users sps trust asp purposes sso 
note observation holds asp local proxy true sso systems pseudo sso component pseudo sso systems 
properties sso schemes section presents properties distinguish various types sso system 
sso categories examined respect properties 
examples sso implementations mentioned appropriate 
privacy protection privacy protection particular importance open environments 
respect sso systems privacy concerns arise sso identities contain personally identifying information possible attacker colluding sps correlate distinct identities user consent 
sso identity pseudonymity sense include personally identifying information unlinkability potentially desirable properties implies 
mitchell pseudo sso systems guarantee pseudonymity guarantee unlinkability sso identities identities sps may require users log mail addresses case anonymous ftp sites web sites public key certificates social security numbers 
true sso systems hand designed sso identities contain personally identifying information remain unlinkable sps collude 
course success privacy protection assumes unlinkable means payment exist users need pay services 
whilst schemes proposed major impact commercial environment 
anonymous network access unlinkable sso identities remain secure attacker access network address information depends wider context sso scheme deployed 
example lower layer protocols provide anonymous network access attacker easily compromise unlinkability correlating sso identities information packet headers traffic analysis :10.1.1.24.6256
unfortunately user network address typically included packet headers reveals identity geographical location network access provider 
provider help link network address sso identities back user real identity 
privacy issues addressed schemes provide anonymous network access 
schemes typically implemented externally operated proxy 
traffic user sps physically routed proxy replaces user real network address identifying information 
achieved level anonymity depends course number users system 
examples anonymity services anonymizer www anonymizer com freedom zer knowledge 
single proxy schemes protect traffic analysis trust resides proxy operator 
exist powerful schemes described protect traffic analysis ideally distribute trust disparate security domains :10.1.1.34.2032
example system jap anon inf tu dresden de 
services employed conjunction sso systems order increase level sso identity unlinkability 
fact sso proxies augmented functionality proxy 
course traffic physically routed proxy user trust additional entity 
case proxy pseudo sso architecture completely transparent sps need aware proxy existence 
www freedom net products user mobility taxonomy single sign systems proxy sso architectures inherently support user mobility users authenticate asp pseudo sso component network course authentication method imposes restrictions 
concentrate user mobility supported local sso schemes 
local pseudo sso systems user mobility supported credential database held external server initial authentication user server occurs session credentials downloaded local machine needed 
degree trust server varies credentials stored encrypted form 
novell go www com sso www cc products examples local pseudo sso systems support user mobility 
regard automatic form fillers products pseudo sso functionality 
examples include automatic form completion functions popular web browsers novell www com service 
local true sso scheme described support user mobility se sso identities bound user platform see section 
untrusted environment scenarios require users access sps untrusted hostile environments internet caf public terminals 
situation undesirable untrusted machine access authentication credentials allow launch successful impersonation attacks 
scenarios proxy sso schemes prove useful 
course initial authentication user proxy property observation authentication exchange enable subsequent impersonation user example time password scheme suitable challenge response protocol see example 
building assuming network traffic user sps physically routed proxy may provide additional privacy protection service stripping personal data reaches untrusted machine 
deployment maintenance costs generally speaking far costly deploy pseudo sso schemes require common security infrastructure existing sps may need change 
hand sp change user authentication mechanisms deployment reflected pseudo sso component 
increases maintenance costs especially dynamically changing environments 
www novell com products mitchell situation reversed true sso schemes 
deployment true sso systems requires costly system wide security framework public key infrastructure support sp asp secure communications involve service level liability transfer agreements 
infrastructure place maintenance costs small changes authentication interface occur user chosen asp 
running costs running costs local sso schemes lower systems 
local sso schemes require continuous online presence server 
proxy systems depend course security availability external proxy server 
server constitutes single point failure system protected service denial attacks 
additional communications costs incurred traffic physically routed proxy 
proxy true sso systems sps may charged asp authentication service 
trust relationships explained section pseudo true sso users sps need trust pseudo sso component asp purposes sso 
local sso system described advantage user trust externally operated entity user need trust integrity software providing sso functionality 
important note despite universal need user trust sso component remain differences nature trust relationships involved true pseudo sso schemes 
case true sso scheme common security infrastructure allows trust relationships sps precisely described regulated policies service level liability transfer agreements means outside scope sso technical sense 
furthermore user authentication credentials compromised sso disabled centrally 
pseudo sso trust relationships diffuse 
sps may aware sso scheme place 
credential databases may encrypted replicated servers 
trust relationship user servers pseudo sso component depends implementation details scheme 
trust relationship pseudo sso component sps may different sp may change individual sps modify authentication interfaces 
conflict resolution access event dispute investigation operator proxy proxy true pseudo sso scheme may provide evidence events taxonomy single sign systems trusted third party keeping logs 
situation better defined true sso system systems necessarily defined relationship sps 
local sso schemes useful sense evidence deleted embarrassing user modified 
asp local true sso system incorporates physical protection measures enables trusted third parties see example locally stored event logs may possess evidential value 
open versus closed environments issue privacy protection includes anonymous network access untrusted environments usually deemed importance closed environments 
main focus sso closed systems deployment running maintenance costs 
pseudo sso systems especially relatively stable environments enterprise pseudo sso solutions promise rapid concrete return investment 
architectures systems examined examples real world implementations include computer associates single sign www com 
need privacy protection open environments may outweigh deployment cost true sso schemes 
true sso systems eventually required open environments internet 
known proxy true sso systems designed open environments discussed section 
examples sso schemes section provides detailed descriptions certain sso schemes 
note preponderance existing discussed deployed sso schemes fall categories discussed local pseudo sso proxy true sso schemes examples class mentioned section 
section discuss important examples class 
show possibilities exist briefly discuss examples proxy pseudo sso scheme local true sso scheme 
kerberos kerberos formally described network authentication system regard sso scheme :10.1.1.112.9002
single security domain realm consists set users authentication server ticket granting server set relying sps 
authentication server ticket granting server www ca com solutions product asp id mitchell combined single entity called kerberos server acts asp 
security infrastructure kerberos relies solely symmetric cryptography user sp shares long term secret key asp 
simplified description sso kerberos follows 
protocol executed uses wishes log sp realm 

user possesses valid ticket granting ticket tgt previous protocol run step skipped 
user requests fresh tgt asp 
asp replies message contains fresh tgt session key construct authenticator data structure encrypted session key contains elements protect replay attacks 
session key encrypted long term key user shares asp key derived 
user decrypts session key supplying long term key 

user sends message asp contains tgt authenticator encrypted aforementioned session key identifier sp wishes access 
asp checks validity received message 
satisfied example tgt expired authentication fails 
user deemed authenticated asp 

asp replies message contains service granting ticket sgt data structure encrypted key shared asp sp question second session key encrypted session key step 
user constructs message containing sgt authenticator encrypted second session key 
message constructed correctly demonstrates user ability decrypt second session key regarded authentication assertion 
user sends sp decrypts valid logs user 
tickets tgt sgt encrypted data structures contain things user identifier network address server identifier corresponding session keys expiration timestamps 
sso achieved fact user need reenter long term key long tgt remains valid 
sso multiple realms achieved setting required relationships symmetric keys involved kerberos servers 
restriction type web ftp sps may rely kerberos user authentication long follow protocol 
user identifier sp sso identity sp relationship kerberos unlinkability sso identities issue 
interesting observe distinct kerberos accounts user linkable tickets bind user network address 
authentication mechanism long term secret key user mobility supported key derived password example suitable untrusted environment 
liberty alliance taxonomy single sign systems liberty alliance www org consortium member companies developed set open specifications webbased sso 
liberty terminology asp user identity provider principal respectively 
specifications security assertions markup language platform independent framework exchanging authentication authorisation information liberty notion trust circles formed trusted sets relying sps 
relationship asp sps supported contractual agreements outside scope specifications 
specifications users authenticate asp subsequently conveys authentication assertions relying sps order facilitate sso 
assertions contain name identifiers allow sps differentiate users 
user asp distinct identifier sp trust circle 
liberty sso identity sp relationship 
furthermore name identifiers constructed pseudo random values discernible correspondence principal identifier username identity provider asp sso identities pseudonymous unlinkable 
unlinkability compromised sps may able correlate sso identities users network addresses 
anonymous network access scheme section help 
profile information individual sps may maintain shopping habits telephone numbers credit card details compromise unlinkability 
time protection principals cautious choose service providers understand privacy policies 
independent assessment specifications respect privacy appears 
liberty specifications authentication method neutral details particular method employed explicitly stated authentication assertions 
means suitable user authentication mechanism user mobility untrusted environment supported 
liberty protocols schema specification defines generic requirements protocols conveying assertion requests responses parties 
concrete protocol bindings specified context liberty profile 
currently specified profiles rely secure socket layer ssl transport layer security tls protocol order provide secure channels parties 
public key infrastructure pki place 
separate pki may required profile requires assertions digitally signed 
authentication assertions sent asp sp routed user browser web redirects browser post profile example assertions sent form browser artifact profile artifact encoded url sp resolve assertion 
www oasis open org committees security mitchell version liberty include framework permissions attribute sharing allow organisations trust circle linked opposed operating independently 
specifications targeted comprehensive treatment identity management extends provision sso 
microsoft passport microsoft passport www passport com web sso service offered microsoft 
passport server acts asp 
users register asp supplying valid mail address password register mobile phone phone number personal identification number 
additional profile information address date birth credit card details may stored passport accounts 
account uniquely identified bit number called passport user id 
sps wish offer sso registered passport users need sign contractual agreement microsoft involves yearly provisioning fee implement special component web server software share secret key asp 
ssl tls channels required user passport server optionally user sp appropriate pki place 
sso achieved protocol executed user wishes log sp 

user browser redirected asp 

asp tries retrieve ticket granting cookie web browser cookie cache 
decrypts successfully valid user deemed authenticated rest step skipped 
asp requests user authenticate 
assuming successful authentication asp saves fresh browser cookie cache 
cookie encrypted master key known asp 
function similar tgt kerberos authenticator passport replaying stolen results successful impersonation 

asp saves set cookies browser cookie cache includes user profile information user share registration time 
cookie set encrypted secret key shared asp sp question 
functionality similar kerberos sgt acts authentication assertion 

user browser redirected back desired sp reads decrypts aforementioned cookie set satisfied logs user 
sso achieved fact long remains valid user need re authenticate step subsequent protocol runs 
authentication method password user mobility supported suitable untrusted environment 
passport kerberos uses taxonomy single sign systems single sso identity sp 
sso identity sp relationship unlinkability issue 
passport kerberos 
outline proxy pseudo sso scheme alternative true sso schemes described involve proxy acting gateway service providers 
user authenticate proxy time password scheme 
user connect sps proxy transparently fill identifiers passwords specific sps information credential database 
approach major advantages 
enable access services untrusted pc sp specific credentials reach user pc see section 
pseudo sso schemes deployed transparently requiring individual sps changes authentication procedures 
user mobility supported 
pseudo sso schemes unlinkability sso identities guaranteed 
local true sso scheme built tcpa final example scheme consider described greater detail 
trusted computing platform alliance tcpa industry consortium established agree specifications ways include trusted component computing platform 
scheme shows platform establish local true sso system 
scheme component user platform call authentication service acts asp authenticates user subsequently conveys assertions sps necessary 
integrity user platform software state includes measured tcpa function called integrity metrics 
sp reliably acquires software metrics integrity challenge response session specified tcpa 
step requires pki place 
sp needs verify metrics represent software configuration trusted purposes sso 
step includes verification certificates supplied manufacturer software including running user platform 
scheme uses tcpa specified credentials called identity credentials sso identities 
identity credential certificate issued special authority certifies specified platform conforms tcpa specifications uniquely identifying particular platform 
user acquire arbitrary number credentials platform 
identity credentials act sso identities sps need verify function requires pki place 
scheme offers relationship sso identities sps allowing assignment roles sso identities 
user mobility supported se sso identities bound user platform 
mitchell taxonomy sso systems analysed properties identified main types sso scheme 
characteristics types scheme summarised table 
examples sso schemes light taxonomy 
unfortunately exception proposed scheme described section true sso schemes offers sso identity sp relationship assign roles sso identities separate account created asp role 
clearly topic study 
table 
properties sso systems 
local pseudo proxy local true proxy sso pseudo sso sso true sso pseudonymity guar guar guaranteed ity guaranteed anonymous needs addi inte needs addi inte network access tional services services support needs addi suitable needs addi suitable user mobility tional services services authentication method tion method un supported suitable supported suitable method tion method deployment costs low low high high maintenance potentially potentially low low costs high high running costs low high low high trust relation dynamically dynamically concrete concrete ships changing changing consistent consistent clear sso architecture strengths weaknesses carefully consider environment opting particular sso solution 
generally speaking pseudo sso schemes probably suitable closed systems privacy protection issue 
identity management context just refers management life cycle credentials user maintains closed system 
hand identity management open environments internet may need incorporate privacy protection 
sso schemes privacy protection services ones discussed sections privacy aware identity man taxonomy single sign systems agement schemes ones described integrated true sso scheme 
appear precise indication achieved privacy level possible combined suitable true sso scheme 
practical scheme deliver indication potentially useful 
interesting see anonymous credential systems described combined authentication method neutral sso possibly anonymous network access 

adam back ulf ller anton 
traffic analysis attacks trade offs anonymity providing systems 
moskowitz editor information hiding th international workshop volume lecture notes computer science pages 
springer verlag berlin 

oliver berthold 
identity management 
federrath editor designing privacy enhancing technologies international workshop design issues anonymity unobservability july number lecture notes computer science pages 
springer verlag berlin 

jan camenisch els van 
design implementation anonymous credential system 
proceedings th acm conference computer communications security pages 
acm press new york 

david chaum 
untraceable electronic mail return addresses digital pseudonyms 
communications acm 

sebastian 
identity management support multilateral security 
computer networks 

jan de 
single sign architectures 
george yair frankel owen rees editors infrastructure security international conference bristol uk october proceedings volume lecture notes computer science pages 
springer verlag 

david goldschlag michael reed paul syverson 
onion routing anonymous private internet connections 
communications acm january 

internet engineering task force 
rfc kerberos network authentication service september 

uwe daniela gerd tom 
usability meets security identity manager personal security assistant internet 
proceedings th annual computer security applications conference acsac pages 
ieee computer society 

liberty alliance 
liberty alliance news letter volume issue edition november 

liberty alliance 
identity systems liberty specification version interoperability january 

liberty alliance 
liberty architecture glossary january 

liberty alliance 
liberty authentication context specification january 

liberty alliance 
liberty bindings profiles specification january 
mitchell 
liberty alliance 
liberty protocols schemas specification january 

menezes van oorschot vanstone 
handbook applied cryptography 
crc press boca raton 

microsoft 
microsoft net passport review guide november 

andreas chris mitchell 
single sign trusted platforms 
technical report rhul ma mathematics department royal holloway university london march 

andreas pfitzmann 
anonymity unobservability pseudonymity proposal terminology 
federrath editor designing privacy enhancing technologies international workshop design issues anonymity unobservability july number lecture notes computer science pages 
springer verlag berlin 

birgit pfitzmann 
privacy enterprise identity federation policies liberty single 
proceedings rd workshop privacy enhancing technologies pet dresden march lecture notes computer science 
springer verlag berlin appear 

eric 
ssl tls 
addison wesley reading massachusetts 

steiner clifford neuman schiller 
kerberos authentication service open network systems 
proceedings winter usenix conference pages february 

world wide web consortium 
platform privacy preferences specification april 
