agile application aware adaptation mobility brian noble satyanarayanan narayanan james eric jason flinn kevin walker school computer science carnegie mellon university show application aware adaptation collaborative partnership operating system applications offers general effective approach mobile information access 
describe design odyssey prototype implementing approach show supports concurrent execution diverse mobile ap plications 
identify agility key attribute adap tive systems describe quantify measure 
results evaluation odyssey indi performance improvements factor benchmark applications concurrently remote services network highly variable bandwidth 
adaptation key mobility 
prompt reactions mobile client offer acceptable service spite problems plague existence 
clude unpredictable variation network quality wide disparity availability remote services limitations local resources imposed weight size constraints concern battery power consumption lowered trust robustness resulting ex motion 
need adaptation recognized questions fol low 
form adaptation take 
system com ponents bear responsibility adaptation 
characterize adaptive capability mobile client 
compare alternative designs perspective adaptation 
answers related questions pa 
describe design implementation software plat form called odyssey show provides effective support concurrent execution diverse mobile applications 
iden tify agility key attribute adaptive systems describe quantify measure 
results evaluation odyssey prototype confirm benefits approach 
results indicate performance factor benchmark applications concurrently remote services network highly variable bandwidth 
research supported air force materiel command afmc darpa contract numbers go goo 
additional support hughes ibm intel 
views contained authors interpreted necessarily official policies endorsements express implied 
afmc darpa hughes ibm intel 
carnegie mellon university ment 
permission digital hard copy part personal classroom granted fee provided copies distributed profit commercial advan tage copyright notice title publication date appear notice copying permission acm copy republish post servers redistribute lists requires prior specific permission fee 
sosp saint malo france acm design rationale odyssey set extensions netbsd operating system support adaptation broad range mobile access applications 
applications execute mobile clients read update remote data servers 
goal building odyssey enable mobile scenarios 
motivation consider hypothetical scenario tourist computer running odyssey walking urban setting overlay network provides computer variety connection alternatives differ bandwidth coverage reliability 
higher bandwidth alternatives tive fading signal loss user moves radio shadows buildings 
walks user interacts computer spoken commands receives output head mounted synthesized speech 
speech software exploits remote compute servers connected capable degraded interactions ing tiny vocabulary disconnected 
application provides video narration local history content delivered re mote server 
application web browser respond queries local environment 
odyssey monitors resources bandwidth cpu cycles battery power interacts application best exploit 
example high bandwidth connectivity lost due radio shadow odyssey detects change notifies inter applications 
video application responds skipping frames displaying fewer frames minute web ap plication responds displaying versions large images user emerges radio shadow odyssey substantial improvement bandwidth notifies applications revert original behaviors 
user aware changing application behavior dur ing walk initiate adaptation involved details 
delegate decisions odyssey confident reasonable tradeoffs 
mobile scenarios motivated design odyssey benefits may valuable broader context 
ex ample large bandwidth variations arise wide area networks fluctuating loads 
adaptation supported odyssey valuable coping variation 
fidelity example previous section illustrates data accessed odyssey application may stored purpose repositories file servers sql servers web servers 
alternatively may stored specialized video libraries query image content databases back ends geographical information systems 
constraints mobility complicate data access servers 
ideally data item available mobile client indistinguishable available accessing application executed server storing item 
difficult preserve resources scarce form degradation may inevitable 
define fidelity degree dam client matches copy server 
fidelity dimensions 
known universal di 
systems coda ficus bayou expose potentially stale data applications network connectivity poor nonexistent :10.1.1.12.7323
dimensions fidelity depend type data question 
example video data additional dimensions frame rate image quality individual frames 
spatial data topographical maps dimensions minimum feature size resolution 
telemetry data appropriate dimensions include sampling rate timeliness 
dimensions fidelity natural axes adaptation mobility adaptation solely determined type data depends application 
different ap plications data may different tradeoffs dimensions fidelity 
key goal odyssey provide framework diverse notions fidelity easily incorporated 
focus mobile information access allows bound diversity manageable proportions 
specifically excluded purview applications involve stringent real time constraints video conferencing multi client interactive games 
supporting multiple levels fidelity complicates task evaluation 
adaptive applications trade fidelity data performance focusing solely result mislead ing evaluation 
example forcing applications operate lowest fidelity levels times system ensure better performance competing system strives support higher fidelity levels possible 
degenerate approach vio intuitive notion constitutes system 
evaluation adaptive system take account fidelity performance 
concurrency ability execute multiple independent applications concur rently mobile client vital 
ability taken granted desktop operating systems continues value mobile clients 
skepticism fueled popularity devices pdas pocket ers execute application time 
specialized mobile devices fill important niche convinced mobile users find valuable run background applications addition foreground application dominates attention 
example information filter ing application may run background monitoring data stock prices enemy movements alert user appro priate example application emergency re sponse situations may monitor physical location motion prefetch damage assessment information areas tra versed shortly 
effectively support concurrent applications control limited resources 
words needs centralized monitoring coordinated resource management mobile client operating systems historically formed role cpu cycles memory manage broader range resources network bandwidth disk cache space battery power 
need coordinate resource management applications effectiveness current approaches mobile com puting 
example commercial applications provide vertically integrated support mobility appli cation assumes full available network bandwidth 
sophisticated toolkit approach rover pays minimal attention resource coordination 
agility sound adaptation decisions require accurate timely knowledge resource availability 
ideally mobile client perfect knowledge current resource levels 
words time lag change resource availability detection 
change sufficient warrant modification client behavior accomplished delay 
course physical system meet ideal 
best hope build close approximations design engineering 
key property adaptive system speed accuracy detects responds changes resource availability 
call property sys tem 
changes large erratic highly agile system function effectively 
stable environments agile systems may suffice 
agility property mobile sys tem determines turbulent environment function acceptably 
agility complex property components 
source complexity differing sensitivity different resources 
example system may sensitive changes network bandwidth changes battery power level 
source complexity differing origins changes re source availability 
change may caused variation supply resource due mobility changed demand concurrent applications 
different mechanisms may detecting different types changes may necessary distinguish components agility 
minimalism clean sheet approach designing odyssey decided extend existing system 
chose netbsd vari ant bsd unix operating system starting point 
netbsd source code publicly available allowing free distribution derivatives 
popular ity netbsd offers possibility attracting substantial odyssey user community 
avoided changes netbsd api internal structure essential necessary changes consistent netbsd idiom 
odyssey viewed ex minimalism represents smallest set interface code extensions believe necessary agile adaptation mobile environments 
application aware adaptation model adaptation odyssey approach adaptation best characterized application aware adaptation 
essence model col partnership system individual applica tions 
system monitors resource levels notifies applications relevant changes enforces resource allocation decisions 
application independently decides best adapt notified 
division responsibility directly addresses issues ap plication diversity concurrency 
diversity accommodated allowing applications determine mapping resource levels fidelity levels 
concurrency supported allowing sys tem retain control resource monitoring arbitration 
challenge design system support separation concerns compromising agility 
fake application aware jy models adaptation application transparent coda places application aware adaptation context span ning range extremes 
extreme adaptation entirely individual approach commercial software avoids need support 
discussed tion fails address issue application concurrency 
extreme upp transparent system bears full responsibility adaptation resource manage ment 
approach exemplified coda especially attractive legacy applications run unmodified 
applica tion concurrency supported diversity control fidelity realizing model approach application aware directly reflect separation architecture 
architecture code data generically applications entirely re differential handling data types 
unfortunately wide disparity physical logical properties various data types requires form type awareness incorporated system efficient resource age 
example size distribution consistency require ments data server differ relational database image data highly video data efficiently protocol drops lost data contrast reliable transmissions accept able file database updates 
impossible optimize differences system level knowledge type 
considerations lead sophisticated architecture odyssey responsibilities 
shared remote concurrent prop manage resources 
type specific knowledge allow effective management actions 
knowledge example estimate costs compressing cached item flushing odyssey incorporates specialized com ponents 
encapsulates support client necessary effectively manage data type 
fully support new dam appropriate writ incorporated odyssey client 
subordinate type independent component called viceroy responsible centralized resource management 
relationship envisioned application aware adaptation realized parts 
viceroy data centric defines lev els data factors resource second applications action centric provides applications control selection levels supported 
design implementation odyssey application operate odyssey objects express resource expectations notified expectations longer met respond changing fidelity 
odyssey mechanisms supporting requirements described sections 
operating odyssey objects consistent goal minimalism built netbsd file system calls defining completely new 
odyssey integrated netbsd new vfs system 
addition necessary add new system calls 
shown implemented viceroy war dens user space kernel 
operations odyssey objects redirected viceroy small kernel module 
system calls handled directly netbsd 
odyssey odyssey client architecture statically linked viceroy ensemble executes single address space user level threads 
com munication viceroy procedure calls shared data structures 
entirely sible communicating servers caching data appropriate applications contact servers directly 
implementation odyssey outside kernel consistent philosophy modem operating system designs spin 
extensibility motivation systems context odyssey result improved agility easier installation new 
integrating odyssey file system yields key ad 
gives understood framework useful infrastructure simplify implementation 
file performed odyssey objects appropriate warden semantics customized provide type awareness new system calls 
time approach imposes certain limitations data types naturally fit naming access methods provided file system 
standard file operations corresponding fidelity changes 
naming wo similar spirit directories 
access methods fidelity changes rely general purpose mechanism described section 
odyssey matures may discover ments functionality agility impossible move viceroy kernel 
compelling dence plan retain current architecture 
request path resource descriptor request id cancel request id resource negotiation operations resource id lower bound upper bound name handler resource descriptor fields generic resources odyssey handler request id resource id resource level upcall handler path opcode inbuf inout specific operations shows odyssey extensions netbsd prom ming interface 
note request calls vari ants identify odyssey objects file descriptors pathnames 
odyssey api expressing resource expectations applications communicate resource expectations odyssey request system call shown 
call takes resource descriptor identifying resource specifying window availability 
call expresses application desire told availability resource outside window 
time request availability resource window tolerance viceroy registers request returns unique identifier 
identifier viceroy notifying application resource left requested bounds application cancel system call discard registered request 
resource currently outside bounds tolerance window error code current available resource level returned 
application expected try new window tolerance corresponding new fidelity level 
fields shown 
resource named unique resource identifier 
lists generic resources plan manage odyssey 
prototype manages critical resource mobile com puting network bandwidth 
window tolerance indicated lower upper bounds 
resource descriptor specifies name procedure called notify application resource left window 
notifying applications viceroy discovers availability resource outside registered window tolerance generates corresponding application 
application adjusts fidelity individual policy 
issues request call register revised window tolerance appropriate new fidelity 
upcall handler invoked parameters shown 
parameter identifies request operation behalf upcall delivered 
second param eter identifies resource availability changed third parameter gives new availability 
upcalls closely resemble unix signals offer improved func tionality 
signals upcalls sent processes blocked ignored similar inheritance semantics process fork 
signals upcalls offer exactly order semantics receiver particular upcall 
upcalls allow parameters passed target processes results returned 
changing fidelity requests fidelity changes map netbsd file system interface 
data types natural access methods supported untyped byte stream model 
address shortcomings included general shown 
arguments specify odyssey object opcode type specific operation performed 
input output parameters specified unstructured memory buffers spirit ioctl system call 
example applications explore odyssey ability support application diversity modified different applications run 
applications drawn domain mobile information access video player source code access web browser source code publicly available 
third application speech recognizer chosen explore effectiveness odyssey outside original target domain 
application requires different strategy integration odyssey distinct notions fidelity 
collectively applications serve vehicle explore generality performance characteristics odyssey 
video player support video public domain software package generate video animation data stored vari ous formats local file 
shown split mono implementation client server wrote warden satisfy client requests fetch data server 
client 
video player odyssey movie stored multiple tracks server track fidelity level 
incorporated levels fidelity quicktime video data jpeg compressed color frames qualities black white frames 
storing tracks incurs modest overhead typically storing just highest fidelity track 
warden supports read movie data get particular frame specified track 
warden performs read ahead frames lower latency 
player opens movie calculates bandwidth re track movie data 
player begins movie highest possible quality registers cor responding window tolerance odyssey 
notified significant change bandwidth player determines new fidelity level switches corresponding track 
player switches low fidelity track higher warden dis cards prefetched low quality frames 
web browser netscape navigator simply netscape widely tool accessing world wide web 
especially interesting ap 
plication odyssey access source code 
directly modify netscape take advantage odyssey exploit proxy facility shown 
client extending netscape odyssey netscape requests redirected client module called 
netscape constitute single application viewpoint odyssey 
odyssey api selects fidelity levels 
netscape passively benefits adaptation initiated 
transforms requests netscape file operations odyssey web objects 
web warden forwards requests client mobile network connection dis mation server 
provides multiple levels fidelity images lines suggested fox 
images tend large constitute substantial fraction focusing high payoff 
highest fidelity images uncompressed 
progressively lower levels correspond jpeg compressed images decreasing quality 
warden provides set fidelity level 
distillation server fetches requested objects appro priate web server requested fidelity level sends results warden 
data passed netscape 
steps completely transparent netscape web server perceives normal web access 
netscape exemplifies unfortunate reality source code publicly available growing number important applica tions 
code 
approach described repre sents way shrink wrapped applications benefit odyssey 
possibilities include static binary rewriting executables dynamic modification system calls 
speech recognizer speech recognition offers considerable chal mobile computing 
especially useful leaves user hands eyes free ties driving 
resource requirements high accuracy speech recognition substantial especially mobile background noise high 
adding higher level semantic processing language translation leads greater demands computing resources 
combination op challenge led implement speech recognition odyssey application falls outside primary domain mobile information access 
client speech recognition odyssey illustrates support speech recognition odyssey 
starting point implementation speech recognition system called janus source code able 
split system client server constructed speech warden 
server accepts forms put raw utterance utterance processed phases janus 
pre processing compression ratio approximately modest cpu cost 
speech front captures raw speech utterance writes object odyssey namespace 
warden current bandwidth estimate decides faster form pass recognition local slower cpu ship larger raw utterance server 
extreme case disconnection local janus capable recognizing ut severe cpu memory cost recognized resulting text available front read operation 
currently refining imple mentation support multiple levels recognition fidelity 
evaluation central questions drove evaluation odyssey agile odyssey face changing network width 
beneficial applications exploit dynamic adaptation possible odyssey 
important centralized resource management con current applications 
posing questions secondary questions come light concept agility quantified 
second experimental methodology obtain agility metrics 
address secondary questions section answers primary questions section 
evaluation strategy agility metrics approach quantifying agility draws established principles measuring dynamic response field control sys ns 
accepted practice field characterize adaptive ability system respect particular output terms responses set input 
waveform conceptually simple greatly stresses adaptive ability system varying input sharp substantial manner 
step step nll impulse step step waveforms seconds long single abrupt transition midpoint 
impulse impulse waveforms approximations ideal impulse spike infinitesimal width infinite height 
approximate ideal second wide excursions middle second period 
choice parameters waveforms basic network time constants long system steady bandwidth ation second perturbation large detectable sensitive system small missed insensitive 
waveforms agility experiments illustrates waveforms ation 
waveforms idealized approximations occur practice 
step waveforms arise lay networks mobile client may different network interfaces 
virtual radios spec may allow sharp bandwidth degradation 
impulse waveforms arise result frequent transitions situations presence bursty background traffic 
experimental methodology generating discontinuous waveforms subject odyssey applications waveforms need generate sharp discontinuities network bandwidth 
accomplishing repeatable reliable manner extremely difficult real network combination networks 
solve problem technique called modulation 
trace modulation performs application transparent emulation slower target network faster wired lan 
implemented parts layer inserted protocol stack trans port network layers user level daemon 
added layer delays traffic modified host simple linear model combining latency bandwidth induced de lays daemon reads list model parameters called re play trace file feeds delay layer 
created synthetic replay traces obtain bandwidth variations corresponding waveforms 
interpreting results odyssey applications trade fidelity performance interpreting results experiments requires care 
comparing strategies strictly better provides better fidelity comparable performance better performance fidelity 
cases comparison take account application goals 
comparisons clearly dependent choice fidelity metrics 
relative comparisons single application requirement fidelity strictly increasing quality data increases 
experimental conditions aii experiments identical hardware software con single mhz pentium client mb mem ory collection mhz pentium pro servers mb memory 
machines running netbsd kernel customized include odyssey trace modulation extensions modulation performed client 
bandwidth levels encoded modulation traces chosen constraints mind 
reasonably achieved current hardware 
second provide interesting tradeoffs running sample applications 
chose kilobytes second high low bandwidth levels 
protocol round trip time measured setup ms bandwidths 
experimental results agile odyssey 
order allow applications trade offs performance quality odyssey track changes supply demand network bandwidth 
odyssey may weakly connected environments rely purely passive observations active approach suggested keshav 
observations logged user level rpc mechanism udp 
mechanism combines conventional rpc protocol small exchanges sliding window selective pro tocol bulk data transfer 
distinct endpoint log observations different endpoints recorded indepen dently 
log entries kinds roundtrip entries recorded 
exchanges throughput entries arise bulk transfers 
round trip entry records time send request server receive response server computation time 
throughput entry records twin time receiver request receive window worth data sender transmit data receive acknowledge ment 
round trip throughput estimates smoothed viceroy equation new cu measured cu oid implementation uses cy round trip time throughput 
obtain bandwidth estimate observe transmission time bytes minus time transmitting time transmit request 
assuming symmetrical data rates 
yields expression bandwidth noise round trip estimates severely impact bandwidth es discount anomalous increases round trip time cap percentage rise possible estimate 
effect side caution underestimating bandwidth certain situations eliminates anomalies introduced user level implementation 
viceroy collects information ail logs estimate tal bandwidth available client 
estimates fraction bandwidth available connection 
con estimate composed parts competed pro fair share part reflecting expected lower bound 
varying supply measure agility respect bandwidth supply ran synthetic odyssey application bitstream con sumed data fast possible streaming warden single connection server 
data transfer varied network bandwidth waveforms 
ensure system steady state primed seconds prior observation 
bandwidth estimated odyssey waveform shown 
shows odyssey demonstrates excellent agility step waveform detecting bandwidth increase instantaneously 
second graph shows agility step waveform quite step 
settling time waveform time required reach stay nominal bandwidth range sec 
slower downward transition caused fact generate throughput estimate window data 
bandwidth falls abruptly large window data transmitted drop recorded packet window arrives 
figures show agility impulse impulse waveforms 
leading edge upward im pulse accurately traced trailing edge noticeable set time 
downward impulse short estimation settle accurately noticeable settling time trailing edge impulse 
varying demand examine agility respect band width demand 
began experiments single bitstream application running client 
primed system seconds ensure steady state observation 
seconds observation introduced second identical bitstream client 
study sensitivity re sults offered load repeated experiments appli cation attempting consume io nominal throughput 
experiments conducted higher modulated bandwidths 
figures show viceroy estimation bandwidth available competing streams experiments sec ond stream causes transient effects started 
transient pronounced higher load experi ments full utilization case takes seconds settle back nominal value 
low utilization second stream reaches nominal value immediately cases takes longer 
higher rates consumption stream give weight compared startup second stream 
stream competed bandwidth sec ond stream established 
beneficial adaptation 
compare performance fidelity adaptive applica tions odyssey versions applications static policies comparison represent fidelity number tween zero indicates application specific man ner quality data delivered 
experiments application executed workload adaptive strategy fixed strategy fidelity level 
execution repeated waveforms 
primed experiment second period constant bandwidth eliminate startup transients 

po 
step waveform lso loo 
step waveform impulse waveform 
elapsed impulse waveform shows agility bandwidth estimation face varying supply 
graph merges results trials bandwidth observation represented single dot tho graph 
dashed lines represent theoretical bandwidth emulated network specified synthetic traces cmu lation 
dotted lines measured instantaneous throughputs obtained large bulk transfer client server 
idc ally samples lie dashed dotted lines 
supply estimation agility ho 

fs elapsed utilization stream time sy lo elapsed ume 
fwo elapsed time sy attempted utilization stream shows agility bandwidth estimation note measure consumption 
upper curve total estimated bandwidth lower bandwidth available see ond stream starts seconds 
pairs straight lines show nominal ranges curve perfectly agile system show upper lower curves respec tive pairs 
graph depicts results trials 
solid lines show averages gray regions show spread observed maximum minimum values 
demand estimation agility video player compare adaptive behavior odyssey video player fixed policies jpeg jpeg black white 
higher bandwidth sufficient fetch jpeg frames 
low bandwidth jpeg frames fetched loss 
movie tracks encoded frames second frames display trial 
jpeg frames fidelity jpeg frames fidelity white frames fidelity 
fidelity single execution average fidelity frames displayed 
movie half frames displayed best tracks fidelity 
performance metric frames dropped 
adaptation goal play highest quality possible dropping frames 
applications choose preserve frame quality reduce frame rate 
summarizes results benchmark 
step waveforms roughly half frames displayed odyssey jpeg frames half jpeg frames 
impulse odyssey shows jpeg frames impulse jpeg frames 
adaptive nearly displays optimal quality frame 
waveforms impulse odyssey achieves better fidelity jpeg 
modest increase dropped frames 
waveforms impulse odyssey drops fewer frames jpeg strategy reverting jpeg frames low bandwidth 
impulse odyssey indistinguishable jpeg strategy 
adaptive strategy dropped frames occur primarily downward bandwidth transitions 
takes data trans fer odyssey notice drop bandwidth transfer fetching high quality frames destined late 
web browser web browser experiments repeatedly fetched kb image fast possible 
preserve experimental control image stored web server test network distillation server interposed client web server 
choose levels fidelity original quality jpeg compression quality levels 
fidelity levels respectively 
fidelity experiment average fidelity images fetched experiment 
performance metric average time fetch display image execution 
baseline compare executed trace unmodified private ethernet 
web client adaptation goal display best quality image fetched twice ethernet time case seconds 
goal images fetched high bandwidth 
low bandwidth jpeg best possible 
summarizes results web benchmark 
static strategy fetching full quality images meets formance goals impulse case 
surprising trace provides sufficient bandwidth full quality images 
contrast odyssey meets performance goal cases better quality sufficiently fast static strategies 
impulse case odyssey fooled fetching better quality images brief period impulse transient increase bandwidth 
speech recognizer speech experiments recognized single short phrase repeating recognition quickly possi ble 
quality recognition vary inter metric speed recognitions take place 
fig ure gives recognition times possible strategies hybrid remote adaptive 
bandwidths traces hybrid translation correct strategy speech sole application 
shows odyssey duplicates hybrid strategy 
confirmed experiments reported higher bandwidths adaptive strategy benefits 
important centralized resource management 
examine usefulness odyssey centralized re source management 
comparing odyssey forms uncoordinated resource management appli cations concurrently running longer synthetic wave form shown 
basis comparison modified viceroy support faire resource management combining infor mation logs section log examined isolation 
reflects applications discover information accurate globally obtained similar delays discovery 
waveform jpeg fidelity fidelity drops drops jpeg odyssey fidelity drops drops fidelity table gives fidelity number frames dropped various strategies waveforms note larger fidelity values represent better quality fewer dropped frames indicates better performance 
observation mean trials standard deviations parentheses 
notice odyssey achieves fidelity better jpeg cases performs better jpeg 
video player performance fidelity jpeg jpeg jpeg full quality odyssey waveform fidelity fidelity fidelity fidelity time time time time time fidelity ethernet step step impulse impulse table gives fidelity average time netscape fetch display test image various strategies waveforms 
note larger fidelity numbers represent better quality 
smaller times indicate better performance 
observation mean trials standard deviations axe 
parentheses 
notice odyssey achieves better fidelity jpeg nll cases strategy meets experimental error cases 
recognition sec 
waveform rem odyssey step table gives average time seconds recognition speech application static strategies adaptive strategy waveforms 
observation mean trials 
standard deviations shown parentheses 
note odyssey correctly reproduces hybrid case optimal bandwidth levels 
speech recognizer performance trace models bandwidth variation seen user walking hypothetical setting 
number indicates time duration minutes 
high low bandwidths indicated section 
user begins connected soon enters intermittent quality 
enters radio shadow caused large building returns connectivity 
bandwidth variation urban scenario web browser performance fidelity imagine networking layer ing system immediately notifying applications switching tween technologies 
implemented stmt egy call blind optimism theoretical band width viceroy transition upcall 
viceroy notifies interested applications 
accurate reflect impact tions delivered delay bandwidth discovery presents results experiment 
fidelity performance metrics application goals section 
odyssey centralized resource estimation provides significant benefits faire blind optimism 
correctly accounting bandwidth competition odyssey web browser video player fetch data lower fidelity enabling cations come closer performance goals 
odyssey drops factor fewer frames strategies web pages loaded displayed roughly twice fast rc network utilization improves speech recognition time 
related best knowledge odyssey system simul address problems adaptation mobility applica tion diversity application concurrency 
effort propose implement architecture application aware adap tation pays careful attention needs mobile computing identification agility key attribute mobile systems approach evaluating occurred context odyssey 
time odyssey benefited table demonstrates benefit odyssey resource comparing implementations uncoordinated resource management 
fidelity performance metrics experiment am figures 
notice degrading fidelity fetched video web data odyssey comes closer application performance goals factors 
trade possible odyssey accurate estimation bandwidth available application 
observation table mean trials standard deviations parentheses 
previous 
substantial debt owed coda demonstrated client resources effectively insu late users applications vagaries mobile information access 
strategy trading lowered consistency improved availability shown effective usable coda re lated systems ficus bayou 
recognition consistency represented particular dimension broader con cept fidelity led design odyssey 
aspects odyssey prototype implementation user space log mechanism monitoring network quality positive experience similar strategies coda 
systems served backdrop thinking fidelity rover toolkit mobile web software mobi saic software embodying concepts dy namic documents distillation commercial email pack ages numerous pdas pocket ers 
examination systems helped identify es missing ingredient designs effective man agement scarce resources multiple applications 
systems conjunction coda helped formulate tax adaptation strategies faire application aware application transparent 
issues resource reservation guarantees lie heart real time systems important high formance networking communities applied reservation techniques changes mobile clients 
reserving particular quantity resource reserve range underlying system transparently adapts range 
second range exceeded client moves renegotiation involving path ated 
contrast systems odyssey abandons reservation model entirely reserved bounds wide degenerate application transparent adaptation costly ations behalf mobile host frequent 
framed consideration ultimate responsibility coping resides applications 
odyssey role improve efficiency agility fairness insulating ap plications insignificant variations resource levels providing focal point resource monitoring allocation 
adaptive systems mccanne video player employ feedback driven adaptation odyssey measurement approach 
systems scale back quality resource consumption application performance poor attempt discover additional re sources optimistically scaling usage 
application specific feedback relieves systems need calibrate individual resources feedback application 
performance fidelity concurrent applications shown kind faire approach pm vide application concurrency works applications 
attempts increase resource usage amount active passive resource monitoring ques strategy bandwidth scarce 
installation pieces code low levels sys tem different data types common practice databases io 
primary purpose code improve disk management 
practice differs support multiple fidelity levels 
see short medium long term tasks ahead 
prototype improvements alluded constitute short term tasks 
specifically intend incorporate adaptation objects images web application section 
plan add support multiple levels fidelity section 
medium term plan enhance prototype gain experience real 
broaden support resource management range resources correspondingly expand scope evaluation 
enable odyssey support broader class applications making attractive platform serious 
expect deploy odyssey small user community gain empirical feedback complement evaluation controlled experiments 
long term plans speculative 
currently expect broad areas speech application section suggests importance able dynamically decide ship data computation 
capability currently provided ad hoc manner speech warden 
extending odyssey pro vide full support deciding data shipping enable thoroughly explore tradeoff mobile computing 
search distributed repositories performs poorly mo bile lacks temporal locality needed caching effective compensating poor bandwidth 
plan explore solution uses dynamic sets con junction support dynamic function versus data ship ping 
design adaptive mobile systems currently black art 
developing systematic principles design techniques analyzing agility stability built 
valuable 
need adaptation mobile information access widely accepted 
put forth view application aware adaptation offers general effective approach ad dressing need 
essence approach collaborative partnership applications system clear sepa ration concerns 
argue previous approaches adaptation represent limiting cases general approach 
odyssey architecture supports application aware adaptation paying careful attention variety practical tions 
prototype confirms feasibility realizing archi tecture ability support wide range applications 
evaluation identifies agility key enabling attribute adap tive system describes measure reports agility odyssey prototype 
evaluation confirms pro job balancing performance fidelity confirms importance centralized resource management 
time suggests avenues improvement 
odyssey promises versatile effective platform research mobile computing 
markus baur jie yang helped considerably understand ing janus 
possible mark 
bob baron provided valuable assistance netbsd innumerable occasions 
geoff kuenning david maltz lily mum wayne sosp shepherd jeff mogul pro vided insightful comments substantially improved 
careful detailed feedback anonymous re viewers led significant improvements content presentation 
pi bershad savage pardyak sirer fiuczynski becker eggers 
extensibility safety performance spin operating system 
proceedings th acm symposium operating system principles copper mountain december 
editor 
electrical engineering handbook chapter control systems 
crc press 
pi apple computer cupertino ca 
newton message pad handbook 
bartlett 
wireless world wide web 
pro ieee workshop mobile computing systems applications santa ca december 
duchamp 
issues wireless mobile computing 
pro ceedings third ieee workshop workstation ing systems key fl april 
engler kaashoek toole jr operating system architecture application level resource management 
proceedingsof th acm symposium operating system principles copper mountain december 
fox brewer amir 
adapting network client variability demand dynamic distillation 
proceedings seventh international acm conference architectural support programming languages operating systems cambridge ma october 
pi techniques 
morgan kaufmann 
ill wi joseph tauber gifford kaashoek 
rover 
toolkit mobile information access 
proceedings th acm symposium op erating system principles copper mountain december 
wi wi keshav 
packet pair flow control 
appear ieee acm transactions networking 
kistler satyanarayanan 
disconnected coda file system 
acm transactions computer systems 
wi tw pu wi wi georgiadis guerin pet rajan 
efficient support delay rate guarantees internet 
pro ceedings acm sigcomm conference stanford ca august 
gifford jouvelot sheldon toole jr semantic file systems 
proceedings th acm symposium operating system principles gray reuter 
transaction processing concepts apple computer inside macintosh quicktime 
addison wesley publishing reading ma 
inouye cen pu walpole 
system support mobile multimedia applications 
proceedings th international workshop network operating systems digital audio video st louis mo may 
kaashoek 
dynamic doc uments mobile wireless access www 
proceed ings ieee workshop mobile computing systems applications santa cruz ca december 
katz 
adaptation mobility wireless information systems 
ieee personal communications katz brewer 
case wireless networks 
spie multimedia conference january 
kleiman 
vnodes architecture multiple file sys tem types sun unix 
summer conference pro ceedings 
lu 
lee bharghavan 
adaptive service mobile computing environments 
ifip international workshop quality service new york ny may 
luotonen 
world wide web proxies 
com puter networks isdn systems september 
mccanne jacobsen vetterli 
receiver driven 
conference stanford ca august 
mckusick bostic karels quarter man design implementation bsd ing system 
addison wesley 
mercer savage tokuda 
processor capacity reserves multimedia operating systems 
proceedings ieee international conference multimedia cornput 
ing systems may 

exploiting weak connectivity dis tributed file system 
phd thesis carnegie mellon university school computer science 
cmu cs 
noble satyanarayanan nguyen katz 
trace mobile network emulation 
pro ceedings acm sigcomm conference cannes france september 
pope webster 
qos support mobile computing 
ifip international workshop quality service new york ny may 
popek guy page heidemann 
replication ficus distributed file systems 
proceedings ieee workshop management replicated data houston tx november 
qualcomm san diego ca 
macintosh user manual 

rubin 
design automatic control systems 
artech house norwood ma 
satyanarayanan 
mobile information access 
ieee communications february 
satyanarayanan kistler kumar okasaki siegel steere 
coda highly available file system distributed workstation environment 
ieee transactions computers april 
satyanarayanan noble 
role trace modula tion building mobile computing systems 
proceedings sixth ieee workshop hot topics operating sys tems ma may 
siewiorek 
modalities interaction cmu wearable computers 
ieee personal communi cations february 
steere 
exploiting non determinism set iterators reduce latency 
proceedings th acm sym operating system principles saint malo france october 
steere 
dynamic sets reduce aggregate latency data access 
phd thesis carnegie mellon univer sity school computer science 
cmu cs 
tennenhouse turletti bose 
spec testbed atm software radios 
ieee international conferenceon universal tions september 
terry theimer petersen demers :10.1.1.12.7323
managing update conflicts bayou weakly connected replicated storage system 
proceedings acm symposium operating system principles copper tain december 
robotics los altos ca 
pilot handbook 
part number 
voelker bershad 
informa tion system mobile wireless computing environment 
proceedings ieee workshop mobile computing systems santa cruz ca december 
waibel 
interactive translation conversational speech 
ieee computer july 
wallace 
picture compression standard 
communications ofthe acm april 
