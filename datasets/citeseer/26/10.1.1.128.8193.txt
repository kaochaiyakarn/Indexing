issues multiagent resource allocation yann chevaleyre universit paris dauphine france email dauphine fr paul dunne department computer science university liverpool uk email ped csc liv ac uk department computing imperial college london uk email ue doc ic ac uk lang irit universit paul sabatier toulouse france email lang irit fr michel tre centre de toulouse france email michel cert fr nicolas universit paris dauphine france email dauphine fr julian department computer science university bath uk email jap cs bath ac uk steve phelps department computer science university liverpool uk email csc liv ac uk juan rodr guez aguilar artificial intelligence research institute iiia csic barcelona spain email jar iiia csic es paulo sousa dei instituto superior de porto portugal email dei ipp pt informatica page xxx yyy keywords resource allocation negotiation preferences social welfare complexity simulation received may allocation resources system autonomous agents preferences alternative allocations resources actively participate computing allocation exciting area research interface computer science economics 
survey salient issues multiagent resource allocation 
particular review various languages represent preferences agents alternative allocations resources different measures social welfare assess quality allocation 
discuss pertinent issues regarding allocation procedures important complexity results 
presentation theoretical issues complemented discussion software packages simulation agent market places 
introduce major application areas multiagent resource allocation industrial procurement sharing satellite resources manufacturing control grid computing 
informatica page xxx yyy chevaleyre allocation resources central matter concern computer science economics 
emphasise fact resources distributed agents agents may influence choice allocation field called multiagent resource allocation mara 
questions investigated computer scientists procedural nature find allocation economists concentrate qualitative issues allocation 
comprehensive analysis problem hand requires interdisciplinary approach 
multiagent system mas paradigm offers excellent framework study issues 
mara relevant wide range important applications 
include industrial procurement manufacturing scheduling public transport fair efficient exploitation jointly funded earth observation satellites airport traffic management crisis management network routing timely allocation resources grid architectures 
survey salient issues mara 
remainder give tentative definition mara introduce main parameters section 
illustrate interdisciplinary character field list research questions consider particularly interesting challenging section 
give overview content main body section 
mara 
tentative definition multiagent resource allocation process distributing number items number agents 
definition needs qualified kind items resources distributed 
distributed words kind allocation procedure mechanism employ 
distributed objectives searching allocation objectives determined 
resources refer items distributed resources agents entities receiving 
stress terminology universally shared 
context applications mara manufacturing instance usually speak tasks allocated resources 
context term resource resources available manufacturer production refers call agent 
distinguish different types resources 
instance resources may may divisible 
divisible resources electricity different agents may receive different fractions resource 
case indivisible resources may may possible different agents share jointly resource access network connections opposed items clothing 
purposes task allocation problems regarded instances mara think tasks resources associated cost benefit 
allocations particular distribution resources agents called allocation 
instance case non sharable indivisible resources allocation partition set resources agents 
set resources assigned particular agent called bundle allocated agent 
agent preferences agents may may preferences bundles receive 
addition may preferences bundles received agents case network connections example value resource diminishes shared users 
type preferences called externalities 
agents may may report preferences truthfully 
provide incentives agents truthful main objectives mechanism design 
multiagent resource allocation informatica page xxx yyy allocation procedures allocation procedure find suitable allocation resources may centralised distributed 
centralised case single entity decides final allocation resources agents possibly having elicited agents preferences alternative allocations 
typical examples combinatorial auctions 
central entity auctioneer reporting preferences takes form bidding 
truly distributed approaches hand allocations emerge result sequence local negotiation steps 
objectives objective resource allocation procedure find allocation feasible find allocation tasks production units tasks get completed time find allocation optimal 
case allocation question optimal central entity choosing allocation solution combinatorial auction maximises auctioneer revenue respect suitable aggregation preferences individual agents system allocation resources maximises average utility enjoyed agents 
combinations possible objective may find optimal allocation small set feasible allocations considered optimal depend preferences central entity aggregation agents individual preferences auction mechanisms aiming balancing revenue maximisation bidder satisfaction 
course computing optimal allocation possible due lack time instance progress optimum may considered success 
social welfare multiagent systems referred societies agents aggregation individual preferences mara system modelled notion social welfare studied welfare economics social choice theory 
examples include utilitarian social welfare aim maximise sum individual utilities egalitarian social welfare aim maximise individual welfare agent currently worst 
role agents discussion shows term multiagent multiagent resource allocation different interpretations distributed resource allocation procedure term multiagent indicates computational burden finding allocation shared agents 
aggregation individual preferences assess quality final allocation term multiagent refers fact choice allocation depends preferences agents preferences single entity 
course term multiagent derived merely fact resources allocated different agents 
individual agents preferences preferences taken account allocation procedure centralised term multiagent may appropriate 
computational perspective mara introduced section may differ significantly traditionally studied microeconomics 
distinctive feature mara focus computational issues 
instance respect preferences individual agents interested representations efficiently represented communicated 
similarly case allocation procedures mara encompasses theoretical analysis computational complexity design efficient algorithms scenarios possible 
final example concerning strategic aspects negotiation may find classical results game theory fail hold due computational limitations participating agents 
informatica page xxx yyy chevaleyre research topics mara highly interdisciplinary field relevant disciplines include computer science artificial intelligence decision theory microeconomics social choice theory 
research mara take variety forms preferences suitable representation languages agent preferences 
issues consider include expressive power succinctness suitability view preference elicitation 
social welfare suitable measures social welfare assess quality allocation application 
circumstances expect optimal allocation 
complexity complexity finding feasible optimal allocation 
complexity decision problems agents need solve locally 
communication complexity amount information exchanged negotiation 
negotiation particular distributed approach suitable negotiation protocols 
strategies agents protocols 
algorithm design devise efficient algorithms mara algorithms combinatorial auction winner determination centralised case algorithms support complex negotiation strategies distributed case 
mechanism design devise negotiation mechanisms force agents report preferences truthfully reduce strategic complexity allow correct assessment social welfare 
implementation best practices development prototypes specific mara applications general purpose platforms support quick prototyping 
simulation experimentation different optimisation algorithms negotiation strategies perform practice 
serious impact theoretical impossibility results practice 
prohibitive theoretical intractability results computational complexity practice 
interplay theory applications constraints real world applications impose theoretical models mara 
theoretical results inform development new tools 
aim survey provide base line issues 
particular range languages representing preferences give overview social welfare measures relevant mara review known complexity results area 
difficult precise predictions performance resource allocation procedure theoretical means discuss requirements met software packages mara simulations 
underline importance research area introduce prestigious applications discuss challenges imposed mara models applications 
overview remainder survey organised follows 
section introduce major application areas mara technology 
industrial procurement joint exploitation earth observation satellites manufacturing control grid computing 
section highlight specific challenges raised applications 
review important parameters relevant definition mara problem 
firstly section discuss generic properties resources indivisible sharable properties affect design concrete mara system 
move section issue preference representation individual agents 
agent needs endowed suitable representation preferences alternative allocations important able express preferences compact way 
discuss utility functions logic languages bidding languages combinatorial auctions 
third parameter definition mara problem social welfare measure similar tool multiagent resource allocation informatica page xxx yyy employ assess quality allocations 
range different concepts including collective utility functions pareto optimality envy freeness reviewed section 
section attempt give short overview relevant parameters choosing designing allocation procedure 
discuss respective merits drawbacks centralised distributed approaches mara briefly introduce centralised auction protocols distributed negotiation protocols 
report results establish circumstances allocations expected converge socially optimal state distributed negotiation setting 
section survey relevant complexity results 
concentrate computational complexity problems finding socially optimal allocation briefly discuss issues communication complexity mara concerned length negotiation processes 
presentation theoretical issues complemented discussion software packages simulation agent market places section 
start giving overview typical requirements met packages list relevant software products available mara researchers interested simulation 
section concludes 
application areas mentioned mara relevant wide range application domains 
section introduce problem domains addressed authors survey 
industrial procurement sourcing process multiple goods services usually involves complex negotiations include discussion product features quality service availability issues 
consequently commercial systems support online negotiation sourcing tools developed 
fact sourcing established part business landscape 
enormous challenges confronting users want get maximum value sourcing 
problem description traditionally core sourcing process comprises tasks request quotation proposal rfp provider selection rfp delivery offer generation negotiation offer counter offer interaction reverse auction selection best offers 
typically buyer creates sequentially adding items 
item specifies product service 
paradigmatic example multi item occurs industrial settings 
production plan outlined erp enterprise resource planning scm supply chain management application comes shape list items produced parts required product called bill material 
basis buyer initiate multiple sourcing events devoted procurement parts items produced 
commercial systems support online negotiations released best knowledge single system claim address full complexity online negotiation 
generation sourcing tools merely incorporate single item price quantity reverse auctions mechanisms 
offer basic negotiation capabilities usually reduced demand offer matching tool example online vertical market places 
general terms lack decision support functionalities decision making sourcing involve offers described dozen attributes 
furthermore lack technology support computationally complex negotiation paradigms inhibit application promising mechanisms combinatorial reverse auctions 
challenges degree automation delegation trading agents industrial procurement settings low believe informatica page xxx yyy chevaleyre mara techniques contribute improve situation 
follows identify challenges commercial tool aiming successful implementation resource allocation human software agents industrial procurement setting address 
preferences buyers providers 
best capture represent trading agents preferences effectively value trading partners offers counter offers 
advances preference elicitation encouraging see instance remains achilles heel industrial procurement applications 
business rules constrain admissible allocations 
direct auctions items sold physically concrete allow configuration negotiation involving highly customisable goods buyers need express relations constraints attributes different items 
hand multiple sourcing common practice safety reasons offer aggregation needed cope high volume demands 
introduces need express constraints providers contracts may awarded 
providers may impose constraints offers 
highly expressive languages buying providing agents required 
incorporating business rules allocation procedures lead balanced safer allocations 
consider buyer wants buy chairs colour model fine opening new restaurant uses procurement solution launches reverse auction 
employ state art combinatorial auction solver possible solution buy chairs provider chair provider simply cheaper best allocation possible specify case buying provider minimum chairs purchase required 
different scenario optimal solution tell buy blue chairs provider pink chairs provider 
preferences chairs colour specify chairs colour 
simple example shows modelling natural constraints solutions obtained may mathematically optimal unrealistic 
automated negotiation strategies 
dimensions take account designing negotiation strategies 
agents may negotiate multiple attributes item bundle multiple items may hold separate interdependent negotiations 
negotiation techniques trade candidate techniques put forward research arena 
current procurement practices tell possibility automatic offer submission seen interest repetitive sourcing events private sourcing platforms providers business rules known result provider qualification procedure frame contract 
full application automated trading faces barriers providers wanting reveal capabilities preferences third parties 
choice mechanism 
commercial sourcing tools offer increasing number customisable negotiation mechanisms 
market design highly complex intricate task 
new trends automated mechanism design evolutionary mechanism design may prove valuable assisting design market scenarios ensure certain global properties 
winner determination algorithms 
research algorithms capable identifying optimal set offers multiattribute multi item negotiation scenarios side constraints representing business rules required 
bundling 
buyer seller conduct single negotiation auction entire bundle goods interested purchasing selling group items bundles conduct negotiations 
unfortunately complexity reasons combinatorial bidding capabilities rarely commercial systems 
overcome problem think third approach past market real data knowledge bundle items divided separate negotiations appropriate providing agents invited certain properties satisfied multiagent resource allocation informatica page xxx yyy invite providing agents offer items bundle 
properties model expertise sourcing specialists form rules thumb 
challenges tackled developed negotiation support tools 
instance agent aware decision support service acting combinatorial negotiation solver multi item multi unit negotiations auctions integrate business rules constrain admissible solutions 
novel decision support tool mixed bundling help auctioneer determine group items promising bundles produce high revenue 
promising bundles satisfy certain properties believed competitive sourcing scenarios 
properties defined sourcing professionals capture experience knowledge domain 
earth observation satellites consider real word application exploitation earth observation satellites 
application pertains problem allocating set indivisible goods agents possible monetary compensation 
see typical case sharing problem different auction situation especially fairness key issue 
problem description due high cost space projects funded exploited agents countries companies civil military agencies 
mission eos acquire images photos specified areas earth surface response observation demands users 
satellite operated image programming processing center 
day center collects set observation demands agents 
usually demand covered single image complex demands may arise see 
demand weight positive integer reflecting importance requesting agent assigns satisfaction demand 
daily task center build imaging workload satellite day selecting images acquired set agent demands 
naturally exploitation satellite obey set physical constraints time window visibility constraints minimum transition times successive image acquisitions memory energy management 
due exploitation constraints due large number possibly conflicting demands set demands satisfied individually may satisfiable single day 
physical constraints define set admissible allocations images agents 
exploitation eos meet requirements efficiency satellite 
equity agent wants get return investments proportional financial contribution 
modelling consider simple problem agent exploits resource 
case allocation problem consists selecting day admissible sequence images acquired satellite day allocated agent 
agent measures satisfaction utility function may defined sum weights allocated images 
efficiency requirement comes simple optimisation problem utility function agent maximised set admissible allocations see tre description algorithms solving mono agent allocation problem 
turn case agents exploit satellite 
simplicity assume agents equal rights resource may assume example funded satellite equally 
course agent wants maximise utility function generally antagonistic increasing utility agent lead decreasing utility 
fair compromise realisation role suitable preference aggregation mechanism 
mechanisms discussed detail informatica page xxx yyy chevaleyre section 
min function egalitarian social welfare fits requirements naturally conveys equity requisite try agent happy happy possible refinement approach called ordering see section 
mentioned weights demands freely fixed agents 
order able compare individual utilities agents common utility scale set number express level satisfaction 
tre adopted approach known kalai solution see section individual utilities compared relative maximum utility agent receive 
noted auction problems preemptive constraints application image requested agents allocated resources sharable 
application interest offers real word examples dependencies demands 
example request may involve pair stereoscopic images receiving image result poor satisfaction level agent 
second example comes fact earth areas situated high latitudes images area taken distinct angles day 
consider stereoscopic demand concerning area suppose photographed angles 
pair stereoscopic images angle images angle 
demand quite naturally formulated issues logicbased preference representation discussed section 
sum eos multiagent fair resource allocation problem formally stated way 
agents express weighted demands simple logical propositions 
agent individual utility sum weights satisfied demands 
global utility aggregation normalised individual utilities aggregation function min function better ordering 
manufacturing scheduling control second half th century organisation mass production shifting flexible manufacturing customised products 
technological point view observed current manufacturing systems computer integrated manufacturing architectures drawbacks particular excessive rigidity 
furthermore manufacturing systems expected characterised globally distributed production units small quantities large variety products provision individual solutions tailored customer specific needs concurrent execution activities manufacturing process 
problems requirements manufacturing systems require coordination production units expected rigid static hierarchical manufacturing systems give way systems adaptable rapid change 
order overcome identified problems current manufacturing systems prepare expected scenarios new generation systems possess attributes distribution autonomy adaptability incomplete information handling 
manufacturing term resource allocation usually synonymous task scheduling 
furthermore term resource understood physical resource machine manufacturing plant 
problems area task step production plan specific order manufacture chairs type usually dependencies tasks obeyed operation drill hole done cool surface drill hole 
complicate things tasks involved production plan probably done different production resources creating network dependencies resources 
issue manufacturing area schedule valid disturbance machine tool breakdown rush order 
manufacturing control exe multiagent resource allocation informatica page xxx yyy cution real time application need find feasible solution greater find optimal 
system reach stable feasible schedule interruption shop floor 
manufacturing agents physically manufacturing system involves resources numeric control machines robots automated guided vehicles tasks carried time 
number configuration may change lifetime system 
manufacturing process dynamic suppliers consumers supply chain may change times impossible know exact structure topology system advance 
number products orders different alternative production routes account highly complex nature manufacturing systems 
design manufacturing systems excellent candidate application agent technology 
implementations multiagent systems manufacturing scheduling control agents model resources plant scheduling control tasks done distributed way means cooperation coordination actions agents 
manufacturing scheduling control touches areas distributed planning distributed artificial intelligence 
approaches single agent scheduling usually known centralised scheduling algorithm dictates schedules resource agents execute 
rationale modelling resources agents better mimic actual real world environment allow modelling characteristics resource available operations agenda tasks execute cost performing operation responding disturbances distributed nature multiagent systems benefit rescheduling algorithm involving agents directly affected disturbance rest community continue 
typical approaches rescheduling include removal late order reallocation low priority orders room rush orders shifting tasks resource similar example mara system manufacturing control prototype suite 
multiagent system dynamic scheduling manufacturing orders 
agents modelled extended logic programs written prolog ability handle negative incomplete knowledge 
system dynamic concerns agents resource agents depend system description file task agents depend existing tasks dynamic events 
negotiation uses set agents available time giving system high degree adaptability dynamic nature manufacturing arena 
grid computing pressing applications mara techniques grid computing 
true functioning systems grid resource allocation largely operate benevolent cooperative subnets participants know trust typically charge utilisation resources artificial accounting system applied 
frameworks exactly needed order test grid middleware functions objective see job executed range grid resources 
respects grid resource allocation distinct scheduling payment resource usage orthogonal problem actual processing job 
stage vision grid computing commodity energy reality resource allocation payment job processing come current research mara technology aims lay foundations union 
scalability issues benevolent cooperative network mutually trusting participants discarded client faced problem piecing range disparate resources required complete processing particular job 
informatica page xxx yyy chevaleyre parallels markets especially commodity markets efficient economic measures resource allocation mechanisms presence large numbers traders possibly complex packages goods required striking 
grid networks large approaches essential time far cooperative scientific research networks considers grid foreseen support analysis results emerging cern large collider 
issues seen function scale existing grids handle resource allocation single centralised mechanisms economic efficiency allocations may important 
grids larger wider range resources broader classes tasks centralised allocation inefficient allocation resources tolerable 
response various approaches need evaluated contrasted carefully controlled conditions centralised systems seeking optimal allocation distributed mechanisms involving bilateral negotiation 
intuition course treated suggests entirely satisfactory may act different ways benchmarks measure rest centralised systems relying combinatorial auction clearing algorithms deliver optimal allocations currently limited computation costs hundreds items thousands bids 
distributed systems relying bilateral negotiation consumer service provider component consumer constructs bundle certainly scale results 
risks inherent approach significant order undertake negotiation possibility contracting resource constrains choice subsequent resources leading incomplete bundles difficulty assessing quality distributed systems facilitating multilateral negotiation allocation attainable systems face similar computational challenges systems relying combinatorial auction mechanisms 
bundle valuation bundle surrounded uncertainty 
implicit scenarios client need combine range resources grid order carry computation 
market allocation extremes centralised distributed lie variants allocation 
essentially decentralised nature geographically dispersed grids potentially administrative centres relatively weak control individual nodes grid suited market schemes twin benefits reputation decentralised negotiation facilitate trading computational resources 
different market schemes exist approach mimic ideas seen commodity trading 
analogies risky sufficient parallels detailed exploration simulation desirable 
commodity markets blend centralised distributed commodity markets world time significant subset trading giving market market trades take place bilateral mechanisms typically continuous double auctions 
trader may participate market time giving rise communication markets current valuation trends publication closing prices 
commodity markets typically trade lots single kind depending market traders may direct buyers sellers middle men market makers 
economic analyses simulations indicate market makers increase liquidity enable market remain economically efficient lower levels participation presence buyers sellers 
furthermore case bundles lots varying quantities kinds goods market makers repositories market memory learning bundles potentially combination reputation fit resources identifying trends new kinds bundles emerge 
multiagent resource allocation informatica page xxx yyy mediators buyer seller fully justifying market maker 
trading framework highly applicable grids resource allocation grid systems 
types resources central parameter resource allocation problem nature resources 
section give brief overview properties different types resources 
properties characteristics resources static continuous discrete better understood characteristics chosen allocation system instance item sharable agents typically depend allocation procedure characteristics item 
continuous vs discrete resource may continuous energy discrete fruit 
physical property typically influence resource traded need case 
instance continuous resource typically regarded infinitely divisible 
particular negotiation setting may possible buy sell certain quantity continuous resource 
individual units discrete resource indivisible apple sold small pieces count discrete resource 
setting continuous resources bundle represented vector nonnegative reals alternatively numbers interval denote proportion particular resource owned agent receiving bundle 
bundles discrete resources represented vectors non negative integers 
just single item resource system vectors set suffice 
continuous resource may discretised dividing number smaller parts traded indivisible units 
instance treating orange juice truly continuous resource divided smaller subparts may agree units 
means methods developed discrete mara applicable continuous case may efficient methods specifically tailored continuous resources 
allocation continuous resources just single continuous resource studied depth classical literature economics 
computer science artificial intelligence hand focussed discrete resources 
concentrate discrete resources 
divisible discussed resources may treated divisible indivisible 
continuous discrete property resources distinction divisible indivisible resources level allocation mechanism 
survey concentrate indivisible resources 
sharable sharable resource allocated number different agents time 
example sharable resources context earth observation satellite application discussed earlier see section single picture taken satellite allocated different agents preemptive constraints 
canonical case considers resources non sharable rest assumption 
static resource may consumable sense agent holding resource may resource performing action 
instance fuel consumable 
resources may sense may vanish lose value held extended period time 
food classical example resource 
call resources change properties negotiation process static resources 
general resources assumed static 
mara assumed resources informatica page xxx yyy chevaleyre consumable 
rationale stance fact negotiation process really concerned actions agents may undertake outside process 
resource consumable assume remains static particular negotiation process 
particular concentrate static resources 
single unit vs multi unit multi unit setting possible resources type refer resources name 
suppose instance number bottles available system agents distinguish bottles 
single unit setting hand item allocated distinguishable resources unique name 
differentiation single settings matter representation 
multi unit problem principle transformed single unit problem introducing new names previously indistinguishable items 
vice versa clearly single unit problem degenerate multi unit unit problem 
important advantage working multi unit setting may allow compact way representing allocations preferences agents alternative bundles 
downside richer language variables ranging non negative integers binary values required case 
resources vs tasks sufficiently high level abstraction task allocation problem reduced resource allocation problem 
tasks may considered resources agents assign negative utility 
important characteristic tasks opposed resources fact tasks coupled constraints regarding coherent combination 
instance task may require achievement task precondition 
respect treating allocations merely assignments bundles items agents associated time constraints instance simple model 
concentrate general resource allocation problems issues specific task allocation exception review applications manufacturing control section 
preference representation preferences express relative absolute satisfaction individual faced choice different alternatives 
context mara alternatives different potential allocations resources concretely bundle resources received agent alternative allocations 
preference structure represents agent preferences set alternatives choices regarding definition mathematical model preference structures important question discussed researchers decision theory long time 
distinguish families preference structures cardinal preference structure consists evaluation function generally called utility val val set numerical values typically 
ordinal preference structure consists binary relation alternatives denoted reflexive transitive usually necessarily complete 
write strict preference indifference binary preference structure simply partition set set bad states 
binary preference structure seen degenerate ordinal preference structure degenerate cardinal preference structure 
fuzzy preference structure fuzzy relation function 
degree preferred fuzzy preferences general ordinal cardinal preferences 
decision theoretic view preferences shared communities mathematical economics multi criteria decision making 
multiagent resource allocation informatica page xxx yyy going concentrate cardinal ordinal preferences 
note cardinal preference induces ordinal preference utility function define complete weak order 
explicit representation preference structure consists data alternatives associated utilities cardinal preferences relation ordinal preferences 
representations spatial complexity cardinal structures ordinal structures respectively 
real world domains set alternatives set assignments value set variables 
cases alternatives exponentially 
reasonable ask agents report preference explicit way set alternatives exponentially large amounts listing exponentially alternatives utility assessment ranking 
case particular alternatives allocations resources assignments resources agents 
reason mara project needs languages preference representation aiming enabling succinct representation description problem having enumerate prohibitively large number alternatives 
preference representation languages allow concise representation preference structure explicit enumeration 
important issues addressed investigating preference representation languages elicitation hard elicit preference agent obtain statement expressed preference language 
cognitive relevance close language way humans express preferences 
expressive power representation language relevant question express preorders utility functions complete preorders strict subclass computational complexity language computational complex ity comparing alternatives deciding alternative optimal finding optimal alternative 
comparative succinctness languages determine preference structure expressed expressed significant supra polynomial increase size case said succinct 
section going give brief survey languages preference representation 
discussing different forms representing utility functions move logic languages preferences developed artificial intelligence 
going discuss bidding languages combinatorial auctions topic closely related representation preferences individual agents mara 
utility functions 
rm set indivisible resources 
going consider utility functions val mapping bundles resources subsets numerical values reals 
defining utilities bundles assume preferences agents free called allocative externalities 
value agent assigns bundle depend allocation remaining resources agents 
case task allocation opposed resource allocation may model preferences agents cost functions utility functions 
level abstraction considered survey effective difference representation utility functions cost functions 
case agents usually aim maximising utility case aim minimising costs 
going review languages representing utility functions 
bundle enumeration basic form representing utility function enumerate bundles assigns non zero value 
utility informatica page xxx yyy chevaleyre function set pairs bundles resources 
call bundle form 
bundle form fully expressive sense utility function may described 
serious drawback length descriptions typically exponential number resources 
additive form utilities possible exploit regularities function structure order build succinct efficiently computable descriptions 
utility function said additive exists coefficient set resources size coefficient represents synergetic value owning items utility associated proper subsets 
utility function terms coefficients say additive form 
additive form fully expressive sense describe utility function provided chosen large number resources functions represented 
typically considerably succinct simple bundles form think function mapping bundles number items bundle counterexamples functions mapping bundles single element non zero utility value 
application domains reasonable assume utility functions relatively small value allow succinct representation 
larger bundle resources difficult agent estimate additional benefit incurred owning resources bundle benefit incurred relevant subsets 
additive form representing utility functions inspired fuzzy measure theory 
introduced mara domain chevaleyre 
straight line programs representation form utility functions straight line programs slps 
slps may viewed directed acyclic graphs consisting distinguished types vertex inputs sources degree gates degree exactly 
subset gates degree distinguished program outputs 
addition graph structure slp fully defined associating binary boolean operation gate vertex 
slp inputs ordered 
xm gates topological labelling vertices assigns unique integer range vertex way xi gate edges max 
topological labelling may efficiently computed depth search 
slp inputs 
xm gates outputs labelled 
st computes result executing program consisting exactly lines single bit value res computed 
instantiation inputs 
ith line li computes res res binary operation associated ith gate inputs vertices labelled 
numerical value computed consequence particular instantiation inputs val res si model provides alternative representation utility functions suitable slp subset defines instantiation inputs bit characteristic vector value simply val 
noted definition uses range trivial matter extend allow additional output act sign bit interpret output bits groups defining numerator denominator 
bundle form slp form property fully expressive 
addition advantages number bits needed encode utility functions exponentially smaller required bundle form 
multiagent resource allocation informatica page xxx yyy function rm computable deterministic turing machine time may represented slp containing log lines 
easily seen considering function value odd value number bundles listed exactly function described program lines corresponding computation xi 
second property consequence constructions schnorr fischer pippenger 
simulations effective simply existence arguments efficiently implemented 
principle program formalisms defined order effective possible efficiently validate bit string describe syntactically correct program effective method determining program output 
slp approach satisfied runtime slp exactly number program lines contained 
extensive complexity theoretic treatments slp model described usual terminology combinational logic networks may monographs savage wegener dunne 
context mara slp form considered dunne 
logic languages going review logic languages preference representation extensive survey languages refer lang 
addition concise logic languages preserve readability similarity way agents express preferences natural language 
start languages propositional logic 
basic idea logic preference representation mara resource identified propositional variable pr true agent preferences modelling owns corresponding resource false 
bundle corre multi unit setting see section consider atomic sentences signifying sponds model 
agents express preferences terms propositional formulas goals want satisfied 
write express goal satisfied model corresponding bundle basic propositional representation simplest prototypical logical representation preference simply consists giving single propositional formula representing agent goal 
utility function ug generated extremely basic ug ug representation rough enable distinction goal states non goal states binary utility 
straightforward ways refining basic representation consist considering goal base gb 
gn 
order bundles number respectively set formulas satisfied gb cardinality card gb gi gi inclusion gb holds gi gi gi gi weighted goals order compare alternatives goals associated weights usually numbers tell important satisfaction goal considered 
formally preferences agent expressed means finite set weighed goals gb 
gn integer gi propositional formula 
bundle define penalty follows gi preference relation gb defined gb 
operators place sum aggregating weights violated symmetrically satisfied formulas 
prioritised goals languages defined allow compensation goals violation goal may bundle units type informatica page xxx yyy chevaleyre compensated satisfaction sufficient number goals lower importance 
prioritisation compensation possible need numerical data 
approaches partial priority preorders assumption priority relation complete 
case priorities formulas expressed function integers integers 
goal base finite set formulas associated function gb 
gn called rank formula gi 
convention lower rank means higher priority 
question extend priority goals preference relation alternatives 
choices frequent ones best ordering bo gb iff min gi min gi ordering min gi gi 
dis gb iff gi gi gi gi ordering dk gi gi 
lex gb iff exists dk dk dj dj lex gb iff lex gb dj dj note lex gb bo gb complete preference relations dis gb generally 
chain implications bo gb entails dis gb entails lex gb ceteris paribus preferences language preferences expressed terms statements things equal prefer alternatives ones formally propositional formulas set propositional variables including occurring ceteris paribus desire convention min 
confused related ordering aggregation individual preferences society agents section 
means true irrelevant things equal prefer irrelevant things variables preference relation induced set preference statements transitive closure union preference relations induced individual preference statements 
language extended allow indifference statements 
important sublanguage ceteris paribus preferences language binary obtained imposing syntactical restrictions goals literals speaking propositional variable 
variables mentioned context preference statement variable belong fixed set called parents variable possible assignment parents preference statement various extensions cp nets proposed expressive 
instance cp nets dominance relation variables 
languages cardinal preference representation style cp nets defined instance ucp nets generalised additive independence 
discussion problem weighted goals wellknown difficulty eliciting numerical preferences agents 
prioritised goals lack expressive power compensation allowed goals somewhat limits range 
ceteris paribus preferences close human intuition comparatively easy elicit interesting cognitive point view 
high computational complexity general case furthermore generally leave pairs alternatives incomparable 
bidding languages bidding languages combinatorial auctions allow agents communicate pref multiagent resource allocation informatica page xxx yyy erences auctioneer 
usual trade expressive power language compactness 
bids expressed combinations atomic bids form amount bidder prepared pay bundle prominent bidding languages xor languages language probably widely bidding language valuation bundle taken maximal value obtained computing sum disjoint bids subsets bundle 
instance bid form expresses bidder willing pay full set 
clearly language fully expressive represent subadditive utility functions example way specify prepared pay full set 
xor language atomic bids assumed mutually exclusive 
case valuation bundle simply highest value offered subsets 
xor language express normalised monotone utility function 
xor language expressive language prove far compact certain types preferences 
instance utility function requires exponential number atomic bids xor language linear number bids 
language widely considered simple natural bidding language attempts extend expressiveness requiring exhaustive listing xor bids 
instance possible combine types bids obtain xor xor bidding languages 
extensive discussion languages refer review article nisan 
interesting alternative simulate xor bids means bids 
idea simply course strategic considerations may cause agents report true preferences issue relevant viewpoint preference representation 
introduce fake resources phantom goods dummy items function making bundles mutually exclusive resource appears bundles 
instance wanted express set valued possible add fake resource obtain bid addition language known bidding language dummy items expressive xor language 
social welfare typical objective mara find allocation optimal respect metric depends way preferences individual agents system 
aggregation individual preferences modelled notion social welfare studied welfare economics social choice theory 
view line widely metaphor multiagent systems societies agents 
instance assuming individual agents model preferences utility functions mapping bundles resources numerical values concept utilitarian social welfare defined sum individual utilities measure quality allocation viewpoint system 
probably widely interpretation term social welfare multiagent systems literature 
welfare economics social choice theory hand different notions social welfare related concepts studied applicable mara systems 
context commerce application aim may maximise average profit generated negotiating agents 
case utilitarian social welfare provides suitable metric assessing system performance 
application introduced section agents need agree access earth observation satellite jointly funded owners agents hand important agent receives fair share common resource possibly reflecting size financial contribution owner 
informatica page xxx yyy chevaleyre case average utility clearly indicator performance 
generally speaking sending software agent system negotiate behalf know social rules system operates 
rules satisfactory may prepared agree bound outcome negotiation 
section going review notions social welfare proposed literature welfare economics social choice theory relevant mara 
specifically going discuss different approaches defining social welfare ordering mapping preferences agents society preferences society 
area handbook social choice welfare edited arrow sen textbook moulin 
going cover preference aggregation mechanisms ordinal cardinal agent preferences utility functions 
utility function induces ordinal preference relation concept defined ordinal preferences extends cardinal case 
notation 
set agents 
depending assume cardinal ordinal preference structures agents equipped utility function ui preference relation allocation mapping agents bundles resources bundle held agent allocation presentation independent exact nature resources divisible sharable 
cases assume agents preferences alternative allocations case envy freeness discussed section need assume agents preferences alternative bundles 
instance states agent likes allocation allocation despite generality sense think preferences defined bundles resources discussed section assume allocative externalities 
may considered abbreviation ui short ui 
pareto optimality allocation pareto dominated allocation hold agents agent allocation pareto optimal pareto efficient pareto dominated allocation 
allocation pareto optimal possible strictly improve individual welfare agent making worse 
pareto optimality generally regarded fundamental criterion efficiency 
note concept pareto optimality purely ordinal require preferences numerical comparable 
observe notion pareto dominance gives rise partial complete ordering alternative allocations 
collective utility functions individual agents utility functions represent preferences allocation gives rise utility vector 
un collective utility function cuf mapping vectors numerical values reals 
allocation determines utility vector cuf may regarded function allocations numerical values 
cuf sw induces social welfare ordering allocation socially preferred allocation sw sw 
sequel list examples indicate kind mara applications may useful 
utilitarian social welfare utilitarian social welfare defined sum individual utilities ui utilitarian cuf independent zeros individual utilities 
provide suitable metric average profit range commerce applications 
multiagent resource allocation informatica page xxx yyy egalitarian social welfare egalitarian social welfare utility agent currently worst swe min ui cuf offers level fairness may suitable performance indicator satisfy minimum needs large number customers 
fair division important area potential applications field mara 
nash product nash product defined product individual utilities swn ui notion social welfare favours increases utility inequality reducing 
sense may regarded compromise utilitarian egalitarian agendas 
interesting aspect cuf independent individual scales agent utility functions 
observe nash product provide meaningful metric social welfare individual utilities non negative better positive 
elitist social welfare elitist social welfare utility agent currently best max ui elitist cuf clearly fair measure social welfare useful applications require agent achieve goals 
rank egalitarian elitist representatives family rank dictator going define 
denote kth smallest utility assigned allocation agents kth coordinate ordered utility vector allocation see section 
rank dictator cuf swk defined follows swk special case particular interest median rank dictator cuf defined swk case case odd 
certain applications individual level welfare agent half agents system better half may considered suitable indicator system performance 
ordering ordering social welfare ordering refines egalitarian social welfare 
works comparing utilities satisfied agents case utilities coincide compares utilities satisfied agents 
idea formalised follows 
suppose agents utility functions express preferences 
allocation gives rise ordered utility vector result computing ui agent arranging values ascending order 
example means agent worst enjoys utility best utility third utility 
preferred exists integer 
words ordering lexicographic ordering ordered utility vectors 
favours reduction inequalities agents 
allocation optimal preferred allocation 
generalisations possible build families parameterised able induce continuous collection social welfare orderings including defined 
describe briefly informatica page xxx yyy chevaleyre families 
defined additive cuf sw ui parameter real number sgn sgn sgn convention log obviously sw measures utilitarian social welfare sw induces social welfare ordering nash product 
ordering limit social welfare ordering induced sw goes 
family particular case known ordered weighted averaging owa operators 
notation introduced define wi 
wn vector real numbers 
consider vector wi wk exactly rank dictator cuf including egalitarian elitist special cases rank 
consider vector wi case corresponds utilitarian cuf ordering limit social welfare ordering induced goes 
normalised utility necessary normalise utility functions aggregating individual preferences methods require individual utilities 
instance initial allocation resources may restrict attention allocations pareto dominate utility gains ui ui utilities ui input collective utility function ordering 
normalisation step evaluate agent utility gains relative gains expect best possible case 
precisely define maximum individual utility agent ui max ui adm adm set admissible allocations 
ui utility agent enjoy sole agent exploiting available resources 
define normalised individual utility agent follows ui ui observe max adm agents words maximum normalised utility agents 
optimum ordering respect normalised utilities known kalai solution 
envy freeness allocation envy free agent happy share bundles allocated agents 
allocation envy free holds agents envy freeness property require utilities different agents 
require items allocated envy free allocation exist consider say allocation problem single resource desired agents system 
items need allocated known allocation problems exists allocation pareto optimal envy free 
aim finding pareto optimal allocations minimise degree envy possible 
candidate definitions minimal envy 
possible approaches minimise number agents 
minimise average degree envy distance competitor agents 
example exemplify concepts introduced section consider scenario agents set resources indivisible shared 
suppose multiagent resource allocation informatica page xxx yyy preferences agents represented utility functions furthermore suppose additive ui ui fully specified values 
allocation giving 
allocation maximal egalitarian social welfare 
utilitarian social welfare hand maximal allocation elitist social welfare 
pareto optimal optimal envy free agent happier share 
fact allocation pareto envy free problem 
hand slightly different problem leaving rest unchanged allocation pareto optimal envy free 
welfare engineering insight different notions social welfare may appropriate different applications mara provided impetus development welfare engineering framework addresses issues systematic choice suitable social welfare orderings application mara possibly application driven design new orderings design appropriate rationality criteria social interaction mechanisms negotiating agents view different notions social welfare 
appropriate mean criteria mechanisms ensure convergence negotiation process allocation optimal respect chosen social criterion see section 
course depending application question criteria need balanced autonomy requirements individual agents 
example aspect welfare engineering elitist collective utility function discussed earlier human society may just right performance indicator distributed computing application agents working goals system designer interested achieving objective quickly possible 
aspect welfare engineering may characterised welfare economics artificial agent societies 
example second aspect convergence result achieve pareto optimal outcomes negotiation monetary side payments ask agents negotiate mutually beneficial deals involving number agents resources participate deals lower level utility 
aspect welfare engineering summarised inverse welfare economics characterisation mechanism design inverse game theory 
allocation procedures generally speaking allocation procedure find suitable allocation resources centralised distributed 
centralised case single entity decides final allocation resources agent possibly having elicited preferences agents system 
typical examples centralised approach combinatorial auctions 
central entity auctioneer reporting preferences takes form bidding 
truly distributed approaches hand allocations emerge result sequence local negotiation steps 
local negotiation restricted bilateral trading classical contract net approach systems allowing multilateral exchanges resources agents possible 
comprehensive survey allocation procedures mara scope 
survey address issues protocols level need address ontological issues types deals possible 
devise communication protocols accordingly messages agents exchange agree deal 
strategies designing individual informatica page xxx yyy chevaleyre agents need devise strategies agents allow best exploit negotiation protocol 
provide feedback level possible protocols designed way provide incentives negotiating agents adopt particular desirable profile behaviour mechanism design 
algorithms level need provide algorithms solve computational problems faced agents engaged negotiation 
includes algorithms decide respond proposal distributed negotiation scenario winner determination algorithms combinatorial auctions 
level may provide feedback levels particular computational problem proves hard solved reasonable amount time may call simplification negotiation protocol strategy 
concentrate issues 
fundamental question consider devising protocol mara system adopt centralised distributed design 
start short discussion respective merits drawbacks centralised distributed approaches mara 
followed protocols combinatorial auctions overview contract net related protocols distributed resource allocation 
connection discussion social welfare measures section review number results concerning convergence socially optimal allocation different protocols distributed setting 
centralised vs distributed centralised distributed approach mara advantages disadvantages 
possibly important argument favour auction mechanisms concerns simplicity communication protocols required implement mechanisms 
reason popularity centralised mechanisms push design powerful algorithms combinatorial auctions time perform reasonably practice 
course techniques principle applicable distributed case research area reached level maturity combinatorial auctions 
important argument centralised approaches may difficult find agent assume role auctioneer instance view computational capabilities view trustworthiness 
distributed model natural cases finding optimal allocations may computationally infeasible small improvements initial allocation resources considered success 
step wise improvements status quo naturally modelled distributed negotiation framework 
auction protocols auctions centralised mechanisms allocation goods agents 
agents report preferences wait final allocation auctioneer initial allocation goods combinatorial exchanges regular combinatorial auctions 
act reporting preferences called bidding naturally agents required reveal true preferences bidding may submit bid believe best serve interests 
bidding may public open cry known english auction model private sealed bids 
case open cry bidding distinguish ascending bids english auction descending bids dutch auction 
combinatorial domains interested goods agents submit bids different combinations goods typically auction protocols foresee single round bidding sealed bids 
bidding language see section determines types bids admissible interpret 
auction protocol specifies agent awarded goods bids received time price pay bundles allocated 
cases decision left entirely auctioneer seek maximise revenue 
multiagent resource allocation informatica page xxx yyy cases important auctioneer follows rules specified protocol rules designed way provide incentives bidders bid truthfully 
case vickrey auction model extensions combinatorial scenarios winning agents pay prices specified bids 
extensive review different auction models resource allocation combinatorial domains refer forthcoming book combinatorial auctions edited shoham steinberg review article topic parkes 
negotiation protocols give brief overview protocols developed negotiation resources distributed setting 
contract net popular negotiation protocol contract net protocol 
protocol primarily designed task allocation perfectly suited mara 
protocol consists interaction phases involving roles manager bidder announcement phase manager advertises resource number partner agents bidders 
bidding phase bidders send proposals manager 
assignment phase manager elects best bid assign resource accordingly 
confirmation phase elected bidder confirms intention obtain resource 
agent initiate interaction protocol assuming adequate role 
protocol really protocol leading assignment single task resource single contractor resulting deal agreement regarding single item 
extensions different extensions protocol proposed briefly review 
traconet system developed sandholm instance uses variant classical contract net protocol allow negotiation exchange bundles resources :10.1.1.19.2028
proposed extension bidders explicit mechanism utility transfer words money 
phase remains original contract net manager announces bundle resource 
protocol exchanges bidding money agents bid resources interested exchanging 
extension allows agents agree swapping resources buying 
sousa designed version contract net protocol bidders propagate constraints order guarantee coherence different operations related task 
concurrent contract net pointed managers negotiate simultaneously contractors contract net protocol lead unsatisfactory results 
particular contractors required answer single bid time may contracts 
overcome proposed extension pre bidding pre assignment phase added final bidding assignment phase classical contract net protocols 
pre bidding pre assignment phases long time agents propose temporary bids managers temporarily accept reject bids 
new phases positive effects deal temporarily accepted manager receives better offer deal turned temporarily rejected offer 
turns negotiations conducted simultaneously delaying final acceptance better deals manager point view may negotiated 
informatica page xxx yyy chevaleyre contractors modify offers times making temporary offers 
contractor receives better new offer manager modify temporary bids sending definitive bid 
pre bidding phase may quite long 
positive effect reducing risk decommitment 
alternative way tackle problem allow agents decommit apply penalties 
route followed levelled commitment approach proposed sandholm lesser 
convergence properties discussed earlier particular negotiation protocol fixed need devise strategies agents protocol 
area game theoretical nature 
different line research analysed negotiation behaviour individual agents affects quality distribution resources respect social welfare measures introduced section abstracting away details individual negotiation strategies 
instance rational agent may defined agent agree deals result positive payoff 
set rational agents agree mutually beneficial deals 
possibly mutually beneficial deals agents agree depends concrete strategies overly aggressive negotiation strategies may prevent agents identifying mutually beneficial deal 
cases admissible assume agents agree deal meeting certain rationality criteria resulting strictly positive payoff involved deal exists possible prove called convergence properties negotiation framework 
instance context negotiation finitely indivisible resources important result due sandholm states sequence deals mutually beneficial eventually result allocation maximal utilitarian social welfare provided agents monetary side payments compensate trading partners disadvantageous deals agent payoff linear amount money received 
infinite sequence mutually beneficial deals agents keep making deals system converge allocation maximises sum individual utilities 
similar result states sequence mutually beneficial deals side payments converge pareto optimal allocation 
important caveat results apply negotiation settings agents agree truly multilateral deals single deal may involve number agents number resources 
decomposing multilateral deal sequence bilateral deals possible bilateral deals making deal may mutually beneficial agents 
myopic agents require positive payoff single deal take part accept deal 
difficulty implementing general deals important understand circumstances sequences structurally simple deals suffice guarantee convergence socially optimal allocation resources 
results area show mutually beneficial deals side payments involve single resource agents time suffice reach allocations maximal utilitarian social welfare case agents modular utility functions 
fact class modular utility functions maximal sense class functions strictly including class possible guarantee agents utility functions larger class negotiating mutually beneficial deals single resources eventually reach allocation maximal utilitarian social welfare cases 
related identified classes utility functions ordinal preference relations guarantee convergence optimal allocations sequences deals involving resources 
utility function said modular bundles 
means utility assigned bundle resource computed sum utilities individual resources bundle classes modular additive functions coincide 
multiagent resource allocation informatica page xxx yyy complexity results growing body study mara considers various concepts complexity standard sense computational complexity theory terms concepts communication complexity 
comprises positive results algorithms provably efficient performance characteristics properties restricted classes allocation settings large collection negative results suggest naturally arising decision optimisation problems admit generally applicable algorithmic solutions 
section aim review extant addressed questions catalogue related open problems 
models assumptions structure consider subsequent text referred resource allocation setting mean triple 
set agents 
rm collection resources 
un describes utility function ui agent assume indivisible agent time see section 
allocation resources agents mapping set allocations denoted fact choices agent resources easily seen computational vs communication complexity informal terms traditional computational complexity theory concerned issue classifying computational problems respect particular computational resource required solution 
typically computational problems phrased decision questions input instance case property holds true 
example directed graph vertex case vertex reached path starts 
concept computational resource modelled formal model computation 
time space worst case number moves tape cells deterministic tape turing machine dtm correctly classifies input instances accepts rejects 
introductions computational complexity theory refer reader textbook papadimitriou 
context mara problems computational complexity results tended address termed global properties resource allocation settings allocations satisfying particular criteria exist 
begun address computational properties high level negotiation protocols reviewed section constraint allowed deals satisfy number decision problems may formulated regarding allocations reachable starting allocation sequences deals 
view complexity general needed concerned localised questions overheads involved describing implementing proposed deals deals may needed order reach allocation desirable properties term communication complexity deriving model put forward yao introduced capture combination number deals communication agree deal needed order allocation 
bulk survey concerned complexity issues perspective computational complexity discuss results related communication works dunne consider upper lower bounds number deals needed various contexts 
allocations properties resource allocation setting agents concerned seek bring allocation satisfy certain criteria 
discussed section criteria may purely quanti informatica page xxx yyy chevaleyre sum individual utility valuations utilitarian social welfare maximal amount called qualitative properties pareto optimal envy free outcomes instance interest 
representation issues standard computational complexity theory considers properties algorithms implemented defined model computation turing machines 
order sensibly consider performance specific algorithm reported function algorithm input length 
convention presumes comparing different algorithmic approaches particular problem comparisons reasonable representation input instances similar worst different formats translated efficiently 
considering instances represented case decision problems concerning resource allocation settings significant issue arises encoding collection utility functions domain utility function viewpoint upper bounds complexity characteristics algorithms employing enumerative form listing subset value pairs may comparable algorithms employing compact representation 
give complexity results different forms representing utility functions discussed section bundle form slp form additive form additive form particular interest 
quantitative criteria natural decision questions regarding measure utilitarian social welfare considered regard formalisms representing utility functions welfare optimisation wo instance question 
welfare improvement wi instance question 
wi wo np complete representation utility functions bundle form reduction set packing slp form reduction sat additive functions simplest proof reduction max sat 
additive slp results apply systems containing agents slp reduction shows problems remain np complete utility functions monotone 
qualitative criteria qualitative measures pareto optimality envy freeness give rise decision problems pareto optimality po instance question pareto optimal 
envy freeness ef instance question envy free 
deciding po conp complete slp additive utility functions 
shown dunne reduction unsat restricted instances clause variable numbers equal explicitly stated chevaleyre immediate consequence proof wi np complete 
continue hold agent contexts slp reduction applying monotone utility functions 
ef examined variety cases lang 
consider representation concise logic descriptions agent preferences discussed section 
addition basic question envy free allocations possible shown np complete agent settings question allocations combine envy freeness pareto optimality examined termed efficient envy free eef allocations 
decision problems demonstrate completeness results ranging npcomplete complete depending restrictions placed preference relations 
np completeness holds question ef slp model agent settings shown dunne reduction sat 
multiagent resource allocation informatica page xxx yyy path convergence properties collection results referred hold independently regime negotiate allocations 
number questions arise specifically context distributed negotiation structure admissible deals constrained 
suppose individually rational deals may deals beneficial agents involved 
monetary side payments allowed individually rational deals deals 
shown sandholm additional constraints deals bilateral involve exactly resource changing called class contracts cases rational deals implemented 
problem arises rational contract path go may involve agent repeatedly making deals involving resource paths may contain distinct deals 
general predicate deals decision problem arises path instance question 

dunne consider complexity path holds deal individually rational involves number resources passed agent 
agent settings slp representation shown path nphard case 
special case contracts holds utility functions monotone 
introducing idea maximal path initial allocation sequence deals satisfies final allocation case leads related problem convergence instance question case maximal paths starting allocation terminate maximises 
instance basic convergence result proved sandholm discussed section shows answer question restrict range admissible deals way 
convergence subject ongoing established corresponding individually rational contracts convergence conp hard slp model additive utility functions 
results hold agent settings 
utility functions modular additive answer convergence 
return issue relating ideas communication complexity discussed 
question interest bearing establishing upper bounds complexity path 
resource allocation setting consider rational deals implemented paths 
dunne introduced measures opt length shortest path realising max maximum value opt deals path exists 
max maximum value taken choices utility function max 
max max maximisation taken utility functions belonging class related study employing different terminology attention focussed utility functions allow rational deal implemented sequence rational contracts main case considered respect additive functions 
hold deal individually rational contract informatica page xxx yyy chevaleyre max max max add max mono results pertain classes additive monotone utility functions respectively 
constructed rational paths general monotone lower bound cases unique exponential length suggests standard assumptions problem path may np 
open problems conjectures existing results concerning measure exact complexity classifications derived representation styles utility functions conjectures plausible ought straightforward verify 
conjecture deciding allocation swe np complete bundle form slp form additive 
conjecture deciding max complete representation formalisms 
conjecture ef np complete additive utility functions 
challenging questions arise case problems related distributed negotiation 
predicate deals true deal rational contract 
exact complexity path convergence case different forms representing utility functions 
existing lower bounds complexity np hardness path slp form conp hardness convergence slp form additive utility functions may possible sharpen results 
simulation platforms theoretical microeconomics auction theory provides strong foundation analysing resource allocation problems 
occasion may faced problem assumptions underlying theory violated 
especially case mara scenarios computational concerns prominent 
example mechanism design originally developed economics concerned computational issues algorithmic communication complexity 
conventional auction design scenario issues speed winner determination communication costs submitting bids significant concern typically bottleneck respect entire auction process involve protracted lengthy decision making human traders 
market place run entirely automated trading agents issues concern performance costs similar order magnitude computational costs running auction 
costs taken account results auction theory somewhat brittle 
example revelation principle longer applies reduction communication complexity adopted design goals 
cases experimental simulations agent market places agent computational economics ace shed light grey areas difficult analyse existing theoretical tools 
software engineering problem choosing appropriate software framework implement ace simulation important consider requirements software needs meet 
section give overview typical requirements addressed ace software proceed give overview commonly simulation frameworks 
simulation vs implementation software simulating multiagent systems typically addresses different requirements designed implement multiagent systems 
natural view mas implementation simulation number problems approach shall address turn 
multiagent resource allocation informatica page xxx yyy firstly ideally outcome simulation experiment exactly reproducible initial conditions experiment 
possible mas implementation environmental factors experimenter control 
example precise outcome experiment may depend exact timing agent responds particular message time interval depend factors experimenter control memory cpu currently available agent 
secondly come analyse results simulation need generalise single run experiment single set initial conditions 
typically generalise samples free initial variables running experiment times sample 
simulation frameworks equipped log data outcome experiment format suitable analysis statistical analysis software matlab 
thirdly performance considerations simulation qualitatively different implementation 
software architecture mas implementation driven real world requirements hold simulation context 
example trading agents need able run different machines due commercial practical considerations 
distributed parallelism detrimental raw system level performance network communication overheads dominate performance considerations 
running agents host achieve orders magnitude performance increase 
impractical solution real mas trading implementation 
considerations apply simulation context relaxing constraints achieve significant gain performance 
similarly technical complexity real mas implementation addresses requirements simulation context 
instance mas implementations need robust system failures need respond quickly real time asynchronous events 
necessitates highly parallel software architecture involving example threads execution running simultaneously 
consid erations apply agent simulation real time parallelism simulated sequential program greatly reduces complexity software potential bugs 
mas interacts point environment 
mara scenario example environment constitute economically relevant characteristics human owners agents utility functions 
agents mas implementation environment software entity mas implementation directly ported agentbased simulation 
environment simulated 
agent simulation toolkits allow statistical simulation environmental factors 
key feature simulation toolkit library pseudo random number generators 
simulation toolkit provide high quality mersenne twister extremely large periods low statistical correlation ability produce random numbers arbitrary non uniform distributions 
summary developing system simulate mara scenario important choose framework toolkit specifically designed agent simulation opposed toolkits jade designed implementing multiagent systems 
simulating time practical purposes prefer simulate parallelism events sequential computation execute simulation multiple simultaneous events parallel realtime 
necessitates framework computing outcome events occur simultaneously 
approaches simulating time model 
continuous time models physical processes characterised smooth continuous changes timedependent variables 
differential equation models common analytical microeconomics 
models applicable approximations real market places large numbers participants market individual informatica page xxx yyy chevaleyre characteristics participants play significant role entities system treated simple homogeneous particles 
models break number participants small individual strategic characteristics participants prominent 
agent models address issue providing richer structure model market participants 
models macro level variables describing ensemble agents longer vary smoothly time 
necessitates alternative approaches temporal modelling 
discrete event simulation discrete event simulation frameworks model time discrete quanta called ticks 
intuitively tick thought instant time 
simulation tick tick cycle entities agents simulation signal agents interact instant time sending events 
individual events specify exact nature interaction agents 
auction simulation example auctioneer agent may send auction event trading agents auction closed 
tick cycle events exchanged entity updates internal state response events received 
agent modelling mara simulation agents need intelligent decisions resource utilisation acquisition behaviour 
intelligent agents community traditionally favoured symbolic approaches class bdi belief desire intention models 
mara scenario agent goals quantitative nature example agents act maximise expected utility 
field agent electronic commerce led adoption bayesian approaches agent decision problems multiagent reinforcement learning 
agent simulation frameworks developed artificial life alife community 
agents alife models little intelligent behaviour outset intelligent behaviour emerges col complex interactions agents equipped relatively crude decision making machinery 
connectionist approaches neural networks evolutionary approaches genetic algorithms popular models 
simulation main methodology alife research alife software toolkits tend mature terms simulation functionality 
correspondingly empirical methods relatively rare mas research frameworks simulating bdi agents opposed implementing bdi agents 
extensibility integration conducting research simulation necessary extend existing functionality system 
frameworks provide ability configure simulations desired behaviour implemented configuring existing components provided framework 
case necessary researcher implement desired behaviour writing code 
toolkits take main approaches allowing extensibility allow scripting custom language new classes methods inheritance 
software listing going give brief overview commonly general purpose simulation frameworks suitable analysing mara problems 
swarm swarm famous alife software toolkits continually improved active community users developers early 
provides api discrete event simulation uses high quality allows spatial modelling includes real time visualisation tools 
swarm opensource project written objective programming language 
multiagent resource allocation informatica page xxx yyy extensions swarm evo toolkit extension swarm provides agents ability mate evolve new behaviour time system similar genetic programming 
extension swarm provides higher level scripting language simpler objective 
goal allow researchers social sciences necessarily skilled programmers quickly develop simulations 
toolkit inspired swarm written entirely java ultimate design goals system alife oriented 
offers similar features swarm discrete event simulation highquality spatial modelling visualisation tools open source extensible 
core simulation functionality particularly mature robust colt library high performance scientific computing 
mas oriented features hand relatively immature explicit reinforcement learning bdi support 
implemented java provides raw discrete event simulation functionality 
providing minimal functionality system comes highly flexible designed api 
uses standard java api allow advanced plugged 
java discrete event simulation framework emphasis spatial modelling agents 
dex dex high performance toolkit providing high quality discrete event simulation spatial modelling real time visualisation tools including representation 
survey salient issues multiagent resource allocation mara timely fast developing area research interface computer science economics 
naturally choice topics selected detailed presentation driven part personal interests preferences 
confident material prove useful researchers working different aspects mara related disciplines 
part short field highlighted major application domains demonstrate wide scope mara underline urgent need advance field meet enormous challenges posed applications 
second part serves catalogue fundamental concepts mara generic properties resources characterising mara problem hand languages preference representation model interests individual agents social welfare measures related tools assess quality allocation resources 
third part addresses actual mara techniques 
includes particular allocation procedures selection relevant complexity results 
theoretical results sufficient survey simulation platforms serve starting point experimental 
important issues covered algorithmics mara analysis negotiation bidding strategies 
includes design algorithms winner determination problem combinatorial auctions survey area available 
literature game theoretical issues negotiation multiagent systems computer science general vast fast developing 
starting point readers interested computational approach game theory game theoretic approach computer science short papadimitriou 

survey written context activities agentlink technical forum group multiagent resource allocation mara 
informatica page xxx yyy chevaleyre pinson 
extended multi agent negotiation protocol 
journal autonomous agents multi agent systems 
enterprise sourcing 
www 
com 
arrow sen editors 
handbook social choice welfare 
north holland 

www brook edu es dynamics models 
banks carson nelson nicol 
discrete event system simulation 
prentice hall th edition 
benferhat dubois lang prade 
inconsistency management prioritized syntax entailment 
proceedings th international joint conference artificial intelligence ijcai 
morgan kaufmann publishers 
lee 
representation evaluation configurable offers 
bhargava ye editors computational modeling problem solving networked world interfaces computing optimization 
kluwer academic publishers 
bourne 
quote driven automated market 
proceedings aisb symposium information agents commerce 
aisb 
boutilier bacchus brafman 
ucp networks directed graphical representation conditional utilities 
proceedings th annual conference uncertainty artificial intelligence uai 
morgan kaufmann publishers 
boutilier brafman domshlak hoos pool 
cp nets tool representing reasoning conditional ceteris paribus preference statements 
journal artificial intelligence research 
fargier lang tre 
allocation indivisible goods general model complexity results 
proceedings th international joint conference autonomous agents multiagent systems aamas 
acm press 
lang 
efficiency envy freeness fair division indivisible goods logical representation complexity 
proceedings th international joint conference artificial intelligence ijcai 
morgan kaufmann publishers 
brafman domshlak 
introducing variable importance tradeoffs 
proceedings th conference uncertainty artificial intelligence uai 
morgan kaufmann publishers 
taylor 
fair division cake cutting dispute resolution 
cambridge university press 
brewka 
preferred subtheories extended logical framework default reasoning 
proceedings th international joint conference artificial intelligence ijcai 
morgan kaufmann publishers 

auctioning bus routes london experience 
shoham steinberg editors combinatorial auctions 
mit press 
appear 
cern 
lhc large collider 
web cern ch lhc 
chevaleyre 
additive convergent problem march 
draft 
chevaleyre 
multiagent resource allocation additive utility functions 
proceedings dimacs workshop computer science decision theory annales du 
multiagent resource allocation informatica page xxx yyy chevaleyre 
welfare engineering practice variety multiagent resource allocation problems 
engineering societies agents world springer verlag 
chevaleyre lang 
negotiating small bundles resources 
proceedings th international joint conference autonomous agents multiagent systems aamas 
acm press 
chevaleyre 
maximal classes utility functions efficient negotiation 
proceedings th international joint conference artificial intelligence ijcai 
morgan kaufmann publishers 
commerce ecommerce management platform 
www com 
conitzer sandholm 
complexity mechanism design 
proceedings th annual conference uncertainty artificial intelligence uai 
morgan kaufmann 
coste marquis lang marquis 
expressive power succinctness propositional languages preference representation 
proceedings th international conference principles knowledge representation reasoning kr 
aaai press 
shoham steinberg editors 
combinatorial auctions 
mit press 
appear 
dash parkes jennings 
computational mechanism design call arms 
ieee intelligent systems 

asi www informatik 
uni hamburg de 
dex dynamic experimentation toolkit 
org 
dunne 
complexity boolean networks 
academic press 
dunne 
deciding convergence optimal states contract negotiation march 
draft 
dunne 
extremal behaviour multiagent contract negotiation 
journal artificial intelligence research 
dunne 
multiagent resource allocation presence externalities april 
submitted 
dunne wooldridge laurence 
complexity contract negotiation 
artificial intelligence 

welfare engineering multiagent systems 
engineering societies agents world iv 
springer verlag 

communication complexity multilateral trading extended report 
journal autonomous agents multiagent systems 
appear 
sadri toni 
optimal outcomes negotiations resources 
proceedings nd international joint conference autonomous agents multiagent systems aamas 
acm press 
evo 
sourceforge net projects evo 
faratin 
automated service negotiation autonomous computational agents 
phd thesis department electronic engineering queen mary college university london 
feldmann monien rode 
selfish routing non cooperative networks survey 
proceedings th international symposium mathematical foundations computer science mfcs 
springer verlag 
fischer pippenger 
relations complexity measures 
journal acm 
informatica page xxx yyy chevaleyre foster kesselman editors 
grid blueprint new computing infrastructure 
morgan kaufmann publishers nd edition 
leyton brown shoham 
taming computational complexity combinatorial auctions optimal approximate approaches 
proceedings th international joint conference artificial intelligence ijcai 
morgan kaufmann publishers 
garrido 
object oriented simulation java practical 
kluwer academic publishers 
geffner 
default reasoning causal conditional theories 
mit press 
rodr guez aguilar reyes 
agent decision support service combinatorial negotiations 
proceedings th national conference artificial intelligence aaai 
aaai press 
rodr guez aguilar reyes 
automated procurement negotiation support 
proceedings rd international joint conference autonomous agents multiagent systems aamas 
acm press 
maio rizzi 
negotiation protocol contract net paradigm 
technical report university bologna 
gou 
holonic manufacturing scheduling architecture cooperation mechanism implementation 
proceedings ieee asme international conference advanced intelligent mechatronics 

order additive discrete fuzzy measures representation 
fuzzy sets systems 

distributed combinatorial resource scheduling 
proceedings st international workshop smart grid technologies sgt 
appear 
pf 
holonic manufacturing systems basic concept report ims test case 
knudsen editors sharing cim solutions 
ios press 
jade java agent development framework 
jade com 
jonker 
meyer dignum 
market mechanisms airport traffic control 
proceedings nd european workshop multiagent systems 

object oriented framework developing distributed manufacturing architectures 
journal intelligent manufacturing 
parkes 
auctions bidding exchange design 
levi wu shen editors handbook quantitative supply chain analysis modeling business era 
kluwer academic publishers 
krishna 
auction theory 
academic press 
lang 
logical representation preferences group decision making 
proceedings th international conference principles knowledge representation reasoning kr 
morgan kaufmann publishers 
lang 
logical preference representation combinatorial vote 
annals mathematics artificial intelligence 
lehmann 
perspective default reasoning 
annals mathematics artificial intelligence 
multiagent resource allocation informatica page xxx yyy tre verfaillie 
exploiting common property resource fairness constraint case study 
proceedings th international joint conference artificial intelligence ijcai 
morgan kaufmann publishers 
tre verfaillie fargier lang 

equitable allocation earth observing satellites resources 
proceedings th dlr aerospace symposium 
tre verfaillie 
selecting scheduling observations agile satellites 
aerospace sciences technology 
pez su rez de la rosa 
task allocation rescue operations combinatorial auctions 
th catalan congress artificial intelligence 
ios press 
multi agent modeling language 
www hu 
matsumoto nishimura 
mersenne twister dimensionally uniform pseudo random number generator 
acm transactions modeling computer simulation 

www com 
moulin 
axioms cooperative decision making 
cambridge university press 
moulin 
fair division collective welfare 
mit press 
myerson satterthwaite 
efficient mechanisms bilateral trading 
journal economic theory 
nisan 
bidding languages combinatorial auctions 
shoham steinberg editors combinatorial auctions 
mit press 
appear 
papadimitriou 
computational complexity 
addison wesley 
papadimitriou 
algorithms games internet 
proceedings rd annual acm symposium theory computing stoc 
acm press 
parunak 
applications distributed artificial intelligence industry 
hare jennings editors foundations distributed artificial intelligence 
john wiley sons 
parunak baker clark 
agent architecture example requirements driven agent system design 
proceedings st international conference autonomous agents agents 
acm press 
phelps mcburney parsons 
evolutionary auction mechanism design preliminary report 
agent mediated electronic commerce iv 
springer verlag 
phelps parsons mcburney 
evolutionary game theoretic comparision double auction market designs 
agent mediated electronic commerce vi 
recursive porous agent simulation toolkit 
sourceforge net projects 
reyes rodr guez aguilar 
decision support tool mixed bundling 
agent mediated electronic commerce vi 
sandholm :10.1.1.19.2028
implementation contract net protocol marginal cost calculations 
proceedings th national conference artificial intelligence aaai 
aaai press 
sandholm 
contract types satisficing task allocation theoretical results 
proceedings aaai spring symposium satisficing models 
informatica page xxx yyy chevaleyre sandholm 
distributed rational decision making 
wei editor multiagent systems modern approach distributed artificial intelligence 
mit press 
sandholm 
algorithm optimal winner determination combinatorial auctions 
artificial intelligence 
sandholm 
optimal winner determination algorithms 
shoham steinberg editors combinatorial auctions 
mit press 
appear 
sandholm lesser 
leveled commitment contracts strategic breach 
games economic behavior 
sandholm suri 
side constraints non price attributes markets 
proceedings ijcai workshop distributed constraint reasoning 
savage 
complexity computing 
john wiley sons 
schnorr 
network complexity turing machine complexity finite functions 
acta informatica pages 
sen collective choice social welfare 
holden day 
smith 
contract net protocol high level communication control distributed problem solver 
ieee transactions computers 
sousa ramos 
manufacturing entities incomplete information 
studies informatics control 
sousa ramos 
scheduling prototype suite agent interaction knowledge base 
journal intelligent manufacturing 
stephens internet supply chain team 
strategic sourcing applications turn direct materials procurement competitive advantage 
industry report 
swarm 
www swarm org 
sycara roth sadeh fox 
resource allocation distributed factory scheduling 
ieee expert 
tesfatsion 
agent computational economics growing economies bottom 
artificial life 
van brussel wyns valckenaers bongaerts peeters 
architecture holonic manufacturing systems prosa 
computers industry 
vickrey 
counterspeculation auctions competitive sealed tenders 
journal finance 
visionary manufacturing challenges 
committee visionary manufacturing challenges national research council 
national academic press 
wegener 
complexity boolean functions 
john wiley sons 
wooldridge 
multiagent systems 
john wiley sons 
wurman wellman walsh 
parametrization auction design space 
games economic behaviour 
yager 
ordered weighted averaging aggregation operators multicriteria decision making 
ieee transactions systems man cybernetics 

yao 
complexity questions related distributive computing preliminary report 
proceedings annual acm symposium theory computing 
young 
equity theory practice 
princeton university press 
