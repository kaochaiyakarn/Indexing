impact interference multi hop wireless network performance kamal jain jitendra padhye venkata padmanabhan lili qiu address question specific placement wireless nodes physical space specific traffic workload maximum throughput supported resulting network 
previous focused computing asymptotic performance bounds assumptions homogeneity randomness network topology workload network workload specified inputs 
key issue impacting performance wireless interference neighboring nodes 
model interference conflict graph methods computing upper lower bounds optimal throughput network workload 
compute bounds assume packet transmissions individual nodes finely controlled carefully scheduled omniscient omnipotent central entity unrealistic 
ns simulations show routes derived analysis yield noticeably better throughput default shortest path routes presence uncoordinated packet transmissions mac contention 
suggests opportunity achieving throughput gains employing interference aware routing protocol 
multi hop wireless networks subject study past decades 
original motivated military applications battlefield communications 
microsoft research microsoft way redmond wa 
padhye microsoft com interesting commercial applications emerged community wireless networks sensor networks :10.1.1.110.6935
fundamental issue multi hop wireless networks performance degrades sharply number hops traversed increases 
example network nodes identical omnidirectional radio ranges going single hop hops halves throughput flow wireless interference dictates hops active time 
performance challenges multi hop networks long recognized led lot research medium access control mac routing transport layers networking stack 
years focus fundamental question optimal throughput multi hop wireless network seminal gupta kumar showed network comprising identical nodes communicating node throughput node nlog random node placement communication pat tern assuming optimal node placement communication pattern :10.1.1.138.3623
subsequent considered alternative models settings presence relay nodes mobile nodes locality inter node communication results pessimistic 
deals problem computing optimal throughput wireless network 
key distinction approach wireless network configuration workload specified inputs 
words node locations ranges traffic matrix indicating source nodes communicating sink nodes specified input 
assumptions homogeneity nodes regard radio range characteristics regularity communication pattern 
contrast previous focused asymptotic bounds assumptions node homogeneity random communication patterns 
conflict graph model effects wireless interference 
conflict graph indicates groups links mutually interfere active simultaneously 
formulate multi commodity flow problem augmented constraints derived conflict graph compute optimal throughput wireless network support sources sinks 
show problem finding optimal throughput np hard methods computing upper lower bounds optimal throughput 
show methodology accommodate diversity wireless network characteristics availability multiple non overlapping channels multiple radios node directional antennas 
show multiple mac protocol models single path multi path routing constraints accommodated 
view generality methodology conflict graph framework key contribution 
compute bounds optimal throughput assume packet transmissions individual nodes finely controlled carefully scheduled omniscient omnipotent central entity 
clearly unrealistic assumption gives best case bound compare practical algorithms routing medium access control packet scheduling 
ns simulations show routes derived analysis yield noticeably better throughput default shortest path routes presence real world effects uncoordinated packet transmissions mac contention 
cases throughput gain factor 
reason improvement optimizing throughput tend find routes prone wireless interference 
instance longer route periphery network may picked shorter interference prone route middle network 
technique evaluate node throughput multi hop wireless network varies number nodes grows 
previous suggests node throughput falls number nodes grows :10.1.1.138.3623
result assumption nodes data send ready transmit fast wireless connection allow 
realistic setting sources tend bursty nodes average transmit slower rate speed wireless link 
setting find addition new nodes improve node throughput richer connectivity provides increased opportunities routing interference hotspots network 
offsets increase traffic load caused new nodes 
rest organized follows 
section discuss related 
section details conflict graph model methods computing bounds optimal network throughput 
section results obtained applying model different network workload configurations 
section discuss ways incorporate node mobility model 
section discuss limitations 
section concludes 
related number papers published problem estimating throughput multi hop wireless network 
consider closely related 
seminal gupta kumar studied throughput wireless networks models interference protocol model assumes interference phenomenon physical model considers impact interfering transmissions signal noise ratio :10.1.1.138.3623
show network comprising identical nodes com node throughput node nlog assuming random node placement assuming optimal node placement communication pattern 
results shown protocol model result holds case physical model reasonable assumptions 
intuitive explanation hop throughput network grows average path length grows throughput node 
li extended gupta kumar considering impact different traffic patterns scalability node throughput :10.1.1.138.3623
point random traffic pattern represents worst case viewpoint node throughput 
show traffic patterns power law distance distributions node throughput stays roughly constant network size grows provided distance distribution decays rapidly square distance 
li consider interactions packet forwarding mac show global scheduling scheme affect asymptotic bound node throughput derived :10.1.1.138.3623
grossglauser tse introduce mobility model show average long term throughput source destination pair kept constant number nodes unit area increases provided allow delays order time scale mobility :10.1.1.138.3623
achieved exploiting mobility keep data transfers local transmitting transmitter receiver close distance reducing total resource usage interference 
encouraging practical situations community wireless networks mobility may infrequent nonexistent exploitable 
vetterli extend gupta kumar different direction :10.1.1.138.3623
simple point point coding assumption treats transmitter receiver pair independent pairs consider network coding model nodes cooperate arbitrary ways instance boost transmit power :10.1.1.138.3623
assume single source single destination picked random rest nodes act relays 
show throughput network conditions log compared point point coding model :10.1.1.138.3623
network coding context promising line research note point point coding model corresponds current radio technology 
de couto experiments multi hop wireless testbed shows minimizing hop count endto path sufficient achieving performance :10.1.1.147.4406
reason point link quality vary widely long hops may included short paths resulting high packet error rate 
reach regarding lim hop count metric somewhat different reason wireless interference limits throughput circuitous interference prone route say periphery network may perform better shortest hop count route 
construct similar conflict graphs called flow contention graph capture interference wireless networks 
name implies construct defined flows links 
aim study mac fairness issues derive optimal throughput bounds 
yang vaidya notion conflict graph context priority scheduling wireless ad hoc networks 
conflict graph defined flows links 
graph interpret experimental results showing mac causes flows high degree conflict suffer disproportionately compared flows low degree conflict 
attempt analyze conflict graph derive throughput bounds 
consider problem computing optimal throughput wireless network traffic pattern 
assume limited model interference constraint node may transmit receive simultaneously 
constraint model problem graph coloring problem 
provide polynomial time algorithm computes routes schedules resulting throughput guaranteed optimal throughput 
model consider general flexible 
model take account interference neighboring nodes impact directional antennas availability multiple non interfering channels generality problem harder algorithm provides upper lower bounds optimal throughput 
note approach compute optimal throughput assume limited model interference assumed 
see appendix details 
summary large body multihop wireless throughput problem focused asymptotic bounds assumptions node homogeneity random communication patterns 
contrast focuses computing throughput bounds wireless network traffic workload conflict graph model constraints imposed wire interference 
consider factors mobility coding 
compute information theoretic capacity network :10.1.1.138.3623
computing bounds optimal throughput framework incorporating constraints imposed interference multi hop wireless network methods computing bounds optimal throughput network support traffic workload 
background terminology 
background terminology consider wireless network nodes arbitrarily located plane 
ni denote nodes dij denote distance nodes ni nj 
node ni equipped radio communication range ri potentially larger interference range ease explanation start considering case single wireless channel 
generalize model section consider models protocol model physical model define conditions successful wireless transmission 
models similar introduced :10.1.1.138.3623
protocol model protocol model single wireless channel transmission successful conditions satisfied 
dij ri 
node nk transmitting note second requirement implies node may send receive time transmit node time 
note model differs popular mac important way requires receiver free interference requiring sender receiver free interference 
discuss adapt model style mac section 
physical model suppose node ni wants transmit node nj 
calculate signal strength ni transmission received nj 
transmission successful denotes signal noise ratio node nj transmissions received node ni 
total noise nj nj consists ambient noise na plus interference due ongoing transmissions network 
note requirement noise level sender low 
goal model wireless interference general framework enable compute optimal throughput wireless network support traffic workload 
assume workload consists greedy sources destinations sources data send destination nodes ready accept data 
communication sources destinations direct routed intermediate nodes 
assume packet transmissions individual nodes finely controlled scheduled omniscient omnipotent central entity 
say network throughput feasible exists schedule transmissions interfering links active simultaneously total throughput source destination pairs problem formulation focus maximizing total throughput source destination pairs 
rest section consider scenarios detail multipath routing protocol interference model ii multipath routing physical interference model iii single path routing models 
section discussing generalizations summarizing framework 
multipath routing protocol interference model wireless network nodes derive connectivity graph follows 
vertices correspond wireless nodes nc edges correspond wireless links lc nodes 
directed link lij node ni nj dij ri terms node link connectivity graph reserving terms vertex edge conflict graph section 
consider communication single source ns single destination nd 
absence wireless interference wired network finding maximum achievable throughput source destination flexibility multiple paths formulated linear program corresponding max flow problem shown 
fij denotes amount flow link lij denote capacity link lij lc set links connectivity graph 
maximization states wish maximize sum flow source 
constraint represents flow conservation node source destination amount incoming flow equal amount outgoing flow 
second constraint states incoming flow source node 
third constraint states outgoing flow destination node 
fourth constraint indicates amount flow link exceed capacity link 
final constraint restricts amount flow link non negative 
note formulation take wireless interference account 
turn issue 
conflict graph incorporate wireless interference problem formulation define conflict graph vertices correspond links connectivity graph edge vertices lij links lij may active simultaneously 
protocol interference model described section draw edge true encompasses case conflict arises links lij node common 
note draw edge vertex conflict graph 
discuss conflict graph add interference constraints linear program need state hardness result definitions 
hardness result hardness result computing optimal throughput protocol interference model 
graph vertex set vh independent set set vertices edge vertices 
independence number graph size largest independent set hardness result 
theorem network set source destination nodes np hard find optimal throughput protocol interference model 
np hard approximate optimal throughput 
proof shown problem finding independence number graph known hard problem approximate reduced optimal throughput problem 
reduction approximation preserving 
hardness result 
describe reduction appendix np hard approximate optimal throughput look heuristics obtaining lower upper bounds optimal throughput 
need define terms 
independent set graph characterized independence vector vector size vh 
vector denoted xi 
th element vector set vertex vj member independent set zero 
think xi point vh dimensional space 
polytope defined convex combination independence vectors called independent set polytope stable set polytope 
lower bound problem deriving lower bound equivalent problem finding network throughput feasible schedule achieve 
observation 
links belonging independent set conflict graph scheduled simultaneously 
suppose total maximal independent sets graph maximal independent set grown 

ik denote maximal independent sets denote fraction time allocated independent set ii time links ii active 
add schedule restrictions imposed independent sets original linear program resulting throughput feasible schedule constitutes lower bound maximum achievable throughput 
formalize observation follows 
conflict graph define usage vector size vf ui denotes fraction time link max lsi lc subject lij lc lis lc ldi lc fsi fij lc fji ni nc ns nd fis fdi fij lij lc fij lij lc lp formulation optimize throughput single source destination pair 
active 
usage vector schedulable corresponding links scheduled conflict free fraction time indicated usage vector 
think usage vector point vf dimensional space theorem 
theorem usage vector schedulable lies independent set polytope conflict graph 
proof show schedulable usage vector lies independent set polytope conflict graph 
words want show usage vector convex combination independence vectors 
consider schedulable usage vector consider unit time assume scheduled links fractions unit time usage vector satisfied 
vector schedulable schedule exist 
schedule tell links active instance time 
usage vector schedulable instance schedule links active conflict 
vertices corresponding links form independent set conflict graph 
find independent set denote independence vector xi 
define fraction unit time independent set active 
total time unit sum independent sets equals 
independent set ixi 
show usage vector convex combination independence vectors schedulable 
consider usage vector obtained convex combination independence vectors independent set ixi follows schedulable independent set scheduled fraction time 
theorem implies optimal network throughput problem linear program matter sender receiver pairs 
fact problem maximizing linear objective function feasible polytope 
feasible polytope described intersection polytopes flow polytope independent set polytope conflict graph 
flow polytope collection feasible points described flow constraints ignoring wireless conflicts 
flow polytope simple structure linear objective function easily optimized 
independent set polytope hand difficult structure simple characterization known may exponentially independent sets 
theorem implies convex combination independence vectors schedulable 
general arbitrary point inside independent set polytope convex combination exponentially independence vectors 
get computational problem want pick easy points independent set polytope 
obvious notion easy point picked convex combination small number polynomially independence vectors 
notion explicitly algorithm follows 
derive lower bound optimal throughput finding independence vectors conflict graph adding constraints lp formulation shown 
maximal independent set active time fij lij ii fraction time link may active constrained sum activity periods independent sets member 
note solution produced solving linear program feasible schedulable 
due fact links belonging independent set ii simultaneously active fraction time required 
theorem assures include independent sets solution exact maximum value feasible 
help tighten lower bound quickly consider maximal independence sets 
finding maximal independent sets np hard lower bound obtained considering subset maximal independent sets nice property add constraints bound tighter eventually converging optimal maximum feasible throughput add constraints 
upper bound section derive upper bound network throughput 
consider conflict graph 
clique conflict graph set vertices mutually conflict 
theorem implies total usage links clique 
gives constraint usage vector 
find cliques write corresponding constraints define polytope 
pentagon complement graph 
odd hole odd anti hole 
example shows sufficient add clique hole anti hole constraints 
maximize throughput intersection polytope flow polytope 
give upper bound throughput 
unfortunately computationally expensive find cliques find guarantee upper bound tight 
illustrated example 
suppose conflict graph pentagon depicted 
see cliques graph formed adjacent pairs nodes 
adding clique constraints lp suggest sum link utilization equal achievable 
links active time 
suggests need add constraints corresponding odd holes odd anti holes 
odd hole cycle formed odd number edges chord 
example pentagon odd hole 
sum link utilizations odd hole containing vertices 
odd anti hole complementary graph odd hole 
shows example anti hole nodes 
sum link utilizations odd anti hole 
unfortunately consider constraints imposed odd holes odd anti holes addition imposed cliques guaranteed feasible solution 
example consider conflict graph shown 
assign vertices pentagon center pentagon satisfying clique hole anti hole constraints 
feasible schedule achieve solution lie stable set polytope 
fact upper bound clique constraints tight special class conflict graphs called perfect graphs 
perfect graphs graphs odd holes odd anti holes 
formulation upper bounds may tight 
discuss appendix multipath routing physical interference model creating connectivity graph vertices correspond nodes network 
physical interference model exists link lij ni nj na snr exceeds threshold presence just ambient noise 
connectivity graph write lp formulation optimize network throughput wired network 
discussed solution linear program shown provides upper bound network throughput 
bound useful take interference effects account 
take interference effects account construct conflict graph protocol model conflicts physical model binary 
interference gradually increases neighboring nodes transmit intolerable noise level reaches threshold 
gradual increase interference suggests weighted conflict graph weight directed edge vertices vertices lij denoted pq ij indicates fraction maximum permissible noise node nj link lij operational contributed activity link node np transmission node nq 
specifically pq ij na denote signal strength node nj transmissions nodes respectively na maximum permissible interference noise node nj allow successful reception node ni transmissions 
edges conflict graph directed general pq ij wij pq lower bound may equal protocol model derive lower bound network throughput finding independent sets conflict graph adding constraints associated independent sets lp wired network 
analogous independent sets introduce notion schedulable sets physical model 
schedulable set hx defined set vertices vertex lij hx hx wpq ij 
follows links schedulable set active simultaneously 
suppose schedule links belonging hx time 
take original lp wired network include constraints number schedulable sets fij lij hx tighten bound consider maximal schedulable sets graph schedulable set adding additional vertices set violate schedulable property 
theorem similar theorem protocol model 
theorem usage vector schedulable lies schedulable set polytope conflict graph 
proof proof similar theorem 
upper bound derive upper bound consider maximal sets vertices pair vertices lij pq ij 
correspond cliques protocol interference model 
set add constraint sum utilization 
constraints may result loose bound may cliques 
tighten upper bound augment linear program additional constraints 
find maximal schedulable set say vertices vt adding additional vertex denoted va set set 
constraint ut ua ui denotes fraction time physical link li corresponding vertex vi conflict graph active 
adding constraints possible tighten upper bound 
bound guaranteed converge optimal include sets 
single path routing far considered multipath routing 
existing routing algorithms confined single path routing useful derive throughput bound single path routing compare current protocols deviate theoretical achievable throughput routing restriction :10.1.1.20.5356:10.1.1.132.7416:10.1.1.113.555:10.1.1.129.426
way enforce single path restriction flow source destination adding additional constraints lp problem wired network shown link lij fij zij zi node ni zij zij variable indicates link lij transmissions fij amount flow link 
basic intuition constraints single path routing node network going edge non zero flow 
zij values conditions ensure node ni zij value 
theory solving integer linear program nphard practice software lp solve cplex solve mixed integer programs 
generalization basic conflict graph model quite flexible generalized ways 
multiple source destination pairs extend formulations previous sections single source destination pair multiple pairs multi commodity flow formulation augmented constraints derived conflict graph 
assign connection identifier source destination pair 
flow variables fij introduce variable denote amount flow connection link lij 
referring flow conservation constraints node apply connection basis constraint total incoming flow source node zero connection originating node constraint likewise total outgoing flow sink node zero connection terminating node constraint capacity constraints apply sum flows connections traversing link constraint 
multiple wireless channels may case just channel node tune channels 
easily modeled introducing links nodes just 
general links corresponding different channels conflict reflecting fact channels mutually interfere 
links emanating node conflict reflecting constraint single radio node transmit channel time 
multiple radios node wireless node may equipped radio 
node radios modeled introducing links pairs nodes 
assume radios tuned separate channel node communicate multiple radios simultaneously conflict graph show conflict links pair nodes 
directional antennas combine directional antennas basic protocol model communication 
specifying range node simply specify list nodes points space transmissions interference node perceived 
connectivity graph conflict graph modified take account 
multirate radios wireless technologies support multirate radios switch set discrete data rates depending quality rf channel 
instance supports rates mbps 
model framework creating multiple virtual links corresponding physical link connectivity graph rate 
conflict graph augmented reflect fact virtual links corresponding physical link active time 
weights assigned edges conflict graph physical interference model reflect specific noise tolerance virtual link corresponding rate 
multiple transmit power levels far assumed transmitters fixed power level 
extend framework incorporate discrete set transmitter power levels 
create multiple virtual links corresponding physical link connectivity graph power level 
depending environment proximity transmitter receiver different power levels may correspond different modulation schemes different data rates 
physical model create edges conflict graph weights function power level links connectivity graph 
instance allow modeling case transmitter communicating nearby receiver switches lower power maintaining high data rate proximity nodes minimize interference nodes 
models interference simple example considered optimistic model interference require sender free interference 
realistic model closely reflects situation require sender receiver free interference 
reflect fact may perform virtual carrier sensing rts cts exchange successful communication sender able hear link layer acknowledgment transmitted receiver 
draw edge conflict graph vertices lij dab ab iq qi ip pi jp pj jq qj 
non greedy sources destinations easily accommodate case rate nodes generate data willing accept data bounded 
creating virtual source sink node connecting real source sink virtual link speed equal source sink rate 
virtual link special assumed interfere link network 
virtual link just convenient construct help model bound source sink rate 
objective functions framework limited maximizing total network throughput 
accommodate objective expressed linear function 
example assign linear revenue function pair maximize revenue maximizing total network throughput 
maximize minimum throughput source destination pairs provide degree fairness 
generalizations combined model complex networking scenarios 
see examples combinations section 
summary section concept conflict graph discussed derive upper lower bounds optimal throughput wireless network support set sources destinations 
show conflict graph model generalized handle wide range scenarios 
shown lower bound derived framework schedulable optimal independent set constraints incorporated 
upper lower bounds equal correspond optimal solution 
dealt question node mobility far ideas section 
results section presents results model 
section organized follows 
section illustrative results demonstrate flexibility model 
section model provide insights tradeoff richer connectivity provided increase size wireless mesh network increase cumulative traffic load due new mesh participants 
section illustrate optimal routing bring benefits absence optimal scheduling presence mac contention inefficiencies 
section discuss issue convergence upper lower bounds optimal throughput 
section discussion computational costs model 
illustrative results section illustrative results demonstrate capabilities model 
defining metric computational effort 
section described procedure finding upper lower bounds throughput 
consider protocol model interference focus lower bound 
shown include distinct independent sets lower bound progressively tighter 
words effort spend looking independent sets conflict graph better bound 
hope find optimal solutions upper lower bounds discovered model need amount effort required find bounds 
require metric measure effort 
simple algorithm find distinct independent sets 
start empty independent set 
consider random ordering vertices conflict graph 

consider vertices graph order 
add vertex 
add new vertex edge vertices added far 
consider vertices size 

check see previously discovered independent set add constraints independent set linear program 
discard set 
consider entire sequence unit effort 
note unit effort result addition constraint variable linear program 
throughput bound grid bidirectional mac upper bound lower bound effort throughput bidirectional mac complex relationship number variables constraints linear program amount time required solve 
metric rough guide amount actual time cpu cycles spent finding bound 
section provide discussion relationship effort metric actual time spent computation 
effort metric defined similar manner considering cliques case searching upper bound considering schedulable sets case physical model 
simple topology consider topology shown 
network consists nodes placed grid 
claims topology representative typical wireless networks 
deliberately chosen small link simple topology facilitate detailed discussion results 
start simplifying assumptions 
relax assumptions proceed section 
assume range node unit just reach lateral neighbors diagonal ones 
assume interference range equal communication range 
assume protocol model interference described section 
model requires sender receiver free interference successful communication 
term bidirectional mac 
resulting conflict graph scenario shown matrix form table 
indicates links conflict indicates 
example node transmitting node node hear transmissions transmit node 
links conflict 
allow multipath routing 
assume wireless links identical capacity speed unit nodes infinite buffers 
designate node sender node receiver 
sender data send receiver willing consume data 
scenario easy see optimal throughput 
convenient way visualize optimal transmission schedule imagine time divided slots equal size slot transmit packet neighboring nodes subject constraints imposed conflict graph 
transmission schedule achieve optimal table conflict graph matrix form throughput ii iii iv vi 
continue manner indefinitely 
easy see alternate timeslots node gets transmit node 
optimal throughput 
show upper lower bound throughput calculated model devote increasing amount effort 
shown upper bound quickly converges stable value somewhat higher optimal value 
clear indication fact clique constraints sufficient guarantee optimality small graph noted section 
lower bound hand steadily converges optimal value 
verified program discovered independent sets cliques units efforts 
community networking scenario model incorporate single path routing multiple source destination pairs multiple channels multiple radios 
demonstrate flexibility community mesh networking scenario multiple users share internet connection multihop wireless network 
consider map real neighborhood shown 
houses area square kilometer 
select houses random assume houses equipped hardware enables participate wireless mesh network 
assume communication range wireless technology meters meters houses meters neighborhood map house wireless connection wireless links internet access point senders meters mesh formation neighborhood scenario optimal throughput ii iii iv table throughput neighborhood mesh various scenarios meters interference range meters 
show resulting network 
select node roughly center area designate internet access point 
assume senders located shown 
senders communicate internet access point metric interest cumulative throughput senders 
assume wireless links unit capacity 
baseline case assume bidirectional mac single path routing 
linear program set optimize sum throughputs flows consideration fairness 
case units effort upper lower bounds converge model indicates maximum possible cumulative throughput 
may ask improve cumulative throughput 
consider possibilities employ multi path routing 
ii double range radio 
double interference range 
iii leave radio range unchanged non overlapping channels 
node may communicate channels time may switch channels necessary 
iv radios node 
radios assumed tuned fixed non overlapping channels node may communicate channels simultaneously 
throughput bounds scenarios shown table 
case upper lower bounds converge value indicates solution optimal 
results indicate multipath routing doubling range radio increases cumulative throughput scenario considered 
hand channels network may achieve maximum possible throughput 
maximum possible throughput internet access point radio 
hand radios throughput remains 
hard see 
situation equivalent having separate copies baseline network adding throughputs 
scenarios illustrate model developed tool analysis capacity planning wireless multi hop networks 
tradeoff connectivity throughput section discussed model accommodate nodes send data greedy fashion lower send rate 
authors shown node throughput network decreases number nodes network goes :10.1.1.138.3623
results derived assumption node sends data fast 
words desired sending rate node assumed 
node lower desired sending rate richer connectivity provided additional nodes help increase node throughput allowing better routes discovered 
explore hypothesis model 
consider grid nodes meters apart horizontally vertically 
assume communication range meters interference range meters 
set link capacity 
assume bidirectional mac similar plot 
single path routing 
pick nodes available nodes random replacement 
half nodes designated senders half designated receivers 
senders receivers form flows network 
sender paired receiver 
calculate fraction flows source destination lie connected component topology 
call fraction connectivity ratio 
connectivity ratio various values shown 
results show nodes flows selected connectivity ratio 
assign sending rate sender 
model calculate optimal throughput single path routing 
divide cumulative throughput number flows obtain average flow throughput normalize dividing resulting normalized flow throughput various values plotted connectivity ratio normalized flow throughput number nodes connectivity ratio grid number nodes normalized flow throughput 
note sending rate normalized flow throughput continues rise connectivity reached 
means richer connectivity provided additional nodes allows newer routes allows extra traffic sent network 
node sends rate node little capacity left forward traffic nodes 
average flow throughput peaks early network saturated declines slowly new nodes join network fail transmit desired traffic 
sending rate results cases 
note non monotonic nature graphs due fluctuation random runs 
part plan routing optimal scheduling optimal shortest path optimal throughput solve lp state art optimal scheduling solve lp scenarios 
alternative routing scheme ns simulation state art ns simulation verify generality result wide variety topologies 
stress results derived assuming optimal routing optimal scheduling packets 
section discuss impact assumptions 
benefits optimal routing absence optimal scheduling shown previous sections optimal throughput achieved selecting optimal routes scheduling links routes appropriately 
natural question ask performance improvement due optimal route selection due optimal scheduling 
motivated question empirically examine scenarios shown 
correspond optimal routing optimal scheduling ii shortest path routing optimal scheduling iii optimal routing mac iv shortest path routing mac 
briefly describe approach derive throughput case results 
network topology apply algorithm described section compute optimal throughput single path routing 
corresponds scenario 
derive performance optimal routing run ns simulations 
ensure packets follow optimal routes specify optimal routes obtained scenario static routes means routes derived mac 
may possible derive optimal routes contention scheduling intent 
ns 
throughput numbers simulations correspond scenario iii 
repeat simulation aodv standard shortest path routing protocol :10.1.1.132.7416
resulting throughput corresponds performance scenario iv 
minimize impact aodv routing overhead nodes static simulations run seconds long initial route setup overhead negligible 
aodv simulation results obtain set links shortest paths sources destinations 
modify lp formulation section compute bounds optimal throughput excluding links lie shortest paths 
setting capacity excluded links zero 
solve resulting lp obtain throughput scenario ii 
aim compare throughput scenario throughput scenario ii 
similarly compare scenarios iii iv 
note compare throughput obtained solving lp model throughput obtained ns simulations 
consider scenarios grid nodes 
horizontal vertical separation adjacent nodes meters 
assume communication range meters interference range meters 
parameters default settings ns 
simulation run randomly pick pairs nodes sources destinations source sends packets corresponding destination constant bit rate equal wireless link capacity 
table shows throughput ratios optimal routing shortest path routing optimal scheduling 
numbers derived lp formulation 
cases optimal routing yields comparable better throughput shortest path routing optimal scheduling 
benefit optimal routing varies number flows locations communicating nodes 
instance flows far apart interfere optimal path achieves throughput shortest path run flows interfere optimal path takes detour results reduced interference higher throughput case run 
table shows throughput ratios optimal run run run run run table throughput ratios optimal routing shortest path routing optimal scheduling grid 
run run run run run table throughput ratios optimal path routing shortest path routing mac grid 
routing shortest path routing mac 
numbers ns simulations 
optimal path outperforms shortest path mac number flows network small 
hand optimal path routing outperform shortest path routing mac number flows higher 
occurs network load increases harder find paths interfere flows absence optimal scheduling 
results encouraging suggest potential improve throughput making route selection interference aware 
ongoing continuing investigate benefits routing wider range scenarios 
convergence upper lower bounds previous results section upper lower bounds converged assuring optimality solution 
converge able assure optimality lower bound manual verification 
general bounds may converge guarantee adding clique constraints upper bound schedulable 
leads question decide looking tighter bounds 
conflict graph may grid size lower bound upper bound time table lower upper bounds units effort 
time minutes 
effort lower bound upper bound time table lower upper bounds varying effort grid 
time minutes 
arbitrarily complex structure wait upper lower bounds small percentage may happen 
cliques upper bound may optimal feasible solution 
easy way decide calculations 
data indicate convergence quite scenarios 
computational costs section mentioned effort metric provides rough indication computational costs finding bounds 
provide data regard 
note data provided matlab solver ready access noted cplex solver reduced computation time factor albeit somewhat faster cpu 
unfortunately limited access cplex resource able experiments 
important note potential significant improvements computational costs matlab reported 
table consider relationship size network amount time required compute upper lower bounds 
table shows bounds computed units efforts grid sizes time required compute 
flows lower bound upper bound time table grid multiple flows units effort 
time minutes 
flows lower bound upper bound time table grid multiple flows units effort cplex 
time minutes 
case single flow network source destination nodes diagonally opposite corners grid 
rest parameters similar plot 
note upper lower bounds equal cases close indicates optimal solution cases 
computations done matlab machine ghz pentium processor gb ram 
table consider relationship amount effort closeness upper lower bounds time required compute bounds 
results grid rest parameters similar table 
discussed section effort add variables restrictive constraints linear program 
bounds tighter 
table consider relationship number flows network amount time required compute bounds amount effort 
results grid multiple flows 
flow source bottom row grid communicates destination located column top row 
parameters table 
software solve linear program significant factor amount time required find optimal solution 
table show amount time taken cplex solve grid case flows ghz pentium machine gb ram 
compare entries directly corresponding entries table machines run matlab cplex different speedup quite significant reduction factor minutes minutes 
matlab solve mixed integer programs resulting formulation routing 
solve cplex 
unfortunately limited access cplex software unable report full set numbers cplex 
numbers single run grid graphs regular connectivity pattern draw general 
trends useful note 
observe grid networks amount time required solve problem increases number nodes 
see effort level time required compute bounds depend significantly number flows network 
difference upper lower bounds amount effort tends increase increase number flows 
case irregular graphs neighborhood graph shown observed amount time required solve depends significantly connectivity interference patterns 
note included results involving physical model communication section 
included results demonstrate links different capacities 
solved networks physical models interference links different capacities detailed study due resource constraints 
chosen focus protocol model interference section 
dealing node mobility far assumed nodes wireless network static 
discuss possible ways incorporate node mobility model 
way repeat process reconstruct connectivity graph conflict graph new topology solve resulted lp problem 
efficient way take advantage efforts spent old topology incrementally compute new bounds 
propose incremental approach protocol model 
node moves place results adding removing links connectivity graph 
ease discussion suppose link ab removed link ac added result node movement 
discussions easily generalized case link added removed 
change connectivity graph leads changes conflict graph adding link ac connectivity graph results adding corresponding vertex original conflict graph addition need identify links conflict new link ac add edges original conflict graph reflect conflicts ii removing link ab connectivity graph results deleting corresponding vertex incident edges original conflict graph 
changes conflict graph incrementally update independent set constraints derive new lower bound follows 
account addition link ac connectivity graph add independent set constraints contain ac original lp 
account deletion link ab remove independent set constraints containing ab original lp 
topology change cause changes objective function links sources neighbors remain links sinks neighbors remain lp solvers lp solve take advantage incremental changes linear constraints efficiently derive solution new lp solving starting scratch :10.1.1.138.3623:10.1.1.138.3623
similarly derive new upper bound incrementally update clique constraints follows 
account addition link ac add clique constraints involving ac original lp account deletion link ab remove clique constraints involving ab original lp 
long topology changes affect objective function lp solvers efficiently derive solution new lp incremental changes linear constraints 
incrementally computing lower upper bounds hard physical model extreme node movement affect noise level experienced nodes having global impact conflict graph 
plan investigate problem part 
discussion limitations results demonstrated flexibility model methodology computing throughput bounds 
limitations discuss 
time varying channels pose problem model 
time varying channel characteristics result interference caused nodes physical effects mobility induced fading 
model account fluctuations noise level node due interfering transmissions nodes 
accommodate fluctuations caused phenomena fading 
mobility may feasible recompute scratch fluctuations happen slowly 
computational cost numbers section suggest methodology feasible modest sized networks order nodes may typical neighborhood wireless network 
methodology current form expensive large scale networks containing thousands millions nodes sensor networks 
energy consumption throughput metric interest large scale networks limitation may moot 
model methodology computing bounds optimal throughput supported multi hop wireless network 
key distinction compared previous wireless network configuration workload specified inputs 
assumptions homogeneity nodes regard radio range characteristics regularity communication pattern 
conflict graph model wireless interference various conditions multiple radios multiple channels 
view generality methodology conflict graph framework key contribution 
bounds compute optimal throughput assume ability finely control care fully schedule packet transmissions optimal routes yielded analysis outperform shortest path routes real world conditions uncoordinated scheduling mac contention 
ns simulations observed throughput improvement factor cases 
reason significant improvement optimal routes tend interference prone default shortest path routes 
considered impact new nodes node throughput multi hop wireless networks 
contrary previous results addition new nodes beneficial nodes realistic assumption node active small fraction time 
richer connectivity enabled new nodes presents increased opportunities routing interference hotspots network 
offsets increase traffic load caused new nodes 
ongoing continuing investigate benefits interference aware routing wide range scenarios 
step design practical interference aware routing protocol addresses interesting challenges constructing conflict graph computing optimal routes distributed manner 
acknowledgments shanmugasundaram szl lov sz helpful discussions 
jon howell helpful comments earlier drafts 
abramson 
aloha system alternative computer communications 
proc 
afips fall joint computer conference pages 
bay area wireless users group 
www org 

lp solve linear programming code 
ftp ftp ics ele tue nl pub lp solve 

linear programming 
freeman 
couto chambers morris :10.1.1.147.4406
performance multihop wireless networks shortest path 
st workshop hot topics networks oct 
ilog cplex suite 
www ilog com products cplex 
edmonds 
maximum matching polyhedron vertices 
journal research national bureau standards 
estrin govindan heidemann kumar :10.1.1.110.6935
century challenges scalable coordination sensor networks 
acm mobicom aug 
garey johnson 
computers guide theory np 
freeman 
vetterli 
capacity wireless networks relay case 
ieee infocom jun 
grossglauser tse 
mobility increases capacity ad hoc wireless networks 
ieee infocom apr 
grotschel lovasz schrijver 
ellipsoid method consequences combinatorial optimization 
combinatorica 
grotschel lovasz schrijver 
geometric methods combinatorial optimization 
academic press 
gupta kumar :10.1.1.138.3623
capacity wireless networks 
ieee transactions information theory mar 
gupta kumar 
capacity wireless networks 
ieee transactions information theory mar 
:10.1.1.138.3623:10.1.1.138.3623
lp solve incremental version 
contraintes inria fr lp solve 
johnson maltz 
dynamic source routing ad hoc wireless networks 
imielinski korth editors mobile computing 
kluwer academic publishers 
khachiyan 
polynomial algorithm linear programming 
soviet mathematics doklady 

achievable rates multi hop wireless joint routing scheduling problem 
acm mobicom sep 
li blake couto lee morris 
capacity ad hoc wireless networks 
acm mo jul 
matlab version 
www matlab com 
robertson seymour thomas 
strong perfect graph theorem 
submitted publication february 
kim gao bharghavan 
achieving mac layer fairness wireless packet networks 
acm mobicom aug 
ns network simulator 
cs berkeley edu ns 
park corson 
highly adaptive distributed routing algorithm mobile wireless networks 
proc 
ieee infocom apr 
perkins bhagwat 
highly dynamic destination sequenced distance vector routing dsdv mobile 
proc 
acm sigcomm sep 
perkins royer :10.1.1.132.7416
ad hoc demand distance vector routing 
proc 
ieee wmcsa feb 
seattle wireless 
www net 
yang vaidya 
priority scheduling wireless ad hoc networks 
acm mobihoc june 
proof theorem suppose graph want compute cardinality maximum independent set 
construct wireless network optimal throughput support protocol interference model cardinality maximum independent set create wireless nodes source receiver vertex add wireless link unit capacity edge nodes assume conflict corresponding wireless links network 
network may arise instance nodes equipped multiple radios set interfering channel separate non interfering channels 
hard see optimal throughput achieved maximum independent set scheduled 
finding optimal throughput wireless network equivalent finding cardinality maximum independent set graph known hard problem 
grid connectivity graph 
abcde examples odd holes corresponding conflict graph assuming style mac communication range equal lateral spacing neighbors interference range equal twice communication range 
odd holes happen odd anti holes 
proof may come contrived wireless network constructed arise practice 
raises interesting question realistic wireless networks give rise complex conflict graphs 
answer 
answer maximum independent set problem hard due existence odd holes odd anti holes graph shown realistic simple grid graphs conflict graphs odd holes odd anti holes 
hand answer realistic conflict graphs may special property structure problem finding maximum independent set easy 
unable identify property failure mean property exists complex conflict graphs arising simple grid graphs diminish optimism 
view believe heuristic approach section reasonable 
subsection discuss certain special cases optimal solution may polynomial time 
graph odd holes anti holes graph termed perfect perfect graphs polynomial time algorithms solve maximum independent set problem 
polynomial time algorithm special cases special cases polynomial time algorithms may exist may expensive practical interest 
special case arises context grid graphs conflict radius zero 
zero conflict radius mean links conflict share endpoint 
simple somewhat unrealistic setting conflict graph line graph underlying grid network 
line graph graph graph edges vertices correspond edges edge vertices corresponding edges vertex common 
note assume network case grid 
grid bipartite graph bipartite graphs perfect 
line graph perfect graph perfect 
conflict graph grid graph zero conflict radius perfect graph 
perfect graph property set clique constraints define independent set polytope 
write linear program clique constraints flow constraints find optimal network throughput 
problem number cliques exponentially 
happen grid graphs happen perfect graphs 
solution ellipsoid algorithm optimize linear functions polytope 
algorithm require constraints explicit form optimize linear function polytope enumerate exponentially clique constraints 
ellipsoid algorithm needs subroutine potential solution indicates constraints satisfied identifies constraint satisfied 
subroutine called separation oracle 
separation oracle problem finds violated clique constraint usage vector 
accomplished grotschel semidefinite programming algorithm finding heaviest clique 
ellipsoid algorithm semidefinite algorithm running time combination running time 
polynomial time algorithm practical 
discussed section approximation algorithm similar case 
assume zero conflict radius underlying conflict graph arbitrary graphs grid graph 
note algorithm finds optimal solution problem polynomial time 
conflict radius zero conflict graph just line graph connectivity graph 
independent set polytope conflict graph just matching polytope connectivity graph 
edmonds gave linear program describing matching polytope arbitrary graph 
problem describe independent set polytope linear program 
implies algorithm compute optimal solution case conflict radius zero 
theoretical limits upperbound questions upper bounding heuristic raises upperbound include clique constraints take exponential computation time 
examples odd holes earlier show lowerbound upperbound may tight 
question upperbound constant factor optimal 
unfortunately answer 
consider nodes example discussed appendix conflict graph shown maximum throughput cardinality maximum independent set probabilistic graph theory know triangle free graphs nodes independent size 
suppose conflict graph graphs 
triangle free clique constraints edges 
wireless link half time satisfies cliques upperbound better optimal 
upperbound constant factor optimum throughput 
question quality upperbound improves add odd hole odd anti hole constraints 
explore question believe upperbound constant factor 
reason belief stable set polytope include complicated structures odd wheels need considered odd hole odd anti hole constraints discovered 
technique may improve convergence rate algorithm guarantee tightness 
technique separation oracle conflict graph candidate solution finds violated odd hole constraint 
oracle improve convergence rate algorithm section 
note separation oracle applicable general graphs perfect conflict graph considered section odd holes anyway 
consider odd hole conflict graph vector inside independent set polytope satisfy 
violated odd hole constraint satisfied 
attempting find violated odd hole may assume satisfies edge constraints edge include violated edge constraint shrink polytope 
making assumption define weight function edges 
edge ij graph define weight guaranteed nonnegative 
weight function find lightest weight odd cycle graph 
lightest odd cycle bipartite graph construct explained paragraph 
light est odd cycle 
ij equivalent weight lightest odd cycle cycle violated odd hole 
weight lightest odd cycle violated odd hole 
come question efficiently finding lightest odd cycle 
graph need find lightest odd cycle 
construct bipartite graph follows 
vertex put vertices vl vr subscripts conceptually thought representing left right halves bipartite graph 
edge uv put edges odd cycle odd length path 
vertex find shortest path ul ur shortest path yields lightest odd cycle 
