stochastic models web servers stochastic models web servers research thesis submitted partial fulfillment requirements degree doctor philosophy submitted senate technion israel institute technology adar haifa february research thesis done supervision assoc 
prof attiya faculty computer science things want 
left door open welcomed big smile endless patience 
hand gave academic freedom choose subjects hand supported guided infinite time spent reading commenting improving research 
fact taught meaning academic research bother asking referee discuss results reached thesis 
kind comments relevant helped improve research 
final exam conducted yuval shavit friendly atmosphere high intellectual level 

research useful discussions roy friedman danny raz roman widened horizons 
family support 
mother dina care grades mathematics 
husband nir encouraging pushing accurate term 
weiss adopted grandmother assistance english grammar helped improve thesis 
generous financial help technion gratefully acknowledged stochastic models web servers thesis partial fulfillment requirements degree doctor philosophy technion israel institute technology haifa israel submitted june contents subject matter 
web servers arrivals 
web servers service 
known models web servers 
thesis contributions 
web server arrivals 
web server service 
evaluation known models web servers 
new models web servers 
thesis organization 
definitions matrix exponential distributions 
heavy tailed distributions self similar processes 
matrix exponential truncated heavy tailed distributions 
arrival process web servers influence arrival process parameters 
simulation setup 
times parameters 
times parameters 
inter arrivals times parameters 
burst arrival process 
assumptions verification 
service process web servers analysis bu trace 
data collection 
tdd file web 
tdd files transmitted server 
local network simulation 
simulation setup 
simulation results 
wide area network simulation 
simulation setup 
simulation results 
interpreting empirical results 
impact file sizes distribution 
impact network conditions 
impact server load 
evaluating self similar processes modelling web servers simulation setup 
varying arrival rate 
varying service rate 
burst model blow regions critical points 
queue length distribution 
buffer overflow probability 
waiting time distribution 
applications burst model 
ip 
distributed packet rewriting 
burst model heavy tailed service time distribu tion heavy tailed service time distribution 
waiting time distribution 
waiting time distribution queue ratio nal number tail exponent 
simulations models comparison models 
simulation setup 
simulation results 
comparing models realistic process 
simulation setup 
simulation results 
discussion research bibliography list figures realistic arrival process web servers system 
realistic poisson arrival processes counting processes 
example matrix exponential state times 
representation hyp distribution 
representation hypo distribution 
poisson traffic smoother time scale grows 
measured traffic bursty time scale grows 
phase diagram tht distribution phases 
influence time location parameter 
influence time shape parameter 
burst arrival process 
distribution file transmission duration bu trace 
transmission duration distribution files transmitted sin gle server bu trace 
shape parameters transmission duration distributions files transmitted single server bu trace 
location parameters transmission duration distributions files transmitted single server bu trace 
shape parameters transmission duration distributions files transmitted simulation server local network 
location parameters transmission duration distributions files transmitted simulation server local network 
impact file sizes tdd files transmitted specific server client pair 
impact route selection tdd 
impact server load tdd 
client system processes models low arrival rate utilization 
client system processes models low arrival rate utilization 
client system processes models medium arrival rate utilization 
client system processes models medium arrival rate utilization 
client system processes models high arrival rate utilization 
client system processes models high arrival rate utilization 
client system processes models high service rate 
client system processes models high service rate 
client system processes models medium service rate 
client system processes models medium service rate 
client system processes models low service rate 
client system processes models low service rate 
bur model ip technique distributed web server 
burst model distributed packet rewriting technique distributed web server 
client system processes burst burst models service time shape parameter 
client system processes burst burst models service time shape parameter 
client system processes burst burst models service time shape parameter 
client system processes burst burst models service time shape parameter 
client system processes burst burst models 
list tables maximum number clients system average response time changing times parameters 
maximum number clients system average response time changing times parameters 
maximum number clients system average response time changing inter arrivals times parameters 
maximum number clients system average response time changing arrival rate 
maximum number clients system average response time changing service rate 
comparison burst burst models 
comparison realistic process burst burst models 
stochastic server system usually characterized clients requests arrival process service time distribution 
considering web servers client requests interpreted file requests service times interpreted files transmission durations 
known file requests arrival process web servers process heavy tailed times times inter arrival times times distributions 
files transmission duration distribution shown heavy tailed 
distributions characterized extremely high variability may infinite variance infinite mean 
heavy tailed arrival process heavy tailed service time distribution suffices create self similar behavior process bursty wide range time scales 
research focuses simulation measurement modelling web servers 
thesis starts detailed study arrivals service web servers 
afterward evaluations existing models servers new models designed meet web server special requirements 
intensive simulations analyze influence arrival parameter system performance 
results indicate system performance greatly influenced ratio times times parameters absolute values 
contrast system performance hardly affected heavy tailed behavior inter arrival times times 
simulation web trace analysis investigate reasons heavy tailed behavior transmission duration distribution isolating major influencing factors file size network conditions server load 
evidence transmission duration distribution file server client web pareto heavy tailed 
furthermore text files transmission delay specific client server pair significantly affected file sizes 
addition show network conditions major influence heavy tailed behavior transmission duration distribution 
contrast server load shown significant impact high variability distribution 
accuracy self similar processes widely model web server systems evaluated simulations 
specifically consider processes self similarity origin realistic self similar arrival process realistic service time distribution 
detailed examination comparison processes regarding scenarios process outperforms 
main results simulation system medium low utilization levels processes fail estimate realistic maximum number clients system realistic average response time 
address concern introduce queueing models web servers include realistic arrival process realistic service time distribution 
ob taining analytic results process realistic arrivals realistic service difficult fit known solution queue usually depends moments exist case heavy tailed distributions 
model burst model markovian relatively simple model 
queue length distribution waiting time distribution buffer overflow probability calculation critical points defines levels probability saturating server 
second model burst model heavy tailed service time dis tribution complicated accurate model 
asymptotic calculation waiting time distribution relies calculating waiting time distribution model heavy tailed service time distribution 
chapter subject matter internet irreversibly changing way communicate way buy play 
research average surfer leave site seconds request served resulting lost dollars year commerce sales united state 
environment analyzing predicting performance existing web servers systems great importance order improve quality service experienced users 
ample evidence arrival service processes web servers exhibit long range dependence high variability :10.1.1.146.2304
tics considerably affect performance systems unfortunately increase complexity simulation modelling tools analysis :10.1.1.35.7251
specifically simulations need run long time capture effects rare events associated high variability traditional analytic modelling techniques result models intractable 
realistic arrival process web servers system 
grey intervals represent times white intervals represent times vertical lines represent request arrivals 
web servers arrivals request arrival process web servers process requests period followed period significantly longer interarrival times period depicted graphically :10.1.1.146.2304
times inter arrival times times heavy tailed distributions 
loosely speaking heavy tailed distributions tails follow power law low exponent contrast traditional distributions gaussian tial poisson tails decline exponentially faster 
heavy tailed distributions behave quite differently distributions commonly performance evaluation exponential 
particular sampling random variables follow heavy tailed distributions probability large observations occurring non negligible 
distributions characterized extremely high variability may infinite variance infinite mean 
prominent example heavy tailed distribution pareto distribution shape parameter location parameter cumulative function 
widely accepted standard poisson model adequately number arrivals realistic poisson time realistic poisson arrival processes counting processes model network traffic take account inherently bursty nature 
depicts realistic arrival process compared poisson arrival process equal arrival rate 
phenomenon related heavy tails called zipf law 
zipf law relates popularity object location list sorted popularity 
precisely consider set objects web servers web pages repeated 
time interval count number object denoted sort objects order decreasing number object place list denoted zipf law states positive constants 
original formulation zipf law set popularity rank inversely proportional 
practice various values values near 
evidence zipf law internet widespread particular zipf function adopted model distribution number requests web page 
additional manifestation zipf law internet clients distribution domains 
detailed analysis popular web sites available literature 
various studies indicate ranks popularity domains frequency accesses web server client distribution heavy tailed distribution 
function small number large values corresponding popular internet service providers large research institutes corporations long tail assuming small values 
workload analysis academic commercial web sites shows average client requests come domains distribution fits non uniformity function zipf distribution 
web servers service considering service time properties web servers restrict attention service clients browsers send requests files servers reply requested files 
systems service time distribution characterized files transmission duration distribution tdd shown heavy tailed crovella taqqu bestavros 
tried answer important question file transfers show heavy tailed distribution estimating distributions data sets 
set file requests record requests urls users 
data set contains duplicate requests occur user requests file user requests file 
requests result cache hits means satisfied generating network traffic 
set file transfers consists cache misses 
element set corresponds single instance file transferred network 
proper subset set file requests 
despite action caching files transferred network data set contains duplicate files 
set unique files set contains exactly entry file regardless times requested transferred 
set proper subset previous 
data sets primarily concerned distribution object sizes measured bytes 
set available files web servers set contains exactly entry file presents server files accessed reporting period 
data traces show heavy tailed distributions data sets file sizes particular sizes file transfers show heavy tailed behavior 
distribution sizes file transfers responsible heavy tailed distribution transmission times 
strong sample correlation file sizes transmission times see 
known models web servers heavy tailed arrival process heavy tailed service time distribu tion suffices create self similar behavior process bursty wide range time scales 
process exhibits long range dependence values instant typically non negligibly positively correlated val ues instants 
practically self similar process smoother closer average time scale grows 
parameters average rate moments give valuable information self similar process 
studies show performance figures radically different simulations data incorporates long range dependence simulations data long range dependence :10.1.1.35.7251
widely accepted evaluating web servers applications policies load balancing task scheduling assumption process self similar incorporated order accomplish accurate analysis results example 
far models web server system considered processes self similarity single origin example 
cohen consider realistic heavy tailed service time distribution poisson arrival process self similar 
refer single origin self similar process poisson arrivals realistic service model 
respectively models consider arrival process assume exponential service time distribution heavy tailed 
single origin self similar process realistic arrivals exponential service referred model 
difficult obtain explicit performance parameters queue general arrival process general service time distribution queue heavy tailed arrivals service time distributions 
model hard analyze markovian process fit known solution queue usually depends moments exist case heavy tailed distributions 
known method deal heavy tailed distributions approximate hyper exponential distribution 
important example fitting algo rithm introduced sidi pareto distribution 
simi lar general method suggested approximate heavy tailed distribution matrix exponential distribution 
method suggested model web servers discussed details chapter 
theoretical studies concerning processes general arrival process gen eral service time distribution heavy tailed inter arrivals service time distri butions proposed cohen xia liu 
theses studies discussed details chapter 
thesis contributions dissertation focus development new stochastic queueing mod els process improving performance web servers systems 
server client system usually characterized arrival process clients server distribution service times start comprehensive investigation clients requests arrivals exact behavior service distribution 
knowledge simulation research analyzes potential known models web servers lead deep understanding accurate model web servers incorporate 
proposed evaluate new analytic models designed meet web servers special requirements 
summarize contributions thesis 
web server arrivals performed intensive simulations understand role parameter arrival process system performance 
understanding impact parameter helpful designing realistic models 
simulations results indicate system performance greatly influenced ratio location parameters times times ratio shape parameters times times 
particular system loaded long periods ratio location parameters times times larger 
happens shape parameter times smaller shape parameter times 
cases system hardly loaded 
interesting discovery research shape parameter inter arrival times times negligible impact system performance 
indicates reasonable assume inter arrival times times heavy tailed distributed done example 
web server service studied transmission duration distribution tdd file server client web distribution heavy tailed 
file request web non negligible probability long completion time holds small files 
addition empirical result means servers serve single static page suffer bursty service times 
study reasons heavy tailed distribution files transmission duration 
understanding causes high variability tdd may help design systems reduce 
addition understanding provides better tools modelling service times analyzing server systems 
major factors determine duration file transfer file size server load network conditions server client distance load routes 
compare tdd individual files transmitted server client bu trace :10.1.1.31.6715
interestingly transmission durations files distributed similar way pareto similar shape parameter similar location parameter 
distributions stay similar files different order sizes bytes kb covering text files 
demonstrates distribution file sizes highly variable major cause heavy tailed behavior tdd 
confirm findings isolate network conditions server load performed controlled simulations local network wide area connections 
provide new date data sets 
empirical results experiments server load major cause high variability tdd 
important fact explains local service service provided servers local network suffers negative effects heavy tailed distributions performance 
hand files size distribution network conditions responsible heavy tailed behavior tdd 
evaluation known models web servers simulation showed accurate queueing model web server system consider origins self similarity 
specifically model incorporate realistic arrival process realistic service time distribution 
importantly evidence system low medium utilization processes self similarity single origin realistic arrival process realistic service time distribution estimate performance parameters reliable manner 
evaluate accuracy single origin self similar process compared process realistic arrivals realistic service called 
estimate error factor analyzing web server system single origin self similar model realistic evaluate models better scenario 
simulation results show system low medium utilization model model fail estimate realistic system performance parameters reliable way 
error factor large maximum client system average response time performance parame ters 
example medium utilization model estimation maximum client system error factor estimation average response time error factor 
utilization high models perform 
unfortunately scenarios high utilization tens thousands clients simultaneously system interesting web context clients drop system 
example high utilization model estimation maximum client system error factor estimation average response time error factor smaller system loaded long time periods clients simultaneously inside 
new models web servers thesis presents evaluates new stochastic queuing models web servers called burst model burst model heavy tailed service time distribution 
simple markovian model second complicated accurate 
justify models assumptions calculate essen tial performance metrics evaluate accuracy 
models burst arrival process model web server arrivals 
superposition identical independent sources matrix exponential truncated heavy tailed time distribution exponential time distribution 
matrix exponential truncated heavy tailed distribution mimics heavy tailed distribution reliability function shows heavy tailed behavior limited range drops exponentially 
note arrival process fact markov modulated poisson process mmpp 
allows simplify calculations relying markov processes 
burst model combines burst arrival process ma trix exponential truncated heavy tailed service time distribution 
queue length distribution waiting time distribution buffer overflow probability calculated 
similar performance metrics change smoothly increasing server speed jumps called blow ups points appear 
extended knowl edge service structure allows refined analysis blow regions 
introducing critical points define probability levels saturating server model provide deeper understanding system performance havior 
probability levels help analyzing situations server saturated average behavior temporarily loaded 
critical points define levels useful evaluating system parameters example placement buffers memory hierarchy 
second model burst model combines burst arrival process class heavy tailed service time distribution introduced 
asymptotically calculate model waiting time distribution waiting time distribution model identical service process 
tail exponent class heavy tailed distributions studied interval 
calculation tail waiting time distribution model calculation waiting time distribution case tail exponent exactly 
calculate asymptotic formula waiting time distribution tail exponent rational number 
performed sets simulations evaluate models 
starting simple comparison models feed arrivals burst arrival process called server called server 
server matrix exponential truncated heavy tailed service time distribution server heavy tailed service time distribution 
simulation emphasizes different models showing burst model represents bursty process burst model 
compared models process realistic arrivals realistic service process indicates burst model accurate burst model order magnitude 
thesis organization thesis organized follows 
chapter describe basic defini tions 
chapter studies web server arrival process chapter describes service time distribution 
evaluation existing models web servers chapter 
chapter chapter introduce new models web servers burst model burst model respectively 
models evaluated chapter 
discuss related suggest research chapter 
chapter definitions studied continuous distributions exponential distribution 
probability density function positive parameter 
distribution memoryless value exponential random variable moment time depend past values 
sequence events occurring times intervals tween successive events indepen dent random variables drawn exponentially distributed population stochastic process describing event sequence poisson process 
stochastic process called markovian behavior depends cur rent state 
continuous time markov chains property achieved distribution state holding times memoryless exponential 
matrix exponential distributions discussion matrix exponential distributions results 
modelling network traffic extension pure markovian concept necessary 
replacing single state markov chain box contains network states called phases distribution state time approxi mated arbitrarily closely 
demonstrates transformation state number markov chain 
exponential state times generalized replacing single state number bigger box containing network phases 
distribution time single client entering subsystem box leaving determined matrix algebra matrices definitions 
transition probabilities matrix subsystem pij completion rate matrix diagonal matrix single state leaving rates 
service time matrix element vij mean time spent phase customer leaves system started phase service rate matrix 
inverse components pi entrance vector probabilities new customer directly go phase entering system 
vector constant new customer enters system independently previous customer 
reliability function time customer spends box exp matrix exponential representation defines distribution equation 
distributions called matrix exponential short 
nth moments distributions follow equation 
pv basic types distributions essential modelling network traffic 
describe common examples hyper exponential distribution hypo exponential distribution representation 
definition xi 
xn independent exponential random variables parameter 
suppose positive constants pi 
pi 
random variable xi probability pi hyper exponential random variable exponential phases 
analyze representation hyper exponential distribution phases hyp shown 
matrix zero transitions box 
probability vector matrices matrices equation hyp distribution reli ability function mean definition xi 
xn independent exponential random variables parameter 
random variable hypo exponential distribution xi 
example matrix exponential state times representation hyp distribution representation hypo distribution special case hypo exponential distribution arises known erlang distribution 
analyze representation hypo exponential distribution phases hypo shown 
probability vector matrices matrices equation hypo mean heavy tailed distributions self similar pro cesses exponential distribution light tailed contrast heavy tailed distribution formally defined follows 
definition random variable heavy tailed distribution tail index means constant heavy tailed distributions characterized extremely high variability increases sharply decreases 
distribution infinite variance infinite mean 
simple heavy tailed distribution pareto distribution shape parameter location parameter cumulative distribution function 
detailed discussion self similarity see 
discussion section closely follows sources 
example self similar process measured internet traffic depicted compared poisson process shown 
figures emphasize self similar process smoother closer average time scale grows contrast poisson process horizontal line 
number different equivalent definitions self similarity 
standard states definition continuous time process self similar self similarity parameter satisfies condition equality sense finite dimensional distributions 
self similar process stationary stationary requires typically assumed stationary increments 
self similar processes show long range dependence 
process long range dependence autocorrelation function 
autocorrelation function process follows power law compared exponential decay exhibited traditional traffic models 
power low decay slower exponential decay sum autocorrelation values process approaches infinity 
number poisson traffic smoother time scale grows black intervals indicate previous regions 
measured traffic bursty time scale grows black intervals indicate previous regions 
implications 
variance mean samples process decrease proportionally predicted basic statistics uncorrelated data sets decreases proportionally second power spectrum process hyperbolic rising infinity frequency zero reflecting infinite influence long range dependence data 
attractive features self similar process appropriate degree self similarity expressed single parameter 
parameter expresses speed decay autocorrelation function 
historical reasons parameter hurst parameter 
self similar process long range dependence 
degree self similarity long range dependence increases 
heavy tailed distributions suggested cause self similarity network traffic 
willinger show traffic constructed sum processes individual periods indepen dently drawn heavy tailed distribution resulting traffic series asymptotically self similar 
distribution times heavy tailed parameter resulting series self similar 
times heavy tailed resulting determined whichever distribution heavier tailed smaller 
matrix exponential truncated heavy tailed distributions greiner introduce family hyper exponential distributions called ma trix exponential truncated heavy tailed short tht see 
showed distributions growing number phases asymptotically ap proach heavy tail distributions 
pt phase diagram tht distribution phases 
analyze representation distribution phases 
matrix zero transitions box 
probabilities pi 
entering phase decay geometrically factor 
state holding times grow geometrically factor matrices 

matrices equation distribution reliability function exp order heavy tail behavior tail exponent mean need heavy tail range rng mean largest exponential phase 
largest phase mainly responsible drop reliability function rng variable chosen freely open interval 
larger value phases necessary obtain heavy tail range 
chapter arrival process web servers chapter study arrival process web servers 
start description results simulation analyzing influence param eter process distributions performance web server section 
insights suggest model web server arrivals burst arrival model 
describe burst arrival process section verify assumptions required model arrivals section 
influence arrival process parameters evaluate accuracy model web server arrival process additional formation regarding effect process parameter relation parameters required 
times times inter arrivals times times distributions location parameter shape parameter 
describe simulation series analyzing effect parameters system performance 
simulation setup client system process evaluate parameters influence server performance 
process consists number clients queue time axis plus currently serviced client 
performance measurement parameters maximum number clients simultaneously system average response time experienced clients client response time defined departure time minus arrival time 
parameters determine resources required system buffer size computing power system quality service 
denote time client send request time server receives request time server finishes processing request time client receives bit answer 
similar lan simulation represent arrival time represent departure time 
wan intervals zero represent network delay 
arrival rate clients system time interval simply number arrivals divided similarly service rate defined number clients served time unit 
recall system utilization arrival rate divided service rate stable system 
evaluation performed levels system utilization low medium high 
due high variability distributions system loaded 
characterization base configuration pa rameters 
arrival process times location parameter shape parameter times location parameter shape pa rameter inter arrivals location parameter shape parameter number client system time influence time location parameter red line describes location parameter blue line describes location parameter black line describes location parameter 

service time distribution location parameter shape parameter 
times parameters times location parameter significant impact system perfor mance shown 
doubling parameter results jump factor maximum clients system parameter realistic model 
increasing creates long periods loaded system 
times shape parameter decreases system performance changes dramatically long loaded periods appear see 
reason phenomenon infinite mean heavy tailed times distri bution 
table describes influence times parameters 
number client system time influence time shape parameter red line describes shape parameter blue line describes shape parameter black line describes shape parameter 
parameter parameter maximum average type value clients response system time location shape table maximum number clients system average response time changing times parameters 
parameter parameter maximum average type value clients response system time location shape table maximum number clients system average response time changing times parameters 
times parameters times parameters significant impact system performance similar impact times parameters see table 
system performance greatly influenced ratio location parameters times times ratio shape pa rameters times times 
particular system loaded long periods ratio location parameters times times larger 
happens shape parameter times smaller shape parameter times times distribution heavier tail times distribution 
cases system hardly loaded 
inter arrivals times parameters inter arrival times location parameter significant impact system performance shown table 
decreasing parameter factor results jump factor maximum clients system parameter realistic model 
decreasing creates long periods loaded system 
contrast simulations show decreasing shape parameter neg impact system performance utilization increased parameter parameter maximum average type value clients response system time location shape table maximum number clients system average response time changing inter arrivals times parameters 
parameter 
important finding means accurate model web servers consider heavy tailed inter arrivals times distribution shape parameter responsible heavy tail behavior heavy tailed distribution 
burst arrival process burst arrival process superposition traffic streams indepen dent identical sources type shown source emits requests poisson rate time transmits time 
mean rate individual source average times sources collectively generate requests mean rate nk 
distribution duration periods matrix exponential truncated heavy tailed distribution special distribution described section 
choice actual time distribution great impact performance 
distribution time duration exponential 
burstiness individual source expressed parameter 
consequently higher bursty traffic source source source time time burst arrival process sources multiplexed 
single source boundary value traffic structure reduces pure poisson traffic peak rate infinite results called bulk arrival model 
assumptions verification models assume client requests web documents arrive burst arrival process 
statement relies assumptions 
assumption arrival process process 
agrees empirical models crovella bestavros deng :10.1.1.146.2304
studies different data sets process model www request arrivals requests period followed period significantly longer interarrival time period 
second assumption distribution duration periods tht 
justified time heavy tailed weibull distribution 
replacing real heavy tailed distribution tht distribution decreases model reliability tht distribution reliability functions show heavy tailed behavior long range reasonable compensation 
heavy tail range distribution defined mean largest exponential phase tht distribution heavy tail range longer longest duration appears server trace reasonable 
third assumption time distribution exponential 
jus time heavy tailed pareto distribution 
times heavy tailed lighter tail distri bution times times responsible observed level traffic self similarity :10.1.1.146.2304
addition mentioned section system performance greatly influenced ratio parameters times times specific values 
particular system loaded long periods shape parameter times smaller shape parameter times 
fact assuming times exponential distribution times heavy tailed heavy tailed distribution result similar scenarios 
inter arrivals times times heavy tailed weibull distribu tion 
assumption times exponential distribution justified section showing shape parameter inter arrival times times negligible impact system performance reasonable assume inter arrival times heavy tailed distributed 
fifth assumption arrival process superposition identically distributed sources assumption justified model 
zipf distribution clients domains 
function small number large values corresponding popular internet service providers large research institutes corporations long tail assuming small values 
distribution parametric distribution probability selecting th item proportional 
zipf function commonly adopted various social contexts model distribution people choices 
result complicated arrival process required scope research 
chapter service process web servers considering service time properties web servers restrict attention service clients browsers send requests files servers reply requested files 
systems service time distribution characterized files transmission duration distribution tdd shown heavy tailed 
chapter studies reasons heavy tailed distribution files trans mission duration 
understanding causes high variability tdd may help design systems reduce 
addition understanding provides better tools modelling service times analyzing server systems 
major factors determine duration file transfer file size server load network conditions server client distance load routes 
start refined analysis real data known web trace collected boston university section 
results simulations local network section wide area connections section 
interpret empirical results conclude section 
analysis bu trace analysis performed bu trace reveals tdd file server client web pareto heavy tailed 
emphasize analyzing collective distribution duration transmitting files 
example transmit files times samples considered order estimate tdd files relevant samples considered order estimate tdd single file 
tdd file server client web heavy tailed file request web non negligible probability long completion time holds small files 
addition empirical result means servers serve single static page suffer bursty service times 
compare tdd individual files transmitted server client bu trace 
interestingly transmission durations files distributed similar way pareto similar shape parameter similar location parameter 
distributions stay similar files different order sizes bytes kb covering text files 
demonstrates distribution file sizes highly variable major cause heavy tailed behavior tdd 
data collection tdd files measured client point view 
time interval moment proxy starts sending client request server moment proxy completes receiving response server 
start examination trace collected boston university april may see :10.1.1.31.6715
trace data collected computer science department undergraduate workstation lab consisting cluster sun sparc station running solaris 
trace contains requests collected lightweight non caching proxy servers running workstation 
public trace known combines essential properties experiments 
anonymity achieved hashing column data set line 
preserves ability compare mem bers column equality leaking information regarding members identities 
example know server sends file file revealing server identity files 
second essential property trace allows calculate duration request 
usually traces supply request start time termination time 
difficult estimate distribution function samples reliable way information files transmitted times 
files common number way information gathered supply statistically reliable sample 
addition analyzing information files transmitted times show consistency results 
double checking distribution functions fitting done program matlab code 
tdd file web section analyze tdd file transmitted server client 
empirical result presents evidence tdd file server client pareto heavy tailed 
order find tdd file analyzed bu trace data 
considered files transmitted times 
tdd distribution file transmission duration bu trace plotted pareto distribution shape parameter location parameter file turned pareto distribution shape parameter varies 
shows example relatively popular small file requested times 
plots samples estimated distribution graph axis indicates transmission duration axis indicates estimated pareto distribution 
log log plot pareto distribution sense thousands samples 
see straight line clearly 
smaller number samples clear normal plot done example 
problem log log plot presentation series results cloud points 
tdd files transmitted server section analyze tdd files transmitted server client 
analyze tdd file separately compare results files 
mentioned section tdd file pareto 
evaluating issues relation tdd location pa rameters files transmitted server client ii relation tdd shape parameters files 
location parameter rep resents smallest sample intuition location parameters probably differ file size contrast shape parameters probably similar 
surprisingly intuition fully correct 
bu trace contains evidence files transmitted server client shape parameters location parameters similar 
distributions stayed similar files different order sizes bytes kb cover text files 
order find relation corresponding shape parameters location parameters processed results section 
files divided groups transmitting server 
reliable sample consists group files file transferred times 
set big size way information gathered provide statistically reliable sample 
recall show specific property exists small statistically reliable sample set stronger result show property exists large set 
shows sampels file plotted specified distribution 
graph axis indicates transmission duration axis indicates estimated 
transmission duration distribution files transmitted single server bu trace plotted pareto distribution grey line shape parameter location parameter 
figures summarize results 
graphs plotted mic axis due high variance file sizes 
seen files shape parameter 
interesting result deduced location parameter highly related file size 
location parameter files range location parameter range 
experiment implies client server pair ordinary text files size bytes kb tdd significantly affected file size 
shape parameter alpha file size shape parameters transmission duration distributions files transmitted single server bu trace 
location parameter file size location parameters transmission duration distributions files transmitted single server bu trace 
local network simulation simulation meant corroborate results analysis bu trace 
simulation effects outside network locating server clients local network 
sizes server files popularity distributed realistic way 
empirical results local network experiments files transmission durations pareto distributions 
shape parame ters similar correlated file sizes highly correlated server load 
contrast location parameters highly correlated file sizes correlated server load 
simulation setup experiment performed technion distributed systems laboratory consists apache server clients running simulation code 
tested system isolated rest lab outside network 
data collected clients log files 
server different files sizes popularity distributed 
file sizes varies bytes mb 
number file transmissions generation method provides statistically reliable sample 
simulation results simulation statistics shows smallest files sizes range bytes mb pareto heavy tailed 
largest files sizes mb clearly heavy tailed behavior fit pareto distribution 
shape parameter alpha file size shape parameters transmission duration distributions files transmitted simulation server local network smallest files 
figures summarize results local network simulations 
due high variance file sizes graphs plotted logarithmic axis 
seen high correlation location parameter file sizes 
location parameter varies range smallest files varies range 
considering simulation executions data shape parameter varies range 
files shape parameter range see 
correlation shape parameter file sizes 
wide area network simulation local network simulation effects network conditions 
results indicate distribution file sizes major factor influencing average location parameter average file size location parameters transmission duration distributions files transmitted simulation server local network smallest files 
heavy tailed behavior tdd demonstrated shape parameter leaving server load main cause heavy tail tdd 
motivated elaborate study wide area setting including tcp server responding requests clients remote locations 
file sizes vary kb kb covering text files 
main empirical results simulations follows 
influence file sizes isolated comparing different files trans server client files pareto similar shape parameters different location parameters increase file size 
influence route isolated comparing file transmitted routes different quality parameters pareto similar shape parameters different location parameters 
influence server load isolated comparing file transmitted server different loads client shape parameters location parameters different 
simulation setup simulation consists single tcp server located technion clients remote locations world different route conditions 
study influence file sizes compare tdd different files transmitted server client 
simulation generate file request seconds collect transmission duration statistics 
low frequency requests generation hardly influences route server load routers get millions requests second 
file sizes vary kb kb covering text files 
increase reliability performed simulation times clients world 
study influence route files tdd compare tdd file transmitted server different clients 
server located israel clients located east west usa portugal brazil australia taiwan 
routes known previous research different quality parameters 
important emphasize server known specific clients 
part faculty internet service dedicate experiments 
study influence server load file compare file transmitted server working different loads client 
examine different load levels load high load 
server load increased adding requests local clients 
impact file sizes tdd files transmitted specific server client pair 
simulation results wide area simulations results regarding influence file sizes appear 
files pareto similar shape parameters different location parameters increase file sizes 
results experiments analyzing influence route files tdd appear 
pareto similar shape parameters different location parameters 
simulations results regarding influence server load file appear 
shape parameters location parameters different 
results section validate expectation file sizes network conditions affect absolute values transmission duration changing location parameters server load far major cause impact route selection tdd 
impact server load tdd 
high variance distribution 
section attempts explain findings 
interpreting empirical results previous sections contain evidence server load highly correlated shape parameter tdd responsible tdd bursty behavior 
hand distribution file sizes network conditions correlated parameter 
section discusses possible explanations results 
impact file sizes distribution experiments show distribution file sizes correlated location parameter 
considering files transmitted server client bu data small effect file sizes tdd vanish 
files size bytes kb ip packets ip packets transmission durations similar shape parameter similar location parameter pareto distributions 
findings cohen kaplan reveal dns query times tcp connection establishment times start session delays servers times major causes long waits actual transmission time 
note request client server time spent operations identically distributed regardless requested file size 
theoretical study sidi addresses packet loss probability packets block consecutive sequence packets independence assumption 
clearly realistic model tcp connection strong dependence packets connection 
considering block size range packet packets large buffer corresponding large link capacity large router buffer low utilization high probability packet block rejected 
assumptions buffer block sizes packet rejected high probability block packets pass 
distribution packet pass equal distribution block packets pass 
impact network conditions result imply network conditions influence bursty nature tdd manifested lack correlation network conditions shape parameter tdd 
network conditions affect location parameter tdd 
possible explanation lack correlation rise growing capacity reliability today links networks 
example real data ip monitoring project ipmon show maximum link utilization link load bits second mbps mean utilization mbps gbps link similar data collected sites dates 
study indicates backbone network tcp flows exhibit low sequence packets rates backbone delays dominated speed light 
due high connectivity reliability backbone networks link router failure hardly affects users 
furthermore failures backbone network due scheduled maintenance operations 
information ip backbone networks represent slower links modem links hints today networks highly available 
perform sprint advanced technology laboratories collection date april th new york city site 
traces available ipmon sprint com ipmon php impact server load barford crovella show high server load generates significant gap transmission connection setup packets data packet flowing server leads long transmission durations 
essential reasons bursty nature server load request arrival process requests characteristics 
document request arrival process web servers bursty wide range time scales shows self similar behavior 
web servers essentially reply client requests bursty request arrival process results bursty server load 
example server uses come serve discipline receives bursty request arrival process server saves arrival requests buffer limitation queue 
result requests burst starts requests arrive enter long queue server experiences heavy load 
hand requests burst fades server load reduced 
characteristic client requests bursty 
requested files high variation file sizes way file sizes distribution affect tdd indirect manner 
second popularity requested files zipf distribution function high variation 
explain bursty server load leads bursty transmission durations 
example server process sharing discipline responds arrival requests rarely rejects requests 
result increased load server response observed client slower decreased load faster 
bursty transmission durations result bursty server load circular effect server load transmission durations 
long transmission duration causes heavy server load 
server come serve discipline busy long transmission clients requests accumulate server experiences heavy load 
server load explain transmission durations files pareto distributed network effects happens local network simulations 
chapter evaluating self similar processes modelling web servers chapter quantify error modelling web server system process self similarity single origin realistic arrival process realistic service time distribution 
processes evaluated different arrival rates section different service rate section 
simulation setup study potential models estimating re model performance 
provide models best possible comparison results actual parameters fitting 
achieve goal simulation carried stages 
stage simulate realistic model time units calcu late actual arrival service rates 
denote generated realistic arrivals 
am generated realistic service times 
sm 
actual arrival rate actual service rate stage si generate 
am 
sm calculate actual parameters called effective parameters literature 
second stage simulate manner 
actual arrival rate generate poisson arrival process realistic service times 
sm represents best performance model provide 
similarly realistic arrival process 
am service times generated exponential distribution param eter create best possible fitting model 
additional technical details simulation setup described section 
varying arrival rate start simulation series analyze general effect arrival rate reliability models 
simulation results low medium high arrival rates utilizations 
results comparison model maximum number clients simultaneously system average response time appear table 
immediate comparison low medium utilization model model fail estimate formance parameters model 
furthermore easily seen figures models describe self similar processes predict bursty nature realistic model 
low medium utilization level model outperforms model high utilization direction change model outperforms model 
note high utilization model accurate error factor smaller performance parameters 
intuitively system empty loaded models similar 
number client system time client system processes blue line red line low arrival rate utilization 
number client system time client system processes blue line green line low arrival rate utilization 
number client system time client system processes blue line red line medium arrival rate utilization 
number client system time client system processes blue line green line medium arrival rate utilization 
number client system time client system processes blue line red line high arrival rate utilization 
number client system time client system processes blue line green line high arrival rate utilization 
interesting scenarios illuminate differences models fact middle system empty loaded 
seen figures medium utilization gap model model realistic model highest 
figures graphically illustrate essential difference behavior models 
typical shape client system graph 
bursty arrivals particular arrival peaks cause sharp ascent lines 
bursty service effects long service times cause long horizontal lines short service times result sharp declines 
contrast typical shape client system graphs right angle triangles 
model triangles caused bursty arrivals smooth service right angles left 
model triangles caused smooth arrivals bursty service right angles right 
note comparison model sensitive changes arrival process gap large low medium utilization reduced high utilization exactly sequence arrivals 
varying service rate section analyze general effect service rate reliability models 
simulation results high medium low service rate 
ta ble presents results comparison model maximum number utilization model maximum clients error average response error level system factor time factor low medium high table maximum number clients system average response time changing arrival rate clients simultaneously system average response time 
results comparison model maximum number clients simultaneously system average response time appear table 
immediate comparison low utilization models fail estimate performance parameters realistic model 
low high utilization levels model provides accurate estimations performance parameters model 
direction changes medium utilization model provides accurate estimations 
note medium utilization model performs error factors smaller model fails estimate parameters 
high utilization models perform provide estimates parameters 
note comparison model sensitive changes service process gap changes different utilization levels exactly service times 
number client system time client system processes blue line red line high service rate number client system time client system processes blue line green line high service rate number client system time client system processes blue line red line medium service rate number client system time client system processes blue line green line medium service rate number client system time client system processes blue line red line green line low service rate number client system time client system processes blue line red line green line low service rate utilization model maximum clients error average response error level system factor time factor low medium high table maximum number clients system average response time changing service rate chapter burst model chapter introduces burst model calculates queue length distribution buffer overflow probability waiting time distribution 
burst model combines burst arrival process matrix exponential truncated heavy tailed service time distribution 
burst arrival process superposition identical independent sources matrix exponential truncated heavy tailed time distribution exponential time distribution see section 
matrix exponential truncated heavy tailed distribution mimics heavy tailed distribution reliability function shows heavy tailed behavior limited range drops exponentially see section 
allows simplify calculations relying markov processes 
start discussion blow ups regions probability levels saturating server defined critical points separate levels 
points calculate model performance metrics 
blow regions critical points assume service time distribution ps bs phases average service rate 
simplify notation refer service phase rates 
see 
truncated heavy tailed distributions burst arrival process allow long bursts non negligible probability performance parameters burst model change smoothly increasing server speed blow points appears 
turns behavior influences model 
say 
sources long term active sources sources state long period sources average behavior behavior period 
case mean arrival rate temporarily set long term active sources rate leave sources average behavior rate 
blow points located 
insight obtained model tht service time distribution exponential distribution 
blow point service phase rates 
probabilities entrance vector ps define levels probability saturating server 
points separate levels called critical points 
demonstrate calculate level probability saturating server 
level means positive probability saturating server 
consider service phase rate critical points 
points represent equality phase slowest rate temporary arrival rate 
passing points means positive probability long term active sources lead saturation server 
furthermore assuming long term active sources lead saturation server probability pt probability grows pk 
note probability long term active sources lead saturation server 
interesting critical points define level probability saturating server 
points represent equality phase fastest rate temporary arrival rate 
passing points means long term active sources lead saturation server probability 
consider average server rate ps bs similar region parameter space 
called blow region 
blow region long term active sources rate remaining sources average behavior sufficient produce positive queue length growing average rate 
parameter great influence delay probability burst queue 
important region parameter space burst model 
region minimum number long term active sources gether remaining sources average behavior sufficient produce saturation period positive probability 
note long term active sources produce positive queue length growing average rate 
queue length bounded parameter influences buffer overflow distribution described 
critical point saturation server happen 
delay small actual burst length distribution visible impact self similarity heavy tailed times lead different quality service qos standard exponential burst lengths 
queue length distribution assume time distribution pa ba reliability function ri simultaneously long term active bursts finishes time heavy tail exponent 
saturation period queue length grow average rate positive 
assuming empty queue saturation period probability queue length reached period approximately pi ri assumption empty queue start saturation period rea utilization close system empty non negligible fraction time 
discussion pi assume average service behavior service rate 
additional information service structure leads insight system 
assume simultaneously long term active bursts service rate temporally saturation period queue length grow rate positive small note interesting situations small positive 
assuming empty queue saturation period probability queue length reached period approximately pi ri multiplying pi probability service rate approximates probability period server rate queue length reached 
buffer size bounded observation influences buffer overflow distribution described 
pi pi implies large queue length caused saturation periods long term active bursts 
words duration saturation periods long term active sources dominates large heaviest tail exponent heavy tail exponent individual period tail exponent duration saturation period determines queueing behavior 
theorem summarizes calculation 
theorem queue length probability queue length tail probability burst model denotes queue length request arrival times 
note steady state distribution exists 
queue length distribution heavy tail infinite moments 
particular mean infinite equivalent buffer overflow probability buffer overflow probability bop follows directly queue length distri bution 
theorem buffer overflow probability burst model bop distribution heavy tail distribution 
practical implication additional buffer space reduces bop slowly particular slower exponential decrease 
result bop assumes average service behavior service rate 
assumption hidden tail exponent parameter 
accurate modelling service time distribution leads insight system 
mentioned long term active sources remaining sources average behavior sufficient produce saturation period positive probability 
assume simultaneously long term active bursts service rate temporally previously mentioned saturation period queue length grow rate positive small note interesting situations small positive 
result positive probability buffer overflow long term active sources 
calculate probability exactly multiplying bop tail exponent parameter probability service rate waiting time distribution waiting time related queue length request arrival request arrives queue requests front burst model experiences hypo exponential distributed delay mean erlang pj pj approaches deterministic distribution large waiting time tail behavior theorem summarizes calculation 
theorem tail behavior waiting time probability burst model assuming finite buffer size maximal delay distributed follows erlang pj applications burst model section demonstrate model analyze distributed web server architecture consisting multiple web servers mecha nism spread clients requests servers 
refer known techniques distributed web server ip distributed packet ing 
web client accesses documents browser 
browser sends request web server responds requested documents 
web server respond multiple web clients 
web clients servers communicate hypertext transfer protocol 
request tcp connection client server established client sends request server server responds requested information 
tcp connection closed 
typically server location url identified host name contained url 
establish tcp connection browser asks domain name service dns map server host name ip address 
ip ip address architecture uses forwarding approach 
focus technique suggested routing dispatching hosts cluster share ip address secondary address 
shared address publicized domain name service 
client requests sent address processed servers secondary address 
pt bur model ip technique distributed web server 
normally machines share ip address cause packet destined address accepted replied ma chines 
usually confuses sender leads connection reset 
carefully designing dispatching local filtering functions approach ensures ev ery packet processed exactly server 
client request reaches cluster mechanism required select machine process request 
server selected incoming packets request directed server 
approach static dispatching algorithm select servers solely hash value client ip addresses 
guarantee packets connection reach server 
hash function determined analyzing distribution client ip addresses access log client requests approximately evenly distributed servers 
bur model ip technique distributed web server 
assume machine devoted dispatching identical machines perform servers 
analyze representation distribution 
replacement box contains state represent dispatching state boxes represent service representation 
matrices 

matrices equation mean 
request arrives queue requests front experiences hypo exponential distributed delay see section mean pj pj approaches deterministic distribution large analysis burst model provides knowledge blow points critical points useful system design purposes 
example design system way service rate critical point happen 
saturation server knowledge blow points critical points achieve benefits decision buffer location memory hierarchy 
example blow region calculated critical points locate parts buffer probabilities saturation server 
distributed packet rewriting distributed packet rewriting dpr uses forwarding approach host system provides web service packet routing functions 
server redirect connection server client transparent manner 
focus technique suggested select web server destination server determined hash function applied client ip address 
hash function determined analyzing distribution client ip addresses access log client requests approximately evenly distributed servers 
dpr hosts share ip addresses non primary addresses 
server configured respond possible original tion addresses addition primary address 
shared addresses publicized dns 
client requests sent addresses round robin manner 
hash function ensures client request processed exactly server incoming packets request directed server 
assuming hash function evenly distributes client requests servers analyze fluid view dpr 
client request served locally server reaches probability served server probability case add forwarding called rewriting time total service time request 
assume rate rewrite operation rate service operation 
average request total service time burst model dpr appears 
analyze representation distribution 
service replacement box contains state represents rewriting operation state boxes represent service operation representation matrices matrices equation mean 
note average service rate rate service operation result consists fluid view 
burst model reveals information service divided components contribution component calculated 
furthermore analysis burst model calculate delay distribution mean request arrives queue stands arrival times requests front experiences hypo exponential pt pt burst model distributed packet rewriting technique distributed web server 
distributed delay see section mean erlang erlang pj pj approaches deterministic distribution large chapter burst model heavy tailed service time distribution chapter introduces burst model heavy tailed service time dis tribution 
asymptotic calculation model waiting time distribution pre sented relies calculating waiting time distribution model heavy tailed service time distribution 
burst model combines burst arrival process see section class heavy tailed service time distribution introduced described 
heavy tailed service time distribution class service time distributions introduced constants gamma function 
details regarding gamma function 
moment equation tdb second moment infinite 
note asymptotic heavy tail behavior equation 
waiting time distribution section calculate waiting time distribution burst model heavy tailed service time distribution 
indicator random variable number sources simultaneously interval entire time interval change 
pi denotes probability pr 
indicator random variable exactly sources simultaneously interval entire time interval 
denote pi pr 
note pi pi 
probability pi calculated follows 
assume time distribution reliability function described section 
distribution time period independent bursts simultaneously intervals heavy tailed exponent reliability function ri 
probability pi equal probability simultaneously bursts finishes time ri 
total probability theorem probability client wait time interval equal probability wait time plus probability wait time 
pi pi probability change occurs number simultaneously bursts time interval pi 
example consider case simultaneously bursts time interval simultaneously bursts time interval source turns starting point 
note probability scenario pi pi 
dominated pi 
pi pi arrival process markov modulated poisson process mmpp special case markovian arrival process pollaczek khintchine formula holds 
calculation conditional waiting time equal waiting time model corresponding arrival rates 
calculation arrival rate follows 
assume sources simultaneously interval entire time interval sources act 
recall source emits requests poisson rate time mean rate individual source average times described section 
sources collectively generate requests mean rate represents rate generated sources simultaneously interval entire time interval represents sources 
calculate waiting time model left calculate waiting time distribution queue heavy tailed service time distribution 
distribution calculated 
unfortunately general case calculation explicit expression waiting time distribution omitted distribution tail specified 
calculate waiting time distribution queue 
waiting time distribution queue rational number tail exponent section study waiting time distribution queue traffic load service time distribution case discussed section 
method find waiting time distribution calculate laplace stieltjes transform lst calculate waiting time distribution theorem 
definition laplace stieltjes transform service time distribution follows see details regarding transformation 
db real 
denote lst 
recall average service time distribution section 
pollaczek khintchine formula states positive real page 
shown section equation 
assuming rational 
define 
equation implies replacing define yn yn yn yn yn yn equation result equation yields yn yn yn yn yn yn yn yn substituting equation yields yn polynomial degree zero 
function yn poles singularity points 
denote zeros yn 
assume multiplicity yn 
write equation cn yn term sum written absolutely convergent power series may put determine wk apply cauchy integral theorem counter clockwise simple closed contour min recall cauchy integral theorem states analytic simply connected region dz closed contour completely contained contour integral path enclosing pole 
recall cauchy integral formula states dz integral contour integral contour enclosing point 
residue function point defined dz counterclockwise simple closed contour small avoid poles note definition small avoid poles wk yn dy integral equation regular poles yn 
wk yn yn yn lim yn multiplicity yn poles multiplicity larger calculation residues poles requires appropriate adaptation 
denote dy define 
substituting zn equation yields yn yn lim yn yn zn yn yn wk yn yn zn equation equation recalling implies zn yn zn yn zn yn applying theorem finite sin integer get theorem 
theorem waiting time distribution queue service time distribution zn yn st st define ai mean rate sources simultaneously interval sources act sources see section moment see section 
theorem equation derive waiting time distribution burst model stated theorem 
theorem waiting time distribution burst queue service time distribution pi pi ai zn yn st st chapter simulations models section describes simulation series comparing burst model corresponding markovian model burst model 
emphasize differences models feed arrivals servers server pareto heavy tailed service times distribution server matrix exponential truncated heavy tailed service times distribution 
servers mean service time 
simulations provide better understanding influence service times distribution model performance 
section describes simulation analyzing performance models com called realistic process considers realistic arrivals heavy tailed service times distribution 
comparison error factor model estimating maximum number clients system average response time demonstrates improvement achieved replacing server server 
comparison models simulation setup characterization parameter fitting method described section burst arrival process parameters 
number clients times shape parameter times number phases times times average times average inter arrivals average 
generated arrivals provided servers server pareto heavy tailed service times distribution server matrix ex truncated heavy tailed service times distribution 
servers mean service time 
recall create heavy tailed service behavior shape parameter service times distribution smaller see section 
simulation results shape parameter values covering different system behaviors observed 
specifically difference system behavior shape parameter 
system overloaded shape parameter smaller 
simulation results simulation results service time shape parameter service time shape parameter service time shape parameter service time shape parameter 
table summarizes comparison maximum number clients system average response time models 
service model maximum average shape clients response parameter burst burst burst burst burst burst burst burst table comparison burst burst models 
immediate burst model consistently represents bursty process burst model 
shape parameter service times distribution larger processes smooth small peaks see 
result selecting mentioned arrival process parameters particular choosing times shape parameter 
see detailed discussion relation parameters arrival service processes 
decreasing shape parameter service times distribution keeping system loaded service times shape parameter larger highlights difference models 
seen figures bursty nature burst model emphasized graph line shape smooth burst graph addition described table burst model predicts values maximum number clients system average response time larger order magnitude corresponding values predicted burst model 
system loaded burst model pre dicts pessimistic scenario represents bursty process 
models clients accumulate fast 
difference models lays number client system time client system processes burst blue burst red models service time shape parameter clients departures processes 
seen clients tures burst graph constant rate clients departures burst graph variable rate stairs graph 
phenomenon result extremely high variability service times distribution burst model 
hand samples distribution small causing steep decreases hand large sample arrives causes long horizontal line 
comparing models realistic pro cess section describe simulation comparing processes realistic process burst burst 
create realistic process feeding realistic arrival process server 
burst number client system time client system processes burst blue burst red models service time shape parameter number client system time client system processes burst blue burst red models service time shape parameter number client system time client system processes burst blue burst red models service time shape parameter burst processes created feeding corresponding burst arrival process server server respectively 
simulation setup determine parameters realistic arrival service processes characteristic parameter fitting method described section construct corresponding burst arrival process server 
specifically realistic arrival service processes parameters 
arrival process times location parameter shape parameter times location parameter shape parameter inter arrival times times location parameter shape parameter 
service times distribution location parameter shape parameter 
model max error average error clients factor response factor realistic burst burst table comparison realistic process burst burst models 
simulation results simulation results appear 
comparison models maximum number clients system average response time calculation error factors appear table 
error factor dividing value real data result value model estimated result 
simulations clearly indicate burst model ac burst model 
better estimations order magnitude corresponding estimations predicted burst model 
seen burst model represents bursty process burst model 
natural question burst model 
simplicity calculate waiting time distribution queue length distribution buffer overflow probability 
highly im portant ensuring specific levels quality service 
second understanding implementing model requires mathematical background 
model ity easy demonstrated section examples analyze distributed web server 
number client system time client system processes green burst blue burst red models 
chapter discussion research dissertation propose evaluate new stochastic queueing models web servers burst model burst model 
intensive simulations measurements realize requirements models sense clients requests arrivals characteristic exact behavior service distribution 
believe contribute better understanding web servers stochastic queuing system accurate modelling servers 
theoretical studies concerning processes general arrival process gen eral service time distribution heavy tailed inter arrivals service time distri butions proposed 
studies conclude waiting time distribu tion dominated arrival distribution service time distribution depending heaviest tail 
cohen obtain heavy traffic results waiting time single server queue heavy tailed distributions 
heavy traffic means system utilization arrival rate divided service rate approaches 
simulation show due high variability distributions system loaded system utilization larger tens thousands clients simultaneously system 
unfortunately scenarios heavy traffic interesting web context clients drop system 
xia liu analyze asymptotic tail distribution stationary waiting times stationary virtual waiting times single server queue long range dependent arrival process sub exponential service times 
study models characterize long range dependent input processes model fractional gaussian noise fgn model 
models provide important break realistic analytical model web servers 
theoretical value clear apply models evaluating web servers applications policies 
example questions model web server arrivals models relation empirical results regarding arrivals models remain open 
missing comparison models platform form simulation real data analysis web server system accuracy evaluated compared 
related consider queue markovian arrival process phase type service time distribution arrival service processes fitted measurement data actual web servers 
results demonstrate markovian models matrix analytic methods efficiently accurately model web servers 
major differences markovian burst model 
studied web sites consisting multiple hosts incoming re quests routed set front routers 
routers balance load hosts sending traffic loaded ones 
server single host system consider server complete system including routers 
known routers smooth statistical sense arrival process observed hosts 
second assume time serve static web pages measured inside distributed system fits linear function page size 
considering system distribution time serve static web pages heavy tailed correlated files sizes 
third collected arrival times data second granularity results discrete time batch process 
estimations response time queue length obtained batch process significantly overestimate performance measures real system 
address problem apply compensation methodology batch process 
hand web trace provides actual request arrival times 
indicates directions research 
analytical point view challenging directions direction calculate performance parameters burst model queue length distribution buffer overflow probability 
direction replace burst arrival process neq burst arrival process arrival sources equal 
model takes account aspects queueing system web server known today particular non uniform distribution clients domains 
practical point view important perform additional web servers measurements particular commercial sites 
additional traces help standing requirements evaluating new models web servers systems 
re comprehensive measurements performed backbone network sprint advanced technology laboratories 
commercial servers measurements required 
interesting direction apply new knowledge statistical characteristics web servers propose evaluate new load balancing methods task scheduling policies 
bibliography economic impacts unacceptable web site download speeds 
web page 
wolfram com 

performance study dispatching algorithms multi tier web architectures 
acm sigmetrics performance evaluation review 
arlitt williamson 
web server workload characterization search invariants 
proceedings acm sigmetrics conference measurement modeling computer systems pages philadelphia pennsylvania united states may 

gamma function 
holt rinehart winston new york 
translated german butler 
friedman 
replacement policies dis tributed object caching service 
th international symposium distributed objects applications doa irvine california united states oct 
barford bestavros bradley crovella 
changes web client access patterns characteristics caching implications 
world wide web special issue characterization performance evaluation 
barford crovella 
generating representative web workloads net server performance evaluation 
sigmetrics perfor mance joint international conference measurement modeling computer systems pages madison wisconsin united states june 
barford crovella 
measuring web performance wide area 
acm sigmetrics performance evaluation review 
beran 
statistics long memory processes 
chapman hall new york 
berners lee fielding frystyk 
hypertext transfer protocol 
bestavros crovella liu martin 
distributed packet rewriting application scalable server architectures 
proceedings international conference network protocols oct 

analytical experimental evaluation cluster network servers 
world wide web journal dec 
cohen 
queue heavy tailed service time distribution 
ieee journal selected areas communications june 
cohen 
heavy traffic analysis gi queue heavy tailed distributions 
queueing systems jan 
bradley 
boston university computer science proxy trace 
technical report bucs tr cs department boston university september 
smirni 
load balancing policy clustered web servers 
performance evaluation volume pages oct 
sidi 
analysis packet loss processes high speed networks 
ieee transactions information theory volume pages jan 
cohen kaplan 
prefetching means document transfer new approach reducing web latency 
computer networks july 
cohen 
single server queue 
elsevier science publishers dam netherlands 
crovella bestavros :10.1.1.146.2304
self similarity world wide web traffic evidence possible causes 
ieee acm transactions networking dec 
crovella taqqu bestavros 
heavy tailed probability distribu tions world wide web 
practical guide heavy tails statistical techniques application chapter pages 
birkhauser boston 
bestavros 
characteristics www client traces 
technical report bu cs boston university department com puter science 
chung huang 
wang 
ip techniques hosting service cluster machines 
proceedings sixth international world wide web conference apr 
deng 
empirical model www document arrivals access link 
proceedings ieee international communications conference icc pages vancouver canada june 

der laplace transformation 
birkhauser verlag basel 
downey 
structural cause file size distributions 
proceedings ninth international symposium modeling analysis simulation computer telecommunication systems mascots cincinnati oh usa aug 
appeared sigmetrics poster 
erramilli narayan willinger 
experimental queueing analysis long range dependent packet traffic 
ieee acm transactions networking 
moon lyles cotton khan moll seely diot 
packet level traffic measurements sprint ip backbone 
ieee network nov 
greiner 
importance power tail distribu tions modeling queueing systems 
operations research mar 
harchol balter schroeder bansal agrawal 
size schedul ing improve web performance 
acm transactions computer systems tocs 
keenan 
statistical inference fam distributions brief survey volume 
statistical distributions scientific patil 
eds kluwer boston 
iyengar zhang 
analysis characterization large scale web server access patterns performance 
world wide web 
kant won 
server capacity planning web traffic workload 
ieee transaction knowledge data engineering oct 
leland taqqu willinger wilson 
self similar nature ethernet traffic 
ieee acm transactions networking feb 
leland wilson 
high time resolution measurement analysis lan traffic implications lan interconnection 
proceedings ieee infocom pages bal harbour florida usa apr 

queueing theory linear algebraic approach 
mcmillan com new york 
mandelbrot 
fractal geometry nature 
freeman new york 
iannaccone bhattacharyya chuah diot 
characterization failures ip backbone 
ieee infocom pages hong kong mar 
kandlur 
performance issues www servers 
ieee acm transactions networking feb 
avail able www orie cornell edu html 

matrix geometric solutions stochastic models algorithmic approach 
johns hopkins university press 
attiya 
evaluating web server performance ex tension burst model 
technical report cs department computer science technion 
attiya 
distribution file transmission duration web 
international journal communication systems 
attiya 
evaluating self similar processes modeling web servers 
international symposium performance evaluation com puter telecommunication systems pages ca usa july 
attiya 
burst model heavy tail service time distribution 
th ieee international symposium modeling analysis simulation computer telecommunication systems mascots pages netherlands october 
park kim crovella 
effect traffic self similarity net performance 
proceedings spie performance control network systems volume pages nov 
paxson 
experiences internet traffic measurement analysis mar 
lecture 
paxson floyd 
wide area traffic failure poisson modeling 
acm sigcomm symposium communications architectures proto cols pages 
smirni 
efficient fitting long tailed data sets phase type distributions 
performance evaluation 

yu liu zhang 
matrix analytic anal ysis map ph queue fitted web server data 
appears book matrix analytic methods theory applications taylor editors world scientific adelaide australia july 
ross 
probability models sixth edition 
academic press san diego ca 
schwefel 
impact aggregated self similar traffic delay stationary queueing models 
performance evaluation volume pages 
yao zhang 
web traffic modeling server formance analysis 
proceedings ieee conference decision control cdc 
sidi 
modeling analysis power tail distributions classical teletraffic methods 
queueing systems volume pages nov 
willinger paxson taqqu 
self similarity heavy tails struc tural modeling network traffic 
appears book practical guide heavy tails statistical techniques application adler feldman taqqu editors birkhauser boston 
willinger taqqu sherman wilson 
selfsimilarity high variability statistical analysis ethernet lan traffic source level 
acm sigcomm symposium communications architectures proto cols pages 
xia liu 
queueing systems long range dependent input pro cess subexponential service times 
proceedings acm sig metrics international conference measurement modeling computer systems pages 
acm press 
xia liu zhang 
traffic mod eling performance analysis commercial web sites 
acm sigmetrics performance evaluation review 
zipf 
human behavior principle effort 
addison wesley cambridge 
