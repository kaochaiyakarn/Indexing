password security case history robert morris ken thompson describes history design password security scheme remotely accessed time sharing system 
design result countering observed attempts penetrate system 
result compromise extreme security ease 
password security unix time sharing system provided collection programs elaborate strange design outgrowth years experience earlier versions 
help develop secure system continuing competition devise new ways attack security system bad guy time devise new techniques resist new attacks guy 
competition vein competition long standing manufacturers armor plate armor piercing shells 
reason description follows trace history password system simply presenting program current state 
way reasons design clearer asthe design understood understanding potential attacks 
underlying goal provide password security minimal inconvenience users system 
example want run completely open system passwords passwords option individual users able require users passwords gain high degree security penetration system unauthorized users 
password system able prevent access system unauthorized users prevent logging prevent users logged doing things authorized 
called super user password example especially critical super user sorts permissions essentially unlimited access system resources 
password security course component system security essential component 
experience shown attempts penetrate remote access systems sophisticated 
remote access systems vulnerable penetration outsiders threats remote terminal communications link computer 
security encryption algorithm interesting intellectual mathematical problem tiny facet large problem 
practice physical security computer communications security communications link physical control computer loom far important issues 
important control actions ex employees direct control may intimate knowledge system resources methods access 
system security involves realistic evaluation risks deliberate attacks casual unauthorized access accidental disclosure 
unix trademark bell laboratories 
smm password security case history prologue unix system implemented password file contained actual passwords users reason password file heavily protected read written 
historically technique remote access systems completely unsatisfactory reasons 
technique excessively vulnerable lapses security 
temporary loss protection occur password file edited modified 
way prevent making copies privileged users 
experience earlier remote access systems showed lapses occur frequency 
memorable occasion occurred early system administrator ctss system mit editing password file system administrator editing daily message printed terminal login 
due software design error temporary editor files users interchanged time password file printed terminal logged 
lapse security discovered password changed usually simultaneously administrative cost 
great matter far serious high probability lapses going unnoticed system administrators 
security unauthorized disclosure passwords analysis impossible system example contents file system put magnetic tape backup physical access tape read restriction 
programs get information various kinds users system programs general special permission read password file 
information password file distributed replicated number files updated user added dropped system 
scheme obvious solution arrange passwords appear system difficult decide done encrypting user password putting encrypted form password file throwing away original password typed 
user tries log system password types encrypted compared encrypted version password file 
match login attempt accepted 
scheme described ff 
advisable devise system password file password program needed protected read 
needed implement ideas find means encryption difficult invert encryption program available 
standard encryption methods past encryption messages easy invert 
encryption program happened exist system time simulated cipher machine army world war ii 
turned program usable key ciphers produced program trivial invert 
difficult matter find key cleartext input output program 
password text encrypted key constant encrypted key 
encrypted result entered password file 
attacks approach suppose bad guy available text password encryption program complete password file 
suppose substantial computing capacity disposal 
obvious approach penetrating password mechanism attempt find general method inverting encryption algorithm 
possibly done successful results come light despite substantial efforts extending period years 
results proved useful penetrating systems 
approach penetration simply keep trying potential passwords succeeds general cryptanalytic approach called key search 
human beings strong password security case history smm tendency people choose relatively short simple passwords remember 
free choice people choose passwords restricted character set lower case letters choose words names 
human habit key search job great deal easier 
critical factor involved key search amount time needed encrypt potential password check result entry password file 
running time encrypt trial password check result turned approximately milliseconds pdp encryption algorithm recoded maximum speed 
takes essentially time test encrypted trial password passwords entire password file matter collection encrypted passwords collected installations 
want check passwords length consist entirely lower case letters number passwords password consists printable characters number possible passwords somewhat 
standard system character erase line kill characters example prime candidates 
immediately estimate running time test password length characters chosen set characters 
table gives estimates running time required pdp test possible character strings length chosen various sets characters lower case letters lower case letters plus digits alphanumeric characters printable ascii characters ascii characters 
lower case lower case letters alphanumeric printable ascii letters digits characters characters characters msec 
msec 
msec 
msec 
msec 
msec 
sec 
sec 
sec 
sec 
sec 
sec 
min 
min 
min 
min 
min 
hrs 
hrs 
hrs 
hrs 
hrs 
hrs 
hrs 
conclude great matter access pdp lower case alphabetic strings length access machine say weekends test strings characters length 
program collection actual encrypted passwords substantial fraction passwords 
profitable approach bad guy word list dictionary list names 
example large commercial dictionary contains words words checked minutes 
noticeable fraction collection passwords 
improvements extensions determined bad guy 
things try dictionary words spelled backwards 
list names best obtained mailing list 
names street names city names 
initial upper case letters 
valid license plate numbers state 
takes hours new jersey 
room numbers social security numbers telephone numbers 
authors conducted experiments try determine typical users habits choice passwords constraint put choice 
results disappointing bad guy 
collection passwords gathered users long period time single ascii character strings ascii characters strings ascii characters string smm password security case history letters upper case lower case letters lower case 
additional passwords appeared various available dictionaries name lists 
sample passwords fell classes 
course considerable overlap dictionary results character string searches 
dictionary search required minutes run produced third passwords 
users urged forced longer passwords passwords chosen larger character set system choose passwords users 
entertaining instructive example attempt installation force users predictable passwords 
users choose passwords system supplied 
supplied passwords characters long taken character set consisting lowercase letters digits 
generated pseudo random number generator starting values 
time required search pdp character strings length character alphabet years 
unfortunately need looked number possible outputs random number generator 
bad guy fact generate test strings system generated passwords total minute machine time 
improvements approach 
slower encryption obviously algorithm far fast 
announcement des encryption algorithm national bureau standards timely fortunate 
des design hard invert equally valuable fact extremely slow implemented software 
des implemented way characters user password key des algorithm encrypt constant 
constant zero moment easily accessible installation dependent 
des algorithm iterated times resulting bits string printable characters 

predictable passwords password entry program modified urge user obscure passwords 
user enters alphabetic password upper case lower case shorter characters password larger character set shorter characters program asks enter longer password 
reduces efficacy key search 
improvements exceedingly difficult find individual password 
user warned risks cooperates safe 
hand prevented spouse name wants 

passwords key search technique turn passwords large collection passwords wise task difficult possible 
password entered password program obtains bit random number reading real time clock appends password typed user 
concatenated string encrypted bit random quantity called salt bit result encryption entered password file 
user logs system bit quantity extracted password file appended typed password 
encrypted result required remaining bits password file 
modification increase task finding individual password security case history smm password starting scratch testing character string large collection encrypted passwords multiplied 
reason encrypted versions password picked random system 
modification bad guy spend days computer time trying find password system hundreds passwords find 
important fact impractical prepare encrypted dictionary advance 
encrypted dictionary crack new passwords milliseconds appear 
inadvertent side effect modification 
nearly impossible find person passwords systems password know 

threat des chip chips perform des encryption commercially available fast 
chip speeds process password hunting orders magnitude 
possibility internal tables des algorithm particular called table changed way depends bit random number 
table wired des chip commercial chip 
obviously bad guy chip designed built cost 

subtle point login successfully unix system necessary dialing type valid user name correct password user name 
poor design write login command way tells typed invalid user name 
response invalid name identical valid name 
slow encryption algorithm implemented encryption done user name valid encrypted password compare supplied password 
result response delayed half second name valid immediate invalid 
bad guy find particular user name valid 
routine modified encryption case 
issue password security unix probably better systems 
encrypted passwords appears reasonably secure absence serious attention experts field 
worth effort conceal encrypted passwords 
unix systems called external security code typed dialing system logging 
code changed periodically old password prevented 
security procedure attempts deny access unauthorized persons wise keep record successful unsuccessful attempts get secured resource 
just hours visitor computer center normally identify record usually kept entry 
just wise precaution keep record attempts log remote access time sharing system certainly unsuccessful attempts 
bad guys fall spectrum ordinary access system goal find particular password usually super user wishes collect password information possible systems possible 
reported serves frustrate type experience indicates type bad guy successful 
recognize time sharing system operate hostile environment 
attempt hide security aspects operating system playing customary believe game weaknesses system discussed matter apparent 
advertised smm password security case history password algorithm invited attack belief approach minimize trouble 
approach successful 
ritchie thompson unix time sharing system 
comm 
acm july pp 

proposed federal information processing data encryption standard 
federal register fr march wilkes time sharing computer systems 
american elsevier new york 
patent number 
