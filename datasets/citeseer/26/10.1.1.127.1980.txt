experiences designing building multi hop wireless ad hoc network testbed david maltz josh broch david johnson march cmu cs school computer science carnegie mellon university pittsburgh pa describe experiences building multi hop wireless ad hoc network nodes driving site 
node runs dynamic source routing dsr protocol interfaces seamlessly existing internet infrastructure mobile ip protocol 
issues discussed range logistical management issues protocol design performance analysis issues 
early characterization testbed performance describe significant new challenge ad hoc network routing protocols 
major goal share experiences belief may useful attempt build ad hoc network testbeds 
supported part national science foundation nsf career award ncr air force materiel command afmc darpa contract number foundation special purpose science engineering 
david maltz supported intel graduate fellowship 
views contained authors interpreted necessarily representing official policies endorsements express implied nsf afmc darpa foundation intel carnegie mellon university government 
keywords multi hop ad hoc networks dynamic source routing dsr mobile wireless network testbed contents goals testbed dsr protocol overview testbed overview design decisions network configuration node equipment protocol implementation packet format outgoing packets incoming packets interfacing user level processes mobile ip implementation features integration internet acknowledgment retransmission mechanism managing retransmission timer prioritizing packets logging support utilities global positioning system information network monitoring fault diagnosis tcpdump signal strength hardening network tools packet state tracing preliminary testing course evaluation initial node testing characterizing course equipment ping test results quality communication verifying dsr retransmission algorithm variability environment inter packet spacing echo reply packets route length tcp test results single hop tcp experiments hop tcp experiments general lessons learned months august february designed implemented full scale physical testbed enable evaluation ad hoc network performance field 
week february week march included demonstrations testbed number sponsors partners including lucent technologies bell atlantic darpa 
process exciting encountered numerous difficulties ranging technical mundane 
describes approach obstacles encountered current solutions 
problems arose issues described appear painfully obvious identified 
interest multi hop ad hoc networks continues grow groups attempt build deploy similar testbeds networks hope experiences enable avoid difficulties faced 
past years research effort focused design specification routing protocols multi ad hoc networks 
proposals protocols currently consideration mobile ad hoc networks manet working group internet engineering task force ietf 
large ad hoc networks deployed testbeds created profile performance protocols real world 
written design study goal identifying series issues consider designing multi hop ad hoc network testbeds 
particular identify tools wrote assist debugging validation analysis testbed 
argue tool called critical success implemented testbeds 
explain rationale cost benefits tools including changes standard tools desired testbed environment 
overview architected dynamic source routing dsr protocol existing bsd unix network stack 
hope prove useful protocol architects wish implement demand routing protocols traditional network stacks 
explain implementation validation network layer hop hop scheme including novel heuristic setting retransmission timer 
describe methodology perform initial characterization propagation environment testbed site initial testing protocols 
performance analysis testbed dsr protocol progress 
quantitative numbers reported sections show testbed working validate dsr implementation behaving reasonably 
point interesting consequences outdoor wireless environment 
designers testbeds choose different decisions list issues contained valuable identifying tasks requiring attention staff assignments adequately scheduled 
place testbed context section describes goals motivated testbed 
goals testbed designing testbed primary goal build platform enable basic research behavior real implementation ad hoc network protocols operating truly mobile nodes outdoor environment 
wanted testbed operate outdoor setting currently envisioned applications ad hoc networks operate outdoors environment inherently unpredictable building environment 
changes weather motion cars pedestrians presence buildings hills effect propagation radio signals 
factors constitute challenges deployed ad hoc network face wanted experience testbed 
development indoor ad hoc network testbed subject study 
goal testbed push protocols point nearly broke subjecting higher rates topology change previous testbeds explored 
vehicles radios site testbed forced protocols adapt environment links nodes changed status seconds 
ignoring additional factor packet loss due wireless errors average network topology changed seconds 
prior efforts build ad hoc network testbeds large experiments including project wings project task force xxi bbn 
little published specifics testbeds available literature different terms radio technology network design 
dsr protocol overview ad hoc network routing protocol testbed dynamic source routing protocol dsr 
shows basic operation dsr protocol consists mechanisms route discovery route maintenance 
route discovery mechanism node wishing send packet destination obtains source route perform route discovery source node locally broadcasts route request packet time live field ip header initialized 
type route request called non propagating route request allows node inexpensively query route caches neighbors route destination 
broadcast route request data sent data sent dead route error moves away forwarding fails unicast route reply data received basic operation dsr protocol showing building source route propagation route request source route return route reply forwarding data sending route error forwarding failure 
hop indicated address parentheses 
reply returned nominal hop round trip time node transmits propagating route request flooded network controlled manner answered route reply packet destination node node knows route destination 
reduce cost route discovery node maintains cache source routes learned overheard aggressively uses limit frequency propagation route requests 
route maintenance mechanism packet sender detects network topology changed longer known route destination nodes listed route moved range 
route maintenance indicates source route broken notified route error packet 
sender attempt route cache invoke route discovery find new route 
lucent technologies wavelan radios testbed provide link layer acknowledgment transmitted packet successfully received route maintenance implementation driven dsr acknowledgment retransmission mechanism described section 
testbed overview shows logical view ad hoc network testbed 
actual ad hoc network comprised moving nodes labeled stationary nodes labeled communicate mhz wavelan radios 
ad hoc network connected field office ghz pointto point wireless link distance point point link interfere radio interfaces individual ad hoc network nodes 
testbed ms timeout non requests 
endsystem roving node rn ba bell atlantic cdpd service meters gps station miles rn wan ha central office ad hoc network visualizer mobile ip home agent field office road trucks rs mhz wavelan endsystem wireless ghz point point link gps station logical overview testbed network 
field office river meters gps station map test bed site showing endpoint locations typical course driven nodes 
field office router connects ad hoc network ip subnet field office back central office wide area network 
visualizer node monitor status ad hoc network section gps station rs located roof field office responsible sending differential gps corrections nodes ad hoc network 
central office home roving node rn drives central office ad hoc network 
node ha provides mobile ip home agent services roving node able leave central office maintain connectivity nodes testbed 
typical experiment call run drivers moving nodes follow course shown speeds varying km hr miles hour 
road open general vehicle traffic signs speed node varies time just real deployed network 
chose configuration testbed similar variety possible military commercial scenarios 
example military scenario central office represent tactical operations center field office battlefield command post dump moving vehicles convoy trucks carrying ammunition firing position 
civil disaster relief scenario offices represent regional local command centers trucks ambulances water moving disaster site staging treatment area 
cases roving node rn represent supervisor sent inspect scene service truck sent repair nodes node making ad hoc network improved connectivity wanders area 
design decisions choosing nodes testbed include nodes create keeping equipment personnel requirements operating nodes small feasible 
geographical size testbed turn set balance number nodes available excluding roving node rn range radios nodes approximately 
increasing range radios allow run testbed varied terrain require nodes move faster maintain rate topology change 
radios chose mount nodes inside cars order move range reasonable lengths time 
derived benefits solution constraints outlined 
working outdoors allowed gps global positioning system accurately track position nodes critically helpful characterizing network performance 
advantage keeping range radios small working outdoors possibility climbing high point entire network seen time 
importance visualizing entire network especially early stages development network working properly 
network configuration communication ad hoc network nodes routed dynamic source routing dsr protocol 
dsr protocol operates ip layer network stack osi layer permits interoperation different physical interfaces dsr conceptually operates virtual link layer just normal ip layer 
nodes assigned ip addresses single subnet acting gateway internet ad hoc subnet 
manually configured dsr protocol communication network interface mhz wavelan link normal ip routing interface ghz point point link default router 
packets nodes internet destined addresses ad hoc subnet routed normal means statically configured route directing network interface ad hoc network 
forwarded ad hoc network dsr takes care routing packets final destination requires multiple hops inside ad hoc network 
explained section nodes ad hoc subnet configured default router nodes dsr ad hoc network send packets nodes ad hoc network dsr protocol automatically routes packets nearest gateway case forwarded internet 
gateway node provides mobile ip foreign agent services mobile ip nodes visit ad hoc network 
roving node rn available methods connecting internet uses mobile ip choose best method drives city 
rn normally range wavelan network central office wavelan network interface carries ip address belonging central office subnet 
rn roving away central office uses mobile ip register care address home agent central office subnet 
rn care address registered home agent home agent intercepts packets destined rn tunnels care address encapsulation 
rn primary wavelan interface range wavelan radios uses cdpd modem connect bell atlantic mobile cdpd service registers cdpd ip address home agent 
rn realizes range dsr network dsr protocol communicate directly nodes ad hoc network 
enable packets nodes outside dsr network reach rn registers home agent foreign agent just normal mobile ip 
receives tunneled packet checks see packet destined node registered visiting ad hoc network 
routes packet visiting node dsr 
node equipment nodes implemented car carrying ibm thinkpad notebook 
mounted home built rack carried front passenger seat car housed gps unit vac power converter power equipment 
tightening bolts hold rack blister producing experience shown worthwhile investment prevent equipment cars eliminate risk cable connections coming undone 
moving nodes carry mhz lucent wavelan radio connected db omni directional antenna 
antennas mounted rack roof cars feet ground 
wavelan radio direct sequence spread spectrum device raw capacity mb nominal transmission range 
wavelan uses lucent designed csma ca mac include link layer retransmissions acknowledgments 
mechanisms ieee rts cts avoid hidden terminal issues 
chose wavelan radio high bandwidth mb support audio data traffic 
additionally long history working radios indoor outdoor environments spectrum available jack external antenna 
enable moving nodes determine location carry gps receiver gps antenna mounted roof rack alongside wavelan antenna 
gps receiver capable calculating position times provided correction information gps station calculate position cm depending frequency latency correction information provided 
receiving correction information gps receiver operates differential mode dgps calculates positions accuracy 
receiving correction information consistently second gps receiver operates real time kinematic mode calculates positions approximately cm accuracy 
testbed gps station located field office correction information generated sent nodes stream broadcast packets multi hop ad hoc network 
systems shown located opposite ends course traveled mobile nodes implemented laptops identical moving nodes 
location conveniently test connectivity diameter ad hoc network 
carries single mhz wavelan radio db omni directional antenna identical moving nodes 
contrast serves router ad hoc network rest internet 
communicates nodes ad hoc network mhz wavelan radio attached db antenna linked router field office ghz wavelan radio connected db antenna 
opposite course field office demonstrate ad hoc network close wired infrastructure 
mhz wavelan radio field office traffic ad hoc network travel 
time began designing testbed lucent ieee product readily available freebsd device drivers supporting hardware cards worked basestation 
product viable choice testbed 
ip header protocol hop hop options hop hop options header protocol dsr routing dsr routing header protocol tcp tcp header tcp data layout headers typical packet dsr network 
roving node rn carried mhz wavelan radio join ad hoc network communicating nodes 
carried cellular digital packet data cdpd modem wide area digital packet service kb provided bell atlantic mobile systems 
nodes central field offices intel pentium ii pcs 
nodes ran freebsd unix system modified dsr mobile ip kernel extensions 
protocol implementation earliest implementation dsr began extension address resolution protocol arp 
running ethernet frame dsr source route inserted ethernet header ip header 
solution simple span multiple interface types 
desire support heterogeneous networks pushed implementation ip layer 
need combine multiple types dsr information packet desire piggyback dsr information data packets led packet format ipv extension header scheme 
packet format control messages dsr protocol encoded series extension headers lie ipv header normal ipv payload icmp udp tcp header data 
enables control messages piggybacked ordinary data packets available sent separate control packets 
shows layout headers typical packet 
ipv types extension headers hop hop options processed node receives packet carry dsr route route errors 
hop options extension header carry gps option gives physical location packet originator time packet transmitted 
destination options processed node address matches ip destination address packet unicast multicast broadcast address 
headers carry route requests 
dsr send buffer buffer dsr options processing route requests replies errors source route forwarding route cache dsr output dsr xmit tcp udp ip wavelan dsr wl user space kernel space cdpd route table cdpd kernel space physical devices internal architecture node showing dsr components mobile ip components 
routing header processed node address equal ip destination address packet 
carries source route describing path packet take network 
caveat explained extension header scheme elegant way transport routing information demand routing protocol recommend designers 
extension header processing framework inria ipv distribution 
code modular easy passing chain comprise packet frequently read chain find header bit information packet 
implement scratch pass chain structure containing critical information packet hop ack required enabling code process packet having find read extension header multiple times 
outgoing packets shows architecture node ad hoc network including dsr mobile ip kernel components user level mobile ip daemon user level logging utilities 
code implementing dsr protocol resides inside kernel module straddles ip layer 
conceptually dsr thought virtual interface dsr residing ip layer 
groups virtual interfaces hide mobility normal network stack dsr accepts packets normal ip stack just interface uses mechanisms arrange delivery actual physical interfaces 
packets originated node transport layer enter ip layer normal routing table lookup determine interface sent 
nodes dsr exclusively default route directing packets dsr interface 
packet passed output routine dsr checks route cache route 
route packet inserted send buffer route discovery invoked packet destination 
route destination route cache packet passed dsr xmit routine 
dsr xmit code responsible delivering packet hop saves copy packet retransmission buffer handing output queue physical interface 
ms route discovery timer inspects contents send buffer subject rate limiting described dsr internet draft initiates route discovery packets send buffer 
likewise retransmission timer runs ms examining contents retransmission buffer retransmitting packets generating route errors necessary 
radio interfaces inherently broadcast cpus significantly faster link bandwidth simplified implementation eliminating need arp 
packets sent dsr xmit sent mac broadcast destination address nodes receiving packet process 
causes extra processing overhead receiving nodes dsr operates network interface promiscuous receive mode implement optimizations 
explained section needed give packets dsr routing information priority access link 
initial attempts resulted simplistic designs accidentally reordered packets decided cleanest solution implement true multi queue scheme interface output queues 
packets interface outgoing queues ip type service tos bits header 
incoming packets ip module reads packets ip input queue normal ipv rules extension headers dispatches packet appropriate upper layer module value ip protocol field 
packets protocol field indicating dsr header packet sent dsr options processing routines handle dsr extension headers 
involves adding route route reply route cache removing routes cache route errors removing packets retransmission buffer dsr acknowledgments forwarding packets routing header 
packets contain transport layer data processing node handed transport layer 
interfacing user level processes dsr module communicates user level agents node ad hoc network control socket derived bsd concept routing socket 
provided general purpose conduit information exchange user level kernel level modules node concerned node network operation 
example dsr originates data packet places node location dsr headers packet 
information diagnostic purposes testbed comprised node latitude longitude heading speed 
kernel dsr module learns location information user level process called section reads information gps unit writes 
similarly dsr module processes packet node extracts location information headers sends information 
result processes node listening learn known location nodes originating packets 
proved extremely valuable portal invoking test code inside dsr layer viewing results 
mobile ip mobile ip functionality split user space kernel space small module inside kernel user level process 
uses collection network interface controllers monitor status interface gather information home agents foreign agents reachable interface 
decides interface currently best communication uses routing socket manipulate kernel routing table state interface 
implementation features section describes notable features implementation scheme integrating ad hoc networks internet adaptive retransmission timer dsr layer logging support utilities useful working ad hoc network testbed 
integration internet extended mechanisms route discovery route maintenance support communication nodes inside ad hoc network outside greater internet 
node ad hoc network maintains constant identity communicates nodes inside outside network require node chooses single ip address called home address known nodes 
notion home address identical defined mobile ip 
mobile ip node configured home address uses address ip source address packets sends 
route request route 
route reply internet route request node ad hoc network answered foreign agent illustrates node inside ad hoc network discovering route node outside network 
route request targeting propagates eventually received gateway node consults routing table 
believes reachable outside ad hoc network sends proxy reply listing second node route marking packet recognize proxy reply 
target node inside ad hoc network node receive route reply distinguish replies proxy replies prefer direct route sending packets method integrating ad hoc networks internet related issues described detail separate publication 
acknowledgment retransmission mechanism wavelan radios provide link layer reliability implemented hop hop retransmission acknowledgment scheme dsr layer provides feedback necessary drive route maintenance 
packet node originates forwards retransmitted acknowledgment hop received transmission attempts point hop declared unreachable route error sent originator packet 
utilize passive acknowledgments possible meaning packet sender hears hop forward packet accepts evidence packet successfully received hop 
node fails receive passive acknowledgment particular packet transmitted hop retransmits packet sets bit packet header request explicit acknowledgment 
procedure allows receive acknowledgments case wireless link unidirectional explicit take indirect route node requests explicit acknowledgment packet final destination case receive passive acknowledgment number packets retransmission timer ms distribution values dsr retransmission timer runs 
hop node attempted forward packets keeps separate estimate round trip time rtt hop 
rtt retransmission timer packet sent hop 
simulation studies acknowledgment scheme imep suggested adaptive retransmission timer needed accommodate competition shared link nearby nodes 
keeping tcp rtt estimation algorithm adapt rtt hop 
shows number times packet sent value retransmission timer course runs 
measurements particular data set values ms show 
approximately packets transmitted minimum retransmission timer value ms packets retransmission timer adjusted values ms ms wide range indicates adaptive retransmission scheme probably required performance acknowledgments implemented layer link layer 
ieee example require adaptive retransmission timer acknowledgment scheduled atomic part exchange single data packet time transmission data packet receipt acknowledgment effected number nodes attempting acquire media 
performing retransmissions dsr layer necessary perform duplicate detection acknowledgment lost retransmitted packet needlessly forwarded network multiple times 
duplicate detection algorithm implementation specified node drop packet identical copy packet send buffer retransmission buffer 
simple form duplicate prevention sufficient maintaining history seen packets necessary 
order limit load cpu set granularity retransmission timer serviced ms value chosen observed retransmission timer values average hop rtt ms managing retransmission timer described section implemented hop hop acknowledgment retransmission scheme dsr layer purpose performing route maintenance 
large numbers packets lost retransmitted needlessly retransmission timer adapt quickly periods network congestion 
times network congestion time packet sent received increases due need packet compete media 
simple method reacting increasing congestion 
retransmission timer expirations treated rtt sample twice current rtt value retransmission timer tends diverge remain maximum value congestion 
developed successful retransmission timer algorithm including heuristic estimate level local congestion retransmission timer react quickly changes 
simplest ways node measure congestion network look length network interface queue 
specifically packets interface queue meaning congestion starting occur increase value retransmission timer ms packet queue 
heuristic allows retransmission timer increase quickly periods congestion return just quickly computed value congestion dissipates 
result simple experiment demonstrating idea shown 
represents experiment node sent icmp echo request packets node rate packets second 
interface queue node alternately disabled serviced device driver seconds enabled seconds order simulate congestion 
leftmost line sequence plot represents time echo request specified sequence number sent center line shifted second clarity indicates icmp sequence numbers retransmitted dsr layer node right line shifted seconds clarity indicates node received corresponding echo reply packets icmp sequence number 
shows icmp sequence number plot case additional heuristics adapt retransmission timer 
shows plot case queue length taken account discussed 
comparing figures total retransmissions case queue length icmp sequence number retransmission timer ms retransmissions time original icmp request icmp sequence plot heuristics time dsr retransmission timer heuristics icmp sequence number retransmission timer ms retransmissions time original icmp request icmp sequence plot queue length heuristic time dsr retransmission timer queue length heuristic retransmission behavior heuristics adapt congestion 
time base retransmissions replies figures shifted clarity 
considered retransmissions occur case queue length help adapt retransmission timer 
figures show value retransmission timer packet time sent dsr layer order illustrate reason difference number retransmissions 
queue length heuristic set retransmission timer maximum value retransmission timer ms 
queue length accounted retransmission timer backs quickly queue begins fill attaining maximum value ms queue empties quickly returns normal measured value 
behavior results significantly fewer retransmissions dsr layer periods transient congestion 
prioritizing packets critical packets generated routing protocol propagate network timely fashion 
example route requests significantly delayed prevent data transmitted 
similarly delaying transmission route error allows bad state remain network increasing packet loss delays transmitting network layer acknowledgments may lead excessive packet retransmissions network 
reason dsr packets requests replies errors acknowledgments higher priority normal data packets 
additionally data packets retransmitted dsr layer treated high priority packets failure get packet may result upper layer protocol retransmitting packet 
noted competitive retransmissions early testing quantify impact changing priority retransmissions described compensate 
enable priority scheduling packets transmissions implemented multi level queue scheme packets placed different queues priority 
described section priorities assigned packets type service tos field ip header 
currently need levels priority low delay normal priority 
highest priority queue completely serviced packets highest transmitted 
potential starvation exists scheduling algorithm practice starvation occur 
logging support utilities node testbed runs series user level logging monitoring utilities 
context testbed output utilities serves basis post run analysis experiment 
deployed network information valuable directly user 
global positioning system information node network gps receiver runs program called reads current position information gps receiver serial cable available processes node local socket section 
node originates packet dsr code includes node current location header packet packet recipients learn location sender 
logging gps information analyze behavior dsr run example recreate run testbed simulation 
described section gps receivers continually supplied date corrections order obtain highest degree accuracy gps position information 
correction information generated second gps station located field office delivered gps receivers minimum delay order useful 
typical gps deployments long range broadcast radio distribute corrections testbed ad hoc network distribute corrections 
correction information generated station proprietary binary format encapsulated ip packets transmitted point point ghz wireless link 
corrections multicast ad hoc network piggybacking data route request targeted multicast address 
correction packets propagate hop hop ad hoc network process node loads correction information gps receiver 
experiments routing protocol delivered correction packets low delay gps receivers typically operated highest accuracy mode position fixes accuracy cm 
network monitoring fault diagnosis order gather real time statistics node performance status number packets forwarded number route requests sent node runs process called position communication tracking daemon 
purpose enable real time monitoring visualization network runs enable replayed visualization run concludes 
create permanent record run logs data local file facilitate real time diagnosis unicasts information collects ad hoc network visualizer field office 
visualizer application written tcl tk displays map site showing current location vehicles gps information reported 
clicking node brings event logs node allows user open strip chart plots information error rates packet forwarding rates recorded node 
shows screen shot visualizer application replay testbed run 
main window shows location nodes information reported 
clock top right shows elapsed time seconds run began 
bottom boxes node show quality position fix provide gps nodes show real time kinematic float time update received node 
windows side show strip chart recordings number packets second handled nodes run function elapsed time 
reading top bottom show 
number dsr packets second forwarded node labeled 
indicates total traffic ad hoc network 

number tcp packets second received transport layer node labeled 

number udp packets second sent node labeled synthetic voice traffic generator running 
visualizer serves major roles testbed 
packets traverse ad hoc network simply receiving updates indicates basic network functioning 
network fail log information local disk recovered run 
second visualizer proven crucial explaining happening network 
course long turns way see 
bird eye view network hard people grasp seeing 
network sufficient complexity designers operators needed screen shot viz network monitoring fault diagnosis tool 
main window shows location nodes information reported 
windows side show number packets second forwarded node received tcp node sent udp node respectively 
network management console order look subtle interactions diagnose problems fly 
tcpdump signal strength standard run node uses tcpdump record local disk packets received run 
analysis packet traces single best source information understanding activity network 
caveat find mhz pentium laptops connected link maximum bandwidth mb tcpdump attempted capture entire packet link mtu bursts disk activity large streams received packets cause machines delay sending acknowledgment packets past expiration retransmission timer 
resulting retransmissions halved goodput measured tcp cbr transfers experiments ran lab tcp goodput dropped mb mb run bytes 
saving bytes data packet adversely affect tcp goodput 
packet received wavelan cards report signal strength signal quality received packet useful characterizing quality wireless link 
information associated received packet originally convenient way information available monitoring applications append signal strength information incoming packet wavelan device driver tapped packet berkeley packet filter bpf 
need record metrics packet originally motivated record entire packet 
able capture signal strength information overloading machines extending bpf header struct bpf hdr generic interface metrics field signal information tapped received packet regardless specified 
hardening network tools working standard utilities netperf frequently exited crashed aborted 
specifically network utilities terminate receiving error system calls write sendto 
dynamic unpredictable environment ad hoc network temporary partitions unavoidable programs needed altered receipt icmp destination unreachable message result fatal error 
generally handled errors putting process sleep seconds clearing error socket allowing retry previous operation 
packet state tracing order understand packet traces recorded useful access internal state variables protocols 
tcp traffic generator program dbs creates offered load utilizes small kernel module records contents tcp protocol control block time packet sent received 
dbs saves collected control blocks local file 
likewise verify parts dsr implementation retransmission timers implemented logging device akin called dev dsr wrote internal state variables time sent packet 
user level program read binary records kernel logged variables disk analysis 
syslog appropriate task logging efficient avoid system 
believe converting log records printable strings critical code paths kernel costly operation 
preliminary testing course evaluation initial node testing initial testing implementation dsr hampered fact intended radios range testing implementation meant repeatedly moving nodes range 
having services school track team available physically moving nodes order cause network topology changes debugging implementation intractable problem 
enable test implementation quickly wide range topologies movement patterns developed simple ad hoc network emulation system 
placed physical laptops running actual dsr code lab connected actual radio 
machine physically direct range emulate desired topology simply preventing network stack machine processing packets able receive nodes deployed field separated varying distances 
achieve implemented packet killer called physical interface map display hockey showing positions trajectory nodes 
trajectory changed click drag grey knots 
network layer input queue 
checks mac source address received packet list prohibited addresses 
packets source addresses list silently dropped 
emulating motion nodes reduces problem loading proper list prohibited addresses appropriate times 
control packet killer trace file consisting mac source address lists times lists loaded 
trace files created hockey graphical scenario creation tool draw paths nodes move 
ad hockey tool generates trace files trivial propagation model nodes falling fixed radio range communicate falling outside range 
emulation runs ad hockey displays positions nodes move allowing testers correlate node positions protocol behaviors 
emulation system packet killer controlled trace file similar concept network trace replay system existing emulation systems available time expressive power emulate multi hop ad hoc network 
minimum packet killer able express notion node receive packets simultaneously independently unable receive packets convenient emulation system provide tools easily generating packet killer control files 
testing ad hoc networks topology changes driven movement having tool allowed draw motions nodes extremely useful 
claim performance measurements emulated network created way approximate measurements deployed network fact verified results obtained lab comparable collected field 
packet killer trace generator emulate variability door wireless environment nodes collision domain hidden terminal problems 
critically important tool early stages developing debugging ad hoc networking code exercise aspects protocol lab having spend countless hours running campus create physical topology change 
emulation system created scenarios individually test protocol reactions topology change including route discovery route maintenance retransmission timers 
allowed perform regression testing implementation find bugs appeared tens hours running possibly ask human drivers keep driving long 
developing protocol development tool begun working develop validate systems support true ad hoc network emulation accurate performance analysis protocols systems running top ad hoc network 
characterizing course equipment part conducting initial survey site particularly helpful obtain rough characterization site propagation environment 
cars drive course km hr miles hour trailing car transmitting byte packets lead car times second 
experiment cars laps course total driving time seconds 
conducted experiments cars separated seconds distance separation approximately respectively 
experiments node recorded packets heard radio tcpdump 
packet trace differencing tool developed find packets sent trailing car received lead car 
experiments transmission losses occurred regular bursts synchronized second lap time 
example depicts losses function time second separation experiment line drawn total losses 
plotted map site location worst turned surprising 
shows mark mark time period loss greater line 
mark depicts point trailing car located transmitted packets lost transmission mark depicts point lead car located failed receive packets 
loss bursts occurred nodes part course clear line sight 
elevation change portion course parking lots south side road empty test 
rule possibility drivers merely speeding increasing distance number dropped packets meters gps station time secs times packets lost run 
horizontal line indicates total number packets 
nodes maintained separation 
field office river location lost packets sent location intended receiver meters gps station location sending node receiving node packet loss occurred 
nodes maintained separation 
nodes reran experiment separation seconds nodes 
results depicted show spacing cars half radios nominal range significant loss bursts front field office building 
current hypothesis radios suffering multipath reflection flat fronts buildings particular large building field office 
ping test results initial measurement ad hoc network ability route packets multiple hops nodes conducted test moving nodes drove course shown speed km hr miles meters gps station field office river location lost packets sent location intended receiver meters gps station location sending node receiving node packet loss occurred 
nodes maintained separation 
hour maintaining separation approximately offered traffic load network consisting solely byte icmp echo request packets directed stationary node sent ms approximately seconds 
wireless transmission range cars continue loop points sequence hops taken packet variable 
including ip header bytes wavelan header bytes gps information piggybacked packet bytes minimum size packets bytes 
explained sections ping tests served variety purposes 
quality communication test originated unique icmp echo request packets 
returned icmp echo reply packets loss rate 
number gives rough approximation type loss rate applications experience trying operating ad hoc network 
high loss rate systems cope examined network dynamics test carefully determine caused losses 
due setup test alternated moving nodes hop route 
table shows raw loss rate single hop node moving nodes excluding packet retransmissions dsr layer 
numbers characterize error rate wireless link show link loss rate absence retransmissions dsr 
contrast table ii shows loss rate links moving nodes including dsr retransmissions 
significant reduction loss rate table packet loss rate experience node hop node counting number unique echo requests transmitted 
packets received column include retransmissions dsr layer 
packets sent packets recv loss rate total table ii packet loss rate experience node hop node counting number unique echo requests transmitted 
packets received column includes retransmissions dsr layer 
packets sent packets recv loss rate total link shows dsr retransmission scheme serving purpose 
verifying dsr retransmission algorithm addition verifying dsr retransmissions improving link loss rate perceived applications needed verify dsr retransmitting excessively burdening network 
second ping test transmitted echo request packets 
mentioned section packets unique sequence numbers indicating packets total number transmissions retransmissions duplicates generated dsr layer 
retransmitted duplicate packets packets removed retransmission buffer recycled dsr layer packet hop destination unreachable 
order explain remaining retransmissions attempted verify hop node number retransmissions satisfied criteria captures notion packets retransmitted acknowledged total number retransmissions number unique packets number passive acknowledgments received number retransmissions received hop node number explicit acknowledgments trans table iii number echo requests transmitted node hop node number passive acknowledgments received hop node 
expected number retransmissions difference column column shown third column 
numbers include retransmissions dsr layer 
packets sent passive acks expected total hop node received 
purposes analysis rewrite equation table iii evaluates right half equation shows echo request packets originated moving nodes hop passive acknowledgments received result hop node forwarding packet 
difference values number retransmissions expect attempt hop node 
total number expected retransmissions 
table iv evaluates left half equation showing actual number retransmissions moving nodes number retransmissions lost 
subtracting numbers yields number retransmissions received hop node 
retransmission explicitly acknowledged hop node loss explicit cause retransmit packet 
subtracting lost explicit yields total number successful retransmissions network 
summing hops shows total successful retransmissions 
rough estimation technique see number expected retransmissions shown table iii greater number successful retransmissions shown table iv 
verifies dsr retransmitting spuriously 
numbers exactly equal due packets discarded retransmitted maximum allowed number times 
variability environment occasionally testing communicate directly distance mhz wavelan radios testbed specified lucent range indicates just variable electro magnetic propagation 
ping tests attempted send echo requests directly 
packets number icmp echo reply packets table iv difference number retransmissions hop node number retransmissions lost number retransmissions got 
subtracting number explicit acks lost yields number successful retransmissions 
lost acks lost successful total inter packet spacing received icmp echo reply packets inter packet spacing received icmp echo reply packets echo requests sent ms retransmissions unique replies returned giving loss rate 
inter packet spacing echo reply packets icmp test echo request packets sent ms expect inter packet spacing echo close ms 
noted echo reply packets returned 
shows inter packet spacing th percentile packets measurements discarded outliers 
mean inter packet spacing ms standard deviation ms route length ping test system received echo reply packets able match specific echo requests 
table shows distribution route lengths requests 
slightly routes hop routes 
occasionally direct route discovered systems route receives little poor quality 
table distribution route lengths icmp tests 
echo request packets traversed routes echo reply packets traversed routes 
route length icmp echo request icmp echo reply tcp test results addition ping tests reported section ran experiments characterize tcp performs ad hoc network testbed 
ran experiment lab tool section create multihop environment 
repeated experiment outside actual ad hoc network 
lab measurements serve useful benchmark giving best case approximation compare data collected field 
single hop tcp experiments set experiments intended establish baseline tcp performance verify implementation dsr degrade tcp performance 
inside lab set dsr nodes ran tcp benchmarks dbs hop link 
single hop case passive acknowledgments dsr acknowledgment transmitted response data packet 
experiment consisted performing data transfers mb lab environment 
transfers tcp averaged mb kb standard deviation mb number half theoretical link capacity mb coincides closely mb value typically observed dsr 
due choice mac protocol parameters inside wavelan pcmcia cards node node communication proceed quickly basestation node communication typically sees throughput approximately mb kb 
moved nodes vehicles testbed separated nodes distance approximately starting tcp test verified quality wireless link nodes sufficient allow nodes successfully flood ping byte packets 
nodes remained stationary remainder test 
outdoor test consisted transfers mb transfers mb 
mb transfers average throughput mb standard deviation mb mb transfers averaged mb standard deviation mb significant decline average throughput mb transfers results single outlier throughput mb average throughput transfers mb reasonable consistent values hop tcp results assured implementations dsr route discovery route maintenance mechanisms performing correctly inhibiting tcp performance 
hop tcp experiments hop tcp experiments began hop experiment collecting data lab 
transfers mb tcp averaged mb kb standard deviation mb variability explained fact transfer achieved mb achieved mb order correctly position nodes outdoor experiment cars driven opposite directions positioned far intermediate node possible allowing nodes successfully flood ping intermediate node byte packets 
positioned nodes remained stationary remainder test 
created particularly challenging scenario electromagnetic propagation highly variable specific setup test introduces hidden terminal problem 
number times tests saw dsr retransmission timer expire creating route errors subsequent route discovery attempts restore connectivity 
described section route discovery consists node sending non propagating route request followed propagating route request route reply received ms mb data transfers set maximum seconds timed cases entire megabyte transfered 
cases report average data rate second duration connections 
average data rate hop outdoor scenario mb kb standard deviation mb throughput measured lab 
time sequence number plot hop connection testbed depicted 
sequence numbers marked small dot transmitted hop route intermediate node sequence numbers marked transmitted directly tween endpoints 
dashed vertical lines indicate tcp source performed route discovery consisting non propagating route request solid vertical lines indicate route discovery consisting non propagating propagating route request occurred 
purpose discussion node tcp source intermediate node tcp sink 
shows tcp connection making progress exclusively hop route seconds connection 
time interval connection progress sending kb interval 
processing route error tcp source node initiates tcp sequence number tcp sequence number pkts sent hop routes pkts sent hop routes time tcp sequence number plot mb transfer hop route 
vertical lines indicate times tcp source initiated route discovery dashed lines indicate times non propagating route request transmitted solid lines indicate non propagating propagating route request pkts sent hop routes pkts sent hop routes time tcp sequence number plot mb transfer hop route utility source destination nodes prevent single hop routes 
vertical lines indicate times tcp source initiated route discovery 
route discovery 
non propagating route request answered directly node causing send subsequent propagating route request single hop route node poor quality single hop link leads repeated errors route discovery attempts 
node non propagating route request fails return transmits propagating request 
results discovery single hop route hop route intermediate node 
time tcp backed packet offered network node attempts route discovered finds removes hop route cache begins hop route 
time connection starts making progress 
scenario repeated attempts hop route occurs scenario illustrates important challenge ad hoc network routing protocols argues strongly routing protocols need ability remember routes tried 
traditional distance vector style protocols subject problem attempt minimize single metric usually hop count 
considering node scenario discussed participating distance vector routing protocol hear advertisements node direct route optimal terms hop count route intermediate node attempt send packets directly direct route timed 
words type local feedback hysteresis oftentimes try send packets directly effectively black holing packets link unreliable 
protocols signal stability routing ssa may behave better scenario 
evaluate potential gain having mechanism prevent repeated poor direct route emulated perfect routing information eliminate discovery hop routes 
shows time sequence plot mb transfer field perfect routing flat plateaus missing throughput higher 
presently considering ways implement mechanism dsr 
solution dsr cache information link receives route error 
negative information timed certain period time prevent dsr repeatedly attempting poor quality link 
drawback solution difficulty picking reasonable timeout value 
second favorable approach gps information propagated node model position nodes 
link bad dsr retain negative information cache finds node changed position reasonably significant way 
third sophisticated approach combine signal strength node received route nodes mobility pattern nodes estimate probability successful communication occur particular route 
intend experiment approaches coming months determine approach suitable 
general lessons learned continuing experiment testbed refining protocols procedures data analysis ongoing experience 
believe building testbeds critical step widespread deployment ad hoc networks 
taught challenges faced networks focuses specific lessons learned building testbed 
summary briefly review key issues discovered 
obtaining route diversity interesting expensive 
described section core ad hoc network testbed comprised nodes stationary systems moving nodes move back forth road systems 
scenario works limited number vehicles creates environment essentially route diversity 
words point time exists single route nodes 
linear arrangement nodes increases hidden terminal problem 
linear configuration allow route diversity increase partitioning network nodes added 
similarly drawback choosing radios short range network easily partitioned tens meters variations relative positions vehicles 
goal testbed challenge protocols rigorous environment lack route diversity contributed understanding protocols behaviors edge design space 
nodes available evaluate scaling routing issues points design space 
adaptive retransmission timers necessary complexity 
experience clear local retransmission algorithms critical part multi hop ad hoc network 
retransmission algorithm implemented link layer adaptive order accommodate network congestion periods high contention wireless channel 
find passive acknowledgments successful environment implement transmission pacing advocated designers darpa packet radio network 
multi level priority queues worth implementing 
delivering routing protocol control packets rapidly possible performance implies packets routing implications scheduled transmission ahead user data packets 
initial implementation priority scheme simply prepended high priority packets network interface transmission queue 
prepending caused reordering stream control packets stream user data packets retransmitted data packets considered high priority 
elegant solution implement multi level queueing scheme queue priority interface 
trivial scheduling algorithm sophisticated ones potentially valuable 
personnel management nontrivial 
significant limitation number nodes testbed availability drivers operate 
groups people conduct useful experiments full run nodes required participants period hours 
drivers recruited understanding system project associated project runs started mission briefing explain goal experiment tasks node perform 
described developed unix shell scripts procedures automate functions runs possible particular data logging early runs repeated drivers properly configure start processes nodes 
safety reasons experiment controlled autonomously remotely cars started move drivers read screen type driving 
lab testing protocols critical success 
time spent developing system emulating ad hoc networks paid back times 
enabled experimentation multi hop topologies lab served useful baseline comparing field measurements 
greatest contribution fact debugging regression testing implementations exposing unpredictable real world 
code took full day write test proved easy integrate hockey tool scenario generation 
monitoring data analysis improved gps information 
accurately knowing position node run enabled useful operations including real time diagnosis network behavior bird eye visualization entire site network visualizer 
gps information enabled post run analysis performance data separated effects wireless propagation packet losses due transmission errors routing protocol induced behavior packet losses due routing errors 
wireless propagation 
areas site expected best propagation straight flat areas direct line connectivity fact worst wireless error rates 
conducting initial survey site identify areas useful alter node movement avoid areas knowledge site prevented unduly wasting time looking errors routing protocol explain poor performance areas 
real world propagation environment deliver packets widely separated nodes greater frequency expected 
performance analysis demonstrates significant challenge ad hoc network routing protocols need address 
think crazy 
partially humorous suggestion building testbed urban area worth time friends early local police security guards 
visit regular basis find slow moving cars covered antennas doing 
aided considerably fact site located research park worth preparing list stock answers 
example re radios conduct industrial computers different purpose police car haven seen episode files created testbed ad hoc network research featuring stationary nodes car mounted nodes drive testbed site car mounted roving node enters leaves site 
packets routed nodes dsr protocol seamlessly integrates ad hoc network internet gateway 
characterized environment testbed site evaluated basic performance properties network links discovered practical challenges routing protocols environment need overcome 
serves document experiences designing building testbed hopes challenges faced solutions ease path groups attempting building testbeds 
presently carrying experiments characterize improve performance ad hoc network protocol 
experimenting network behavior different levels traffic load including audio video streams designing protocol enhancements provide streams quality service promises 
intend testbed evaluating adaptive system techniques including techniques tcp adaptation application layer adaptation odyssey system 
cmu ad hoc network testbed product people special recognition due jetcheva ke ben 
grateful efforts members research team including pavel dan satish shetty michael yih chun hu sam weiler jon schlegel 
david beyer 
accomplishments darpa survivable adaptive networks program 
proceedings ieee milcom conference 
josh broch david johnson david maltz 
dynamic source routing protocol mobile ad hoc networks 
internet draft draft ietf manet dsr txt december 
progress 
josh broch david maltz david johnson 
supporting hierarchy heterogeneous interfaces multi hop wireless ad hoc networks 
proceedings workshop mobile computing held conjunction international symposium parallel architectures algorithms networks perth australia june 
appear 
josh broch david maltz david johnson yih chun hu jetcheva 
performance comparison multi hop wireless ad hoc network routing protocols 
proceedings fourth annual acm ieee international conference mobile computing networking pages tx october 
stuart cheshire mary baker 
internet mobility 
proceedings sigcomm pages august 
corson papadopoulos park 
internet manet encapsulation protocol imep specification 
internet draft draft ietf manet txt august 
progress 
rohit dube cynthia yeh wang satish tripathi 
signal stability adaptive routing ssa ad hoc mobile networks 
ieee personal communications pages february 
francis dupont 
inria ipv distribution 
ftp ftp inria fr network ipv 
kevin fall 
network emulation vint ns simulator 
proceedings fourth ieee symposium computers communications iscc july 
garcia luna aceves fullmer beyer 
wireless internet gateways wings 
proceedings ieee milcom november 
ieee computer society lan man standards committee 
wireless lan medium access control mac physical layer phy specifications ieee std 
institute electrical electronics engineers new york new york 
david johnson 
routing ad hoc networks mobile hosts 
proceedings ieee workshop mobile computing systems applications pages december 
david johnson david maltz 
dynamic source routing ad hoc wireless networks 
mobile computing edited tomasz imielinski hank korth chapter pages 
kluwer academic publishers 
rick jones 
netperf homepage 
www netperf org 
john jubin janet 
darpa packet radio network protocols 
proceedings ieee january 
robert kahn steven jerry ronald 
advances packet radio technology 
proceedings ieee november 
barry robert ruth sastry 
goals challenges darpa program 
ieee personal communications december 
david maltz ke david johnson 
emulation ad hoc networks 
talk delivered vint project retreat june 
slides available www monarch cs cmu edu papers html 
yamaguchi 
dbs powerful tool tcp performance evaluations 
spie proceedings performance control network systems november 
noble satyanarayanan narayanan flinn walker 
agile application aware adaptation mobility 
proceedings th acm symposium operating system principles pages st malo france october 
brian noble satyanarayanan nguyen randy katz 
trace network emulation 
proceedings sigcomm pages september 
charles perkins editor 
ip mobility support 
rfc october 
postel 
transmission control protocol 
rfc september 
neil siegel dave hall clint walker rene rubio 
tactical internet panel briefings 
army digitization office 
available www ado army mil briefings tact internet index htm october 
bruce tuch 
development wavelan ism band wireless lan 
technical journal july august 
gary wright richard stevens 
tcp ip illustrated volume implementation 
addison wesley reading massachusetts 

