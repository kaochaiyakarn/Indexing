approximation algorithms metric facility location median problems primal dual schema lagrangian relaxation kamal jain lambda vijay vazirani lambda approximation algorithms metric uncapacitated facility location problem metric median problem achieving guarantees respectively 
distinguishing feature algorithms low running time log log log respectively total number vertices edges underlying complete bipartite graph cities facilities 
main algorithmic ideas new extension primal dual schema lagrangian relaxation derive approximation algorithms 
costs opening facilities costs connecting cities facilities uncapacitated facility location problem seeks minimum cost solution connects city open facility 
clearly problem applicable number industrial situations 
modern day application consider problem locating proxy servers web 
reason occupied central place operations research early studied perspectives worst case analysis probabilistic analysis polyhedral combinatorics empirical heuristics see 
years renewed interest tackling problem time perspective approximation algorithms :10.1.1.19.4863
carry developing approximation algorithm primal dual schema 
algorithm subroutine solve related problem median problem 
problem differs costs opening facilities number specified upper bound number facilities opened 
algorithms achieve approximation guarantees respectively 
algorithms metric case connecting costs satisfy triangle inequality problems np hard case 
connection costs unrestricted approximating problem hard approximating set cover done better log factor np problem straightforward see second established lin vitter 
lambda address college computing georgia institute technology atlanta ga mail cc gatech edu 
research supported nsf ccr 
distinguishing feature algorithms low running time log log log respectively total number vertices edges underlying complete bipartite graph cities facilities nc nf nc theta nf nc nf number cities facilities number bits needed represent connecting cost 
particular running time algorithm dominated time taken sort connecting costs edges 
worth pointing facility location algorithm suitable distributed computation 
constant factor algorithm metric uncapacitated facility location problem shmoys tardos improving hochbaum bound log see log factor algorithm :10.1.1.19.4863
approximation guarantee 
improvements current best factor due shmoys 
drawback algorithms lp rounding need solve large linear programs prohibitive running times applications 
different approach plaxton rajaraman 
showed known local search heuristic achieves approximation guarantee ffl ffl 
algorithm high running time log ffl 
regarding hardness results establishes better factor possible np researchers felt primal dual schema adaptable interesting ways combinatorial structure individual problems full potential realized area approximation algorithms 
belief 
extend scope schema way primal dual approximation algorithms obtained far pair covering packing linear programs primal dual pair lp components constraint matrix objective function vector right hand side vector non negative :10.1.1.5.6159
includes instance lp relaxation negative coefficients problem decomposed phases relaxation phase covering program 
hand algorithm works primal dual programs negative coefficients 
despite added complexity algorithm particularly simple description city keeps raising dual variable ffj gets connected open facility 
primal dual variables simply respond change trying maintain feasibility satisfying complementary slackness conditions 
give new mechanism 
relaxed dual program approximation algorithms primal dual schema mechanism formalized 
phase integral primal solution satisfying primal complementary slackness conditions solution may redundancies 
second phase minimal solution extracted typically reverse delete procedure process dual complementary slackness conditions get satisfied relaxation factor 
final algorithm factor approximation guarantee 
phase similar 
second phase ensure complementary slackness conditions satisfied primal solution may infeasible 
solution augmented time primal conditions need relaxed factor approximation guarantee algorithm 
median problem numerous applications especially context clustering extensively studied 
years problem new clustering applications area data mining see 
non trivial approximation algorithm problem researchers years 
breakthrough bartal gave factor log log log algorithm probabilistic ap proximation metric spaces tree metrics 
slight improvement factor log log log constant factor algorithm obtained charikar guha tardos shmoys technique lin vitter 
algorithm approximation guarantee drawback uses lp rounding 
algorithm uses ideas constant factor algorithms obtained facility location problem making wonder deeper connection problems 
establish connection problems lagrangian relaxation median problem facility location problem 
enables algorithm facility location problem subroutine solve median problem 
lagrangian relaxation technique implicitly past garg obtain factor algorithm mst problem 
transparent 
ideas general method deriving approximation algorithms technique 
ideas help solve common generalization problems facilities costs addition upper bound number facilities opened 
give factor approximation algorithm problem previous bound 
capacitated facility location problem facility serve ui cities nontrivial approximation algorithms 
part problem lp relaxations known problem unbounded integrality gap see :10.1.1.19.4863
section give factor approximation algorithm variant facility opened unbounded number times facility opened yi times serve cities 
special case version capacities facilities assumed equal solved factor lp rounding 
special case uniform capacities solved factor extra copy facility location 
building ideas charikar guha obtained improved results factor algorithm facility location problem factor algorithm median problem running times 
metric uncapacitated facility location problem uncapacitated facility location problem seeks minimum cost way connecting cities open facilities 
stated formally follows bipartite graph bipartition set facilities set cities 
fi cost opening facility cij cost connecting city opened facility problem find subset facilities opened function oe assigning cities open facilities way total cost opening facilities connecting cities open facilities minimized 
consider metric version problem cij satisfy triangle inequality 
adopt notation nc jcj nf jf total number vertices nc nf total number edges nc theta nf consider integer program problem due 
program yi indicator variable denoting facility open xij indicator variable denoting city connected facility constraint ensures city connected facility second ensures facility open 
minimize subject xij yi gamma xij xij yi lp relaxation program minimize subject xij yi gamma xij xij yi dual program maximize ffj subject ffj gamma cij fi ffj relaxing primal complementary slackness conditions algorithm primal dual schema 
stated usual mechanism relaxing dual complementary slackness conditions relax primal conditions 
showing done give reader feel dual variables pay primal solution considering simple setting suppose lp optimal solution integral say oe solution yi iff xij iff oe 
ff fi denote optimal dual solution 
reader verify primal dual complementary slackness conditions imply facts ffl open facility fully paid oe fi ffl suppose city connected facility oe contribute opening facility fii furthermore ffj gamma cij 
think ffj total price paid city cij goes edge contribution opening facility suppose primal complementary slackness conditions relaxed follows maintaining dual conditions coe ffj gamma coe fi oe fi cost integral solution dual leading factor approximation algorithm 
obtain stronger inequality stated theorem dual pays third connection cost pay completely opening facilities 
stronger inequality needed order algorithm solve median problem 
reason relax primal conditions follows 
cities partitioned sets directly connected indirectly connected 
directly connected cities pay opening facilities non zero directly connected city oe 
indirectly connected city primal condition relaxed follows coe ffj coe primal conditions maintained directly connected city ffj gamma coe open facility oe fi algorithm algorithm consists phases 
phase algorithm operates primal dual fashion 
finds dual feasible solution determines set tight edges temporarily open facilities ft phase consists choosing subset ft open finding mapping oe cities algorithm phase find large dual solution possible 
motivates underlying process dealing non covering packing pair lp 
city keeps raising dual variable ffj gets connected open facility 
primal dual variables simply respond change trying maintain feasibility satisfying complementary slackness conditions 
notion time defined phase event associated time happened phase starts time 
initially city defined unconnected 
phase algorithm raises dual variable ffj unconnected city uniformly unit rate ffj grow unit time 
ffj cij edge algorithm declare edge tight 
henceforth dual variable raised uniformly ensuring constraint lp violated 
goes paying facility edge declared special 
facility said paid pj fi 
algorithm declares facility temporarily open 
furthermore unconnected cities having tight edges facility declared connected facility declared connecting witness cities 
notice dual variables ffj cities raised anymore 
soon unconnected city gets tight edge declared connected declared connecting witness notice edge special 
cities connected phase terminates 
events happen simultaneously algorithm executes arbitrary order 
phase city may paid temporarily opening facilities 
want ensure city pay facility eventually connected 
ensured phase chooses subset temporarily open facilities opening permanently 
phase ft denote set temporarily open facilities denote subgraph consisting special edges 
denote graph edge iff path length subgraph induced ft find maximal independent set say facilities set declared open 
city define fi ft 
independent set facilities opened 
facility opened set oe declare city directly connected 
consider tight edge connecting witness set oe declare city directly connected notice case fii 
remaining case neighbor graph set oe declare city indirectly connected 
oe define primal integral solution xij iff oe yi iff values ffj obtained phase form dual feasible solution 
analysis show dual variables ffj pay primal costs opening facilities connecting cities facilities 
denote contributions city costs respectively ffj indirectly connected ffj 
directly connected hold ffj cij oe 
cij 
lemma oe fi proof temporarily open phase completely paid special fi critical observation city contributed fi directly connected city 
city connected facility satisfy 
lemma follows 
corollary pi fi pj recall defined indirectly connected cities 
directly connected cities pay cost opening facilities 
lemma indirectly connected city cij oe 
proof connecting witness city indirectly connected edge turn city say special edges 
times declared temporarily open phase 
edge tight ffj ci 
show ffj cij ffj ci 
lemma follow triangle inequality 
edges tight ffj cij ffj ci 
edges special gone tight declared temporarily open 
consider time min 
clearly ffj growing time 
ffj min 
connecting witness ffj 
ffj ffj required inequalities follow 
gamma gamma gamma gamma gamma gamma gamma gamma picking special edges tight edges picked lemma hold 
facilities ordered order temporarily opened picked lexicographically maximal independent set lemma holds 
theorem primal dual solutions constructed algorithm satisfy ffj proof directly connected city cij oe combining lemma get adding inequality obtained corollary gives theorem fi running time sort edges increasing cost gives order times edges go tight 
facility maintain number cities currently contributing anticipated time ti completely paid event happens way 
initially ti infinite facility cities contributing 
ti maintained binary heap update find current minimum log nf time 
types events happen lead updates 
ffl edge goes tight 
facility temporarily open gets city contributing cost 
amount contributed cost current time easily computed 
anticipated time facility go paid recomputed constant time 
heap updated log nf time 
facility temporarily open city declared connected ffj raised anymore 
facility counting contributor need decrease number contributors recompute anticipated time gets paid 
ffl facility completely paid 
event declared temporarily open cities contributing declared connected 
city execute second case previous event update facilities contributing 
theorem follows observing edge considered twice 
goes tight 
second city declared connected 
consideration edge log nf 
theorem algorithm achieves approximation factor facility location problem running time log 
tight example infinite family examples shows analysis algorithm tight graph cities facilities 
city 
cij follows tight triangle inequalities 
ffl ffl respectively small number ffl 
optimal solution open facility connect cities total cost ffl algorithm open facility connect cities total cost ffl gamma 
extension arbitrary demands small extension algorithm enables handle generalization arbitrary demands 
city non negative demand dj specified open facility serve demand 
cost serving demand facility 
change ip lp objective function replaced 
changes constraint dual ffj gamma change algorithm city ffj raised rate dj 
notice change constraint dual edge goes tight time cij 
goes tight increasing rate dj facility may get opened earlier unit demands case 
easy way see modification works reduce unit demands case making dj copies city change proposed algorithm general works dj non integral exponentially large 
metric median problem median problem differs facility location problem respects cost opening facilities upper bound number facilities opened fixed supplied part input 
assume edge costs satisfy triangle inequality 
power primal dual algorithms lies efficiently making judicious local improvements 
hand constraint facilities opened global constraint easy satisfy algorithm 
observe lagrangian relaxation median problem facility location problem 
enables replace global constraint penalty opening facility 
integer program median problem 
indicator variables yi xij play role 
minimize subject xij yi gamma xij gamma yi gamma xij yi lp relaxation program minimize subject xij yi gamma xij gamma yi gamma xij yi dual program maximize ffj gamma zk subject ffj gamma cij ffj high level idea similarity linear programs problems exploited follows take instance median problem assign cost opening facility find optimal solutions lp lp say ff fi respectively 
strong duality theorem ffj suppose primal solution happens open exactly facilities fractionally yi claim ff fi optimal solutions lp lp respectively 
feasibility easy check 
optimality follows substituting pi yi equality rearranging terms show primal dual solutions achieve objective function value ffj gamma zk idea algorithm theorem obtain integral solution lp 
suppose cost opening facility algorithm happens find solutions ff fi primal solution opens exactly facilities 
theorem zk ffj observe ff fi primal integral dual feasible solutions median problem ffj gamma zk solution median problem optimal 
notice proof factor facilities opened facilities opened solution infeasible median problem 
remaining problem find value exactly facilities opened 
ideas required 
principle economics taxation effective way controlling amount goods coming border raising reduce flow vice versa 
similar manner raising reduce number facilities opened vice versa 
natural seek modification algorithm find value exactly facilities get opened 
lead factor approximation algorithm 
don know possible 
strategy leads factor algorithm 
rest discussion assume encountered run algorithm resulted exactly facilities opened 
clearly algorithm open facilities large open facility 
value picked cmax length longest edge 
conduct binary search interval find algorithm opens facilities respectively furthermore gamma cmin cmin length shortest non zero edge 
xs ys xl yl primal solutions pi ysi pi superscripts denote small large respectively 
ffs fis ffl fil corresponding dual solutions 
xs ys xl yl convex combination solutions ak bk conditions gamma gamma gamma gamma 
feasible fractional solution facility location problem opens exactly facilities feasible fractional solution median problem 
solution city connected facilities 
lemma cost factor nc cost optimal fractional solution median problem 
proof theorem gamma fflj gamma ffl fil feasible dual solution facility location problem cost facilities 
replace second inequality expense increased factor 
achieved upper bound gamma fact pi cmin 
get xj ff gamma multiplying inequality inequality adding getx xj ff gamma ff 
fi 
observe ff fi feasible solution dual median problem 
lemma follows 
section give randomized rounding procedure obtains integral solution median problem increase cost small factor 
section procedure 
randomized rounding give randomized rounding procedure produces integral solution median problem 
process increases cost multiplicative factor max 
sets facilities opened solutions jaj jbj 
facility find closest facility facilities required distinct 
ae facilities 
jb arbitrarily include additional facilities gamma jb 
probability open facilities probability gamma open facilities 
addition set cardinality gamma picked randomly gamma facilities set opened 
notice facility gamma probability opened 
set facilities opened jij function oe defined follows 
consider city suppose connected solutions 
opened procedure probability probability city connected open facility 
gamma see facility closest 
city connected open 
connected open 
open connected 
ss jj jj jj 
gamma denote cost connection cost city fractional solution cost aci bci 
lemma expected connection cost city integral solution coe max cost 
coe efficiently computed 
proof coe aci bci cost 
consider second case 
open probability probability open open gamma probability open gamma gamma ab 
gives coe bci ci facility closest ci ci ci ci second inequality follows triangle inequality 
triangle inequality ci ci ci ci ci 
coe bci ci ab ci ci ci aci 
coe aci bci ab ci ci aci bci max clearly cases coe easy compute 
xk yk denote integral solution obtained median problem randomized rounding procedure 
lemma max expected cost solution computed efficiently 
derandomization derandomization follows straightforward manner method conditional expectation 
algorithm opens set probability set probability gamma pick compute expected value gamma facilities randomly chosen gamma 
picking choose open set gives smaller expectation 
second algorithm opens random subset gamma facilities gamma 
choice ae gamma jdj gamma denote gamma expected cost solution facilities additionally gamma gamma jdj facilities randomly opened gamma 
facility gamma equally opened get gamma jb gamma gamma fig gamma fig implies fig gamma fig gamma choose replace fig 
notice computation fig gamma fig done lemma 
running time easy see gamma nc happens gamma nc gamma happens 
max gamma nc 
altogether approximation guarantee gamma nc nc 
method conditional probabilities procedure derandomized section 
binary search log cmax cmin log probes 
running time probe dominated time taken run algorithm randomized rounding takes time derandomization takes time 
get theorem algorithm achieves approximation factor median problem running time log log 
running time algorithm strongly polynomial standard method discretizing costs integers magnitude poly 
tight example tight example factor complete median algorithm 
give infinite family instances show analysis randomized rounding procedure improved 
solutions xs ys xl yl open facility facilities fk respectively 
distance fi facilities second set 
cities distance distance ffl fk 
rest distances triangle inequality 
convex combination constructed gamma cost convex combination 
suppose algorithm picks closest neighbor 
expected cost solutions produced randomized rounding procedure ab ffl 
letting ffl tend cost convex combination essentially na rounded solution na 
lagrangian relaxation technique approximation algorithms lagrangian relaxation fundamental technique combinatorial optimization 
section ideas developed give method technique derive approximation algorithms 
method require constraints problem linear fact general setting 
optimization problem minimize subject arbitrary real valued functions arbitrary predicate constant 
opt denote optimal value problem value optimum attained 
lagrangian relaxation technique consists relaxing certain constraints moving objective function associated lagrange multipliers 
technique relax constraint lagrange multiplier 
value min gamma lower bound opt 
see notice substituting expression gives opt 
min gamma lower bound opt 
value expression 
rewrite expression min zg 
gamma zk value consider optimization problem call minimize zg subject opt denote optimum value problem 
show derive approximation algorithm problem approximation algorithm problem 
approximation algorithm finds solution satisfying constant ff 
notice multiplied term left hand side ff stronger ff factor approximation algorithm problem 
pick solution zg completely paid opt 
theorem suppose exists approximation algorithm defined 
suppose polynomial time procedure uses subroutine finds value solution satisfies ff factor approximation algorithm problem 
proof premise find polynomial time value solution substituting get ff opt gamma zk important observation value opt gamma zk defined optimal value expression 
ffl 
lower bound opt get 
feasible solution problem 
procedure problem dependent 
instance mst problem getting solutions garg uses additional structural properties obtain tree containing exactly vertices 
median problem involved doing binary search find close values attains values convex combination solutions doing randomized rounding get integral solution slight loss approximation factor 
step randomized rounding remaining steps apply problem linear constraints 
instance consider variant median problem 
specified bound number facilities opened specified cost opening facility upper bound allowed opening facilities 
subject constraint problem minimize total connection cost 
problem know carry step randomized rounding leave open problem 
interesting call decoupling happen take lagrangian relaxation 
suppose kind facilities hospitals schools 
suppose total number hospitals schools open practice result budget constraint city connected hospital school 
problem thought facility location problems coupled median kind constraint 
take lagrangian relaxation get rid median kind constraint get independent instances facility location problem solved separately 
common generalization problems consider uncapacitated facility location problem additional constraint facilities opened 
common generalization problems solved nf get problem facility costs set zero get second problem 
techniques yield factor algorithm generalization 
high level idea follows 
lagrangian relaxation technique remove restriction facilities opened set cost opening facility fi binary search yield values close algorithm opens facilities respectively 
appropriate convex combination solutions gives fractional solution opens exactly facilities additional property city connected facilities 
cost solution cost optimal fractional solution 
notice randomized rounding procedure ensures expected cost opening facilities rounded solution cost opening facilities convex combination 
derandomization procedure carried setting 
theorem factor approximation algorithm common generalization uncapacitated facility location median problems facilities costs opened 
dealing capacities consider variant capacitated metric facility location problem 
facility opened unbounded number times facility opened yi times serve cities 
lp relaxation problem extra constraint gamma xij dual variable corresponding constraint fli 
dual program maximize ffj subject ffj gamma gamma fli cij fi ffj fli facility fix fli fi ui step enables get rid variables fli lp resulting linear program dual uncapacitated facility location problem 
primal program modified dual minimize cij fi ij fi yi subject xij yi gamma xij xij yi easy see cij fi ui satisfies triangle inequality 
algorithm find integral solution lp cij fi ij fi yi xj ffj theorem 
solution capacitated problem xij solution yi pj xij ui gives relationship yi yi yi yi pj xij ui relationship inequality get ffj ffj giving approximation guarantee factor 
generalizations problems considered sections case arbitrary demands cities solved factors ideas section 
clustering median algorithm extends fairly straightforward manner obtaining constant factor algorithm problem clustering 
holds case number clusters dimension space arbitrary case constant factor algorithms observed 
note result follows previous constant factor median algorithms 
result considered preliminary factor obtained high 
see factor algorithm case fixed 
set points fv vng dimensional space number problem find minimum cost clustering find points called centers fk minimize sum squares distances point vi closest center 
naturally defines partitioning points clusters 
suppose points vt form clusters center 
define centroid vt delta delta delta vt known tx gamma jj tx gamma gamma jju gamma denotes square euclidean distance points center centroid cluster 
problem stated median problem 
cities points vn facilities centroid subset points 
cost connecting city facility square euclidean distance 
exponentially facilities corresponding lp exponential sized know deal efficiently 
way getting difficulty choose centers points 
suppose closest point vt say 
equality get tx gamma jj tx gamma gamma tx gamma cost optimal clustering points centers factor optimal clustering centroids 
problem expressed polynomial sized median lp lagrangian relaxation polynomial sized facility location lp 
facility location algorithm solves lagrangian relaxation factor 
reason larger factor edge costs satisfy triangle inequality 
statement lemma needs modified cij 
reason factor randomized rounding increases 
gives factor theta theta clustering 
discussion large fraction theory approximation algorithms know today built linear programming provides main algorithm design techniques rounding primal dual schema 
techniques yielded algorithms approximation guarantees achieving integrality gap relaxation 
respect running times algorithms derived methods differ widely 
rounding resorts big hammer approach solving linear program leads inefficient algorithms 
hand primal dual schema leaves room exploit special combinatorial structure individual problems lead efficient algorithms 
algorithm obtained typically scaffolding linear programming completely dispensed obtain purely combinatorial algorithm 
done worthwhile examining various algorithms derived rounding see efficient combinatorial algorithms achieving factors obtained 
objective measure running time aspect primal dual algorithms superior rounding algorithms ease core algorithmic idea modified generalized adapted special circumstances variants original problem 
respect algorithm met special success 
various generalizations covered core idea solve ffl fault tolerant version facility location problem connectivity requirement rj city specifying number open facilities city connected 
ffl prize collecting version facility location median problems 
version required connect city open facility specified penalty pay city connected 
ffl outlier version facility location problem specified number required connect cities open facilities 
reduce problem prize collecting version lagrangian relaxation technique 
ffl line median problem prespecified chosen line 
instructive compare current status primal dual approximation algorithms mature status exact primal dual algorithms 
setting underlying mechanism iteratively ensuring complementary slackness conditions 
termination optimal integral solution lp obtained 
setting seeking optimal solution lp lp may optimal integral solutions need introduce relaxation 
relaxing complementary slackness conditions carried way possibilities see alternative mechanism 
point difference exact setting sophisticated dual growth algorithms 
approximation setting primal dual algorithms simple greedy dual growth algorithm 
far primal dual schema obtaining integral solutions lp relaxation 
powerful general scenario np hard problem captured integer program manner lp provides relaxation problem 
setting primal dual schema try find solutions feasible original np hard problem near optimal quality 
open problem mentioned 
section stated lagrangian relaxation technique general setting constraints problem provided arbitrary predicates 
includes instance possibility non linear constraints 
interesting see technique finds applications non linear settings 
interesting derive approximation algorithm problem global constraints lagrangian relaxation technique instance outlier median problem specified number facilities opened number cities need connected 
detailed level issue modifying algorithm opens exactly facilities deserves thought possible avenue improving factor median problem 
nice improve running time facility location algorithm case metric specified closure sparse graph complete bipartite graph 
question obtain non trivial approximation algorithm capacitated facility location problem 
wish pete interesting discussions 
david williamson sharing insights lagrangian relaxation technique pointing garg mst algorithm viewed lagrangian relaxation technique 
moses charikar suggesting simplification facility location algorithm 
agrawal klein ravi 
trees collide approximation algorithm generalized steiner problem networks 
siam computing 
arora raghavan rao 
approximation schemes euclidean medians related problems proc 
th acm symp 
theory computing 

finding integer solutions linear programs 
proc 
ibm scientific computing symp 
combinatorial problems 
ibm 
bartal 
probabilistic approximation metric spaces algorithmic applications 
proc 
th ieee symp 
foundation computer science 
bar yehuda 
linear time approximation algorithm weighted vertex cover problem 
journal algorithms 
bradley fayyad mangasarian 
mathematical programming data mining formulations challenges 
microsoft technical report january 
charikar chekuri goel guha 
rounding trees deterministic approximation algorithms group steiner trees median 
proc 
th acm symp 
theory computing 
charikar guha 
improved combinatorial algorithms facility location median problems 
proc 
th annual symposium foundations computer science 
charikar guha tardos shmoys 
constant factor approximation algorithm problem 
proc 
st acm symp 
theory computing 
charikar khuller mount 
algorithms facility location problems outliers 
em proc 
th acm siam annual symposium discrete algorithms 
nemhauser wolsey 
uncapacitated facility location problem 
francis eds discrete location theory 
john wiley sons new york 

improved approximation algorithms uncapacitated facility location 
bixby boyd rios eds integer programming combinatorial optimization springer lncs vol 

shmoys 
improved approximation algorithms uncapacitated facility location problem 
unpublished manuscript 
shmoys 
improved approximation algorithms capacitated facility location problem 
proc 
th acm siam symp 
discrete algorithms 
williamson 
improved approximation algorithms capacitated facility location problems 
proc 
integer programming combinatorial optimization 
drineas frieze kannan vempala vinay 
clustering large graphs 
proc 
th symp 
discrete algorithms 
edmonds 
maximum matching polyhedron vertices 
journal research national bureau standards 
garg 
approximation minimum tree spanning vertices 
proc 
th ieee symp 
foundation computer science 
garg 
private communication 
garg vazirani yannakakis 
primal dual approximation algorithms integral flow multicut trees 
algorithms 
goemans goldberg plotkin shmoys tardos williamson 
improved approximation algorithms network design problems 
proc 
th acm siam symp 
discrete algorithms 
goemans williamson 
general approximation technique constrained forest problems 
siam journal computing 
goemans williamson primal dual method approximation algorithms application network design problems approximation algorithms np hard problems hochbaum ed pws publishing boston ma 
guha khuller 
greedy strikes back improved facility location algorithms 
proc 
th acm siam symp 
discrete algorithms 
hochbaum 
heuristics fixed cost median problem 
math 
programming 
jain ion vijay vazirani david 
primal dual schema approximation algorithm element connectivity problem 
proc 
th symp 
discrete algorithms 
jain vazirani 
approximation algorithm fault tolerant metric facility location problem 
proc 
rd approx conference springer verlag lncs 
kaufman vanden hansen 
plant warehouse location problem 
operational research quarterly 
plaxton rajaraman 
analysis local search heuristic facility location problems 
proc 
th acm siam symp 
discrete algorithms 
kuehn hamburger :10.1.1.19.4863
heuristic program locating warehouses 
management sci 

lin vitter 
approximation algorithms geometric median problems 
inform 
proc 
lett 

lin vitter 
ffl approximation minimum packing constraint violation 
proc 
th acm symp 
theory computing 
plaxton 
online median problem 
proc 
st ieee symp 
foundation computer science 
nemhauser wolsey 
integer combinatorial optimization 
john wiley sons new york 
rajagopalan vazirani bidirected cut relaxation metric steiner tree problem 
proc 
th acm siam symp 
discrete algorithms 
shmoys tardos :10.1.1.19.4863
approximation algorithms facility location problems 
proc 
th acm symp 
theory computing 

effect technical change output expansion optimum number size location pear marketing facilities california pear producing region 
phd thesis university california berkeley berkeley california 

working model plant numbers locations 
farm econom 

personal communication july 
vazirani 
primal dual schema approximation algorithms 
proc 
st annual international conference cocoon 
williamson goemans mihail vazirani 
primal dual approximation algorithm generalized steiner network problems 
combinatorica december 
