revisiting edge chaos evolving cellular automata perform computations melanie mitchell peter james crutchfield complex systems results experiment similar performed packard genetic algorithm evolve cellular automata ca perform particular computational task 
packard examined frequency evolved ca rules function langton parameter interpreted results experiment giving evidence hypotheses ca rules able perform complex computations near critical values claimed correlate phase transition ordered chaotic behavioral regimes ca ca rules evolved perform complex computation evolution tend select rules values close critical values 
experiment produced different results suggest interpretation original results correct 
review discuss issues related dynamical behavior classes computation ca 
main constructive results study identifying emergence competition computational strategies analyzing central role symmetries evolutionary system 
particular demonstrate symmetry breaking impede evolution higher computational capability 
santa fe institute old trail suite santa fe new mexico 
email mm santafe edu pth santafe edu physics department university california berkeley ca 
email chaos berkeley edu 
notion computation edge chaos gained considerable attention study complex systems artificial life 
notion related broad question relationship computational system ability complex information processing measures system behavior 
particular ability nontrivial computation require system dynamical behavior near transition chaos 
considerable attention notion edge chaos context evolution 
particular hypothesized biological systems perform complex computation order survive process evolution natural selection tends select systems near phase transition ordered chaotic behavior 
describes re examination study addressed questions context cellular automata 
results original study interpreted evidence evolutionary process cellular automata rules selected perform nontrivial computation preferentially selected rules near transitions chaos 
show supported experimental results consistent basic mathematical properties computation evolved 
process demonstration review clarify notions relating terms computation dynamical behavior edge chaos context cellular automata 

cellular automata dynamics cellular automata ca discrete spatially extended dynamical systems studied extensively models physical processes computational devices 
simplest form ca consists spatial lattice cells time states 
denote lattice size number cells ca single fixed rule update cell rule maps states neighborhood cells states cell nearest neighbors single state update value cell question 
lattice starts initial configuration local states time step states cells lattice synchronously updated 
term state refer value single cell configuration mean pattern states entire lattice 
ca discuss dimensional possible states cell 
dimensional ca neighborhood cell includes cell number neighbors side cell 
number neighbors side center cell referred ca radius simulations ca spatially periodic boundary conditions dimensional lattice viewed circle right neighbor rightmost cell leftmost cell vice versa 
equations motion ca expressed form rule table 
look table listing neighborhood patterns state central cell neighborhood mapped 
example displays possible rule table elementary dimensional state ca radius 
possible neighborhood output bit central cell updated 
space time diagrams binary state levin ca 
sites shown evolving time increasing page different initial configurations time steps 
initial configuration density approximately density approximately 
notice time step ca converged fixed pattern way ca classified initial configurations density 
words rule says neighborhood adjacent cells new state decided majority vote cells 
run ca look table applied neighborhood current lattice configuration respecting choice boundary conditions produce configuration time step 
common method examining behavior state dimensional ca display space time diagram dimensional picture vertically strings dimensional ca lattice configurations successive time step white squares corresponding cells state black squares corresponding cells state 
space time diagrams displayed 
show actions levin gkl binary state ca random initial configurations different densities 
cases time ca relaxes fixed pattern case case patterns fact fixed points gkl ca 
reached applications ca change pattern 
gkl ca discussed 
ca interest models physical processes physical systems consist large number simple components cells modified local interactions acting produce global complex behavior 
class dissipative dynamical systems class elementary dimensional ca exhibit full spectrum dynamical behavior fixed points seen limit cycles periodic behavior unpredictable chaotic behavior 
wolfram considered coarse classification ca behavior terms categories 
proposed classes intention capturing possible ca behavior class initial configurations relax transient period fixed configuration 
class initial configurations relax transient period fixed point temporally periodic cycle configurations depends initial configuration 
class initial configurations relax transient period chaotic behavior 
term chaotic rest refers apparently unpredictable space time behavior 
class initial configurations result complex localized structures long lived 
wolfram state requirements membership class precisely 
categories derived dynamical systems theory class rigorously defined 
pointed finite lattices finite number possible configurations rules ultimately lead periodic behavior 
class refers type periodic behavior cycles periods shorter 
cellular automata computation ca interest computational devices theoretical tools practical highly efficient parallel machines 
computation context ca possible meanings 
common meaning ca useful computational task 
rule interpreted program initial configuration interpreted input ca runs specified number time steps reaches goal pattern possibly fixed point pattern 
final pattern interpreted output 
example ca perform image processing tasks 
second meaning computation ca ca certain special initial configurations capable universal computation 
ca right initial configuration simulate programmable computer complete logical gates timing devices 
conway game life ca construction universal computation game life 
similar constructions dimensional ca 
wolfram speculated class rules capacity universal computation 
informality definition class mention difficulty proving rule capable universal computation hypothesis impossible verify 
third meaning computation ca involves interpreting behavior ca ensemble initial configurations kind intrinsic computation 
computation interpreted performance useful transformation input produce output 
measured terms generic structural computational elements memory information production information transfer logical operations 
important emphasize measurement intrinsic computational elements rely semantics utility preceding computation types 
elements detected quantified specific useful computation performed ca enhancing edges image computing digits 
notion intrinsic computation central crutchfield hanson young 
generally ca capacity kinds dynamical behaviors capacity kinds computational behaviors 
reasons addition computational ease simulating ca considered class models studying dynamical behavior computational ability related 
similar questions addressed context dynamical systems including dynamical systems iterated maps differential equations boolean networks recurrent neural networks 
confine discussion ca 
background rephrase broad questions section context ca properties ca nontrivial computation 
particular capacity nontrivial computation senses described require ca region rule space near transition ordered chaotic behavior 
ca rules evolved perform nontrivial computation evolution tend select rules near transition chaos 

structure ca rule space decade number studies addressing question 
focus langton empirical investigations second question terms structure space ca rules 
relationship questions third evolving ca described subsequently 
major difficulties understanding structure space ca rules relation computational capability discrete nature 
contrast theory bifurcations continuous state dynamical systems appears little geometry ca space notion smoothly changing ca get nearby behavior 
attempt emulate langton defined parameter varies incrementally single output bits turned rule table 
ca rule table computed follows 
state ca state chosen arbitrarily quiescent 
ca rule fraction non quiescent output states rule table 
binary state ca chosen quiescent state simply fraction output bits rule table 
typically ca rules value 
binary ca number strongly peaked due combinatorial dependence radius number states symmetric due symmetry exchanging generally increased ca move having homogeneous rule tables having heterogeneous 
langton performed range monte carlo samples dimensional ca attempt characterize average behavior function 
notion average behavior intended capture behavior observed randomly chosen initial configuration ca randomly selected fixed subspace 
observation incremented average behavior rules passes regimes fixed point periodic complex chaotic 
example average behavior low rule relax fixed point relatively short transient phase 
increased rules tend relax periodic patterns relatively short transient phase 
reaches critical value rules tend longer longer transient phases 
additionally behavior regime exhibits long lived complex non periodic non random patterns 
increased average transient length decreases rules tend relax apparently random space time patterns 
actual value depends actual path ca incremented 
behavioral regimes roughly correspond wolfram classes 
langton claim increased classes passed order 
notes increased observes phase transition highly ordered highly disordered dynamics analogous phase transition solid fluid states matter 
langton increased regimes occur reverse order subject constraints 
state ca behavior necessarily symmetric values complex regime occurs 
determined 
standard practice langton various statistics single site entropy site mutual information transient length classify ca behavior 
additional step correlate behavior statistics 
langton monte carlo samples showed correlation statistics 
averaged statistics reveal sharp transition average behavior basic property phase transition macroscopic highly averaged quantities marked changes 
note langton gave evidence limit increasing number states transition region narrows 
main result indicates states obeyed strong quiescence requirement 
state neighborhood consisting entirely state map graph average difference pattern spreading rate large number randomly chosen ca function 
adapted permission author 
vertical scale provided 
class dimensional infinite state stochastic cellular automata sharp transition single site entropy 
existence critical dependence critical region width clear finite state ca 
packard empirically determined rough values ca looking difference pattern spreading rate function 
spreading rate measure unpredictability spatio temporal patterns possible measure chaotic behavior 
analogous lyapunov exponent continuous state dynamical systems 
case ca indicates average propagation speed information space time rate production local information 
large number rules sampled ca estimated 
average selected ca taken average spreading rate 
results reproduced 
seen low high vanishes intermediate maximal critical regions centered rises falls gradually 
shown values variance high 
true single site entropy site mutual information function 
behavior particular rule different average behavior value 
interpretations averages somewhat problematic 
behavioral structure ca rule space parameterized statistics taken langton packard monte carlo simulations 
various problems correlating behavior discussed section 
detailed analysis problems :10.1.1.48.3602
investigating li 
cf 
appendix define onset non zero mean field theory estimate terms state ca 
value formula setting roughly matches value onset non zero seen 
structure ca rule space reported 
claim predicts dynamical behavior space rules large 
apparently intended behavioral predictor space elementary ca rules possibly rules 

ca rule space computation langton hypothesizes ca computational capability related average dynamical behavior claimed predict 
particular hypothesizes ca capable performing nontrivial computation including universal computation vicinity phase transitions order chaos near values 
hypothesis relies basic observation computation theory form computation requires memory information storage communication information transmission interaction stored transmitted information 
properties universal computation requires memory communication arbitrary distances time space 
complex computation requires significantly long transients space time correlation lengths case universal computation arbitrarily long transients correlations required 
langton claim phenomena seen near values near phase transitions order chaos 
intuition langton notion computation edge chaos ca 

evolving ca empirical studies described addressed relationship dynamical behavior ca revealed statistics 
studies correlate behavior independent measure computation 
packard addressed issue genetic algorithm ga evolve ca rules perform particular computation 
experiment meant test hypotheses ca rules able perform complex computations near values ca rules evolved perform complex computation evolution tend select rules near values 
computational task example ca original experiment consisted evolving state dimensional ca 
neighborhood cell consists neighbors side 
computational task ca decide initial configuration contains half initial configuration contains half desired behavior ca number time steps relax fixed point pattern initial configuration contains half desired behavior ca number time steps relax fixed point contrasted analysis computation onset chaos particular discussion structure ca space 
pattern initial configuration contains exactly half desired behavior undefined 
avoided practice requiring ca lattice odd length 
desired ca invariant patterns denote density lattice configuration density configuration time threshold density classification classification task count nontrivial computation ca 
term rigorously defined possible definition computation memory requirement increases computation corresponds recognition non regular language information transmitted significant space time distances order 
definition classification task thought nontrivial computation small radius ca 
effective minimum amount memory proportional log equivalent counter register required track excess serial scan initial pattern 
distributed lattice information transfer long space time distances occur 
supported ca non local interactions different neighborhoods period time 
packard cited rule constructed levin performs task 
levin gkl ca defined rule si si majority si si si si si majority si si si si state site time words rule says neighborhood adjacent cells state central cell new state decided majority vote left neighbor cell cells left away 
likewise state central cell new state decided majority vote right neighbor cell cells right away 
gives space time diagrams action gkl rule initial configuration initial configuration seen ca eventually converges fixed point transient phase spatial temporal transfer information local neighborhoods takes place local information interacts local information produce desired final state 
crudely gkl ca successively classifies local densities locality range increasing time 
regions ambiguity signal propagated 
seen checkerboard pattern propagated spatial directions vertical white black boundary 
signals indicate classification larger scale 
note signals locally result signal patterns propagate density patterns increased decreased rule 
simple sense ca strategy performing computational task 
claimed gkl ca performs task true approximation 
gkl rule invented purpose performing fraction correct classifications cell lattice cell lattice cell lattice experimental performance gkl rule function task 
performance plots lattice sizes size lattice ga runs 
particular computational task part studies reliable computation phase transitions spatial dimension 
goal example find ca behavior robust small errors rule update configuration 
proved gkl rule attracting patterns 
attracting patterns invariant patterns perturbed small amount return pattern 
turns basins attraction patterns precisely initial configurations respectively 
finite lattices gkl rule classify initial configurations criterion significant number incorrect attractor reached 
set experimental measures gkl ca classification performance displayed 
plot ran gkl ca randomly generated initial configurations close densities 
fraction correct classifications plotted 
rule run fixed point reached maximum number time steps equal done ca different lattice sizes 
note approximately initial configurations misclassified 
incorrect classifications initial configurations fact worst performances occur error region narrows increasing lattice size 
gkl rule table appears perform computational task complexity minimum deviation edge chaos hypothesis ca computation 
gkl rule puts right center chaotic region 
may puzzling clearly gkl rule produce chaotic behavior transient asymptotic epochs far fact 
parameter intended correlate average behavior terms attractor basin attraction sense 
differs substantially notion example 
attractor refers invariant time periodic pattern basin attraction means set finite lattice configurations relaxing 
ca rules value 
recall represents average large number randomly chosen ca rules shown plot values variance high 
mentioned behavior particular rule value different average behavior value 
point expect value close rule performs task 
largely task symmetric respect exchange suppose example rule carries task 
implies neighborhoods rule table map output bit output bit 
turn means initial configurations action rule decrease number opposite desired action 
rule acts decrease number initial configuration risks producing intermediate configuration lead original assumption rule carries task correctly fixed point misclassifying initial configuration 
similar argument holds direction rule value greater 
informal argument shows rule misclassify certain initial configurations 
generally away rule initial configurations 
rules may perform fairly classifying initial configurations correctly 
expect rule performs reasonably task sense close gkl ca average performance shown value close 
analysis points problem task evolutionary goal order study relationship evolution computation 
shown ca values occur roughly hypothesis tested original experiment ga tend select rules close values 
classification tasks range values required performance simply function task specifically example underlying exchange symmetry task implies ca exists task acceptable performance level 
directly invalidate adaptation hypothesis claims correlation average behavior presents problems classification tasks way gain evidence generic relation computational capability 
original experiment packard ga evolve ca rules perform task 
ga started randomly generated initial population ca rules 
rule represented bit string containing output bits rule table 
bit position leftmost position string state neighborhood mapped bit position string state neighborhood mapped 
initial population randomly generated constrained uniformly distributed values 
rule population evaluated ability perform classification task choosing initial configuration random running ca initial configuration specified number time steps final time step measuring fraction cells lattice correct state 
initial configurations correct final state cell initial configurations correct final state cell 
example ca run initial configuration final time step lattice contained ca score initial configuration 
fitness rule simply rule average score set initial configurations 
rule population packard generated set initial configurations uniformly distributed values 
packard ga worked follows 
generation 
fitness rule population calculated 

population ranked fitness 

fraction lowest fitness rules removed 

removed rules replaced new rules formed crossover mutation remaining rules 
crossover strings involves randomly selecting position strings exchanging parts strings position 
mutation involves flipping bits string low probability 
diversity enforcement scheme prevent population converging early losing diversity 
rule formed close hamming distance number matching bits existing rules population fitness decreased 
results packard experiment displayed 
histograms display observed frequency rules ga population function rules merged number different runs 
top graph gives data initial generation 
seen rules uniformly distributed values 
middle graph gives data final generation case ga run generations 
rules cluster regions seen comparison difference pattern spreading rate plot reprinted bottom 
note individual run produced rules peak middle graph runs merged peaks appear 
packard interpreted results evidence hypothesis ability complex computation required evolution tends select rules near transition chaos 
argues langton result intuitively sense rules near transition chaos capability selectively communicate information complex structures space time enabling computation slight variation method 
measuring fraction correct states final lattice ga measured fraction correct states configurations small number final time steps 
prevented ga evolving rules temporally periodic viz 
patterns alternated rules obtained higher average fitness early generations landing correct phase oscillation initial configuration 
time step classification incorrect 
experiments slightly different method address problem 
explained subsection 
prob rule prob rule results original experiment ga evolution ca classification task 
top figures populations ca generations respectively versus 
bottom reproduced 
adapted permission author 

new experiments step study general hold carried set experiments similar just described 
unable obtain exact details original experiment parameters exact population size ga mutation rate 
result felt reasonable values various parameters 
carried number parameter sensitivity tests indicated varying parameters small bounds change qualitative results 
details experiments experiments original ca rules population 
bit strings representing rules length size search space huge number possible ca rules tests ca rule carried lattices length periodic boundary conditions 
population size roughly population size original experiment 
initial population generated random constrained uniformly distributed different values 
rule fitness estimated running rule randomly generated initial configurations uniformly distributed 
exactly half initial configurations exactly half allow rule run maximum number iterations new selected rule poisson distribution mean 
measured maximum amount time gkl ca reach invariant pattern large number initial configurations lattice size 
rule fitness average score fraction cell states correct iteration initial configurations 
term fitness function proportional fitness contrast second fitness function performance fitness described 
new set initial configurations generated generation 
generation rules population tested set 
notice fitness function stochastic fitness rule may vary small amount generation generation depending set initial configurations testing 
necessary exact symmetry initial configurations generation avoid early biases selected rules 
say initial configurations initial configurations rules close obtain slightly higher fitness rules close rules close map initial configurations rule say case classify initial configurations correctly rule classify correctly 
slight differences fitness large effect initial generation rules fitness close ga selects best rules slightly better worst rules 
biases representative rules early population 
bias persist generations 
may necessary allow maximum number iterations vary 
early tests smaller sets fixed initial configurations problem packard reported fixed period rules evolve alternate rules adapted small set initial configurations fixed landing correct pattern initial configuration time step move opposite pattern wrong classification time step 
rules poorly tested different set initial configurations evidence fitting 
ga similar packard ga fraction new strings generation generation gap 
population ordered fitness top half population set elite strings copied modification generation 
ga practitioners familiar nonoverlapping generations may sound small generation gap 
testing rule training cases necessarily provide reliable gauge fitness larger set training cases selected gap way making cut allowing rules survive tested initial configurations 
new set initial configurations produced generation rules copied modification retested new set 
rule performs survives large number generations genuinely better rule selected tested large set initial configurations 
alternative method test rule generation larger set initial configurations amount compute time involved method unnecessarily wasteful 
effort example go testing weak rules safely early method 
remaining half population new generation created crossover mutation previous generation population 
pairs parent rules chosen random replacement entire previous population 
pair single crossover point selected random offspring created exchanging subparts parent crossover point 
offspring undergo mutation 
mutation consists flipping randomly chosen bit string 
number mutations string chosen poisson distribution mean equivalent bit mutation rate 
ga practitioners may high mutation rate take account generation half population copied modification 
results proportional fitness experiment performed different runs ga parameters described different random number seed 
run ga iterated generations 
running ga longer generations result improved fitness 
results set runs displayed 
histogram frequency rules initial populations function merging rules initial populations total number rules represented histogram 
bins histogram ones packard width 
packard highest bin contained rules rules consist merged bin immediately lower bin 
said earlier initial population consists randomly generated rules uniformly spread values 
plotted mean best fitness values bin 
expected set randomly method producing non elite strings differs non elite strings formed crossover mutation elite strings entire population 
observed statistically significant differences tests mechanism modest difference time scale 
fraction total rules fraction total rules results experiment proportional fitness 
top histogram plots function frequencies rules merged initial generations runs 
bottom histogram plots frequencies rules merged final generations generation runs 
axis divided bins length 
rules included rightmost bin 
histogram best cross mean circle fitnesses plotted bin 
axis interval fitnesses 
best fitness mean fitness best fitness mean fitness generated rules fitness function 
best fitnesses slightly higher low high bins 
rules output bits correctly classify low density high density initial configurations 
addition ca obtain small partial credit high density low density initial configurations 
rules fitness higher 
shows histogram final generation merging rules final generations runs 
mean best fitness values bin plotted 
final generation mean fitnesses bin 
exceptions central bin mean fitness leftmost bin mean fitness 
leftmost bin contains rules right bin upper limit 
standard deviations mean fitness bin shown approximately leftmost bin standard deviation 
best fitnesses bin leftmost bin best fitness 
fitness function gkl rule fitness ga rule fitness 
mentioned fitness function stochastic rule assigned different fitness time fitness function evaluated 
standard deviation fitness scheme rule approximately 
indicates differences best fitnesses plotted histogram significant leftmost bin 
lower mean fitness central bin due fact rules bin largely come non elite rules generated crossover mutation final generation 
combinatorial effect density ca rules function highly peaked noted 
return combinatorial drift effect shortly 
rules middle bin undergone selection tend lower fitnesses rules selected elite 
effect disappears includes elite rules generation runs 
seen difference mean fitness disappears height central bin decreased half 
results strikingly different results original experiment 
final generation histogram rules clustered 
rules regions 
rules cluster closer ratio variances distributions 
recall clustering expect basic exchange symmetry task 
rough similarity presence peaks centered dip phenomenon explain shortly key understanding ga working 
significant differences similarity 
original experiments peaks bins centered 
peaks close centered neighboring bins 
ratio original current peak spread roughly factor 
additionally final generation histogram highest bin populations roughly times high central bin fraction total rules histogram including elite rules final generations runs cf 
proportional fitness function 
best fitness mean fitness highest bins roughly times high central bin 
final generation histogram shows presence rules bin rules central bins 
similar original experiment run population clustered peak 
histograms merge runs peaks appear 
illustrated displays histograms final generation individual runs 
runs population clustered left central bin run clustered right center 
fact different runs result different clustering locations performed runs merged results performing single run larger population 
method yielded peak 
said different way independent population size run driven population organized fit individuals appear earliest 
examining ensemble individual runs reveals details evolutionary dynamics 
asymmetry heights peaks results small statistical asymmetry results runs 
runs rules clustered lower bin runs rules clustered higher bin 
difference significant explains small asymmetry peaks heights 
extended runs generations fitnesses increase basic shape histogram change significantly 
fraction total rules fraction total rules histograms final generations individual runs ga employing proportional fitness 
run population rules 
final distribution rules runs performed resembled histograms 
effects drift results experiments suggest task evolutionary process modeled genetic algorithm tends select rules 
expect theoretical discussion concerning task symmetries 
delay section discussion curious feature near viz 
dip surrounded peaks 
focus larger scale clustering region 
understand clustering need understand degree selection rules close due intrinsic selection pressure degree due drift 
drift refer force derives combinatorial aspects ca space explored random selection genetic drift effects crossover mutation 
intrinsic effects random selection crossover mutation move population irrespective selection pressure 
illustrated histogram mosaic 
histograms show frequencies rules population function generations rules merged runs selection fitness turned 
runs fitness rules population calculated generation selection elite group strings performed random 
runs remains 
fitness selection drift force 
seen effects random selection crossover mutation generation population largely drifted region clustering increasingly pronounced run continues 
drift related combinatorics space bit strings 
binary ca rules neighborhood size space consists binary strings length denoting subspace ca fixed ca see size subspace binomially distributed respect ca distribution symmetric tightly peaked variance vast majority rules 
steepness binomial distribution near maximum gives indication magnitude drift force 
note histogram gives ga rough approximation distribution 
drift powerful force moving population cluster 
comparison gives rule frequency versus histograms runs proportional fitness experiment generations 
histogram displayed 
gives merged data entire population run generations 
similar mosaic plotting elite strings generation looks qualitatively similar 
looks roughly similar generation 
main difference generations indicates rapid peaking 
increased speed movement center seen presumably due additional evolutionary pressure proportional fitness 
generation new appears 
peak center begun shrink significantly surrounding selection mosaic rule frequency versus histograms generations populations evolved genetic algorithm selection fitness function calculated 
histogram merged runs run population rules 
generation number upper left corner histogram 
proportional fitness mosaic rule frequency versus histograms generations merged ga runs proportional fitness 
run population rules 
bins rival magnitude 
generation right center bin exceeded central bin generation histogram developed peaks surrounding dip center 
dip increasingly pronounced run continues stabilizes generation 
differences generations shows population structure generation entirely due drift 
generation distinctive features population indicates new qualitatively different unique properties due selection mechanism 
peaks represent symmetry breaking evolutionary process rules individual run initially clustered move side central bin generation 
causes symmetry breaking discussed subsection 
evolutionary mechanisms symmetry breaking dip point move away questions related original experiment concentrate mechanisms involved producing results 
major questions need answered final generation significantly fewer rules central bin surrounding bins 
causes symmetry breaking begins near generation seen 
terms answer obtained detailed analysis ga runs 
course ca evolution ga roughly falls strategy epochs 
epoch associated innovation discovered ga solving problem 
absolute time innovations appear run varies somewhat run basically passes epochs succession 
epochs shown plots best fitness mean fitness elite strings mean fitness population versus generation typical run ga beginnings epochs pointed best fitness plot 
epoch begins generation 
epoch randomly generated rules epoch starts generation best fitness initial generation approximately values uniformly distributed 
rule fitter rule seen rules low high tend slightly higher fitness 
strategy called derives elementary aspect task 
rules specialize configurations mapping high density neighborhoods ca rule table specialize configurations mapping low density neighborhoods 
epoch discovery halves rule table second epoch begins rule discovered neighborhood patterns rule table map neighborhood patterns rule table map 
coding scheme roughly fitness epoch epoch epoch best fitness elite mean fitness population mean fitness generation best fitness elite mean fitness population mean fitness versus generation typical run 
beginnings epochs pointed best fitness plot 
epoch begins generation 
correlated left right halves rule table neighborhoods respectively 
encoding strategy presumably easy ga discover due single point crossover tendency preserve contiguous sections rule table 
differs accidental strategy epoch organization rule table output bits roughly associated densities neighborhood patterns 
significant attempt distinguishing initial configurations vice versa 
fitness function fitness rules approximately significantly higher fitness initial random rules 
innovation typically occurs generations run displayed occurred generation seen steep rise best fitness plot generation 
rules tend close 
possible variations rules similar fitness rules close dominate population 
natural tendency population drift cause clustering seen generation 
generations population tends explore small variations broad strategy 
seen leveling best fitness plot generations 
epoch growing blocks epoch begins ga discovers new strategies 
strategy increase size sufficiently large block adjacent nearly adjacent second strategy increase size sufficiently large block adjacent nearly adjacent examples strategies illustrated figures 
figures give space time diagrams epoch rule increases sufficiently large blocks adjacent nearly adjacent diagrams iterated time steps time displayed shorter actual time allotted ga 


classification incorrect partial credit correct 
space time diagrams rules marked epoch different runs ga illustrates action rule discovered generation run 
rule means rule maps neighborhoods 
strategy map initial configurations configurations produces initial configuration contains sufficiently large block case increases size block 
left space time diagram shows rule evolves initial configuration final lattice produces fairly score 
right space time diagram shows rule evolves initial configuration initial configuration contains sufficiently large blocks adjacent nearly adjacent size blocks quickly increased yield final lattice perfect score 
fitness rule generation 
illustrates action second rule discovered generation run 
rule means rule maps neighborhoods 
strategy inverse previous rule 
maps initial configurations initial configuration contains sufficiently large block case increases size block 
left space time diagram illustrates initial configuration sufficiently large block appears initial configuration increased size yielding perfect score 
right space time diagram shows action rule initial configuration neighborhoods mapped final configuration contains yielding fairly high score 
fitness rule generation 
space time diagrams epoch rule increases sufficiently large blocks adjacent nearly adjacent initial configuration maps correct classification pattern initial configuration correctly classified partial credit 
general idea strategies rely statistical fluctuations initial configurations 
initial configuration contain sufficiently large block adjacent nearly adjacent rule increases region size yield correct classification 
similarly holds ca respect blocks initial configurations short strategies assuming presence sufficiently large block predictor 
similar strategies discovered run 
typically emerge generation 
strategy increased blocks blocks 
strategies result significant jump fitness typical fitnesses instances strategies range 
jump fitness seen run approximately generation marked epoch 
epoch substantial increase fitness associated symmetry breaking population 
symmetry breaking involves deciding increase blocks blocks gkl rule perfectly symmetric respect increase blocks ga hand tends discover strategy discovered tends take population moving population side 
causes symmetry breaking explained 
instances epoch strategies typically number problems 
seen figures rules rely partial credit achieve fairly high fitness structurally incorrect classification 
typically get perfect scores initial configurations 
rules mistakes classification 
common types classification errors illustrated 
illustrates space time diagrams illustrating types classification errors committed epoch rules growing block sea growing blocks initial configuration slowly correct fixed point occur iteration generating block sea growing incorrect fixed point occurs iteration 
initial configuration densities 
space time diagrams epoch rule increases sufficiently large blocks adjacent nearly adjacent 
initial configurations correctly classified 
rule increasing small block misclassifying initial configuration illustrates rule increase blocks fast initial configuration leaving incorrect bits final lattice 
illustrates creation block appear initial configuration ultimately leading misclassification 
rules produced diagrams come epoch various ga runs 
increase fitness seen generation due refinements basic strategies correct problems extent 
epoch reaching staying maximal fitness runs best fitness typically maximum value generation 
occurs approximately generation marked epoch 
best fitness increase significantly ga simply finds number variations best strategies roughly fitness 
extended runs generations see significant increase best fitness 
actions best rules generation separate runs shown figures 
leftmost space time diagrams initial configurations rightmost diagrams initial configurations rule illustrated strategy map initial configurations sufficiently large block adjacent nearly adjacent increased 
rule shown opposite strategy 
rules fitness 
better tuned versions rules figures 
space time diagrams epoch rule increases sufficiently large blocks adjacent nearly adjacent 
initial configurations correctly classified 
symmetry breaking epoch notice values rules described bins centered 
fact easier ga discover versions successful strategies close discover close instances rules 

reason rules high low specializing 
rules low map neighborhoods increase sufficiently large blocks appear 
rules high specialize opposite direction 
rule easily specialize way 
reason successful rule grows sufficiently large blocks say avoid creating sufficiently large block initial configuration half doing lead increase block produce incorrect answer seen 
easy way rule avoid creating sufficiently large block low 
ensures low density initial configurations quickly map seen 
likewise rule increases sufficiently large blocks safer rule high value avoid creating sufficiently large blocks existed 
rule close safety margin may inadvertently create block lead wrong answer 
final element contributes difficulty finding rules combinatorially large number rules 
effect search space larger global search difficult 
locally adequate rule rules close hamming distance reachable mutation markedly better 
successful versions epoch strategies discovered epoch variants spread population successful rules low high side 
explains shift clustering seen generations peaked distribution clear generation 
rules run cluster peak specializing way 
believe type symmetry breaking may key mechanism determines population dynamics ga success lack thereof optimization 
analysis symmetry breaking argument earlier best rules task close 
rules ga fitness high fitness gkl rule exactly 
evolved rules significantly classification errors gkl rule seen measured fitness best evolved rules worse larger lattice sizes gkl rule fitness remains roughly lattice sizes 
obtain fitness gkl rule number careful balances rule table achieved 
evidently hard ga especially light symmetries task suboptimal breaking ga performance evolved rules recall proportional fitness rule fraction correct cell states final time step averaged initial configurations 
fitness gives rule partial credit getting final cell states correct 
actual task relax depending initial configuration 
order measure evolved rules perform task define performance rule fraction times rule correctly classifies initial configurations averaged large number initial configurations 
credit initial configuration relaxes exactly correct fixed point number time steps 
measured performance elite rules final generations runs testing randomly generated initial configurations uniformly distributed interval letting rule iterate initial condition time steps 
displays mean performance diamonds best performance squares bin 
shows mean performances bin lower mean fitnesses elite rules shown best performance bin roughly best fitness bin 
cases best performance bin slightly higher best fitness shown 
different sets initial conditions calculate fitness performance 
difference produce small variations fitness performance values 
best performance measured 
measure performance gkl rule 
ga discovered rule performed gkl rule generations 
addition measure performance fittest evolved rules larger lattice sizes performances decrease significantly gkl rule remains roughly 
fraction total rules performances rules evolved function 
elite rules generation merged runs included histogram 
mean performance bin open diamonds best performance bin black squares plotted 
performance fitness criterion best performance mean performance ga evolve better performing rules task 
test carried additional experiment performance defined previous section fitness criterion 
generation rule tested initial configurations uniformly distributed density values 
experiment rule fitness fraction initial configurations correctly classified 
initial configuration considered incorrectly classified bits final lattice incorrect 
aside modified fitness function ga remained proportional fitness experiments 
performed runs ga generations 
results gives histogram plotting frequencies elite rules generation runs function 
seen shape histogram peaks centered dip 
shape results symmetry breaking effect occurred proportional fitness case runs evolved essentially strategies epoch strategies described earlier 
best mean performances comparable best performances proportional fitness case best performances 
performance function best rules evolved performance fitness plotted lattice sizes lattice size testing rules ga runs 
rule strategy similar shown increases sufficiently large blocks adjacent nearly adjacent procedure plots described earlier 
seen performance measure significantly worse gkl rule cf 
especially larger lattice sizes 
worst performances larger lattice sizes centered slightly 
initial conditions ca relax fixed point detailed inspection results revealed fraction total rules results experiment performance fitness criterion 
histogram plots frequencies elite rules merged final generations generation runs performance fitness function 
best performance mean performance initial condition slightly ca relaxing fixed point result rule strategy increasing sufficiently large blocks appropriate size increase evolved lattice 
larger lattices probability blocks initial conditions increases closer initial conditions blocks occur 
ca tested blocks occured initial conditions slightly initial conditions classified incorrectly 
shows keeping lattice size fixed ga evolution lead fitting particular lattice size 
plan experiment varying lattice size evolution attempt prevent fitting 
adding diversity enforcement mechanism description epochs ga search explains results experiment explain difference results original experiment reported 
difference ga original inclusion original diversity enforcement scheme penalized newly formed rules similar hamming distance existing rules population 
test effect scheme results set experiments included similar scheme 
scheme time new string created crossover mutation average hamming distance new string elite strings strings copied unchanged measured 
average distance string length bits new string allowed new population 
new strings continue created crossover mutation new strings met diversity criterion 
note diversity enforcement schemes developed ga literature crowding 
results experiment 
histogram fraction correct classifications fraction total rules cell lattice cell lattice cell lattice performance best rules evolved performance fitness plotted function 
performance plots lattice sizes size lattice ga runs 
rule 
results experiment mechanism added ga histogram plots frequencies rules merged entire population generation runs diversity enforcement scheme 
best fitness mean fitness represents merged rules entire population generation runs ga proportional fitness function diversity enforcement scheme 
seen histogram similar 
major difference significantly lower mean fitness middle leftmost bins results increased requirement diversity final non elite population 
conclude similar diversity enforcement scheme responsible difference results results 
differences results original experiment seen results strikingly different reported 
experimental results theoretical argument successful rules task close lead conclude interpretation original results giving evidence hypotheses concerning evolution computation correct 
know accounted differences results obtained original experiment 
speculate differences due additional mechanisms ga original experiment reported 
example original experiment included number additional sources randomness regular injection new random rules various values higher mutation rate experiment 
sources randomness may slowed ga search high fitness rules prevented converging rules close 
experimental results theoretical analysis give strong reason believe clustering close seen artifact mechanisms particular ga result computational advantage conferred regions 
results different qualitative similarity versus histograms cases contained peaks separated dip center 
noted histogram peaks closer factor possible original results due mechanism similar epoch sensitivity initial configuration population asymmetry ii symmetry breaking observed epoch described 
combined additional forces additional sources randomness original ga kept rules far away 
unfortunately best mean fitnesses bins reported original experiment 
consequence know peaks original histogram contained high fitness rules contained rules fit rules bins 
results basic symmetry problem suggest 

general discussion shown results reported demonstrated results original experiment hold experiments 
conclude original experiment give firm evidence hypotheses meant test rules capable performing complex computation close values second ca rules evolved ga perform nontrivial computation evolution tend select rules close values 
argued theoretically experimental results suggest successful rules performing classification task close particular value depends particular task 
class computational tasks values associated edge chaos correlated ability rules perform task 
results disprove hypothesis computational capability correlated phase transitions ca rule space 
general phenomena noted dynamical systems 
generally computational capacity evolving systems may require dynamical properties characteristic phase transitions increase complexity 
shown published experimental support cited hypotheses relating computational capability ca reproduced 
remainder section step back particular experiments discuss general terms ideas motivated studies 
dynamical behavior computation noted earlier langton evidence certain caveats regarding radius number states correlation behavior average ca average initial configuration 
behavior characterized terms quantities single site entropy site mutual information spreading rate average transient length 
correlation quite low high values predict fixed point short period behavior 
intermediate values large degree variation behavior 
precise correlation values location behavioral phase transition described langton limit infinite remarks experimental results concerned relationship dynamical behavior ca 
directly address relationship computational capability ca 
basic hypothesis correlates computational capability rules capable complex particular universal computation near values 
far ca concerned hypothesis intuition complex computation supported short period chaotic regimes phenomena apparently occur complex non periodic non chaotic regimes long results concerning computation ca phase transitions 
individual ca known time exhibit phase transitions requisite divergence correlation length required infinite memory capacity context continuous state dynamical systems shown direct relationship intrinsic computational capability process degree randomness process phase transition order chaos 
computational capability quantified statistical complexity measure amount memory process detection embedded computational mechanism equivalent stack automaton transients long space time correlation necessary support complex computation 
far experimental evidence correlating independent measure computation 
packard experiment intended address issue involved independent measure computation performance particular complex computational task shown experiments provide evidence hypothesis linking values computational ability 
problem hypotheses rigorously formulated 
hypotheses put forth interpreted mean rule performing complex computation exemplified task close shown false argument correct performance task requires 
hypotheses concerned generic statistical properties ca rule space average behavior average ca notion average behavior better defined 
additionally appropriate measures dynamical behavior computational capability formulated notion edge chaos defined 
argument complex computation occur chaotic regimes may intuitively correct theoretical framework strong experimental evidence contrary 
hanson crutchfield developed method filtering chaotic domains space time diagram ca revealing particles non periodic non chaotic properties structures wolfram class ca :10.1.1.48.3602:10.1.1.48.3602
appropriate filter applied complex structures uncovered spacetime diagram human eye statistics appears completely random 
extreme example conceivable filters applied seemingly chaotic ca reveal ca implementing universal computer guns implementing gates 
hanson crutchfield results strikingly illustrate apparent complexity behavior apparent computational capability depend implicit filter imposed chosen statistics 
kind computation ca care 
section phrases complex computation computational capability somewhat loosely 
discussed section different interpretations notion computation ca 
notion ca able perform complex computation task ca performs computation initial configurations different notion ca capable special set initial configurations simulating universal computer 
langton speculations regarding relationship dynamical behavior computational capability concerned implication capability sustain long transients long correlation lengths necessary notions computation 
computationally capable taken mean capable initial configuration universal computation ask particularly important property ca focus 
ca vehicle study relationship phase transitions computation emphasis universal computation 
want ca scientific models practical computational tools focus capacity universal computation may misguided 
ca model natural process turbulence currently limited interest know process principle capable universal computation universal computation arise specially engineered initial configuration natural process extremely encounter 
wants understand emergent computation natural phenomena modeled ca try understand computation ca intrinsically principle capable doing special initial configurations :10.1.1.48.3602
understanding conditions capacity universal computation possible value understanding natural systems modeled ca 
general point new deep 
analogous arguments put forth context neural networks example 
constructions universal computation neural networks psychologists argued little understanding brains minds natural world 
similarly wants ca parallel computer solving real problem face recognition inefficient practically impossible solve problem say programming conway game life ca universal computer simulates action desired face recognizer 
understanding conditions universal computation possible ca practical value 
addition clear drive universal computational capabilities important force evolution biological organisms 
substantially computationally capable properties play frequent robust role 
asking conditions evolution create entities including ca capable universal computation may great importance understanding natural evolutionary mechanisms 
short mathematically important know ca principle capable universal computation 
argue means scientifically interesting property ca 
point property help scientists understanding emergence complexity nature harnessing computational capabilities ca solve real problems 

main purpose study examine clarify evidence various hypotheses related evolution dynamics computation cellular automata 
hope study shed new constructive light issues 
result study identified number evolutionary mechanisms role combinatorial drift role symmetry impediments emerging computational strategies caused symmetry breaking 
example breaking goal task symmetries early generations impediment optimization individuals population 
symmetry breaking results kind suboptimal speciation population stable meta stable long times 
symmetry breaking effects described may similar symmetry breaking phenomena bilateral symmetry handedness emerge biological evolution 
goal develop rigorous framework understanding mechanisms context evolving ca 
believe deep understanding mechanisms relatively simple context yield insights understanding evolutionary processes general successfully applying evolutionary computation methods complex problems 
experiments reproduce results reported believe original conception gas evolve computation ca important idea 
aside potential studying various theoretical issues potential practical side significant 
mentioned earlier ca increasingly studied class efficient parallel computers main bottleneck applying ca widely parallel computation programming general difficult program ca perform complex tasks 
results suggest ga promise method accomplishing programming automatically 
order test ga effectiveness compared search methods performed additional experiment comparing performance ga task performance simple hill climbing method 
ga significantly outperformed hill climbing reaching higher fitnesses equivalent number fitness evaluations 
gives evidence relative effectiveness gas compared simple gradient ascent methods programming ca 
koza evolved ca rules different type representation scheme topic substantial practical interest study relationship representation ga success tasks 
research supported santa fe institute adaptive computation core research external faculty programs university california berkeley contract afosr 
farmer jim hanson jen chris langton li cris moore norman packard helpful discussions suggestions concerning project 
dickinson terry jones technical advice 
berlekamp conway guy 
winning ways mathematical plays 
academic press new york ny 
creutz 
deterministic ising dynamics 
ann 
phys 
crutchfield hanson :10.1.1.48.3602
turbulent pattern bases cellular automata 
technical report santa fe institute 
appear physica crutchfield young 
inferring statistical complexity 
physical review letters 
crutchfield young 
computation onset chaos 
zurek editor complexity entropy physics information pages 
addison wesley redwood city ca 
de maes 
levin automaton revisited 
journal statistical physics 
farmer toffoli wolfram editors 
cellular automata proceedings interdisciplinary workshop 
north holland amsterdam 
levin 
dimensional uniform arrays wash finite islands 
probl 

inform 
goldberg 
genetic algorithms search optimization machine learning 
addison wesley reading ma 
holmes 
nonlinear oscillations dynamical systems bifurcations vector fields 
springer verlag new york 
editor 
cellular automata 
mit press cambridge ma 
hanson crutchfield 
attractor basin portrait cellular automaton 
journal statistical physics 
holland 
adaptation natural artificial systems 
university michigan press ann arbor mi 
kauffman 
requirements evolvability complex systems orderly dynamics frozen components 
physica 
kauffman johnson 
evolution edge chaos coupled fitness landscapes poised states evolutionary 
langton taylor farmer rasmussen editors artificial life ii pages redwood city ca 
addison wesley 
koza 
genetic programming programming computers means natural selection 
mit press cambridge ma 
langton 
computation edge chaos phase transitions emergent computation 
physica 
li 
non local cellular automata 
nadel stein editors lectures complex systems pages 
addison wesley redwood city ca 
li packard 
structure elementary cellular automata rule space 
complex systems 
li packard langton 
transition phenomena cellular automata rule space 
physica 
lindgren 
universal computation simple dimensional cellular automaton 
complex systems 
packard 
complexity growing patterns cellular automata 
editors dynamical behavior automata theory applications 
academic press new york 
packard 
personal communication 
packard 
adaptation edge chaos 
kelso editors dynamic patterns complex systems pages singapore 
world scientific 
pollack 
induction dynamical recognizers 
machine learning 
preston duff 
modern cellular automata 
plenum new york 
rosenfeld 
parallel image processing cellular arrays 
computer 
rumelhart mcclelland 
pdp models general issues cognitive science 
rumelhart mcclelland editors parallel distributed processing volume cambridge ma 
mit press 
sontag 
neural networks universal computing devices 
technical report rutgers center systems control rutgers university new brunswick nj 
toffoli margolus 
cellular automata machines new environment modeling 
mit press cambridge ma 
wolfram 
universality complexity cellular automata 
physica 
wolfram editor 
theory applications cellular automata 
world scientific singapore 
langton 
sharp phase transition deterministic cellular automata 
physica 
wuensche lesser 
global dynamics cellular automata 
santa fe institute studies sciences complexity 
addison wesley reading ma 

