semantic matching web services capabilities massimo paolucci kawamura terry payne katia sycara carnegie mellon university pittsburgh pa usa cs cmu edu research development center toshiba toshiba cho ku kawasaki japan isl rdc toshiba jp 
web moving collection pages collection services interoperate internet 
step interoperation location services help solution problem 
claim location web services semantic match declarative description service sought description service offered 
furthermore claim match outside representation capabilities registries uddi languages wsdl 
propose solution daml daml language service description show service capabilities profile section daml description semantic match advertisements requests performed 
web services provide new model web sites exchange dynamic information demand 
change especially important business community provides opportunity conduct business faster efficiently 
opportunity manage supply chains dynamically achieve greatest advantage market expected create great value added increase productivity 
hand automatic management supply chain opens new challenges web services locate services provide solution problems second services interoperate compose complex services 
concentrate problem location web services basis capabilities provide 
solution problem requires language express capabilities services specification matching algorithm service advertisements service requests recognizes request matches advertisement 
adopt daml service description language provides semantically view web services spans description capabilities service specification service interaction protocol actual messages exchanges web services 
daml ability describe semantics web services stark contrast emerging xml standards related web services 
standards soap wsdl designed provide descriptions message transport mechanisms describing interface service 
soap wsdl help automatic location web services basis capabilities 
emerging xml standard uddi provides registry businesses web services 
uddi describes businesses physical attributes name address services provide 
addition uddi descriptions augmented set attributes called tmodels describe additional features classification services taxonomies naics 
uddi represent service capabilities help search services basis provide 
limitation shared xml standards described lack explicit semantics identical xml descriptions may mean different things depending context 
proves major limitation capability matching fact crucial aspect capability matching done semantic level 
case requester know services provided time contact providers directly need search furthermore advertisers requesters different perspectives different knowledge service 
major problem capability matching unrealistic expect advertisements requests equivalent exists service fulfills exactly needs requester 
example service may advertise financial news provider requester may need service reports stock quotes 
task matching engine knowledge world semantic understanding advertisement request recognize degree mismatch retrieve advertisements services closely match request 
daml supports need semantic representation services tight connection daml oil 
daml oil supports subsumption reasoning taxonomies concepts 
furthermore daml oil allows definition relations concepts instance possible express statements part generally relation exists main limitation daml oil lack definition formed formulae associated theorem prover 
limitations affect expressivity advertisements requests language reasoning supports rich allow description wide range services allow matches descriptions 
rest describe daml profiles detail discuss matching algorithm advertisements requests described daml recognizes various degrees matching 
conclude showing daml implemented version matching algorithm provide capability matching uddi registry 
daml profiles objective service profiles describe functionalities web service wants provide community 
web services may functionalities advertised 
example book selling service may provide different functionalities allow services browse data base find books interest second allow buy books 
book seller choice advertising just book buying service browsing functionality buying functionality 
case service public provide browsing services implicitly allowing services browse data base buying book 
contrast advertising book selling functionality browsing service hides browsing functionality requesters intend buy 
decision functionalities advertise determines service requester intends browse buy select service advertises buying browsing capabilities advertises buying 
shows upper ontology service profiles example service profile advertise service shown 
logically divided parts bottom consists definition actor records information provider service 
middle part describes functional attributes quality rating rating assigned service geographic radius specifies geographic constraints service 
constraints prevent request chinese food issued pittsburgh served restaurant shanghai 
top part represents functional description service 
describes capabilities service terms inputs outputs preconditions effects 
input required service order produce desired output 
example inputs book buying service title author desired book 
output confirmation order received successfully processed 
preconditions represent conditions world true successful execution service 
book buying example precondition valid credit card 
execution service may result actions world conditions described effects agent 
buying book example credit card charged book changes property 
service profiles describe service requests services provided 
request consists description hypothetical service performs task needed requester 
instance requester needs latest quotes stock market may compile profile hypothetical financial news service 
requests sent registries web services match fig 

upper ontology service profiles profiles advertised services identify services provide best match 
example request shown 
matching engine envision web wide infrastructure web services supported set registries function directories 
registries record advertisements services come line support search services provide set requested functionalities 
section describe algorithm matching service advertisements service requests 
advertisement matches request advertisement describes service sufficiently similar service requested 
course problem definition specify sufficiently similar means 
strongest interpretation advertisement request sufficiently similar describe exactly service 
definition restrictive advertisers requesters prior agreement service represented furthermore different objectives 
restrictive criteria matching bound fail recognize similarities advertisements requests 
accommodate softer definition sufficiently similar need allow matching engines perform flexible matches matches recognize degree similarity advertisements requests 
service requesters allowed decide degree flexibility system 
concede little flexibility reduce likelihood finding services match requirements minimize false positives increasing false negatives 
hand increasing flexibility match achieve opposite effect reduce false negatives expense increase false positives 
additional problem related performing flexible matches matching engine open exploitation advertisements requests generic attempt maximize likelihood matching 
instance service may advertise provider honest precise 
similarly requester may ask service specifying exactly expects 
matching engine reduce efficacy ranking advertisements basis degree match request 
nutshell expect matching engine satisfy desiderata matching engine support flexible semantic matching advertisements requests basis ontologies available services matching engine 
despite flexibility match matching engine minimize false positives false negatives 
furthermore requesting service control amount matching flexibility allows system 
matching engine encourage advertisers requesters honest descriptions cost paying price matched matched inappropriately 
matching process efficient burden requester excessive delays prevent effectiveness 
algorithm propose strives satisfy desiderata 
semantic matching daml ontologies advertisements requests refer daml concepts associated semantic 
daml matching process perform inferences subsumption hierarchy leading recognition semantic matches despite syntactic differences difference modeling abstractions advertisements requests 
daml supports accuracy matching recognized relation advertisement request derive daml ontologies registry 
furthermore semantic daml descriptions allows define ranking function distinguishes multiple degrees matching 
matching process necessarily complex mechanism may lead costly computations 
order increase efficiency algorithm described adopts set strategies rapidly prune advertisements guaranteed match request improving efficiency matching engine maintaining precision 
matching algorithm main rational algorithm advertisement matches request service provided advertiser requester 
specifically advertisement matches request outputs request matched outputs advertisement inputs advertisement matched inputs request 
criteria guarantees matched service satisfies needs requester requester provides matched service inputs needs operate correctly 
section discuss matching algorithm detail 
main loop request matched advertisements recorded registry discuss rules matching advertisement request show degree match computed results match sorted 
conclude section example discussion matching algorithm proposed satisfies desiderata listed 
main control loop matching algorithm shown 
requests matched advertisements stored registry 
match request advertisements recorded scored find matches highest degree 
match request empty list forall adv advertisements match request adv append request adv return sort fig 

main control loop match advertisement request consists match outputs request outputs advertisement inputs advertisement inputs request 
algorithm output matching described detail match recognized output request matching output advertisement 
degree success depends degree match detected 
request output matched advertisement output match fails 
matching inputs computed algorithm order request advertisement reversed request outputs matched advertisement outputs advertisement inputs matched request inputs 
exact forall outr find outa outr outa fail return fail return sort fig 

algorithm output matching degree match outputs inputs depends relation concepts associated inputs outputs 
instance consider request output specified vehicle matches advertisement car selling service outputs car price 
ontology fragment shown matching engine match vehicle car matching price car subsumed vehicle subsumption relation vehicle price 
outr outa outa outr return exact outr subclassof outa return exact outa subsumes outr return plugin outr subsumes outa return subsumes fail fig 

rules degree match assignment degree match determined minimal distance concepts taxonomy tree 
differentiate degrees matching rule displayed outr corresponds output request outa corresponds output advertisement 
rational degree assignment described 
daml oil supports multiple inheritance may path nodes 
optimistically select shortest degree match inputs assigned way arguments reversed ina inr vehicle sedan bus car station thing ancestor isa relation legend fig 

fragment vehicle ontology exact outr outa outr outa equivalent label exact 
second clause bit complicated outr subclassof outa result exact assumption advertising outa provider commits provide outputs consistent immediate subtype outa 
say ontology fragment provider advertising car commits provide sedan station 
provides station better strategy restrict advertisement 
plug outa subsumes outr outa set includes outr words outa plugged place outr 
example service provides type 
vehicles service expects station 
rule acknowledges weaker relation outr outa case exact case expect service advertises output vehicle provides type cars expect provides type 
subsumes outr subsumes outa provider completely fulfill request 
requester may provider achieve goals needs modify plan perform requests complete task 
fail failure occurs subsumption relation advertisement request identified 
degrees match organized discrete scale exact matches course preferable plugin matches best level output returned probably requester expects 
subsumes third best level requirements requester partially satisfied advertised service provide specific subclassof daml defines subsumption relation exact match defined subsumption relation 
rules plug matching apply concepts subclassof relation holds 
cases requester desires 
fail lower level represents unacceptable result 
piece algorithm discuss scoring system sort resulting matches 
rules sort shown 
rationale requester expects foremost provider achieves output requested highest degree 
reflected rules establishing main sorting criteria select match highest score outputs 
input matching secondary score break ties equally scoring outputs requester may solve mismatch information available expectations provider additional problem solving querying registry find additional providers 
match match match output match output match match match output match output match input match input match match match output match output match input match input match match fig 

rules degree match assignment example looking cars section show simple example request service matched service advertisements 
service advertised car selling service price reports car bought price 
strip version advertisement service shown shows inputs expected service restricted instances concept price defined concepts ontology outputs service generates instance concept car defined ontology vehicle shown 
request service expressed format advertisement possible request expressed 
request shows service sought sells specifically accepts inputs instances price generates outputs instances sedan 
match advertisement request requires matching inputs outputs restrictions respectively 
ease example inputs restricted concept match exactly 
algorithm output matching shown recognizes car sedan exact match car superclass sedan vehicle ontology displayed 
result advertisement request match exactly exact match inputs outputs 
consequence car service advertised reported requester 
profile profile rdf id 
profile servicename profile servicename 
profile 
profile 
input 
profile rdf id price input 
profile price profile 
profile rdf resource daml price 
profile 
input 
output 
profile rdf id car output 
profile car profile 
profile rdf resource vehicle daml car 
profile 
output 
profile profile 
fig 

advertisement car selling service example shows case advertisement request look superficially different match exactly ontological information 
relaxed matches result advertising service produces general outputs vehicle car 
case result lower degree matching plugin exact output advertisement subsumes output request 
failure result outputs advertisement instances bus subsumption relation recognized outputs advertisement outputs request 
satisfaction desiderata matching algorithm supports flexible semantic match advertisements requests 
thing matters matching matching engine draw inference inputs outputs advertisements requests basis ontologies available registry 
furthermore result match hard true false depends degree similarity concepts match 
despite flexibility matching engine rejects advertisements match requests accepts low score matches may unsatisfactory requester 
requester specify types match wishes matching engine perform constraining minimal acceptable degree match 
amount search required may constrained forcing matching engine restrict search close subset concepts ontology 
desiderata matching process efficient currently testing 
profile profile rdf id 
input 
profile rdf id price input 
profile price profile 
profile rdf resource daml price 
profile 
input 
output 
profile rdf id sedan output 
profile sedan profile 
profile rdf resource file data daml sedan 
profile 
output 
fig 

advertisement car selling service application uddi universal description discovery integration uddi industrial initiative goal create internet wide registry web services 
uddi allows businesses register contact points web services provide 
uddi supports registration attributes services construct called tmodel 
tmodel form meta data provides system information services 
instance services specify wsdl specification referring publicly known wsdl tmodel 
general tmodels functions tag type service advertised specific conventions uddi registry applied 
second provide keys associated service specific value 
example service may specify category north american industry classification system naics published census 
uddi provides poor search facilities allows keyword search businesses services tmodels bases names 
addition services searched type specification tmodels 
instance possible search services adhere wsdl representation value associated tmodel 
search uddi restricted keyword matching form inference flexible match keywords performed 
implemented matching engine augment uddi registries additional semantic layer performs capability matching 
matching engine implemented algorithm described takes advantage daml ontologies published web 
result services advertise daml advertised uddi registry currently ibm test site 
daml matching engine daml web ontologies daml uddi matchmaker fig 

architecture daml uddi matchmaker retrieved uddi keyword search 
addition capability matching engine 
architecture combined daml uddi matchmaker described 
matchmaker receives messages outside communication module recognizing message advertisement communication module sends daml uddi translator constructs uddi service description information service provider service name 
result registration uddi id service 
id combined capability description advertisement sent daml matching engine stores advertisement capability matching 
requests follow opposite direction communicator module sends daml matchmaker performs capability matching 
result matching advertisement providers selected uddi service record 
combination uddi records advertisements send requester 
actual daml matching engine architecture displayed 
receiving request matching engine component selects advertisements relevant current request 
uses daml oil reasoner compute level match 
turn daml oil reasoner uses data compute matching process 
takes advantage index advertisements fast retrieval matching time 
system show limits uddi value added daml support functional descriptions matching functional descriptions services 
current form uddi provide support finding services basis tasks perform 
impossible ask uddi car selling service uddi request daml data oil daml matching engine base fig 

architecture daml matching engine expressed 
adding additional layer service capability matching daml service capability language allow services select bases ultimately interoperate solve problems autonomously minimizing human intervention 
discussion daml service profile take challenge representing functionalities web services 
contributes challenge describing matching engine allows matching advertisements requests bases capabilities describe 
major improvement current technology allows location services keyword matching 
show matching engine improve functionalities existing web service repositories uddi 
service profile evolution representation agents open multi agents systems mas specifically larks :10.1.1.21.522
daml larks represents services bases inputs outputs 
major difference daml larks daml relies daml ontologies larks allowed incremental creation associating needed concepts directly advertisements requests 
systems rely similar matching algorithms 
larks identifies set filters progressively restrict number advertisements candidates match 
filtering mechanism allows services strike advantageous trade precision matching time required match higher precision longer time matchmaker needs delivering answer 
matching engine described restrictive larks filters performs logic ontological inferences advertisements requests 
filters adopted larks efficiently ported daml suggest similar filters achieve results 
multi agent community addressed problem capability matching open mas suggesting number solutions 
oaa represents agents solvables representation queries agent replies :10.1.1.31.3660
problem oaa solvables agent know request time solvables provider replies solvables known provider selected 
ultimately impasse solved abstracting solvables information exchanged 
infosleuth associates ontological concept type services agents perform matching time selects services perform desired function 
practice infosleuth uses extensive representation functionalities concept possible type services daml intensive representation services implicitly defined transformation produce 
defined ontology daml oil describe mobile devices matching engine locate devices bases features 
unfortunately publicly available descriptions system sketchy 
software reuse systems need index software components appropriately efficient precise retrieval 
software reuse differs sharply attempt represent match web services principally software reuse requires programmers automatic services construct request software component search furthermore aim daml automatic interaction services software reuse requires programmers program interaction different software components 
difference techniques faceted classification help automatic queries represent features providers goals achieves 
techniques analogical software reuse share representation components goals achieved software roles conditions 
extent approach similar requires complex compilation case match 
wing describe specification language matching mechanism software components bear similarities matching algorithm described 
allow multiple degrees matching 
depart match semantics associated inputs outputs consider type information 
reuse models upml shares greater similarities representation representing inputs outputs preconditions effects tasks 
upml requires programmers loop 
despite superficial similarities case reasoning systems cbr specifically cbr supported planning described different 
goal case base reasoning systems retrieve previously learned case adapt problem solving case facing 
extent fix retrieval function flexible retrieval mechanism 
furthermore profile retrieved repository applied case requesting service provider interact script described daml process model 
result research effort shows web services find automatically interoperate autonomously need hardcoded interactions 
matching algorithm provides way automatic dynamic discovery selection interoperation web services crucial feature web services dynamically reconfigure supply chain better match changes market 

jim blythe manuela veloso 
analogical replay efficient conditional planning 
proceedings th national conference artificial intelligence aaai pages 
aaai press mit press 

census bureau 
north american industry classification system naics 
www census gov www naics html 

erik christensen francisco curbera greg meredith weerawarana 
web services description language wsdl 
www org tr note wsdl 

daml joint committee 
daml oil march language 
www daml org daml oil index html 

dieter fensel richard benjamins enrico motta bob wielinga 
upml framework knowledge system reuse 
ijcai pages 

david martin adam cheyer douglas moran 
open agent architecture framework building distributed software systems 
applied artificial intelligence 

massonet van lamsweerde 
analogical reuse requirements frameworks 
proc 
rd ieee int 
symp 
requirements engineering re pages 

yun peng 
semantic resolution inf multi agent systems 
proc goddard jpl workshop radical agent concepts 

brad perry malcolm taylor amy unruh 
information aggregation agent interaction patterns infosleuth 
cia 
acm press 

prieto diaz 
implementing faceted classification software reuse 
communications acm 

katia sycara klusch 
brokering matchmaking coordination agent societies survey 
omicini editor coordination internet agents 
springer 

katia sycara klusch seth lu 
dynamic service matchmaking agents open information environments 
acm sigmod record special issue semantic interoperability global information systems 

uddi 
uddi technical white 
www uddi org 


extensible markup language xml second edition 
www org tr rec xml 


soap version working draft december 
www org tr wd soap part 

amy jeannette wing 
specification matching software components 
acm transactions software engineering methodology 
