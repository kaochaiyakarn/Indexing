revising knowledge multi agent system preferences enrico tran cao son department computer science new mexico state university cs nmsu edu 
extend revision programming framework logic framework express maintain constraints knowledge bases different forms preferences 
preferences allow users introduce bias way agents update knowledge meet set constraints 
particular provide way select alternative feasible revisions allow generation revisions presence conflicting constraints relaxing set satisfied constraints soft constraints 
methodology computing preferred revisions answer set programming 
multi agents systems mas require coordination mechanisms facilitate dynamic collaboration intelligent components goal meeting local global objectives 
case mas coordination structure provide communication protocols link agents having inter related objectives facilitate mediation integration exchanged knowledge 
centralized coordination architectures mediator architectures fully distributed architectures distributed knowledge networks face problem non monotonically updating agent theories incorporate knowledge derived different agents 
problem compounded fact incoming knowledge contradictory conflicting local knowledge incoming items incomplete unreliable 
number formalisms proposed support dynamic updates propositional logic programming theories provide convenient frameworks describing knowledge base updates constraints ensure user defined principles consistency 
types formalisms proved effective context mas 
formalisms knowledge base updates revision programming 
revision programming formalism describe enforce constraints belief sets databases generally arbitrary knowledge bases 
revision programming formalism introduced 
framework initial database represents initial state belief set knowledge base 
revision program collection revision rules describe constraints content database 
revision rules quite complex usually form conditions 
instance typical revision rule may express condition certain elements database elements absent element absent database 
revision rules offer natural way encoding policies integration agent generated knowledge mediator architecture management inter agent exchanges 
addition declarative specification constraint knowledge base revision rule computational interpretation indicating way satisfy constraint 
justified revisions semantics assigns knowledge base possibly empty family revisions 
revision represents updated version original knowledge base satisfies constraints provided revision program 
revisions obtained performing additions deletions elements original knowledge base content revision rules 
revision chosen update original knowledge base revision program 
mechanisms revision programming handle updates knowledge base belief set may lead indeterminate situations 
constraints imposed knowledge base interpreted hard constraints met costs unnatural domains overlapping conflicting consistency constraints may legal reasoning suppliers broker agents supply chain leading generation acceptable revisions 
similarly situations specified constraints incomplete knowledge may lead revision programs provide multiple alternative revisions initial knowledge base 
situations acceptable cases single revision desired agents desire maintain unique view knowledge base 
preferences provide natural way address issues preferences allow revision programmer introduce bias focus generation revisions desirable directions 
preferences revisions rules preferences components revisions employed select way revisions computed ruling undesirable alternatives defeating conflicting constraints 
preference structures gaining relevance mas community key mechanism negotiation models mas coordination architectures 
propose extensions revision programming provide general mechanisms express different classes preferences justified needs knowledge integration mas 
basic underlying mechanism common extensions idea allowing classes revision rules treated soft revision rules 
revision allowed satisfy soft revision rules selected subsets user preferences express criteria select desired subsets soft revision rules 
approach section revision programs preferences dynamic partial orders established revision rules 
provides natural mechanism select preferred ways computing revisions prune revisions deemed interesting 
approach analogous ordered logic program prioritized logic program approach explored context logic programming :10.1.1.16.6052
labeled revision program revision program initial knowledge base enriched control program expresses preferences rules 
control program may include revision literals conditions initial knowledge base 
initial knowledge base control program revision program translated revision program regular justified revisions semantics 
approach provides preference capabilities similar supported minerva agent architecture 
second approach section generalizes revision programs weights costs associated components revision program revision rules database atoms 
weights aimed providing general criteria selection subsets soft revision rules considered computation revisions initial database 
different policies assigning weights considered allowing encoding powerful preference criteria revisions differ initial database number atoms 
level preference management addresses preference requirements described mas literature 
proposed approaches management preferences provide effective implementation schema translation answer set programming specifically smodels language 
leads effective ways compute preferred revisions initial database revision program preferences 
main contribution identification forms preferences specifically relevant revision programming paradigm justified needs knowledge maintenance integration mas investigation semantics implementation issues deriving 
related revision programming strongly related logic programming formalisms related works reasoning preferences logic programming 
section discuss differences approach research area 
logic programming preferences important source correct reasoning 
intuitively logic program developed represent problem intention semantics answer set founded semantics yield correct answers specific problem instances 
adding preferences rules way eliminate counter intuitive unwanted results 
program easier understand elaboration tolerant 
literature logic programming preferences find distinct ways handle preferences 
approach compile preferences program program set preferences pref new program pref defined answer set semantics preferred semantics respect pref :10.1.1.16.6052
second approach deals preferences rules defining new semantics logic programs preferences 
advantage approach require new semantics answer set solvers compute preferred semantics 
second approach hand provides direct treatment preferences 
section follows approach 
define notion revision program preferences labeled revision program preferences rules 
revision program preferences translate ordinary revision program define preferred justified revisions revision program space limitations allow provide comprehensive list literature area 
preferences justified revisions corresponding program 
treatment preferences similar 
section introduce different types preferences dealt appropriately second approach 
strongly related dynamic logic programming dlp 
dlp introduced mean update knowledge bases contain generalized logic programming rules 
roughly dlp ordered list generalized logic programs represents properties knowledge base time moment 
semantics dlp consideration sequence programs time point specifies rules applied derive state knowledge base 
shown dlp generalizes revision programming 
dlp extended deal preferences 
dlp preferences prioritized dlp pair labeled dlp language contain binary predicate dlp language contains binary predicate set constants includes rule labels programs 
intuitively represents knowledge different time moments way dlp exception preferences rules 
atom form represents fact rule preferred rule 
semantics prioritized dlp sure preference order rules reflected set consequences derivable knowledge base 
precisely conflicting rules derived consequence rule preferred consequence 
prioritized dlp deals preferences compilation approach 
fact approach coincides preferred answer sets extended logic programs dlp consists single program 
sense prioritized dlp approach similar approach described section add revision program preference relation rules define semantics revision program preferences compilation approach 
main difference prioritized dlp lies consider types preferences maximal number applicable rules weighted rules weighted atoms minimal size difference prioritized dlp 
plan investigate types preferences dlp 
dlp main representation language multi agent architecture 
take step direction revision programming preferences represent reason beliefs coordinated environment 
detailed comparison minerva planned near 
preliminaries revision programming section formal definition revision programs justified revision semantics properties 
elements finite universe called atoms 
subsets called databases 
expressions form atom called revision literals 
revision literal dual revision literal 
similarly dual dual revision literal denoted 
set revision literals coherent contain pair dual literals 
set atoms denote rule expression types atoms 
revision program collection revision rules 
revision rules declarative interpretation constraints databases 
instance rule imposes condition database database database 
revision rules computational imperative interpretation expresses way enforce constraint 
assume data items belong current database say data items belongs 
enforce constraint item added database removed case constraint removing adding item 
revision rule denote literal left hand side set literals right hand side respectively 
set atoms model satisfies revision literal resp resp 
set atoms model satisfies revision rule model revision literal body model 
set atoms model revision program model rule 
revision program 
necessary change model treated horn program built independent propositional atoms form 
collection revision literals describing elements change status transition database database called inertia set defined follows reduct respect pair databases denoted mean revision program obtained eliminating body rule literals 
necessary change program provides justification insertions deletions 
exactly changes posteriori justified context initial database putative revised database 
definition 
database justified revision database necessary change coherent basic properties justified revisions include 
database justified revision model 

database satisfies revision program unique justified revision 

justified revision minimal family model denotes symmetric difference 
words justified revisions database differ minimally database 
literals important property revision programs certain transformations shifts preserve justified revisions 
set transformation defined follows 
literal form 
set 
set atoms 
revision program obtained applying literal 
shifting theorem states databases database justified revision justified revision 
shifting theorem provides practical way compute justified revisions answer set programming engines smodels 
done executing steps 

revision program initial database apply transformation obtain revision program empty initial database 
converted logic program constraints replacing revision rules type replacing revision rules type constraints denote logic program constraints obtained revision program conversion 

compute answer sets 

transformation applied answer sets obtain justified revisions 
revision programs preferences section introduce revision programs preferences deal preferences rules revision program 
example motivate preferences revision rules 
syntax semantics discuss properties revision programs prefer ences 
motivational example assume number agents 
environment encoded set parameters 
agents perceive parameters environment provide perceived data observations controller 
observations represented atoms form name observed parameter value parameter name agent providing observation 
controller combines data received agents update view world includes exactly value parameter 
views world described atoms current value parameter name agent provided accepted value parameter 
initial database contains view world new observations arrive 
revision program denoted update view world composed rules type describe new observations rules types world par value agent observ par value agent world par value agent world par value agent agent agent value value 
rules type allow generate new value parameter world view new observation 
rules type enforce fact observation parameter update view 
easy see value parameter perceived exactly agent initial world view controller coherent justified revision reflects controller world view integrates agent observations arrive 
allow justified revisions agents perceive different data parameter time 
illustrate problem scenario 
assume agents provide observations parameter named denoting temperature room 
initially controller knows 
time receives new observations justified revision set observations necessary change respect incoherent includes observation second observation 
situation resolved placing preference values provided agents 
example know agent better temper sensor agent tell controller observations preferred 
described adding preferences form prefer names rules type containing respectively 
preference controller able derive justified revision contain 
agent broken temperature sensor provide temperature observations value determined world view updated correctly 
preference represents fixed order rule application creating revisions 
preferences dynamic 
example may prefer controller keep temperature observations agent available 
described preferences form prefer world temperature value observ temperature prefer world temperature value observ temperature names rules type containing respectively initial database view world new observations arrive 
syntax semantics labeled revision program pair revision program function assigns revision rule unique name label 
label rule denoted 
rule label denoted 
denote respectively 
set labels revision rules prefer denoted 

simplicity rule write indicate value assigned rule function 
preference rules expression form labels rules revision literals 
informally preference mean revision literals satisfied initial database literals satisfied revision prefer rule rule 
precisely body rule satisfied rule defeated ignored 
satisfied rule 
revision program preferences triple labeled revision program set preferences rules 
refer control program plays important role rules constructing revisions 
revision program preferences translated ordinary revision program follows 
universe obtained adding new atoms form prefer 
initial database define new revision program revision program consisting revision rules prefer prefer revision program contains rules preference satisfied contains rules prefer compilation approach dealing preferences define notion justified revisions initial database follows 
definition 
database justified revision exists justified revision 
example illustrates definition justified revisions respect revision programs preferences 
example 
program containing rules set preferences consists single preference prefer 
initial database 
revision program prefer prefer justified revision prefer justified prefer revision consider case initial database revision program 
justified revision conclude justified revision notice difference cases case rule defeated generating justified revision 
second case rules 
properties justified revision semantics revision programs preferences extends justified revision semantics ordinary revision programs 
precisely theorem 
database justified revision justified revision 
investigate properties revision programs preferences 
presence preferences expected justified revision model 
seen example 
omit observations revised database 
example 
program set consists preferences prefer prefer 
justified revision rules defeated model 
theorem shows preferred justified revision subset rules satisfied uniquely determined 
formulate theorem need notation 
subset 
denote program consisting rules 
theorem 
justified revision corresponding justified revision model program 
rest subsection discuss properties guarantee justified revision model program 
concentrate conditions set preferences 
obviously example suggests contain cycle rules 
example shows preferences placed pair rules body satisfied rule fired may result revisions models program 
example 
program set preferences consists prefer 
justified revision model 
define precisely conditions guarantee preferred justified revisions models revision programs 
define rules disjoint rules time creating revisions 
definition 
revision program preferences 
rules disjoint conditions satisfied incoherent 
prefer say set preferences selecting contains preferences disjoint rules 
definition 
revision program preferences said set selecting preferences rule rules disjoint 
say set preferences cycle free transitive closure preference relation contain cycle 
definition 
revision program preferences prefer occurs said cycle free rule belong transitive closure 
theorem shows conditions set preferences guarantee preferred justified revisions models original revision program 
prefer theorem 
revision program preferences set model 
theorem discusses shifting property revision programs preferences 
extend definition transformation set preferences rules 
preference rules form transformation preference set preferences transformation 
theorem 
revision program preferences 
databases database justified revision selecting preferences cycle free 
justified revision justified revision 
soft revision rules weights preferences rules section useful ways 
recover agents provide inconsistent data example section 
eliminate revisions 
example shows situations type preferences weak 
example 
consider example section agents observations determine value parameter 
assume quality updated observations yielded 
means preference rule type rule type vice versa 
see allowing rules computing revisions allow controller update world view observations inconsistent 
problem example resolved grouping rules type set allowing rule set creating revisions presence rules allow justified revisions 
inspired research constraint programming propose address situation justified revisions dividing revision program parts 
rules called hard rules soft rules respectively 
intuition rules satisfied revision revisions may satisfy subset impossible satisfy 
subset soft rules satisfied say optimal respect comparison criteria 
section investigate criteria discussed separate subsection 
maximal number rules 
goal find revisions satisfy rules number rules 
example motivates search type revisions 
definition precise 
definition preferred justified revision justified revision rules justified revisions 
preferred justified revision computed maximal number rules criteria extending translation revision programs answer set programming handle distinction hard soft rules 
objective determine justified revisions initial database subset maximal size justified revisions exist 
idea language extensions proposed smodels system choice rules statements 
intuitively soft rule accepted rejected program determine revisions 
assume rules uniquely numbered 
initial database translate program defined follows 
rule number rules added distinct new atom 
similarly rule number rules added maximize distinct new atom 
need enforce fact desire maximize number rules satisfied 
corresponds maximizing number true computed answer sets 
directly expressed statement number rules 
way system statement follows 
searches single model prints 
smodels prints better models 
model smodels prints correspond preferred justified revision 
notice occurrence translation requirement correct handling construct 
maximal subset rules variation definition section obtained satisfying maximal number soft rules desired satisfy maximal subset soft rules 
words goal find revisions satisfy rules maximal subset respect set inclusion rules 
precise definition follows 
definition preferred justified revision justified revision justified revisions 
procedure described section allows compute preferred justified revisions maximal number soft rules satisfied 
weights alternative maximal subset soft rules assign weights revisions select maximal minimal weight 
section consider different ways assigning weights revisions 
assign weight rule 
assign weight atoms 
cases goal find subset program revisions weight maximal 
weighted rules 
rule assigned weight number 
intuitively represents importance weight rule important satisfy 
maximum example 
reconsider example section 
rules type treated soft rules rules type treated hard rules 
rule weights select desired revisions 
example observed parameter value falls outside expected value range parameter may suggest agent provided observation faulty sensor 
may prefer observations closer expected range 
expressed associating rule type weight minimum expected values 
define rule weighted justified revision program weights rules 
definition called rule weighted justified revision conditions satisfied 
exists set rules justified revision 
set rules justified revision sum weights rules equal sum weights rules 
generalize implementation previous sections consider weighted rules 
underlying principle similar difference selection soft rules include driven goal maximizing total weight soft rules satisfied justified revision 
change need introduce maximize weighted atoms 
assigning weights rules assign weights implementation maximize statement 
assume denotes weight associated th rule 
rule maximize statement generated atoms universe 
atom universe assigned weight represented degree keep unchanged weight atom want change status database 
example presents situation type preferences desirable 
minimizing total weight revision 
example 
return example section partition rules hard soft rules example 
assume choice observation update view world principle stronger values parameters preferable denote stronger signal 
encoded associating weights form define preferred justified revision programs weight atoms 
definition called atom weighted justified revision conditions satisfied 
exists set rules justified revision 
set rules justified revision sum weights atoms greater equal sum weights atoms 
atom weighted revisions computed 
case selection rules included indirectly driven goal minimizing total weight atoms initial database justified revision 
observation revision program initial database justified revision 
observation computation weight difference original database minimize justified revision computed determining total weight true atoms obtained answer set generated program 
program compute preferred revisions encoded similarly done case maximal number rules weighted rules soft rule encoded choice rules 
difference making statement statement form atoms 
minimal size difference subsection consider justified revisions minimal size difference initial database 
example shows desirable different situations 
example 
assume department needs form committee problem 
department faculty members conditions committee members need satisfied 
head department provided initial proposal members committee 
task form committee satisfy conditions imposed faculty members differ initial proposal size symmetric difference initial proposal revision minimal 
problem set agents faculty members provides set requirements revision rules 
goal satisfy agent requirements way number changes initial database proposal 
assume faculty members ann bob chris david frank 
conditions impose committee initial proposal 
minimal size difference justified revisions 
size difference 
ordinary justified revisions include size difference equal 
definition captures minimal size different justified revision 
definition called minimal size difference justified revision conditions satisfied justified revision 
justified revision number atoms equal number atoms 
minimize minimal size difference justified revision computed way atom weighted justified revisions 
intuition minimizing total weight initial database justified revision minimize size 
accomplished replacing minimize statement minimize statement atoms 
notion preference pervasive applications context knowledge representation commonsense reasoning mas 
large number approaches proposed improve knowledge representation capabilities logic programming introducing different forms preferences 
novel extension revision programming framework provides foundations expressing general types preferences 
preferences provide ability defeat certain revision rules computation revisions allows reduce number revisions generated eventually leading single revision generate revisions presence conflicting revision rules 
proposed different preference schemes starting relatively dynamic partial order revision rules revision programs preferences moving general notion weights associated revision rules database atoms 
soft revision rules dynamically included excluded generation revisions depending optimization criteria weights revision minimization total weight associated revision 
provided motivating examples different preference schemes precise description preferred revisions computed answer set inference engine 

alferes dell acqua pereira 
compilation updates plus preferences 
logics artificial intelligence european conference pages 
springer 

alferes pereira 
updates plus preferences 
logics artificial intelligence european workshop jelia pages 
springer 

alferes dynamic updates non monotonic knowledge bases 
jlp 

brewka eiter 
preferred answer sets extended logic programs 
artificial intelligence 

delgrande schaub tompits 
framework compiling preferences logic programs 
theory practice logic programming march 

durfee 
coordination distributed problem solvers 
kluwer academic press 

eiter fink tompits 
methods declarative logic programming intelligent information agents 


faratin van de 
agent preference relations strict indifferent incomparable 
aamas 
acm 

gelfond son 
prioritized default theory 
selected papers workshop logic programming knowledge representation 
lnai 

la shoham 
conditional hierarchical multi agent preferences 
tark vii 

leite alferes pereira 
minerva dynamic logic programming agent architecture 
intelligent agents viii 
springer verlag 

liu ye 
commerce agents 
lecture notes ai springer verlag 

marek truszczy ski 
revision programming logic programming integrity constraints 
computer science logic springer verlag 

marek truszczy ski 
revision programming database updates integrity constraints 
icdt pages 
springer verlag 

marek truszczy ski 
revision programming 
theoretical computer science 

niemel simons 
efficient implementation founded stable model semantics 
lpnmr pages 
mit press 

prakken 
logical tools modeling legal arguments 
kluwer publishers 

przymusinski turner 
update means inference rules 
lpnmr 

sakama inoue 
updating extended logic programs abduction 
lp nmr 
springer verlag 
