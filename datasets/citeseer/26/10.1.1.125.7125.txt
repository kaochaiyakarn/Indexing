eurographics drettakis 
seidel guest editors volume number fast continuous collision detection rigid bodies st phane redon sabine coquillart inria france stephane redon sabine coquillart inria fr sc universit france univ fr introduces fast continuous collision detection technique polyhedral rigid bodies 
opposed collision detection techniques computation contact time objects inherently part algorithm 
method robustly prevent objects collisions misses objects thin large velocities 
method valid general objects polygon handles multiple moving objects acyclic articulated bodies efficient low high coherency situations 
method speed existent continuous collision detection methods parametric implicit rigid surfaces 
collision detection algorithms successfully coupled real time dynamics simulator 
various experiments conducted show method ability produce high quality interaction precise objects positioning example models tens thousands triangles couldn performed previous continuous methods 
categories subject descriptors acm ccs computer graphics animation virtual reality 
collision detection cd fundamental problem numerous domains 
typical examples computer graphics physically modeling animation robotics motion planning collision avoidance industrial applications virtual prototyping assembly tests video games 
haptics research created need algorithms able achieve rates 
collision detection methods usually split categories discrete methods previous collision detection methods discrete sample objects motions detect objects see example 
result methods may collisions tunneling effect 
adaptative time step predictive methods correct problem offline applications may suitable interactive applications relatively high constant frame rate required 
discrete collision detection requires backtracking methods compute contact time necessary constraintbased analytical dynamics simulations 
depending eurographics association blackwell publishers 
published blackwell publishers cowley road oxford ox jf uk main street ma usa 

precise car door positioning 
continuous collision detection technique described allows precisely objects interpenetration interactively position door 
car skeleton triangles 
door triangles models renault 
object complexity computational cost backtracking may unpredictably large mainly estimating penetration depth difficult problem example triangles penetrated object concave non connex 
typical problems encountered interaction technique described snyder haptics penetration problem major cause instability continuous methods opposed methods continuous methods compute time contact collision detection 
computation inherently part algorithm 
suitable robust interactive dynamics simulations guarantee collision free motions continuous methods usually slower discrete methods discrete ones contributes field introducing fast continuous method able compute collision times rigid polyhedral objects composed tens thousands triangles interactive rates 
knowledge see section possible previous continuous methods 
collision detection algorithms require particular topology objects polygon handle multiple moving objects efficient slow fast objects 
method handles acyclic articulated bodies speed previous continuous collision detection methods parametric implicit rigid surfaces 
algorithms described rely effective integration interval arithmetic ia hierarchies oriented bounding boxes obbs 
approaches benefit 
interval arithmetic robustly compute collision times objects features vertices edges faces derive conservative continuous overlap test moving obbs known discrete overlap test 
conversely bounding boxes help cull irrelevant elementary tests edge edge vertex face face vertex tests previous interval methods complex polyhedral objects 
section describes previous continuous methods 
section provides overview method 
details fixed rigid motion assumption recalls basic principles interval arithmetic bounding volume hierarchies 
section introduces continuous overlap test moving obbs presents elementary cd tests edge edge vertex face face vertex 
section briefly explains method may speed cd methods parametric implicit rigid surfaces 
section describes optimizations 
algorithms described coupled dynamics algorithms section presents various experiments conducted test interactive simulator 
section concludes gives research directions 
redon fast continuous collision detection rigid bodies 
previous relatively continuous collision detection cd techniques 
canny uses parameterization objects trajectories quaternions computes collision time solving low order polynomials algorithm high complexity doesn allow real time interaction large models 
redon parameterize trajectories rigid polyhedral bodies obtain motion similar canny approach extended hierarchies bounding spheres redon continuously detect collisions rigid polyhedral bodies real time 
spheres don fit objects approach handle moderately complex objects thousands triangles 
algorithm handles mobile object 
noted arbitrary rigid motions successions small time intervals allows realistic real time dynamics simulations 
cameron introduces spatio temporal extrusion determine contact moving csg objects 
due high computational cost extrusion operation object motions piecewise translational 
von herzen lipschitz bounds binary subdivision find contact time timedependent parametric surfaces 
hierarchies bounding spheres axis aligned bounding boxes computed collision detection speed method 
duff uses interval arithmetic binary subdivision detect collisions boolean combinations implicit surfaces 
snyder interval arithmetic interval newton methods significantly speed approaches simple culling test bounding spheres body problem 
algorithm interesting features computer graphics animations efficient handle real time interaction rigid bodies general polyhedral objects may considered unions parametric surfaces 
interval methods able handle parametric surfaces hierarchies bounding volumes speed detection unions objects 
consequently detecting collision complex polyhedral objects turned artificial body problem example see multiple elements algorithm snyder 
mirtich uses physical laws bound times impact able perform collision checks necessary 
lower bounds may difficult obtain complex motions varying timestep may suited interactive applications 
note methods perform discrete cd bounding volume hierarchies continuous cd polyhedral primitives methods perform cd bounding runtime initial final object bounding volume positions eurographics association blackwell publishers 
methods don ensure object trajectory bounded may collisions 
case bounding initial final object positions valid simpler single moving vertex 
case methods achieve continuous collision detection haptic rates 
overview 
arbitrary rigid motions redon uses arbitrary rigid motions 
successive objects positions determined fixed instants dynamics simulator user interface interpolated arbitrarily fixed rigid motion 
arbitrary meaning motion continuous rigid order get truly continuous collision detection method 
precisely interpolations performed objects positions time ti intentional objects positions time ti 
typically correspond display times 
interpolations occur frames 
provided simulation timestep small difference actual objects motions interpolated ones 
note approximation principle similar dynamics simulations dynamics equations discretized approximations move objects instants chosen simulator 
rigid motion differs arbitrary motion designed obtain algebraic collision test closed form contact time dynamics simulations 
isn required interval arithmetic find roots functions 
consequently rigid motion simply continuous constant rotational translational velocities 
clarity assume current time interval frames example 
motion frame homogeneous matrix redon fast continuous collision detection rigid bodies axis transformation matrix local frame 
respectively total amount rotation translation current time interval cos sin sin cos 
acyclic bodies motions composed starting root graph describing body 
eurographics association blackwell publishers 
note motions arbitrarily chosen provided continuous rigid 
example solution consists linearly interpolating independent parameters describing object position orientation successive frames 

interval arithmetic interval arithmetic computer graphics snyder interval arithmetic detect collisions parametric implicit surfaces explored von herzen duff snyder briefly interval arithmetic consists computing intervals numbers 
definition real interval ir generalized vector valued intervals 
xn ir ai xi bi set intervals real numbers denoted iir set vector valued intervals denoted iir elementary operations real numbers transposed intervals min ac ad bc bd max ac ad bc bd vector valued intervals iir operations performed coordinate 
algorithms described intervals bound function ranges intervals 
precisely function ir ir inclusion function iir iir associated interval ideal inclusion functions exactly bound function range interval equations inclusion functions required sine cosine functions 
continuous overlap test derived section inclusion function required abs function abs 
functions inclusion functions easily computed appropriate elementary operations equation recursively applied compute inclusion functions coordinates vertex vector 
coordinates mobile vertex frame xg xo vertex coordinates object frame po transformation matrix local object frame frame 
consequently coordinates inclusion functions xg operations performed intervals equation 
interest inclusion functions provide simple way robustly compute roots function ir 
simplest methods recursive binary subdivision method 
assume inclusion function available 
computed 
root may root may may fit exactly range may continuous 
case interval cut equal intervals computations performed smaller intervals 
process recursively performed interval width smaller pre determined threshold user defined precision collision detection see section 
case algorithm declares root 
shown continuous interval algorithm root 
note non empty interval method returns finite number intervals containing roots 
number intervals returned depend pre determined threshold 
snyder multidimensional interval root finding performed detect collision time varying parametric implicit surfaces 

bounding volume hierarchies bounding volume hierarchies bvh common strategy collision detection domains ray tracing example naturally related interval root finding 
briefly overlap tests bounding volumes cull irrelevant elementary tests objects parts 
assume example objects currently processed cd algorithm bounded sphere 
spheres don overlap collision objects 
spheres overlap may collision objects may spheres probably don exactly fit objects 
case spheres replaced unions smaller spheres overlap tests spheres recursively performed 
spheres sizes smaller pre determined threshold exact tests redon fast continuous collision detection rigid bodies performed object geometries example triangle triangle collision tests case triangle 
rigid objects hierarchies bounding volumes usually computed offline 
typical bounding volumes spheres axis aligned bounding boxes oriented bounding boxes dops spherical shells choose obb hierarchies performance wide range applications especially situations 
hierarchies binary trees built classical way noticed tightest hierarchies usually obtained min max method 
continuous collision detection section describes integrated collision detection algorithms known discrete overlap test obbs extended continuous case continuous cd functions polyhedral primitives vertices edges faces detailed 
precision problem naturally handled interval arithmetic 

collision detection obbs 
discrete overlap test efficient discrete overlap test static obbs probably described gottschalk relies separating axis theorem 
assume obb described axes center ta half sizes axes 
way second obb described axes center tb half sizes axes 
separating axis theorem states static obbs overlap fifteen separating axis tests fail 
separating test simple axis separates obbs ai ei bi fi fifteen sufficient axes deduced obbs axes ei ei 
continuous overlap test want continuously detect collisions determine moving obbs overlap time interval initial final position 
important point need conservative overlap test 
overlap occuring obbs detected fundamentally problem declare overlap occured hasn obb hierarchies traversal terminates collision missed 
note conservative tests collision detection methods example dops discrete obb test exact test continuous test introduced section conservative 
eurographics association blackwell publishers 
continuous overlap test constituted steps 
perform continuous version fifteen separating axis tests 

obbs overlap current time interval perform subdivision test determine current time interval subdivided 
continuous separating axis tests step easily derived discrete overlap test interval 
sides inequality continuous functions time depending obbs time dependent positions 
functions bounded interval arithmetic described section 
denote bound left side inequality denote bound right side inequality 
axis separating obbs time interval 
step consists performing fifteen continuous separating axis tests 
step detect axis separates obbs interval 
obbs may overlap time interval separated different axes motion 
detected step continuous test fifteen continuous separating axis tests fail obbs overlap 
interval root finding methods problem solved subdividing interval sophisticated methods reduce interval width newton interval methods order avoid automatic subdivisions computationally intensive methods propose second step simple subdivision test 
test heuristic similar spirit newton interval methods depends obbs velocities far cheaper compute 
subdivision test generally axis separating obbs instant won separating time interval objects move fast relatively sizes 
exactly subdivision test briefly obbs projected relative velocity directions 
relative velocity obbs centers time interval computed 
amounts consider second obb static 
assuming ta expressed frame velocity derived equation redon fast continuous collision detection rigid bodies ta lower bound current time interval pa va describe associated object 
computed simply equation differentiating matrix elements respect time 
similar relations hold second obb 
vr ta tb denote obbs centers relative velocity 
vr approximately length relative path followed obbs centers time interval 
time interval subdivided eurographics association blackwell publishers 
ai vr ei vr fi pre determined constant 
time interval isn subdivided obbs declared overlapped 
experiments indicate false hit results culled 

collision detection primitives polyhedral objects continuous collision detection somewhat simpler time consuming discrete collision detection contact configurations imply non degenerate contact types vertex face face vertex edge edge 
cd test formulated contact time root time dependant function edge edge case collision detected lines containing edges 
denotes edge denotes second edge collision occurs solutions equation computed interval root finding method described section 
solution kept corresponding contact point belongs edges 
vertex face face vertex cases collision detected vertex plane containing face 
denotes vertex denotes triangle collision occurs case solutions computed root finding method 
solution tr kept tr inside triangle tr tr tr 
note recursive root finding time interval tl tr subdivided intervals tl tm tm tr solutions recursively looked tl tm 
valid solution interval second interval tm tr recursively examined 
allows process stopped soon contact time 

collision detection precision subdivision method primitive primitive tests depends threshold defines maximal width interval subdivided determines collision detection precision 
threshold computed runtime depends location object features 
dt denotes small time interval length dl helical path followed object vertex dl dt dt associated parameters coordinates local frame 
denote maximum error allowed position subdivision method completes 
dl hold time interval returned 
enforce valid time interval may contain root subdivided long dt redon fast continuous collision detection rigid bodies contact position known advance similar bound computed vertices current elementary cd test 
interval width threshold defined lowest bounds 
objects primitives vertices edges faces convex ensures error allowed contact position enforced 

extension parametric implicit surfaces interval analysis detect collisions parametric implicit surfaces amounts compute runtime bounding boxes objects 
example ir ir denote parametric surface denote interval iir interval iir inclusion function definition axis aligned box bounding object part described noted snyder evaluating may highly time consuming complex objects structure describing object inclusion function traversed 
rigid parametric implicit surfaces hierarchy oriented bounding boxes precomputed continuous obb obb overlap test may quickly cull irrelevant tests underlying objects complexity 
actual objects geometry tested snyder algorithms leaf nodes collide 

optimizations section describes optimizations added system 
discrete tests order avoid unnecessary continuous obb obb overlap tests discrete overlap test performed obbs initial final positions continuous 
discrete tests find 
test application playing 
user test typical interaction situations object positioning slow fast motions resulting collisions 
static obbs overlap continuous test isn required isn performed 
implementation continuous overlap test approximately times slower discrete overlap test results significant speedup high coherency situations 
general configurations 
passing current collision time redon objects processed cd functions current collision time cct maintained passed cd functions 
example collision edges detected tc tests pair objects currently processed examine smaller time interval tc 
directional traversal descending obb child center closest center obb belonging object processed 
combined previous optimization allows rapidly find preliminary cct fast objects collide help avoid quadratic growth number obb obb tests happen object passed completely 
partial tests van den bergen notices axis separating obbs generally obb axis removes axes 
results moderate speedup system 
observed axes useful separate rotating objects 
coherence tables implemented coherence tables method introduced gottschalk briefly method consists storing terminal nodes bounding volumes test tree 
detecting collision bounding volume hierarchies tested terminal nodes previous frame 
may highly memory consuming especially large objects 
preliminary discrete test results low speedup roughly corresponds theoretical limit gottschalk eurographics association blackwell publishers 

second test application car skeleton bounces large cubic floor 
car manipulated user 
redon fast continuous collision detection rigid bodies continuous test approximately times slower discrete 
surprisingly usual trick didn speed computations 
pre computed values required trigonometric functions equation stored look tables 
gave significant result 
conjecture compiler uses strategy 
low level optimizations tried 
example processors offer local parallelism simd instructions single instructions multiple data 
lin report simd version discrete obb obb overlap test allows factor speedup continuous version probably benefit simd implementation 
profiling reveals roughly half total time spent overlap tests obbs speed interactive dynamics simulation significantly 
continuous overlap test microseconds ghz pentium pc 

results portable collision detection library algorithms described implemented successfully tested windows unix systems 
library coupled analytical constraintbased dynamics algorithms take advantage precise contact information contact instant contact position contact normal sent cd functions 
coupling performed classical way resulting simulator running ghz pentium pc megabytes memory windows operating system able perform interactive simulations models tens thousands triangles 
generally difficult compare collision detection methods mainly cd public domain difficult eurographics association blackwell publishers 

highly detailed door triangles 
door third test application 
estimate performance nowadays faster processors old data believe couldn achieved previous continuous methods essentially reasons exposed section 
interactive sessions specifically designed test simulator 
peripherals interaction 
interface mouse tedious precise tasks 
sure stereo glasses greatly increase quality interaction 
interactive session user able navigate scene check validity collision detection 
choose runtime order second order simulation 
depending world order mouse commands object velocities accelerations 
application involves models triangles see 
designed test typical interaction situations object positioning slow fast motions resulting collisions 
application allows simulator tested correctness robustness 
predicted arbitrary motions small time intervals isn conflicting realism requirements user eye 
applications designed test approach scalability 
involves skeleton renault sc nic car model triangles 
car skeleton manipulated user bounces large cubic floor 
second application user position car door triangles car skeleton bouncing test application 
despite unadapted interaction peripherals car door positioned precisely interactively difficulty figures 
continuous 
third test application door interactively positioned car skeleton 
continuous collision detection constraint simulation allows user precisely intuitively position door 
interpenetration occurs 
collision detection allows achieve precise object object interaction essential success kind task 

described fast continuous collision detection technique relies effective integration arbitrary rigid motions interval arithmetic obb hierarchies 
efficient continuous overlap test obbs derived known discrete test 
continuous test consists steps 
step interval version separating tests 
second step subdivision test heuristically determines current time interval subdivided obbs overlap 
various optimizations described experimented 
collision detection algorithms coupled analytical dynamics simulator takes advantage contact information contact time contact position contact normal 
interactive dynamics simulator allowed demonstrate resulting high quality interaction models composed tens thousands triangles interactive simulation robust precise interpenetration occurs 
noted major cause instability haptics comes uncontrolled object inter penetration algorithms force exerted haptic peripheral depends amount penetration 
amount penetration isn required virtual coupling method plan explore haptic interaction simulator algorithms described 
redon fast continuous collision detection rigid bodies 
engine removal 
engine easily removed car door mouse triangles models renault 
authors arnaud proofreading submission version implementing inventor parser able convert renault models renault providing car models 
model parts renault 
authors inria disc multimedia team producing accompanying videos 
go anonymous reviewers interesting useful remarks 
funded french ministry research perf rv project 

wong sun 
recode image collision detection algorithm 
journal visualization computer animation vol 
pp 


baraff 
curved surfaces coherence rigid body simulation 
computer graphics vol 
pp 

eurographics association blackwell publishers 

baraff 
interactive simulation solid rigid bodies 
ieee computer graphics applications vol 
pp 


cameron 
collision detection dimensional intersection testing 
ieee trans 
robotics automation 
june pp 

canny 
collision detection moving polyhedra 
ieee trans 
patt 
anal 
mach 
intell 
march pp 

cohen lin manocha ponamgi 
collide interactive exact collision detection system large scale environments 
proceedings acm interactive graphics conference acm monterey ca pp 


stanley brown 
issues haptic display tool 
int 
conf 
intelligent robots systems pittsburgh august 

duff 
interval arithmetic recursive subdivision implicit functions constructive solid geometry 
computer graphics july pp 


eckstein 
dynamic collision detection virtual reality applications 
th international conference central europe computer graphics visualization interactive digital media wscg pp 


garcia alonso serrano 
solving collision detection problem 
ieee computer graphic applications 

gilbert johnson keerthi 
fast procedure computing distance objects dimensional space 
journal robotics automation 

gottschalk 
collision queries oriented bounding boxes 
phd thesis 


gottschalk lin manocha 
obb tree hierarchical structure rapid interference detection 
siggraph conference proceedings annual conference series 
acm siggraph addison wesley august 

gregory lin gottschalk taylor 
fast accurate collision detection haptic interaction degree freedom force feedback device 
computational geometry theory applications 

gregory lin manocha 
degree freedom haptic display polygonal models proc 
ieee visualization 

hubbard 
collision detection interactive graphics applications 
ph thesis april 
eurographics association blackwell publishers 
redon fast continuous collision detection rigid bodies 
klosowski held mitchell 
efficient collision detection bounding volume hierarchies dops 
ieee transactions visualization computer graphics march volume number 

krishnan lin manocha 
spherical shell higher order bounding volume fast proximity queries 
appeared proceedings 


framework collision detection response 
th european simulation symposium ess pp 


lin gregory gottschalk taylor 
contact determination real time haptic interaction modeling editing painting 
proc 
workshop phantom user group 

mirtich 
impulse dynamic simulation rigid body systems 
phd thesis 
fall 

redon coquillart 
algebraic solution problem collision detection rigid polyhedral objects 
proceedings international conference robotics automation pp april 

redon coquillart 
contact arbitrary motions continuous collision detection 
proceedings ieee roman sep 

redon coquillart 
gauss constraints principle rigid body simulations 
proceedings ieee international conference robotics automation may 

interference detection rasterization 
journal visualization computer animation 

snyder 
interval analysis computer graphics 
computer graphics pages july 

snyder 
interactive tool placing curved surfaces interpenetration 
proceedings acm siggraph pages 

snyder woodbury fleischer barr interval methods multi point collisions time dependent curved surfaces 
computer graphics pp 
aug 

van den bergen 
efficient collision detection complex deformable models aabb trees 
journal graphics tools 

von herzen barr geometric collisions time dependent parametric surfaces 
computer graphics august pp 


