ace emergent algorithm highly uniform cluster formation chan adrian perrig carnegie mellon university pittsburgh pa perrig cmu edu 
efficient subdivision sensor network uniform non overlapping clusters physically close nodes important building block design efficient upper layer network functions routing broadcast data aggregation query processing 
ace algorithm results highly uniform cluster formation achieve packing efficiency close hexagonal close packing 
self organizing properties rounds feedback nodes algorithm induces emergent formation clusters efficient cover network significantly overlap clusters formed existing algorithms 
algorithm scale independent completes time proportional deployment density nodes regardless number nodes network 
ace requires knowledge geographic location requires small constant amount communications overhead 
large scale distributed sensor networks increasingly useful variety applications emergency response real time traffic monitoring critical infrastructure surveillance pollution monitoring building safety monitoring battlefield operations 
networks typically consist hundreds tens thousands low cost sensor nodes deployed individual installation random scattering 
nodes usually highly power constrained limited computation memory resources 
typically utilize intermittent wireless communication 
sensor network usually organized base stations connect sensor network control processing workstations external communications network 
clustering fundamental mechanism design scalable sensor network protocols 
clustering algorithm splits network disjoint sets nodes centering chosen cluster head 
clustering imposes regular high level structure network 
easier design efficient protocols high level structure research supported part center computer communications security carnegie mellon daad army research office gifts bosch intel 
views contained authors interpreted necessarily representing official policies endorsements express implied aro bosch carnegie mellon university intel government agencies 
chan adrian perrig level individual nodes 
efficient protocols rely having network partitioned clusters uniform size 
examples protocols include routing protocols protocols reliable broadcast data aggregation query processing 
discuss clustering section 
conventional algorithms centralized control global properties sensor network inherent difficulties properties scalability robustness important design goals protocols large scale sensor networks 
centralized top algorithms need operate knowledge conditions variables point network 
large network network traffic time delay induced collection large amount data may undesirable 
specific nodes commands data usually higher importance centralized protocol error transmission failure critical node potentially cause serious protocol failure 
alternative centralized algorithms localized algorithms reduce amount central coordination necessary require node interact local neighbors 
harder design algorithms limitations centralized algorithms highly scalable fast efficient 
class localized algorithms particularly promising emergent algorithms 
emergent algorithms additional characteristic individual agents sensor nodes case distributed sensor networks encode simple local behaviors explicitly coordinate global scale 
repeated interaction feedback individual level global properties emerge system 
emergent behaviors studied extensively biological physical social systems systems collectively termed complex adaptive systems 
examples include ant colonies ecosystems stock markets 
possible emergent algorithms potential flexible non emergent localized algorithms constrained fact complex global property may difficult directly encode program act local information 
provide definitions motivations localized emergent algorithms 
demonstrate potential emergent algorithms sensor networks new emergent protocol node clustering called ace algorithm cluster establishment 
ace high cluster packing efficiency approaching hexagonal close packing incurs small constant amount communications overhead 
ace scale independent completes constant time regardless size network operates needing geographic knowledge node positions kind distance direction estimation nodes 
localized protocols emergent protocols section define localized emergent protocols discuss particular benefits trade offs protocols sensor networks 
localized protocols estrin offer broad definition localized protocol definition 
localized protocol sensor network protocol sensor node communicates small set sensor nodes close proximity order achieve desired global objective 
ace emergent algorithm highly uniform cluster formation narrower definition localized algorithms better conveys intuition localized algorithms free centralized control definition 
strictly localized protocol sensor network localized protocol information processed node local nature properties node neighbors global nature properties sensor network obtainable immediately short constant time querying node neighbors 
narrower definition captures notion localized protocol node capable independent simultaneous operation protocol period 
example consider protocol involves building spanning tree time proportional diameter network doing distributed breadth search involving local communication khuller clustering algorithm 
protocol localized protocol definition strictly localized protocol second definition spanning tree global data structure entire network traversed computed 
mention localized protocols localized algorithms referring strictly localized protocols algorithms 
localized protocols benefits scalability 
localized protocols enable nodes act independently simultaneously various parts network 
localized protocols exhibit better scalability large networks centrally controlled protocols may wait information propagate network 
robustness 
information purely local centralized control infrastructure needed chances protocol failure due transmission errors node failure reduced 
performance degrade gracefully communication error simply fail erroneous state 
information local impact datum information locally limited 
example critical control messages need routed entire network localized algorithm node fails induce failure protocol vicinity 
emergent protocols definition emergent algorithm outlined fisher lipson definition 
emergent algorithm computation achieves formally stochastically predictable global effects communicating directly bounded number immediate neighbors central control global visibility 
emergent protocol sensor network localized protocol desired global property explicitly encoded protocol organized central authority emerges result repeated local interaction feedback nodes 
chan adrian perrig main distinguishing characteristics emergent protocols localized protocols existence feedback protocol operation 
feedback occurs node affects node directly indirectly affects node 
due reliance repeated feedback emergent protocols commonly iterative nature requiring rounds communication node neighbors network converges desired global property 
main advantages emergent protocols sophisticated applications 
emergent algorithms potential easily expressing complex global properties localized algorithms 
iterated feedback allows algorithm sidestep explicit coordination calculation required tasks efficient cluster formation pattern formation 
increased robustness transient faults 
iterated nature emergent protocols improves robustness transient node failure small number missing incorrect interactions large effect due fact interactions repeated times 
may allow protocol tolerate error consistency synchronization nodes 
emergent protocols harder design effectively localized algorithms repeated feedback create complex interactions difficult analyze 
increased expressive power robustness important class algorithms particularly large scale distributed sensor networks 
overview sensor node clustering applications efficiently organizing sensor nodes clusters important application sensor networks 
proposed protocols sensor networks ad hoc networks rely creation clusters nodes establish regular logical structure top efficient functions performed 
example clustering perform data aggregation reduce communications energy overhead facilitate queries sensor network clusters form infrastructure scalable routing clustering efficient network wide broadcast 
single level clustering sufficient applications multi level hierarchical clustering performed creating clusters clusters 
clustering problem defined follows 
clustering algorithm nodes organized disjoint sets clusters 
cluster consists cluster head cluster leader cluster followers communication radius cluster head causing shape cluster roughly circle communication radius centered cluster head 
node belongs exactly cluster node chooses leader may leaders range 
constraints goal select smallest set cluster heads nodes network belong cluster 
problem similar minimum dominating set problem graph theory 
note node exactly cluster maximizing average cluster sizes maintaining full coverage exactly equivalent minimizing number clusterheads maintaining full coverage 
purpose minimising number ace emergent algorithm highly uniform cluster formation cluster heads provide efficient cover network order minimize cluster overlap 
reduces amount channel contention clusters improves efficiency algorithms routing data aggregation execute level cluster heads 
brevity defined clustering problem obtaining single level clustering 
note assuming clusterheads establish multiple hop communications neighboring clusterheads hierarchy level possible generalize single level clustering protocol multi level hierarchical clustering repeatedly executing clustering protocol cluster heads level generate cluster heads level 
summarize brief simple examples efficient protocols rely effective solution single level clustering problem 
straightforward example data aggregation 
unclustered network aggregate query sensors sub area desired query needs forwarded sensor sub area needs individually send reply base station 
contrast clustered network query sensors sub area needs forwarded relevant cluster head query followers send single aggregated reply 
example importance highly uniform clustering low overlap consider clustered broadcast protocol described ni 
protocol broadcast message relayed cluster head cluster head broadcast message followers 
clustering clusterheads large cluster sizes clusters minimal overlap provide best coverage network fewest clusters 
number repeated broadcast transmissions area small reducing amount transmission collisions channel contention allowing communications faster efficient reliable 
hand poor clustering cluster overlap cluster heads loses benefits clustering transmissions repeated areas overlap significant channel contention 
ace algorithm cluster establishment section ace algorithm cluster establishment emergent cluster formation algorithm 
algorithm consists logical parts controls clusters spawn having node elect leader second controls clusters migrate dynamically reduce overlap 
general clusters created overlap new cluster existing clusters small 
creation clusters move apart minimize amount mutual overlap yielding near optimal packing iterations 
overview ace protocol high level overview protocol 
ace logical parts spawning new clusters migration existing clusters 
new clusters spawned self process node decides cluster head broadcast recruit message neighbors followers new cluster 
node follower cluster protocol running picks single cluster membership protocol 
chan adrian perrig migration existing cluster controlled cluster head 
cluster head periodically poll followers neighbors determine best candidate new leader cluster 
best candidate node cluster head greatest number nodes followers minimizing amount overlap existing clusters 
best candidate determined current cluster head promote best candidate new cluster head position old cluster head 
position cluster appear migrate direction new cluster head followers old cluster head longer part cluster new nodes near new cluster head new followers cluster 
detailed description ace protocol ace time synchronization required nodes may fact start protocol slightly different times due network delay clock discrepancies 
protocol nodes respond immediately communications nodes initiate actions random intervals avoid collisions 
time action initiated node called node iteration 
iterations different nodes need synchronized 
duration random time interval iterations iteration interval uniformly random distributed 
describe operation ace described detail 
node possible states unclustered follower cluster clustered follower clusters may cluster head 
protocol nodes unclustered 
node waits iteration waiting random iteration interval deciding action take iteration 
node iteration arrives available choice actions depends state currently 
node unclustered iteration arrives assesses surroundings counts number loyal followers receive declared clusterhead new cluster 
loyal follower follower cluster 
case number number unclustered neighbors 
knows long started protocol call time computes spawning threshold function fmin design fmin described 
fmin spawn new cluster 
generating random unique high probability cluster id broadcasting recruit message 
neighbors receive message followers new cluster 
node cluster head iteration arrives prepares migrate cluster 
polls neighbors find best candidate new cluster head 
best candidate leader cluster node largest potential number loyal followers neighbor set recall loyal follower member cluster 
best candidate new cluster head node largest number nodes neighbor set unclustered cluster cluster 
counting loyal followers counting nodes lie overlap clusters best candidate node generally direction overlap clusters 
generates repulsion effect clusters leads packing efficiency 
best candidate cluster head 
suppose best candidate node migrate cluster new cluster head issuing ace emergent algorithm highly uniform cluster formation promote message receiving promote message issue recruit message cluster id similar spawning new cluster existing cluster id generating new 
effect neighbors cluster added cluster cluster head existing members cluster neighbors realize promoted update new cluster head 
observes recruit message issue message neighbors 
effect common neighbors seen recruit message ignore message neighbors neighbors leave cluster 
net effect sequence actions leadership passes cluster migrates centered centered node clustered follower clusters iteration 
merely waits random iteration interval iteration arrive 
node needs able efficiently find number loyal followers may gain 
state efficiently maintained having nodes keep track list clusters neighbor 
node follower new cluster leaves existing cluster broadcasts update locally neighbors 
overhead updating low clusters generally drastic shifts position migration cluster sets nodes change slowly time 
keeping track periodic updates node immediately compute loyal followers gain needing query neighbors 
node runs protocol time ci desired average number iterations node expected length iteration interval 
node completed iteration passed time ci counting started running protocol wait random iteration interval iteration 
node passed time ci started running protocol ready terminate protocol 
node cluster head terminates immediately informs neighbors done 
node clustered node waits cluster heads terminated choosing random final clusterhead need notify neighbors terminated 
termination node respond leadership polls clusters migrated range indicate return protocol 
parameter selection 
protocol unclustered node spawn new cluster declaring cluster head finds gain fmin loyal followers cluster head 
function fmin called spawning threshold function dependent time passed protocol initiated node 
general fmin decrease algorithm proceeds 
causes fewer clusters form near algorithm 
fewer clusters means clusters room maneuver apart order form basis efficient clustering 
time advances algorithm causes gaps clusters filled spawning new clusters aggressively 
observe unclustered gaps clusters decrease roughly exponentially size cluster migration place 
implementation exponentially decreasing function fmin chan adrian perrig fmin ci formula time passed protocol began ci duration protocol described earlier 
estimated average degree number neighbours node network pre calculated prior deployment 
chosen constants determine shape exponential graph 
practice empirically produced results 
case fmin starts protocol reduces final iteration 
ensures node left unclustered protocol declare cluster head 
node may rarely find unclustered protocol cluster head migrates away completed iteration 
cover case additional clean iteration run algorithm completed node 
final clean iteration cluster migration disabled node unclustered declare cluster head 
ensure node network covered cluster 
alternative parameter setting setting 
case function starts near protocol commences reduces protocol 
possible small number nodes hop radius cluster head algorithm 
means algorithm strictly satisfy problem statement described section 
setting practical relevance number unclustered nodes algorithm small 
observed simulation number nodes hop radius cluster head average total number nodes low node deployment densities moderate high node deployment densities neighbors node 
nodes hop radius cluster head simply pick clustered neighbor act bridge clusterhead hop followers take hops communicate cluster head usual hop 
remains determine number iterations algorithm execute 
reflects performance ace changes longer number iterations operate 
ace simulated area uniform random distribution average deployment density nodes circle communication radius 
results simulation shown results similar characteristics 
note increasing number iterations yielded slight improvements average cluster size 
simulations total number iterations significantly affect standard deviation cluster sizes iterations 
results choose number iterations ace provides tradeoff communication overhead cluster size 
illustrates ace algorithm operating simulation 
little circles represent nodes 
cluster heads highlighted black range indicated large black circle nodes circle cluster 
clusters migrate away successive iterations produce highly efficient cover area 
clusters tend center areas nodes dense 
clusters overlap minimally overlap tend overlap areas nodes sparse 
provides qualitative visual comparison average cluster size ace emergent algorithm highly uniform cluster formation total number iterations average cluster size standard deviation cluster sizes total number iterations standard deviation cluster size fig 

performance ace various maximum iterations node id algorithm ace 
observed ace provides packing significantly cluster overlap node id performance evaluation ace assess ace performance ace simulated performance compared known packing hexagonal close packing clustering algorithms node id algorithm node degree algorithm 
simulations simulated ace full coverage called ace ace parameters leaves small fraction nodes uncovered call ace 
hexagonal close packing hcp known packing minimizes overlap uniform circular clusters ensuring full coverage 
general packing difficult achieve nodes specific information geographic locations assumed zhang arora centralized algorithm needs coordinate structure leads lower scalability 
node id algorithm generic name class algorithms related lca linked cluster architecture 
algorithm node highest id elects cluster head followed node highest id follower nodes covered 
basic concept revisited various architectures described lin gerla :10.1.1.100.5145
improved algorithm multi hop clusters adding second pass clusters low node ids expanded better balance cluster size improvement effect hop clusters simulate 
propose variation node id algorithm nodes generate random number start counting counter reaches zero node follower cluster node elects cluster head 
algorithm similar node id algorithm benefit repeated re clustering successive epochs 
degree connectivity node id metric nodes elect cluster heads chan adrian perrig iteration iterations iterations node id algorithm comparison fig 

ace algorithm proposed basagni gerla 
causes nodes denser areas cluster heads 
model algorithm node degree algorithm 
various algorithms simulated various deployments nodes square area node coordinates uniformly random 
simulation assume communication links bi directional communication range nodes uniform 
simulations algorithm run node densities expected number neighbors circle communication radius 
shows relative distributions cluster sizes various algorithms various node densities simulated 
compares average cluster sizes various algorithms varies 
algorithm ace ace emergent algorithm highly uniform cluster formation procedure scale iteration expected iteration length cluster head return done clustered wait cluster heads terminate pick cluster head return done unclustered pick random clustered node act proxy terminates wait terminate return done unclustered fmin generate new random id locally broadcast recruit myid cluster head myid potential new cluster head poll num loyal followers myid send promote wait broadcast recruit message locally broadcast myid procedure clear ace exhibits superior packing efficiency node id node degree algorithms 
ace exhibits consistent performance average cluster size node densities 
ace exhibits performance average cluster sizes 
average cluster size ideal packing hcp 
ace exceeds ratio hcp intelligently forms clusters areas nodes densely distributed choosing areas overlap nodes densely distributed 
comparison node id node degree converge large perform better low node densities 
shows variance cluster sizes ace small slightly larger baseline variance number nodes area reflected variance cluster sizes hcp 
low variance high average cluster sizes reflect ace algorithm produces packing efficiency 
chan adrian perrig fraction nodes clusters size fraction nodes clusters size cluster size nodes hcp ace ace node id node degree cluster size nodes hcp ace ace node id node degree fraction nodes clusters size fraction nodes clusters size hcp ace ace node id node degree cluster size nodes hcp ace ace node id node degree cluster size nodes fig 

distribution cluster sizes various clusterings investigated performance various algorithms conditions packet loss 
various deployments simulated packet loss rates ranging 
packet loss simulated having simulated nodes ignore incoming message probability corresponding packet loss rate 
reflects results 
performance protocol degrades gracefully packet loss 
ace maintains large advantage node id node degree conditions heavy packet loss 
ace degrades higher rate approaches performance node id node degree conditions high packet loss performs worse algorithm simulated conditions 
note ace algorithm localized require central direction highly resistant transmission errors random node failure 
example centralized algorithm utilizing bfs tree khuller algorithm suffer loss entire subtree nodes high tree suffers failure leading failure protocol 
protocols worst case loss cluster head node leave cluster nodes unclustered 
cluster head node fails executing protocol failure detected average cluster size fraction hcp ace ace node id node degree ace emergent algorithm highly uniform cluster formation density deployment average cluster sizes normalized average cluster size ace ace node id node degree fig 

average cluster sizes various schemes ace ace node id node deg 
packet loss rate cluster sizes packet loss fig 

average communications overhead node epoch followers reset states unclustered allowing neighboring clusters migrate new vacant space allowing new clusterhead spawn cluster vacant space 
protocol innate self stabilization property 
additional adaptations unreliable communications simulated implemented improve protocol resilience random node failures communication errors 
measured communications overhead various algorithms 
transmission considered unit communication final cluster handshake nodes confirm membership cluster heads considered additional unit communication 
results tabulated 
low number iterations needed ace iterations communications overhead small averaging communications node epoch 
communication brief message identifier node cluster identifier number 
communications overhead small compared normal communications load sensor network 
ace exhibits scale independence perfect scalability 
protocol takes fixed amount time complete regardless total number nodes network 
strictly localized algorithm see definition section node capable operating immediately independently local information needing global information computed network 
result running time node communications overhead ace independent total size network 
chan adrian perrig related section review related localized emergent algorithms sensor networks clustering algorithms general 
currently practical emergent algorithms developed sensor networks 
henderson suggests turing reaction diffusion equations forming patterns sensor networks 
approaches promising indicative potential emergent algorithms 
discuss related clustering 
clustering protocols currently known self protocols node creates new cluster declaring cluster head 
differ heuristic select nodes declare 
node id node degree heuristics discussed section 
examples node id clustering protocols include basagni proposes node degree clustering protocols 
researchers propose random number heuristic cluster head selection 
propose remaining energy level node heuristic cluster head selection 
ramanathan steenstrup krishnan ramanathan steenstrup propose clustering algorithm controls size cluster number hierarchical levels 
clustering approach follows node id approach 
general self protocols suffer problem unable prevent nodes just cluster radius apart simultaneously electing cluster heads leading large overlap clusters 
overlap occurs sufficiently frequently resultant cluster packing inefficient seen evaluation section 
minimum dominating set mds problem graph theory addressed algorithms 
clustering problem special case mds problem applied random geometric graphs 
algorithms provable theoretical asymptotic bounds performance arbitrary graphs actual average performance random geometric graph undetermined 
implemented simulation algorithms described jia kuhn comparable performance simple node degree node id algorithms particular simulation conditions 
speculate relatively poor performance algorithms simulation may due fact designed arbitrary graphs dedicated clustering algorithms optimized random geometric graphs 
run full simulation comparisons algorithms 
centralized non localized clustering algorithms known deal topology entire network 
class algorithms uses graph theoretic properties clustering 
general algorithms robust scalable localized algorithms eventually requiring significant communications computation overhead large networks 
example krishna proposes technique cluster forms clique approach overhead 
researchers proposed tree constructions network partitioning 
thaler ravishankar propose construct top hierarchy initial root node 
banerjee khuller propose tree clustering algorithm 
drawback algorithm sensor networks node needs initiate clustering protocol requires time linear networks 
zhang arora centralized scheme produce approximate hexagonal ace emergent algorithm highly uniform cluster formation close packing 
assume node knows precise location may difficult achieve sensor networks 
general scalability issues algorithms suffer increased vulnerability protocol node failure certain key parts network usually near root tree near base station 
ace algorithm cluster establishment 
ace emergent algorithm uses just rounds feedback induce formation highly efficient cover uniform clusters network 
efficiency coverage approaches hexagonal close packing 
ace fast robust packet loss node failure efficient terms communications 
completes constant time regardless size network uses local communications nodes 
algorithm require geographic location information kind distance directional estimation nodes 
practical usefulness ace demonstration power flexibility emergent algorithms large scale distributed systems 

alan ravi prakash thai dung huynh 
max min cluster formation wireless ad hoc networks 
proceedings ieee infocom pages 

baker ephremides flynn 
design simulation mobile radio network distributed control 
ieee journal selected areas communication january 

banerjee samir khuller 
clustering scheme hierarchical control wireless networks 
proceedings ieee infocom april 

stefano basagni 
distributed clustering ad hoc networks 
proceedings ieee international symposium parallel architectures algorithms networks span pages june 

ephremides baker 
design concept reliable mobile radio networks frequency hopping signaling 
proceedings ieee 

deborah estrin ramesh govindan john heidemann satish kumar 
century challenges scalable coordination sensor networks 
proceedings fifth annual acm ieee international conference mobile computing networking mobicom pages august 

david fisher howard lipson 
emergent algorithms new method enhancing survivability unbounded systems 
proceedings hawaii international conference system sciences january 

gerla kwon pei 
demand routing large ad hoc wireless networks passive clustering 
proceedings ieee wireless communications networking conference wcnc september 

gerla tsai 
multicluster mobile multimedia radio network 
acm kluwer journal wireless networks 

heinzelman chandrakasan balakrishnan 
energy efficient communication protocol wireless microsensor networks 
proceedings rd hawaii international conference system sciences hicss january 
chan adrian perrig 
henderson morris chen thompson 
smart sensor snow 
proceedings ieee conference intelligent robots intelligent systems iros october 

hong gerla yi xu kwon 
scalable ad hoc routing large dense wireless networks clustering landmarks 
proceedings ieee international conference communications icc april 

jia rajaraman torsten suel 
efficient distributed algorithm constructing small dominating sets 
proceedings th annual acm symposium principles distributed computing pages 

krishna vaidya chatterjee pradhan 
cluster approach routing dynamic networks 
acm sigcomm computer communication review april 

rajesh krishnan ram ramanathan martha steenstrup 
optimization algorithms large self structuring networks 
ieee infocom 

fabian kuhn roger wattenhofer 
constant time distributed dominating set approximation 
proceedings nd annual acm symposium principles distributed computing pages 

richard lin mario gerla 
adaptive clustering mobile wireless networks 
ieee journal selected areas communications 

daniel 
algorithm group formation amorphous computer 
proceedings th international conference parallel distributed computing systems october 

sze yao ni yu chee tseng chen jang ping sheu 
broadcast storm problem mobile ad hoc network 
proceedings annual acm ieee international conference mobile computing networking mobicom pages august 

elena gian paolo rossi 
reliable broadcast mobile multihop packet networks 
proceedings annual acm ieee international conference mobile computing networking mobicom pages 

ramanathan steenstrup 
hierarchically organized multihop mobile wireless networks quality service support 
acm baltzer mobile networks applications june 

david thaler ravishankar 
distributed top hierarchy construction 
proceedings ieee infocom pages 

tsuchiya 
landmark hierarchy new hierarchy routing large networks 
symposium proceedings communications architectures protocols sigcomm pages 

alan turing 
chemical basis morphogenesis 
philosophical transactions royal society london pages 

xu mario gerla 
heterogeneous routing protocol new stable clustering scheme 
ieee milcom october 

ya xu solomon bien mori john heidemann deborah estrin 
topology control protocols conserve energy wireless ad hoc networks 
technical report university california los angeles center embedded networked computing january 

zhang arora 
gs scalable self configuration self healing wireless networks 
st acm symposium principles distributed computing podc 
