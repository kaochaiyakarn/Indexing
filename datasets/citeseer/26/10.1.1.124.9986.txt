extended disjunctive logic programs jack minker minker cs umd edu lambda carolina ruiz cs umd edu august studies comprehensive manner different aspects extended disjunctive logic programs programs clauses form lk lk lm lm ln ln literals atoms classically negated atoms negation default operator 
explicit classical negation suggests new truth value logical falsehood contrast falsehood default semantics 
general techniques described extending model fixpoint proof theories arbitrary semantics normal disjunctive logic programs cover class extended programs 
illustrations techniques stable models disjunctive founded stationary semantics 
declarative complexity extended programs algorithmic complexity proof procedures discussed 
logic programming approach logic knowledge representation reasoning gone different stages 
logic programs containing horn clauses considered 
horn clause disjunction literals literal positive written bm bm bm atoms 
semantics programs understood lambda department computer science institute advanced computer studies 
university maryland 
college park md computer science 
university maryland 
college park md see captured unique minimal herbrand model program 
clear positive atoms occur head horn clauses negated information inferred programs strategy rule deriving negated information adopted 
rules negation initially proposed horn programs closed world assumption cwa states atom assumed false proven true clark completion theory assumes definition atom program complete sense specifies circumstances atom true circumstances atom inferred false 
having rule negation plausible extend horn clauses negated information 
purpose called default operator may appear bodies clauses 
clauses called normal clauses form bm cn bm cn atoms 
kind negation limited sense refer presence knowledge asserting falsehood atom lack evidence truth 
authors translated believed known evidence true addition common translation provable program question 
contrast horn case agreement unique semantics normal programs different semantics ways interpret meaning 
proposed semantics perfect model semantics stable model semantics founded semantics wfs :10.1.1.24.6050
generalization horn clauses allows disjunctions atoms heads clauses studied extensively see :10.1.1.124.9986
clauses called disjunctive clauses form ak bm ak bm atoms 
meaning program captured set minimal herbrand models 
rules negation introduced disjunctive logic programs generalized closed world assumption gcwa assumes atom false belong minimal herbrand models program extended generalized closed world assumption applies exactly criterion gcwa conjunctions atoms atoms see sect 
weak generalized closed world assumption equivalently disjunctive database rule ddr states atom assumed false appear disjunction derivable program 
negative information introduced disjunctive clauses fashion horn clauses 
resulting clauses called normal disjunctive clauses form ak bm cn ak bm cn atoms 
various different semantics proposed normal disjunctive logic programs henceforth denoted stable disjunctive model semantics disjunctive founded semantics generalized disjunctive founded semantics stationary semantics 
worth noting normal clauses particular cases disjunctive normal clauses 
semantics defined class normal disjunctive logic programs semantics class normal logic programs 
alternative overcome difficulties dealing negated information explicit classical negation addition default 
way expressive power logic programs increased user allowed state atom true false ambiguity default interpretation 
clauses obtained explicitly classical negation operator called extended disjunctive clauses form lk lk lm lm ln ln literals atoms classically negated atoms extended disjunctive clauses contain forms negation classical default 
previous contributions area include pearce wagner added explicit negated information prolog programs 
showed need alter computational structure programs include classical negation way transform extended programs positive ones preserves meaning programs 
gelfond lifschitz extended stable model semantics cover classical negation 
przymusinski generalized extended version stable model semantics include disjunctive programs 
alferes pereira provided framework compare behavior different semantics presence kinds negation 
purpose study comprehensive manner different aspects extended disjunctive logic programs edlps short 
describe general techniques deal extended class programs survey results field 
alternative semantics edlps obtained extending semantics known class normal disjunctive logic programs 
different notions falsehood extended programs distinguish saying respect semantics formula false default edlp provable assumed false particular rule negation semantics logically false simply false provable words logical consequence extend semantics include new truth value logical falsehood negated atoms heads clauses possible specify inconsistent theories describe situations atom complement true simultaneously 
develop techniques recognize program inconsistent respect semantics deal inconsistent program 
techniques explained general applied semantics describe terms generic semantics call sem addition illustrate application techniques stable model semantics covering way perfect model semantics covers wfs minimal models semantics disjunctive logic programs stationary semantics 
organized follows section introduces notation definitions needed sections 
section describes standard procedure extend model theoretical characterization arbitrary semantics class edlps 
includes illustration technique case stable model semantics 
section constructs fixpoint operator compute extended version semantics sem terms fixpoint operator computes restriction semantics 
illustrations stationary semantics 
section describes procedure answer queries respect edlps arbitrary semantics sem procedure uses subroutine procedure answer queries respect restriction sem 
section studies complexities fundamental problems related edlps 
syntax definitions section formalize definition extended disjunctive logic programs introduce notation needed sections 
extended disjunctive logic program edlp possibly infinite set clauses form lk lk lm lm ln ln literals atoms classically negated atoms negation default operator 
example extended disjunctive logic program assume convention occurrence simplified non ground clause equivalent set ground instances consider ground programs propositional programs 
done simplify notation loss generality 
program lp denotes set predicate symbols occur denotes set ground literals constructed predicates lp denote herbrand universe associated lp context resp 
denotes disjunctive herbrand base resp 
conjunctive herbrand base set equivalence classes disjunctions resp 
conjunctions atoms appearing modulo logical equivalence 
notion generalized edlps dlp resp 
clp set equivalence classes disjunctions resp 
conjunctions literals modulo logical equivalence noted extended programs enable state predicate holds holds 
sense regard different predicates happen complementary true false 
idea pearce wagner gelfond lifschitz showed transform extended normal clauses normal clauses 
done representing negative literal program new predicate say simplicity write abbreviation equivalence class 
restriction hold simultaneously 
restriction may viewed integrity constraint 
formally define prime transformation literal predicate predicate notice apply prime transformation literal occurring edlp obtain normal disjunctive logic program 
union set integrity constraints captures meaning icp lp integrity constraints state fact complementary predicates 
symbol emphasize integrity constraints clauses program icp contained 
spirit denotes set prime literals fl lg taken set predicate symbols appearing lp def 
need recover program 
order define neg transformation predicates predicate predicate extended programs usual way 
clear edlp worth noting prime transformation strictly needed 
performing prime transformation treat atom independent transformation order explicit edlp thought normal disjunctive logic program 
model theory semantics section describe standard procedure extend arbitrary model theory semantics normal disjunctive logic programs class extended disjunctive logic programs 
procedure general applied semantics defined class describe terms generic semantics call sem subsection illustrate technique sem stable model semantics 
denote interpretation subset set literals call interpretation consistent contain pair complementary literals say prime neg transformations interpretations defined expected fl fl interpretations agree program sense definition called models program 
definition edlp model iff consistent program clause lk lk lm lm ln lk lm lm ln li lemma establishes relationships models edlp models 
lemma edlp interpretation interpretation properties hold 
model iff model 
model iff model 
notice inconsistent edlp program predicate complement derivable models 
accordance classical logic formula deducible inconsistent set axioms declare set literals meaning inconsistent program extend definition model 
definition edlp extended model iff model definition easy characterize inconsistent edlps extended model denote set extended models characterize semantics sem logic program instance sem stable model semantics set stable extended models see sect 

easy way extend sem class edlps treat literal edlp program atom 
definition sem applied normal disjunctive logic program containing atoms happen character 
way obtain set models replace ones inconsistent main result section states uses procedure just described extend sem set extended models characterizes extended semantics sem edlp obtained set models characterizing semantics sem prime transformation program 
theorem edlp interpretation iff 
consistent 
satisfy icp 
constructed way characterizes skeptical version sem version formula true true credulous version sem formula true true need reduce keeping model 
reduced sem flg flg gamma flg 
hand definition enables distinguish program inconsistent sem flg program incoherent sem 
stable model semantics stable model semantics normal logic programs introduced gelfond lifschitz generalized class extended logic programs see :10.1.1.24.6050
przymusinski enlarged extended version include disjunctive programs 
inoue developed bottom procedure compute stable models edlps 
intuitively stable extended model edlp minimal extended model disjunctive program obtained interpreting negation default form way false true case clause containing body may erased second case occurrence may deleted clauses altering meaning context inconsistent replaced formally definition edlp gelfond lifschitz transformation defined fl lk lk lm lk lk lm lm ln clause flm definition edlp stable extended model iff 
consistent minimal model 
inconsistent minimal model example stable models edlp example fa cg fe ag 
notice minimal model fa minimal model fa ag 
extended model stable 
question effectively find stable extended models edlp point take advantage fact normal disjunctive logic program effective procedures compute stable models restricted class programs see 
find relationship stable extended models stable models 
relationship theorem generalizes similar result 
need technical lemma stating gelfond lifschitz transformation prime transformation commute 
lemma edlp theorem edlp stable extended model iff 
consistent stable model 
stable model satisfy icp 
fixpoint semantics section construct fixpoint operator compute extended version semantics sem terms fixpoint operator computes restriction semantics 
fixpoint operator property exists fixpoint ordinal ffq tq ffq characterizes fixpoint semantics respect sem desired fixpoint operator compute semantics sem edlps described different equivalent ways 
extension works literals positive atoms 
illustration approach subsections extended fixpoint operators disjunctive wellfounded semantics stationary semantics 

invocation precisely edlp fixpoint semantics obtained fixed point computed 
achieved defining ep ff def tp ff ordinal ff 
easy see ffp minimal fixpoint ordinal tp ffp minimal fixpoint ordinal ep approach enables bound complexity computing ep ffp follows complexity ep ffp complexity applying prime transformation complexity tp ffp complexity applying neg transformation tp ffp 
note complexity transforming linear size reasonable definition size 
equivalence approaches stationary semantics established subsections 
follows notation ff fixpoint operator ff ordinal stands composition ff times 
belongs domain ff 
ff ff gamma ff ordinal fi ff fi ff limit ordinal 
disjunctive founded semantics disjunctive founded semantics defined baral extension founded semantics wfs class normal disjunctive logic programs 
equivalent minker rajasekar fixpoint operator class disjunctive logic programs 
spirit wfs valued semantics associates disjunctive normal logic program state pair tuple 
ts fs ts set disjunctions atoms ts fs set conjunctions atoms fs closure properties ts fs ts fs 
intended meanings ts fs follows ts contains disjunctions assumed true semantics fs contains conjunctions assumed false default conjunctions produced particular default rule negation semantics 
describe extension class edlps mimicking definition class see working literals positive atoms :10.1.1.124.9986
need definitions definition edlp 
extended state pair tuple ts fs ts dlp fs clp ts closed disjunctions literals literals ts ts fs closed conjunctions literals literals fs fs 
notice extended framework explicit negation allowed define atom true false true longer adequate say formula false respect extended state pair 
ts fs fs 
define definition 
ts fs extended state pair formula 
truth value respect true ts false ts unknown ts ts false default fs 
say extended state pair inconsistent exists formula ts ts 
extended state pair associated edlp constructed smallest fixed point operator se defined collection extended state pairs 
extended state pair 
ts fs se augments ts disjunctions deduced steps applications immediate consequence operator defined assumption formulas ts true ones fs false default similarly se augments fs conjunctions proved false default steps conjunction assumed false default rule capable deducing conjunction possible prove body false false default supposing formulas ts true ones fs false default formally definition edlp 
extended state pair assigned smallest fixedpoint operator se defined extended state pairs way extended state pair 
ts fs 
ts 
fs 
clp es fd dlp ground instance clause lm lm ln dlp li di ts possibly null di dlp flm fs dm dg 
es fc clp ground instances clauses form lm lm ln possible null disjunction literals cases holds lm fs denotes logical implication 
lm ln tsg 

extended state pair characterizing semantics defined extended state pair assigned consistent dlp clp 
case program called inconsistent 
order simplify notation examples convention dlp disj denotes smallest subset dlp containing closed disjunctions literals clp conj denotes smallest subset clp containing closed conjunctions literals example extended state pair characterizing edlp example 
disj fa conj obtained disj fa clp conj fb clp conj clp se 
disj fa conj se 
theorem edlp consistent 
ts fs extended state pair 
characterizes semantics iff 
characterizes semantics satisfies icp 
similar approach followed extend generalized disjunctive founded semantics class edlps 
stationary semantics stationary semantics introduced przymusinski associates state pair 
construction state pair see relies notions extended generalized closed world assumption stationary transformation generalize extended case follows definition edlp extended state pair :10.1.1.124.9986
stationary transformation respect denoted sta edlp free negation default obtained 
removing clause body false false default respect 
removing bodies remaining clauses easy way enlarge class edlps free default prime transformation described sect 

definition edlp free negation default 
define ae ae fnot ln ln true minimal model 
extended state pair characterizes stationary semantics edlp smallest fixed point operator sse defined set extended state pairs way extended state pair 
ts fs sse adds ts set ses disjunctions logical consequences union ts negation conjunctions fs 
hand sse adds fs conjunctions assumed false default ae stationary transformation respect ses follows ln abbreviated ln set conjunctions literals denote set fnot jc cg definition edlp 
extended state pair assigned stationary semantics smallest fixed point operator sse defined extended way extended state pair 
ts fs se 
ts se fs se ses fd dlp jp ts fs dg ses sta ses ts fs ses ts 
mean operator appear program 
truth value formula respect extended state pair def 


extended state pair characterizing stationary semantics defined extended state pair assigned stationary semantics consistent dlp clp 
case program called inconsistent stationary semantics 
example extended state pair characterizes stationary semantics edlp example 
disj fa conj obtained se 
disj fa call set se 
ae fa ag fa conj call set sse 
se disj fa se ae fa ag fa conj sse 
sse 
disj fa conj sse 
theorem edlp consistent stationary semantics 
ts fs extended state pair 
characterizes stationary semantics iff 
characterizes stationary semantics satisfies icp 
proof theory section describe procedure answer queries edlps arbitrary semantics sem 
procedure uses subroutine procedure answer queries sem 
notice obtain effective proof procedure restrict programs containing finite number clauses 
strong restriction proof procedure described capable dealing non ground programs 
allow queries sort ffl literal 
ffl literal 
ffl queries 
ffl queries 
xn lists free variables interpreted existentially quantified 
define correct answer query true false unknown definition definition query define correct answer query respect consistent edlp semantics sem truth value determined follows 
ground answer 
true false unknown 

xn lists free variables answer 
true exists answer true false answer alse unknown 
event false default considered appropriate answer user defined answer default answer true stands logically equivalent query operator appears front atomic formulas 
define mean follows definition model query define 
ground ffl literal iff ffl literal iff ffl queries iff 
ffl queries iff 

xn lists free variables ffl iff main purpose define sound complete proof procedure ep psem answer queries edlps sem 
assume proof procedure answer queries sem call psem clarity denote psem answer procedure psem query ep psem answer procedure ep psem query edlp remember edlp contrast inconsistent 
case answer query true 
take consideration introduce definition 
definition edlp define ic ic 
predicate symbol lp new predicate symbol lp edlp determine program inconsistent sem sound complete proof procedure psem characterization inconsistent sem iff psem ic true 
way determining program inconsistent done preprocessing previous attempt answer queries 
ready describe extended proof procedure 
definition psem proof procedure answer queries sem 
define extension procedure called ep psem answers queries edlps sem follows edlp query ffl inconsistent sem ep psem true 
ffl 
simultaneously apply psem query 
query program ic 
psem ic true ep psem true 

psem ic true ep psem alse 

ep psem unknown 
shown ep psem defined gives correct answer sense def 

example illustrates need previous definition 
example consider edlp fa bg 
fa bg ic fa 
set stable models ic ic ffa bg fa fb gg ffa bg lg 
notice true stable model semantics hold minimal model ic fails hold fb clear holds consistent icp model ic true ic stable model semantics definition ep ic true desired 
complexity ep psem expressed terms complexity psem follows complexity ep psem complexity psem size corresponds complexity translating 
theorem psem ep psem def 

statements hold 
psem sound proof procedure normal disjunctive logic programs ep psem extended disjunctive logic programs 

psem complete proof procedure normal disjunctive logic programs ep psem extended disjunctive logic programs 
general extension may applied instance proof procedure developed fern andez lobo answer queries stable model semantics 
mean logically equivalent query appears front atomic formulas 
obtained applying de morgan laws needed 
complexity complexity different problems related normal logic programs studied extensively see 
section show express complexities fundamental problems edlps terms corresponding complexities 
complexity results stable model semantics surveyed extended cover logic programs classical negation 
follows denotes finite edlp denotes size program measured instance number literals appearing 
normal literal denotes literal negation default literal 
determining ground normal literal true model denote problem credulous truth sem edlps 
shown sect 
ground normal literal true true ic determine credulous truth transform ic clearly done linear time size program checking credulous truth necessary credulous truth ic complexity credulous truth sem complexity credulous truth sem edlps complexity credulous truth sem 
inequality holds edlp 
illustration consider stable model semantics 
marek truszczy nski showed propositional normal logic programs prop stable prop np complete 
propositional extended logic programs prop credulous truth stable prop np complete 
determining ground normal literal true model denote problem skeptical truth sem edlps 
notice ground normal literal true model hold model complexity skeptical truth sem edlps complexity complement credulous truth sem edlps 
stable model semantics propositional normal logic programs complexity skeptical truth sem prop np complete 
extends result extended logic programs 
determining program model sem 
notice theorem edlp model sem 
complexity checking existence model sem complexity checking existence model sem 
previous equation comes translating 
propositional normal logic programs marek truszczy nski proved determining existence stable models np complete class propositional extended logic programs problem npcomplete 
marek nerode remmel showed set odel numbers finite predicate normal logic programs having stable models sigma complete set 
easy see result holds set odel numbers finite predicate extended logic programs having stable models prime transformation recursive performed polynomial time 
criticisms classical negation logic programming 
states may cases feasible include piece negated information domain problem 
regard note gelfond lifschitz pointed positive information predicate complete program conditions true program define 
justifies extent keeping negation default extended logic programs 
second criticism addresses potential inconsistency extended logic programs 
respect described concrete mechanisms deal inconsistent logic programs 
difficulties small price pay increased expressive power gained explicit classical negation logic programs 
support provided air force office scientific research number national science foundation number iri 
alferes pereira 
logic program semantics kinds negation 
apt editor proceedings joint international conference symposium logic programming pages washington usa nov 
mit press 
baral 
issues knowledge representation semantics knowledge combination 
phd thesis university maryland college park md usa 
baral lobo minker 
generalized disjunctive founded semantics declarative semantics 
proceedings fifth international symposium methodologies intelligent systems pages knoxville tn usa 
baral lobo minker 
generalized disjunctive founded semantics procedural semantics 
proceedings fifth international symposium methodologies intelligent systems pages knoxville tn usa 
baral lobo minker 
wf semantics negation normal disjunctive logic programs 
proceedings sixth international symposium methodologies intelligent systems pages charlotte nc usa 
schaerf 
survey complexity results nonmonotonic logics 
preprint universit di roma la sapienza salaria roma italy 
clark 
negation failure 
gallaire minker editors logic data bases pages 
plenum new york usa 
fern andez lobo 
proof procedure stable theories 
technical report cs tr umiacs tr university maryland college park md usa 
fern andez lobo minker subrahmanian 
disjunctive lp integrity constrains stable model semantics 
annals mathematics artificial 
gelfond 
stratified autoepistemic theories 
proceedings aaai pages 
gelfond lifschitz :10.1.1.24.6050
stable model semantics logic programming 
kowalski bowen editors procedings fifth international conference symposium logic programming pages seattle wa 
usa aug 
mit press 
gelfond lifschitz 
logic programs classical negation 
warren szeredi editors proceedings seventh international conference logic programming pages jerusalem israel june 
mit press 
gelfond lifschitz 
classical negation logic programs disjunctive databases 
new generation computing 
inoue hasegawa 
embedding negation failure model generation theorem prover 
kapur editor proceedings eleventh international conference automated deduction pages saratoga springs ny usa june 
springerverlag 
lloyd 
foundations logic programming 
springer verlag second extended edition 
lobo minker rajasekar :10.1.1.124.9986
foundations disjunctive logic programming 
mit press 
marek nerode remmel 
stable models predicate logic program 
apt editor proceedings joint international conference symposium logic programming pages washington usa nov 
mit press 
marek truszczy nski 
autoepistemic logic 
journal acm 
marek truszczy nski 
computing intersection autoepistemic expansions 
proceedings fifth international workshop logic programming non monotonic reasoning pages 
mit press 
minker 
indefinite databases closed world assumption 
proceedings sixth conference automated deduction pages 
minker rajasekar 
fixpoint semantics disjunctive logic programs 
journal logic programming july 
pearce wagner 
logic programming strong negation 
schroeder heister editor proceedings international workshop extensions logic programming pages frg dec 
lecture notes artificial intelligence springer verlag 
przymusinski 
stable semantics disjunctive programs 
new generation computing 
przymusinski 
perfect model semantics 
kowalski bowen editors proceedings fifth international conference symposium logic programming pages seattle wa 
usa aug 
mit press 
przymusinski 
extended stable semantics normal disjunctive programs 
warren szeredi editors proceedings seventh international conference logic programming pages jerusalem israel june 
mit press 
przymusinski 
stationary semantics disjunctive logic programs deductive databases 
debray hermenegildo editors proceedings north american conference logic programming pages austin tx 
usa oct 
mit press 
rajasekar lobo minker 
weak generalized closed world assumption 
automated reasoning 
reiter 
closed world data bases 
gallaire minker editors logic data bases pages 
plenum new york 
ross topor 
inferring negative information disjunctive databases 
journal automated reasoning dec 
schlipf 
survey complexity undecidability results logic programming 
blair marek nerode remmel editors informal proceedings structural complexity recursion theoretic methods logic programming pages washington usa nov 
van emden kowalski 
semantics predicate logic programming language 
journal acm 
van gelder ross schlipf 
unfounded sets wellfounded semantics general logic programs 
proceedings seventh acm symposium principles database systems pages 

deduction non horn databases 
journal automated reasoning 

