fast subsequence matching time series databases clu efficient indexing method locate subsequences collection sequences subsequences match query pattern specified tolerance 
idea map data sequence small set multidimensional rectangles feature space 
rectangles readily indexed traditional spatial access methods tree 
sliding window data sequence extract features result trail feature space 
propose efficient effective algorithm divide trails sub trails subsequently represented minimum bounding rectangles mbrs 
examine queries varying lengths show handle case efficiently 
implemented method carried experiments synthetic real data stock price movements 
compared method sequential scanning obvious competitor 
results excellent method accelerated search time times times 
problem focus design fast searching methods search database time series real numbers locate subsequences match query subsequence exactly approximately 
historical temporal spatio temporal research partially funded institute systems research isr national science foundation iri iri pyi matching funds software thinking machines ibm federal systems md 
sabbatical leave department informatics aristotle university thessaloniki greece 
department computer science institute systems research isr university maryland college park christos cs 
umd 
edu cc fee part material granted copies distributed direct commercial advantage acm copyright notice title publication date appear notice copying permission association computing machinery 
copy republish requires fee permission 
sigmod minneapolis minnesota usa ej acm benefit facility 
specific applications include financial marketing production time series stock prices sales numbers databases typical queries companies stock prices move similarly find companies similar sales patterns cases past resemble month sales pattern product scientific databases time series sensor data 
example weather data geological environmental astrophysics databases want ask queries form past days solar magnetic wind showed patterns similar today pattern help predictions earth magnetic field 
searching similar patterns databases essential helps predictions hypothesis testing general data mining rule discovery 
rest shall notational conventions sequences len denotes length denotes subsequence includes entries positions denotes th entry sequence denotes distance equal sequences similarity queries categories matching 
collection data sequences real numbers sa 
sn query sequence want find data distance notice data query sequences length 
subsequence matching 
data sequences sl sz sn arbitrary lengths query sequence tolerance want identify data sequences si cent ain matching subsequences subsequences distance 
report data sequences correct offsets data sequences best match query sequence 
assume function gives distance sequences example euclidean distance 
case match queries handled follows distance preserving transform discrete fourier transform dft extract features sequences dft coefficients mapping points dimensional feature space 
subsequently spatial access method trees search range queries 
approach exploits assumption data sequences query sequences sh length 
generalize problem method answer approximate match queries subsequences arbitrary length len ideal method fulfill requirements fast 
sequential scanning distance calculation possible offset slow large databases 
correct 
words return qualifying subsequences missing false dismissals 
notice false alarms acceptable discarded easily post processing step 
proposed method require small space overhead 
method dynamic 
easy insert delete sequences append new measurements data sequence 
method handle data sequences varying length queries varying length 
remainder organized follows section gives background material past related spatial access methods discrete fourier transform 
section focuses subsequence matching propose new indexing mechanism show th shelf spatial access methods specifically tree 
section discusses performance results obtained experiments real synthetic data show effectiveness method 
section summarizes contributions giving extensions technique outlining open problems 
background best authors knowledge examines indexing methods approximate subsequence matching time series databases 
related different respects indexing text dna databases 
text dna strings viewed dimensional sequences consist discrete symbols opposed continuous numbers difference feature extraction 
matching approximate queries time sequences color images mri brain scans 
methods idea feature extraction functions map sequence image point feature space spatial access methods may search similar sequences images 
resulting index contains points feature space called 
index works follows sequences length apply point discrete fourier transform dft keep coefficients 
assume keep numbers sequence mapped point dimensional space 
points organized tree faster searching 
typical query user specifies query sequence length tolerance requesting data sequences distance resolve query apply point dft sequence keep features mapping dimensional point feature space index retrieve points distance qf discard false alarms see explanations lemma return rest user 
generalize index method designed handle matching queries goal handle subsequence queries mapping data sequences rectangles feature space 
rely spatial access methods eventual indexing mechanism mention multidimensional indexing methods proposed forming classes trees rest tree family linear quadtrees grid files 
guarantee index method result false dismissals dist ante feature space match underestimate distance objects 
mathematically objects length sequences distance euclidean distance feature vectors fourier coefficients distance function euclidean distance 
lemma guarantee false dismissals range queries feature extraction function satisfy formula object query object qualifying object tolerance 
want prove object qualifies query retrieved issue range query feature space 
want prove object obvious dobj euclidean distance distance function sequences sum squared differences 
formally sequences length define distance example feature extraction function choose discrete fourier dft reasons successfully matching provides intuitive example presentation clear 
noted method independent specific feature extraction function long satisfies condition lemma eq 

distance objects data sequences euclidean distance condition lemma satisfied orthonormal transform discrete cosine transform dct wavelet transform give definition properties dft transformation 
point discrete fourier defined sequence complex numbers xf xf fi zi exp fi 
imaginary unit signal recovered inverse transform zi ido 
complex number exception real signal real 
energy sequence defined sum energies squares amplitude zi point sequence fundamental observation correctness method parseval theorem states dft preserves energy signal theorem parseval 
discrete fourier transform sequence 
dft linear transformation parseval theorem implies dft preserves euclidean distance signals qi fourier transforms respectively 
keep coefficients dft features recommendation 
truncation results estimating distance sequences ignore positive terms equation introduces false dismissals lemma 
truncation introduce false alarms practical sequences expect 
reason real sequences fall class colored noise skewed energy spectrum form 
implies coefficients contain energy 
coefficients give estimates actual distance sequences 
pink noise birkhoff theory models signals musical scores works art 
brown noise known random walk brownian walk models stock movements exchange rates 
black noise spectrum skewed spectrum brown noise black noise models successfully signals water level river varies time 
symbols definitions 
number data sequences 
si th data sequence 
len length sequence entry sequence subsequence including entries positions query sequence 
minimum query sequence length 
euclidean distance sequences equal length 
tolerance max 
acceptable distance 
number 
marginal cost point 
table summary symbols definitions concludes discussion prior concentrated match queries 
describe detail requests matching subsequences 
proposed method examine problem subsequence matching 
specifically problem defined follows collection sequences real numbers sz sn potentially different length 
user specifies query subsequence length len may vary tolerance maximum acceptable dis similarity distance 
want find quickly sequences si wit correct offsets subsequence len matches query sequence si len brute force solution examine sequentially possible subsequence data sequences match 
shall refer method method 
describe method uses small space overhead achieve order magnitudes savings method 
main symbols definitions summarized table 
sketch approach st index loss generality assume minimum query length depends application 
example stock price databases analysts interested weekly monthly patterns shorter patterns susceptible noise 
notice lose ability answer shorter queries resort sequential scanning 
generalizing reasoning method matching sliding window size place possible position offset data sequence 
placement window extract features subsequence inside window 
data sequence length len mapped trail feature space consisting len points point possible offset sliding window 
gives example trails 
assume sequences sz shown keep features amplitude second coefficient point dft 
window length placed offset obtain point trail cl window obtain rest points trail cl trail derived manner 
gives example trails real time series stock price movements 
straightforward way index trails keep track individual points trail storing spatial access method 
call method naive method stands index opposed sequential scanning 
query length tolerance extract features query search spatial access method range query radius retrieved points correspond promising subsequences discarding false alarms retrieving subsequences calculating actual distance query desired answer set notice method qualifying subsequence satisfies condition lemma 
storing individual points trail tree inefficient terms space search speed 
reason point data sequence correspond point dimensional feature space leading index increase storage requirements 
search performance suffer tree tall slow 
shall see section experiments naive method ended twice slow scan want improve naive method making representation trails compact 
solution propose exploits fact successive points trail probably similar el mbr example dividing trails sub trails mbrs grouping mbrs larger ones 
contents sliding window nearby offsets similar propose divide trail data sequence sub trails represent minimum bounding hyper rectangle mbr 
storing thousands points trail shall store mbr important time guarantee false dismissals query arrives shall retrieve mbrs intersect query region shall retrieve qualifying sub trails plus false alarms sub trails intersect query region mbr 
gives illustration proposed approach 
trails drawn curve labeled cl north west side haa divided sub trails mbrs second labeled south east side divided sub pi trails 
notice possible mbrs belonging trail may overlap ss illustrates 
propose map data sequence set rectangles feature space 
yields significant improvements respect space respect response time shall see section 
mbr corresponds sub trail points feature space correspond successive positioning sliding window data sequences 
mbr store ta offsets positioning unique identifier data sequence sequence id extent mbr dimension ow ig ig 
mbrs subsequently stored spatial access method 
trees case mbrs recursively grouped parent mbrs grandparent mbr shows leaf level mbrs grouped form mbrs higher level assuming fanout items non leaf node 
note higher level mbrs may contain leaf level mbrs different data sequences 
example left side mbr contains part south east curve 
shows structure leaf node non leaf node 
notice non leaf nodes need carry information sequence id offsets ta 
fl fl max 
level leaves id 

leaf level fl min fl max max index node layout levels 
completes discussion structure proposed index shall refer st index sub trail index 
questions answer complete description method 
insertions new data sequence inserted way divide trail feature space sub trails 
queries handle queries especially ones longer topics subsections respectively 
fz pi pi el ik packing points fixed heuristic sub trail size adaptive heuristic 
insertion methods divide trails sub trails saw data sequence mapped trail feature space 
question arising optimally divide trail feature space sub trails eventually mbrs number disk accesses minimized 
idea pack points sub trails pre determined fixed number 
justifiable way decide optimal value constant 
idea simple th stored sequence sub trail size len 
heuristics may lead poor results 
illustrates problem having pre determined sub trail size 
shows trail points assumes method description sequential scan naive xed adaptive database 
search st index point sub trail 
search st fixed number points sub trail 
search st variable number points sub trail 
table summary searching methods descrip tions sub trail length 
resulting mbrs mbr shown 
collectively refer heuristics fixed method index fixed length sub trails 
clearly naive method special fixed method sub trail length set 
looking method able adapt distribution points trail 
propose group points sub trails means adaptive heuristic greedy algorithm 
algorithm uses cost function tries estimate number disk accesses options 
resulting indexing method called adaptive 
alternatives introduced 
table lists brief description method 
complete description adaptive method define cost function concept marginal cost point 
developed sides ll 
ln dimensional mbr node tre estimates average number disk accesses da node contribute average range query da fi lo formula address space hss normalized unit hyper cube 
expected number disk accesses da cost function 
marginal cost point defined follows consider sub trail points mbr sizes ll ln 
marginal cost point sub trail mc da divide cost mbr equally contained points 
algorithm follows algorithm divide assign point trail trivial sub trail successive point increases marginal cost current sub trail start sub trail include current sub trail searching queries longer previous subsection discussed insert new data sequence st index adaptive heuristic 
reexamine howto search subsequences match query sequence tolerance query shortest allowable len searching algorithm relatively straightforward algorithm query sequence mapped point qj feature space query corresponds feature space retrieve trails mbrs intersect query region index examine corresponding subsequences data sequences discard false alarms 
notice retrieved mbrs sub trails superset sub trails retrieve sub trail intersects query region mbr definitely reverse necessarily true 
introduces false dismissals 
handling longer queries len complicated 
st index knows subsequences length straightforward approach select subsequence prefix length st search data subsequences match prefix tolerance 
call method 
clearly return superset qualifying subsequences subsequence tolerance query sequence len len sub subsequences tolerance corresponding subsequence general prove lemma lemma sequences length agree tolerance pair corresponding subsequences agree tolerance 
euclidean distance completes proof 
th arch method query region feature space sphere radius volume proportional cf 
show reduce volume query region subsequently number false alarms 
loss generality assume len integral multiple case lemma keep longest prefix multiple len propose split longer query pieces length process sub query merge results sub queries 
approach takes full advantage st index show tolerance specified sub query reduced 
final result total query volume feature space reduced 
lemma establishes correctness proposed method 
consider sequences length len len consider disjoint subsequences ands 
lemma agree tolerance pairs si qi corresponding sub sequences agree tolerance fi indicates disjunction 
proof 
contradiction pairs subs quences distance ej adding distances distance contradiction 
formally qi vi vi iti qui shl contradicts 
searching hm uses lemma called search 
works follows algorithm search long query sequence broken sub queries correspond spheres feature space radius st retrieve sub trails mbrs intersect sub query regions examine corresponding subsequences data sequences discard false alarms 
compare search algorithms respect volume require feature space 
volume dimensional sphere radius constant dimensional space 
exactly volume algorithm 
algorithm yields spheres volume proportional total volume ef means proposed search method produce fewer false alarms better response time method features 
experiments implemented st index method adaptive heuristic ss described section ran experiments stock prices database points obtained sf af edu 
point real number having size bytes 
shows sample points stock price sequence 
system written aix ibm rs 
results frequencies dft feature space dimensions real imaginary parts retained dft coefficient 
illustrates trail feature space dimensional phase plot amplitude th dft coefficient vs amplitude st dft coefficient 
similarly plots amplitudes st rid dft coefficients 
figures window size points 
smooth evolution curves justifies method group successive points feature space mbrs 
tree store mbrs sub trail feature space 
carried experiments measure perfor mance promising method adaptive 
setting asked queries variable se measured wall clock time dedicated machine 
specifically query se quences generated random offsets data sequence obtaining subsequences length len offsets 
query se quence tolerance specified query run tolerance 
method followed order eliminate bias results may caused index structure uniform leaf level 
specified ex periments len 
carried groups experiments follows comparison proposed adaptive method naive method method sub trails consisting point 
experiments compare response time method adaptive sequential scanning queries length experiments queries longer experiments larger synthetic data set see superiority method holds dat 
comparison naive method 
illustrates index size function length sub trails alternatives naive fixed adaptive 
method requires kb naive method requires mb 
fixed method gives varying results length sub trails 
large size index naive method hurts search performance experiments sw iid tz om ss wo lm eti sample stock price sequence trail feature space th st dft coefficients equivalent trail st rid dft coefficients average cub trail length index space vs average sub trail length log log scales naive method approximately times slower sequentially scanning entire database 
response time short queries 
start ing method response time shortest ac queries queries length equal window size len 
points len gives relative response time sequential scanning method vs dex assisted method stands tree counting actual wall clock time method 
horizontal axis selectivity axes logarithmic scales 
query selectivity varies fairly large comparison points time series database 
see method achieves times better response time selectivities range 
carried similar experiments len observed similar behavior similar savings 
omit plots brevity 
method consistently achieves large savings sequential scanning 



owl query selectivity relative wall clock time vs selectivity loglog scale len points 
response time longer queries 
examine relative performance methods queries longer explained previous section cases split query merge results method 
illustrated proposed adaptive method outperforms sequential scanning times 
synthetic data 
examine tech nique performance time series database con points produced random walk method 
points generated starting value step increment step 
method forms sequential scanning times approx 
detailed design method efficiently handles approximate exact queries subsequence matching stored collection data sequences 
method generalizes mo oe relative measured wall clock time ml query relative wall clock time vs selectivity log log scale len points 
los relative measured clock time cm query relative wall clock time vs selectivity random walk data log log scale len points 
examined matching case queries sequences time series database length 
idea proposed method map data sequence set boxes feature space subsequently stored spatial access method tree 
main contribution designed detail knowledge indexing method subsequence matching 
method desirable features achieves orders magnitude savings se scanning showed experi ments real data requires small space overhead dynamic provably correct misses qualifying subsequences notice proposed method set feature extraction functions addition dft spatial access method handles rectangles 
includes extension method dimensional gray scale images general dimensional vector fields color images answer queries image content mri brain scans help detect patterns brain activation discussed agrawal imielinski swami 
database mining performance perspective 
ieee tins 
knowledge data ng 
rakesh agrawal christos faloutsos arun swami 
efficient similarity search sequence databases 
fodo conference evanston october 
available anonymous ftp pos cs umd edu ftp pub techreports fodo ps 
rakesh agrawal ghosh tomasz imielinski bala iyer arun swami 
interval classifier database mining applications 
vldb conf 
proc pages august 
rakesh agrawal tomasz imielinski arun swami 
mining association rules sets items large databases 
proc 
acm sigmod pages may 
taha soo 
bibliography spatiotemporal databases 
acm sigmod record march 
altschul gish miller myers lipman 
basic local alignment search tool 
journal molecular biology 
arya william cody christos joel richardson arthur toga 
pro medical image database system 
ieee data engineering bulletin march arya william cody christos faloutsos joel richardson arthur toga 
extending dbms support medical images 
tenth int 
onf 
data engineering icde february 
appear 
beckmann 
kriegel schneider seeger 
tree efficient robust access method points rectangles 
acm sigmod pages may 
christopher chatfield 
analysis time series 
chapman hall london new york 
third edition 
mathematical committee physical nsf en sciences 
grand challenges high formance computing communications 
na tional science foundation 
fy research development program 
robert edwards john magee 
technical analysis stock 
john magee springfield massachusetts 
th edition second printing 
faloutsos 
access methods text 
acm computing surveys march 
faloutsos equitz flickner niblack petkovic barber 
efficient effective querying image content 
journal ini information systems 
appear 
guttman 
trees dynamic index structure spatial searching 
proc acm sigmod pages june 
richard wesley hamming 
digital filters 
prentice hall signal processing series englewood cliffs 
jagadish 
spatial search polyhedra 
proc 
sixth ieee int conf 
data engineering february 
jagadish 
retrieval technique similar shapes 
proc 
acm sigmod conf pages may 
ibrahim kamel christos faloutsos 
packing trees 
second ini 
conf information knowledge management cikm november 
mandelbrot 
fractal nature 
freeman new york 
wayne niblack ron barber equitz myron flickner eduardo petkovic peter yanker christos faloutsos gabriel taubin 
qbic project querying images content color texture shape 
spie intl 
symposium electronic imaging science technology conf 
storage retrieval image video databases february 
available ibm research report rj feb computer science 
nievergelt hinterberger sevcik 
grid file adaptable symmetric structure 
acm tods march 
alan victor oppenheim ronald schafer 
digital processing 
prentice hall engl wood cliffs 
orenstein 
spatial query processing object oriented database system 
proc 
acm sigmod pages may 
mary beth gregory beylkin ronald man ingrid daubechies stephane mallat yves meyer louise raphael 
wavelets applications 
jones bartlett publishers boston ma 
samet 
design analysis spatial data structures 
addison wesley 
manfred schroeder 
fractals chaos power laws minutes paradise freeman new york 
sellis roussopoulos faloutsos 
tree dynamic index foi multi dimensional objects 
proc 
international conference vldb pages england september 
available aa src tr umiacs tr cs tr 
stare richard snodgrass 
bibliography temporal databases 
ieee bulletin data engineering december 
dimitris vassiliadis 
input state space ap proach prediction ac tivity solar wind variables 
int 
workshop applications arts cial intelligence solar ter physics september 
gregory wallace 
jpeg picture sion standard 
ca cm april 
