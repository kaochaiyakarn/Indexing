verifying completeness relational query results data publishing pang jain ramamritham lee tan data publishing owner delegates role satisfying user queries third party publisher 
publisher may untrusted susceptible attacks produce incorrect query results 
introduce scheme users verify query results complete qualifying tuples omitted authentic result values originated owner 
scheme supports range selection key non key attributes project join queries relational databases 
proposed scheme complies access control policies computationally secure implemented efficiently 

data publishing data owner delegates role satisfying user queries third party publisher 
model applicable wide range computing platforms including database caching content delivery network edge computing databases data publishing model offers number advantages conventional client server architecture owner undertakes processing user queries 
pushing application logic data processing owner multiple publisher servers situated near user clusters network latency reduced 
adding publisher servers cheaper way achieve scalability owner data center provisioning network bandwidth user 
data publishing model removes single point failure owner data center reducing database susceptibility denial service attacks improving service availability 
institute infocomm research heng mui keng terrace singapore department computer science engineering indian institute technology bombay mumbai india department computer science national university singapore science dr singapore permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
sigmod june baltimore maryland usa 
copyright acm 
illustrate financial information provider push historical stock prices analytics software proxy servers operated partner isps internet service provider 
arrangement enables users run different pricing risk models proxy servers directly depending central data center situated thousands miles away reducing communication latency processing bottlenecks 
publisher servers outside administrative domain data owner fact may reside poorly secured platforms query results generate accepted face value especially basis critical decisions 
provisions user check correctness query result terms authenticity values result originated data owner 
example employee table query publisher returns result 

names records swapped 
record spurious 
completeness record satisfying query conditions included result result 

query incomplete 
omitted 
problem checking authenticity query results studied 
proposed solutions require owner build sign hierarchy digests data set query processor subsequently uses construct correctness proof query result allow publisher aggregate signatures result tuples single result signature reduce transmission verification overheads 
best knowledge proposal devanbu provides verification query result completeness 
scheme works exposing tuples immediately left right boundaries query result user inspection proving user result tuples including boundary tuples contiguous database 
example consider employee table 
sorted salary attribute 
devanbu scheme query issued hr manager retrieve emp id name salary dept photo 





access control policies human resource hr manager sees records hr executive sees records salary query select emp salary example database 
proving records contiguous database publisher satisfy hr manager result contains qualifying records record result salary exceeds query condition 
suppose access policy database states human resource hr executives access records employees earning records presumably senior employees earning visible hr manager 
query submitted hr executive access control mechanism rewrite query select emp salary 
devanbu scheme return set records hr manager including record salary attempt prove records salary included 
clearly contradicts stipulated access policy hr executive 
contributions objective devise authentication mechanism enables user verify completeness relational query result generated untrusted server compromising access control rules database 
introduce basic scheme generates ordered list rn query range cryptographic proof entries bordering answer ri rj fall outside query range ri rj 
scheme adapted easily support queries retrieve data entries 
scheme secure sense computationally infeasible rogue publisher devise proof incorrect query answer 
building basic scheme extensions verifying general select project queries important class select project join queries involving primary key foreign key joins 
referring example scheme enable publisher return 
provide proof record higher salary stated query condition revealing directly indirectly salary amount range query retrieves tuples specified interval sorted attribute salary scheme handle range query unsorted attribute pulls back multiple partitions tuples dept 
demonstrate just simple enhancement scheme concurrently verify authenticity query result 
scheme amenable efficient implementation propose algorithm generates correctness proof time complexity logarithmic size domain underlying elements ri ordered list 
resulting query update overheads scheme significantly lower existing solutions digest hierarchies specifically merkle hash trees explained section 
remainder organized follows 
section describes cryptographic primitives data publishing model associated threats related 
basic approach completeness verification scheme introduced section 
section extends scheme support select project join queries relational databases 
section presents optimization techniques proposed scheme section analyses computation transmission costs incurred scheme 
section concludes discusses avenues 

background section begins defining cryptographic primitives 
target system deployment model associated security threats summarizing related 
cryptographic primitives proposed solution related cryptographic primitives way hash function way hash function denoted works direction easy compute hash value pre image hard find pre image hashes hash value 
examples include md sha 
terms hash hash value message digest interchangeably 
digital signature digital signature algorithm cryptographic tool authenticating integrity signed message origin 
algorithm signer keeps private key secret publishes corresponding public key 
private key signer generate digital signatures messages public key verify signatures messages 
rsa dsa commonly signature algorithms 
signature aggregation introduced multi signer scheme aggregates signatures generated distinct signers different messages signature 
signing message involves computing message hash signature hash value 
aggregate signatures simply multiplies individual signatures aggregated signature size individual signature 
verification aggregated signature involves computing product message hashes matching aggregated signature 
merkle hash tree shall explain merkle hash tree example intended authenticating data values detailed definition 
leaf node ni assigned digest di way hash function 
value example merkle hash tree public key user query result correctness proof owner data signatures publisher data publishing model internal node derived child nodes denotes concatenation 
addition value root node signed 
tree authenticate subset data values conjunction verification object vo 
example authenticate vo contains signed 
recipient computes checks signed 
accepted tampered 
system threat models depicts data publishing model supports distinct roles data owner maintains master database distributes associated signatures proves authenticity database 
data matching signature accepted user trustworthy 
publisher hosts database performs query processing behalf owner possibly query rewriting comply access control rules database 
access control model may discretionary mandatory role see 
regardless exact model publisher ensure data satisfy rewritten queries returned avoid contradicting access control rules 
publisher servers situated edge network near user applications 
publisher required trusted query results generates accompanied correctness proof derived database signatures issued owner 
user issues queries publisher explicitly gets redirected publisher owner directory service 
verify query results user obtains public key owner authenticated channel public key certificate issued certificate authority 
security considerations data publishing model 
publisher servers trusted concern privacy data 
obviously adversary gains access operating system hardware publisher server may able browse database illegal copies data 
solutions mitigate concern include encryption steganographic storage orthogonal :10.1.1.37.6439
concern relates user authentication access control specifying actions user permitted perform 
issues studied extensively complementary 
primary concern addressed threat dishonest publisher may return incorrect query results users intentionally influence adversary 
adversary cognizant data organization publisher server may attempt logical alterations data inducing incorrect query results example illegally effect fund transfers accounts 
data organization hidden example data encryption steganographic schemes adversary may sabotage database overwriting physical pages storage volume 
addition compromised publisher server return incomplete query results withholding data intentionally 
mechanisms users verify completeness query results essential 
related existing relevant describes scheme verifying completeness authenticity query results produced untrusted third party publishers 
scheme requires data owner construct merkle hash tree mht database table disseminate signed root digest users directly 
prove completeness result range query ordered list rn publisher needs disclose user entries immediately query range respectively 
words query result ri ri rj rj ri ri rj rj user check expanded result associated verification object vo signed digest mht 
solutions authenticating query results data publishing 
scheme exhibits characteristics 
mht constructed sort order table 

vo contains digests way root tree index vo grows linearly query result logarithmically base table 

attributes supposed filtered projection offered users verification 
potentially conflicting access control policies lead wasteful data transfer especially filtered attributes blobs photo attribute 
check completeness tuples left right boundaries query result exposed user contradict row access control policies database explained 

scheme works range query sorted attribute range query unsorted attribute pulls back segments tuples 
proposed vb tree augments tree hierarchy digests 
digests computed cumulative commutative hash function overcoming limitation 
avoid limitation node digest vb tree signed vo needs contain proofs smallest subtree query result 
vb tree built tuple attributes working tuple granularity circumvents limitation 
vb tree check completeness query results 
ma introduced efficient authentication scheme owner constructs mht attribute values individual tuples signs root digest mht 
prove authenticity query result server needs supply vo attributes projected tuple plus single signature combines signed digest result tuples signature aggregation scheme 
query result completeness addressed 

basic approach goal devise authentication mechanism enables user verify query results generated untrusted server 
proposed mechanism designed satisfy objectives security requirements intended ensure overheads incurred mechanism acceptable practice completeness user verify records satisfy conditions query included result 
precision records attribute values satisfy conditions query returned 
motivation avoid contradicting access control rules database part query conditions query rewriting 
authenticity user check values query result originated owner tampered spurious records introduced 
security computationally infeasible publisher cheat generating proof incorrect query result 
efficiency procedure publisher generate proof correct complete authentic query result polynomial complexity 
likewise procedure performed user verify query result polynomial complexity 
section solve problem verifying completeness concurrently achieving high precision output greater predicate sorted list 
section gives informal proof security proposed scheme section extends scheme relational selection projection join queries 
show section scheme ensure authenticity optimization techniques achieve efficiency section 
greater predicate problem definition consider data publishing model section 
suppose data owner creates sorted list distinct values rn ri lower upper bounds domain respectively 
duplicate values disambiguated appending replica number ri repl entries distinct 
user submits query ri larger equal constant 
publisher needs prove user result ra ra rb complete contiguity pair successive entries ri ri appear consecutively terminal element element rb rn 
origin ra element satisfies query condition 
simplify solution owner inserts fictitious entries left delimiter right delimiter rn sorted list rn rn 
fictitious entries certified owner users recognize delimiters encountered query result 
assume lower upper bounds known 
conceptually contiguity condition result proved creating digital signature see section ri ri immediate left right neighbors sig ri ri ri ri signature function owner private key collision resistant hash function ri function produce digest entry record ri defined simply ri ri initially denotes concatenation 
delimiters sig sig rn rn rn query result publisher returns associated signatures sig ri plus ra ease presentation assume rn careful implementation possible set rn publisher user hash times result ra ra ra rn sig 
sig 
completeness check greater predicate rn 
user computes digest entry matches signatures sig ri ri ri ri verify successive entries neighboring entries original list particular successful test signature right delimiter rn proves terminal result rn correct 
prove result correct origin ra theoretically re define ri ri additive hash function 
publisher return ra user compute followed ra ra ra 
user derive ra just knowledge actual value ra 
unfortunately known algebraic function satisfying additive property simple way derive inverse function 
existence inverse function allows cheating publisher server return ra ra breaking security scheme 
absence suitable additive hash function need devise way check result correct origin re define function hashes iteratively applies collision resistant hash function prove ra publisher computes returns intermediate digest ra place ra user hashes times produce ra ra ra verification sig ra 
scheme summarized 
reason choosing formula requires defined ra requires defined ra clear discuss implementation optimizations section 
procedure secure cheating publisher provided produce ra ra 
inverse function undefined computationally infeasible derive 
iterative hash function 
particular ensure just need choose hash function outputs different digest length length avoid cluttering presentation omit consideration 
addition picking hash function oneway see section user able intermediate digest ra deduce value ra 
example suppose range entries 
scheme owner inserts fictitious entries say 
owner derives 
signature generated entry sig sig suppose user submits query entries larger equal 
result publisher returns right delimiter signatures result entries right delimiter 
values user hashes times obtain calculates directly values checks signatures result entries right delimiter sig sig sig 
signatures matched user accepts result result incorrect 
number hashing operations calculating linear size domain computation cost high large domains long integers 
section explain reduce number hashing operations logarithmic domain size 
completeness analysis theorem proposed scheme ensure query result completeness respect threat model section 
proof sketch various cases publisher may attempt return incomplete results follows case ra 
ra ra undefined computationally infeasible publisher find replacement user hash times get ra 
case fact ri ri 
implies rn ordered 
situation publisher supposed rn rn hashed times user derive rn rn rn matching right delimiter sig rn 
rn rn rn undefined computationally infeasible derive 
case ra rb words terminal wrong largest values omitted 
match sig rb user requires rb formula 
deceive user accepting rb legitimate right delimiter publisher needs fake owner signature ensure rb tallies signature genuine right delimiter rn rb computationally infeasible 
possibility publisher pass signed right delimiter rn place rb sure formula produces digest 
require collision hash function case ra ri rj rn words entries contiguous entries ra rn omitted 
query result causes user compare ri ri rj ri ri ri 
ordered ri rj comparison succeeds collision hash function defined terms formula 
case ra ri rj rk rn rj words publisher introduces spurious entry query result 
deceive user publisher need valid signature rj generated owner 

verification relational query results section extend basic approach section relational queries range selection sorted attribute projection join range selection unsorted attribute order 
selection query selection relation sorted attribute condition ai ai attribute 
verify completeness result selection operations general necessary support range selection form attribute specified constants 
equivalent requires trivial adjustment formulating result affect verification procedure mapped 
require selection attribute sorted result tuples occupy contiguous range formulate problem follows 
extend scheme support selection unsorted attribute section 
problem definition relation schema ar rn sorted attribute range ai attributes publisher wishes prove user result ra ra rb query condition ra rb complete record ri satisfies ri ri ra ra hash times ra sig 
merkle tree record query 
result completeness verification select project join query scheme section extended relational queries shown 
owner inserts fictitious records rn rn rn 
re define formula mht ensure ra publisher returns intermediate digest ra user hashes times produce ra 
addition publisher sends back digest ra user compute ra formula verify sig ra formula 
similar purpose serves introduced formula verifying rb 
done getting publisher return intermediate digest rb user hashes times obtain rb rb 
security verification requires rb rb undefined computationally infeasible derive 
adaptation completeness analysis section range selection straightforward 
third component computation mht root digest merkle hash tree attribute values record ar 
digest needed uniquely identify record necessarily primary key illustrate suppose contain records value xyz xyz xyz xyz just 
publisher omits query result user derive matches sig matches sig omission go undetected 
authenticity interesting consequence incorporating mht formula sig depends attribute values means attempt tampering content detected 
latest formulation enables user check query results completeness authenticity 
selection projection query projection ap ap ai attributes relation sorted projection operation filter attributes user needs order test query result completeness 
scheme want publisher return user attribute values result tuples filtered avoid compromising access control rules disclosing sensitive columns 
reason omitted attribute values large blobs sending user incur space transmission overheads unnecessarily 
scheme allows unwanted attribute values removed publisher 
mht formula defined root digest merkle hash tree attribute values record publisher provide digest place actual value attributes projected user compute mht actual values 
issue consider handling duplicates result queries user may want retain duplicates computation sum avg 
queries user may require publisher perform duplicate elimination specifying keyword distinct 
case mht component formula enables user uniquely identify duplicate publisher omit duplicates detected 
case duplicates needed scheme requires publisher ri signature sig ri eliminated duplicate ri enable signatures checked 
selection projection join query join condition form ai aj ai aj attributes relations respectively 
proposed scheme defined formula uses signatures key attribute relation generate proof completeness query results relation 
scheme may ad hoc joins arbitrary attributes general 
primary key foreign key joins important class join operations supported follows 
consider ai aj ai foreign key attribute aj corresponding primary key referential integrity constraint mandates instance ai matching entry aj 
consequently joining aj cause instance ai drop query result need deal selection operations ai aj 
achieved ordering ai owner master database constructing signatures sort order 
join operation user checks completeness result respect ai possibly account selection conditions ai aj select project queries 
class joins supported ai aj completeness join result checked techniques earlier entry ordered partition join result min ai entry ordered partition max aj 
verify partition contains satisfying ai max aj 
verify partition contains satisfying min ai aj multipoint query section considered range query result tuples occupy contiguous range attribute relation sorted 
case query involves selection attribute select emp salary dept table result comprise multiple points ranges call multi point query 
general result multi point query treated range contiguous tuples satisfy query condition filtered 
consider filtered record ri result range 
example 
case access control policy permits user see ri 
publisher server returns attribute value fails query condition ri dept example plus digests remaining attribute values ri 
enables user compute ri matching signatures ri ri ri 
case access control policy prohibits user seeing ri query rewritten filter ri 
publisher server return actual attributes ri case 
solution introduce additional columns relation column user group access control model indicate individual records relation visible user group 
example consider access model differentiates users security clearance levels secret confidential unclassified 
owner add binary attributes example table indicate record seen users secret confidential unclassified respectively 
filtered record ri shielded user confidential clearance publisher return ri confidential plus digests attributes ri 
user compute ri matching signatures ri ri ri 
solution reveals total number records fall result range hides actual attribute values filtered records 

optimization having introduced extended scheme verifying completeness relational query results discuss conceptual optimized 
bm optimized scheme implemented efficiently 
clarity focus greater predicate techniques apply relational queries 
reduction hashing operations note expensive compute 
example byte integer field entails hashes worst case requires hours sec hash 
reduce processing overhead observe general number represented polynomial 
number base logb 
example yields binary representation gives decimal representation 
say polynomial canonical representation 
observation exploited optimize derivation depicted owner replaces formula 

executing query publisher returns intermediate digests coefficients polynomial representation ra 
coefficients canonical representation user hashes times times produce 
possible 
defined 
illustrate suppose ra ra publisher returns digests ra ra ra ra 
receiving user hashes ra produce ra ra twice produce ra user computes ra ra ra ra ra confirms ra 
complication 
suppose query condition 
publisher gets ra procedure produces ra ra ra ra corresponding non canonical representation general complication arises enable user succeed verification owner produce digests corresponding non canonical representations 
unfortunately noncanonical representations worst case 
clearly overhead unacceptable 
limit number non canonical representations supported observe user knows value publisher access publisher return digests corresponding certain preferred non canonical representations order influence representation user derives 
referring running example publisher returns digests corresponding representation user derive final digests corresponding definition representation 
valid definition canonical representation 
define preferred non canonical representations 


note representations may valid 
example canonical representation valid 
lemma canonical representation 
exists valid representation imax imax largest holds imax valid representation 

proof coefficients canonical representations satisfy imax imax imax valid representation 
lemma allows system support canonical representation plus preferred non canonical representations defined 
arrive implementation scheme 
signature construction owner creation update sorted list rn rn recall rn fictitious entries owner derives signature new entry ri follows starting non canonical representations sig merkle hash tree 
bm signature construction sig 
merkle hash tree intermediate digests sent publisher user digests unused representations 
hash hash times times ra 
ra verifying ra sig ri ri ri ri 
ri verifying result entry ri 
ri root digest mht noncanonical representations completeness verification canonical representation 
ri owner computes digest valid non canonical representation ri 
ri ri ri 
ri ri ri 
ri invalid representation undefined drop computation digest ri ri 
ri ri 
ri merkle hash tree mht built non canonical representations root digest mht concatenated digest canonical representation hashed produce digest ri 
similarly ri ri derived left right neighbors respectively 
signature ri generated formula 
completeness verification publisher user items bold font transmitted publisher user verify result ra ra rn query condition user checks signature sig ri ri turn requires ri 
compute ra see publisher utilizes knowledge ra compute canonical representations ra 
equated canonical representation return root digest mht noncanonical representations starting largest 
holds increment imax non canonical representation imax valid 
equated imax valid imax exist return digest canonical representation digests mht covering representations log digests explained section 
coefficients polynomial representation ra calculated publisher computes intermediate digests ra returns user 
receiving digests user determines canonical representation hashes ra digests times derive ra 
user concatenates derives digest 
canonical representation combined mht root digest publisher produce ra 
combined mht digests derive root digest digest canonical representation produce ra 
shown ri ri produced publisher returns root digest mht non canonical representations ri 
query result ri user generates digests ri combines single digest canonical representation digest concatenated root digest mht publisher produce ri 
reduction signatures implementation issue consider overheads transmitting verifying signature ri large especially communication bandwidth processing capability user limited 
overhead publisher combine signatures associated individual entries result aggregated signature techniques proposed 
optimization helps user cut just signature verification operation query result 
resulting savings computation substantial signature verification times slower hashing operation potentially contain thousands entries 
signature aggregation implemented carefully explained 
ensure aggregated signatures secure aggregation scheme possess immutability property difficult unauthorized party generate new verifiable aggregated signatures aggregated signatures past query results 
achieve immutability practical aggregation schemes proposed adopted 

cost analysis having authentication mechanism analyze overheads introduces relational queries greater selection extension range selection straightforward 
quantifying communication overhead looking incremental computation cost 
due space constraint shall focus costs involving user shoulders runtime authentication load party system 
parameters analysis summarized table values obtained 
computation costs model hashing signature verification operations concatenation assumed negligible relative 
hashing operations involve way hash functions sha simple hash functions say conventional hash index 
parameter meaning default computation cost hash operation sec computation cost verifying signature msec total computation cost incurred user size hash digest bits size signature bits total size authentication information sent user size data entry bytes 
logb table cost parameters communication publisher user authentication information publisher transmits user includes components digests computing ra 
component formula requires intermediate digests corresponding polynomial representation ra log digests mht covering representations ra selected plus digest canonical representation worst case non canonical representation 
components formula require digest 
traffic amounts log 
digests computing ri ri publisher sends root digest mht non canonical representations ri root digest mht non canonical representations ri digest mht 
traffic result entries amounts 
digest right delimiter rn size 
aggregated signature derived individual signatures result entries 
size signature 
total traffic user log traffic overhead record size bytes user traffic overhead plots user traffic overhead defined data entry size various number result entries 
parameters set default values bits bits respectively 
shows traffic overhead reduces quickly grows cost aggregated signature amortized result entries 
reduction stabilizes point entry overhead falls bytes 
formula observe space overhead incurred proposed solution linear result size 
compares favorably existing scheme devanbu enables verification query result completeness space overhead scheme grows linearly query result logarithmically underlying database 
computation overhead user computations performed user authenticating query results include derivation ra 
entails hashing intermediate digests corresponding selected representation ra requires additional hashes 
worst case selected representation non canonical resulting digest combined digests mht non canonical representations digest canonical representation get component formula require log hashes 
evaluation formula incurs hash 
computation cost amounts log 
derivation ri ri user computes digests corresponding canonical representation ri requires hashes 
combining digests incurs hash 
repeated ri 
evaluation formula incurs hash 
computation result entries amounts 
user computation overhead ms rec rec rec user computation overhead derivation ri ri ri amounting 
derivation aggregated digest matching aggregated signature costing 
total computation cost incurred user log logb tunable parameter minimized choosing equivalently value log minimum 
shown occurs dy db 
illustrate plots different result sizes 
computation overhead user performance bottleneck deployed system set depending actual range 
logb key integer example 
default values obtained formula reduces msec 
roughly msec msec sec result size records respectively significant 
database updates having evaluated overheads verifying query results consider impact proposed scheme update operations 
produce completeness proof query results runtime owner pre generate signatures attribute group attributes expected participate query conditions 
analogous creating trees attributes facilitate efficient query processing 
fact extended scheme defined formula incorporated tree storing signatures record pointer leaf node tree 
formula record update affects signature record left right neighbors 
conceptually similar updating doubly linked list 
tree node typically contains hundreds entries time affected signatures reside node additional page locking overhead 
worst case affected signatures span adjoining leaf nodes 
update overheads incurred scheme significantly merkle hash tree schemes need propagate update digest root node locking contention hot spot 
scheme appropriate databases experience non negligible update activities 

scheme authenticating results generated untrusted relational query processors 
scheme enables query processor produce proof result complete qualifying tuples omitted authentic result values originated owner 
scheme disclose data necessitated query conditions contradict access control policies database 
scheme computationally secure introduces low query processing update overheads compared existing alternatives 
currently extending number ways 
extension support multi dimensional indices avoid having generate set signatures interesting sort order table 
looking generalizing proposed scheme non relational structures directed acyclic graphs 
extension implement scheme open source database system 

robert deng jagadish wang tan reviewers helpful suggestions 

secure hard disk encryption 
www com 
disk encryption 
www net 
encrypting file system efs windows 
www microsoft com windows works security encrypt asp 

www org products 
proposed federal information processing standard digital signature standard dss 
federal register 
secure hashing algorithm 
national institute science technology 
fips 
anderson needham shamir :10.1.1.37.6439
steganographic file system 
information hiding nd international workshop ed portland oregon usa april 
boneh lynn shacham 
aggregate verifiably encrypted signatures bilinear maps 
proceedings advances cryptology eurocrypt biham ed lncs springer verlag 

trusted products evaluation 
communications acm 
devanbu gertz martel stubblebine 
authentic data publication internet 
th ifip working conference database security pages 
huebsch hellerstein lanham loo shenker stoica 
querying internet pier 
proceedings th international conference large databases pages 
luo krishnamurthy mohan pirahesh woo lindsay naughton 
middle tier database caching business 
proceedings acm sigmod international conference management data pages 
ma deng pang 
authenticating query results untrusted servers open networks 
submitted publication 

apps edge 
infoworld may 
www infoworld com article html 
merkle 
certified digital signature 
proceedings advances cryptology crypto lecture notes computer science volume pages 
miklau suciu 
controlling access published data cryptography 
proceedings th international conference large data bases pages 
tsudik 
authentication integrity outsourced databases 
proceedings network distributed system security symposium february 
tsudik 
signature immutability aggregated condensed signatures 
proceedings european symposium research computer security september 
neuman tso 
kerberos authentication service computer networks 
ieee communications magazine 
pang tan 
authenticating query results edge computing 
ieee international conference data engineering pages march 
pang tan zhou 
steganographic file system 
proceedings th international conference data engineering pages bangalore india march 
rivest 
rfc md message digest algorithm 
internet activities board 
rivest shamir 
simple schemes 
theory lcs mit edu rivest pdf version dated 
earlier version appears security protocols lecture notes computer science lncs pp 

rivest shamir adleman 
method obtaining digital signatures public key cryptosystems 
communications acm 
sandhu samarati 
access control principles practice 
ieee communications magazine 
saroiu gummadi dunn gribble levy 
analysis internet content delivery systems 
proceedings th symposium operating systems design implementation pages 
