bringing semantics web services owl approach david martin massimo paolucci sheila mcilraith mark burstein drew mcdermott deborah mcguinness parsia terry payne marta sabou monika naveen srinivasan katia sycara artificial intelligence center sri international menlo park ca usa martin ai sri com robotics institute carnegie mellon university pittsburgh pa usa paolucci ri cmu edu department computer science university toronto toronto ontario canada sheila cs toronto edu 
service interface description languages wsdl related standards evolving rapidly provide foundation interoperation web services 
time semantic web service technologies ontology web language services owl developing means services richer semantic specifications 
richer semantics enable fuller flexible automation service provision support construction powerful tools methodologies 
sets technologies benefit complementary uses ideas 
shows owl conjunction web service standards explains illustrates value added semantics expressed owl 
promise web services need widely accepted standards enabling recognized considerable efforts underway define evolve standards commercial realm 
particular web services description language wsdl established essential building block evolving stack web service technologies developed standardized web services description working group wsdl essence allows specification syntax input output messages basic service details needed invocation service 
wsdl support specification workflows composed basic services 
area business process execution language web services bpel ws development oasis prominent status 
web services choreography working group explore technical area 
respect registering web services purposes advertising discovery universal description discovery integration uddi received attention date 
time recognition growing need richer semantic specifications web services enable fuller flexible automation service provision support construction powerful tools methodologies promote semantically founded reasoning services 
rich representation language permits comprehensive specification different aspects services provide better foundation broad range activities web service lifecycle 
example richer semantics support greater automation service selection invocation automated translation message content heterogeneous interoperating services automated semi automated approaches service composition comprehensive approaches service monitoring recovery failure 
road richer semantics help provide fuller automation activities verification simulation configuration supply chain management contracting negotiation services 
meet need researchers developing languages architectures related approaches resulting body goes heading semantic web services particular authors members owl coalition developing ontology web language services owl seeks provide building blocks encoding rich semantic service descriptions way builds naturally owl semantic web language undergoing standardization 
owl daml related may viewed efforts lay foundations effective evolution web service related capabilities supported current maturing technologies 
time goal promote rapid adoption semantically expressive technologies understood done near term 
taken pains construct mechanisms owl dominant web services standards wsdl 
purpose provide initial roadmap deployment semantic web services owl conjunction wsdl related standards provide clear delineation potential benefits richer semantics specifying web services 
show owl conjunction web service standards focusing particularly wsdl explain illustrate value added semantics expressed owl 
illustrate points simple running example section 
section explains owl describe example service grounded wsdl description 
sections show combined owl specifications support service enactment service discovery service composition respectively 
sections related summary approach potential importance web services 
motivating example amazon com provides openly available web service allows client programs browse amazon databases locate books products put web shopping cart accessed main amazon web site browser finalize purchases 
web service client programs written avail provided wsdl specification service request wide range semi structured keyword searches amazon web site data base 
clients search books author products particular manufacturer dvds movies director 
customer reviews seller profiles accessible 
information visit www amazon com webservices 
amazon provides wsdl specification web service describing operations performed tutorials code sample clients 
tutorials code samples needed programmers properly utilize wsdl interface 
software system agent read utilize wsdl interface human assistance wsdl specification language provide means including representations semantics defined operations associated messages elements 
example inputs outputs parts corresponding wsdl messages amazon wsdl operations typed strings 
take key objective semantic web services owl bridge gap 
owl provides language specifying function preconditions effects operation semantic types inputs outputs service 
owl assumption definitions semantic concepts available referenced uris semantic web service client programs means sharing terms clients find definitions referenced concepts represented owl semantic description language 
result owl description services wsdl description client program distinguish operation model number camcorder requiring book author name look similar request operations search database 
client properly interpret result queries programming specific interface 
owl semantic typing elements communication amazon client automatically identify inputs elements internal goals required kind search desired transform elements necessary appropriate string form interpret elements returned message 
wsdl specification outputs call service similarly lacks semantic definition 
amazon defined search operations return results data structure named details regardless product information requested 
product types inferred data structure analyzing elements filled 
example details contains field authors describe books field directors describe movies 
client recognize values fields indicate book movie 
type item specified details record clearly identified type field interface designer wsdl provides way uniform way enabling interpretations 
wsdl lack semantic descriptions meaning inputs outputs impossible develop software clients human assistance dynamically find successfully invoke service 
wsdl specifications services interpreted programmers interpret names keywords message elements supporting documentation integrate specific services client applications 
objective semantic web services support clients find correctly utilize newly discovered services additional programming 
clients example capable finding sites selling books cds comparing prices particular items sites services wsdl interfaces known advance developer client 
semantic web service clients able interact service long describe wsdl operations terms compatible shared semantic web representations books cds information requests purchase sale requests monetary units 
reasons web services discovered service repository semantic descriptions characterizing services minimal human intervention 
furthermore discovery services robust face service design changes time service protocols republished re interpreted client software time 
introducing semantics owl daml owl ontology interrelated known profile process model grounding 
brief profile express service purposes advertising constructing service requests matchmaking process model describes works enable invocation enactment composition monitoring recovery grounding maps constructs process model detailed specifications message formats protocols forth normally expressed wsdl 
primarily concerned fundamental constructs process model 
wsdl allows specification operations basic building blocks web services 
development wsdl underway stable time writing allow owl 
operations provide organizational structure input output message syntax patterns specified 
owl provides analogous somewhat construct known atomic process characterized primarily terms inputs outputs preconditions effects 
inputs outputs atomic process types description logic typing system owl allows concepts defined shared part semantic web 
example accompanying code sample gives simplified owl declaration atomic process io specifications 
due space constraints omit namespace qualifiers example 
case atomicprocess input output belong owl process model namespace 
assume human booktitle isbn classes defined appropriate domain ontologies having namespaces 
atomicprocess id input id author resource human input input id title resource booktitle input output id resource isbn output grounding atomic process establish correspondence particular wsdl operation correspondence io element particular wsdl message part element 
needed grounding specify xslt script transform input instance relevant class precise syntactic form specified wsdl vice versa outputs 
additional details examples owl may important part semantic web service description specification conditions constraints including preconditions effects process service 
preconditions logical formulae need satisfied ensured true service requestor prior execution service 
effects logical formulae state true successful execution service 
owl effects side effects execution service 
information providing services side effects 
transaction oriented services side effects world user credit card sending goods description side effects critical certain aspects web service automation discuss subsequent sections 
specification process preconditions effects owl allows expressive language owl ruleml drs proposed owl rules language example languages express precondition service stating valid account valid credit card order purchase 
complete exposition owl may various papers listed 
sections discuss case studies owl contributions areas service enactment discovery composition 
enactment enactment process client applies declarative description service request service interpret response 
description interpreted owl process model published service wsdl specs grounded 
enactment begins reasoning backwards inputs required selected service find information available client required successfully invoke service 
input values mapped service grounding corresponding elements wsdl message pattern resulting message communicated service 
output message handled essentially reversing process 
wsdl output message received client transformed grounding owl representation content message interpreted client reasoning engine 
implement process amazon web service require owl description service fully represents inputs outputs service 
partially automate creation description generating initial owl description amazon web service tools transform wsdl partial owl specification wsdl description contain sufficient information form complete owl process model manually supplement generated description steps adding semantic descriptions input parameter generated process model supplying xslt data transformations needed produce corresponding grounded message parameter strings constructing composite process model links various operations provided web service semantically meaningful message patterns login search add shopping cart 
resulting process model shows relationships various service operations represented resulting owl fig 
simplified process model amazon web service process model 
client perform types tasks search amazon data bases author search artist search types searches view modify shopping cart adding new items clearing looking contents performing composite shopping process combines searching adding product shopping cart 
wsdl description amazon web service described operations corresponding leaves graph 
owl process descriptions specifies semantic types data required input returned output 
example input author search instance class human stands particular relationship book sought written 
owl classes properties constraints instances identified particular input values critical inference process allows formulation service requests requiring programmer write special purpose code specific possible type service request 
client goal find price particular book searching construct appropriate elements search request identifying items author relevant relationship information book sought 
service invoked selected right kind information described part output service describes information associated database elements books client reason output description isbn book back necessary input elements author title book isbn sought 
consequence client knows data returned need guess instantiation details data structure 
owl grounding takes care mapping concepts describe inputs outputs processes inputs outputs corresponding operations amazon wsdl specification 
result reasoning web service take advantage owl logics ontologies actual invocation consistent amazon requirements 
able interact successfully amazon web site daml virtual machine discovery discovery process finding web services capability 
general discovery requires web services advertise capabilities registry requesting services query registry web services particular capabilities 
role registry store advertisements capabilities perform match request advertisements 
assume infrastructure centralized registry type infrastructure emerging web services 
discussion generalizes architectures 
discovery process requires language encode web service capabilities advertisement requests 
furthermore discovery requires matching process compares advertisements requests verify describe matching capabilities 
section describe owl may express match capabilities 
show owl add capability matching uddi de facto standard discovery registry web services 
representing capabilities capabilities web services correspond functionalities provided web services 
broadly speaking ways represent functionalities 
approach provides extensive ontology functions class ontology corresponds class homogeneous functionalities 
simple example ontology specifies taxonomy services shown 
ontology web services amazon may defined instances classes represent capabilities 
amazon example may advertise service 
second way represent capabilities provide generic description function terms state transformation produces 
typically ai planning languages pddl example amazon may specify provides service requests book title author address valid credit card number produces state transition book delivered address owl class rdf id service owl class rdf id information service rdfs subclassof rdf resource service owl class owl class rdf id rdfs subclassof rdf resource service owl class owl class rdf id rdfs subclassof rdf resource owl class owl class rdf id rdfs subclassof rdf resource owl class credit card charged book change ownership 
despite differences ways represent capabilities ontologies provide connection web service general description environment web service operates 
trade offs representations functionalities help choose representation analyzing task needs 
explicit ontology capabilities facilitates discovery process matching process reduced subsumption capabilities ontology 
hand enumerating possible capabilities restricted domains ontology encoding may difficult 
example consider problem representing translation services source language ls target language lt assuming possible languages possible types translation services 
services taxonomy different classes service pair languages translated just represent translation services general category explicit properties allow particular services describe languages translate translate 
approach consistent describing capability terms state transformation 
distinguishes translators describing produce different kinds results 
note describing types inputs outputs service sufficient distinguish capabilities 
consider example service takes geographic region input produces names different wines output 
input output couple different services reports wines produced region reports wines sold region 
owl supports views capabilities web services 
service profile module owl provides high level descriptions services transformation state 
extent core service profile provides view web service process requires inputs precondition valid results outputs effects true 
furthermore owl provides schema service profiles subclassed describe specific class capabilities translation services wine selling services 
precisely service profile provides types information functional description web service terms transformation web service produces second set non functional properties specify constraints service provided 
functional description describes information transformation results production outputs set inputs state transformation results generation effects starting state preconditions satisfied 
non functional properties specify quality service provided web service security requirements type encryption policies apply 
owl synthesizes extensional functional view web services provides complete description services describes 
take advantage ontologies services products exist extent able represent capabilities web service 
furthermore transformation produced web service provide finer grain description web service able describe effects web service capability correspond functional description 
matching capabilities capability matching compares capabilities provided advertised services capabilities needed requester 
goal find advertiser produces results required requester 
general unrealistic expect capability offered exactly match query 
example requested service may stock quote information task matching engine decide accomplished service provides financial news 
matchmaker determine capability advertisement indicates service accomplish particular function specified query 
number capability matching algorithms proposed owl 
service descriptions service profiles ontologies available decide match service requests advertisements services provided 
general exploit views capabilities described 
matching algorithms described assume availability ontologies functionalities express capabilities 
matching request available advertisements reduced subsumption relation 
different degrees match detected depending advertisement request describe capability subsumes 
matching algorithms assume capabilities described state transformation produced web service 
compare state transformation described advertisement described request 
perform matches comparing outputs comparing inputs 
output required requester kind covered subsumed advertisement inputs checked 
inputs specified request subsumed input types acceptable service service candidate accomplish requester requirement 
reality asymmetry matching inputs outputs web service 
ultimately requester needs web service produces desired outputs 
web service provides desired outputs requester attempt satisfy inputs composition capabilities find web services provide desired inputs 
relation uddi uddi universal description discovery integration industrial initiative goal create internet wide network registries web services 
uddi allows businesses register presence web specifying points contact terms ports service process requests terms physical contacts people answer questions service 
addition uddi provides language specify unbounded set features services help process service location selection service invocation 
uddi enjoys support prominent software hardware companies invested heavily web services 
support uddi de facto standard repository web services 
despite role uddi provides weak discovery mechanism allow discovery web service bases problems provides 
main problem uddi provide capability representation language owl service profile 
consequence uddi provide capability search 
result uddi supports location information web service known web service impossible locate web service basis problems solves 
owl uddi complement 
uddi provides world wide distributed registry virtually industry standard 
side owl provides information required capability matching 
owl uddi matchmaker integrates owl capability matching uddi registry 
integration mapping owl service profiles uddi web service representations shown fig 

mapping function defines set specialized uddi tmodels store owl information represented standard uddi web service representation 
tmodels unbounded set properties associated web service specification 
owl profile name title phone fax email servicename input output precondition effects business service name contact person name phone email address discovery urls business key business entity name description tmodel tmodel tmodel tmodel input tmodel output tmodel precondition tmodel effect tmodel fig 
owl uddi mapping integrated owl uddi provides functionalities provided uddi exactly api uddi interact retrieve information available web services 
addition owl uddi supports capability matching advantage owl capability representation matching process proposed result uddi possible search find web services capabilities 
composition composition process selecting combining executing web services ws achieve user objective 
travel arrangements www conference trip buy apple best available price examples possible user objectives addressed composition 
human beings perform manual ws composition exploiting cultural knowledge web service www apple com debit credit card send information provided service web pages order execute collection services achieve objective 
automate ws composition information encoded explicitly unambiguous computer interpretable form 
existing industrial standards ws description encode level detail 
descriptions provide unambiguously computer interpretable consequence reliably manipulated automated reasoning system need owl 
automated ws composition akin ai planning problem software synthesis problem draws heavily areas research order perform automated ws composition reasoning system order combine execute web services collectively achieve user objective 
involves resolving constraints web service inputs outputs preconditions effects typically outputs effects oes user desires 
example starts agent goal desired outputs effects matches outputs effects web service modeled process result instantiation process plus descriptions new goals satisfied inputs preconditions process 
new goals inputs preconditions naturally match processes outputs effects composition arises naturally 
constraints inputs outputs preconditions effects dictate composition web services 
types composition problems distinguished involve services ii involve information providing services 
requires rich semantic representation inputs outputs io 
requires representation 
recall effects side effects program www apple com debit credit card send 
ws preconditions conditional effects encoded existing industrial standard 
encoded unambiguous computer interpretable form owl 
supplement information contained wsdl grounding features wsdl level 
addition matching automated ws composition problem involve selecting alternative web services match constraints composition problem 
example web services user buy 
order select alternative services composition engine requires form service selection 
akin discovery problem described previous section argued requires representation properties capabilities functioning web service 
different approaches ws composition 
characterize owl processes actions inputs outputs preconditions effects planning technology achieve ws composition 
example models processes format strips operator plans sequence web services achieve user goal 
principle system string series actions arrive novel plan dealing web service 
system described early stage development fails address basic problems deal unpredictable results actions 
investigates plan synthesis ws composition focus specific problem planning existing composite web services reported preliminary 
contrast approach ws composition researchers taken approach sort plan script task model describes approximately achieve objective 
high level plan expanded refined automated reasoning machinery 
system built golog system 
models world altering information providing services actions uses golog procedures modeled owl composite processes represent generic procedures approximately perform tasks uses interleaving online deductive synthesis execution generate sequence web services customized user preferences constraints 
information gathering actions executed necessary actions projected simulated order enable system deliberate committing execution world altering services 
similar spirit researchers paradigm hierarchical task network htn planning perform automated ws composition 
paradigm planner supplied library standard plans characterized supposed accomplish effects preconditions 
uses shop system state art htn planner 
solve composition problem shop top level sketch composed plan encoded owl 
steps plan described high level vocabulary analogous owl control constructs allows multiple alternative subplans carry steps 
system searches ways combining subplans order arrive plan 
central shop approach planning web services exploitation sharp distinction information providing world altering services planning process information provided services critical finding plan 
mapping set owl service descriptions shop domain information gathering services detected encoded executed planning time run time called book keeping operators current shop evaluated preconditions 
execute information gathering services plan time reduce search space plans reduce non determinism 
htn planning compose web services travel domain organization supply chain 
basic idea explored web services expand capabilities collaboration 
consistently especially planning process outputs preconditions satisfied directly action web service perform asking web services satisfies output precondition 
locating appropriate web services done owl uddi matchmaker discussed section 
systems deal restricted problem composing services consideration preconditions effects pes 
included augments bpel ws popular business process language composition module 
bpel ws process requires certain input described xml data type system searches ws translate available formats desired format 
example process declares need complex type containing date format known service supplies data type identical date uk format system searches translation service perform desired data transformation 
necessary breaks transformation process substeps recursively searches methods accomplish substeps 
similar approach integrated enduser interactive composition system steer described approaches represent prototype solutions important subtask service composition data transfer interoperation 
necessary process descriptions include rich computer interpretable descriptions inputs outputs process io half 
early promising distance goal automated ws composition 
argued need rich representations web services language defined semantics enable automated ws composition 
specifically require rich declarative descriptions web service determine composition require rich representations properties capabilities functioning services enable ws selection composition process 
achieved requirements great measure owl 
contrast current industrial standards ws description describe ws inputs outputs language richly expressive defined semantics 
require rich declarative representations composite processes existing compositions web services amazon workflow exploit ws composition tasks 
existing ws composition technologies compose atomic processes 
addressed problem describing composite processes owl believe solution improved appealing language expressive owl leveraging emerging industrial process modeling standards 
realize goal automated ws composition require advances automated reasoning planning technology ws 
final barrier goal automated ws composition need wide spread adoption owl ws descriptions 
despite need accomplishments owl associated composition technologies provide immediate value added 
existing technology perform automated composition information gathering services 
demonstrated augment existing industrial ws choreography orchestration tools composition technology data transfer interoperation run time binding web services 
systems enable manual composition wss 
augment semantic integration data sources 
demonstrated currently perform automated ws composition information gathering atomic world altering services controlled conditions 
automated ws composition heart seamless interoperation web services 
adoption approaches ws description owl advances planning related technologies believe broad scale automated ws composition reach 
related identified related exploits owl daml name earlier versions owl known 
briefly note semantic web services daml owl describe web services 
discovery web services semantic web owl 
discovery assume owl notably bases web service descriptions mit process handbook matching process workflow description process model web service representation owl profile 
retrieval mechanism maps request process models advertised available services process models match request retrieved 
matching process allows requester ask web services 
words requester constrain type process performs results achieves way service achieved 
implicitly assumes requester provider shared intimate knowledge processes performed 
turn assumes provider requester share ontologies mit process handbook 
owl strong assumptions ontologies needed discovery assumptions known hold results similar obtained obtained matching processes suggested owl selecting web services capability selecting services process model satisfies temporal constraint 
area ws composition early exploited owl 
researchers planning community begun examine ws composition problem explicitly addressed problem describe web services modeling service actions order logic propositional logic pddl summary objective show owl put near term context emerging web service standards wsdl uddi bpel 
explained basics owl techniques conjunction standards overview projects employed owl combination 
discussed benefits richer service descriptions supported owl focusing primarily descriptions inputs outputs preconditions effects services 
area enactment owl supports specification composite processes allows flexible robust invocation interoperation service clients providers 
addition owl grounding mechanisms allow process descriptions enactment procedures conjunction wsdl 
area discovery owl allows service registries matchmaking algorithms take advantage distinct styles ontology characterization services may integrated uddi 
area service composition variety approaches exist reason owl support manual semi automated controlled conditions automated composition information gathering world altering services 
owl help enable fuller automation dynamism aspects web service provision support construction powerful tools methodologies promote semantically founded reasoning services 
ambite ed 
proceedings workshop planning web services 
tony andrews francisco curbera yaron goland johannes klein frank leymann kevin liu dieter roller doug smith satish thatte editor weerawarana 
business process execution language web services version 
www ibm com developerworks webservices library ws bpel 
bernstein klein 
high precision service retrieval 
proceedings international semantic web conference iswc 
benatallah said christophe rey 
request rewriting web service discovery 
proceedings second international semantic web conference iswc pp october 
erik christensen francisco curbera greg meredith weerawarana 
web services description language wsdl 
www org tr note wsdl dean connolly van harmelen hendler horrocks mcguinness patel schneider stein 
web ontology language owl version august 
www org tr wd owl ref 
denker kagal tim finin massimo paolucci naveen srinivasan katia sycara 
security daml web services annotation matchmaking 
proceedings second international semantic web conference iswc pp 
october 
di eugenio di francesco donini marina 
semantic matchmaking electronic marketplace 
sac pp 

fikes nilsson 
strips new approach application theorem proving problem solving 
artificial intelligence pp 

ian horrocks peter patel schneider harold boley said 
owl rules language draft version technical report october lei li ian horrocks 
software framework matchmaking semantic web technology 
proc 
twelfth international world wide web conference www pages acm 
malone crowston lee dellarocas wyner osborn bernstein herman klein donnell 
tools inventing organizations handbook organizational processes 
management science march 
daniel sheila mcilraith 
adapting bpel ws semantic web bottom approach web service interoperation 
proceedings second international semantic web conference iswc pp 
david martin mark burstein ora lassila massimo paolucci terry payne sheila mcilraith 
describing web services owl wsdl 
october 
www daml org services owl owl wsdl html yannis labrou parsia sirin 
ontology enabled pervasive computing applications 
ieee intelligent systems 
mcdermott 
estimated regression planning interaction web services 
proceedings sixth international conference ai planning scheduling pp 

mcdermott 
planning domain definition language manual 
yale computer science report cvc report 
mcdermott dou representing disjunction quantifiers rdf 
proceedings international semantic web conference iswc 
deborah mcguinness frank van harmelen 
owl web ontology language overview 
world wide web consortium candidate recommendation 
august 
www org tr owl features mcilraith son 
adapting golog composition semantic web services 
proceedings eighth international conference knowledge representation reasoning kr pp 

mcilraith son zeng 
semantic web services 
ieee intelligent systems special issue semantic web march april 
mcilraith 
planning complex actions 
proceedings ninth international workshop non monotonic reasoning nmr pages april 
nau cao lotem mu oz avila 
shop simple hierarchical ordered planner 
proceedings international joint conference artificial intelligence ijcai pp 
nau 
au murdock wu shop htn planning system 
appear journal artificial intelligence research 
owl coalition 
owl release 
www daml org services owl paolucci ankolekar srinivasan sycara 
daml virtual machine 
proceedings second international semantic web conference iswc pp october 
paolucci srinivasan sycara nishimura 
semantic choreography web services wsdl daml 
proceedings 
paolucci kawamura payne sycara 
semantic matching web services capabilities 
proceedings international semantic web conference iswc 
paolucci kawamura payne sycara 
importing semantic web uddi 
proceedings services semantic web 
massimo paolucci katia sycara kawamura 
delivering semantic web services 
proceedings twelfth world wide web conference www budapest hungary may pp 
rule markup initiative 
www dfki uni kl de ruleml 
universal description discovery integration uddi protocol 
version 
www uddi org web services choreography working group 
www org ws chor web services description working group 
www org ws desc wu parsia sirin hendler nau 
automating daml web services composition shop 
proceedings second international semantic web conference iswc 
