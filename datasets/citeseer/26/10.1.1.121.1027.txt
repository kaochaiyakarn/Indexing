ieee acm transactions networking vol 
december reliable multicast framework light weight sessions application level framing sally floyd van jacobson ching gung liu steven mccanne lixia zhang describes scalable reliable multicast srm reliable multicast framework light weight sessions application level framing 
algorithms framework efficient robust scale large networks large sessions 
srm framework prototyped wb distributed whiteboard application global scale sessions ranging participants 
describes principles guided srm design including ip multicast group delivery model receiver model reliability application level framing protocol model 
unicast communications performance reliable multicast delivery algorithm depends underlying topology operational environment 
investigate dependence analysis simulation demonstrate adaptive algorithm uses results previous loss recovery events adapt control parameters loss recovery 
adaptive algorithm reliable multicast delivery algorithm provides performance wide range underlying topologies 
index terms computer networks computer network performance internetworking 
researchers proposed generic reliable multicast protocols tcp generic transport protocol reliable unicast transmission 
take different view unicast case requirements reliable sequenced data delivery fairly general different multicast applications widely different requirements reliability 
example applications require delivery obey total ordering 
applications members sending data data source 
applications replicated data example redundant file store members capable transmitting data manuscript received december revised june approved ieee acm transactions networking editor kurose 
floyd jacobson mccanne supported director office energy research scientific computing staff department energy contract de ac sf 

liu zhang supported part advanced research projects agency monitored fort contract dabt 
earlier version appeared proc 
acm sigcomm 
floyd jacobson network research group lawrence berkeley laboratory berkeley ca usa mail floyd van ee lbl gov 

liu university southern california los angeles ca usa mail usc edu 
mccanne university california berkeley ca usa mail mccanne eecs berkeley edu 
zhang ucla los angeles ca usa mail lixia cs ucla edu 
publisher item identifier 
ieee item data originates single source 
differences affect design reliable multicast protocol 
design protocol worstcase requirements guaranteeing totally ordered delivery replicated data large number sources approach results substantial overhead applications modest requirements 
single reliable multicast delivery scheme optimally meets functionality scalability efficiency requirements applications 
weakness size fits protocols long recognized 
clark tennenhouse proposed new protocol model called application level framing alf explicitly includes application semantics design application protocol 
alf elaborated light weight rendezvous mechanism ip multicast distribution model notion adaptation unreliable real time applications audio video conferencing 
result known light weight sessions lws successful design wide area large scale conferencing applications 
evolves principles alf lws add framework scalable reliable multicast srm 
alf says best way meet diverse application requirements leave functionality flexibility possible application 
srm designed meet minimal definition reliable multicast eventual delivery data group members enforcing particular delivery order 
believe need arises machinery enforce particular delivery order easily added top reliable delivery service 
argued single dynamically configurable protocol accommodate different application requirements :10.1.1.165.7150
alf argument stronger different applications require different types error recovery flow control rate control mechanisms mechanisms explicitly account structure underlying application data 
srm heavily group delivery model ip multicast protocol 
ip multicast data sources simply send group multicast address normal ip address chosen reserved range addresses needing advance knowledge group membership 
receive data sent group receivers simply announce interested join message multicast local subnet knowledge group membership active senders required 
floyd reliable multicast framework light weight sessions application level framing receiver joins leaves group individually affecting data transmission member 
srm enhances multicast group concept maximizing information data sharing members strengthens individuality membership making member responsible correct reception data 
srm attempts follow core design principles tcp ip 
srm requires basic ip delivery model best effort possible duplication reordering packets builds reliability basis 
change special support required underlying ip network 
second fashion similar tcp adaptively setting timers congestion control windows algorithms srm dynamically adjust control parameters observed performance session 
allows applications srm framework adapt wide range group sizes topologies link bandwidths maintaining robust high performance 
wb distributed whiteboard tool designed implemented mccanne jacobson application srm framework 
discuss wb detail illustrate srm specific application 
proceeds follows section ii discusses general issues reliable multicast delivery 
section iii describes srm framework discusses wb instantiation framework 
section iv discusses performance srm simple topologies chains stars bounded degree trees section presents simulation results complex topologies 
section vi examines behavior loss recovery algorithm srm function timer parameters 
section vii discusses extensions basic reliable multicast framework adaptive algorithms adjusting timer parameters algorithms local recovery 
section viii discusses related reliable multicast 
section ix discusses srm 
ii 
design reliable multicast reliable data delivery adding word multicast problem reliable unicast data delivery understood variety tested solutions available 
reliable transmission data potentially large group receivers multicast transmission offers promising approach 
sender open separate unicast tcp connections different receivers copies packet sent links close sender making poor available bandwidth 
addition sender keep track status receivers 
multicast delivery permits efficient available bandwidth copy packet sent link absence dropped packets 
addition ip multicast allows sender send group having knowledge group membership 
time adding multicast data transport problem significantly changes solution set reliable delivery 
example reliable protocol party take responsibility loss detection recovery 
fate sharing implicit unicast communication data transmission fails ends fails sender receiver take role 
tcp sender times transmissions keeps retransmitting acknowledgment received 
netblt uses opposite model receiver responsible loss detection recovery 
approaches shown unicast 
tcp style sender approach applied multicast distribution number problems occur 
data packets trigger acknowledgments positive negative receivers sender subject known ack implosion effect 
sender responsible reliable delivery continuously track changing set active receivers reception state 
ip multicast model deliberately imposes level indirection senders receivers data sent multicast group set receivers receiver set may expensive impossible obtain 
algorithms adapt changing network conditions tend lose meaning case multicast 
example round trip time estimate retransmit timer computed may orders magnitude difference propagation time different receivers 
congestion window product different receivers varies orders magnitude 
self clocking information exists ack stream receivers share bottleneck link 
problems illustrate single point sender control adapt scale multicast delivery 
members multicast group different communication paths may come go time fate shared coupling sender receiver unicast transmissions generalize multicast 
clear receiver reliability far better building block reliable multicast 
unicast convention migrates poorly multicast vocabulary sender receiver describe progress communication 
receiver request retransmission application data units sector file sigcomm slides ps terms shared communication state sequence numbers conversation 
models successfully nfs uses tcp communication state naming data allows protocol entirely independent application namespace far popular approach unicast applications 
multicast transmission tends weaker diverse state synchronization unicast shared communication state name data multicast case 
example receiver joins conversation late receives sequence numbers idea ieee acm transactions networking vol 
december missed sender starting number arbitrary useful data intelligent request retransmission 
receivers hear sender lengthy network partition way knowing retransmission data received partition completely new due sequence number wrapping partition 
naming application data units adus model works far better multicast 
model beneficial side effects 
clark tennenhouse point separate protocol namespace impose delays inefficiencies application tcp deliver data sequence file transfer application perfectly happy receive sectors order 
adu model eliminates delay puts application back control 
adu names independent sending host possible anonymity ip multicast exploit redundancy multiple receivers 
example receiver asks retransmit sigcomm slides ps sector member copy data just original sender carry retransmission 
reliable multicast requirements alf model says applications actively involved communications communication done terms adus generic protocol namespace claim application protocol completely different shared design code 
great deal design commonality imposed simply different applications attempting solve problem scalable reliable multipoint communication internet 
section ii pointed just going unicast multicast greatly limits viable protocol design choices 
addition experience internet shown successful protocols accommodate orders magnitude variation possible dimension 
algorithms meet constraints section ii continue delay bandwidth user population varied factors 
believe alf model results framework filled application specific details 
portions srm framework completely determined network dynamics scaling considerations apply application 
example scalable request repair algorithms described sections iii vii completely generic apply wide variety reliable multicast applications 
different application supplies reliability framework namespace talk data sent received policy machinery determine bandwidth available group policy determine available bandwidth participants group local send policy participant uses arbitrate different demands bandwidth locally originated data requests responses 
intent describe framework common scalable reliable multicast applications 
particular focuses reliability congestion control 
believe multicast applications congestion control mechanisms take account application specific needs capabilities 
srm framework concrete describe widely application wb lbnl network whiteboard implemented srm framework 
component wb application level reliable multicast protocol precursor srm 
goal explore specifics wb wb illustrate underlying reliable multicast framework 
mentioning details wb operation direct results design considerations outlined section ii factor wb specifics expose generic srm framework underneath 
remaining sections exploration framework 
wb assumptions reliable multicast section briefly describes wb network conferencing tool provides distributed whiteboard explores assumptions wb reliable multicast 
wb separates drawing pages new page correspond new talk clearing screen member meeting 
member create page member draw page 
floor control mechanisms largely external wb necessary control create draw pages 
combined normal internet privacy mechanisms symmetric key encryption wb data limit participation particular group normal authentication mechanisms participants signing drawing operations public key encryption cryptographic hash data :10.1.1.51.6717
member identified globally unique identifier source id page identified page id consisting source id initiator page page number locally unique initiator 
member drawing whiteboard produces stream drawing operations timestamped assigned sequence numbers relative sender 
sequence sent page id relevant page 
example draw blue line particular set coordinates page 
wb requirement ordered delivery drawing operations idempotent rendered immediately receipt order sorted arrival timestamps 
member graphics stream independent sites 
operations strictly idempotent delete earlier patched fact missing data arrives 
assumptions wb reliable multicast design data unique persistent name 
global name consists host source id locally unique sequence number 
floyd reliable multicast framework light weight sessions application level framing name refers data 
impossible achieve consistency different receivers face late arrivals network partitions say floyd initially means draw blue line means draw red circle 
mean drawing change effect change 
example change blue line red circle delete floyd sent circle sent 
source id persistent 
user quit session re join obtaining session history network 
ensuring source id persistent invocations application user maintains ownership data created quitting 
ip multicast datagram delivery available 
participants join multicast group distinction senders receivers 
iii 
srm framework srm reliable multicast framework intended range applications share wb assumptions including ip multicast datagram delivery 
assumption central srm data unique persistent names 
open research challenge design data naming scheme reflects flexibility alf allows srm framework manipulate names generic fashion 
second assumption application naming conventions allow impose hierarchy name space 
rest assume data space subdivided groups containers call pages locally unique name simple sequence number sufficient precision wrap 
term page refers general concept reflects whiteboard biased design 
member generates new data data multicast group 
member group individually responsible detecting loss generally detecting gap sequence space requesting retransmission 
possible object sequence dropped member multicasts low rate periodic session messages announce highest sequence number received member current page 
addition reception state session messages contain timestamps estimate distance time member described section iii 
prevent implosion control packets sent receivers multicast group receivers xpress transport protocol xtp design multicast control packets entire group 
damping mechanisms xtp design receivers wait random time sending control packet refrain sending control packet see control packet receiver information 
srm uses similar mechanisms control sending request repair packets addition srm design random delay sending request repair packet function member distance seconds node triggered request repair 
timer calculations described detail section iii 
original data repair requests retransmissions multicast group 
number hosts may packet host close point failure timeout multicast request 
hosts missing data hear request suppress request 
host copy requested data answer request 
set repair timer multicast repair timer goes 
hosts data scheduled repairs cancel repair timers hear multicast host 
require session members keep data time reliable data delivery ensured long data item available member 
ideally lost packet triggers single request host just downstream point failure single repair host just upstream point failure 
section explores detail number requests repairs different topologies 
session messages srm member multicasts periodic session messages report sequence number state active sources 
session messages reliable multicast previously proposed enable receivers detect loss packet burst enable sender monitor status receivers 
members session messages srm determine current participants session 
average bandwidth consumed session messages limited small fraction aggregate data bandwidth pre allocated reservation protocol measured adaptively congestion control algorithm 
srm members algorithm developed vat described dynamically adjusting generation rate session messages proportion multicast group size :10.1.1.165.7150
large long lived session state unmanageable receiver report sequence numbers sent data group 
prevent explosion impose hierarchy data partitioning state space pages member reports state page currently viewing 
receiver browsing previous pages may issue page requests learn sequence number state page 
receiver joins late may issue page requests learn existence previous pages 
omit details page state recovery protocol identical repair request response protocol data 
addition state exchange receivers session messages estimate way distance nodes 
packets group including session packets include source id timestamp 
session packet timestamps estimate host host distances needed repair algorithm 
timestamps highly simplified version ntp time synchronization algorithm 
assume host sends session packet time host receives ieee acm transactions networking vol 
december time time host generates session packet marked time included algorithm robust lost session packets 
receiving time host estimate latency host host equivalently note estimate assume synchronized clocks assume paths roughly symmetric 
explored performance algorithms topologies strong asymmetry way delays forward reverse paths 
loss recovery section describes srm loss recovery algorithm provides foundation reliable delivery 
section vii describes modified version algorithm adaptive adjustment timer parameters 
section vii discusses local recovery algorithms critical component srm efficient operation large multicast groups congested environment 
srm members detect loss wait random time multicast repair request suppress requests members sharing loss 
repair requests differ traditional negative acknowledgment nacks respects addressed specific sender request data unique persistent name 
host detects loss schedules repair request random time 
request timer expires host multicasts request missing data doubles request timer wait repair 
srm interval request timer set function member estimated distance source packet 
request timer chosen uniform distribution seconds host estimate way delay original source missing data 
numbers parameters request algorithm discussed length 
host receives request missing data request timer data expires host random exponential backoff resets request timer 
current timer chosen uniform distribution backed timer randomly chosen uniform distribution care required deciding back backed timer 
simulator heuristic detect requests belong iteration loss recovery 
member backs request timer member sets ignore backoff variable time halfway current time expiration time ignores additional duplicate requests ignore backoff time 
requests received ignore backoff time assumed belong iteration loss recovery request resulted backoff 
request received time assumed belong iteration causes member back request timer 
host may original source receives request host capable answering host sets repair timer value uniform distribution seconds host estimate way delay host numbers parameters repair algorithm discussed 
host receives repair missing data repair timer expires host cancels repair timer 
host repair timer expires host multicasts repair 
keeping philosophy receiver responsible ensuring correct reception data host verify host receives repair 
due probabilistic nature algorithms unusual dropped packet followed request 
hosts generate request data roughly time redundant control traffic wasted bandwidth colliding participants increase spread retransmission distribution avoid similar collisions 
request host receive duplicate request immediately sending repair immediately receiving repair response earlier request 
order prevent duplicate requests triggering responding set duplicate repairs host ignores requests data seconds sending receiving repair data host original source data source request 
congestion control simplest congestion control mechanism srm members multicast group assume fixed bandwidth constraint aggregate session 
appropriate example members multicast group band mechanism explicit bandwidth reservations informal consensus procedures current mbone verify bandwidth availability 
different congestion control mechanisms required different applications different contexts 
congestion control mechanisms srm discussed section ix 
data represents idempotent operations loss recovery proceed independently transmission new data 
similarly recovery losses different sources proceed independently 
transmission bandwidth limited single transmission rate allocated control throughput different modes operation application determines order packet transmission relative importance 
network partitioning concerns srm relies underlying concept ip multicast group members arrive depart independently srm distinguish network partition normal departure members multicast session 
floyd reliable multicast framework light weight sessions application level framing partition members continue send data connected components partitions 
recovery data unique names repair mechanism distribute new state entire group 
applications may require partial total data ordering srm framework reliably deliver data group members partial total ordering protocol built top specifically tailored ordering needs application 
ordering complicated disagreements ordering defined cheriton skeen argued birman applications ordering requirements preserving ordering messages appear network expensive inadequate substitute preserving semantic ordering messages appropriate application :10.1.1.116.4996
potential applications srm wb including routing protocol updates usenet news adaptive web caches discussed briefly :10.1.1.121.1027
wb instantiation srm section describes design current state implementation reliable multicast wb 
discussed rate control mechanism estimates way delay key aspects design included current implementation wb 
implementation wb version members set request timer random value interval set fixed value ms estimation distance members included current implementation 
similarly receiving request members set repair timer random value interval 
original source data set fixed value ms members set ms fixed values chosen examinations traces taken typical wide area wb sessions 
current values sufficiently large ensure generally request repair 
original source data line repair generally comes original source 
current implementation wb relies informal consensus admissions control procedure current mbone 
congestion control mechanism design wb assumes fixed maximum bandwidth allocation session 
design wb session sender bandwidth limit advertised part session announcement individual members token bucket rate limiter enforce peak rate transmissions 
writing rate control mechanism added wb implementation 
practice wb sessions generally considerably average bandwidth accompanying audio sessions 
need rate control times painfully obvious example new members join session ask back history 
application specific issue concerns relative priorities sending new data requests repairs 
member wb session able send packet highest priority goes requests repairs current page middle priority new data lowest priority requests repairs previous pages 
issue obvious implementation experience persistence data 
wb necessarily store data backup storage disk data current pages kept memory 
data corrupt due internal application bugs external system failures spread virus wb session 
corrupted data answer repair requests corrupted data distributed multicast group persists life session 
avoid piece data accompanied tag authenticates source data verifies integrity 
iv 
request repair algorithms simple topologies turn detailed investigation loss recovery algorithms srm 
multiple hosts may detect losses multiple hosts may attempt handle repair request goal request repair timer algorithms de synchronize host actions keep number duplicates low 
hosts diverse delays hosts group difference delay differentiate hosts hosts similar delays reach rely randomization de synchronize actions 
section discusses simple representative topologies chain star tree topologies provide foundation understanding loss recovery algorithms complex environments 
chain essential feature loss recovery algorithm timer value function distance 
star topology essential feature loss recovery algorithm randomization reduce implosion 
request repair algorithms tree combine randomization setting timer function distance 
section shows performance loss recovery algorithms depends underlying network topology 
chains fig 
shows chain topology nodes chain members multicast session 
node underlying multicast tree degree 
chain extreme topology simple deterministic loss recovery algorithm suffices 
section assume timer parameters set set 
results request timers set deterministically repair timers set chain scenarios link distance delay normalized 
assume packets take unit time travel link links distance 
fig 
nodes chain labeled right left congested link 
assume source multicasts packet subsequently dropped link ieee acm transactions networking vol 
december fig 

chain topology 
second packet sent source dropped 
call edge dropped packet due congestion problems congested link 
right hand nodes detect failure receive second packet node detect loss time link distance 
node multicasts request time node receives request time multicasts repair time node receives repair time note nodes right node receive request request timers expire 
call deterministic suppression 
reader verify due deterministic suppression request repair 
example node detects loss time sets request timer time receives request node time request timer expires 
loss repair done unicast node sent unicast request source soon detected failure sent unicast repair soon received request node receive repair time chain simple deterministic loss recovery algorithm furthest node receives repair sooner rely unicast communication original source request repair come nodes immediately adjacent congested link 
stars star topology fig 
assume links identical center node member multicast group 
star topology setting request timer function distance source essential feature nodes detect loss exactly time 
essential feature loss recovery algorithm star randomization reduce implosion call probabilistic suppression 
star topology fig 
assume packet node dropped adjacent link 
members multicast session members detect loss exactly time 
discussion topology assume timer parameters set nodes detect losses receive requests time needed amplify differences delay 
star topology benefits setting greater avoid unnecessary requests fig 

star topology 
order packets ensure minimum delay request timer backed 
requests 
increasing reduces expected number requests increases expected time request sent 
expected number requests roughly expected delay timer expires unit time second 
example set expected number requests roughly expected delay timer expires note source dropped packet node send request session members receive request time 
remarks apply respect repairs 
bounded degree trees loss recovery performance tree topology uses deterministic suppression described chain topologies probabilistic suppression described star topologies 
consider network topology bounded degree tree nodes interior nodes degree tree topology combines aspects chains stars 
timer value function distance enable requests repairs suppress request repair timers nodes tree 
addition randomization needed reduce request repair implosion nodes equal distance source dropped packet request 
section show behavior request algorithms tree topology depends principally distance sender congested link ratio timer parameters assume node tree source dropped packet link drops packet source call nodes source side congested link including node nodes nodes side congested link including node bad nodes 
node detects dropped packet time receives packet node designate node level node call bad node level node distance node nodes detect failure time set timers uniform value interval width pgp 
timer expires time receivers receive request time cp 
expected number duplicate requests equal expected number timers expire interval cp 
floyd reliable multicast framework light weight sessions application level framing assume source dropped packet distance node node request timer expires time denotes uniform random variable assuming node request suppressed level node receives node request time node receives node repair request time bad level node detects loss time node request timer expires time note regardless values level node receives node request time level node request timer expires sooner level node request timer suppressed request level node 
smaller ratio fewer number levels involved duplicate requests 
relation demonstrates number duplicate requests repairs smaller source dropped packet request close congested link 
note parameter serves different functions 
smaller value gives smaller delay node receive request 
time nodes away congested link larger value contributes suppressing additional levels request timers 
similar tradeoff occurs parameter smaller value gives smaller delay node receive repair request 
time topologies star topologies larger value helps prevent duplicate requests session members distance congested link 
similar remarks apply functions repair timer algorithm 
simulations request repair algorithms underlying network set session members session sources congested link feasible analyze behavior repair request algorithms fixed timer parameters interested repair request algorithms wide range topologies scenarios 
simulations examine performance loss recovery algorithms individual packet drops random bounded degree trees 
claim presenting realistic topologies typical patterns packet loss 
define density session fraction nodes underlying network members multicast session 
simulations section show loss recovery algorithms fixed timer parameters perform random bounded degree tree dense sessions nodes underlying tree members multicast session 
loss recovery algorithms perform somewhat sparse session session size small relative size underlying network members scattered net 
motivates development adaptive loss recovery algorithm section vii timer parameters adjusted response past performance 
simulations fixed timer parameters set follows number members multicast session 
choice critical gives slightly better performance large simulation constructs random tree bounded degree tree nodes network topology 
nodes randomly chosen session members session members necessarily leaf nodes network topology 
source randomly chosen session members 
assume messages multicast members multicast group shortest path tree source message 
simulation randomly choose link shortest path tree source members multicast group 
assume packet source dropped link receivers detect loss receive subsequent packet source discusses tools verify simulator correctly implementing loss recovery algorithms 
simulator simulations publicly available 
functionality implemented ns simulator 
progress reported srm web page 
simulations random trees section consider networks random labeled trees nodes networks session members 
section considers large networks nodes degree fraction nodes members multicast group 
simulations random labeled trees nodes random labeled trees constructed labeling algorithm 
trees unbounded degree large probability particular vertex random labeled tree degree approaches approximately 
fig 
shows simulations loss recovery algorithm case nodes tree members multicast session 
graph axis shows session size simulations run value simulation new random tree constructed session members source congested link randomly chosen 
ieee acm transactions networking vol 
december fig 

random trees random congested link single packet loss nodes members multicast session 
simulation represented jittered dot median simulations shown solid line 
dotted lines mark upper lower quartiles results half simulations lie dotted lines 
simulations accurate predictions behavior loss recovery algorithms simulations illustrate loss recovery algorithms range circumstances 
top graphs fig 
show number requests repairs recover single loss 
graphs median lower quartile upper quartile lines axis chosen easy visual comparison simulations 
member affected loss define loss recovery delay time member detects loss member receives repair 
simulation dot bottom graph fig 
showing loss recovery delay member multicast session receive repair 
loss recovery delay multiple rtt roundtrip time member original source dropped packet 
member largest loss recovery delay absolute jittered dot dot small random jitter added coordinates 
way reader differentiate single dot multiple dots coordinates 
terms member generally largest delay expressed units rtt 
note unicast communications ratio loss recovery delay rtt 
unicast receiver detects packet loss waiting retransmit timer time typical ratio delay rtt closer 
multicast loss recovery algorithms ratio delay rtt request repair come node close point failure 
fig 
shows repair request algorithm fixed timer parameters works tree topology nodes tree members multicast session 
usually request repair 
lack symmetry results fact original source dropped packet far point failure request comes node close point failure 
average recovery delay farthest node rtt competitive average delay available unicast algorithm tcp 
results similar simulations congested link chosen adjacent source dropped packet simulations bounded degree tree size interior nodes degree 
claim average degree router internet current mbone multicast backbone foreseeable 
floyd reliable multicast framework light weight sessions application level framing fig 

bounded degree tree degree nodes random congested link 
looking map current mbone topology choosing degree reasonable choice 
simulations large bounded degree trees loss recovery algorithms fixed timer parameters perform sparse session large tree 
underlying topology simulations section balanced bounded degree tree nodes interior nodes degree 
simulations session size significantly session sparse relative underlying network nodes close congested link members session 
fig 
shows average number repairs loss somewhat high 
simulations shown congested link adjacent source number repairs low average number requests high 
performance loss recovery algorithm range topologies shown 
include topologies nodes underlying network router adjacent ethernet workstations point point topologies edges range propagation delays topologies underlying network dense tree 
variations explored significantly affected performance loss recovery algorithms fixed timer parameters 
vi 
exploring parameter space previous section showed particular set values timer parameters performs scenario perform scenario 
section choose simple topologies explore behavior request repair algorithms function request timer parameter section discuss adaptive algorithms timer parameters adjusted function past performance loss recovery algorithms 
results section briefly summarized follows 
simulations section give unacceptably large numbers requests small values stars sparse sessions trees 
scenarios increasing reduces number duplicate requests accompanied moderate increases loss recovery delay 
star topology clear tradeoff delay number duplicates 
contrast chain topology setting zero gives optimal behavior terms delay number duplicates 
dense session tree topology small value gives performance terms delay duplicates 
simulations section set 
section iv showed chain deterministic loss recovery algorithm sufficient set 
chain randomized loss recovery algorithm higher value needed ensure members congested link receive request request timer expires 
fig 
shows tradeoffs delay duplicates star topology size congested link adjacent source dropped packet 
define request delay session member delay request timer set request sent member received member 
top graph fig 
contains dot integer value star topology described section iv 
dot coordinate expected request delay value coordinate expected number requests 
precisely coordinate expected request delay bad member closest source dropped packet expressed multiple roundtrip time member source dropped packet 
unique bad member minimum distance source star topology axis shows expected smallest request delay members minimum distance source 
star topology request delay member request timer expires 
heuristic analysis section iv expected request delay units rtt follows ieee acm transactions networking vol 
december fig 

tradeoff delay duplicates star topology 
distance seconds source session member 
section iv expected number requests estimated fig 
shows results circle shows results top graph fig 
shows increasing star topology increases expected request delay slightly significantly decreasing expected number requests 
bottom graph fig 
shows results simulations concur analytical results top graph 
integer value simulations run request delay total number requests calculated simulation 
simulation represented jittered dot line shows average value example set average number requests average request delay multiple rtt 
minimum request delay comes fixed value request parameter results generally concur investigates relative benefits unicast multicast nacks 
la porta schwartz conclude scenario similar star topology message sent member received members exactly seconds multicast group members random interval nack timers set times multicasting nacks result bandwidth savings scheme unicasting nacks source 
la porta schwartz conclude unicasting nacks desirable scenarios multicast groups hundreds members multicast groups receivers somewhat tolerant delay multicasting nacks quite effective reducing unnecessary bandwidth 
fig 
shows results chain topology discussed section iv 
chain set zero fig 

tradeoff delay duplicates chain topology 
exactly request request delay increasing increase expected request delay expected number duplicates 
lines fig 
show results chain topology failed edge hops respectively source dropped packet 
simulations failed edge hop source individual simulations shown dot 
scenario ranges increments increments 
increasing increase number duplicates magnitude increase quite small 
figs 
show results range tree topologies 
line shows results particular fixed scenario varies 
scenarios session size 
graph lines represent scenarios differ number hops source failed edge 
lines represent scenarios failed edges hops respectively source dropped packet 
topologies failed edge closest source gives line worstcase number duplicate requests 
line individual simulations shown jittered dot 
graphs sized easy comparisons necessarily show dots 
example top graph fig 
shows results trees density 
lines average number duplicates minimized maximized intermediate value vii 
extending basic approach adaptive adjustment random timer algorithms results previous section suggest srm loss recovery algorithms fixed timer parameters give acceptable performance sessions willing tolerate small number duplicate requests repairs willing accept moderate request repair delay terms roundtrip times underlying multicast group 
single setting timer parameters gives optimal performance topologies session memberships loss patterns 
applications desirable optimize tradeoff delay number duplicate requests repairs adaptive algorithm adjusts timer parameters response past behavior loss recovery algorithms 
floyd reliable multicast framework light weight sessions application level framing fig 

tradeoff delay duplicates dense sessions tree topologies 
fig 

tradeoff delay duplicates sparse sessions tree topology 
section describe adaptive algorithm adjusts timer parameters function delay number duplicate requests repairs loss recovery exchanges 
related strategy minimize number duplicate requests rely deterministic suppression members closest point failure sending requests 
rest section vii describes adaptive algorithm adjusting timer parameters detail 
section vii continues discussion local recovery mechanisms 
mechanism encouraging deterministic suppression members reduce send request 
members frequently send requests members close point failure reducing fig 

dynamic adjustment algorithm request timer interval 
members aids deterministic suppression 
star topology loss recovery mechanisms rely probabilistic suppression reducing fashion helps break symmetry encouraging certain members continue sending requests early 
second mechanism encouraging deterministic suppression members sent requests reduce received duplicate requests members significantly source failed packet 
mechanism requests requires requests include requestor estimated distance original source requested packet 
corresponding mechanism replies requires replies include estimated distance source request 
fig 
gives outline dynamic adjustment algorithm adjusting request timer parameters 
corresponding algorithm applies adjusting reply timer parameters 
adaptive algorithm combines general adaptation performed members set request timer specific adaptations performed members sent requests 
member determines average number duplicate requests high comparing observed average predefined threshold predefined threshold duplicate request 
average number duplicate requests high adaptive algorithm increases request timer interval 
alternately average number duplicates okay average delay sending request high adaptive algorithm decreases request timer interval 
fashion algorithm adapt timer parameters fit generally fixed underlying topology fit changing session membership pattern congestion 
describe session member measures average delay number duplicate requests previous loss recovery rounds member participant 
request period begins member detects loss sets request timer ends member detects subsequent loss begins new request period 
variable dup req keeps count number duplicate requests received request period duplicates request previous request include requests data member set request timer 
request period member updates ave dup req average number duplicate requests request period resetting dup req zero 
ieee acm transactions networking vol 
december average computed exponential weighted moving average ave dup req ave dup req dup req simulations 
ave dup req gives average number duplicate requests request events member set request timer 
request timer expires reset time indicating member member sent request data member computes req delay delay time request timer set detection loss request sent indicated time request timer expired reset 
variable req delay expresses delay multiple roundtrip time source missing data 
member computes average request delay ave req delay 
similar fashion repair period begins member receives request sets repair timer ends member receives request sets repair timer different data item 
computing dup rep number duplicate repairs member considers repairs member point set repair timer 
repair period member updates ave dup rep average number duplicate repairs 
repair timer expires cleared indicating member member sent repair data member computes rep delay delay time repair timer set receipt request repair sent indicated time repair timer expired cleared 
variable rep delay expresses delay multiple roundtrip time source missing data 
member computes average repair delay ave rep delay 
fig 
gives adaptive adjustment algorithm simulator adjust request timer parameters adaptive algorithm comparing measurements ave dup req ave req delay target bounds average number duplicates average delay 
identical adjustment algorithm adapt repair timer parameters measurements ave dup rep ave rep delay 
fig 
gives initial values simulations timer parameters 
timer parameters constrained stay minimum maximum values fig 

numerical parameters fig 
chosen somewhat arbitrarily 
look multitude constants exact value constants important matters represent small adjustments timer parameters function past observed behavior loss recovery algorithms 
adjustments small adjustment primary mechanism controlling number duplicates 
adjustments sufficiently small minimize oscillations setting timer parameters 
sample trajectories loss recovery algorithms confirm fig 

dynamic adjustment algorithm request timer parameters 
simulations hxi 
fig 

parameters adaptive algorithms 
variations random component timer algorithms dominate behavior algorithms minimizing effect oscillations 
simulations multiplicative factor request timer backoff described section iii multiplicative factor adaptive algorithm small minimum values single node experiences packet loss backed request timer expire receiving repair packet resulting unnecessary duplicate request 
attempted devise optimal adaptive algorithm reducing function delay number duplicates optimal algorithm involve complex decisions adjust mainly possibly depending factors member relative distance source lost packet 
sparse session tree topology increasing reduces number duplicate requests adaptive algorithm relies largely increases reduce duplicates 
adaptive algorithm decreases members sent requests duplicate requests come members source requested packet 
simulations source defined reported distance greater times distance current member adaptive algorithm decreases members sent requests average number duplicates small 
floyd reliable multicast framework light weight sessions application level framing fig 

nonadaptive algorithm 
fig 

adaptive algorithm 
figs 
show simulations comparing adaptive nonadaptive algorithms 
simulation set fig 
uses fixed values timer parameters fig 
uses adaptive algorithm 
simulation set fig 
chose network topology session membership drop scenario resulted large number duplicate requests nonadaptive algorithm 
network topology bounded degree tree nodes degree interior nodes multicast session consists members 
figures shows runs simulation loss recovery rounds run 
topology loss scenario runs run uses new seed pseudo random number generator control timer choices requests repairs 
loss recovery round packet source dropped congested link second packet source dropped loss recovery algorithms run members received dropped packet 
axis graph shows round number 
top graph shows number requests round bottom graph shows loss recovery delay 
round simulation marked jittered dot solid line shows median simulations 
dotted lines show upper lower quartiles 
simulations fig 
fixed timer parameters round differs round uses different set random numbers choosing timers 
simulations adaptive algorithm fig 
round simulation session member uses adaptive algorithms adjust timer parameters results previous rounds 
fig 
shows scenario adaptive algorithms quickly reduce average number repairs reaching steady state iterations 
fig 
shows small reduction delay 
explore adaptive algorithms range scenarios fig 
shows results adaptive algorithm set scenarios fig 

scenario network topology session membership source member congested link fig 
adaptive algorithm run repeatedly loss recovery rounds fig 
shows results th loss recovery round 
comparing figs 
shows adaptive algorithm effective controlling number duplicates range scenarios 
simulations show adaptive algorithm works wide range conditions 
include scenarios session member experiences packet loss congested link chosen adjacent source packet dropped range underlying topologies including node trees trees interior nodes degree connected graphs dense trees nodes edges 
actual multicast sessions successive packet losses necessarily source network link 
simulations show case adaptive timer algorithms tune give average performance range packet drops encountered 
simulations show choosing different values tradeoffs relative importance low delay low number duplicates 
simulations section congested link packet dropped dropped link 
realistic simulations include scenarios ieee acm transactions networking vol 
december fig 

adaptive algorithm round bounded degree tree nodes degree randomly picked congested link 
multiple locations drops single packet extended srm incorporates local recovery mechanisms loss recovery algorithms 
similarly simulations section requests repairs dropped 
realistic scenarios data messages requests repairs dropped congested links members rely retransmit timer algorithms retransmit requests repairs needed 
obviously increase delay number duplicate requests repairs different parts network 
local recovery described section help reduce unnecessary bandwidth loss recovery algorithms 
local recovery srm global loss recovery algorithm described packet dropped link single member request repair multicast entire group 
cases neighborhood affected loss small bandwidth costs loss recovery algorithm reduced requests repairs multicast limited area 
section suggest local recovery quite effective reducing unnecessary bandwidth 
scenarios benefit local recovery include sessions persistent losses small neighborhood members isolated late arrivals multicast session asking back history 
studies packet loss patterns current mbone suggest packet loss multicast traffic occur backbone edges multicast network :10.1.1.32.7807
addition larger multicast group packet dropped multicast tree absence particular persistent point congestion 
forward error correction fec explicit congestion notification ecn great potential reducing negative impacts transient mild congestion reliable multicast applications :10.1.1.32.7807
links persistent congestion packet drops remain 
case local recovery needed ensure fraction bandwidth request repair messages scales multicast group grows 
stage proposing complete set algorithms implementing local recovery 
explore section set mechanisms limit scope request answering repair 
question member decides scope particular request area research 
local recovery assumes member sending request information neighborhood members sharing losses 
define loss neighborhood set members experiencing set losses 
nodes know network topology nodes learn loss neighborhoods information session messages learning network topology 
member call loss local loss number members experiencing loss smaller total number members session 
help identify loss neighborhoods session messages report member loss rate fraction data request timer set 
addition session messages report loss fingerprint names local losses 
member send request local scope losses confined single loss neighborhood local request reach member capable answering 
repair received backed request timer expires request sent wider scope 
administrative scoping simple widely available mechanism local recovery administrative scope ip multicast 
member believes loss neighborhood potential source repairs contained local administratively scoped neighborhood request repair sent administrative scoping messages restricted neighborhood 
larger administratively scoped neighborhoods 
separate multicast groups potential mechanism investigation separate multicast floyd reliable multicast framework light weight sessions application level framing groups local recovery 
scheme initial requestor creates separate multicast group local recovery invites nearby members join multicast group 
multicast group include member capable sending repairs 
mechanism appropriate stable loss neighborhood results particular lossy link isolated member joins group late asks past history 
kurose towsley explore somewhat different multiple multicast groups recovery aimed primarily reducing costs processing unwanted packets receivers 
ttl scoping third possible mechanism local recovery members time live ttl scope limit reach request repair messages 
current mbone link precisely interface tunnel assigned threshold default threshold 
threshold minimum ttl required ip multicast packet forwarded link control scope multicast packets 
multicast router decrements ttl forwarded packet 
order limit scope request repair message sender simply sets packet ttl field appropriate value 
including initial ttl separate packet field members receiving request reply message explicitly learn original ttl hop count path source 
simplest version ttl local recovery onestep repair algorithm 
approach request sent ttl answered repair sent ttl number hops original requestor 
way repair guaranteed reach members reached original request optimistically assume multicast routes thresholds symmetric 
simulations suggest step repair effective significant unnecessary bandwidth repair packets 
step repair message considerably effective limiting unnecessary bandwidth 
step repair local repair sent ttl request 
ttl sufficiently large reach original requestor sufficient symmetry necessarily sufficiently large reach members reached original request 
local repair includes name member request triggered repair 
second step repair requestor receiving local repair naming original requestor resends repair ttl original request 
way repair received members saw original request 
simulations explore optimal behavior achieved step local recovery 
examine networks links link threshold examine networks range values link thresholds 
explore optimal possible performance assume loss neighborhood stable members method estimating minimum ttl needed reach members loss neighborhood minimum ttl needed reach fig 

local recovery step repairs bounded degree trees nodes thresholds 
member loss neighborhood 
assume loss recovery event request repair algorithms exhibit optimal behavior 
assume single request single repair come members closest point failure 
restrict attention scenarios loss neighborhood contains th session members 
fig 
shows results optimal execution step local recovery algorithms large network degree link thresholds 
axis graph shows session size 
session size simulations run different session membership source randomly chosen congested link dropped packet 
results simulation represented jittered dot 
lines indicate second third quartiles 
top graph fig 
axis shows fraction session members reached repair 
bottom graph fig 
axis shows number session members repair neighborhood number session members reached repair multiple number members loss neighborhood 
additional simulations reported show local recovery step repairs networks range topologies link thresholds 
simulations show contrast repairs step repairs fairly inefficient bandwidth optimal setting ttl original request 
viii 
related research reliable multicast literature rich architectures reliable multicast 
centralized approaches reliable multicast discussed briefly :10.1.1.121.1027
section focus approaches reliable multicast closely related srm 
ieee acm transactions networking vol 
december xpress transport protocol xtp designed unicast multicast communication 
reliable communication negative acknowledgments 
sender may initiate synchronizing handshake determine status receivers 
case receivers technique wait random delay sending control packet reduce control packet implosion 
combined damping techniques proposed reduce nack suppression described earlier 
xtp receivers routers impose maximum data rate maximum burst size sender 
proposals reliable multicast secondary servers called designated routers group controllers different proposals handle retransmissions subgroup multicast group 
protocol receiver reliable multicast designed support distributed interactive simulation dis 
receiver reliability provided primary secondary logging servers 
receivers request retransmissions secondary logging servers requests retransmissions primary logging server 
source secondary logging servers deterministic probabilistic requests select unicast multicast retransmissions 
uses variable heartbeat scheme sends heartbeat messages session messages frequently immediately data transmission 
environment basic transmission rate low variable heartbeat enables receivers detect losses sooner penalty terms total number heartbeat messages transmitted 
variable heartbeat scheme appropriate application wb original congestion result senders sending data time variable heartbeat scheme quite useful application natural limit worst case number concurrent senders easily implementable srm 
srm reliable multicast transport protocol rmtp includes goals scalability receiver reliability 
rmtp accomplishes designated routers drs region multicast group drs receive incoming acknowledgment perform retransmissions needed 
rmtp uses windowed flow control tuned requirements worst case receiver 
problem dynamically choosing drs multicast tree left continued research 
local group concept proposed multicast group divided local groups represented group controller handles retransmissions members local group :10.1.1.121.1027
group controller router separate server simply members multicast group 
hofmann aims dynamic generation local groups group controllers explore detail algorithms finding nearby local group responding failure local group controller choosing new group controller :10.1.1.121.1027
known reliable multicast isis distributed programming system developed cornell university 
isis provides causal ordering desired total ordering messages top reliable multicast delivery protocol 
isis extent orthogonal described confirms notion partial total ordering desired added top reliable multicast delivery system 
growing literature analysis reliable multicast schemes 
example bhagwat mishra tripathi consider performance reliable multicast block ack scheme 
investigates regime transfer sizes large receivers limited buffering retransmissions come original sender 
schwartz compare retransmission schemes multicast protocols real time media 
retransmission schemes intended real time media playback times packets received playback time dropped 
assume receivers unicast nacks sender retransmissions done sender 
note assumptions differ srm intended applications fixed deadlines packets received allows retransmissions members original source 
ix 
scalable session messages srm framework outlined assumes members multicast group send session messages estimate distance group members 
larger groups investigating hierarchical approach scalable session messages members local area dynamically select local members representative far session messages concerned 
representatives send global session messages maintain estimate distance seconds representatives 
members send local session messages limited scope sufficient reach representative 
local recovery section vii shown local recovery effective limiting unnecessary bandwidth loss recovery events members estimate scope sending local requests 
discuss issues implementing ttl local recovery open questions mechanisms define local recovery neighborhoods individual members determine send requests local global scope local recovery separate multicast groups ongoing research algorithms initiating joining leaving multicast groups soliciting additional members join groups 
floyd reliable multicast framework light weight sessions application level framing topologies effectiveness local recovery improved adding members multicast group strategic locations 
example consider known stable topologies discussed losses expected occur mainly tail circuits backbone lan design priority keep unnecessary traffic tail circuits 
addition session member cache node near local tail circuit coupled local recovery neighborhood defined include members tail circuit allow local recovery continue losses local area adding unnecessary traffic tail circuit 
losses tail circuit larger local recovery area spanned tail circuit just backbone isolate individual local recovery independent tail circuits 
congestion control srm basic framework congestion control assumes members multicast session estimate available bandwidth session constrain data transmitted estimated bandwidth 
framework raises somewhat separate issues members determine available bandwidth detect congestion avoid potential congestion available bandwidth piece data member send 
multicast congestion control relatively new area research 
unicast traffic single path source receiver feedback loop provided returning packets sent receiver 
contrast multicast group sources various communication paths active source members multicast group range bandwidth propagation delay competing congestion 
case define detect congestion 
multicast traffic application specific policy decisions tune congestion control procedures needs worst case receiver questions arise unicast transmissions 
tuning sending rate worst case receiver viable multicast group controlled membership multicast group vulnerable denial service attacks members joining group bandwidth path 
uncontrolled membership group bandwidth different paths multicast group differs substantially sender tune sending rate needs majority receivers requiring receivers congested paths unsubscribe multicast group 
receiver approach investigation video tool vic divide total data transmission substreams sent separate multicast group :10.1.1.51.6717:10.1.1.51.6717
members detect congestion unsubscribe higher bandwidth groups 
approach reliable multicast reliable delivery provided separately group 
implies receivers receive data receive data slower rate rest multicast group 
case exploit tradeoff progressively refinable layered data representations 
considerable research done layering techniques video layering techniques applicationspecific layering wb data remains area research 
possibilities encode embedded images progressive jpeg layered scheme tradeoff free hand drawing resolution rate send line drawings points interactive performance high rate channel point constrained low rate channel 
approach bandwidth adaptation receivers reserve resources network services available example services guaranteed controlled load services currently developed internet :10.1.1.27.14
resource reservation complement congestion control mechanisms multicast session 
srm toolkit proposed srm framework applies different applications developed just application wb 
implementation alf deliberately factored application semantics design wb transport relatively difficult extract re wb network implementation application 
limitation resulted lack prior experience alf design argue alf protocol architecture necessarily preclude substantial code re 
subsequent experience alf architecture real time transport protocol rtp underlies mbone tools vic vat know core alf design easily tailored range application types :10.1.1.165.7150
example developed generic rtp toolkit object oriented class hierarchy base class implements common rtp framework derived subclasses implement application specific semantics 
rtp toolkit supports wide range applications including layered video traditional coded video lpc coded audio generic audio video recording playback tools rtp monitoring debugging tools 
tools shares network implementation reflects individual semantics alf rtp generic protocol layer 
current applying design principles generation wb protocol new set srm applications 
developing object oriented srm toolkit base class implements srm framework described section iii derived subclass reflects application semantics described section ii 
example application portion srm class hierarchy determines packet generation order priority send answer repairs sending new data favoring repairs source ieee acm transactions networking vol 
december time srm base class handles generic srm functionality timer algorithms basic request repair event scheduling 
described detail srm framework scalable reliable multicast 
srm framework meets minimal reliability definition delivering data group members deferring advanced functionality needed individual applications 
srm assumptions ip multicast delivery unique persistent names data sources 
focused srm request repair algorithms reliable delivery data 
proposed complete set algorithms implementing local recovery explored model local recovery step repairs 
scalable session messages local recovery congestion control srm toolkit discussed 
acknowledgment benefited discussions dave clark task force general issues versus receiver protocols 
peter danzig discussions reliable multicasting web caching 
mark allman todd montgomery kannan varadhan anonymous referees useful feedback 
birman response cheriton skeen criticism causal totally ordered communication operating syst 
rev vol 
pp 
jan url cs tr cs cornell edu dienst ui contents cornell tr 
birman schiper stephenson lightweight casual atomic group multicast acm trans 
comput 
syst vol 
pp 
aug 
braden clark shenker integrated services internet architecture overview request comments rfc ietf june :10.1.1.27.14
bhagwat mishra tripathi effect topology performance reliable multicast communication proc 
ieee infocom pp 

cheriton skeen understanding limitations causally totally ordered communication proc :10.1.1.116.4996
th symp 
operating syst 
principles acm dec 
clark tennenhouse architectural considerations new generation protocols proc 
acm sigcomm sept pp 

clark lambert zhang netblt high throughput transport protocol proc 
acm sigcomm aug pp 

deering multicast routing datagram internetwork ph dissertation stanford university palo alto ca dec 
diot crowcroft multipoint communication survey protocols functions mechanisms ieee select 
areas commun 
special issue group commun may 
erramilli singh reliable efficient multicast protocol broadband broadcast networks proc 
acm sigcomm aug pp 

floyd jacobson liu mccanne zhang reliable multicast framework light weight sessions application level framing acm sigcomm aug url ftp ftp ee lbl gov papers srm sigcomm ps pp :10.1.1.121.1027

reliable multicast framework light weight sessions application level framing extended report lbnl tech 
rep url ftp ftp ee lbl gov papers wb tech ps sept 
hofmann generic concept large scale multicast proc :10.1.1.121.1027
int 
zurich seminar digital commun 
feb url www informatik uni karlsruhe de hofmann ps 
holbrook singhal cheriton log receiver reliable multicast distributed interactive simulation proc 
acm sig comm aug 
isis horus www page url www cs cornell edu info projects isis isis html 
jacobson portable public domain network whiteboard xerox parc apr unpublished document cited acknowledgment purposes 
privacy security architecture lightweight sessions fe nm sept url ftp ftp ee lbl gov talks lws privacy 
ps lightweight sessions new architecture realtime applications protocols rd annu 
principal investigators meeting arpa santa rosa ca sept url ftp ftp ee lbl gov talks ps kurose towsley scalable reliable multicast multiple multicast groups tech 
rep tr oct proc 
acm sigmetrics conf june 
lin paul rmtp reliable multicast transport protocol ieee infocom pp 


liu estrin shenker zhang local error recovery srm comparison approaches usc tech 
rep jan url www usc edu dept cs technical reports html 
mccanne distributed whiteboard network conferencing uc berkeley cs computer networks term project may unpublished report url www cs berkeley edu mccanne papers mccanne wb ps gz 
mccanne jacobson vic flexible framework packet video acm multimedia san francisco ca nov pp :10.1.1.51.6717

mccanne jacobson vetterli receiver driven layered multicast acm sigcomm stanford ca aug pp :10.1.1.51.6717

mills network time protocol version rfc request comments mar 
multicast transport protocols www page url hill lut ac uk ds archive mtp html 
mccanne ucb lbnl network simulator ns url cs berkeley edu ns 
palmer graphical evolution theory random graphs 
new york wiley 
schwartz error control retransmission schemes multicast transport protocols real time media ieee acm trans 
networking vol 
pp 
june 
schulzrinne casner frederick jacobson rtp transport protocol real time applications rfc jan :10.1.1.165.7150
pingali towsley kurose comparison sender initiated receiver initiated reliable multicast protocols ieee select 
areas commun vol 
pp 
apr 
url ftp gaia cs umass edu pub comparison ps earlier version appeared sigmetrics may 
thomas la porta schwartz protocol highly flexible high speed transport protocol ieee select :10.1.1.165.7150
areas commun vol 
pp 
may 
sharma estrin floyd zhang scaling session messages srm unpublished manuscript aug 
url ftp usc edu pub papers infocom ps 
strayer dempsey weaver xtp xpress transfer protocol 
reading ma addison wesley url aw com authors dempsey xtp xtp 
xpress transport protocol specification xtp revision xtp forum mar 
floyd srm web page url ftp ee lbl gov floyd srm html 
yajnik kurose towsley packet loss correlation mbone multicast network ieee global internet mini conf :10.1.1.32.7807
globecom nov 
eurecom biersack eurecom towsley parity loss recovery reliable multicast transmission sig comm 
floyd reliable multicast framework light weight sessions application level framing floyd tcp explicit congestion notification acm computer commun :10.1.1.32.7807
rev vol 
pp 
oct 
sally floyd received ph degrees university california berkeley area theoretical computer science 
staff scientist lawrence berkeley national laboratory network research group 
research focused network congestion control analysis network dynamics 
van jacobson research scientist lawrence berkeley national laboratory network research group 
ching gung liu received degree university southern california degree national taiwan university 
joined ph program usc started working design implementation pim protocol independent multicast 
liu currently working scalable reliable multicast srm ph degree 
steven mccanne received degree high honors electrical engineering computer science ph degree computer science university california berkeley respectively 
staff lawrence berkeley national laboratory network application architecture software underlies internet multicast backbone mbone tools 
joined faculty department electrical engineering computer science university california berkeley currently assistant professor 
research interests include multimedia networking multicast communication protocols signal compression remote collaboration technologies network simulation architectures 
dr mccanne received best student award winter usenix acm multimedia graduate scholarship award development mbone tools 
member ieee acm aaas internet engineering task force 
lixia zhang biography see february issue ieee acm transactions networking 
