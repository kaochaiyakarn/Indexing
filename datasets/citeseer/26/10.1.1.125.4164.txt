inference belief networks procedural guide cecil huang section medical informatics stanford university school medicine adnan darwiche information technology rockwell science center address correspondence cecil huang section medical informatics stanford ca usa rockwell science center dos rios oaks ca usa international journal approximate reasoning elsevier science avenue americas new york ny belief networks popular tools encoding uncertainty expert systems 
networks rely inference algorithms compute beliefs context observed evidence 
established method exact inference networks probability propagation trees clusters pptc algorithm developed spiegelhalter re ned jensen pptc converts belief network secondary structure computes probabilities manipulating secondary structure 
document provide self contained procedural guide understanding implementing pptc 
synthesize various optimizations pptc scattered literature 
articulate undocumented open secrets vital producing robust cient implementation pptc 
hope document probabilistic inference accessible extensive prior exposure 
keywords arti cial intelligence bayesian network belief network causal network evidence expert systems join tree probabilistic inference probability propagation reasoning uncertainty 


purpose increasing number academic commercial endeavors belief networks encode uncertain knowledge complex domains 
networks rely inference algorithms compute beliefs alternative hypotheses context observed evidence 
task realizing inference algorithm trivial 
ort spent synthesizing methods scattered literature converting algorithmic form 
additional ort spent addressing undocumented lower level issues vital producing robust cient implementation 
issues exist words colleague open secrets probabilistic inference community 
document addressed interested researchers developers extensive prior exposure algorithms probabilistic inference 
describe procedural fashion probability propagation trees clusters pptc method probabilistic inference developed lauritzen spiegelhalter re ned jensen focus steps required pptc 
synthesize various published optimizations pptc articulate open secrets crucial robust cient implementation pptc 
pptc established method exact probabilistic inference exact methods include cutset conditioning symbolic probabilistic inference spi 
review approximate methods 
goal reader able document implement pptc additional help 
hope document probabilistic inference accessible entrenched belief networks community 
ort spent conducting research developing applications technology 

pptc 
pptc method performing probabilistic inference belief network 
consider belief network shown 
example probabilistic inference compute probability knowledge general probabilistic inference belief network process computing vj simply vj value variable assignment values set variables belief network 
basically vj asks belief networks referred causal networks bayesian networks literature 
comprehensive introductions belief networks 

belief network 
de de suppose observe set variables probability variable value 
pptc works steps 
belief network converted secondary structure 
probabilities interest computed operating secondary structure 

overview document section describe notational conventions fundamental concepts document 
section introduce belief networks secondary structures 
sections describe creation secondary structure belief network 
integrate evidence framework section 
sections constitute essence pptc inference 
having laid foundations discuss optimization opportunities section low level implementation issues section 
notation specify pptc notational conventions fundamental concepts 

variables values denote variables italic uppercase letters variable values italic lowercase letters 
instantiate avariable assigning value call instantiation sets variables denoted boldface uppercase letters instantiations boldface lowercase letters 
instantiate set variables assigning value variable denote assignment call instantiation 
potentials distributions 
potentials de ne potential set variables function maps instantiation nonnegative real number denote potential notation denote number maps call 
potentials viewed matrices implemented tables refer matrices tables 

operations potentials de ne basic operations potentials marginalization multiplication 
suppose set variables potential set variables marginalization potential computed follows 
identify instantiations consistent 
assign sum marginalization denoted follows sets variables potentials multiplication potential computed follows 
identify instantiation instantiation consistent 
assign product 
multiplication potentials denoted follows 
probability distributions probability distribution simply distribution special case potential 
set variables notation denote probability distribution simply probability potential elements add 
denote elements asp call element probability ofx notation important notion conditional probability 
sets variables notation xjy denote conditional probability simply probability xjy collection probability distributions indexed instantiations xjy probability distribution denote elements xjy asp xjy call element xjy probability notation instantiation xjy note special case xjy 

belief networks secondary struc tures 
belief networks belief networks experts encode selected aspects knowledge beliefs domain 
constructed network induces probability distribution variables 

de nition belief network set variables fv ng consists components directed acyclic graph dag vertex graph represents variable takes values parents graph denoted instantiations family denoted fv de ned dag structure encodes set independence assertions restrict variety interactions occur variables 
assertions discussed precisely section 
quanti cation ofg variable ing quanti ed conditional probability table vj 
vj function fv helpful think way instantiation real numbers assigned value add 
vj called conditional probability ofv vj simply called prior probability components induce joint probability distribution ny vij variables network 

example refer example belief network shown 
network set variables fa hg variable having og 
fj de example conditional probability example prior probability 
network joint probability distribution product conditional prior probabilities bj cj djb ej fj de hj distinguish vertex variable represents 

independence assertions addition numbers tables belief network encodes independence assertions depend network quanti ed 
independence assertion statement form independent combinations values xjz 
words knowing ect belief independence assertions belief network important pptc uses reduce complexity inference 
pattern arcs dag encodes independence assertions variable independent parents 
independence assertions logically imply new independence assertion mechanism manipulating statements known axioms 
graph theoretic relation known separation captures derivable independences encoded dag 
words separates dag network independent respect axioms 

secondary structure experts typically belief networks encode domain pptc performs probabilistic inference secondary structure characterize section 

de nition belief network set variables fv ng de ne secondary structure contains graphical component 
graphical component consists undirected cluster nonempty set variables 
clusters satisfy join tree property clusters int clusters path contain variable family fv section included clusters 
sepsets edge int labeled intersection adjacent clusters labels called separator sets sepsets 
numerical component described notion belief potential 
belief potential function maps instantiation set variables real number section 
belief potentials de ned sets variables equivalently xy xjz 
intuitive discussion separation 
distinguish cluster variables 
note sepset included cluster resulting cluster tree satisfy join tree property 
clusters cluster associated belief potential maps instantiation real number 
sepsets sepset associated belief potential maps instantiation real number 
belief potentials arbitrarily speci ed satisfy constraints cluster neighboring sepset holds equation satis ed cluster neighboring sepset say consistent consistency holds cluster sepset pair say secondary structure locally consistent 
belief potentials encode joint distribution belief network xi sj xi sj cluster sepset potentials respectively 
key step pptc construction secondary structure satis es constraints 
secondary structure important property cluster sepset holds 
property compute probability distribution variable cluster sepset contains follows secondary structure referred literature join tree junction tree tree belief universes cluster tree clique tree designations 
document term join tree refer graphical component term join tree potential refer generically cluster sepset belief potential 
term join tree refer entire secondary structure created meaning join tree clear context 
section show build join tree dag belief network section describe pptc manipulates join tree potentials satisfy equations 
abd ad ade ae ace cluster def abd de def abd abd ad ce sepset ad ad 
example secondary structure 
egh 
example illustrates part secondary structure obtained belief network 
tree contains clusters ace ade def ae ce de egg belief potential variables 
example abd ad illustrated 
note abd ad satisfy local consistency requirement ad abd local consistency holds cluster sepset pairs 
belief potentials encode joint distribution belief network satisfying abd ace ade def egh ad ae ce de 
independence assertions complete set independence assertions encoded join tree speci ed follows 
secondary structure set variables sepsets included clusters 
subsets tree shows independent chain cluster containing cluster containing passes cluster 
building join trees belief networks section dag belief network apply series graphical transformations result join tree 
transformations involve anumber intermediate structures summarized follows 
construct undirected graph called moral graph dag 

selectively add arcs moral graph form triangulated graph 

triangulated graph identify select subsets nodes called cliques 

build join tree starting cliques clusters connect clusters form undirected tree satisfying join tree property inserting appropriate sepsets 
steps nondeterministic consequently di erent join trees built dag 

constructing moral graph dag belief network 
moral corresponding tog constructed follows 
create undirected dropping directions arcs 

follows identify parents ing 
connect pair nodes adding undirected arcs tog illustrates transformation dag 
undirected arcs added tog called moral arcs shown dashed lines gure 

triangulating moral graph undirected graph triangulated cycle length greater contains edge connects nonadjacent nodes cycle 
describe procedure triangulating arbitrary undirected graph adapted kj belief network structure moral graph 
constructing moral graph 

copy ofg call itg 
nodes left ing select node criterion described 
node neighbors ing form cluster 
connect nodes cluster 
edge added tog add corresponding edge tog 
remove modi ed additional arcs introduced previous steps triangulated 
describe criterion selecting nodes step rely notion weight weight number values weight cluster product weights constituent nodes 
criterion selecting nodes remove stated follows choose node causes number edges added step breaking ties choosing node induces cluster smallest weight 
access node removed keeping remaining nodes binary heap 
node associated primary key number edges eliminated induced edges vertex cluster added egh def ace abd ade ae triangulated graph elimination ordering 
triangulating moral graph 
depicts triangulated graph obtained moral graph 
dashed lines gure indicate edges added triangulate moral graph 
show elimination ordering nodes interested reader trace step triangulation process 
general ways triangulate undirected graph 
optimal triangulation minimizes sum state space sizes cliques section triangulated graph 
task nding optimal triangulation complete 
node selection criterion step greedy polynomial time heuristic produces high quality triangulations real world settings 

identifying cliques clique undirected subgraph ofg complete maximal 
complete means pair distinct nodes connected edge 
maximal means clique properly contained larger complete subgraph 
golumbic ers cient algorithm identifying cliques arbitrary triangulated graph added selected secondary key weight cluster induced selected 
removed ofv neighbors needs keys recalculated position heap modi ed 
removing node costs lg time number neighbors number nodes remaining detailed discussion binary heaps 
algorithm relies particular ordering nodes generated tarjan yannakakis 
adapting triangulation procedure section identify cliques triangulated graph constructed 
procedure relies observations clique triangulated graph induced cluster step section 
induced cluster subset subsequently induced cluster 
observations suggest extract cliques triangulation process saving induced cluster subset previously saved cluster 
revisiting see cliques triangulated graph egh def ace abd ade 

building optimal join tree point longer need undirected graph 
seek build optimal join tree connecting cliques obtained section 
build optimal join tree connect cliques resulting clique tree satis es join tree property optimality criterion de ne 
join tree property essential tree useful probabilistic inference optimality criterion favors join trees minimize computational time required inference 
set cliques form clique tree iteratively inserting edges pairs cliques cliques connected edges 
view task iteratively inserting sepsets pairs cliques cliques connected sepsets 
take approach specifying build optimal join tree 
divide speci cation algorithm parts section provide generic procedure forms clique tree iteratively selecting inserting candidate sepsets 
section show sepsets chosen order clique tree optimal join tree 

forming clique tree procedure builds optimal join tree iteratively selecting inserting candidate sepsets criterion step speci ed section 
cliques triangulated graph clusters join tree terms clique cluster interchangeably section 
general join tree need clique tree 
building optimal join tree 
set trees consisting single clique empty sets 

distinct pair cliques create candidate sepset labeled backpointers cliques refer sepset xy 
insert xy 

repeat sepsets inserted forest 
select sepset xy criterion speci ed section 
delete xy 
insert sepset xy cliques di erent trees forest 
note insertion sepset merge trees larger tree 

choosing appropriate sepsets order describe choose candidate sepset de ne notions mass cost follows mass sepset xy contains number variables cost sepset xy weight weight weight de ned follows weight number values weight set variables product weights variables notions established state select candidate sepset execute step section resulting clique tree satisfy join tree property wemust choose candidate sepset largest mass sepsets equal mass chosen optimize inference time resulting join tree breaking tie follows choose candidate sepset smallest cost 
basis method building optimal join tree 
pairs 
cycle form 

example starting clique ace ade def choose connecting sepsets ad ae ce de mass cliques sepsets form join tree structure illustrated 

implementation notes similar triangulation algorithm implement set candidate binary heap ranking sepset primary key mass secondary key cost 
note candidate sepsets step section empty 
original dag belief network fully connected empty candidate sepsets included nal join tree 
outcome acceptable optimization involves disallowing empty sepsets terminating step sepsets chosen empty 
step terminates case resulting join tree join forest 
section discusses deal forests 
belief network graphical transformation join tree structure inconsistent join tree consistent join tree initialization propagation marginalization 
block diagram pptc evidence 

principles inference having built join tree structure wenow provide procedures computing join tree numerical component satis es conditions section 
show compute probability distribution variable join tree 
note computing corresponds probabilistic inference context evidence 
address general problem computing vj context evidence section 

overview illustrates control pptc evidence 
trace steps gure follows graphical transformation 
transform dag belief network join tree structure procedures section 
initialization section 
quantify join tree belief potentials satisfy equation 
result inconsistent join tree initial assignment belief potentials meet local consistency requirements equation 
global propagation section 
perform ordered series local manipulations called message passes join tree potentials 
message passes rearrange join tree potentials locally consistent result global propagation consistent join tree satis es equations 
marginalization section 
consistent join tree compute variable interest 
initialization procedure assigns initial join tree potentials conditional probabilities belief network 
cluster sepset set 
variable perform assign cluster contains fv call parent cluster fv 
multiply vj xp vj initialization conditional distribution vj variable multiplied cluster potential 
initialization procedure satis es equation follows nq xi sj number clusters number variables xi sj cluster sepset potentials respectively 
illustrates initialization procedure tables cluster ace sepset ce secondary structure 
example ace parent cluster fc fe fa 
initialization ace cj ej ce 

global propagation having initialized join tree potentials perform global propagation order locally consistent 
global propagation consists series local manipulations called message passes occur triangulation procedure section guarantees cluster exists 
ace ace initial values ce ce 
initialization cluster ace sepset ce 
initial values cluster neighboring cluster message pass forces belief potential intervening sepset consistent see equation preserving invariance equation 
global propagation causes cluster pass message neighbors message passes ordered message pass preserve consistency introduced previous message passes 
global propagation completed cluster sepset pair consistent join tree locally consistent 
section describe single message pass adjacent clusters 
section explain global propagation achieves local consistency coordinating multiple message passes 

single message pass consider adjacent clusters sepset associated belief potentials message pass occurs steps 
projection 
assign new table saving old table old 
absorption 
assign new table old new tables old old instantiation jensen shows 
occurs set 
equations assign new potentials left hand side equation remains constant preserving invariance equation xi sj old old xi sj old old old old 
coordinating multiple messages join tree clusters pptc global propagation algorithm begins choosing arbitary cluster performing message passes divided phases 
collect evidence phase cluster passes message neighbor direction clusters farthest distribute evidence phase cluster passes messages neighbors away direction 
collect evidence phase causes messages passed distribute evidence phase causes messages passed 
global propagation 
choose arbitrary cluster 
unmark clusters 
call collect evidence 

unmark clusters 
call distribute evidence 
collect evidence 
mark 
call collect evidence recursively unmarked neighboring clusters 

pass message cluster collect evidence 
abd ad ade ae ace ce de def egh collect evidence distribute evidence 
message passing global propagation 
distribute evidence 
mark 
pass message unmarked neighboring clusters 

call distribute evidence recursively unmarked neighboring clusters 
net result message passing cluster passes information encoded belief potential clusters join tree 
note message passing scheme cluster passes message neighbor received messages neighbors 
condition assures local consistency join tree global propagation completed 

example illustrates pptc propagation step join tree 
ace starting cluster 
collect evidence phase messages passed ace direction clusters abd def egh messages indicated solid arrows 
distribute evidence phase messages passed away cluster ace ace messages indicated dashed arrows 
numbers indicate possible message passing order 

marginalization consistent join tree compute variable interest follows bd ab abd abd abd abd abd 
marginalization example 

identify cluster sepset contains 
compute marginalizing equation repeated convenience illustrates example marginalization 
cluster potential abd consistent join tree 
abd marginalized compute marginalized compute 
parent cluster fv convenient choice see section discussion optimal choices 

handling evidence able compute variable sections show howto modify procedures section order compute vj context evidence introduce observations simplest notion evidence section 
sections show compute vj sets observations section extend procedures handle general notions evidence 

observations likelihoods observations simplest forms evidence 
observation statement form collections observations may denoted instantiation set variables observations referred hard evidence 
encode observations form suitable pptc de ne notion likelihood 
variable likelihood denoted potential words maps value real number see section 
encode arbitrary set observations likelihood variable follows observed assign follows observed value value unknown assign value note observations likelihood variable consists 
table illustrates likelihoods encode observations variables join tree 

pptc inference observations illustrates control pptc observations 
modify control incorporate observations follows initialization section 
modify initialization section introducing additional step variable initialize likelihood variable table 
likelihood encoding belief network graphical transformation join tree structure inconsistent join tree consistent join tree 
initialization 
observation entry propagation 
marginalization 
normalization 
block diagram pptc observations 
observation entry section 
initialization encode incorporate observations join tree step results modi cation join tree potentials 
normalization section 
compute vj variable interest perform marginalization additional step called normalization 

initialization observations keep track observations maintaining likelihood variable 
initialize likelihoods adding step initialization procedure 
cluster sepset set 
variable assign cluster contains fv multiply vj xp vj set likelihood element 
observation entry note completion initialization likelihoods encode observations 
incorporate observation encoding observation likelihood incorporating likelihood join tree follows 
encode observation likelihood new 

identify cluster contains 
update new new parent cluster fv convenient choice see section discussion optimal choices 
entering set observations described modify join tree potentials subsequent probabilities derived join tree events conjoined evidence words computing compute respectively 
note join tree encodes see equation 

normalization join tree consistent global propagation cluster sepset denotes observations incorporated join tree section 
marginalize cluster potential variable obtain probability ofv goal compute vj probability ofv obtain vj follows vj probability observations referred normalizing constant 

handling dynamic observations suppose computing vj wish compute vj di erent set observations 
start anew building join tree structure initializing potentials entering new set observations performing global propagation marginalizing normalizing 
amount additional necessary directly modify join tree potentials response changes set observations 
imagine dynamic system consistent join tree steady state incoming observations disturb steady state 
subsection re ne control pptc adding procedures handle dynamic observations 

control shows control pptc dynamic observations 
note dotted paths going consistent join tree inconsistent join tree labeled global update global retraction 
depending set observations perform procedures 
global update global retraction belief network graphical transformation join tree structure inconsistent join tree consistent join tree 
initialization 
observation entry propagation 
marginalization 
normalization global update 
block diagram pptc dynamic observations 
incorporate new observations global retraction required modifying retracting previous observations 
global retraction requires reinitialization join tree potentials undoing observation involves restoring table elements zeroed previous observations 
describe procedures precisely rst establish basic notions changes observations 

updates retractions describe changes observations establish notion observed state 
observed state variable observed value ifv observed observed state unknown say unobserved 
suppose change set observations di erent set observations 
observed state variable undergoes changes change 
unobserved remains unobserved 

update 
unobserved value retraction 

unobserved 
state handle changes observations 
suppose consistent join tree incorporates set observations wish compute vj variables interest di erent 
incorporate join tree performing global update section 
perform global update variable observed state unchanged updated 
global retraction section 
perform global retraction variable observed state retracted 

global update global update executes observation entry see section variable observed state updated global updating destroys consistency join tree restore consistency performing global propagation 
belief potential cluster modi ed global updating su cient unmark clusters call distribute evidence 

global retraction perform global retraction follows 
variable update likelihood re ect changes observed state 

reinitialize join tree tables section 
incorporate observation section 
handle retractions way handle updates retraction trying recover join tree potential elements zeroed previous observations 
recourse reinitialize join tree tables enter new set observations 
observations introduced zeroing cluster tables alternative propagation methods examples include fast retraction cautious propagation 
applications methods include con ict analysis sensitivity analysis processing counterfactual queries 
compared pptc propagation alternative methods require storage computation generally handle possible retractions observations 

sophisticated notions evidence observations simplest common type evidence encountered 
likelihoods represent sophisticated types evidence 
introduce general notions evidence sections 
describe pptc evidence manner parallel description pptc observations 

evidence likelihoods general likelihood variable interpreted assigning relative weight value case isthe values wesay encodes information variable terminology commonly classify di erent types evidence variable form likelihood takes virtual evidence 
virtual evidence soft evidence general type evidence 
virtual evidence variable represented likelihood real number 
finding 
nding represented likelihood isa ora 
essentially nding declares zeroed values impossible 
naturally nding allow possible value 
observation 
observation special case nding exactly value observation declares certainty 
evidence entry completion initialization evidence encoded likelihoods incorporated join tree 
incorporate piece evidence variable executing procedure 
encode evidence variable likelihood new 

identify cluster contains 
update new new note equation specialized version equation 
typically encode information state vector 
parent cluster fv convenient choice see section discussion optimal choices 

handling dynamic evidence easily extend pptc dynamic observations section handle dynamic evidence 
discussing changes evidence generalize notion observed state notion evidence state evidence state likelihood extend notation represent combined evidence state variables refer evidence con guration 
consider change evidence con guration 
variable denote evidence state evidence state new new classify change change 
new 
new update 
value implies 
retraction 
value new 
state handle changes evidence 
suppose consistent join tree incorporates evidence con guration wish compute vj variables interest di erent 
incorporate join tree performing global update 
perform global update variable evidence state unchanged updated 
global retraction 
perform global retraction variable evidence state retracted 
perform global update executing evidence entry section variable evidence state updated perform global retraction follows new 
variable update likelihood re ect changes observed state 

reinitialize join tree tables section 
variable incorporate section 
pptc optimizations section discuss optimizations pptc implemented optimizations signi cantly reduce computation required inference certain situations 
assume reader mastered material previous sections basic understanding computer algorithms 

query driven message passing section summarize modi ed version pptc called pptc 
version pptc previous sections query driven pptc establish maintain consistency join tree passes messages response individual variable queries vj 
optimization useful diagnostic applications example user constructs belief network variables queries variables 
query driven pptc exploits observation marginalize cluster potential obtain need ensure 
call collect evidence ensure condition 
query driven pptc uses modi ed version collect evidence recurses neighbor previously passed message query driven pptc keeps track messages passed maintaining set boolean quantities called message ags 
message ag denoted asm interpreted follows message agm istrue message pass leave unchanged isf alse 
emphasize message ags stored locally cluster store message neighbors part local information message agm set true message pass additional variable queries processed additional message ags set true 
message ags set alse invalidated dynamic evidence evidence update 
suppose cluster incorporates evidence update procedure section 
message passes direction away cluster invalidated message passes need recomputed subsequent variable query requests 
evidence retraction 
process changes evidence involve retraction employ familiar procedure join tree tables entering evidence anew 
message passes invalidated 

inference forests join trees initial belief network fully connected procedures section yield join tree empty sepsets 
optimize pptc disallowing empty sepsets performing inference forest join trees 
maintaining join tree separately computational cost passing messages serve rescale cluster potentials 
maintaining separate join trees general maintain separate normalization constants join tree 
note normalization constant join tree incorporates evidence computed cluster follows computed calling collect evidence cluster marginalizing described 
marginalization ectively occurs normalization phase variable query seen denominator equation 
consider forest join corresponding normalization constants en 
disconnected join trees independent probability evidence entire join forest calculated follows ny en ei suppose query variable int 
choose cluster contains call collect evidence obtain 
want compute compute normalization constants en je en en en ei normalization constant ei computed marginalizing cluster join interested computing vj need normalization constants vj en je en jkl 
evidence shrinking single cluster 
cluster jkl shrunk nding observation reducing ective size 
unshaded cells represent cluster elements remain active shrinking process 

evidence shrinking evidence shrinking optimization pptc uses ndings observations reduce ective cluster sizes 
example focus particular cluster jkl join tree just processed ndings 
evidence ect cluster jkl 
mathematically wewould multiply shaded cells zero 
practice want ect results subsequent message passes involving jkl 
subsequent propagation involve unnecessary costly computation 
evidence shrinking avoids unnecessary processing restructuring cluster jkl unshaded cells cells involved computation 
restructuring process performed time proportional reduced cluster size 
details restructuring discussed section 
properties evidence shrinking contribute potential signi cant computational savings 
likelihood ects clusters containing variable second restrict evidence observations case existing implementations observation variable ectively reduces size cluster sepset containing dimension 
properties evidence shrinking illustrated 
abd ad ade ace de def ae ce egh abd ad ad df gh 
evidence shrinking join tree 
observation reduces matrices clusters containing dimension 
similarly observation reduces matrices clusters containing dimension 
note sepset ce empty passes message composed single number evidence subtree message ce originates 

interaction cluster sepset arrays 
denotes cluster ade denotes neighboring sepset ae 
shaded cells denote potential elements potential element instantiation variables indexes 
cluster element corresponding sepset element old consistent correspondence illustrated dashed arrows 

array level techniques devil details said 
de nitely case implementing pptc 
section address array level issues normally discussed probabilistic literature addressed programmer wishes build cient implementation pptc 
techniques additional precomputation prior inference reduce overhead message passing 
additional array level techniques section 

cluster sepset mappings section describe auxiliary data structure called mapping crucial cient implementation pptc inference 
recall message pass consists steps projection absorption see section 
projection absorption depend precise interaction cluster potential sepset potential 
potentials typically implemented arrays interaction arrays illustrated 
old old 
example cluster sepset mapping 
cluster instantiation cluster sepset mapping stores array index consistent sepset instantiation solid arrows illustrate resulting correspondence cluster elements sepset elements 
projection absorption cluster sepset mapping di erence actual arithmetic performed 
projection absorption key step locate cluster element corresponding sepset element old consistent order locate need just instantiation array index computing array index requires number operations involving array dimensions message pass computation needs applied cluster instantiation furthermore array indices recomputed message pass involving stored retrieval 
avoid unnecessary recomputation array indices precomputing building join tree 
speci cally cluster neighboring sepset compute array instantiations array element stores array index instantiation consistent call cluster sepset mapping 
illustrates example cluster sepset mapping 
cluster sepset mapping computed time proportional number instantiations cluster sepset mappings signi cantly reduce running time inference enable corresponding elements located simple array lookups repeated array index calculations 
old 
zeroing cluster elements observation 
evidence shrinking suppose incorporate observation cluster observation entry procedure section 
cause certain elements zeroed illustrated 
continue visited subsequent message passes involving ect results computations 
evidence shrinking section seeks avoid extraneous costly element accesses 
computational gains evidence shrinking hinge restructuring clusters active elements elements zeroed evidence visited subsequent message passes 
implement restructuring maintaining cluster auxiliary array called shrink mapping 
shrink mapping cluster array points active elements ective size shrink mapping number active elements projection absorption active elements accessed visiting elements shrink mapping 
shrink mapping amounts additional level indirection 
illustrates example shrink mapping 
shrink mappings updated time proportional reduced cluster size 
programming solution involves procedure generates instantiations cluster variables element indices recursing values 
implement evidence shrinking modifying procedure recurse possible values variables cluster 
old 
shrink mapping example 
cluster shrunk observation shrink mapping points cluster elements consistent observation 
reduces ective cluster size running time message passes involving cluster 

pptc recognized algorithms exact probabilistic inference belief networks 
document provided self contained procedural guide understanding implementing pptc 
synthesized methods scattered literature articulated methods algorithmic form 
addition discussed undocumented lower level issues vital producing robust cient implementation pptc 
hope document probabilistic inference accessible increasing number researchers developers making technology 
cecil huang adnan darwiche inspiration intimate involvement producing document 
finn jensen frank jensen mark peot ross shachter sharing expertise probabilistic inference 
adam paul dagum srinivas ted shortliffe helpful discussions 
bruce seely moises goldszmidt feedback earlier versions document 
anonymous reviewers contributions nal version document 
funded medical scientist training program gm national institute general medical sciences rockwell science center palo alto oaks california 
computing facilities provided rockwell science center resource nih lm 

additional optimizations appendix outline additional optimization opportunities pptc provide relevant 

zero compression zero compression extension pptc save signi cant computation certain circumstances 
summarize basic ideas zero compression interested reader nd thorough treatment original jensen andersen 
zero compression designed take advantage conditional probability tables vj row entries contain implying logical functional relationship variable parents contain extreme probabilities close 
situations occur practice example engineering applications model small failure probabilities 

annihilating zeros initialization conditional probability vj cluster potential rst focus particular conditional probability distribution vj 
vj cause corresponding elements zero 
performing global propagation propagate entire join tree 
suppose user enters evidence performs global propagation 
propagation computational resources expended adding multiplying potential elements expenditure wasteful number increases 
zero compression addresses wasteful propagation follows 
build join tree 
initialize cluster potentials conditional probabilities vj 

perform global propagation collect evidence followed distribute evidence 

cluster visit element identifying annihilating elements 
annihilation step restructure internals subsequent messages passes involving visit elements 

annihilating small elements zero compression speed exact inference join tree ective cluster sizes reduced 
reduce ective cluster sizes annihilating elements probabilities close zero elimination small elements results join tree performs approximate inference 
details select appropriate annihilation thresholds cluster contained 
note strict zero compression scheme section small elements destroys consistency join tree 
loss consistency remedied global propagation case query driven pptc loss consistency properly accounted invalidating appropriate message ags 
approximation scheme result signi cant computational gains depending topology quanti cation original belief network amount error tolerated user 
scenarios total number elements annihilated may orders magnitude smaller original number elements 
example discusses experiments real world belief network inference time reduced percent total removed probability mass percent 

dynamic zero compression appropriate data structuring form zero compression dynamically compresses cluster matrices inference implemented 
cluster element evaluates su ciently small number element annihilated immediately 

dynamic restructuring cluster trees recall marginalization evidence entry asked choose cluster contains variable situations conveniently chose parent cluster choosing clusters judiciously query reduce number message passes choose message passes involving smaller clusters 
range message passing options expands allow possibility dynamically restructuring cluster trees sepsets manner preserves join tree property 

optimizations arithmetic expression level join tree convenient intermediate structure performing inference multiply connected belief networks 
construction validated fundamental results theory conditional independence local message passing marginalization strategies intuitive mathematically founded 
formulation inference problem masks additional opportunities optimization 
ambrosio exposes opportunities rede ning inference task smaller grain size optimizing computation individual terms opposed individual marginal distributions 
formulation challenge construct optimal arithmetic expressions speci queries advantage conditional independencies partial results cached previous computations 
li ambrosio approach improvement spi algorithm 
darwiche provan address probabilistic inference arithmetic expression level approach generates optimizes expression dags line evaluates dags line response dynamic evidence 
describe method pptc generating expressions expressions answer queries respect evidence prede ned set variables 
size generated expression method proportional total size cluster sepset tables join tree 
importantly method updating expressions associates validity ags individual arithmetic operations leading optimizations re ned achieved message ags suggested section 
note variables viewed sepsets cluster incorporates evidence absorbing probability distribution computed projecting appropriate cluster 

lauritzen spiegelhalter local computations probabilities graphical structures application expert systems roy 
stat 
soc 


jensen lauritzen olesen bayesian updating causal probabilistic networks local computations comp 
stat 
quart 

shenoy shafer axioms probability belief function propagation uncertainty arti cial intelligence vol 
shachter levitt lemmer kanal eds elsevier north holland amsterdam 

pearl probabilistic reasoning intelligent systems networks plausible inference second edition morgan kaufmann san mateo calif 

neapolitan probabilistic reasoning expert systems theory algorithms john wiley sons new york 

pearl constraint propagation approach probabilistic reasoning uncertainty arti cial intelligence kanal lemmer eds elsevier new york 

peot shachter fusion propagation multiple observations belief networks artif 
intell 

darwiche conditioning algorithms exact approximate inference proceedings th conference uncertainty arti cial intelligence 

shachter ambrosio del symbolic probabilistic inference belief networks proceedings th national conference ai boston mass 

li ambrosio cient inference bayes nets combinatorial optimization problem int 
approximate reasoning 

dagum horvitz bayesian analysis simulation algorithms inference belief networks networks 

dawid conditional independence statistical theory roy 
stat 
soc 


geiger verma pearl identifying independence bayesian networks networks 

charniak bayesian networks tears ai mag 

shachter background review terminology decisions intelligent systems representing uncertainty belief networks uence diagrams duxbury belmont calif manuscript progress 

lauritzen dawid larsen independence properties directed markov elds networks 

kj triangulation graphs algorithms giving small total state space technical report dept math 
comp 
sci aalborg university denmark 

cormen leiserson rivest heapsort algorithms mit press cambridge mass 

arnborg corneil complexity nding embeddings tree siam journal algebraic discrete methods 

golumbic triangulated graphs algorithmic graph theory perfect graphs academic press new york 

tarjan yannakakis simple linear time algorithms test graphs test acyclicity selectively reduce hypergraphs siam comp 

jensen jensen optimal junction trees proceedings th conference uncertainty arti cial intelligence seattle wash 

jensen propagation dags bayesian networks ucl press london 
manuscript progress 

cowell dawid fast retraction evidence probabilistic expert system statistics computing 

jensen implementation aspects various propagation algorithms hugin technical report dept math 
comp 
sci aalborg university denmark 

jensen cautious propagation bayesian networks proceedings th conference uncertainty arti cial intelligence montreal canada 

shachter andersen szolovits global conditioning probabilistic inference belief networks proceedings th conference uncertainty arti cial intelligence morgan kaufmann seattle wash 

jensen andersen approximations bayesian belief universes knowledge systems proceedings th conference uncertainty arti cial intelligence cambridge mass 

ambrosio incremental probabilistic inference proceedings th conference uncertainty arti cial intelligence 

darwiche provan query dags practical paradigm implementing belief network inference proceedings th conference uncertainty arti cial intelligence 
appear 

