defend cache consistency attacks wireless ad hoc networks caching techniques reduce bandwidth consumption data access delay wireless ad hoc networks 
cache cache consistency issues addressed 
maintain strong cache consistency strategic scenarios battle fields approach preferred due low overhead 
approach may suffer security attacks 
example malicious node intruder may drop insert modify invalidation messages mislead receivers stale data unnecessarily invalidate data valid 
propose solution ir cache invalidation strategy prevent intruders dropping modifying invalidation messages 
digital signatures protect irs significantly high overhead terms computation bandwidth consumption 
address problem propose family randomized grouping schemes intrusion detection damage recovery 
extensive analysis simulations evaluate proposed schemes 
results show solution achieve level security low overhead 
wireless ad hoc networks nodes communicate multi hop wireless links 
due lack infrastructure support node acts router forwarding data packets nodes 
previous research ad hoc networks focuses development dynamic routing protocols efficiently find routes communicating nodes 
routing important issue ad hoc networks issues information data access important supported part national science foundation career ccr itr 
zhang cao department computer science engineering pennsylvania state university university park pa email cse psu edu ultimate goal ad hoc networks provide information access mobile nodes 
caching frequently accessed data items client side effective technique improve performance wireless networks 
caching bandwidth consumption data access delay reduced data access requests served local cache obviating need data transmission scarce wireless links 
shows example battlefield communication equipment held commander group soldiers form ad hoc network 
commander data center soldiers need access data center get information enemy battlefield attack plans 
soldier obtained information data center soldiers may need access information 
soldier cache copy data locally serve requests soldiers 
soldiers need send request get reply faraway data center save bandwidth reduce access delay 
techniques achieve discussed 
data center held commander client device held soldier data source 
ad hoc network battlefield cache mobile nodes sure cached data consistent data data center 
problems related cache consistency studied systems multi processor architectures distributed file systems distributed shared memory database systems 
widely cache consistency models weak consistency model strong consistency model 
weak consistency model stale data returned client 
strong consistency model write completes stale copy modified data returned client 
adversary strategic scenarios battlefield accessing stale data outdated enemy information may life threatening need study achieve strong consistency 
strong cache consistency polling approach 
approach time user requests data item cached copy cache contacts server validate cached copy returns valid copy user 
large network polling approach may generate significant network traffic large number clients need frequently contact server validate cached data items 
address problem invalidation approach widely 
invalidation approach server keeps track clients cache data sends invalidation messages clients data changed 
hostile scenarios battlefield nodes network may malicious adversary may capture compromise nodes compromised nodes launch various kinds attacks invalidation approach 
basically kinds attacks compromised nodes intruders may propagating invalidation messages nodes far away data source may able receive invalidation message may stale cache replica realizing 
second intruder may inject false invalidation message modify passing invalidation message mislead receivers stale caches invalidate caches valid 
propose solutions deal attacks cache consistency 
prevent malicious nodes dropping invalidation messages borrow ideas ir cache invalidation :10.1.1.30.6388
approach server periodically broadcasts invalidation report ir changed data items indicated 
irs sent regularly clients expect ir regular time interval 
client maliciously drops ir nodes expecting ir detect measure taken address attack 
prevent malicious nodes modifying irs digital signature 
reduce high overhead associated digital signature approach propose family randomized grouping techniques intrusion detection intrusion recovery 
extensive analysis simulations evaluate proposed schemes 
results show solution achieve level security low overhead 
rest organized follows section briefly presents related 
section describes system model 
section proposes solutions defend dropping invalidation messages 
section proposes randomized grouping techniques reduce authentication overhead 
security analysis proposed solution section 
section reports simulation results section concludes 
related researchers studied security issues ad hoc networks 
hubaux addressed issues distributing public keys ad hoc networks proposing users issue certificates personal acquaintances 
zhou haas proposed solution threshold cryptography :10.1.1.13.8133
trusted certificate authority proposed solution secure routing protocols ad hoc wireless networks 
address high overhead associated obtaining verifying digital certificates hu proposed protocol secure demand routing protocols tesla efficient broadcast authentication scheme requires loose time synchronization :10.1.1.132.4609:10.1.1.138.4573
aims reduce high overhead digital signatures 
solution different tesla introduces small verification delay 
secure routing protocols source destination may setup route goes misbehaving malicious node agrees forward packets fails 
marti proposed watchdog entity identify misbehaving nodes pathrater mechanism avoid routing packets misbehaving nodes :10.1.1.42.559
misbehaving nodes punished motivation nodes cooperate 
overcome problem buchegger le boudec defined protocols reputation system 
intrusion detection scheme nodes need promiscuous mode monitor transmissions neighbors 
message authentication codes generated keys checked identify intrusions 
researchers field address problem intrusion detection mac layer misbehavior 
researches securing sensor networks 
knowledge existing addressing problem attacks cache consistency ad hoc networks major goal 
system model consider wireless ad hoc network shown consists data center ordinary nodes 
data center called server updated 
ordinary nodes called clients frequently access data cache data locally reduce network traffic data access delay 
assume strong cache consistency required cache consistency model 
invalidation scheme server needs send invalidation messages clients 
reliable method ensure clients cached data receive invalidation messages flooding high overhead 
option multicast setting multicast group tree server root tree 
approach node find local cache valid 
node send request data center ask updated data 
data accessed nodes approach increases access delay creates large amount network traffic 
improve performance multicast tree push updates 
nodes receiving updates need send uplink requests reduce access delay bandwidth consumption 
node interested data update pushing data consumes extra bandwidth 
techniques exist identify frequently accessed data updates pushed 
easy see multicast tree pushing cache invalidation frequently accessed data improve system performance 
assume multicast tree built due aforementioned reasons 
existing techniques set maintain multicast tree ad hoc networks 
consider types attacks malicious node launch invalidation cache consistency scheme node may drop invalidation messages descendants receive message may stale cached data 
node may modify invalidation messages forwards descendants may receive wrong invalidation messages may stale cached data unnecessarily invalidate cached data 
defending dropping invalidation messages prevent malicious nodes dropping invalidation messages borrow ideas ir cache inval scheme :10.1.1.30.6388
approach server periodically broadcasts invalidation report ir changed data items indicated 
ir consists current timestamp ti list tuples dx tx tx ti data item id tx update timestamp dx length invalidation broadcast interval invalidation broadcast window size 
words ir contains update history past broadcast intervals 
value clients validate local cache missing irs 
similar original approach clients invalidation message ir invalidate local cache 
different original invalidation approach ir sent regularly clients expect ir regular time interval 
malicious node drops ir descendant nodes detect 
node may ir due multicast tree partition caused node movement node failure 
case node re join multicast tree existing multicasting protocols get missed ir 
reducing authentication overhead randomized grouping prevent malicious node modifying ir ir authenticated digital signatures authentication 
approach high overhead terms computation bandwidth 
address problem symmetric cryptographic techniques tesla may :10.1.1.138.4573
tesla provides source authentication message authentication codes macs symmetric cryptography delayed disclosure keys sender 
applying tesla large ad hoc network sender discloses key authenticate previously sent packet furthest node received packet 
due large authentication delay tesla suitable authenticating irs 
section novel solution reduce authentication overhead randomized grouping 
basic idea randomized grouping proposed solution nodes ir receivers randomly distributed multiple groups data center server shares unique group key receivers group 
nodes deployed server denoted randomly picks keys simplify presentation assume server 
solution certainly extended case multiple servers 
public key key 
private ki ki group key shared server receivers group wherem number groups 
trusted node ni allowed join network randomly assigned receiver groups 
preloaded keys public key server 
pi public private keys ni 
public key show certificate issued server verified nodes group key shared ni server group id ni 
server sends ir ir protected macs group key 
receiver knows keys intruder modifies ir mac group key knows modification detected descendant different receiver group 
example shown server group keys 
constructs secure ir sir appending macs ir sir ir mac mac ir andc mac function 
sends sir forwards 
know knows malicious modifications easily identified 
example malicious node modifies ir able detect modification verifying mac 
reports modification server server easily find malicious node 
ideal case neighbor nodes different keys malicious node easily identified 
neighbor nodes group key isolation may difficult 
example difficult server find malicious node 
malicious nodes collude malicious node may know key share group keys 
propose solutions deal cases 
intrusion detection suppose mc group keys compromised 
intruder receives sir may modify ir 
certainly needs adjust associated macs order detected 
knows group keys modify macs correctly 
specifically modified sir sir follows ir mac mac mc mac ir mc 
intruder forwards sir children 
receiving message node group key kj checks integrity message comparing message mac computed ir 
different node immediately knows ancestors multicast tree intruder 
node detect intrusion forwards message children 
call node detector node detect modified sir receives call node victim node receives compromised sir detect 
shows example group keys compromised intruder modifies sir keys 
modification detected descendant group keys compromised 
detected group key compromised 
victim detector 
intrusion recovery subsection intrusion recovery scheme assumption intrusion detector innocent 
consider cases intrusion detector malicious show intrusion recovery scheme deal cases 
limitation scheme discussed 
intrusion recovery scheme innocent node detects intrusion detector sends server sir req message includes information received sir accusation parent request correct sir 
message may go malicious node modify content message signed private key detector detector 
certainly malicious node may drop message 
case detector find routes send message receives reply server 
going malicious node way reach server similar problem network partition node aware cached data may stale 
collusion sir sir sir sir sir sir sir collusion 
intrusion detection receiving request correct sir server replies sir encrypted private key nodes modify messages 
special sir referred heavy sir 
detector receives decrypts message reconstructs correct sir forwards sir children 
process victims recover 
address problem detector send intrusion detection notification parent 
notification messages includes sir received position incorrect mac 
notification signed private key detector avoid intruder impersonating nodes 
receiving notification child receiver innocent responds follows sir included notification different sir previously sent child receiver immediately realizes child changed sir intruder 
sends report server child 
incorrect mac claimed notification correct detector maliciously generates false alarm receiver sends report server detector received notification evidence 
data center report data center intrusion detection notification sir 
intrusion recovery 
detector reports data center sends intrusion detection notifications victims 
receiving server sends correct sir children forwards victims 
notification passes tests receiver propagates notification parent children may victims 
receiver sends server information received notification accusation parent 
information may intruder identification purpose 
recursive process continues reaches intruder may want propagate notification node known intrusion detectors 
detector receives server forwarded victims way intrusion detection notification 
illustrates execution recovery scheme 
purpose damage recovery client wait time called guarding delay received sir 
delay descendant client finds sir compromised intrusion detection notification reaches client guarding sir sir delay expires client avoid compromised sir 
certainly guarding delay increases data access delay 
analytical results section simulation results section maintaining level security needs short guarding delay additional data access delay small 
dealing malicious detectors node maliciously initiates intrusion recovery process cases innocent nv detector malicious node nu innocent knowing ki nv innocent knowing ki detector maliciously 
dealing malicious detectors case shown malicious node modifies received sir sends false intrusion detection notification upstream nodes 
innocent node path detector server nu detect modification propagating intrusion detection notification 
innocent node affected attack 
case shown malicious node modify sir claims sir modified upstream nodes 
nu innocent node path malicious node server knows ki detect attack 
nu propagating notification 
furthermore innocent node path malicious detector server nv sends notification issued malicious detector server 
server identify malicious detec tor sends nv rescue innocent nodes nv nu 
limitation scheme guarding delay damage recovery scheme rescue victims 
victims may modified sir knowing 
happens modified sir detected node receives node detects descendant detects intrusion node receive intrusion detection notification detector intruder path connecting 
call victim cache consistency victim cc victim 
evaluate probability node cc victim analysis simulations 
results show probability low number groups large number intrusion small 
security issues randomized grouping schemes designed defend attacks cache consistency aim address types attacks compromised node may launch continuously injecting packets jam channel arbitrarily dropping passing packets 
existing techniques defend attacks :10.1.1.42.559:10.1.1.13.8133
attack cache consistency intruder may modify updated data sent server mislead receivers cache false data 
randomized grouping schemes deal attacks 
data frequently updated digital signatures achieve higher level security significantly increasing overhead 
security analysis section metric cc victim probability probability node cc victim show security level proposed schemes 
preliminaries notations assumptions analysis notations assumptions nc mc number nodes tree nc number compromised nodes mc number compromised groups 
number groups 
assume receivers uniformly distributed groups probability receiver group simplicity assume sender receivers form ary tree non leaf node exactly children 
tree full height 
di dh 
distribution mc number groups number intruders nc group keys may compromised highly related level security achieved 
compute distribution number compromised keys mc mc nc nc min nc 
nc total number different options assign nc nodes groups number groups nc nc nc nc nc nc nc 
total number options assigning nc nodes groups mnc mc nc nc nc mc nc mc nc nc constant rest section mc mc mc mc 
cc victim probability section introduce sufficient necessary condition node cc victim 
condition derive cc victim probability 
need introduce definitions follows definition hijacked node hijacked group key holds known intruder satisfies conditions intruder leaf node children hijacked 
definition hijacked node hijacked group key holds known intruder satisfies conditions intruder parent intruder parent hijacked children parent hijacked 
definition fully hijacked node fully hijacked hijacked hijacked 

hijacked hijacked fully hijacked nodes shows multicast tree 
tree node intruders group keys compromised keys 
innocent nodes hijacked hijacked fully hijacked 
previous definitions obtain theorem follows 
due space limit show proof 
theorem node cc victim fully hijacked 
level innocent node probability hijacked hijacked fully hijacked ph mc ph mc ph mc respectively 
definition ph mc mc mc ph mc 
definition mc ph mc ph mc ph mc 
definition ph mc ph mc ph mc probability node cc victim probability cc victim probability cc victim probability cc victim ph mc mc number intruders number intruders number intruders 
cc victim probability eq 
cc victim probability calculated 
shows cc victim probability increases nc increases parameters 
shows cc victim probability decreases increases 
comparing find increasing reduce cc victim probability 
shows impact shown similar increasing reduce cc victim probability 
general small cc victim probability small especially large 
performance evaluations section evaluate proposed intrusion detection damage recovery schemes practical scenarios 
describe simulation methodology analyze simulation results 
simulation methodology develop simulator ns version 
simulator ieee mac protocol ground propagation model adopted 
clients randomly distributed flat field server located corner field 
nodes stationary form tree rooted server 
server maintains data items item updated interval uniformly distributed mean value 
client access data item interval uniformly distributed mean value 
client may concentrate specific set data items assume queries issued specific client set data items queries issued client data items 
client cache store data items 
simulation parameters shown table 
table 
simulation parameters parameter values field size communication range node bandwidth mb number data items cache size client data items average data update interval average data access rate client client number group number intruder number guarding delay simulation time scenario ir interval ir window size simulations metrics probability probability intrusions detected node cc victim probability average data access delay extra bandwidth consumed proposed schemes 
note metrics measuring security level achieved schemes metrics measuring overhead brought schemes 
simulation results probability probability number intruders 
probability shows probability number intruders nc number groups vary 
small small number intruders may compromise group keys difficult impossible innocent node detect intrusion 
shown probability large increases rapidly nc increases 
increases number group keys compromised increases reduces probability 
large innocent nodes descendants intruder nc increases 
increasing nc rapidly increase number compromised keys 
consequently probability decreases nc increases 
cc victim probability shows cc victim probability 
see cc victim probability increases guarding delay increases 
explained follows victim detect compromised sir receives descendant non compromised key may detect intrusion send intrusion detection notification 
case increasing guarding delay increases probability victim receives intrusion detection notification modified sir 
probability cc victim probability cc victim guarding delay ms impact nc guarding delay ms impact nc 
cc victim probability shown number intruders nc fixed cc victim probability decreases number groups increases 
mainly due reason illustrated 
intrusion probability decreases increases probability detecting intrusion recovering increases increases 
impact nc cc victim probability shown 
fixed cc victim probability increases nc increases 
increasing nc increases number fully hijacked nodes shown section 
note trends shown consistent analytic results shown 
data access delay shows average data access delay system parameters vary 
find proposed schemes increases average data access delay compared original ir scheme 
call difference sir access delay average time elapsed time sir sent server time node really uses 
see data access delay slightly increased scheme 
example nc delay increased 
average sir access delay average sir access delay original ir sir sir sir sir guarding delay ms impact nc original ir sir sir sir sir guarding delay ms impact nc 
average data access delay shown number groups small average sir access delay small 
intrusions detected shown sir access delay nodes minimized equal sum sir propagation delay guarding delay 
small intrusions detected intrusion victims receive intrusion detection notification received 
need wait corresponding detectors refer section increases sir access delay 
shows sir access delay decreases increases 
due fact average victim detector distance decreases increases 
distance decreases time victim receive detector reduced 
shows sir access delay increases number intruders nc increases 
similarly due fact average victim detector distance increases nc increases 
distance increases time victim receive detector increases 
results shown balance cc victim probability sir access delay selecting appropriate guarding delay 
exam ple guarding delay ms cc victim probability nc achieved sir access delay large ms ms 
caching techniques cache consistency issues addressed 
invalidation approach widely maintain strong cache consistency 
approach may suffer security attacks 
example invalidation messages may dropped modified malicious nodes 
defend attacks proposed solution ir cache invalidation strategy 
digital signatures protect ir significantly high overhead proposed family randomized grouping techniques intrusion detection damage recovery 
analytical results simulation results showed proposed solution achieve level security low overhead 
barbara imielinski 
caching strategies mobile environments 
acm sig mod pages 
buchegger 
boudec 
performance analysis confidant protocol cooperation nodes fairness dynamic adhoc networks 
acm mobihoc pages june 
cao 
scalable low latency cache invalidation strategy mobile environments 
acm mobicom 
cao liu 
cooperative cache data access ad hoc networks 
ieee transactions computers pages april 
cao yin das 
cooperative cache data access framework ad hoc networks 
ieee computer pages feburary 
das perkins royer 
performance comparison demand routing protocols ad hoc networks 
ieee infocom pages 
du deng 
pairwise key pre distribution schemes wireless sensor networks 
th acm conference computer communications security 
royer perkins 
multicast operations adhoc demand distance routing protocol 
proceedings acm ieee mobicom aug 
hu perrig johnson :10.1.1.132.4609
ariadne secure demand routing protocol wireless ad hoc networks 
acm mobicom sep 
hu perrig johnson 
packet leashes defense wormhole attacks wireless ad hoc networks 
ieee infocom april 
hubaux buttyan capkun 
quest security mobile ad hoc networks 
acm mobihoc pages 
johnson maltz 
dynamic source routing ad hoc wireless networks 
mobile computing kluwer pages 
chen nahrstedt 
effective location guided tree construction algorithms small group multicast manet 
proceedings ieee infocom june 
vaidya 
detection handling mac layer misbehavior wireless networks 
technical report uiuc aug 
lee su gerla 
demand multicast routing protocol multihop wireless mobile networks 
acm kluwer mobile networks applications monet december 
liu ning 
establishing pairwise keys distributed sensor networks 
th acm conference computer communications security 
marti giuli lai baker :10.1.1.42.559
mitigating routing misbehavior mobile ad hoc networks 
acm mobicom aug 
perrig canetti tygar song :10.1.1.138.4573
efficient authentication signing multicast streams lossy channels 
ieee symposium security privacy may 
project 
cmu monarch projects wireless mobility extensions ns 
www monarch cs cmu edu cmu ns html october 
roussopoulos baker 
cup controlled update propagation peer peer networks 
proceedings usenix annual technical conference 
levine shields belding royer 
secure routing protocol ad hoc networks 
ieee int conf 
network protocols icnp nov 
xiao ni 
prioritized overlay multicast mobile ad hoc environments 
ieee computer feb 
yin cao 
supporting cooperative cache ad hoc networks 
ieee infocom 
zhang cao 
group rekeying filtering false data sensor networks predistribution local collaboration approach 
ieee infocom 
zhang lee 
intrusion detection wireless ad hoc networks 
acm mobicom pages aug 
zhou haas :10.1.1.13.8133
securing ad hoc networks 
ieee network november december 
zhu setia jajodia ning 
interleaved hop authentication scheme filtering false data sensor networks 
ieee symposium security privacy 
