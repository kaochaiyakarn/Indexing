random early detection gateways congestion avoidance sally floyd van jacobson lambda lawrence berkeley california floyd ee lbl ee lbl gov appear august ieee acm transactions networking presents random early detection red gate ways congestion avoidance packet switched networks 
gateway detects incipient congestion com puting average queue size 
gateway notify connections congestion dropping packets ar gateway setting bit packet headers 
average queue size exceeds preset threshold gateway drops marks arriving packet certain probability exact probability func tion average queue size 
red gateways keep average queue size low occasional bursts packets queue 
congestion probability gateway notifies par ticular connection reduce window roughly proportional connection share bandwidth gateway 
red gateways designed accompany transport layer congestion control protocol tcp red gateway bias bursty traffic avoids global synchronization window time 
simulations tcp ip network illustrate red gateways 
high speed networks connections large delay bandwidth products gateways designed correspondingly large maximum queues transient congestion 
current internet tcp transport protocol detects congestion dropped gateway 
clearly undesirable large queues possibly order lambda supported director office energy research scientific computing staff department contract 
de ac sf 
delay bandwidth product full significantly increase average delay network 
increasingly high increasingly important mechanisms keep throughput high average queue sizes low absence explicit feedback gateway number mechanisms pro posed transport layer protocols maintain high throughput low delay network 
designed current gateways mechanisms cou gateway scheduling algorithms require state gateway :10.1.1.133.3305
absence feedback gateway transport layer protocols infer congestion estimated time changes throughput changes delay packet drops 
view individual connection limited timescales connection pattern connection lack knowledge number congested gateways possibilities changes difficulties distinguishing propagation delay persistent queueing de lay 
effective detection congestion gateway 
gateway reliably distinguish propagation delay persistent 
gateway unified view queueing behavior time perspective individual con limited packet arrival patterns connections 
addition gateway shared ac tive connections wide range roundtrip times tolerances delay throughput requirements duration magnitude transient congestion allowed gateway best 
method monitoring average queue size gateway notifying connections incipient con gestion assumption continue useful queues gateway traf fic number connections multiplexed fifo scheduling 
fifo scheduling ful sharing delay connections reducing delay particular connection periods burstiness scales easy implement efficiently 
alternate approach congestion control mech variants fair queueing hop flow control schemes propose algorithm connection state active connection 
suggest connection gateway mechanisms circumstances gateway scheduling mecha nisms connection mechanisms clearly inadequate decbit congestion avoidance scheme described early example con gestion detection gateway decbit gateways give explicit feedback average queue size exceeds threshold 
proposes different congestion avoidance mechanism gateway red ran dom early detection gateways somewhat different methods detecting congestion choosing notify congestion 
principles red gateways red gateways useful controlling average queue size network trans port protocol trusted cooperative red gateways intended network responds congestion indications network 
gateway congestion control mechanism simplifies congestion control job required transport protocol applicable transport layer congestion control mechanisms current version tcp including protocols rate window flow control 
aspects red gateways specifi cally targeted tcp ip networks 
red gateway designed network single marked sufficient signal presence congestion transport layer protocol 
different congestion control scheme protocol computes fraction arriving congestion indication bit set 
addition emphasis avoiding global syn results connections reducing windows time particularly relevant tahoe bsd tcp connection goes slow start reducing window toone response dropped packet 
decbit congestion control scheme example connec tion response congestion severe critical avoid global synchronization red gateways useful gateways range packet scheduling packet dropping algorithms 
forexample red congestion control mechanisms implemented gateways drop preference pack ets marked essential optional optional packets dropped queue exceeds size 
similarly gateway separate queues realtime non realtime traffic example control mechanisms applied queue traffic classes red congestion control mechanisms monitor average queue size output queue ran choose connections notify congestion 
transient congestion accommodated tem increase queue 
longer lived congestion reflected increase computed average results randomized feedback connections decrease windows 
connection notified congestion proportional connection share throughput 
gateways detect congestion queue flows limited packet drops method notifying connections congestion 
red gateways packet dropping gateway setting bit packet header depending transport pro tocol 
average queue size exceeds maximum threshold red gateway marks packet ar rives gateway 
red gateways mark packets dropping setting bit average queue size exceeds maximum threshold red gateway controls aver age queue size absence cooperating transport protocol advantage gateway congestion control mechanism works current transport protocols require gateways internet gateway congestion control mechanism deployed gradually current internet 
red gateways simple mechanism congestion avoid ance implemented gradually current tcp ip networks changes transport protocols section discusses previous research early random drop gateways congestion avoidance gate ways 
section outlines design guidelines red gateways 
section presents red gateway algorithm describes simple simulations 
section discusses detail parameters calculating av erage queue size section discusses algorithm calculating packet marking probability section examines performance red gateways including robustness red gateways traffic range parameter values 
simula tions section demonstrate things gateway lack bias bursty traffic 
section describes red gateways iden tify users large fraction bandwidth congested gateway 
section efficiently implementing red gateways 
section gives describes areas 
previous congestion avoid ance gateways early random drop gateways researchers studied early random drop gate ways method providing congestion avoidance gateway hashem discusses shortcomings random drop drop tail gateways briefly early random drop gateways 
implementation early random drop gateways length exceeds certain drop level gateway drops packet arriving gateway probability 
discussed rough initial implementation 
hashem stresses imple drop level drop probability adjusted dynamically depending network traffic hashem points drop tail gateways congestion period introduces global network 
queue overflows packets dropped connections con decrease windows time 
results loss throughput gateway 
early random drop gateways broader view traffic distribution drop tail gateways reduce global synchronization 
suggests broader view traf fic distribution early random drop gateways better chance drop tail gateways targeting sive users 
early random drop gateways deserve investigation version early random drop gateways simulations queue half jacobson proposed gateways monitor average queue size detect incipient congestion randomly drop packets con gestion detected 
proposed gateways precursor early random drop gateways studied authors 
refer gateways random early detection red gateways 
red gateways differ earlier early gateways respects average queue size measured gateway limited dropping packets packet function average queue size 
random drop gateways packet arrives gateway queue full gateway randomly chooses packet queue drop 
full gateway drops arriving packet prob ability 
zhang shows version early random drop gateways successful users 
simulations random drop early random drop gateways mis behaving users received roughly higher throughput users implementing standard bsd tcp gateway congestion control survey considers versions early random drop described survey cites results early random drop gateway unsuccessful controlling 
mentioned early random drop gateways expected solve unequal throughput connections different roundtrip times multiple congested gateways 
goals early random drop gateways congestion avoidance described uniform dynamic users streams flows low overhead scaling characteristics large loaded networks 
open question goals achieved 
approaches gateway congestion avoidance early descriptions ip source quench messages sug gest gateways send source quench messages source hosts buffer space capacity packets dropped gateway 
proposal suggests gate way send source quench messages queue size exceeds certain threshold outlines possible flow control source hosts response messages 
proposal suggests gate way queue size approaches maximum level gateway discard arriving packets icmp pack ets 
decbit congestion avoidance scheme scheme congestion avoidance described 
decbit scheme gateway uses congestion indication bit packet headers provide feedback congestion network 
packet arrives gateway calculates average queue length busy idle period plus current busy pe 
gateway busy transmitting packets idle 
average queue length ex gateway sets congestion indication bit packet header arriving packets source uses window flow control updates window roundtrip times 
half ofthe packets window congestion indication bit set window decreased exponentially window increased linearly 
significant differences decbit gateways red gateways described difference concerns method computing average queue size 
decbit scheme busy idle cycle plus current busy period averaging queue size queue size times averaged fairly short period time 
high speed networks large buffers gateway desirable explicitly control time constant computed average queue size done time exponential decay 
authors report rejected idea running average queue length time interval far roundtrip time bias network 
problem bias arise red gateways red gateways randomized algorithm marking packets assume sources different algorithm marked packets 
decbit network source looks fraction packets marked time 
network red gateways source reduce window packet 
second difference decbit gateways gateways concerns method choosing connections notify congestion 
decbit scheme conceptual separation algorithm detect congestion algorithm set congestion bit 
packet arrives gateway computed average queue size high bit set header packet 
method marking packets decbit networks bias bursty traffic see section avoided red gateways randomization marking packets 
congestion avoidance gateways designed tcp additional moti vation randomization method marking packets avoid global synchronization tcp connections reducing window time 
concern networks congestion avoidance scheme source decreases window fairly moderately response con gestion 
proposal adaptive window schemes source nodes increase decrease windows feedback concerning queue lengths 
gateway upper threshold ut indicating congestion lower indicating light load conditions 
information queue sizes gateways added packet 
node increases window gateway queue lengths path lower thresholds queue length upper threshold queue path source node decreases 
disadvantage proposal network responds instantaneous queue lengths tothe average queue lengths 
believe scheme vulnerable traffic phase effects bursty traffic accommodate transient increases queue size 
design guidelines section summarizes design goals red gateways 
main goal provide congestion avoidance controlling average 
additional goals include avoidance global synchronization bias bursty traffic maintain upper bound average queue size absence cooperation transport layer protocols 
job congestion avoidance mechanism atthe gateway detect incipient congestion 
defined congestion avoidance scheme maintains net region low delay high throughput 
average queue size kept low actual queue size allowed accommodate bursty traffic transient congestion 
monitor size queue time gateway appropriate agent detect incipient con gestion 
gateway unified view various sources contributing congestion gate way appropriate agent decide sources notify congestion network connections range roundtrip times throughput requirements delay sensitivities gateway appropriate agent determine size duration short lived bursts queue size gateway 
gateway controlling time constants low pass fil ter computing average queue size 
goal gateway detect incipient congestion long time roundtrip times 
second job congestion avoidance gateway isto decide connections notify congestion gateway 
congestion detected gate way buffer full necessary gateway drop packets notify sources congestion 
pa say gateway marks packet notifies source reduce window connection 
notification consist dropping packet setting bit packet header method un transport protocol 
current feedback mechanism tcp ip networks gateway simulations red gateways approach goal avoid bias bursty traffic 
networks contain connections range burstiness gateways drop tail random drop bias bursty traffic 
drop tail gateways bursty traffic particular con gateway queue overflow packets connection arrive 
goal deciding connections congestion avoid global synchronization results notifying connections reduce win time 
global synchronization studied networks drop tail gateways re sults loss throughput network 
synchronization general network phenomena 
order avoid problems biases global synchronization congestion avoidance gateways distinct algorithms congestion de tection deciding connections notify congestion 
red gateway uses randomization arriving packets mark method probability marking packet particular con roughly proportional connection share bandwidth gateway 
method canbe efficiently implemented maintaining connection state gateway goal congestion avoidance gateway ability control average queue size ab cooperating sources 
done gateway drops arriving packets average exceeds maximum threshold setting bit packet header 
method control average queue size connections roundtrip time modified transport protocols increasingly highspeed networks connections fail throughput response marked dropped packets 
red algorithm section describes algorithm red gateways red gateway calculates average queue size low pass filter exponential weighted mov ing average 
average queue size compared thresholds minimum threshold maximum thresh old 
average queue size minimum threshold packets marked 
av erage queue size greater maximum threshold arriving packet marked 
marked packets infact dropped source nodes cooperative ensures average queue size maximum threshold 
average queue size minimum maximum threshold arriving marked probability pa pa function ofthe average queue size avg 
time packet probability packet marked particular connection roughly proportional con share bandwidth gateway 
general red gateway algorithm 
packet average queue size minth avg probability probability pa mark arriving packet maxth arriving packet general algorithm red gateways 
red gateway separate algorithms algorithm computing average queue size determines degree burstiness allowed queue 
algorithm calculating probability determines frequently gate way marks packets current level congestion 
goal gateway mark packets fairly evenly spaced intervals order avoid biases avoid global synchronization mark packets control average queue size 
detailed algorithm red gateway 
section discusses efficient implementations algorithms gateway calculations average queue size take account period queue empty period estimating number small transmitted gateway idle period 
idle period gateway com average queue size packets empty queue period 
avg varies minth maxth packet pb varies linearly maxp pb maxp avg gamma minth maxth gamma minth final packet marking probability pa increases count increases marked packet pa pb gamma count delta pb discussed section ensures wait long marking packet 
gateway marks packet arrives gate way average queue size avg exceeds maxth option red gateway measure queue bytes packets 
option initialization avg count gamma packet arrival calculate new avg 
queue size avg queue nonempty avg gamma wq avg wq time gamma time avg gamma wq minth avg probability pa pb maxp avg gamma minth maxth gamma minth pa pb gamma count delta pb probability pa mark arriving packet count maxth arriving packet count count gamma queue empty time time saved variables avg average queue size time start queue idle time count packets marked pkt 
fixed parameters wq queue weight minth minimum threshold queue maxth maximum threshold queue maxp maximum value pb pa current pkt marking probability current queue size time current time linear function time detailed algorithm red gateways 
average queue size accurately reflects average de lay gateway 
option algorithm modified ensure probability thata packet marked proportional packet size bytes pb maxp avg gamma minth maxth gamma minth pb pb pa pb gamma count delta pb case large ftp packet small telnet packet 
sections discuss detail setting var ious parameters red gateways 
section discusses calculation average queue size 
queue weight wq determined size duration bursts size allowed gateway 
minimum maximum thresholds minth maxth de desired average queue size 
average queue size desired tradeoffs maximizing throughput minimizing delay depends network characteristics left asa question research 
section discusses calculation packet marking probability primary interest functional operation red gateways 
specific questions efficient implementation red algorithm discussed section 
simple simulation section describes simulator presents red gateways 
simulator version real simulator built columbia nest sim ulation package extensive modifications bug fixes steven mccanne lbl 
simula tor ftp sources packet send send maximal sized byte packet soon control window allows 
sink immediately sends ack packet receives datapacket 
gateways fifo queueing 
source sink nodes implement congestion con trol algorithm equivalent tahoe bsd tcp briefly phases window adjustment gorithm 
threshold set initially half receiver advertised window 
slow start phase doubled roundtrip time window reaches threshold 
congestion avoidance entered current window increased roughly packet roundtrip time 
window increase receiver advertised window refers maximum win dow size 
tahoe bsd tcp packet loss dropped packet treated congestion experienced signal source reacts packet loss setting threshold half current window decreasing current packet entering slow start phase 
simulator tahoe tcp code directly believe functionally identical 
queue size solid line average queue size dashed line time queue max th min th 
time packet number mod connections simulation ftp connections staggered start times 
shows simple simulation red gate ways 
network shown 
simulation contains ftp connections roughly equal delay bandwidth product ranges packets 
red set follows wq minth packets maxth packets maxp buffer size sufficiently large packets dropped gateway due buffer overflow sim ulation red gateway controls average queue size actual queue size exceeds packets 
sink gateway mbps mbps ms ftp sources ms ms ms ms simulation network 
charts axis shows time 
bottom chart shows packets nodes 
main rows shows packets connections bottom row shows node packets top row shows node packets 
data packet arrives gateway departs gateway time scale indistinguishable 
axis function packet sequence number packet number axis shows mod gamma 
vertical line represents consecutively numbered packets connection arriving gateway 
shows packet dropped gateway followed mark showing retransmitted packet node starts sending packets time node starts seconds node starts seconds node starts seconds 
top chart shows instantaneous calculated average queue size avg 
dot ted lines show minth maxth minimum max imum thresholds average queue size 
note calculated average queue size avg changes fairly bottom row shows time dropped packet 
simulation shows success red gate way controlling average queue size gateway response dynamically changing load 
num ber connections increases frequency gateway drops packets increases 

higher throughput connections shorter roundtrip times due bias window increase algorithm favor connections shorter roundtrip times discussed 
forthe simulation average link utilization 
second simulation sources active average link utilization 
shown 
triangle red square drop tail throughput average queue comparing drop tail red gateways 
sink gateway mbps mbps ftp sources ms ms simulation network 
red gateways control average accommodating transient congestion red gateways suited provide high throughput delay high speed networks tcp connections large windows 
red gateway ac short burst queue required tcp slow start phase red gateways control aver age queue size allowing tcp connections smoothly open windows 
shows simulations network tcp connections maximum window pack ets roughly equal delay bandwidth product 
connections started slightly different times 
compare performance drop tail red gateways axis shows total throughput fraction maximum possible throughput con link 
axis shows average queue size packets seen arriving packets 
second sim run sets parameters drop tail gateways sets parameters mark shows results second simulations 
simulations tail gateways run buffer size ranging packets buffer size increased throughput average queue size increase correspondingly 
order avoid phase effects simu lations drop tail gateways source node takes random time drawn uniform distribution seconds prepare ftp packet transmission bottleneck service time ms simulations red gateways run buffer size packets minth ranging packets 
red gateways maxth minth wq maxp 
lines show average delay function throughput approximated gamma red gateways approximated gamma simulations drop tail gateways 
simple network tcp connections large win network power ratio throughput delay higher red gateways drop 
reasons difference 
drop tail gateways small maximum queue queue drops packets tcp connection slow start phase rapidly increasing window re throughput 
hand drop tail gateways large maximum queue average unacceptably large 
addition drop tail gateways drop packets connections thesame time resulting global synchronization loss throughput discuss simulation results networks diverse range connections 
gateway specifically designed network dominated bulk data transfer simply simulate increasingly heavy congestion gateway 
calculating average queue length red gateway uses low pass filter calculate queue size 
short term increases queue size result bursty traffic result significant increase average queue size low pass filter exponential weighted moving average ewma avg gamma wq avg wq weight wq determines time constant pass filter 
sections discuss upper lower bounds setting wq 
calculation aver age queue size implemented particularly efficiently wq negative power shown section 
upper bound wq wq large averaging procedure transient congestion gateway 
assume queue initially empty aver age queue size zero queue increases packets packet arrivals 
lth gateway average queue size lx wq gamma wq gamma wq gamma wq lx gamma gamma wq gamma wq derivation uses identity lx ixi lx gamma gamma gamma ave ave function wq shows average queue size values wq axis shows wq axis shows example wq queue increase packets average queue size avg packets 
minimum threshold minth allow bursts packets arriving gateway wq chosen satisfy minth gamma wq gamma wq minth minth example neces sary choose wq 
lower bound wq red gateways designed keep calculated size avg certain threshold 
little purpose calculated average avg reflection current average queue size 
wq set low avg responds slowly actual queue size 
case gateway unable detect initial stages congestion assume queue changes empty packet packets arrive depart queue remains packet 
assume initially average queue size zero 
case gamma ln gamma wq packet arrivals queue average queue size avg gamma 
wq takes packet arrivals wq takes packet ar rivals wq takes packet arrivals 
simulations wq 
setting minth maxth optimal values minth maxth depend average queue size 
typical traffic fairly bursty minth correspondingly large low link utilization maintained acceptably high level 
typical traffic simulations reasonably large delay bandwidth products minimum threshold packet result low link utilization 
discussion optimal average queue size particular traffic mix question research 
optimal value maxth depends part average delay allowed gateway red gateway functions effectively maxth gamma minth larger typical increase average queue size roundtrip time 
useful rule thumb set maxth twice minth 
calculating packet marking prob ability initial packet marking probability pb calculated asa linear function average queue size 
section compare methods calculating final packet marking probability demonstrate advantages second method 
method aver age queue size constant number arriving packets marked packets geometric random variable second method number arriving packets marked packets uniform random variable initial packet marking probability computed follows pb maxp avg gamma minth maxth gamma minth parameter maxp gives maximum value marking probability pb achieved size reaches maximum threshold 
method geometric random variables 
method packet marked probability pb 
time number packets arrive marked packet packet marked 
packet marked probability pb rob gamma pb gamma pb method geometric random parameter pb pb constant average queue size goal mark packets fairly regular intervals 
undesirable marked packets close undesirable long interval 
events result global synchronization connections reducing time events occur geometric random variable 
method uniform random variables 
desirable alternative uniform random vari able assuming simplicity pb integer 
achieved marking prob ability arriving packet pb gamma count delta pb count number unmarked packets marked packet 
call method 
case rob pb gamma gamma gamma gamma pb gamma pb pb rob pb method pb 
shows experiment comparing methods marking packets 
top line shows method packet marked probability 
bottom line shows method marked probability ip top row method bottom row method packet number 
randomly marked packets comparing packet marking methods 
number unmarked packets packet 
methods marked roughly arriving packets 
axis shows 
method dot marked packet 
expected marked packets clus tered method method 
simulations set maxp average queue size halfway maxth gateway drops average maxp 
red gateways perform best probability changes fairly slowly size changes helps discourage oscillations average queue size packet marking proba bility 
reason set maxp greaterthan example 
maxp marks close th arriving packets average queue size close maximum threshold method calculate packet marking probability 
congestion sufficiently heavy size controlled marking close th arriving packets average queue maximum threshold gateway mark arriving packet 
evaluation red gateways addition design goals discussed section general goals outlined congestion avoidance schemes 
section goals met red gateways 
ffl congestion avoidance 
red gateway packets arriving gateway average queue size reaches maximum threshold guarantees calculated average queue size exceed maximum threshold 
weight ewma procedure set appropriately see section red gateway fact controls average queue size 
red gateway sets bit packet headers average queue size exceeds threshold dropping packets red gateway relies cooperation control average queue size 
ffl appropriate time scales 
notifying connec tion congestion marking packet takes roundtrip time gateway see reduction rate 
red gateways time scale detection congestion roughly matches time scale connections respond congestion 
red gateways don notify connections reduce windows re sult transient congestion gateway 
ffl global synchronization 
rate mark packets depends level congestion 
low congestion gateway low prob ability marking arriving packet congestion increases probability marking packet creases 
red gateways avoid global synchronization marking packets low rate possible 
ffl simplicity 
red gateway algorithm moderate overhead current networks discussed section 
ffl maximizing global power 
red gateway ex controls average queue size 
shows simulations high link utilization global higher red gateways drop tail gateways 
research needed determine opti mum average queue size different network traffic conditions 
ffl fairness 
goal congestion avoidance mech anism fairness 
goal fairness defined simply describe performance red gate way regard 
red gateway discriminate particular connections classes connec tions 
contrast drop tail random drop gateways described 
red gateway marked packets connection roughly proportional connection share bandwidth red gateways attempt ensure connection receives fraction explicitly control misbehaving users 
red gateways provide mechanism identify level power defined ratio throughput delay 
congestion red gateways connections large share total bandwidth 
desired additional mechanisms red gateways control throughput connections periods congestion 
ffl appropriate wide range environments randomized mechanism marking packets appropriate networks connections range times throughput large range number active connections time 
load detected changes average queue size rate packets marked ad correspondingly 
red gateway performance discussed section network red gateways signals congestion dropping marked packets oc tcp ip network dropped packet result decrease load gateway 
drops data packet tcp connection packet drop detected source possibly af ter retransmission timer expires 
gateway drops ack packet tcp connection packet non tcp connection packet drop go unnoticed source 
congested network witha traffic mix dominated short tcp connections non tcp connections red gateway controls queue size dropping arriving packets average queue size exceeds maximum threshold 
parameter sensitivity section discusses parameter sensitivity 
drop tail gateways free parameter buffer size red gateways ad ditional parameters determine upper bound average queue size time interval av erage queue size computed maximum rate marking packets 
congestion avoidance low parameter sensitivity parameters applicable networks widely 
red gateway parameters wq minth necessary network designer conscious decisions desired average queue size size duration queue bursts allowed gateway 
parameter maxp chosen fairly wide range upper bound actual marking probability pb 
congestion ciently heavy gateway control average queue size marking fraction maxp average queue size exceed maximum threshold gateway mark congestion controlled 
give rules give adequate performance red gateway wide range traffic gateway parameters 
ensure adequate calculation average set wq 
average queue size gate way limited maxth long calculated size avg fairly accurate reflection queue size 
weight wq set toolow calculated average queue length delay long reflecting increases actual see section 
equation describes upper bound wq required allow queue packets marking packets set minth sufficiently high maximize 
thresholds minth maxth high maximize network power 
stated earlier research needed determining opti mal average queue size various network conditions 
network traffic bursty actual quite bursty average queue size kept low output link underutilized maxth gamma minth sufficiently large synchronization 
maxth gamma minth typical increase average queue size roundtrip time avoid global synchronization gateway marks packets time 
rule thumb set maxth twice minth 
maxth gamma minth small queue size regularly oscillate maxth behavior similar oscillations queue maximum queue size drop tail gateways 
queue size solid line average queue size dashed line time queue gate max th queue size solid line average queue size dashed line time queue gate max th 
time packet number connection red gateway simulation heavy congestion way traffic short ftp 
gateway gateway mbps mbps mbps ms ms ms ms ms ms ms ms ms network short connections 
investigate performance red gateways traffic conditions section discusses simulation way traffic heavy ftp telnet connections small window limited data send 
parameters simple simulation network traffic quite different shows simulation uses network 
roughly half connections go left hand nodes right hand nodes connections go opposite direc tion 
roundtrip times connections vary factor 
connections ftp con telnet connections 
reasons keep average queue size small low average delay telnet connections 
previous simulations simulation ofthe connections maximum window packets 
total number packets packets 
starting times total number packets connection arbitrarily claiming represent realistic traffic models 
intention simply show range environments 
effects ack compression way traffic packets arriving gateway connection somewhat bursty 
ack packets compressed queue ack packets arrive source node burst 
response source sends data packets 
top chart shows queue gate way chart shows queue gateway chart indicates packet dropped 
bottom chart shows packets connection arriving departing gateway gateway 
connection mark packet arriving departing gate way time scale marks indistinguishable 
chart figures packets different connections displayed displayed separate rows 
xaxis shows time axis shows packet connection connection starts packet number 
example leftmost strand shows con starts time sends packets 
shows packet dropped gateways 
queue measured packets bytes short packets just dropped longer packets 
bottom line bottom chart shows packet dropped gateways 
shows overlapping connec tions possible trace behavior connections 
shows red gateway controlling average queue size 
congestion low gateways average rate marking packets low gateway 
congestion increases gateway av erage queue size rate marking packets increase 
simulation consists heavy tion caused connections small maximum window red gateways drop number packets order control congestion 
average link utilization second period congested link direction direction 
shows simulation arrival rate gateways low note traffic figures quite varied case red gateway adjusts rate packets maintain acceptable average queue size 
simulations occasional periods heavy congestion higher rate packet drops needed congestion 
contrast simulations small number connections windows congestion controlled small number dropped packets 
burstiness queue dominated short term burstiness packet bursts arrive gate way individual connections 
simulations burstiness queue dominated increase decrease cycles individual connections 
note red gateway parameters un changed simulations 
performance slightly different version connections different roundtrip times connections multiple congested analyzed explored 
bursty traffic section shows drop tail random red gateways bias bursty traffic bursty traffic gateway result connection long delay bandwidth product small window window traffic sent thenthere delay ack packets return window data sent 
variable bit rate forms interactive traffic examples bursty traffic seen gateway section ftp connections infinite data small windows small roundtrip times bursty traffic ftp connections smaller windows longer roundtrip times model bursty traffic 
consider simulations network node packets roundtrip time times packets 
connections packets connection maximum window packets 
node time small window node packets arrive gateway loose cluster 
considering node packets long interarrival time smaller interarrival times 
sink gateway ftp sources ms mbps mbps ms ms mbps simulation network ftp connec tions 
figures show results network drop tail random drop red gateways respectively 
simulations fig ures run buffer size ranging packets packets 
simulations run times minimum threshold ranging packets buffer size ranging packets 
bursty traffic mean traffic connection amount data transmitted roundtrip time small compared tothe delay bandwidth product multiple packets connection arrive gateway short period time 
buffer size node throughput 
buffer size average queue packets 
buffer size average link utilization simulations drop tail gateways 
simulation run seconds represents second period simulation 
figures axis shows buffer size axis shows node throughput percentage total throughput gateway 
order toavoid traffic phase effects effects caused precise timing packet arrivals gateway simula tions drop tail gateways source takes random time drawn uniform distribution prepare ftp packet transmission service time ms 
simulations concern examine gateway bias traffic 
set simulations second average queue size packets seen arriving packets bottleneck gateway third average link utilization congested link 
buffer size node throughput 
buffer size average queue packets 
buffer size average link utilization simulations random drop gateways 
red gateways quite different drop tailor random drop gateways gateways compared simply comparing maximum queue size appropriate comparison drop tail gateway red gateway maintain size 
drop tail random drop gateways overflow queue contains packets node 
case drop tail gateways node packets disproportionate probability dropped queue con tents queue overflows representative average queue contents shows result simulations red gateways 
axis shows minth axis throughput 
throughput node close maximum possible throughput node roundtrip minimum threshold node throughput 
minimum threshold average queue packets 
minimum threshold average link utilization simulations red gateways time maximum window 
parameters follows wq maxp maximum threshold twice minimum threshold buffer size ranges packets times minimum threshold 
shows simulations droptail random drop gateways node receives disproportionate share packet drops 
mark shows results second period simulation 
boxes show simulations droptail gateways triangles show simulations random drop gateways andthe dots show simulations red gateways 
second period simulation axis shows node throughput percentage total throughput axis shows node drops percentage total packet drops 
square drop tail triangle random drop dot red node throughput node drops 
scatter plot packet drops vs throughput number packets dropped second sim ulation period ranges zero chart excludes second simulation periods packets 
dashed line shows position share packet drops exactly equals node share throughput 
cluster dots dashed line indicating red gateways node share dropped packets reflects node throughput 
contrast simulations random drop drop tail gateways node re small fraction throughput large fraction packet drops 
shows bias drop random drop gateways bursty traffic node simulations iso tp network decbit congestion avoidance scheme show bursty traffic 
decbit congestion avoidance scheme node packets disproportionate having congestion indication bits set 
decbit congestion avoidance scheme bias bursty corrected decbit congestion avoidance selective feedback proposed goal dividing resource equally users sharing 
modification uses algorithm gateway 
gateway determines users fair share bandwidth sets congestion indication bit packets belonging users 
algorithm 
identifying misbehaving users section show red gateways provide mechanism identifying connections large share bandwidth times congestion red gateways randomly choose packets marked congestion red gateways connections received significant fraction marked packets 
number packets sufficiently large connection received large share marked packets connection received large share bandwidth 
information higher pol icy layers restrict bandwidth connections congestion red gateway notifies connections congestion gateway marking packets 
red gateways packet marked probability marking packet particular connection roughly propor tional connection current share bandwidth gateway 
note property drop tail gateways demonstrated section 
rest section assume gateway marks packet probability packet particular connection marked exactly equals fraction bandwidth gateway 
assume connection fixed fraction pi ofthe bandwidth gateway 
si num ber marked packets assumptions si npi standard statistical results appendix si larger expected sufficiently large rob si gamma gamma pi 
lines show bound probability connection receives times expected number marked pack ets axis shows pi 
throughput probability upper bound probability connection marked packets times expected number total marked packets 
red gateway easily keep list marked packets 
connection large fraction marked packets large fraction average bandwidth 
tcp connection receiving large frac tion bandwidth connection misbehaving host current tcp protocols connection shorter roundtrip time larger window active connections 
ei ther case desired red gateway modified give lower priority connections receive fraction bandwidth times congestion 
implementation section considers efficient implementations 
show red gateway algorithm implemented efficiently small number shift instructions packet arrival 
addition red gateway algorithm tightly coupled forwarding computations time critical packet forwarding path 
red gateway algorithm computation average queue size packet marking probability pb performed packet forwarding computed gateway lower priority task time permits 
red gateway algorithm need impair gateway ability process packets red gateway gorithm adapted increasingly high speed output lines red gateway method marking packets set congestion indication bit packet header dropping arriving packet setting congestion indication bit adds overhead 
red gateways designed mark packets possible overhead set ting congestion indication bit kept minimum 
decbit gateways example congestion indication bit packet arrives gateway average queue size exceeds 
packet arrival gateway queue calculates average queue size 
implemented follows avg avg wq gamma avg long wq chosen negative power implemented shift additions scaled versions parameters red gateway computes average queue size packet arrivals fixed time intervals calculation average queue size modified packet arrives gateway empty queue 
packet arrives gateway empty queue calculates number packets transmitted gateway time line free 
gateway calculates size packets arrived gateway witha queue size zero 
calculation follows time gamma time avg gamma wq avg time start queue idle time sis typical transmission time small packet 
entire calculation approximation onthe number packets arrived gateway certain period time 
idle time time gamma time computed rough level table lookup get term gamma wq time gamma time approximation power packet arrives gateway average queue size avg exceeds threshold maxth marked 
recalculation probability 
packet arrives atthe gateway average queue size avg thresholds minth maxth initial packet marking probability pb calculated follows pb avg gamma th gamma minth maxp th gamma minth parameters maxp maxth minth fixed pa rameters determined advance 
values maxth minth determined desired average queue size limited flexibility 
fixed parameter maxp set range values 
particular maxp power 
tion pb accomplished shift 
algorithm described section minth avg maxth new pseudo random number com puted arriving packet random uniform distribution 
random numbers gotten table random memory computed fairly efficiently bit computer 
algorithm described insection arriving packet marked pb gamma count delta pb pb approximated negative power efficiently computed 
possible implement red gateway algo rithm new random number marked packet new random number packet arrives gateway minth avg maxth 
section explains size constant number packet arrivals marked packet packet marked uni form random variable 
queue size constant packet marked gateway simply choose value random variable random th arriving packet pb 
av erage queue size changes time recompute time pb recomputed 
pb approximated bya negative power computed shift instruction divide instruction gives pseudocode efficient version red gateway algorithm 
just sug gestion efficient version red gateway algorithm 
efficient way implement course gateway question 
memory requirements red gateway algo rithm modest 
keeping state active connection red gateway requires small number variable parameters output line 
burden gateway memory 
random early detection gateways effective mech anism congestion avoidance gateway cooperation network transport protocols 
red gate ways drop packets average queue size exceeds maximum threshold simply setting bit headers red gateways control calculated average queue size 
action provides upper average delay gateway 
probability red gateway chooses par ticular connection notify congestion roughly proportional connection share gateway 
approach avoids bias bursty traffic gateway 
red gateways rate gateway marks packets depends level congestion avoiding global synchronization connections decreasing windows time 
red gateway relatively simple gate way algorithm implemented current networks high speed networks 
allows conscious design decisions average queue size maximum queue gateway 
initialization avg count gamma packet arrival calculate new average queue size avg queue nonempty avg avg wq gamma avg table lookup avg gamma wq time gamma time minth avg count pb delta avg gamma count count approx pb mark arriving packet count count choosing random number random maxth arriving packet count gamma count gamma queue empty time time new variables random fixed parameters typical transmission time efficient algorithm red gateways 
areas research 
foremost open question involves determining optimum average queue size minimizing delay various network configurations 
question heavily dependent char network traffic physical characteristics network 
area congestion avoidance algorithms open questions area research concerns traffic dynamics mix drop tail red gateways partial deployment red gateways current internet 
area research con behavior red gateway machinery transport protocols tcp including open loop rate protocols 
mentioned section list packets red gateway gateway identify connections receiving large fraction bandwidth gateway 
gateway information give connections lower priority gateway 
leave area research specify queue size measured bytes packets 
range packet sizes congested gateway difference significant 
includes networks way traffic queue congested gateway contains large ftp packets small telnet packets control packets 
network time required transmit packet proportional size ofthe packet gateway queue measured bytes queue size reflects delay seconds gateway 
red gateway constrained provide service 
example experimented version red gateways provides priority service control packets reducing problems compressed acks controlling average queue size gateway queue overflows red gateways networks undesirable drop packets gateway 
case example tcp transport protocols cell networks atm 
serious performance penalties networks large number cells dropped gateway case possible successfully transmitted belong packet cell dropped gateway 
warning incipient congestion red gateways useful avoiding unnecessary packet cell gateway 
simulations gateways output queue output line gateways current networks 
red gateways routers resource management different classes traffic treated differently class queue 
example router interactive telnet traffic bulk data ftp traffic classes separate queues order give priority interactive traffic class sep random early detection queue 
general issue resource management gateways addressed papers 
allyn romanow discussions red gate ways atm networks vern paxson referees helpful suggestions 
done steven mccanne developed maintained simulator 
bacon 
schwartz nest network simulation prototyping tool proceedings winter usenix con ference pp 

bala tion control high speed packet switched networks infocom pp 

fast implementations mini mal standard random number generator communications acm january pp 

clark shenker zhang support ing real time applications integrated services packet network architecture mecha nism sigcomm august 
floyd connections multiple packet switched networks part way traffic computer communication re view october pp 

floyd issues flexible resource manage ment datagram networks proceedings rd workshop high speed networks march 
floyd jacobson traffic phase ef packet switched gateways internetworking research experience september 
floyd jacobson periodic routing messages appear sigcomm 
hansen table series products prenticehall englewood cliffs nj 
harvey forecasting structural time kalman filter cambridge university press 
hashem analysis random drop control report lcs tr laboratory computer science mit cambridge ma 
hoeffding probability inequalities sums random variables american statistical association journal vol 
march 
probabilistic analysis algorithms springer verlag 
jacobson congestion avoidance control proceedings sigcomm august pp 

jain delay approach interconnected heterogeneous computer networks computer communication re view october pp 

jain congestion control computer net works issues trends ieee network may pp 

jain myths congestion high speed networks internetworking research experience september pp 

jain ramakrishnan computer networks connectionless network layer concepts goals methodology proc 
ieee comp 
networking symp washington april pp 
keshav real network simulator re port computer science department university california berkeley berkeley nia 
keshav control theoretic approach control proceedings sigcomm september 
ramakrishnan ietf performance congestion control working group gateway congestion control sur rfc august 
mishra kanakia 
hop hop rate congestion control scheme proceedings sigcomm august 
mitra dynamic adaptive win high speed data networks theory simulations proceedings sigcomm september 
mitra dynamic adaptive win high speed data networks multiple paths propagation delays proc 
ieee info com pp 

pingali hammond formance adaptive window flow controls dynamic load environment proc 
ieee info com june pp 

postel internet control message protocol rfc september 
postel host source quench rfc july 
ramakrishnan chiu jain con gestion avoidance computer networks connectionless network layer part iv selec tive binary feedback scheme general topologies dec tr november 
ramakrishnan jain raj scheme congestion avoidance computer networks acm transactions com puter systems pp 

romanow performance results atm congestion appear second ieee workshop architecture imple mentation high performance communications subsystems williamsburg va sept 
agrawala dtp protocol university maryland tech report umiacs tr october 
shenker comments ietf congestion control working group draft gateway congestion control policies unpublished 
wang crowcroft new scheme slow start search tri computer communication review jan pp 

wang crowcroft eliminating losses tahoe bsd tcp congestion control algorithm computer communica tion review april pp 

young recursive estimation time springer verlag pp 

zhang new architecture packet switch ing network protocols mit lcs tr laboratory computer science massachusetts technology august 
zhang clark oscillating behavior traffic case study simulation internetworking research experience vol 
pp 

zhang shenker clark observa tions dynamics congestion control algorithm effects way traffic sig comm september pp 

appendix section give statistical result section identifying misbehaving users 
xj independent random variables sum theorem hoeffding xn independent xj forall xj 
gamma rob gamma gamma gamma gamma gamma gamma nt xi indicator random variable jth marked packet connection si nx xi theorem rob si pi gamma nt gamma pi 
rob si gamma gamma pi 

