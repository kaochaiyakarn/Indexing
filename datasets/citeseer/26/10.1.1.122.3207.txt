formal ontology conceptual analysis knowledge representation edited nicola guarino roberto poli kluwer academic publishers press 
substantial revision international workshop formal ontology march padova italy 
available technical report ksl knowledge systems laboratory stanford university 
principles design ontologies knowledge sharing revision august thomas gruber stanford knowledge systems laboratory welch road building palo alto ca gruber ksl stanford edu artificial intelligence exploring formal ontologies way specifying content specific agreements sharing reuse knowledge software entities 
take engineering perspective development ontologies 
formal ontologies viewed designed artifacts formulated specific purposes evaluated objective design criteria 
describe role ontologies supporting knowledge sharing activities set criteria guide development ontologies purposes 
show criteria applied case studies design ontologies engineering mathematics bibliographic data 
selected design decisions discussed alternative representation choices evaluated design criteria 
keywords ontology knowledge sharing ontology design ontological commitment knowledge interchange format measurement theory 
technical problems stand way shared reusable knowledge software 
conventional applications knowledge systems heterogeneous hardware platforms programming languages network protocols 
knowledge systems pose special requirements interoperability 
systems operate communicate statements formal knowledge representation 
ask queries give answers 
take background knowledge input 
agents distributed ai environment negotiate exchange knowledge 
knowledge level communication need conventions levels representation language format agent communication protocol specification content shared knowledge 
proposals standard knowledge representation formats fulton genesereth fikes morik boswell agent communication languages finin independent content knowledge exchanged communicated 
establishing agreements knowledge shared assumptions models world ontologies play software specification role gruber 
current research exploring formal ontologies specifying agreements variety knowledge sharing activities allen lehrer cutkosky fikes cutkosky gruber van genesereth gruber tenenbaum weber neches patil walther eriksson musen 
long term objective enable libraries reusable knowledge components knowledge services invoked networks 
believe success efforts depends development engineering discipline ontology design akin software engineering conventional software 
analysis design requirements shared ontologies proposal design criteria guide development ontologies knowledge sharing purposes 
section describes usage model ontologies knowledge sharing 
section proposes design criteria requirements usage model 
section shows criteria applied ontologies designed explicitly purpose knowledge sharing 

ontologies specification mechanism body formally represented knowledge conceptualization objects concepts entities assumed exist area interest relationships hold genesereth nilsson 
conceptualization simplified view world wish represent purpose 
knowledge base knowledge system knowledge level agent committed conceptualization explicitly implicitly 
ontology explicit specification conceptualization 
term borrowed philosophy ontology systematic account existence 
ai systems exists represented 
knowledge domain represented declarative formalism set objects represented called universe discourse 
set objects describable relationships reflected representational vocabulary knowledge program represents knowledge 
context ai describe ontology program defining set representational terms 
ontology definitions associate names entities universe discourse classes relations functions objects human readable text describing names mean formal axioms constrain interpretation formed terms 
formally ontology statement logical theory 
common ontologies describe ontological commitments set agents communicate domain discourse necessarily operating globally shared theory 
say agent commits ontology observable actions consistent definitions ontology 
idea ontological commitments knowledge level perspective newell 
knowledge level level description knowledge agent independent symbol level representation internally agent 
knowledge attributed agents observing actions agent knows acts information acting rationally achieve goals 
actions agents including knowledge base servers knowledge systems seen tell ask functional interface levesque client interacts agent making logical assertions tell posing queries ask 
pragmatically common ontology defines vocabulary queries assertions exchanged agents 
ontological commitments agreements shared vocabulary coherent consistent manner 
agents sharing vocabulary need share knowledge base knows things agent commits ontology required answer queries formulated shared vocabulary 
short commitment common ontology guarantee consistency completeness respect queries assertions vocabulary defined ontology 

design criteria ontologies formal ontologies designed 
choose represent ontology making design decisions 
guide evaluate designs need objective criteria founded purpose resulting artifact priori notions naturalness truth 
propose preliminary set design criteria ontologies purpose knowledge sharing interoperation programs shared conceptualization 

clarity ontology effectively communicate intended meaning defined terms 
definitions objective 
motivation defining ontologies equated taxonomic hierarchies classes class definitions subsumption relation ontologies need limited forms 
ontologies limited conservative definitions definitions traditional logic sense introduce terminology add knowledge world enderton 
specify conceptualization needs state axioms constrain possible interpretations defined terms 
concept arise social situations computational requirements definition independent social computational context 
formalism means 
definition stated logical axioms 
possible complete definition predicate defined necessary sufficient conditions preferred partial definition defined necessary sufficient conditions 
definitions documented natural language 

coherence ontology coherent sanction inferences consistent definitions 
defining axioms logically consistent 
coherence apply concepts defined informally described natural language documentation examples 
sentence inferred axioms contradicts definition example informally ontology incoherent 

extendibility ontology designed anticipate uses shared vocabulary 
offer conceptual foundation range anticipated tasks representation crafted extend specialize ontology monotonically 
words able define new terms special uses existing vocabulary way require revision existing definitions 

minimal encoding bias conceptualization specified knowledge level depending particular symbol level encoding 
encoding bias results representation choices purely convenience notation implementation 
encoding bias minimized knowledge sharing agents may implemented different representation systems styles representation 

minimal ontological commitment ontology require minimal ontological commitment sufficient support intended knowledge sharing activities 
ontology claims possible world modeled allowing parties committed ontology freedom specialize instantiate ontology needed 
ontological commitment consistent vocabulary ontological commitment minimized specifying weakest theory allowing models defining terms essential communication knowledge consistent theory 
tradeoffs ontology design design problems require making tradeoffs criteria 
criteria inherently odds 
example interest clarity definitions restrict possible interpretations terms 
minimizing ontological commitment means specifying weak theory admitting ontology serves different purpose knowledge base different notion representational adequacy mccarthy hayes applies 
shared ontology need describe vocabulary talking domain knowledge base may include knowledge needed solve problem answer arbitrary queries domain 
possible models 
goals opposition 
clarity criterion talks definitions terms ontological commitment conceptualization described 
having decided distinction worth making give tightest possible definition 
apparent contradiction extendibility ontological commitment 
ontology anticipates range tasks need include vocabulary sufficient express knowledge relevant tasks requiring increased commitment larger vocabulary 
extensible ontology may specify general theory include representational machinery define required specializations 
extendibility ontological commitment include notion sufficiency adequacy 
ontology serves different purpose knowledge base concept representational adequacy mccarthy hayes differs 
shared ontology need describe vocabulary talking domain knowledge base may include knowledge needed solve problem answer arbitrary queries domain 
see criteria guide ontology design consider case studies 
discuss selected design decisions evaluating alternative representation choices proposed criteria 

case studies ontology design section discuss design ontologies 
conventional data modeling define ontologies data type declarations database schema 
wish write knowledge level specifications independent particular data programming languages knowledge interchange format kif genesereth fikes ontology defines set classes relations functions object constants domain discourse includes axiomatization constrain interpretation 
resulting language basic logic kif vocabulary theory ontologies domain specific specification conceptualization 
quick overview kif kif prefix notation predicate calculus functional terms equality 
free variables start prefix universally quantified 
material implication indicated operators 
equality terms denoted relation 
member relation indicates set membership setof set construction operator 
relations class objects universe discourse defined sets tuples 
relations denoted constants serve predicate symbols terms denoting relations objects 
functions special case relations function arguments equivalent relation arguments argument value function arguments 
classes represented unary relations 
example sentence means instance class definitions kif definitional operators defrelation support development set kif analysis translation tools provided ontolingua system gruber gruber 
associate relation function object constant set axioms follow 
style lisp syntax case significant constants text semicolon line ignored 
case physical quantities units measure algebra engineering models case study consider problem representing mathematical models engineered systems 
engineers mathematical models sets equations analyze behavior physical systems 
conventional notations formatting mathematical expressions textbooks engineering literature usually implicit details required understand equations 
instance clear expression kx symbols variables constants represent numbers quantities forces lengths numbers reals vectors quantities static values functions time functions time space units measure assumed 
reader interpret notations background knowledge context 
build libraries reusable engineering models important notation formal language defined context independent interpretation 
purpose greg olsen developed family formal ontologies engineering modeling 
goal define vocabulary conceptual foundation necessary sharing mathematical models device behavior computer programs 
ontologies language communication engineering tools distributed heterogeneous environment gruber tenenbaum weber mcguire 
important concepts ontologies physical quantity meters kilometers hour physical dimension length length time unit measure meters kilometers hour magnitudes various orders scalars vectors tensors functions thereof algebras describing mathematical constraints operators products sums exponentiations derivatives concepts metalinguistic level describe mathematical expressions objects universe discourse reason expression closed form describe dependent variables system equations 
focus representation physical quantities engineering models 
engineers word quantity refer thing world length segment railway track meters thing parameter equation model denoting position car track 
engineering ontologies distinguish notions 
physical quantity extent property world independent represented measured length meters long 
symbol expression denotes physical quantity 
representation metalinguistic level parameters equations engineering model treated special cases terms sentences logic 
treatment metalinguistic level scope concentrate object level representation physical quantity 
version consider straw man proposal criticize revise 
start straightforward definition physical quantity pair comprising number unit measure 
kif form defines physical quantity object consisting magnitude unit unary functions quantity magnitude quantity unit 
definition says magnitude physical quantity exist type double float unit member standard set units 
constraints analogous slot value restrictions object centered languages 
definition condition says pair magnitudes units defines quantity 
defrelation physical quantity physical quantity defined quantity magnitude double float quantity magnitude defined quantity unit member quantity unit setof meter second kelvin mole candela physical quantity class unary relation holds instances class 
describing individual instances class define constructor function called quantity 
term expression quantity denotes physical quantity magnitude unit 
quantity defined quantity quantity physical quantity quantity magnitude quantity unit definition physical quantity stated quantities determined values magnitudes units definition simply adds vocabulary able denote specific quantity term 
example states quantity meters meter possible units measure 
quantity meter analysis original proposal satisfies design criteria ontologies 
definition physical quantity specified declaratively meaning independent program 
internally consistent simple clear 
falls short criteria 
double float constraint familiar data definitions specification precision encoding numbers concept physical quantities 
instance encoding bias reflects implementation detail bits precision knowledge level commitments kif functions may partial defined arguments 
predicate defined indicate function value particular sequence arguments 
relational terminology defined implies exists function viewed binary relation holds 
slot value terminology means slot exactly value object parties ontology 
better say magnitude quantity real number acknowledging computer programs approximate reals 
second concept units measure defined set possible values quantity unit function 
specification encoding world obvious double float vs real number example 
mean physical quantity depend commitment particular set units 
set possible units part definition 
third fixing set possible units limit extendibility 
world standards units measure purposes ontology sharing engineering models theories people domains tools sanction preference standard 
ontology allow definition alternate sets units way relate existing units 
version consider modify initial proposal remove inadequacies 
reformulate definition physical quantity concepts magnitude unit measure explicit independent classes magnitude unit 
defrelation physical quantity physical quantity defined quantity magnitude magnitude quantity magnitude defined quantity unit unit measure quantity unit define class magnitude include class real numbers class numbers encodable floating point format 
class comes kif number ontology 
defrelation magnitude magnitude real number note definition incomplete 
complete definition relation includes necessary sufficient conditions relation hold 
definition gives sufficient conditions member class real numbers magnitudes necessary conditions 
done anticipation sorts magnitudes engineering models 
complete family engineering math ontologies includes separate theories vector tensor quantities 
specialized theories inherit parent theories axioms quantities magnitudes add axioms stating vectors tensors magnitudes 
sharing knowledge discrete approximation theories error bounds numeric computation axioms precision written encoding bias 
decoupling ontologies way helps minimize ontological commitment 
agent commit basic theory real valued quantities commitment higher order magnitudes 
rationale minimizing commitment assumption greater commitment implies complex agent 
accommodate alternate sets units define class units measure provide vocabulary define new units 
start class called measure primitive 
defrelation unit measure class unit measure allow user extend set units define basis set called basic unit subclass unit measure operators called unit unit building new units existing ones 
unit analogous multiplication unit analogous exponentiation real power 
engineering equation quantities multiplied product expressed quantity magnitude arithmetic product magnitudes quantities unit measure unit units quantities 
analogous relationship holds exponentiation introduces division negative exponents 
defrelation basic unit basic unit basic units distinguished unit measure units measure unit unit maps pairs units units unit measure unit measure defined unit unit measure unit commutative unit unit associative unit unit unit unit primitive term able give complete axiomatic definition 
rely textual documentation background knowledge shared reader convey meanings primitives 
technically terms incomplete definitions primitives 
magnitude strengthened conditions complete magnitude equivalent real number 
unit measure get meaning human interpretation meter unit measure purely convention 
revision physical quantities theory defined units special cases quantities 
included real numbers quantities identity dimension 
quantities generalization numbers extended kif expt functions polymorphic definitions subclass quantities including units measure 
allowed eliminate unit unit substitute expt 
formulation quantity reduces 
unit unit maps units reals units unit measure real number defined unit unit measure unit algebraic properties exponentiation unit unit unit unit unit unit unit unit unit unit example define meters basic unit length seconds basic unit time 
define unit velocity called meters second combination operators 
new unit denote specific quantity velocity 
meter basic unit meter second basic unit second meter second meter second unit meter unit second real fast quantity meter second analysis version new axiomatization quantities magnitudes units extensible turns incoherent 
feet yards descriptions length definition physical quantities treating pairs magnitudes units feet yards quantity 
easily proved quantity unit quantity foot foot quantity unit quantity yard yard foot yard quantity foot quantity yard 
consistent follows axiomatic definitions 
conceptualization quantities lengths world independent measured 
feet yards equal proof revealed problem 
representation allows infer true conceptualization ontology incoherent 
course means mechanically verifying coherence conceptualization 
means deriving consequences axioms interpret respect intended conceptualization 
version original representation quantities aggregates magnitude unit components reflects style encouraged object oriented data modeling techniques 
objects entities state instance variables methods 
imagine implementing quantities tuples numbers units 
domain image led astray 
away implementation solve problem equivalent quantities changing definitions functions relate quantities magnitudes units 
version say magnitude quantity depends unit requested 
dependency reflected definition quantity magnitude binary function maps quantities units magnitudes 
definition avoid incoherence possible quantities specified different units equal 
quantity magnitude defined quantity magnitude quantity magnitude physical quantity unit measure magnitude far provided formal mechanism describe new units physical quantities said semantics quantities respect units quantities 
issue clarity 
combination quantities compared magnitudes added 
units sense quantities 
meter second mile hour meters 
missing link notion physical dimension 
length time velocity physical dimensions 
units physical quantities associated physical dimensions units specify quantity dimension quantity 
quantities dimension added compared 
define primitive class called physical dimension length velocity say unit measure associated single physical dimension 
definition unit measure states constraint total functional mapping function unit dimension units physical dimensions 
defrelation physical dimension class physical dimension defrelation unit measure unit measure defined unit dimension physical dimension unit dimension similarly define function quantity dimension mapping quantities dimensions 
quantity dimension physical quantity defined quantity dimension physical dimension quantity dimension notion compatibility quantities units equal dimensions 
specify strengthening definition function quantity magnitude adding constraint underlined dimensions quantity unit 
quantity magnitude defined quantity magnitude quantity magnitude physical quantity unit measure magnitude quantity dimension unit dimension introducing concept physical dimension able add axiomatic constraints definitions increasing clarity changing ontological commitment 
doesn sense ask magnitude length seconds constraints just understanding explicit 
final extension ontology increase ontological commitment consistent existing definitions theory useful sharing engineering models 
extension say magnitudes quantities dimension compared regardless units originally specified 
state formally making function quantity magnitude total quantities units dimension adding axiom definition quantity magnitude 
quantity magnitude defined quantity magnitude quantity magnitude physical quantity unit measure magnitude quantity dimension unit dimension quantity unit measure quantity dimension unit dimension defined quantity magnitude axiom definition quantity magnitude stipulates necessary conditions domain range constraints hold function defined 
practical consequence commitment unit conversion possible 
quantity originally specified unit magnitude quantity magnitude 
previous axiom unit dimension expect exist magnitude quantity magnitude 
quantity magnitude provides vocabulary unit conversion 
ontology yves stanford knowledge systems lab written agent perform unit conversion operations 
commits physical quantities ontology answers queries kif vocabulary ontology 
gets information dimensions relative magnitudes various units reading ontologies containing unit definitions 
unit ontologies describe systems units dimensions fundamental standard units rest composed multiplication exponentiation operators 
example ontology specifies standard si system units halliday resnick 
ontology agent determine provided unit definitions sufficient compute magnitude quantity unit terms 
query form evaluate quantity magnitude quantity expression unit expression agent return appropriate magnitude 
example ontology agent interoperation 
ontology provides vocabulary construct queries semantics agents agree sense vocabulary 
case agents agree quantity expressions term expressions denote quantities units arguments quantity magnitude function magnitude exists 
agreements establish basis agent discourse 
separating core ontology quantities units specific conventions systems units minimizes ontological commitment participating agents 
need commit core theory commit differing standards measure 
commitment ontology require completeness inference agents understand conditions value exists magnitude unknown unit knowing compute value 
possible capitalize services mediator agents wiederhold translate agents 
case mediator unit conversion agent 
summary case seen formal ontology engineering models designed respect general design criteria outlined section 
criterion asks clarity 
engineering math ontologies clarity achieved formal axiomatization forced explicit distinctions assumptions left ambiguous textbook notations 
resulting ontology machine interpretable reader theorem prover help answer kinds questions finds textbook chapters questions probe student understanding defined concepts 
second criterion coherence guided design ontology 
case study definitions early version implied inconsistent conceptualization equivalent quantities expressed different units equal 
criterion extendibility suggested design change fixing set units added vocabulary define new units dimensions allow quantities expressed compatible unit 
saw instance encoding bias criterion assumption precision magnitudes 
help minimize ontological commitment criterion decomposed comprehensive theory engineering mathematics modular theories agents reason scalar quantities higher order magnitudes agents different standard units commit smallest theory needed share models agents 
consider domain application design criteria leads different choices representation 
case ontology sharing bibliographic data second case study involves ontology sharing bibliographic data information library card catalog list scholarly 
example clarify design issues relating ontologies shared data 
bibliography ontology designed facilitate automatic translation existing bibliographic databases support specification formatting styles independently database program provide knowledge level vocabulary interacting network services bibliography database search 
ontology describes conceptualization view world particular perspective 
ontology world includes information 
say bibliography 
contains information needed identify retrieve publication 
contain data publications publications 
documents things created authors read viewed listened books journals documents 
may publications document edited collections 
documents created authors people agents 
documents published publishers publication dates time points 
authors publishers names strings 
bibliography ontology defines class concepts italicized 
example bibliographic represented instances class called 
definition class includes necessary condition associated document title 
document associated represented ref document function title ref title 
defrelation bibliographic description publication uniquely identifies providing information needed retrieve associated document 
distinguished 
ref defined ref document ref defined ref title ref ref document ref document maps documents defined ref document ref ref document ref doc ref document doc ref title ref title maps title strings defined ref title ref ref title ref title ref title name title database entity encoded record relation tuple 
vocabulary representing data associated entities fields database record provided unary functions binary relations 
example ref title function represents title field value string 
sentence defined ref title ref definition states valid associated title 
field ref year defined 
optional field include year information 
ref document function different data field functions 
ref document represents relationship document 
document element conceptualization data item name string number 
help specify relationship data 
example edited collection papers share publication data 
world papers published single document 
fields publisher year publication determined publisher year publication document 
true document represented database 
relationships data facts documents authors provided unary functions binary relations 
consider ref year function detail 
function ref year maps integer representing year associated document published 
associated document published ref year function undefined 
relationship documents years specified ref year integer timepoint year time point doc publication date document associated 
ref year ref year ref timepoint year doc publication date ref document ref doc publication date timepoint document published defined doc publication date doc doc publication date doc date document doc timepoint date notice mapping year numbers involves intermediate entity called timepoint 
timepoint single point real historical time observers contexts 
continuous meaning independent granularity wish approximate 
date birth person date publication document timepoints 
defrelation timepoint timepoint point real historical time observers contexts 
independent measurement resolution 
class timepoint timepoint year function time points integers representing number years fixed time point 
timepoint year number years timepoint origin timepoint christian calendar 
value integer rounded 
defined timepoint year timepoint year timepoint integer analysis point context examine rationale central design decision ontology define conceptual entities described data just specifying data 
documents distinguished 
introduce publishers authors independent entities names appear 
theory time points included dates appear numbers strings 
anticipated applications need reason dates publication events authorship forth 
ask commit concepts ontology 
reason introducing entities able state integrity constraints data object 
instance papers published edited collection ensure publication data date publisher city 
representing documents independently able write constraints 
database agents integrity constraints guarantee coherence detect data processing errors 
representing conceptual entities addition data provides independence application specific encoding resolution 
distinguish timepoints just talking year numbers reason 
say documents published points historical time mentioned may approximated various levels precision 
claims journal article published article published march representational machinery determine consistent 
insist dates represented canonical form day month year 
specifying precision may available data vary implemented systems 
commitment follow particular format conceptualization kind encoding bias 
hand question rationale describing data strings numbers 
represent name author separately author integer encoding years separately time points 
limit ontology conceptual entities documents authors time points leave implementations decide particular author named date stored database 
generally issue identifiers objects appropriate represent knowledge level specifications 
typically choice identifiers objects knowledge base symbol level issue 
example database may identify employees unique integers serve keys employee records 
identifier artifact database design world appropriate include shared ontology 
defining employees terms numbers example encoding bias 
domain bibliography ontology symbolic identifiers names properly domain discourse 
object data fields year publication conceptualization bibliographic domain 
part convention bibliographic years encoded integers 
independent format encoding 
similarly names authors important elements domain 
example early version bibliography ontology revised accommodate concept pen names multiple names author 
authors pen names names official author names publications property world database schema 
need distinguish identifiers entities identified preserve coherence 
names don write authors 
identification dates subtle case 
notion dates bibliography domain assumes coordinate system unit measure historical time 
domain standards precision time measured integral years months days 
encoding bias 
commitment specific unit measure limit extendibility 
agent works chinese calendar able commit ontology western calendar 
compare situation physical quantities ontology section careful keep concept quantity independent unit known provide mechanism supporting multiple equivalent units 
specification standard measurement identification scheme inherently impose encoding bias limit extendibility 
bibliography ontology equate specification dates concept points historical time 
notion timepoint independent units just concept thermodynamic temperature independent measured kelvin scale 
unit coordinate system introduced mapping time points surface encoding data functions timepoint year 
agent working chinese calendar read date specified western calendar convert appropriate internal format 
addition encodings distinguished conceptual entities extend existing ontology handle unforeseen units 
example publication dates name season summer function time points seasons defined contradicting underlying ontology 

summary discussion described general design criteria detailed examples design formal ontologies knowledge sharing 
case studies instances encoding bias ranging prescriptions numerical precision implicit assumptions resulting viewing quantity magnitude unit pair 
showed encoding intrinsic conceptualization integers years encoding bias avoided representing underlying concept time points units measure timepoint years 
showed extend representational vocabulary units measure engineering ontology particular units exclusive standard 
evaluation design decisions criteria depends knowledge available applications anticipated domain 
engineering domain strong theory relate concepts physical quantity unit measure dimension magnitude 
ontology specified great clarity concepts defined axiomatically 
resulting specification imposes real constraints implementation agents prohibited making implicit assumptions units allows program notation independent knowledge bases libraries engineering models provides basis useful inferential services behavior prediction unit conversion 
ontological commitment strong theory justified sharing valuable mathematical models 
bibliography domain theory relating documents people publishers dates weak 
imposed stronger theory instance describing world authors permanent unique names month known conference 
imposing ontological commitment necessary share information 
incoherent know constraints hold world modeled 
related design criteria proposed primarily evaluation design decisions choosing representations guidelines generating theory 
choosing appropriate ways conceptualizing domain constructive modeling task topic active research ford bradshaw 
project followed set software engineering principles modularity abstraction development ontology 
principles guide form organization knowledge specifications complementary proposed pertain choice representation 
design penman ontology bateman kasper moore whitney draws knowledge structure content natural language including linguists philosophers psychologists lexicographers 
skuce monarch skuce monarch recommend similar strategy general knowledge acquisition 
workshop ontology simmons simmons discussed ontology design criteria including software engineering principles criteria similar proposed independently 
reporting experience formalizing theories objects properties concludes content independent criteria important validity theory scientific theory cognition 
penman purpose ontology organize knowledge natural language processing ontology account distinctions language 
contrast ontologies discussed specify common conceptualization knowledge sharing programs conceptualization model world dominant criterion 
case ontology specification utility ontology ultimately depends utility theory represents 
examples ontologies developed enable knowledge sharing reuse 
cyc project generating wealth examples lenat guha lenat guha pittman pratt shepherd methods partitioning knowledge bases modular theories guha 
guarino guarino sowa sowa offer content independent guidelines organizing concepts relations individuals ontology 
comprehensive top level frameworks penman upper model bateman upper structure skuce ontology adaptation mario bunge ontology ontology upper reaches cyc ontology offer partial designs extended instantiated particular needs 
number ontologies focusing special representation problems varieties time allen ladkin shoham space cohn part structure causality change hobbs 
formal specifications domain task specific conceptualizations appear research literature 
ontologies sharing reuse knowledge engineering models alberts yamamoto yoshikawa planning scheduling allen lehrer hori nakamura manufacturing enterprises fox problem solving tasks methods puerta musen musen steels walther eriksson musen viewed modular building blocks reusable knowledge bases ontology specific software 
particular relevance kads methodology expert system development sharing reusing models expertise theories tasks domains solution strategies wielinga velde schreiber akkermans wielinga schreiber breuker 
models essentially ontologies begun produce formal specifications akkermans van harmelen wielinga angele fensel fensel studer van harmelen start technology put ontologies portable form comparison exchange genesereth fikes gruber 
accumulate corpus examples ontology design 
learn design ontologies knowledge sharing may able evolve today preliminary design criteria working design principles 
acknowledgments intellectual foundation ontology product rewarding collaboration colleagues arpa knowledge sharing effort particularly richard fikes mike genesereth bill mark bob neches ramesh patil marty tenenbaum jay weber 
danny bobrow richard fikes pat hayes james mcguire greg olsen thoughts ontology design thoughtful reviews 
supported arpa prime contract lockheed subcontract sq nasa ncc nag arpa order 
bibliography 

specification knowledge model components 
knowledge acquisition knowledge systems workshop banff 
akkermans van harmelen wielinga 

formalization knowledge level models knowledge acquisition 
international journal intelligent systems alberts 

ymir ontology engineering design 
doctoral dissertation university twente 
allen lehrer 

darpa rome laboratory planning scheduling initiative knowledge representation specification language version manual 

allen 

general theory action time 
artificial intelligence 
angele fensel 

conceptual modelling karl applications 
technical report university karlsruhe 
bateman kasper moore whitney 

general organization knowledge natural language processing penman upper model 
technical report usc information sciences institute marina del rey ca 
cohn 

taxonomy logically defined qualitative spatial relations 
guarino poli eds international workshop formal ontology padova italy 
cutkosky engelmore fikes gruber genesereth mark tenenbaum weber 

pact experiment integrating concurrent engineering systems 
ieee computer 
enderton 

mathematical logic 
san diego ca academic press 
puerta musen 

generation knowledge acquisition tools domain ontologies 
technical report ksl knowledge systems laboratory stanford university 


classical mereology restricted domains 
guarino poli eds international workshop formal ontology padova italy 
fensel studer 

analysis languages operationalize formalize kads models expertise 
technical report university karlsruhe 
fikes cutkosky gruber van 

knowledge sharing technology project overview 
technical report ksl stanford university knowledge systems laboratory 
finin weber wiederhold genesereth fritzson mckay mcguire shapiro beck 

specification kqml agent communication language 
technical report eit tr enterprise integration technologies palo alto ca 
ford bradshaw 
eds 

knowledge acquisition modeling 
new york john wiley sons 
special issue international journal intelligent systems volume 
fox 

common sense model enterprise 
proceedings industrial engineering research conference 
longer version available report department industrial engineering university toronto 
fulton 

technical report semantic unification meta model 
standards working document iso tc sc wg pdes organization dictionary methodology committee 
contact james fulton boeing computer services box ms seattle wa 
genesereth 

agent framework software interoperability 
proceedings darpa software technology conference meridian arlington va pages 
report logic computer science department stanford university june 
genesereth fikes 

knowledge interchange format version manual 
technical report logic computer science department stanford university 
genesereth nilsson 

logical foundations artificial intelligence 
san mateo ca morgan kaufmann publishers 


games classification part relations 
poli eds international workshop formal ontology padova italy 
gruber 

role common ontology achieving sharable reusable knowledge bases 
allen fikes sandewall eds principles knowledge representation reasoning proceedings second international conference cambridge ma pages morgan kaufmann 
gruber 

ontolingua mechanism support portable ontologies 
technical report ksl stanford university knowledge systems laboratory 
revision 
gruber 

translation approach portable ontology specifications 
knowledge acquisition 
gruber tenenbaum weber 

knowledge medium collaborative product development 
gero eds artificial intelligence design 
boston kluwer academic publishers 
guarino 

concepts attributes arbitrary relations linguistic ontological criteria structuring knowledge bases 
data knowledge engineering 
guha 

contexts formalization applications 
doctoral dissertation stanford university 
halliday resnick 

physics 
new york john wiley sons 
hori nakamura 

task specific language constructs describing constraints job assignment problems 
technical report ibm japan 
hobbs 

sketch proposed ontology underlies way talk world 
poli eds international workshop formal ontology padova italy 
yamamoto yoshikawa 

metamodel integrated modeling framework intelligent cad 
gero eds artificial intelligence design 
southampton uk computational mechanics publications 
ladkin 

time representation taxonomy interval relations 
proceedings sixth national conference artificial intelligence philadelphia pages 
lenat guha 

building large knowledge systems representation inference cyc project 
menlo park ca addison wesley 
lenat guha pittman pratt shepherd 

cyc programs common sense 
communications acm 
levesque 

foundations functional approach knowledge representation 
artificial intelligence 
mccarthy hayes 

philosophical problems standpoint artificial intelligence 
meltzer michie eds machine intelligence 
edinburgh edinburgh university press 
mcguire weber tenenbaum gruber olsen 

shade medium sharing design knowledge engineering tools 
technical report lockheed artificial intelligence center 
morik boswell 

common knowledge representation integrating learning tools 
technical report gmd 
musen 

dimensions knowledge sharing reuse 
computers biomedical research 
neches fikes finin gruber patil senator swartout 

enabling technology knowledge sharing 
ai magazine 
newell 

knowledge level 
artificial intelligence 
patil fikes patel schneider mckay finin gruber neches 

darpa knowledge sharing effort progress report 
rich nebel swartout eds principles knowledge representation reasoning proceedings third international conference cambridge ma morgan kaufmann 


reusing large domain independent knowledge base 
proceedings fifth international conference software engineering knowledge engineering san francisco 
shoham 

temporal logics ai semantical ontological considerations 
artificial intelligence 
simmons 

empirical methods ontological engineering case study objects 
lang eds ontologie und der von 
berlin springer verlag 
skuce monarch 

ontological issues knowledge base design problems suggestions 
fifth knowledge acquisition knowledge systems workshop banff 
sowa 

representing attributes roles parts 
guarino poli eds international workshop formal ontology conceptual analysis knowledge representation padova italy 
steels 

components expertise 
ai magazine summer 


formalism object information systems development 
doctoral dissertation university british columbia 


causal ontology coping temporal constraints causes effects 
guarino poli eds international workshop formal ontology padova italy 
van harmelen 

ml formal language kads conceptual models 
knowledge acquisition 
walther eriksson musen 

plug play construction expert system shells sharable context ontologies 
technical report ksl knowledge systems laboratory stanford university 
wiederhold 

mediators architecture information systems 
ieee computer 
wielinga velde schreiber akkermans 

commonkads framework knowledge modelling 
knowledge acquisition knowledge systems workshop banff 
wielinga schreiber breuker 

kads modelling approach knowledge engineering 
knowledge acquisition 

