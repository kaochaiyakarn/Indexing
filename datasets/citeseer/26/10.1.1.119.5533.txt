geometric framework unsupervised anomaly detection detecting intrusions unlabeled data eskin andrew arnold michael leonid sal stolfo department computer science columbia university new york ny aoa lp cs columbia edu current intrusion detection systems employ signature methods data mining methods rely labeled training data 
training data typically expensive produce 
new geometric framework unsupervised anomaly detection algorithms designed process unlabeled data 
framework data elements mapped feature space typically vector space anomalies detected determining points lies sparse regions feature space 
feature maps mapping data elements feature space 
map data dependent normalization feature map apply network connections 
second feature map spectrum kernel apply system call traces 
algorithms detecting points lie sparse regions feature space 
evaluate methods performing experiments network records kdd cup data set system call traces lincoln labs darpa evaluation 
intrusion detection systems idss integral part complete security package modern managed network system 
widely deployed commercially available methods intrusion detection employ signature detection 
methods extract features various audit streams detect intrusions comparing feature values set attack signatures provided human experts 
methods detect previously known intrusions intrusions corresponding signature 
signature database manually revised new type attack discovered revision systems vulnerable attacks 
lot research data mining machine learning algorithms train labeled instances preclassified attack data detect intrusions 
approaches leverage generalization ability data mining methods order detect new attacks 
major paradigms training data mining intrusion detection systems misuse detection anomaly detection 
misuse detection approaches instance set data labeled normal intrusion machine learning algorithm trained labeled data 
example madam id system extracts features network connections builds detection models connection records represent summary traffic network connection 
detection models generalized rules classify data values extracted features 
approaches advantage able automatically retrain intrusion detection models different input data include new types attacks 
traditional anomaly detection approaches build models normal data detect deviations normal model observed data 
anomaly detection applied intrusion detection computer security active area research originally proposed denning 
anomaly detection algorithms advantage detect new types intrusions new intrusions assumption deviate normal usage 
problem set normal data train new piece data goal algorithm determine piece data normal anomaly 
notion normal depends specific application loss generality assume means stemming distribution 
refer problem reasons clear supervised anomaly detection 
research supervised anomaly detection loosely termed performing generative modeling 
approaches build kind model normal data check see new data fits model 
survey techniques 
approach modeling normal sequences look ahead pairs contiguous sequences statistical method determine sequences occur frequently intrusion data opposed normal data 
approach uses prediction model obtained training decision trees normal data uses neural networks obtain model 
ensemble approaches 
lane brodley evaluated unlabeled data anomaly detection looking user profiles comparing activity intrusion activity normal 
technique developed sri emerald system uses historical records normal training data 
compares distributions new data distributions obtained historical records differences distributions indicate intrusion 
works estimate parameters probabilistic model normal data compute new data fits model 
supervised anomaly detection algorithms require set purely normal data train model 
data contains intrusions buried training data algorithm may detect instances attacks assume normal 
practice labeled purely normal data readily available 
traditional data mining approaches impractical 
generally deal large volumes audit data prohibitively expensive classify manually 
obtain labeled data simulating intrusions limited set known attacks able simulate new types attacks occurring reflected training data 
manual classification limited identifying known classification time types attacks restricting detection system identifying types 
addition collect raw data network environment hard guarantee attacks time collecting data 
third paradigm intrusion detection algorithms unsupervised anomaly detection known anomaly detection noisy data address problems 
algorithms takes input set unlabeled data attempt find intrusions buried data 
unsupervised anomaly detection problem set data unknown normal elements anomalous elements 
goal recover anomalous elements 
unsupervised anomaly detection variant classical outlier detection problem 
anomalies intrusions detected removed train misuse detection algorithm traditional anomaly detection algorithm data 
practice unsupervised anomaly detection advantages supervised anomaly detection 
main advantage require purely normal training set 
unsupervised anomaly detection algorithms performed unlabeled data easy obtain simply raw audit data collected system 
addition unsupervised anomaly detection algorithms analyze historical data forensic analysis 
geometric framework unsupervised anomaly detection 
frameworks maps data feature space points determine points outliers position points feature space 
label points sparse regions feature space anomalies 
exactly determine points sparse region feature space dependent specific algorithm framework 
general algorithms detect anomalies tend distant points 
major advantage framework flexibility 
define mappings feature spaces better capture intrusions outliers feature space 
define mappings different types data network connection records system call traces 
perform mapping feature space apply algorithm different kinds data 
network data data dependent normalization feature map specifically designed outlier detection 
system call traces apply spectrum kernel feature map 
feature maps able process network data vector features system call traces sequences system calls algorithms 
algorithms detecting outliers feature space 
algorithms efficient deal high dimensional data 
required application intrusion detection 
algorithm variant cluster algorithm 
second algorithm nearest neighbor algorithm 
third algorithm support vector machine algorithm 
evaluated unsupervised anomaly detection algorithms types data sets set network connections sets system call traces 
network data examined kdd cup data popular widely intrusion attack data set 
system call data set obtained lincoln labs darpa intrusion detection evaluation 
data sets methods show promising results 
unsupervised anomaly detection unsupervised anomaly detection problem large data set elements normal intrusions buried data set 
unsupervised anomaly detection algorithms major advantage able process unlabeled data detect intrusions detected 
addition types algorithms semi automate manual inspection data forensic analysis helping analysts focus suspicious elements data 
unsupervised anomaly detection algorithms assumptions data motivate general approach 
assumption number normal instances vastly number anomalies 
second assumption anomalies qualitatively different normal instances 
basic idea anomalies different normal rare appear outliers data detected 
example intrusion unsupervised algorithm difficulty detecting syn flood dos attack 
reason attack instances intrusion occurs similar number normal instances 
algorithms may label instances attack region feature space occur may dense normal regions feature space 
unsupervised anomaly detection algorithms limited able detect attacks assumptions hold data case 
example algorithms able detect malicious intent authorized network uses seemingly legitimate way 
reason intrusion qualitatively different normal instances user 
framework instances mapped close feature space intrusion undetectable 
previous approach unsupervised anomaly detection involves building probabilistic models training data determine network data instance anomaly 
algorithm mixture model explaining presence anomalies machine learning techniques estimate probability distributions mixture detect anomalies 
distance outliers similar approach unsupervised anomaly detection 
approaches examine inter point distances instances data determine points outliers 
difference approaches problem unsupervised anomaly detection nature outliers different 
network data intrusion occurs multiple times means similar instances data 
number instances intrusion significantly smaller typical cluster normal instances 
problem related unsupervised anomaly detection study outliers field statistics 
various techniques developed detecting outliers univariate multivariate structured data probability distribution 
survey outliers statistics 
geometric framework unsupervised anomaly detection key framework mapping records audit stream feature space 
feature space vector space typically high dimension 
inside feature space assume probability distribution generated data 
wish label elements low density regions probability distribution anomalies 
general know probability distribution 
label anomalies points sparse regions feature space 
point examine point location feature space determine lies sparse region feature space 
exactly determine depends algorithm 
choice algorithm determine points lie sparse regions choice feature map application dependent 
critical practical algorithms intrusion detection efficiency algorithms 
data sets intrusion detection typically large 
feature spaces data collected audit stream system 
loss generality data split data elements define space possible data elements input instance space exactly input space depends type data analyzed 
input space space possible network connection records event logs system call traces map elements input space points feature space framework feature space typically real vector space high dimension generally hilbert space 
main requirement applications feature space define dot product elements feature space 
define feature map function takes input element input space maps point feature space 
general oe define feature map get oe term image data element denote point feature space oe 
feature space hilbert space points dot product defined 
time dot product define norm space distance 
norm point feature space simply square root dot product point 
fact dot product symmetric bilinear form define distance elements feature space jjy gamma jj gamma gamma gamma framework feature map define relations elements input space 
elements input space feature map define distance elements distance corresponding images feature space 
define distance function oe oe gamma oe jj oe oe gamma oe oe oe oe notational convenience drop subscript oe feature space distance corresponds standard euclidean distance space 
kernel functions cases difficult explicitly map data instance point feature space 
reason feature space high dimension difficult explicitly store points feature space memory considerations 
cases explicit map may difficult determine 
purposes interested dot products points feature space 
mechanism computing dot product images data elements need explicitly map data elements images 
define kernel function compute dot products feature space 
kernel function defined pair elements feature space returns dot product images elements feature space 
formally oe 
oe oe redefine distance measure kernel function oe oe gamma oe oe cases kernel function computed efficiently explicitly mapping elements input space images 
function kernel function exists feature space hilbert space kernel function corresponds dot product 
conditions function kernel described detail 
example kernel performs mapping implicitly radial basis kernel 
radial basis kernel function form rb gamma jjx gamma jj oe radial basis kernel corresponds infinite dimensional feature space 
addition computational advantages kernels define kernels take advantage intuitions application 
easily weight various features higher lower depending domain knowledge 
convolution kernels examples kernels point defined input spaces vector spaces define kernels arbitrary input spaces 
kinds kernels referred convolution kernels 
framework define kernels directly audit data needing convert data vector addition kernels defined numerical features types structures sequences define kernels handle different types data sequences system calls event logs 
allows handle different kinds data consistent framework different kernels algorithms defined terms kernels 
detecting outliers feature spaces mapping data points feature space easily formalize problem unsupervised anomaly detection 
main idea want detect points distant points relatively sparse regions feature space 
similar problem outlier detection 
algorithms detecting anomalies feature space 
algorithms implemented terms dot products input elements allows kernel functions perform implicit mappings feature space 
algorithm detects points lie sparse regions different way 
algorithm variant cluster algorithm 
point algorithm approximates density points near point 
algorithm approximation counting number points sphere radius point 
points dense region feature space contain points ball considered normal 
points sparse region feature space contain points ball considered anomalies 
implement efficient approximation algorithm 
perform fixed width clustering points radius sort clusters size 
points small clusters labeled anomalous 
details efficient algorithm 
second algorithm detects anomalies computing nearest neighbors point 
sum distances nearest neighbors greater threshold consider point anomaly 
efficient algorithm detect outliers uses fixed width clustering algorithm significantly speed computation nearest neighbors 
third algorithm support vector machine algorithm identifies low support regions probability distribution solving convex optimization problem 
points feature space mapped feature space gaussian kernel 
second feature space hyperplane drawn separate majority points away origin 
remaining points represent outliers anomalies 
algorithms optimizing clearly defined objective function points feature space 
efficient algorithms solve problems formulation 
algorithm cluster estimation goal algorithm compute points near point feature space 
parameter algorithm radius referred cluster width 
pair points consider points near distance equal distance defined equation 
point define number points point formally define straightforward computation points complexity number points 
reason compute pairwise distances points 
really interested determining outliers effectively approximate computation follows 
perform fixed width clustering entire data set cluster width label points small clusters anomalies 
fixed width clustering algorithm follows 
point center cluster 
subsequent point cluster center added cluster 
center new cluster 
note points may added multiple clusters 
fixed width clustering algorithm requires pass data 
complexity algorithm cn number clusters number data points 
reasonable significantly smaller note definition cluster number points near cluster center number points cluster point center cluster approximate cluster contains points dense regions lot overlap clusters inaccurate estimate 
points outliers relatively overlapping clusters regions accurate approximation 
interested points outliers points dense regions higher threshold anyway 
approximation reasonable case 
efficient approximation algorithm able process significantly larger data sets possible straightforward algorithm need perform pairwise comparison points 
algorithm nearest neighbor second algorithm determines point lies sparse region feature space computing sum distances nearest neighbors point 
refer quantity nn score point 
intuitively points dense regions points near small nn score 
size exceeds frequency attack type data set images attack elements far images normal elements nn score useful detecting attacks 
main problem computing nn score computationally expensive compute nearest neighbors point 
complexity computation impractical intrusion detection applications 
interested nearest points point significantly speed algorithm technique similar canopy clustering 
canopy clustering means breaking space smaller subsets remove necessity checking data point 
clusters tool reduce time finding nearest neighbors 
cluster data fixed width clustering algorithm previous section variation place element cluster 
data clustered width compute nearest neighbors point advantage properties 
denote point center cluster contains point cluster point notation denote distance point cluster center 
points points cluster oe cases oe oe oe oe gamma algorithm uses inequalities determine nearest neighbors point set clusters 
initially contains clusters data 
step algorithm set points potentially nearest neighbor points 
denote set set points fact nearest neighbor points 
denote set initially empty 
precompute distance cluster 
cluster center closest remove add points refer operation opening cluster 
key algorithm obtain lower bound distance points clusters set equation 
define min min gamma algorithm performs 
point compute 
min guarantee closer point points clusters case remove add guarantee element including case empty open closest cluster adding points remove cluster notice remove cluster min increase 
elements terminate 
computation spent checking distance points cluster centers 
significantly efficient computing pairwise distances points 
choice width affect nn score affects efficiency computing score 
intuitively want choose splits data reasonably sized clusters 
algorithm class svm third algorithm uses algorithm estimate region feature space data occurs 
map feature space second feature space radial basis kernel equation new feature space 
standard svm algorithm supervised learning algorithm 
requires labeled training data create classification rule 
svm algorithm adapted unsupervised learning algorithm 
unsupervised variant require training set labeled determine decision surface 
supervised version svm tries maximally separate classes data feature space hyperplane unsupervised version attempts separate entire set training data origin 
done solving quadratic program penalizes points separated origin simultaneously trying maximize distance hyperplane origin 
optimization hyperplane acts decision function points separates origin classified normal side hyperplane classify anomalous 
algorithm similar standard svm algorithm uses kernel functions perform implicit mappings dot products 
uses kind hyperplane decision surface 
solution dependent support vectors 
support vectors determined different way 
algorithm attempts find small region data lies label points region class 
points regions labeled class gamma 
main idea algorithm attempts find hyperplane separates data points origin maximal margin 
decision surface chosen determined solving optimization problem determines best hyperplane set criteria scope described fully 
specific optimization solved estimating hyperplane specified hyperplane normal vector feature space offset origin ae min ii ae 
jjwjj vl gamma ae subject delta oe ae gamma parameter controls trade maximizing distance origin containing data region created hyperplane corresponds ratio expected anomalies data set 
slack variables penalize objective function allow points wrong side hyperplane 
solve optimization problem decision function point sgn delta oe gamma ae introduce lagrangian rewrite optimization terms lagrange multipliers ff represent optimization minimize ff ff oe subject ff vl ff optimum ae computed lagrange multipliers corresponding lagrange multiplier ff satisfies ff vl ae ff oe terms lagrange multipliers decision function sgn ff oe gamma ae property optimization majority data points ff decision function efficient compute 
optimization solved variant sequential minimal optimization algorithm 
details optimization theory relation algorithm estimation probability density original feature space details algorithm fully described 
feature spaces intrusion detection choice feature space unsupervised anomaly detection application specific 
performance greatly depends ability feature space capture information relevant application 
optimal performance best analyze specific application choose feature space accordingly 
experiments analyze data sets 
data set set network connection records 
data set contains records contain features describing network connection 
second data set set system call traces 
entry sequence system calls specific process execution 
different feature maps different kinds data analyze 
data records data dependent normalization kernel implicitly define feature map 
feature map takes account abnormal specific feature record performs mapping 
significantly improves detection performance 
system call data trace sequence system calls apply string kernel sequences 
kernel called spectrum kernel previously analyze biological sequences 
spectrum kernel maps short sub sequences string feature space 
consistent intuitions intrusion detection short sub sequences primary basis analysis system call sequences previously :10.1.1.47.6145
data dependent normalization kernels data network connection record data dependent normalization feature map 
feature map takes account variability feature mapping way normalizes relative distances feature values feature space 
types attributes connection record 
numerical attributes discrete attributes 
examples numerical attributes connection records number bytes connection amount connections port 
example discrete attributes network connection records type protocol connection 
attributes numerical fact discrete values destination port connection 
handle discrete numerical attributes differently kernel mapping 
problem straightforward mapping numerical attributes different scales 
certain attribute times larger attribute dominate second attribute 
normalize attributes number standard deviations away mean 
scales distances likelihood attribute values 
feature map data dependent distance points depends mean standard deviation attributes turn depends distribution attribute values data 
discrete values similar data dependent idea 
sigma set possible values discrete attribute discrete attribute sigma coordinates feature space corresponding attribute 
coordinate possible value attribute 
specific value attribute gets mapped feature space follows 
coordinate corresponding attribute value positive value sigma ij remaining coordinates corresponding feature value 
distance vectors weighted size range values discrete attributes 
different value attribute records contribute sigma ij square norm vectors 
kernels sequences spectrum kernel convolution kernels defined arbitrary input spaces 
kernel defined sequences model sequences system calls 
specific kernel spectrum kernel successfully applied modeling biological sequences 
spectrum kernel defined input space sequences 
sequences arbitrary long sequence elements alphabet sigma define feature space spectrum kernel follows 
feature space sigma dimensional space coordinate corresponds specific length sub sequence 
sequence value specific coordinate feature space count number times corresponding sub sequence occurs sequence 
sub sequences extracted sequence sliding window length dimension feature space exponential impractical store feature space explicitly 
note feature vectors corresponding sequence extremely sparse 
take advantage fact efficiently compute kernels sequences efficient data structure described 
critical experiments consider possible system calls sub sequences length gives dimension feature space close 
experiments perform experiments different types data 
analyze network connection records system call traces 
performance measures evaluate system interested major indicators performance detection rate false positive rate 
detection rate defined number intrusion instances detected system divided total number intrusion instances test set 
false positive rate defined total number normal instances incorrectly classified intrusions divided total number normal instances 
indicators performance measure percentage intrusions system able detect incorrect classifications process 
calculate values labeled data measure performance 
trade false positive detection rates inherently machine learning methods 
comparing quantities evaluate performance invariant bias distribution labels data 
especially important intrusion detection problems normal data intrusion data factor 
classical accuracy measure misleading system classifies data normal accuracy 
plot roc receiver operating characteristic curves depicting relationship false positive detection rates fixed training test set combination 
roc curves way visualizing trade offs detection false positive rates 
data set descriptions network connection records kdd cup data contained wide variety intrusions simulated military network environment 
consisted approximately data instances vector extracted feature values connection record obtained raw network data gathered simulated intrusions 
connection sequence tcp packets ip addresses 
tcp assembled connection records bro program modified madam id 
connection labeled normal exactly specific kind attack 
labels assumed correct 
simulated attacks fell categories dos denial service syn flood unauthorized access remote machine password guessing unauthorized access superuser root functions buffer overflow attack probing surveillance probing vulnerabilities port scanning 
total attack types 
extracted features included basic features individual tcp connection duration protocol type number bytes transferred flag indicating normal error status connection 
features individual connection obtained domain knowledge included number file creation operations number failed login attempts root shell obtained 
number features computed second time window 
included number connections host current connection past seconds percent connections syn rej errors number connections service current connection past seconds 
total features continuous values 
kdd data set obtained simulating large number different types attacks normal activity background 
goal produce training set learning methods labeled data 
result proportion attack instances normal ones kdd training data set large compared data expect observe practice 
unsupervised anomaly detection algorithms sensitive ratio intrusions data set 
number intrusions high intrusion show anomalous 
order data set realistic filtered attacks resulting data set consisted attack normal instances 
system call data bsm basic security module data portion darpa intrusion detection evaluation data created mit lincoln labs 
data consists weeks bsm data processes run solaris machine 
examined weeks traces programs attacked time 
programs examined eject ps 
attacks occurred correspond process traces 
attack correspond multiple process traces malicious process spawn processes 
consider attack detected processes correspond attack detected 
tables summarize system call trace data sets list number system calls table lincoln labs data summary program total intrusion intrusion normal normal intrusion name attacks traces system calls traces system calls traces ps eject traces program 
experimental setup data sets split data portions 
portion training set set parameters values algorithms second test set evaluation 
set parameters training set 
methods data sets varied detection threshold threshold computed detection rate false positive rate 
algorithm data set obtained roc curve 
parameter settings follows 
cluster algorithm section processing network connection data set width fixed width clustering feature space 
eject system call traces width set 
ps traces width set 
nearest neighbor algorithm section kdd cup data value set data set 
eject data set ps data set 
adjusted size data 
svm algorithm section kdd cup data set oe 
system call data sets value oe 
experimental results approach unsupervised anomaly detection performed types data 
case system call data algorithms performed perfectly 
means certain threshold process trace attacks identified malicious false positives 
explanation results obtained looking exactly feature space encoding 
system call trace mapped feature space spectrum kernel contains coordinate possible sub sequence 
process traces contain sub sequences system calls closer process traces contain fewer sub sequences system calls 
results surprising consider previous approaches anomaly detection system call traces 
original area sub sequences system calls algorithm detection rate false positive rate cluster cluster cluster cluster nn nn nn nn svm svm svm svm table selected points roc curves performance algorithm kdd cup data 
basis detection algorithm 
supervised anomaly detection algorithm recorded set sub sequences occurred normal training set detected anomalies test set counting number unknown sub sequences occur window consecutive sub sequences 
number previously unseen sub sequences threshold method determine process corresponds intrusion 
results experiments suggest subsequences occur malicious processes occur normal processes 
explains feature space defined spectrum kernel intrusion processes significantly far away normal processes 
experiments normal processes clumped feature space 
intrusion processes easily detected outliers 
network connections data nearly regular system call traces 
experiments types attacks able detect types attacks able detect 
reasonable attacks feature space region normal data 
detection rates lower typically obtained misuse supervised anomaly detection problem unsupervised anomaly detection significantly harder access labels guaranteed clean training set 
shows performance algorithms kdd cup data 
table shows detection rate false positive rate selected points roc curves 
algorithms perform relatively close 
discussion presents geometric framework unsupervised anomaly detection 
framework maps data elements feature space detects anomalies determining detection rate false positive rate roc curves kdd cup data set cluster 
roc curves showing performance algorithms kdd data set 
curves obtained varying threshold 
points lie sparse regions feature space 
feature maps 
feature map data dependent normalization feature map applied network connection records 
second feature map spectrum kernel applied system call traces 
algorithms detecting points sparse regions feature space 
algorithm cluster approach variant 
second algorithm nearest neighbor approach 
third algorithm svm approach 
algorithms applied feature space combined different feature maps allows apply algorithms model different kinds data 
evaluated methods collection network records set system call traces 
cases algorithms able detect intrusions unlabeled data 
practice detecting intrusions unlabeled data important algorithms applied raw collected system data need manually labeled expensive process 
involves defining feature maps different kinds data performing extensive experiments evaluating methods 
third international knowledge discovery data mining tools competition dataset kdd cup kdd ics uci edu databases kddcup kddcup html 
barnett lewis 
outliers statistical data 
john wiley sons 
markus breunig hans peter kriegel raymond ng jorg sander 
lof identifying density local outliers 
acm sigmod int 
conf 
management data pages 
eskin christina leslie william stafford noble 
spectrum kernel string kernel svm protein classification 
proceedings pacific symposium biocomputing psb hawaii 
cristianini shawe taylor 
support vector machines 
cambridge university press cambridge uk 
denning 
intrusion detection model 
ieee transactions software engineering se 
eskin 
anomaly detection noisy data learned probability distributions 
proceedings international conference machine learning 
eskin wenke lee salvatore stolfo 
modeling system calls intrusion detection dynamic window sizes 
proceedings darpa information conference exposition ii discex ii anaheim ca 
fan stolfo 
ensemble adaptive intrusion detection 
proceedings siam international conference data mining arlington va 
stephanie forrest hofmeyr somayaji longstaff 
sense self unix processes 
ieee symposium security privacy pages 
ieee computer society 
ghosh 
study neural networks anomaly misuse detection 
proceedings th usenix security symposium 
haussler 
convolution kernels discrete structures 
technical report ucs crl uc santa cruz 
helman 
statistically base system prioritizing information exploration uncertainty 
ieee transactions systems man cybernetics part systems humans 
hofmeyr stephanie forrest somayaji 
intrusion detect sequences system calls 
journal computer security 
javitz valdes 
nides statistical component description justification 
technical report computer science laboratory sri international 
edwin knorr raymond ng 
algorithms mining distance outliers large datasets 
proc 
th int 
conf 
large data bases vldb pages 
edwin knorr raymond ng 
finding intentional knowledge distance outliers 
vldb journal pages 
lane brodley 
sequence matching learning anomaly detection computer security 
aaai workshop ai approaches fraud detection risk management pages 
aaai press 
lee stolfo 
data mining approaches intrusion detection 
proceedings usenix security symposium 
lee stolfo chan 
learning patterns unix processes execution traces intrusion detection 
aaai workshop ai approaches fraud detection risk management pages 
aaai press 
lee stolfo mok 
data mining flow environments experiences intrusion detection 
proceedings conference knowledge discovery data mining kdd 
lippmann cunningham fried graf kendall webster 
results darpa line intrusion detection evaluation 
second international workshop advances intrusion detection raid west lafayette 
andrew mccallum kamal nigam lyle ungar 
efficient clustering highdimensional data sets application matching 
knowledge discovery data mining pages 
paxson 
bro system detecting network intruders real time 
proceedings th usenix security symposium san antonio tx 
platt 
fast training support vector machines sequential minimal optimization 
sch olkopf burges smola editors advances kernel methods support vector learning pages cambridge ma 
mit press 
leonid eskin salvatore stolfo 
intrusion detection unlabeled data clustering 
proceedings acm css workshop data mining applied security philadelphia pa 
foster provost tom fawcett ron kohavi 
case accuracy estimation comparing induction algorithms 
proceedings fifteenth international conference machine learning july 
sch olkopf platt shawe taylor smola williamson 
estimating support high dimensional distribution 
technical report microsoft research 
appear neural computation 
christina stephanie forrest barak pearlmutter 
detecting intrusions system calls alternative data models 
ieee symposium security privacy pages 
ieee computer society 
watkins 
dynamic alignment kernels 
smola bartlett sch olkopf schuurmans editors advances large margin classifiers pages cambridge ma 
mit press 
ye 
markov chain model temporal behavior anomaly detection 
proceedings ieee systems man cybernetics information assurance security workshop 

