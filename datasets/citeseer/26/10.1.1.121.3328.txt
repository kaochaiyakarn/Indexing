seth james nielson cs rice edu taxonomy rational attacks scott crosby cs rice edu department computer science rice university peer peer services effective participating nodes cooperate scenarios node represents self interested party cooperation expected enforced 
reasonable assumption large fraction nodes rational attempt maximize consumption system resources minimizing 
behavior violates system policy constitutes attack 
identify create taxonomy rational attacks identify corresponding solutions exist 
effective solutions directly cooperative behavior feasible common alternative evidence cooperation 
significant challenge peer peer computing problem cooperation 
client server systems network effectiveness meeting design goals directly correlated cooperation member nodes 
example system designed content distribution 
decrease upload bandwidth burden original content server small number nodes directly contact 
content propagated nodes additional peers 
system scale nodes willing pass content downstream peers 
unfortunately node may realize save expensive upload bandwidth chooses share 
large number nodes self interested refuse contribute system may destabilize 
systems self interested behavior expense system classified rational manipulation failure different perspective rational attack successful systems designed robust class failure 
ideally system perfectly faithful designer specification 
system self interested node follow default strategy strategy yields higher utility node :10.1.1.127.80
achieve faithfulness definition rational follows narrow definition provided 
purposes rational participants interested exploiting resources benefits system 
dan wallach cs rice edu system may employ various measures problem partitioning catch punish incentives 
techniques system perfectly faithful may prevent 
example viable technology designed robust rational manipulation failures bittorrent :10.1.1.14.1911
technology breaks large files chunks downloaded individually reassembled receiver 
receiving nodes contact trade chunks possess 
node employs incremental exchange algorithm leads upload chunks cooperating nodes share selfish ones 
incentives encourage cooperative behavior participating nodes :10.1.1.14.1911
bittorrent completely immune rational manipulation viable practice :10.1.1.127.80
identify analyze create taxonomy rational attacks systems 
examine taxonomy identify corresponding solutions 
sections provide short background economics principles applicable systems specify system model 
sections define taxonomy rational attacks discuss solutions 
final section presents 
economics background analysis cooperation economic models game theory mechanism design 
section briefly review critical terms concepts relate systems 
economic game model interaction players actions player influence outcome players 
mechanism game defines legitimate actions players perform outcome behavior 
outcomes assigned numeric value called utility 
players algorithm determine behavior said follow strategy players world represent nodes participating system 
types nodes 
altruistic nodes cooperate system irrespective considerations 
faulty nodes responding drop messages act arbitrarily 
types nodes 
rational nodes achieve maximal utility actions current knowledge understanding system 
rational nodes attempt disrupt routing censor data corrupt system behavior increases node access shared resources 
nodes described 
irrational nodes strategies incomplete understand mechanism lie outside economic mechanisms system 
denial service censorship attacks examples second form economically irrational behavior mechanism design md process creating games rational behavior players leads outcomes desired designer 
course systems affect behavior rational nodes 
mechanism design impact faulty irrational nodes exclude discussion recognize practical system deployed wild resistant behavior 
course systems robust failure 
impact irrational malicious nodes open research problem discussed castro :10.1.1.118.1870
distributed algorithmic mechanism design subclass md computationally tractable operates centralization 
reason suited systems networks 
assumes node independently reward cooperation nodes penalize misbehavior node limited information global state system 
incentives capabilities model incentives systems limitations 
incentives limited guarantees provide 
incentives strengthens system rational attacks guarantee system faithful 
guaranteed faithful mechanism validated formal proof construction trivial 
goal design systems immune manipulation nodes seeking increased shared resources 
definition rational includes nodes utility function independent utility nodes 
strategies censorship strategies obtain benefit denying utility nodes considered irrational 
second limitation compatible 
limited creating mechanisms computationally tractable distributed computing resources 
nodes expected reward cooperation penalize misbehavior doing difficult trusted global knowledge unavailable 
limitations mind identify types incentives may create faithful system 
type genuine incentives characterized directly cooperation 
genuine incentive ties current behavior payoff inseparable way 
genuine incentives inherently robust rational attacks limit strategies available adversaries 
example genuine incentives incremental exchanges bittorrent 
money effective genuine incentive require efficient schemes potentially network packet transmission require associated payment 
unfortunately current generation systems intended fine grained commerce 
second type incentive artificial incentives evidence cooperation 
incentives weaker genuine counterparts rewarded node appear cooperate 
artificial incentives generally easier create deploy may necessary circumstances genuine incentives feasible 
artificial incentives designed auditing process top enforcement mechanism layered 
decentralized system auditing globally managed 
node aware system policies independently responsible determining peers compliance 
done requiring node publish assertions state audited nodes 
auditing policy type consistent node capable determining behavior system 
auditing system subject vulnerabilities describe section 
service maturation service provides tangible benefit participating nodes 
new participants may obtain spread time obtain maximal roussopoulos suggests highly valuable shared resources inherent incentives valuable ones require extrinsic artificial incentives cooperation 
concept genuine artificial incentives similar focuses mechanism value resources social network resources exchanged 
fig 

service maturation taxonomy benefit immediately lump sum 
termed service characteristic service maturation 
service mature node obtained benefit service provide 
services give possible benefit immediately instantaneous maturation services distribute benefit time progressive maturation 
progressive maturation classified bounded unbounded service known fixed termination benefit pay 
relationship different classes maturation illustrated 
content distribution service instantaneous progressive maturation depending policy 
newly joined node completely download desired content redistributing content peers service instantaneous maturation 
conversely bittorrent progressive maturation allows nodes obtain full content repeated interaction system 
bittorrent benefit ends file download complete progressive maturation bounded 
example service unbounded progressive maturation remote back service 
system benefit distributed time fixed point termination 
correlation instantaneous maturation prisoner dilemma pd progressive maturation iterated prisoner dilemma ipd 
single round pd utility game pay single interaction 
ipd total utility paid participants arbitrary number interactions 
ipd analog concept bounded maturation 
game played players aware ignorant number rounds play 
players perspective game bounded know number rounds 
ipd game degenerates pd game number rounds known 
game theoretic analysis proven rational cooperate single round pd rational cooperate ipd 
services instantaneous maturation extremely attacks described section 
system model convenience define constrained environment suitable explore rational attacks 
model characterized section features common networks 
section break assumptions possible solutions rational attacks 
model described assumptions limitations 
assumption secure node id douceur observes identity system centrally controlled participant simultaneously assume plethora electronic personae :10.1.1.17.1073
identities disposal participant subvert entire network subverting routing primitive 
assume node id model secure ways trust node id creation distribution done centralized mutually trusted agent 
expense node id creation arbitrary cost attached 
participant replace node id infrequently difficulty 
relevance node id creation unrestricted having multiple id aid rational attacker 
assumption trusted software 
system guarantee members conforming software 
trusted computing technologies allow node attest running conforming application 
enforcing trusted software policy technically challenging developing deploying policy undesirable groups ethical practical reasons 
assumption nodes computationally limited 
assume node may resources typical desktop pc 
nodes may subvert machine behave arbitrary ways 
nodes assumed incapable breaking cryptographic primitives global control underlying network 
due potential size systems nodes mutually domains apply limitations model 
limitation node maintains minimal state 
node observations small fraction nodes system 
similarly node maintain state small number nodes system 
limitation second hand information 
nodes trust directly observe inherent reason trust assertion node third party 
accusation trusted evidence independently believable regardless trust 
proofs usually require cooperation accused create 
taxonomy rational attacks motive attacks consider unfairly increased access shared resources 
identify general classes attack misuse resources misuse resources attacks single node nodes colluding advantage 
misuse resources attacker obtain resources producing record misuse attacker safe sanctions 
attacks kind exploit holes auditing policies policy attacks actively disrupt auditing mechanism auditing attack 
policy attacks rational node may exploit auditing policy 
identify examples 
legitimate excuse unable perform service may exploited 
may needed deal edge conditions including crash recovery network interruption packet loss consider remote backup system requires node contribute space consumes 
system policy overly generous recovering nodes crashed requiring prove maintaining quota malicious node may exploit repeatedly claiming crashed 
picking systems require new nodes pay dues requiring give resources system period time consume shared resources :10.1.1.30.6376
policy carefully designed veteran node move node resources required give resources back 
auditing attacks auditing attacks designed prevent auditing system identifying misbehavior 
attacks apply designs auditing artificial incentives 
number examples type attack books auditing relies accounting records tamper resistant difficult forge 
manufactured evidence scenario attacker state non compliance manages produce proof compliance deceptively 
accounting interruption kill auditor node audited attempt interfere auditing node 
accomplished denial service attack worm virus group deception local honesty attack type manufactured evidence attack collusion 
ngan describes accounting system nodes publishing debits credits publicly logs audited nodes peers :10.1.1.112.1276
debts node match credits node making difficult node cook books 
possible single node debt locally honest audit pushing debt 
group nodes books balanced debt jointly 
colluding nodes reciprocate sharing hiding debt 
misuse resources identified misbehaving node may attempt avoid mitigate punishment 
attacks attacker leaves system permanently sanctioned system 
attack generally exploits short maturation high value resources 
scenario attacker obtains resources leaves join content distribution service long obtain object disappear forever 
repeated 
attacker avoids punishment misbehavior assuming new node id releasing penalties associated old reputation 
note attack limited form sybil attack multiple id acquired discarded time :10.1.1.17.1073
class attacks operates entirely services instantaneous maturation 
solutions stated previously ideal system perfectly faithful creating mechanism proving validity difficult 
cases perfectly faithful design may impossible system need perfectly faithful viable 
section describe defenses rational attacks self interested nodes descending order theoretical effectiveness 
eliminate rationality concern certain circumstances forcing nodes may practical desirable 
identify options coercing 
band trust enforced external system 
scenario viable group friends centrally administered machines corporations academic institutions government agencies 
partial centralization may possible introduce aspect centralization induces nodes 
instance central authority require secure node id creation 
bittorrent uses central authority act rendezvous point nodes determine addresses peers 
trusted software user prevented modifying software behave 
software applications closed source difficult modify 
may done trusted computing technologies 
design genuine incentives genuine incentives preferred artificial incentives 
difficult implement context may tempting designer overlook 
genuine incentives eliminate attacks described section simpler artificial incentives require additional enforcement mechanisms 
example consider back system storage policy similar node provide disk space consumes backups 
artificial incentives approach proposed require nodes publish data storing locally prove data possession audit :10.1.1.112.1276
auditing mechanism may vulnerable auditing attacks described section 
genuine incentive remote back service require node data stored network tangled data supposed storing 
nodes occasionally broadcast portions tangled data storing ask owner claim risk deletion 
node keep data claims storing recognize claim requests data 
useful policy allows node reclaim data crash lost local storage 
policy may expose mechanism attack described section 
despite weakness mechanism robust significantly simpler auditing alternative 
improving artificial incentives design artificial incentives desirable solution rational attacks may easiest design service viable solution 
artificial incentives generally entail having welldefined auditing policy 
number design decisions influence incentives 
eliminating instantaneous maturation service instantaneously matures difficult secure rational attacks 
rational node obtained maximum benefit service incentive continue participation 
services instantly mature inherently vulnerable attacks 
node obtains desired utility quickly time auditing scheme attacker 
techniques may help convert instantaneous progressive maturation centralized id creation node id centrally created distributed node forced maintain identity interactions system 
case node steals system leaves face punishment returns 
security deposit node contribute resources period benefit system shared resources 
example system technique :10.1.1.30.6376
limited number peers changing node id incurs cost 
auditing system detect kick misbehaving node sufficiently fast cost changing identity outweighs benefit 
systems node access network limited number neighbors 
attacker neighbors refuse interact effectively removed system 
solution multicast storage accounting :10.1.1.1.4755
reputation perfect global knowledge peer behavior node cooperate time cheated information immediately available peers 
unfortunately perfect global knowledge possible oracle available context networks 
distributed systems may try recreate notion global trusted oracle gossip protocols rating schemes peer endorsements 
mojo nation global reputation system eigentrust describes systems built :10.1.1.11.4846
protecting auditing infrastructure artificial incentives require building protecting auditing infrastructure mechanisms additional complexity may prone design implementation errors 
suggests practices building effective auditing mechanisms force truth told nodes usually believe observe 
secure history techniques may useful generate authenticated records misbehavior remote hosts 
double entry bookkeeping double entry bookkeeping system described earlier section 
create global clock multiple nodes audited may able pass debts node particular node audited appears books balanced 
nodes simultaneously audited provably time may defeat attacks 
secure history techniques may provide approximate solution problem 
explored number rational attacks 
narrow definition rational feel usage justified unique nature attacks 
analysis believe designs incorporate genuine incentives generally simpler robust artificial incentives 
artificial incentives require auditing mechanism complicated difficult construct 
unfortunately difficulty designing implementing genuine incentives context networks artificial incentives essential cooperation parts system 
case avoiding instantaneous maturation eliminates misuse resources attacks 
carefully designed policy robust auditing scheme essential mitigating misuse resources 
farber smith 
secure reliable bootstrap architecture 
proc 
ieee symposium security privacy page san diego ca usa may 
ieee computer society 
axelrod hamilton 
evolution cooperation 
science 
castro druschel ganesh rowstron wallach :10.1.1.118.1870
secure routing structured peer peer overlay networks 
proceedings operating system design implementation boston ma dec 
cohen :10.1.1.14.1911
incentives build robustness bittorrent 
st internation workshop economics systems june 
cox noble 
honor thieves peer peer storage 
sosp proc 
nineteenth acm symposium operating systems principles pages 
acm press oct 
douceur :10.1.1.17.1073
sybil attack 
proceedings st international workshop peer peer systems iptps cambridge massachusetts mar 
friedman resnick :10.1.1.30.6376
social cost cheap pseudonyms 
journal economics management strategy june 
:10.1.1.112.1276
ngan wallach 
economic behavior peer peer storage networks 
workshop economics peer peer systems berkeley ca june 
glassman manasse abadi gauthier sobalvarro 
protocol inexpensive electronic commerce 
world wide web journal fourth international world wide web conference proceedings 
kamvar schlosser garcia molina :10.1.1.11.4846
eigentrust algorithm reputation management networks 
proc 
twelfth international conference world wide web pages may 
maniatis baker 
secure history preservation timeline entanglement 
proc 
th usenix security symposium pages 
usenix association 

ngan nandi singh wallach druschel 
designing incentives compatible peer peer systems 
nd workshop directions distributed computing ii italy june 

ngan wallach druschel 
enforcing fair sharing peer peer resources 
nd international workshop peer peer systems iptps lncs pages berkeley ca feb 
:10.1.1.1.4755
ngan wallach druschel 
peer peer multicast 
nd workshop economics peer peer systems cambridge ma june 
microsoft business overview 
www microsoft com features jul asp 
roussopoulos baker rosenthal 

iptps feb 
parkes 
rationality self interest peer peer networks 
iptps berkeley ca usa feb 
parkes 
specification faithfulness networks rational nodes 
proc 
rd acm symp 
principles distributed computing podc st john canada july 
parkes massoulie :10.1.1.127.80
faithfulness internet algorithms 
proc 
sigcomm workshop practice theory incentives game theory networked systems pins portland usa sept 
tcpa 
building foundation trust pc 
technical report trusted computing platform alliance 
trusted computing frequently asked questions 
www cl cam ac uk rja tcpa faq html 
waldman mazieres 
censorship resistant publishing system document 
proc 
th acm conference computer communications security pages 
acm press nov 
