brusilovsky kobsa nejdl eds adaptive web lncs pp 

springer verlag berlin heidelberg content recommendation systems michael pazzani daniel billsus rutgers university rutgers plaza new brunswick nj pazzani rutgers edu fx palo alto laboratory ave bldg 
palo alto ca billsus com 
chapter discusses content recommendation systems systems recommend item user description item profile user interests 
content recommendation systems may variety domains ranging recommending web pages news articles restaurants television programs items sale 
details various systems differ content recommendation systems share common means describing items may recommended means creating profile user describes types items user likes means comparing items user profile determine recommend 
profile created updated automatically response feedback desirability items user 
common scenario modern recommendation systems web application user interacts 
typically system presents summary list items user user selects items receive details item interact item way 
example online news sites web pages headlines occasionally story summaries allow user select headline read story 
commerce sites page list individual products allow user see details selected product purchase product 
web server transmits html user sees web page web server typically database items dynamically constructs web pages list items 
items available database easily fit web page necessary select subset items display user determine order display items 
content recommendation systems analyze item descriptions identify items particular interest user 
details recommendation systems differ representation items chapter discusses alternative item representations 
recommendation algorithms suited representation discussed 
chapter concludes discussion variants approaches pazzani billsus strengths weaknesses content recommendation systems directions research development 
item representation items recommended user stored database table 
table shows simple database records rows describe restaurants 
column names cuisine service properties restaurants 
properties called attributes characteristics fields variables different publications 
record contains value attribute 
unique identifier id table allows items name distinguished serves key retrieve attributes record 
table 
restaurant database id name cuisine service cost mike pizza italian counter low chris cafe french table medium jacques french table high database depicted table drive web site lists recommends restaurants 
example structured data small number attributes item described set attributes known set values attributes may 
case machine learning algorithms may learn user profile menu interface easily created allow user create profile 
section chapter discusses approaches creating user profile structured data 
course web page typically information shown table text description restaurant restaurant review menu 
may easily stored additional fields database web page created templates display text fields structured data 
free text data creates number complications learning user profile 
example profile indicate probability particular user french restaurant 
added profile user gave positive review french restaurants 
unrestricted text fields typically unique opportunity provide feedback restaurants described caf attentive staff overlooking river extreme example unstructured data may occur news articles 
table shows example part news article 
entire article treated large unrestricted text field 
table 
part newspaper article fine tuning energy plan sacramento calif california energy reserves remaining depleted prepared weekend fine tuning plan gov gray davis says put state power business long time come 
proposal involves partially california largest utilities signing long term contracts years buy electricity 
content recommendation systems unrestricted texts news articles examples unstructured data 
structured data attribute names defined values 
furthermore full complexity natural language may text field including polysemous words word may meanings synonyms different words may meaning 
example article table gray name color power electricity refer underlying concept 
domains best represented semi structured data attributes set restricted values free text fields 
common approach dealing free text fields convert free text structured representation 
example word may viewed attribute boolean value indicating word article integer value indicating number times word appears article 
personalization systems deal unrestricted text technique create structured representation originated text search systems 
formalism words root forms words typically created process called stemming 
goal stemming create term reflects common meaning words compute computation computer computes computers value variable associated term real number represents importance relevance 
value called tf idf weight term frequency times inverse document frequency 
tf idf weight term document function frequency document tft number documents contain term dft number documents collection 
tf log dft 
log table shows tf idf representation called vector space representation complete article table 
terms ordered tf idf weight 
intuition weight terms highest weight occur document documents central topic document 
note terms util stem utility power highest weighted terms capturing meaning 
note description tf idf weights word document traditionally original motivation retrieve documents 
chapter stick original terminology recommendation system documents correspond text description item recommended 
note equations representative class formulae called tf idf 
general tf idf systems weights increase monotonically term frequency decrease monotonically document frequency 
pazzani billsus table 
tf idf representation article table util power electr california debt state partial alert bail price long bond plan term grid blackout bid market fine spiral liar 
course representation capture context word 
loses relationships words description 
example description steak house contain sentence menu vegetarian description vegetarian restaurant mention vegetarian 
manually created structured database cuisine attribute having value vegetarian indicate restaurant vegetarian 
contrast converting unstructured text description structured data presence word vegetarian indicate restaurant vegetarian absence word vegetarian indicate restaurant vegetarian restaurant 
consequence techniques creating user profiles deal structured data need differ somewhat techniques deal unstructured data unstructured data automatically imprecisely converted structured data 
variant words terms sets contiguous words terms 
example article table terms energy reserves power business descriptive content words treated individual terms 
course terms included expect low weights way individually low weights important terms table 
user profiles profile user interests recommendation systems 
profile may consist number different types information 
concentrate types information 
model user preferences description types items interest user 
possible alternative representations description common representation function item predicts likelihood user interested item 
efficiency purposes function may retrieve items interest user 

history user interactions recommendation system 
may include storing items user viewed information user interaction user purchased item rating user item 
types history include saving queries typed user user searched italian restaurant zip code 
content recommendation systems uses history user interactions 
system simply display visited items facilitate user returning items 
second system filter recommendation system item user purchased read 
important history content recommendation systems serve training data machine learning algorithm creates user model 
section discuss different approaches learning user model 
briefly describe approaches manually providing information recommendation systems user customization rule recommendation systems 
user customization recommendation system provides interface allows users construct representation interests 
check boxes allow user select known values attributes cuisine restaurants names favorite sports teams favorite sections news site genre favorite movies 
cases form allows user type words occur free text descriptions items name musician author interests user 
user entered information simple database matching process find items meet specified criteria display user 
limitations user customization systems 
require effort user difficult get users effort 
particularly true user interests change user may follow football season interested 
second customization systems provide way determine order items find matching items display 
shows book recommendations amazon com 
amazon com usually thought example collaborative recommendation see chapter book parts user profile viewed content profile 
example amazon contains feature called favorites represents categories items preferred users 
favorites calculated keeping track categories items purchased users may set manually user 
shows example user customization interface user select categories 
rule recommendation systems recommendation system rules recommend products user history 
example system may contain rule recommends sequel book movie people purchased early item series 
rule recommend new cd artist users purchased earlier cds artist 
rule systems may capture common reasons making recommendations offer detailed personalized recommendations available recommendation systems 
course situations appropriate recommend item user purchased situations 
example system continue recommend item wears expended razor blade print little value recommending cd dvd user owns 
pazzani billsus fig 

book recommendations amazon com 
fig 

user customization amazon com learning user model content recommendation systems creating model user preference user history form classification learning 
training data classification learner divided categories binary categories items user likes items user doesn accomplished explicit feedback user rates items interface collecting feedback implicitly observing user interactions items 
example user purchases item sign user likes item user purchases returns item sign user doesn item 
general tradeoff implicit methods collect large amount data uncertainty user likes item 
contrast user explicitly rates items little noise training data users tend provide explicit feedback small percentage items interact 
shows example recommendation system explicit user feedback 
recommender web interface television recommendation system 
users click thumbs thumbs buttons indicate program recommended 
necessity system requires explicit feedback integrated television infer user interests observing user behavior 
fig 

recommendation system explicit feedback pazzani billsus section reviews number classification learning algorithms 
algorithms key component content recommendation systems learn function models user interests 
new item user model function predicts user interested item 
classification learning algorithms create function provide estimate probability user unseen item 
probability may sort list recommendations 
alternatively algorithm may create function directly predicts numeric value degree interest 
algorithms traditional machine learning algorithms designed structured data 
operate free text free text converted structured data selecting small subset terms attributes 
contrast algorithms designed high dimensional spaces require preprocessing step feature selection 
decision trees rule induction decision tree learners id build decision tree recursively partitioning training data case text documents subgroups subgroups contain instances single class 
partition formed test feature context text classification typically presence absence individual word phrase 
expected information gain commonly criterion select informative features partition tests 
decision trees studied extensively structured data shown table 
feedback restaurants decision tree easily represent learn profile prefers eat expensive french restaurants inexpensive mexican restaurants 
arguably decision tree bias ideal unstructured text classification tasks 
consequence information theoretic splitting criteria decision tree learners inductive bias decision trees preference small trees tests 
shown experimentally text classification tasks frequently involve large number relevant features 
decision tree tendency base classifications tests possible lead poor performance text classification 
small number structured attributes performance simplicity understandability decision trees content models advantages 
kim describe application decision trees personalizing advertisements web pages 
ripper rule induction algorithm closely related decision trees operates similar fashion recursive data partitioning approach described 
despite problematic inductive bias ripper performs competitively state art text classification algorithms 
part performance attributed sophisticated post pruning algorithm optimizes fit induced rule set respect training data 
furthermore ripper supports multi valued attributes leads natural representation text classification tasks individual words text document represented multiple feature values single feature 
essentially content recommendation systems representational convenience rules learned unstructured text documents approach lead powerful classifiers semi structured text documents 
example text contained separate fields email message sender subject body text represented separate multi valued features allows algorithm take advantage document structure natural fashion 
cohen shows ripper classify mail messages user defined categories 
nearest neighbor methods nearest neighbor algorithm simply stores training data textual descriptions implicitly explicitly labeled items memory 
order classify new unlabeled item algorithm compares stored items similarity function determines nearest neighbor nearest neighbors 
class label numeric score previously unseen item derived class labels nearest neighbors 
similarity function nearest neighbor algorithm depends type data 
structured data euclidean distance metric 
vector space model cosine similarity measure 
euclidean distance function feature having small value examples treated feature having large value examples 
contrast cosine similarity function large value corresponding features examples small values 
consequence appropriate text want documents similar topic topic 
fig 

presents personalized news similarity articles previously read pazzani billsus vector space approach cosine similarity function applied text classification applications despite algorithm simplicity performs competitively complex algorithms 
daily learner system uses nearest neighbor algorithm create model user short term interests 
personalized news system uses text similarity basis recommendation 
headlines preceded icon indicates popular item bar similar story stories read user second bar 
fact bars differ shows value personalizing individual 
relevance feedback rocchio algorithm success document retrieval vector space model depends user ability construct queries selecting set representative keywords methods help users incrementally refine queries previous search results focus research 
methods commonly referred relevance feedback 
general principle allow users rate documents returned retrieval system respect information need 
form feedback subsequently incrementally refine initial query 
manner analogous rating items explicit implicit means collecting relevance feedback data 
rocchio algorithm widely relevance feedback algorithm operates vector space model 
algorithm modification initial query differently weighted prototypes relevant non relevant documents 
approach forms document prototypes vector sum relevant non relevant documents 
formula summarizes algorithm formally di qi qi rel di qi user query iteration parameters control influence original query prototypes resulting modified query 
underlying intuition formula incrementally move query vector clusters relevant documents away irrelevant documents 
goal forms intuitive justification rocchio algorithm theoretically motivated basis formula performance convergence guaranteed 
empirical experiments demonstrated approach leads significant improvements retrieval performance 
researchers variation rocchio algorithm machine learning context learning user profile unstructured text 
goal applications automatically induce text classifier distinguish classes documents 
context content recommendation systems assumed initial query exists algorithm forms prototypes classes analogously rocchio approach vector sums documents belonging class 
result algorithm set weight vectors proximity unlabeled documents assign class membership 
similar relevance feedback version rocchio algorithm rocchio classification approach theoretic underpinnings performance convergence guarantees 
linear classifiers algorithms learn linear decision boundaries hyperplanes separating instances multi dimensional space referred linear classifiers 
large number algorithms fall category successfully applied text classification tasks 
linear classifiers described common representational framework 
general outcome learning process dimensional weight vector dot product ndimensional instance text document represented vector space model results numeric score prediction 
retaining numeric prediction leads linear regression approach 
threshold convert continuous predictions discrete class labels 
general framework holds linear classifiers algorithms differ training methods derive weight vector example equation known widrow hoff rule delta rule gradient descent rule derives weight vector incremental vector movements direction negative gradient example squared error 
direction error falls rapidly 
wi wi xi yi xi equation shows weight vector derived incrementally 
inner product instance xi weight vector wi algorithm numeric prediction instance xi 
prediction error determined subtracting instance known score yi predicted score 
resulting error multiplied original instance vector xi learning rate form vector subtracted weight vector moves correct prediction instance xi 
learning rate controls degree additional instance affects previous weight vector 
alternative algorithm experimentally shown outperform approach text classification tasks features exponentiated gradient algorithm 
kivinen warmuth prove bound error depends logarithmically number features 
result offers theoretic argument performance text classification problems typically high dimensional 
important advantage learning schemes linear algorithms performed line current weight vector modified incre pazzani billsus mentally new instances available 
crucial advantage applications operate real time constraints 
important note approaches tend converge hyperplanes separate training data accurately hyperplane generalization performance optimal 
related approach aimed improving generalization performance known support vector machines 
central idea underlying support vector machines maximize classification margin distance decision boundary closest training instances called support vectors 
series empirical experiments variety benchmark data sets indicated linear support vector machines perform particularly text classification tasks 
main reason margin maximization inherently built overfitting protection mechanism 
reduced tendency overfit training data particularly useful text classification algorithms domain high dimensional concepts learned limited training data scenario prone overfitting 
probabilistic methods na bayes contrast lack theoretical justifications vector space model probabilistic text classification approaches 
section describes example na bayesian classifier 
early probabilistic classifier text classification performance reported maron 
today algorithm commonly referred na bayesian classifier 
researchers recognized na bayes exceptionally performing text classification algorithm frequently adopted algorithm 
algorithm popularity performance text classification applications prompted researchers empirically evaluate compare different variations na bayes appeared literature 
summary mccallum nigam note frequently formulations na bayes multivariate bernoulli multinomial model 
models share principles 
assumed text documents generated underlying generative model specifically parameterized mixture model class corresponds mixture component parameterized disjoint subset sum total probability mixture components determines likelihood document 
parameters learned training data posterior probability class membership evidence test document determined bayes rule di di content recommendation systems principles hold na bayes classification general multivariate bernoulli multinomial models differ way di cj estimated training data 
multivariate bernoulli formulation derived structured data mind 
text classification tasks assumes document represented binary vector space words vocabulary element bit vector indicates word appears document 
na bayes assumption probability word occurring document independent words class label di cj expressed simple product bayes optimal optimal estimates wt cj determined word occurrence counting data di contrast binary document representation multivariate bernoulli model multinomial formulation captures word frequency information 
model assumes documents generated sequence independent trials drawn multinomial probability distribution 
na bayes independence assumption allows di cj determined individual word probabilities nit nit number occurrences word wt document di 
word frequencies account maximum likelihood estimates wt cj derived training data di pazzani billsus empirically multinomial na bayes formulation shown outperform multivariate bernoulli model 
effect particularly noticeable large vocabularies mccallum nigam 
na bayes assumption class conditional attribute independence clearly violated context text classification na bayes forms 
domingos pazzani offer possible explanation paradox showing class conditional feature independence necessary condition optimality na bayes 
na bayes classifier content recommendation systems including syskill webert 
trends content filtering belkin croft surveyed content recommendation systems noted technology related information retrieval tf idf rocchio method 
early content recommendation term query refer user models 
view user model saved query set saved queries retrieve additional new information interest user 
representative early systems include system bellcore new technical reports related previously read reports recommended songs multimedia player profile learned user feedback prior songs played 
creation rapid growth world wide web mid access vast amounts information possible created problems locating fig 

syskill webert system learns model user preference web pages content recommendation systems identifying personally relevant information 
machine learning community applied traditional machine learning methods user modeling document interests 
methods reduced text training data highly relevant words techniques information theory tf idf 
representative systems included webwatcher syskill webert 
limitations extensions different approaches learning model user interest content recommendation content recommendation system give recommendations content contain information distinguish items user likes items user doesn 
recommending items jokes poems isn information word frequency model user interests 
possible tell lawyer joke chicken joke word frequencies difficult distinguish funny lawyer joke lawyer jokes 
consequence recommendation technologies collaborative recommenders situations 
situations recommending movies restaurants television programs structured information genre movie actors directors content system 
information supplemented opinions users 
way include opinions users frameworks discussed section add additional data associated representation examples 
example basu add features examples indicate identifiers users item 
ripper applied resulting data learn profiles collaborative content features user science fiction movie user likes 
strictly content system technology content recommenders learn user model 
billsus pazzani shown machine learning algorithm may basis collaborative filtering transforming user ratings attributes 
chapter book discusses variety approaches combining content collaborative information recommendation systems 
final usage content recommendations worth noting 
simple content rules may filter results methods collaborative filtering 
example case people buy buy adult videos important recommend adult items particular application 
similarly strictly content systems recommend items stock 
summary content recommendation systems recommend item user description item profile user interests 
user profile may entered user commonly learned feedback user provides items 
variety learning algorithms adapted learning user profiles choice learning algorithm depends representation content 
pazzani billsus 
ali van stam making show recommendations distributed collaborative filtering architecture 
proceedings tenth acm sigkdd international conference knowledge discovery data mining 
seattle wa 

allan carbonell doddington yamron yang topic detection tracking pilot study final report 
proceedings darpa broadcast news transcription understanding workshop 
va 
balabanovic shoham fab content collaborative recommendation 
communications association computing machinery 
basu hirsh cohen recommendation classification social content information recommendation 
proceedings th national conference artificial intelligence madison wi 
belkin croft information filtering information retrieval sides coin 
communications acm 
billsus pazzani learning collaborative information filters 
proceedings international conference machine learning 
morgan kaufmann publishers 
madison wi 
billsus pazzani chen learning agent wireless news access 
proceedings international conference intelligent user interfaces 
burke hybrid web recommender systems 
brusilovsky kobsa nejdl 
eds adaptive web methods strategies web personalization 
lecture notes computer science vol 

springer verlag berlin heidelberg new york volume 
cohen fast effective rule induction 
proceedings twelfth international conference machine learning tahoe city ca 

cohen learning rules classify mail 
papers aaai spring symposium machine learning information access 
cohen hirsh joins generalize text classification whirl 
proceedings fourth international conference knowledge discovery data mining new york ny 
domingos pazzani independence conditions optimality simple bayesian classifier 
machine learning 

duda hart pattern classification scene analysis 
new york ny wiley sons 
foltz dumais personalized information delivery analysis information filtering methods 
communications acm 
ittner lewis ahn text categorization low quality images 
symposium document analysis information retrieval las vegas nv 
joachims freitag mitchell webwatcher tour guide world wide web 
proceedings th international joint conference artificial intelligence 
nagoya japan 
joachims text categorization support vector machines learning relevant features 
european conference machine learning chemnitz germany 
kim lee shaw chang nelson application decision tree induction techniques personalized advertisements internet 
international journal electronic commerce 
kivinen warmuth exponentiated gradient versus gradient descent linear predictors 
information computation content recommendation systems 
lewis schapire callan papka training algorithms linear text classifiers 
proceedings th annual international acm sigir conference research development information retrieval konstanz germany 
lewis na bayes independence assumption information retrieval 
european conference machine learning chemnitz germany 
architecting personal delivery multimedia information 
communications acm 
mandel ellis support vector machine active learning music retrieval 
acm multimedia systems journal 
maron automatic indexing experimental inquiry 
journal association computing machinery 
mccallum rosenfeld mitchell ng improving text classification shrinkage hierarchy classes 
proceedings international conference machine learning 
morgan kaufmann publishers 
madison wi 
mccallum nigam comparison event models naive bayes text classification 
aaai icml workshop learning text categorization technical report ws aaai press 
mitchell machine learning 
mcgraw hill 
nigam mccallum thrun mitchell learning classify text labeled unlabeled documents 
proceedings th international conference artificial intelligence madison wi 
pazzani billsus learning revising user profiles identification interesting web sites 
machine learning 
porter algorithm suffix stripping 
program 
quinlan induction decision trees 
machine learning 
quinlan programs machine learning 
morgan kauffman 
rocchio relevance feedback information retrieval 
salton ed 
smart system experiments automatic document processing 
nj prentice hall 
salton automatic text processing 
addison wesley 
schafer herlocker sen collaborative filtering recommender systems 
brusilovsky kobsa nejdl 
eds adaptive web methods strategies web personalization 
lecture notes computer science vol 

springer verlag berlin heidelberg new york volume 
vapnik nature statistical learning theory 
springer new york 
widrow hoff adaptive switching circuits 
convention record 
yang pedersen comparative study feature selection text categorization 
proceedings fourteenth international conference machine learning nashville tn 
yang evaluation statistical approaches text categorization 
information retrieval 
