control systems integrating logic dynamics constraints alberto manfred morari institut eth swiss federal institute technology ethz etl ch rich switzerland tel fax morari aut ee ethz ch ifa tech 
report aut proposes framework modeling controlling systems described interdependent physical laws logic rules operating constraints denoted mixed logical dynamical mld systems 
described linear dynamic equations subject linear inequalities involving real integer variables 
mld systems include constrained linear systems finite state machines classes discrete event systems nonlinear systems approximated piecewise linear functions 
predictive control scheme proposed able stabilize mld systems desired trajectories fulfilling operating constraints possibly take account previous qualitative knowledge form heuristic rules 
due presence integer variables resulting line optimization procedures solved mixed integer quadratic programming efficient solvers developed 
examples simulation case study complex gas supply system reported 
keywords hybrid systems predictive control dynamic models binary logic systems boolean logic mixed integer programming optimization problems 
author correspondence addressed concept model system traditionally associated differential difference equations typically derived physical laws governing dynamics system consideration 
consequently control theory tools developed systems particular systems evolution described smooth linear nonlinear state transition functions 
hand applications system controlled constituted parts described logic instance switches valves gears speed selectors evolutions dependent rules 
control systems left schemes heuristic rules inferred practical plant operation 
literature researchers started dealing hybrid systems hierarchical systems constituted dynamical components lower level governed upper level logical discrete components 
class systems design procedures proposed naturally lead hierarchical hybrid control schemes continuous controllers lower level calibrated dynamical subsystem order provide regulation tracking properties discrete controllers supervising resolving conflicts planning strategies higher level 
applications precise distinction different hierarchic levels possible especially dynamical logical facts dramatically interdependent 
class systems clear design feedback controllers systematically obtain models 
proposes framework modeling controlling models systems described interacting physical laws logic rules operating constraints 
techniques described propositional logic transformed linear inequalities involving integer continuous variables 
allows arrive mixed logical dynamical mld systems described linear dynamic equations subject linear mixed integer inequalities inequalities involving continuous binary logical variables 
include physical discrete states continuous integer inputs continuous binary auxiliary variables 
mld systems generalize wide set models constrained linear systems finite state machines classes discrete event systems nonlinear systems nonlinearities expressed suitably approximated piecewise linear functions 
mixed integer optimization techniques investigated chemical process synthesis 
feedback control purposes propose predictive control scheme able stabilize mld systems desired trajectories fulfilling operating constraints possibly take account previous qualitative knowledge form heuristic rules 
moving horizon optimal control model predictive control widely adopted tracking problems systems subject constraints 
methods receding horizon philosophy sequence control actions chosen prediction evolution system applied plant new measurements available 
new sequence determined replaces previous 
sequence evaluated means optimization procedure take account objectives optimize tracking performance protect system possible constraint violations 
context due presence integer variables optimization procedure mixed integer quadratic programming problem efficient solvers exist 
attempt line mixed integer programming control dynamic systems subject logical conditions appeared reconsidered 
attempts combining mpc hybrid control appeared 
organized follows 
section basic facts propositional calculus boolean algebra mixed integer linear inequalities reviewed 
tools section motivate definition mld systems provide examples systems modeled framework 
stability definitions related issues discussed section 
section deals optimal control mld systems shows heuristics eventually taken account 
results section develop mixed integer predictive controller essentially solves online time step optimal control problem apply optimal solution aforementioned receding horizon philosophy 
brief description available solvers section 
simulation study complex gas supply system reported described section 
propositional calculus linear integer programming standard notation adopt capital letters xi represent statements temperature hot 
xi commonly referred literal truth value true false 
boolean algebra enables statements combined compound statements means connectives implies exclusive comprehensive treatment boolean calculus digital circuit design texts 
rigorous exposition see 
connectives defined means truth table reported table 
connectives may similarly defined 
connectives satisfy properties table truth table see transform compound statements equivalent statements involving different connectives simplify complex statements 
known connectives defined terms subset instance said complete set connectives 
report properties sequel correspondingly associate literal xi logical variable value xi 
integer programming advocated efficient inference engine perform automated deduction 
propositional logic problem statement proved true set compound statements involving literals 
xn fact solved means linear integer program suitably translating original compound statements linear inequalities involving logical variables fact propositions linear constraints easily seen equivalent equivalent equivalent equivalent equivalent equivalent equivalent borrow computational inference technique model logical parts processes switches discrete mechanisms combinational sequential networks heuristics knowledge plant operation integer linear inequalities 
interested systems logic dynamics wish establish link worlds 
particular need establish build statements operating events concerning physical dynamics 
shown moment mixed integer linear inequalities linear inequalities involving continuous variables rn logical indicator variables 
consider statement rn linear assume bounded set define max min theoretically estimate suffices purpose 
realistic estimates provide computational benefits 
easy verify true iff true iff true iff small tolerance typically machine precision constraint regarded violated 
follows true iff true iff report procedures transform products logical variables continuous logical variables terms linear inequalities require auxiliary variables 
product term replaced auxiliary logical variable 
equivalent term rn replaced auxiliary real variable satisfies 
defining alternative methods formulations transforming propositional logic problems equivalent integer programs exist method uniformly better 
instance compare approach approach utilizes conjunctive normal forms cnf dn di pmi pi xi xi 
known boolean expression converted cnf laws distribution negation de morgan 
authors conclude choice efficient modeling approach dependent form logical statements 
clear preprocessing reduction propositional logic problem produce large benefits order computationally solve resulting mixed integer program 
similar problem problem finding minimal forms known digital network design realm need arises minimize number gates connections implementation cost 
variety methods exist perform task 
reader referred chap 
detailed exposition 
mixed logical dynamic mld systems previous section provided tools transform logical facts involving continuous variables linear inequalities 
tools express relations describing evolution systems physical laws logic rules operating constraints interdependent 
giving general definition class systems consider system 
condition associated binary variable transformation equation expressed inequalities small positive scalar 
rewritten defining new variable expressed evolution system ruled linear equation subject linear constraints 
example generalized describing mixed logical dynamic mld systems linear relations atx tu tz ctx tu tz tz tu tx xc xc nc nc state system components distinguished continuous xc yc yc pc pc output vector uc uc mc mc command input collecting continuous commands uc binary commands discrete commands assuming values finite set reals modeled commands described rrc represent respectively auxiliary logical continuous variables 
principle inequality equation satisfied values 
hand wish andy uniquely determined andu 
aim introduce definition definition denote set indices 
denotes th column 
idt jdt defined analogously collecting positions nonzero columns 
idt jt jdt 
mld system said posed satisfy rrc andx ii 
exists mapping dit th component dit exists mapping zj 
mld system said completely posed addition 
jt 
rc note functions dit implicitly defined inequalities 
note functions nonlinear nonlinearity caused integer constraint 
fact integer constraint principle superposition effects hold tz tu tx tz tu tx implies sequel shall say auxiliary variable zj posed jt indefinite 
shall assume system posed 
typically model derives real system need checking 
simple numerical test checking property reported appendix 
note property entails assigned andy uniquely defined allows definition trajectories space space system 
particular denote trajectory generated accordance applying command inputs 
initial state 
order transform propositional logic linear inequalities physical constraints plant operation saturating actuators safety conditions 
include control problem constraint xu xu fx gu typically physical constraints specified continuous components expressed cartesian product cc cc xc nc mc uc hc note constraint fx gu form 
express logical facts involving continuous state variables tools section define upper lower bounds assume assumption polytope note assuming bounded restrictive practice 
fact continuous inputs states bounded physical reasons logical input state components intrinsically bounded 
developments meaningful addition nonempty interior 
sequel shall denote standard euclidean norm 
note pure logical vectors nonnegative integer corresponding number nonzero components symbol denote ball 
observe class mld systems include important classes systems linear hybrid systems sequential logical systems finite state machines automata nc mc pc nonlinear dynamic systems nonlinearity expressed combinational logic classes discrete event systems nc pc constrained linear systems rc linear systems rc eit terms combinational sequential borrowed digital circuit design jargon 
remaining part section devoted show detail examples systems expressed mld systems 
piece wise linear dynamic systems consider piece wise linear time invariant dynamic system 
asx 
variables satisfying exclusive condition 
system completely posed iff partitioned parts ci ci cj ci defined ci frequent representation arises gain scheduling linear model consequently controller switched finite set models changes operating conditions 
nonlinear models approximated model form approximation capability limited computational reasons number logical variables large handled 
sets ci polytopes form ci ti implication corresponds ni rj tj easily tackled 
eq 
implied omitted 
fact 
exists implies cj contradiction 
eqs 
equivalent ti vector defined eq 
rewritten max ti aix unfortunately nonlinear involves products logical variables states inputs 
procedure adopted translate equivalent mixed integer linear inequalities 
aim set zi zi aix define vectors 
mn mn mj max 
max ai jx bi ju xu mj min 
min ai jx bi ju xu denotes th row note assumption finite estimated exactly computed solving ns linear programs 
equivalent zi zi zi zi aix aix represent form 
number variables reduced setting log denoting smallest integer greater equal 
consider instance andi 
eq 
replaced condition provides extra constraint note number logical variables minimized longer constrained strong exclusive condition 
hand number inequalities increased ineq eq 

computational benefits arising adopting depend particular algorithm solver 
instance enumerative methods take great advantage reduction logical variables easy predict effect branch bound algorithms 
piece wise linear output functions practical applications frequently happens process modeled linear dynamic system cascaded nonlinear output function 
principle nonlinear function approximated piece wise linear 
saturation function sat cx role henceforth introducing auxiliary logical variables systems approximated mld models 
example consider system ax bu sat cx sat standard saturation function see fig 
sat introduce auxiliary logical variables defined cx cx cx cx setting maxx cx minx cx logical conditions rewritten respectively related logical equations cx cx cx cx cx rewritten introduce auxiliary variable sat cx 
clear equivalently cx cx cx cx easy verify relations define correctly case cx explicitly taken account 
output relation represented linear inequalities consequently belongs class mld systems 
modeling non differentiable functions integer variable discontinuity point non differentiability discussed 
discrete inputs typically control laws provide command inputs ranging continuum 
applications frequently cope command inputs inherently discrete 
quantization process neglected instance control law implemented digital microprocessor sufficiently high number bits 
hand applications intrinsically discrete command variables switches gears speed selectors number individuals case quantization error neglected may lead poor performance instability 
type commands easily modeled logical variables 
consider instance system ax bu defining logical inputs auxiliary variable follows admits equivalent representation ax bz uc alternative defining dimensional logic input transformed ax qualitative outputs systems having qualitative outputs transformed form 
consider instance example thermal system ax bu cold cool normal warm hot hot qualitative properties conventionally enumerated associated integer depicted fig 

similarly procedure adopted define hot hot warm normal cool cold qualitative output corresponding discrete output function temperature saturation function define logical variables satisfy logical conditions logical conditions rewritten form 
set automaton driven conditions underlying dynamic system represents equivalent output system take different values form 
type modeling useful include heuristics rules thumb optimal control problems detailed section 
bilinear systems consider class nonlinear systems form ax bu xc ui assume input quantized transformed mld system 
sake simplicity consider andlet 
similarly eq 

ax bd 
introducing auxiliary continuous vector bilinear system rewritten form recalling 
finite state machines automata consider finite state machines events generated underlying lti dynamic system 
consider instance simple automaton linear system depicted fig 
described relations xc xc xc bu finite state remains long continuous state xc 
xc digital impulse 
automaton dynamics driven events generated underlying linear system 
introduce auxiliary logical variables defined eq 
rewritten xc xc xc small tolerance machine precision 
follows 
mixed integer linear inequalities define automaton part system mld system 
example describes associate finite automaton similar depicted fig 
hysteresis functions 
physical systems affected hysteresis phenomena frequently occur different contexts magnetic electrical easily modeled mld form 
note time variant discrete time linear systems emulated mld systems modeling time output digital clock 
fact corresponds finite state machine free evolution 
stability mld systems treat systems having real logical states evolve bounded set adapt standard definitions stability see mld systems 
definition rnc said equilibrium state input ue rmc cand xe ue xe xe ue said equilibrium pair 
definition equilibrium pair xe ue xe rnc said stable xe ue xe 
definition equilibrium pair xe ue xe rnc said asymptotically stable xe stable xe ue xe definition equilibrium pair xe ue xe rnc said exponentially stable xe asymptotically stable addition xe ue xe xe 
notice asymptotic convergence logical component equivalent existence finite time te te 
consequently local stability properties restated continuous part xc setting note exists set continuous part equilibrium state xe perturbing xc set equations motion satisfied equilibrium pair xe ue time invariant case corresponding equilibrium value established posed components auxiliary variables functions di zj introduced earlier 
addition indefinite components relax concept equilibrium definition definition xe ue equilibrium pair mld system system posed 
assume limt limt jt exist 
ze corresponding equilibrium auxiliary variables 
auxiliary vector admissible zj ze te tz tue te note time invariant mld systems jt reduces set linear inequalities 
space example state 
evolution system 
time logical variable 
consider system cos sin sin cos auxiliary variables eq 
rewritten form obtained setting respectively properly small positive scalar 
evolution starting depicted fig 

easy prove origin exponentially stable set domain attraction 
defines new system having state equilibria shown fig 
keeps oscillating proceeds 
optimal control mld systems mld system form consider problem problem initial state final time find exists control sequence 
transfers state xf minimizes performance index subject xf mld system dynamics qx qi 
weight matrices offset vectors 
note andq diagonal second quadratic term equivalent linear term ut 
note typically sets xf accordingly 
problem solved mixed integer quadratic programming problem 
fact compact notation convention 
time invariant systems solution formula relation andx apparently linear hide nonlinear dependence observed earlier 
plugging defining vectors space time optimal control system 
time time obtain equivalent formulation optimization problem min subj 
matrices si fi suitably defined 
existence uniqueness continuity respect optimal control sequence investigated feasibility uniqueness continuity respect parameters solution problem 
example consider mdl system example 
order optimally transfer state xf performance index minimized subject mld system dynamics weights andx xf 
resulting optimal trajectories shown fig 

fig 
shows effect varying ratio weights particular input weight takes values 
space time optimal control system 
comparison different relative weights 
soft constraints constraint priority practical applications common distinguish hard constraints violated instance motor voltage limits soft constraints violation allowed temperature bounds penalized 
dealing soft constraints fulfill requirements 
set feasible solutions hard constrained problem nonempty minimizer belong set 
second set empty able decide trade cost constraint violation 
consider optimization problem min sx subj 
ax set bounded polyhedron 
simplest way soften constraints modify problem min sx subj 
ax rs vector slack variables vector components corresponding constraint hard soft large penalty weight matrix 
problem formulation requirement guaranteed 
alternative define logical variable 
minimize sx respect max sx decides trade cost constraint violation feasible solution exists hard constrained problem 
constraint violation considered levels priority introducing variables 
letting ir ir minimizing sx note soft constraints constraint priority directly considered mld structure 
fact constraints prioritized incorporating slack vector vector auxiliary logic variables 
inthe vector 
integrating heuristics logic dynamics shown process synthesis logic heuristics integrated propositional logic 
type qualitative knowledge useful purposes 
cases solutions reflect operator experience simply preferred 
second may help expedite search feasible solutions instance generating base case 
hand qualitative knowledge typically just rules thumb may hold lead solutions far away optimality contradictory 
heuristic rules expressed soft logic facts considering clause expresses rule clause disjunction conversion linear inequalities straightforward instance yields interpreted slack variable allows violation inequality 
involves variables case variable treated continuous nonnegative variable despite fact take values 
example consider thot equivalent thot known upper bound thot binary variable represents violation heuristics 
fulfillment heuristic rules impossible destroys optimality violate weaker uncertain set rules 
discrimination weak strong rules obtained penalizing different weights wi violation variables vi 
penalty wi nonnegative number expressing uncertainty corresponding logical expression 
uncertain rule designer experience lower penalty violation 
optimal control problem hand add linear term minimize respect alternative performance index mixed heuristics violation penalties find vector minimizes subject linear constraints involving andv mixed integer linear problem milp set minimize respect 
corresponds preprocessing set logical dynamical heuristic conditions order obtain feasible set better takes account qualitative knowledge 
predictive control mld systems observed previous sections large quantity situations modeled mld structure 
interesting theoretical practical point view ask mld system stabilized equilibrium state track desired trajectory possibly feedback control 
finding control law easy task system linear smooth 
section show predictive control provide successful tools perform task 
sake notational simplicity index dropped assuming system time invariant 
consider equilibrium pair xe ue andlet ze sense definition 
components ze correspond desired steady state values indefinite auxiliary variables 
current time current state 
consider optimal control problem min subj 
vt ue ze xe ye xe ax cx similarly defined 
assume moment optimal solution 
exists 
receding horizon philosophy set disregard subsequent optimal inputs 
repeat optimization procedure time 
control law referred mixed integer predictive control law 
note xe ue fixed consistent steady state vectors ze obtained choosing feasible points domain described instance solving mixed integer linear program milp 
formulations predictive controllers mld systems proposed 
instance number control degrees freedom reduced nu setting nu nu 
contexts amounts sizing optimization problem price reduced performance computational gain partial andz variables remain optimization 
infinite horizon formulations inappropriate practical theoretical reasons 
fact approximating infinite horizon large computationally prohibitive number variables involved depends linearly quadratic term oscillate exemplified example fig 
asymptotically stabilizing input sequences ruled corresponding infinite value performance index happen input sequence finite cost 
theorem xe ue equilibrium pair ze definitely admissible 
assume initial state feasible solution problem exists time 
andq law stabilizes system lim xe lim ue lim lim ze lim ye fulfilling dynamic relational constraints 
note convergence follows 
proof 
proof easily follows standard lyapunov arguments 
denote optimal control sequence 
denote corresponding value attained performance index sequence 
ue 
feasible time vectors 
ze ze definitely admissible 
xe ue ze ye decreasing 
lower bounded exists limt implies 
term sum xe ue ze ye converges zero proves theorem 

despite fact effective methods exist compute global optimal solution problem see section worst case solution time depends exponentially number integer variables 
principle limit scope application proposed method slow systems real time implementation sampling time large allow worst case computation 
proof theorem require evaluated control sequences global optima 
fact eq 
just requires 
sequence available previous computation performed time initialize solver time 
solver interrupted intermediate step obtain suboptimal solution satisfies 
instance branch bound methods solve problem new control sequence selected solution qp subproblem integer feasible lowest value 
obviously case tracking performance deteriorates 

general implicitly defined functions di zj continuous convergence posed components inferred convergence instance variable defined corresponding function discontinuous 

inferred asymptotic behavior indefinite components 
behavior unweighted indefinite variables clearly little interest 

stability result proved theorem affected presence positive linear terms 
instance ze constraint term form included 
soft constraints heuristic rules taken account modifying performance index detailed section corrupting warranty stability 

note receding horizon mechanism approach clearly robust pure open loop optimal control 
hand control adopted line computation input open loop trajectories 
duration time steps batch operation designed 
short horizons implemented require solution problems size hand pure optimal control require solution problem size assuming worst case exponential dependence size problem complexity second equivalent versus gain computational may paid price deteriorated performance due gap open loop performance objective minimized step actual performance 
note gap increases prediction horizon gets shorter 
example space time time time closed loop regulation problem system 
closed loop trajectories thick lines optimal solution thin lines right plots 
consider mdl system examples 
order stabilize system origin feedback control law adopted parameters ue ze xe ye andthe weights example fig 
fig 
shows resulting trajectories 
trajectories obtained time solving optimal control problem reported right plots thin lines 
consider desired sin output 
apply controller exception 
steady state parameters selected ye ue xe ze consistently 
fig 
shows resulting closed loop trajectories 
notice constraint prevents system tracking peaks sinusoid output trajectory chopped 
tracking problems far assumed equilibrium pair xe ue corresponding definitely admissible pair ze 
tracking problems goal output follows trajectory 
assume known advance 
time xe ue ze space time time time closed loop tracking problem system 
corresponding computed solving min xe ue ze ye xe ue ze xe axe ue ze subj 
ze ue xe ye ue ze 
parameter small positive number needed ensure strict convexity value function 
procedure allows define set point ye close possible compatibly constraints 
solvers exception particular structures mixed integer programming problems involving variables classified np complete means worst case solution time grows exponentially problem size 
despite combinatorial nature algorithmic approaches proposed applied successfully medium large size application problems major ones cutting plane methods new constraints cuts generated added reduce feasible domain optimal solution 
decomposition methods mathematical structure models exploited variable partitioning duality relaxation methods 
logic methods disjunctive constraints symbolic inference techniques utilized expressed terms binary variables 
branch bound methods combinations explored binary tree feasible region partitioned sub domains systematically valid upper lower bounds generated different levels binary tree 
problems indicates generalized benders decomposition outer approximation lp qp branch bound branch bound major solvers 
see review methods 
authors agree fact branch bound methods successful mixed integer nonlinear programs 
numerical experience reported compares different approaches branch bound results superior order magnitude 
described branch bound algorithm consists solving generating new qp problems accordance tree search nodes tree correspond qp subproblems 
branching obtained generating child nodes parent nodes branching rules instance priori specified priorities integer variables amount integer constraints violated 
nodes labeled pending corresponding qp problem solved node fully explored 
algorithm stops nodes 
success branch bound algorithm relies fact subtrees excluded exploration corresponding root nodes 
happens corresponding qp subproblem infeasible integer solution obtained 
second case corresponding value cost function serves upper bound optimal solution problem nodes having greater optimal value lower bound 
simulation results reported obtained matlab fortran package solver 
package handle dense sparse problems 
proven particularly effective solve optimal control problems mld systems 
fact blast furnace coke oven converter br plants plants cr plants holder holder holder process consideration ms bs cs gas supply system 
joint electric power plant boiler boiler boiler boiler boiler heavy oil constraints triangular structure addition constraints generated representation logic facts involve variables lead sparse matrixes 
case study control gas supply system theoretical framework modeling controlling mld systems developed previous sections applied kawasaki steel works gas supply system described 
gas supply system system depicted fig 

steel works generates product gas blast furnace gas gas coke oven gas gas mixed gas gas converter gas 
known disturbances flow rates fbr fcr fmr fluctuate time 
order provide stable supply high gas fbs fcs fms joint electric power plant holders dampen product gas flows 
electric power plant constituted 
gas heavy oil fuel gas 
gas mixed gas increase thermal values gas 
desired save heavy oil supplying product gas stationary rate 
physical quantities describing model numerical values parameters reported table respectively 
table physical quantities symbol meaning unit fbr fcr fmr residual gas flow rates vb vc vm gas volume held gas holder fm gas flow rate produced fbs fcs fms gas flow rates supplied electric plant evaluated value gas yen kcal profit obtained combustion gas yen loss due gas discharge shortage holder yen loss combustion gas hours yen penalty suppressing fluctuation gas amount held yen penalty switched simultaneously yen order model system discrete time gas flow rates assumed constant sampling period dynamics gas holders vb vb fbr fbs fm vc vc fcr fcs fm vm vm fmr fms fm amount gas holder exceed upper lower limits vb vc vm due boiler operation constraints joint electric power plant table model parameters symbol meaning value unit mixing ratio gas upper limit gas holder km lower limit gas holder km standard value gas holder km upper limit gas holder km lower limit gas holder km standard value gas holder km upper limit gas holder km lower limit gas holder km standard value gas holder km bs upper limit gas supply km bs lower limit gas supply km cs upper limit gas supply km cs lower limit gas supply km bi upper limit gas kcal bi lower limit gas kcal cs minimum value gas km qb gas kcal qc gas kcal qm gas kcal sampling time horizons steps input constraints hold supply amounts gas gas addition bs fbs bs cs fcs fcs fms fm thermal balance gas mixed gas considering value increased gas fms fbs satisfy constraint cs bi qb fbs bi qm fms bi qb fbs bi qm fms minimum amount gas required combustion gas holder define number burning gas cs fcs cs cs fcs cs cs fcs cs cs fcs fcs assumed gas burn gas 
number expressed sum variables defined relations fcs cs fcs cs fcs cs transforming linear inequalities fcs cs cs cs fcs cs fcs cs fcs cs cs cs fcs cs fcs cs fcs cs cs cs fcs cs fcs cs properly small positive constant 
specifications taken account 
combustion gas practiced continued hours 

number combustion gas decreases number decrease time simultaneous multiple needs high penalty 
order take account conditions define introduce variables 
order take account second specification logic variable recalling note formulation assumes activated predefined hierarchy complex description distinguishes numbers burning gas adopted 
order take account profit defined consider profit variable qc fcs cs tn maximized 
achieved minimizing new slack variable defined inequalities pe bs br cs cr ms time time predictive control gas supply system thick lines fbs fcs fms fm vb vc vm thin lines fbr fcr fmr dashed lines pe goal profit value defined 
gas supply system represented time varying mld system described vb fbs fbr vc fcs fcr vm fms fmr fm eqs 

predictive control gas supply system actual plant operation human operators try keep volume gas holder constant possible normal values respectively slack variable time profit time predictive control gas supply system slack variable profit variable thick lines pe thin line 
natural define values set points vb vc vm 
approach described sect 
requires existence equilibrium pair principle step gas flow disturbances allow definition equilibrium 
assume fbr fbr fbr fcr defined analogously relying fact receding horizon mechanism mitigate restrictive assumption disturbances disturbances case obtained controlled processes 
defining ne asthe number fed constant gas rate fcr set xe ne ne ue ze define quantity pe accordingly 
note terminal constraint xe feasibility guaranteed gas flow disturbances constant table profit loss coefficients line optimization 
symbol value symbol value feedback control law adopted order operate gas supply bs br cs cr ms time time predictive control gas supply system ts 
thick lines fbs fcs fms fm vb vc vm thin lines fbr fcr fmr dashed lines system 
addition add linear term 
observed modification alter stability results theorem 
resulting trajectories depicted fig 
correspond prediction horizon diag diag diag diag 
order maximize profit tempted remove constraint 
hand modification stability properties longer guaranteed 
converging gas flow disturbances compromise obtained introducing constraint finite time ts imposing optimization problem constraints ts 
way stability restored feasibility preserved 
fig 
show results obtained setting ts 
note risky approach consisting maximizing profit constraining slack variable time profit time predictive control gas supply system slack variable profit variable thick lines pe thin line 
aggressive transient behavior witnessed vb vc trajectories 
computational complexity time step problem derives structure involves linear constraints continuous variables integer variables 
problem sparseness 
concerning computational times sun sparcstation time instance problem solved sparse version package qp subproblems 
great simulation computational time saved exploiting information previous solution shifting previous optimal solution feasible initial condition observed proof theorem 
considering gas supply system real time implementation proposed scheme reasonable 
motivated key idea transforming propositional logic linear inequalities existence techniques solving mixed integer quadratic programming framework modeling controlling systems described dynamics logic subject operating constraints denoted mixed logical dynamical mld systems 
systems systematic control design method model predictive control ideas provides stability tracking constraint fulfillment properties 
proposed strategy particularly appealing higher level control optimization complex systems 
acknowledgments authors sven roger fletcher making available solver asano providing informations kawasaki gas supply system 
nishikawa tsuda 
optimal gas supply power plant mixed integer programming model 
automatica 
branicky borkar mitter 
unified framework hybrid control model optimal control theory 
ieee trans 
autom 
contr 
campo morari 
model predictive optimal averaging level control 
aiche journal 
pardalos 
modeling integer programming techniques applied propositional calculus 
computers opns res 
lee 
dynamically scheduled model predictive control nonlinear processes hinging hyperplane models 
proc 
aiche annual meeting 
submitted aiche journal 
fletcher 
mixed integer quadratic programming package 
technical report university dundee dept mathematics scotland 
fletcher 
numerical experience lower bounds branch bound 
technical report university dundee dept mathematics scotland 
submitted siam journal optimization www mcs dundee ac uk art ps floudas 
nonlinear mixed integer optimization 
oxford university press 
hayes 
digital logic design 
addison wesley publishing 
christiansen editor chief 
electronics engineers handbook th edition 
ieee press mcgraw hill 
keerthi gilbert 
optimal infinite horizon feedback laws general class constrained discrete time systems stability moving horizon approximations 
journal optimization theory applications 

improved algorithm mixed integer quadratic programs computational study 
mathematical programming 
lee cooley 
advances model predictive control 
chemical process control volume pages 
aiche symposium series american institute chemical engineers 

deterministic methods mixed integer nonlinear programming 
ph dissertation university dundee scotland december 
sastry 
design framework hierarchical hybrid control 
technical report intelligent machines robotic laboratory university california berkeley 
submitted ieee trans 
automat 
contr special issue hybrid systems 
mayne 
nonlinear model predictive control assessment 
chemical process control volume pages 
aiche symposium series american institute chemical engineers 
mendelson 
mathematical logic 
van nostrand 
michel antsaklis 
lyapunov stability class discrete event systems 
ieee trans 
automat 
contr 
qin 
overview industrial model predictive control technology 
chemical process control volume pages 
aiche symposium series american institute chemical engineers 
raman grossmann 
relation milp modeling logical inference chemical process synthesis 
computers chem 
engng 
raman grossmann 
integration logic heuristic knowledge optimization process synthesis 
computers chem 
engng 
grossmann nerode ravn rischel eds 
hybrid systems 
springer verlag new york 


models methods solution quadratic integer programming problems 
cybernetics 
foss 
model predictive control class hybrid systems 
proc 
european control conf brussels belgium 
foss 
mpc systems continuous discrete control inputs 
proc 
american control conf albuquerque nm usa 
tyler morari 
propositional logic control monitoring problems 
technical report aut institut eth swiss federal institute technology rich switzerland 
williams 
logical problems integer programming 
bulletin institute mathematics applications 
williams 
linear integer programming applied propositional calculus 
int 
systems research info 
science 
williams 
model building mathematical programming 
john wiley sons third edition 
appendix describe simple algorithm test posedness system form 
consider problem checking xv exists vector xs satisfying xw xv sw form ri 
hold exist vectors xv xs index 
ns si si denotes th component row algorithm testing condition algorithm 
small tolerance 


ns test feasibility problem feasible system posed 



system posed 
note need checking trivially unfeasible 
test posedness systems apply algorithm 
