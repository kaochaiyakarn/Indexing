architecture arti cial immune system steven hofmeyr forrest department computer science unm albuquerque nm santa fe institute hyde park road santa fe nm arti cial immune system artis described incorporates properties natural immune systems including diversity distributed computation error tolerance dynamic learning adaptation self monitoring 
artis general framework distributed adaptive system principle applied domains 
artis applied computer security form network intrusion detection system called lisys 
lisys described shown ective detecting intrusions maintaining low false positive rates 
similarities di erences artis holland classi er systems discussed 
biological immune system highly complicated appears precisely tuned problem detecting eliminating infections 
believe provides compelling example massively parallel adaptive information processing system study purpose designing better arti cial systems 
compelling exhibits properties incorporate arti cial systems diverse distributed error tolerant dynamic self monitoring self aware adaptable 
properties give certain key characteristics arti cial systems today lack robustness adaptivity autonomy 
robustness consequence fact diverse distributed dynamic error tolerant 
diversity improves robustness population individual level example di erent people vulnerable di erent infections 
distributed robust fashion components interact locally provide global protection central control single point failure 
dynamic individual components continually created destroyed circulated body increases temporal spatial diversity robust errors error tolerant ect single action small mistakes classi cation response catastrophic 
adaptable learn recognize respond new infections retain memory infections facilitate responses 
adaptivity possible dynamic functioning enables discard components useless dangerous improve existing components 
autonomous outside control required integrated part body mechanisms monitor protect rest body monitor protect furthermore distributed decentralized nature contributes autonomous nature outside control way imposing outside control inside centralized control 
properties robustness adaptability turnover components autonomy closely related design principles complex adaptive systems articulated holland example 
furthermore immune system appears re ect aspects articulated design aesthetic illustrated holland genetic algorithms classi er systems echo 
common features systems include ne grained representations actions emergence coordinated behavior competition components random variation evolution close coupling perpetually novel environment 
representations actions immune system ne grained short protein fragments called peptides basic unit representation 
coherent coordinated behavior arises emerges interactions literally cells molecules 
individual action immune system forming chemical bond molecules cell killing single cell ne grained 
feature holland design aesthetic notion competition survival basic units adaptive system 
seen immune system individual immune cells compete bind foreign antigen 
immune receptors created randomly genetic recombinations mutations 
mutations take place gene fragments joined single gene diversity anity maturation somatic 
evolutionary processes play central role holland aesthetic 
immune system illustrates evolution engine innovation anity maturation cells response foreign antigen quite closely resembles genetic algorithm crossover 
notion adaptive system closely coupled environment responding perpetually novel stimuli dynamic exible way basic tenet holland view adaptive systems 
view better illustrated classi er systems echo conventional genetic algorithms 
describe system called artis incorporates properties 
preserve generality artis described independently particular problem domain 
ground concepts situate artis networked environment computer security system called lisys follow brooks believing fruitless design intelligent systems complete isolation environments exist 
hope situating intelligent artifact simplify environment reduce computations include unnecessary features mechanisms 
computer security important natural application domain adaptive systems 
computer systems dynamic continually changing patterns behavior programs added removed new users introduced con gurations change 
changes allow intruders nd novel means gain improper access computers 
traditional computer security mechanisms largely static easily cope dynamic environments 
believe adaptive system needed track changes environment way intruders exploit systems 
computer security system protect machine set machines intruders arti cial immune system 
stands lightweight intrusion detection system 
word lisys corruption process immune system destroys bacteria bacterial membrane 
massachusetts institute technology evolutionary computation foreign code similar functionality immune system protecting body invasion 
similarities designed implemented lisys intrusion detection system monitors network trac 
lisys demonstrates utility artis applied speci problem domain 
earlier papers results context computer security general considerations :10.1.1.47.6145:10.1.1.43.6197:10.1.1.48.3258:10.1.1.53.9010
goal rectify making biological connections concrete emphasizing adaptive systems framework implementation resides 
section brie introduce immune system section describe organization artis explaining immunological concepts necessary 
results testing system real environment described section 
section discusses relation artis classi er systems section brie describes domains artis applied 
concluded general comments concerning computer security adaptive systems 
immune system consists multitude cells molecules interact variety ways detect eliminate infectious agents pathogens 
interactions localized depend chemical bonding surfaces immune system cells covered receptors chemically bind pathogens bind immune system cells molecules enable complex system signalling mediates immune response 
cells circulate body blood lymph systems forming dynamic system distributed detection response centralized control little hierarchical organization 
detection elimination pathogens consequence cells interacting simple localized rules 
consequence robust failure individual components attacks 
problem detecting pathogens described distinguishing self nonself elements body pathogens respectively 
pathogens harmful immune response eliminate may damage body 
cases respond accurate say problem faced distinguishing harmful nonself 
adopt viewpoint nonself synonymous pathogen harmful body self synonymous harmless substances including normally functioning cells body 
pathogens detected eliminate manner 
di erent pathogens eliminated di erent ways call cells accomplish ectors 
elimination problem facing immune system choosing right ectors particular kind pathogen eliminated 
shall touch brie problem elimination response section main focus detection problem 
architecture artificial immune system section describe architecture arti cial immune system artis 
artis closely modeled biological immune system course describing artis shall describe equivalent biological mechanisms inspired model 
massachusetts institute technology evolutionary computation necessity immunological details sparse fragmentary detailed overview immunology accessible non consult defining problem discrimination self nonself chemical bonds form protein chains 
preserve generality model protein chains binary strings xed length 
distinguish self nonself proteins artis addresses similar problem de ne follows 
set strings length forms universe partitioned disjoint subsets call self nonself 
artis faces discrimination classi cation task arbitrary string classify normal corresponding self anomalous corresponding nonself artis kinds discrimination errors false positive occurs self string classi ed anomalous false negative occurs nonself string classi ed normal 
similar errors false negative occurs fails detect ght pathogens false positive error occurs attacks body known response 
body kinds errors harmful apparently evolved minimize errors similarly goal artis minimize kinds errors 
see gure 
detection system self nonself universe false positives false negatives dimensional representation universe strings 
string belong sets self nonself 
diagram point plane represents string point lies shaded area self nonself 
immunological detection system attempts encode boundary sets classifying strings normal corresponding self anomalous corresponding nonself 
real world problems mapped abstraction self nonself may disjoint strings may characterize self nonself 
case categorization strings category lead unavoidable errors 
consider case 
illustrates importance choosing right characteristic application domain essential choose equivalent proteins reliably discriminate self nonself 
truly comprehensive interested reader consult 
de nition generalized include classi cation multiple categories categories self nonself 
massachusetts institute technology evolutionary computation detectors natural immune systems consist di erent kinds cells molecules identi ed studied experimentally 
system simplify introducing basic type detector modeled class immune cells called lymphocytes detector combines properties cells cells antibodies 
artis similar consists multitude mobile detectors circulating distributed environment 
model distributed environment graph vertex contains local set detectors called detection node detectors migrate vertex edges 
graph model provides notion locality detectors interact detectors vertex 
notion locality useful shall see section 
lymphocytes hundreds thousands identical receptors surface termed monoclonal 
receptors bind regions pathogens 
binding depends chemical structure charge receptors bind similar kinds 
greater likelihood bond occurring higher anity receptor 
artis receptors modeled binary strings xed length chemical binding modeled approximate string matching 
ect detector associated binary string represents receptors 
obvious approximate matching rules include hamming distance edit distance adopted plausible rule called contiguous bits strings match contiguous bits common see gure 
value threshold determines speci city detector indication size subset strings single detector match 
example matching completely speci detector match single string matching completely general detector match single string length 
match match matching contiguous bits match rule 
example detector matches 
consequence partial matching rule threshold contiguous bits trade number detectors speci city speci city detectors increases number detectors required achieve certain level detection increases 
optimal minimizes number detectors needed gives discrimination 
lymphocyte activated receptors bind 
activation changes state lymphocyte triggers series reactions lead lifecycle detector shown section gure 
may help understanding refer forwards gure 
massachusetts institute technology evolutionary computation elimination pathogens discussed section 
lymphocyte activated number receptors binding exceeds threshold chemical bonds receptors long lasting activated lymphocyte bind sucient receptors short period time 
model activation thresholds detector match strings time period activated 
implemented allowing detector accumulate matches decaying match count time match probability match count reduced timestep 
models probability bond receptor decaying 
detector activated match count reset zero 
training detection system lymphocytes called negative detectors trained bind nonself lymphocyte activated responds nonself detected 
simple form learning known tolerization lymphocytes trained tolerant self 
lymphocytes created randomly generated receptors bind self nonself 
class lymphocytes cells single location thymus organ just 
immature cells develop thymus activated development die programmed cell death apoptosis 
self proteins expressed thymus cells survive maturation leave thymus tolerant self proteins 
process called negative selection cells activated ones selected survive 
lymphocytes trained perform anomaly detection 
uses training set self proteins thymus produce detectors distinguish self nonself 
clearly nonself frequently expressed thymus tolerant nonself 
underlying assumption self occurs frequently compared nonself 
assumption basis anomaly detection systems de ne normal frequently occurring patterns behaviors 
artis uses negative selection algorithm negative selection see gure :10.1.1.48.3258
primary di erence accumulate self set single location form asynchronous distributed tolerization detector created randomly generated bit string analogous receptor remains immature time period called tolerization period 
time period detector exposed environment self possibly nonself strings matches bit string eliminated 
match tolerization period mature detector analogous naive cell 
mature detectors need exceed match threshold order activated activated eliminated signal anomaly detected 
clearly assumption circulating immature detector matches self string high probability encounter self string tolerization period immature detectors match nonself strings low probability encounter nonself strings tolerization period 
case cells suces receptors bind 
distributed form negative selection algorithm 
eliminated lack costimulation see section 
massachusetts institute technology evolutionary computation negative detector accept regenerate randomly generate detector string detector matches self regenerate accept negative selection algorithm 
candidate negative detectors represented dark circles generated randomly match string self set points covered detector self set eliminated regenerated 
process repeated set valid negative detectors match self strings 
memory adaptive response enables learn protein structures characterize pathogens encounters remember structures responses pathogens rapid ecient 
call memory detection remembers structures known pathogens facilitate responses 
memory detection system trained subset nonself detect particular elements subset 
encounters pathogens type encountered mounts primary response may take weeks eliminate infection primary response learning recognize previously unseen foreign patterns 
subsequently encounters type pathogens mounts secondary response usually ecient clinical indications re infection 
secondary response illustrates ecacy memory detection 
memory detection important property associative 
memory detection allows detect new pathogens structurally related ones previously encountered 
concept underlies immunization harmless form pathogen attenuated virus induces primary response generates population memory cells cross reactive harmful kind pathogen population memory cells ensure mounts secondary response infections primary responses slow may lymphocytes bind new type pathogen immune response ecient 
increase eciency activated lymphocytes clone exponentially grow massachusetts institute technology evolutionary computation ing population lymphocytes detect pathogens 
higher anity lymphocyte receptors pathogen lymphocyte activated 
lymphocytes replicating highest anity pathogens 
time pathogens replicating race pathogen replication lymphocyte replication 
improves chances race class lymphocytes called cells subject high mutation rates known somatic cloning currently model aspect 
combined clonal expansion adaptive process known anity maturation 
infection eliminated retains population memory cells long lived lymphocytes high anity pathogen 
population memory cells sucient size speci city enable rapid secondary response re infection occurs 
artis uses similar form memory detection 
multiple detectors node activated nonself string enter competition memory detectors 
detectors closest match contiguous bits selected memory detectors memory detectors copies spread neighboring nodes 
consequently representation string distributed graph occurrences detected rapidly node detectors match exist node 
addition memory detectors lowered activation thresholds example activated far rapidly re occurrences previously encountered nonself strings sensitive strings 
mimics rapid second response seen sensitivity detection event results production chemicals cytokines signal nearby cells 
model notion locality inherent graph de ning environment artis 
detection node jv local sensitivity level models concentration cytokines physically local region body 
activation threshold detectors de ned higher local sensitivity lower local activation threshold 
match count mature detector node goes sensitivity level increased 
sensitivity level temporal horizon time decays rate decay parameter indicates probability reduced 
mechanism ensures disparate nonself strings detected providing occur short period time 
costimulation unfortunately tolerization straightforward described section 
self proteins expressed thymus lymphocytes centrally thymus may bind proteins reaction 
happen practice cells require costimulation activated addition binding proteins called signal cell second signal 
second signal usually chemical signal occurs matching approximate activation threshold greater possible nal string activates detector di ers somewhat strings previously matched contributed activation 
deal problem simplest possible way assuming nal string suitably representative strings contributed activation 
massachusetts institute technology evolutionary computation body damaged way 
second signal come cells cells body 
cell receives signal absence signal dies 
cells bind self eliminated healthy tissues 
tissues damaged cells survive 
survive damage persisted soon left area damage receive signal absence signal die 
high likelihood dying reached area tissue damage healthy tissue passed way 
likewise assume artis detector encounter string tolerization period possible detectors mature match strings implement crude form costimulation 
ideally second signal provided components system rst approximation human operator provide second signal 
detector activated string sends signal human operator time period called costimulation delay decide really nonself 
operator decides nonself second signal returned operator decides self signal sent dies replaced new immature detector 
consequently human operator need response case false positives system automatically correct prevent similar false positives 
lifecycle detector detectors lived inde nitely died failed receive costimulation detectors immature 
nonself strings occurred period immaturity detectors detected detectors tolerant remain tolerant 
problem lymphocytes typically short lived days new immature lymphocytes population lymphocytes dynamic 
introduce similar measure detector probability death dying matured 
dies replaced new randomly generated immature detector 
ultimately detector dies sooner memory detector 
presents lifecycle detector 
nonself string undetected continually continual turnover new detectors false negatives occur nonself frequent violates fundamental assumption underlying model 
exception nite lifespan memory detectors 
memory cells long lived patterns encode lost time 
example exposure measles early life confers life long protection disease 
similarly memory detectors artis long lived die consequence lack costimulation 
problem mechanism eventually detectors memory detectors loss advantages conferred dynamic detector populations 
combat problem limit number memory detectors fraction total detectors 
new detector wins competition memory detector fraction memory detectors reached limit lru memory detector demoted ordinary mature detector consequently nite lifespan 
demote lru detector lru detector activated longest time period memory detector assume useful memory detector 
additional bene dynamic detector population system adapt massachusetts institute technology evolutionary computation match tolerization period match tolerization period don exceed activation threshold lifetime randomly created mature naive immature death activated exceed activation threshold costimulation costimulation memory match lifecycle detector 
detector consists randomly created bit string immature tolerization period matches period dies replaced new randomly generated detector 
survives tolerization mature naive detector lives expected death timesteps 
detector accumulates matches exceed activation threshold activated 
activated detector receive costimulation dies 
receives costimulation enters competition memory detector 
memory detector lives inde nitely requires single match activation 
massachusetts institute technology evolutionary computation changing self sets 
self set changes new immature detectors mature detectors causing false positives die lack costimulation age 
eventually detectors tolerant self providing self change quickly 
self changes rapidly compared life span detector sizeable portion detectors immature mature detectors continually die due lack costimulation 
representations molecules major complex mhc play important role transport peptides fragments protein chains interior regions cell peptides cell surface 
mechanism enables roving cells detect infections inside cells penetrating cell membrane 
variations mhc binds slightly di erent class peptides 
individual population genetically capable making small set mhc types set mhc types varies di erent individuals 
consequently individuals population capable recognizing di erent pro les peptides providing important form population level diversity speculate mhc plays crucial role protecting population individuals holes detection coverage nonself 
hole nonself string valid detectors generated nonself string hole match matches self string see gure 
holes exist approximate match rule constant probability matching contiguous bits reasonable assume exist biological realm receptor binding binding receptors peptides approximate 
pathogens evolving dicult detect evolve holes detection coverage 
pathogens harder detect ones survive better naturally selected 
holes holes existence holes 
strings nonself set covered valid negative detectors speci city match length 
size dark circles representing detectors indication generality detectors 
detectors depicted example general match certain nonself strings matching self 
type mhc regarded di erent way representing example viruses epstein barr virus evolved dominant peptides bound particular mhc types leaving individuals mhc types vulnerable disease 
massachusetts institute technology evolutionary computation protein depending peptides presents ect uses multiple representations views proteins 
multiple representations reduce number holes di erent representations induce di erent holes 
artis detection node uses di erent representation lters incoming strings permutation mask example strings permutation de ned randomly generated permutation mask strings 
contiguous bits rule matches positions new representation match 
having di erent representation detection node equivalent changing shape detectors keeping shape self set constant see gure 
consequently node fails detect nonself string node succeed 
local detector set local detector set local detector set detection nodes representation changes equivalent shape changes detectors 
problem holes ameliorated di erent representation detection node 
di erent holes di erent representations 
equivalently di erent shaped detectors cover di erent parts nonself space global reduction holes 
response immune system variety ector functions di erent pathogens eliminated di erent ways 
example intra cellular pathogens viruses eliminated killer cells extracellular bacteria eliminated complement forth 
pathogens detected immune system select appropriate ectors pathogens eciently eliminated 
selection ectors determined part chemical signals form cytokines clear selection works 
mathematical models indicate ways selection occur cytokines re ect local state system damage su ered pathogens damage su ered immune system 
methods changing representation 
simplest 
see details 
massachusetts institute technology evolutionary computation focus particular form ector selection instantiated class lymphocytes called cells 
cells activated di erentiate plasma cells soluble form receptors called antibodies 
antibodies shaped structure di erent regions corresponding arms tail arms termed variable regions tail constant region 
variable regions randomly generated described section bind speci pathogen 
constant region hand randomly generated name comes structural varieties called constant region part antibody immune system cells bind 
depending constant region di erent responses triggered binding part antibody determines ector function 
single cell clone multiple cells di erent receptor variable regions remain 
known switching enables immune system choose various ector functions chemical binding 
date focused detection investigated response detail 
appropriate type response depend application domain application domains require forms automated response model ector selection assuming di erent kinds response required associated di erent kind ector detector augmented equivalent xed region bit string encodes ector choice 
detectors copied activation undergo process similar switching xed region bit string set type response deemed appropriate 
migrating detectors carry information concerning patterns anomalies speci information concerning anomalies eliminated 
expect maintain similar level robustness exibility achieved detection component system 
summary table summarizes di erences similarities artis 
artis central tolerization equivalent thymus elements labelled 
artis easily implemented negative detection occurring single location 
avoided reduces robustness system introducing single point failure 
application domain network security section take framework artis demonstrate utility applying particular domain network intrusion detection nid 
previously applied analogy aspects computer security including computer virus detection host intrusion detection diversity computers robust wide spread attacks :10.1.1.48.3258:10.1.1.53.9010
concentrate system lisys designed protect local area network lan networkbased attacks 
nid systems designed detect network attacks analyzing monitoring di erent example iga igg 
discuss possibilities speci application section 
massachusetts institute technology evolutionary computation immune system artis peptide protein binary string receptor binary string monoclonal lymphocyte detector cell cell antibody variable region detector string antibody xed region bit string encoding response memory cell memory detector pathogen nonself binary string binding approximate string matching locality vertices graph circulation mobile detectors central tolerization thymus mhc representation parameters cytokines sensitivity level peripheral tolerization distributed negative selection signal matches exceeds activation threshold signal costimulation human operator lymphocyte cloning detector replication pathogen detection detection event pathogen elimination response anity maturation memory detector competition table comparison artis 
indicates analogous mechanism 
network trac overviews nid systems 
nids perform signature detection similar limited memory detection 
nids facilities automatic signature extraction human operator extract signatures attacks 
attack signatures encoded expert systems state transition diagrams graphs :10.1.1.114.4122:10.1.1.114.4122
nids perform anomaly detection form statistical analysis 
nids usually distributed sense multiple monitors network 
data monitors collated ways centrally hierarchically 
multi monitor systems distributed sense monitors employ distributed network localized sense localized single failure points vulnerable attack 
monitors identical vulnerability monitor replicated nids diverse sense disadvantages overcome lisys 
mapping artis network security rst sense important step applying artis domain choose equivalent proteins 
example computer security different levels monitor performance behavior characteristics levels represent potential proteins 
chosen monitor network trac protein datapath triple consists source internet protocol ip address destination ip address tcp service port computers communicate 
essentially protein connection computers 
currently systems monitor network trac commonly labeled network 
massachusetts institute technology evolutionary computation monitor start tcp connections monitor tcp syn packets 
chosen level network connections environment naturally distributed computers communicating researchers successfully implemented anomaly detection monitoring network connections 
representation connection information compressed single bit string unambiguously de nes connection 
self set normally occurring connections observed time lan 
self de ned terms frequencies assume implicitly connection occurs frequently long period time part self set 
connection occur internal computers lan internal computer lan external computer outside lan 
connection represented bit string internal external 
similarly nonself set connections bit representation di erence nonself consists connections potentially enormous number normally observed lan 
artis modeled environment graph vertex de ned locality corresponding detection node 
nid application vertex corresponds computer lan internal computer network represents fully connected graph see gure assumed network broadcast 
broadcast lans convenient property location computer sees packet passing lan 
summary lisys implementation artis described section 
binary strings mapped datapath triples environment network computers internal computer corresponds vertex graph running detection node 
incorporated mobile detectors replication response 
discuss extensions section 
experiments lisys implemented tested real data collected subnet computers computer science department university new mexico 
data traces collected self consisting normal trac nonself consisting trac generated intrusive activity 
self trace collected days total tcp connections logged datapath triple 
datapaths ltered datapaths 
ltering removed classes noisy trac sources web servers ftp servers continually communicating new hosts stable de nition normal terms datapaths 
ltered web ftp server trac lter connections web ftp server ports internal computers running servers 
web servers ftp servers ltered trac destined web ftp server ports continued monitor ports server computers 
self set consisting unique strings extracted nonself trace comprised di erent intrusive incidents faithful logs real incidents occurred network studied 
attacks consisted probing sort particularly services reported vulnerabilities 
incident involved compromise internal computer 
trac tested incident consisted datapaths rst nonself massachusetts institute technology evolutionary computation external computer broadcast lan datapath triple port ip port ip detector smtp death distributed tolerization detector lifecycle immature naive memory state activation matches activation flag sensitivity level set detector internal computer detection node representation parameters architecture lisys 
internal computer runs detection node consists set detectors local sensitivity level representation function randomly generated parameters example permutation mask 
detector contains binary string immature naive mature memory detector 
addition detector keeps track awaiting costimulation activation ag matches accumulated 
massachusetts institute technology evolutionary computation test set number fraction fraction strings nonself unique nonself ap ps lp lp lp sp sp table features nonself sets 
number strings total number trace rst nonself string including self strings occurred time 
fraction nonself fraction trace consisted entirely nonself strings fraction unique nonself fraction total trace represented unique nonself strings size nonself test set incident 
ap address probing ps large scale port scanning lp limited probing scanning ports sp single port probing 
datapath start incident nonself datapath 
incident reproduced timing attack including normal trac interspersed attack 
table gives breakdown number strings incident including fraction strings nonself 
implemented tested line prototype results reported line simulations detection nodes corresponding computers 
simulation increases exibility way experiments set run particular limit number time steps simulation run 
enables periods months simulated space hours necessary carry extensive testing various parameter settings 
advantage simulation easy replicate results 
report elapsed time experiments days 
simulated data day assumed equivalent time steps tcp syn packets average number syn packets observed day unm subnet period months 
assumed trace self strings modeled strongly stationary discrete time random process described sample distribution extracted words timestep string randomly drawn weighted frequency occurrence original trace compares distribution trace simulated self strings distribution length time 
curves identical low probabilities indicates simulated data probability distribution original real data 
generate self way trace self covers days may need run experiments simulated days 
di erent simulations performed understand ects various mechanisms parameter settings 
summarize results particular set parameter values see table parameter settings ran individual simulations averaged results 
detectors began simulation immature system run simulated days normal self trac 
days lisys challenged intrusive incidents 
lisys experiments implemented multiple representations byte hash algorithm 
see details 
massachusetts institute technology evolutionary computation string index probability real simulated probability distributions real simulated self 
note axes logarithmic 
parameter description value string length bits match length bits activation threshold matches match match decay period day sensitivity decay period days tolerization period days ts costimulation delay day death life expectancy day nd number detectors node detectors table parameters simulation 
simulation uses timesteps simulated day parameter values reported terms days clarity 
decay periods expected time decay 
detection nodes number detectors incidents separated bu er zone simulated day self trac 
results simulations reported table 
false positive rate run simulation averaged days ensure transients died 
transients exist detectors initially immature 
false positive rates encouraging intrusion detection community false positives day regarded low 
implementation costimulation false positive requires action part system administrator 
low false positive rates achieved compromising ability detect intrusions lisys correctly detected incidents 
note intrusive massachusetts institute technology evolutionary computation aspect result fraction immature false positive rate incidents detected table summary performance results 
fraction immature refers fraction detectors immature averaged days simulation false positive rate refers number false positives incurred day days incidents detected refers number intrusive incidents detected 
result column rst number mean runs second gure sign con dence interval mean 
incident consisted multiple nonself strings see table detect nonself strings intrusive incident 
nonself strings detected incident easier separate false positives true positives 
results reported nonself strings incident detected 
mechanisms really necessary 
included complicated mechanisms lisys inspired immune analogy believe necessary 
mechanisms really necessary 
section discuss ects mechanisms show useful essential 
points summarize experimental results reported 
activation thresholds reduce false positives 
simulations false positives reduced factor close values activation threshold see section 
activation thresholds signi cant negative impact detection intrusive incidents nonself strings comprising incidents occurred short period time 
sensitivity levels increase ability detect diverse nonself strings provided temporally clumped 
simulated distributed coordinated network attack dca launched di erent locations nonself string incident di erent 
dcas particularly dicult detect attack launched simultaneously di erent locations carries limited portion attack suspicion fall single location 
diagnosis attacks usually requires information di erent locations 
sensitivity mechanism improves detection nonself strings simulated dca order magnitude 
tolerization essential reducing false positives 
false positives increase exponentially decreasing tolerization periods changing day day 
trade determines best length tolerization period 
longer tolerization period lower probability false positive longer tolerization periods result detectors remaining immature longer contributing detection anomalies 
longer tolerization periods increase risk system infrequently occurring nonself 
costimulation eliminates mature detectors consequently reduces massachusetts institute technology evolutionary computation false positives 
costimulation reduce false positive rates factor 
multiple representations improve detection rates relevant nonself strings similar self strings 
nid application multiple representations improves detection factor attempting detect nonself strings similar self 
anomaly detection essential detecting nonself strings encountered previously 
simulations successfully detected incidents lisys encountered simulation 
memory detectors improve detection previously encountered nonself 
set nonself strings test signature detection 
set nonself strings randomly generated string represented new connection internal computers 
connections closer normal pro le connections expect harder detect 
steady state system initially challenged nonself strings detected regarded primary response 
allowed system retain detectors memory detectors activation thresholds reduced challenged days set nonself strings 
time detected strings secondary response clearly illustrating utility memory detectors finite lifetimes ensure gaps detection coverage static predictable improve secondary response nite lifetimes secondary response better primary response 
clearly detectors lived inde nitely detection coverage incomplete adversary discovered gaps coverage repeatedly exploit fear detection 
having nite lifetimes allows system easily adapt changing self sets costimulation detectors eventually die replaced new immature detectors new self set 
trade selecting lifespan lifespan decreases tolerization period decrease increasing number immature detectors decreasing tolerization period increase false positives 
extensions components artis included lisys 
detectors mobile replicate activated 
discussed section artis memory detectors copy spread neighboring detection nodes 
required lisys mechanisms copies memory detectors migrate computers lan 
improve robustness signature detection distributed system computers similar set memory detectors loss compromise computers ect ecacy secondary response 
mobility replication tested live network 
currently lisys completely autonomous learning mechanisms largely unsupervised 
important area lisys note true secondary response detect anomalies quickly devote resources response modeled 
massachusetts institute technology evolutionary computation autonomous removing human operator 
require implementing automated response system possible selection response mechanisms analogous ector selection basis response system modi cation access network services hosts causing anomalous packets denied access relevant services 
response system viewed having exible dynamically adaptive computer lan 
automated response tricky issue incorrect response interfere legal functioning system cause denial service 
incorrect responses analogous responses hope form costimulation implemented minimize harmful responses 
requires indicator damage network environment idea investigating host intrusion detection system provide damage indications 
monitor system performance characterize damage terms degraded performance denial service attacks 
properties lisys consequence immune analogy important properties lisys exhibits 
exhibited current nid systems systems exhibit properties exhibit 
lisys robust continues function face compromise malfunction computers 
desirable system reliable harder adversary subvert 
lisys achieves distributed communication required detection nodes 
loss detection nodes result gradual degradation performance 
tune trade resources ectiveness system false positives false negatives 
desirable di erent domains di erent requirements single domain requirements may change time 
lisys achieves varying number detectors detectors better detection rate computational resources required 
trade false negative false positive errors tuned adjusting activation threshold 
lisys scalable adding nodes increase computational requirements existing node 
desirable system scalable large networks 
lisys achieves scalability communication nodes detection nodes operate independently 
lisys performs anomaly detection 
desirable new attacks occurring nid systems able detect 
lisys implements anomaly detection negative detectors negative selection algorithm 
lisys performs signature detection automatically extracting signatures nonself data 
desirable speed detection increase discriminatory accuracy 
desirable automatically extract signatures reduces dependence human operator speeds process distributing information concerning attack signatures 
retention memory detectors competition memory detectors implements signature detection lisys 
massachusetts institute technology evolutionary computation lisys accurate achieves low false positive rates day clear detection intrusive activity incidents clearly detected 
desirable want minimize harm system terms damage attacker terms damage incorrect response automated human operator 
lisys adaptable initially train human supervision adapt changes normal behavior human input 
desirable ensure autonomy system networks monitored changing 
lisys tolerization nite detector lifetimes allow system adapt 
low resource requirements lisys lightweight 
desirable nid systems expensive resource requirements probably get 
results achieved lisys required detectors node bit binary strings computer negligible running costs 
limitations limitations related fact lisys currently monitors tcp datapaths broadcast network 
intrusions involve network trac di erent protocol layers example udp detected lisys 
lans moving away broadcast networks switched ethernet computer sees packets destined 
lisys lose advantages distributed monitoring switched network 
possible ways overcoming limitation include programmed switches active networks broadcast syn packets 
characterizing self terms datapaths services expected connect possible computer time www ftp servers 
attack exploits vulnerabilities services go undetected 
monitoring di erent characteristic packet frequencies address problem 
activation thresholds useful reducing false positives introduce paths attacks 
activation thresholds greater reduce false positives attacker evade detection ways 
firstly making anomalous connections occur infrequently accumulate point trigger detector secondly ensuring attack number connections fewer required activate detector 
frequency connections decreases skill patience attacker increase 
limitation apply organization resources cope higher false positive rates consequence minimal activation thresholds 
assumed problem domain divided sets events set legitimate acceptable policy events set illegitimate events 
reality events legitimate times illegitimate times 
ambiguous events violate assumption correctly classi ed lisys 
underlying assumption policy self nonself sets de ned implicitly inferred observing behavior system assuming self occurs frequently nonself period time self set collected separately nonself 
limitation research limitation anomaly detection systems general assumptions relative frequency occurrence including massachusetts institute technology evolutionary computation classi er systems artis classi er condition detector classi er action detector response matching contiguous bits classi er strength immature mature activated memory states message list bit strings representing patterns interest bidding messages competition memory detectors speci match wins speci match wins support activation threshold message intensity sensitivity level internal messages migrating detectors bucket brigade memory detection genetic algorithm triggering negative selection multiple representations table tentative comparison artis classi er systems 
distributions self nonself sets 
relation classifier systems artis resembles architecture classi er system 
mentioned earlier describe problem solved immune system discriminating self harmful nonself eliminating 
language classi er systems immune system process external internal messages rst classifying self nonself case dangerous messages appropriate action 
parallel immunology classi er systems noted early 
classi er system model immune system drawing analogy individual classi er rules antibody types 
classi er strength represented concentration antibody type interactions classi er rules modeled network hypothesis 
comparison interesting relatively little impact classi er system research elds continued develop largely independently 
time theoretical immunology advanced signi cantly emphasis switched network theory aspects immunology 
table shows components artis correspond components learning classi er system draw analogy somewhat di erently 
mapping classi er systems artis architectural similarities striking 
implementation details details matching rules di erent architecture largely preserved artis provides interesting comparison traditional classi er systems 
section point similarities di erences systems 
detector corresponds condition part classi er match rule contiguous bits traditional alphabet classi er systems 
parameter measure speci city detectors number don cares classi er condition measure generality 
current implementation artis corresponding action part classi er rule 
concatenate bits detector specify response analogous di erent antibody discussed section detector cell detector massachusetts institute technology evolutionary computation plus response bits correspond quite directly condition action rule format classi er systems 
directly analogous activation thresholds roughly correspond holland proposal support sensitivity levels serve similar role message intensity 
cases artis mechanism quite di erent classi er systems reason mechanism similar case aggregate information multiple sources second case vary sensitivity system dynamically 
activation thresholds sensitivity levels decay time similarly role tax classi er systems 
place message list continuous ux binary strings represent current state environment example lisys binary strings represented datapath triples 
internal messages classi er systems analogous migrating detectors move node analogy perfect 
direct analog negative selection algorithm classi er systems learning rules genetic algorithm trigger conditions new classi ers generated 
bidding messages classi er systems analogous immune cells competing bind foreign pathogens 
likewise introduced pressure speci city artis reminiscent classi er systems allowing speci match win competition memory detector 
role bucket brigade credit assignment genetic algorithm played competition memory system learning simpler sense assign credit directly environment detectors pass strength immune cells 
direct analog bucket brigade occur tried build networks immune cells immune cells stimulate immune cells proposed 
appealing adaptive design perspective little experimental evidence networks exist natural immune systems 
artis essentially stimulus response system stimuli binary strings classi cation inputs involve large amount internal processing response appropriate action example lisys response email message human operator 
natural considerably complicated highly complex internal regulatory mechanisms di erent kinds potential responses 
regulatory mechanisms appear implemented signaling molecules cytokines discussed earlier cytokines viewed analogous internal messages classi er systems 
increase role internal feedbacks artis extending system sensitivity level primitive form 
classi er systems classi er strength represented real number 
classi er strength determines probability deleted replicated genetic algorithm 
artis detector discrete states immature mature activated memory 
state determines likelihood deleted replicated mutated 
multiple representations direct analog classical classi er systems 
provide natural partitioning set detectors 
weakness original classi er system proposals architecture completely 
mean classi er rules level mechanisms aggregating massachusetts institute technology evolutionary computation rules subassemblies form coherent units de ned interfaces rest system 
tagging proposed mechanism automatically partitioning rule sets related groups rules convincingly shown purpose 
speculate di erent detector sets discover di erent kinds regularities due combination multiple representations locality contiguous bits matching rule 
way multiple representations prove initial step kind adaptive partitioning classi er systems 
applications earlier claimed artis general architecture problem solving 
described artis abstractly applied particular domain network intrusion detection 
section brie review applications artis suitable demonstrate generality approach 
describe section features problem domain suitable artis 
single important consideration applying artis domain choose suitable peptide characteristic monitor 
peptide result normal pro le separates normal abnormal anomalous behaviors satisfactorily minimal errors false positive false negative 
mobile agent security mobile agent piece software code copies networked computers runs computers 
code modi ed evolve consequence interactions agents software computers 
examples commercial mobile agent frameworks see examples mobile agent uses 
mobile agents er increased exibility computing tasks 
exibility comes price increased vulnerability malicious users exploiting system poorly programmed accidentally corrupted agents spread cause damage cancer 
conventional models computer security suitable mobile agent framework application models limit exibility degree mobile agent frameworks mere 
example sand box concept java applets 
java applets mobile agents run sand box computer sand box interpreter prevents applets harming host computer 
problems sand box firstly applets limited constrained sand box secondly users care interactions applets sand box form security useless 
essentially sand box concept old fortress model security useful limited extent generally static allow kind exibility mobile agents promising 
suggest mobile agent security implemented form artis 
peptide collection md hashes agent code subdivide agent code pieces compute hash piece 
small changes agent code result small changes peptide hashes change 
anomaly detection problem identifying unacceptable agent behavior associating particular hashes agent possibly mutated spring eliminated 
detectors implemented agents massachusetts institute technology evolutionary computation advantage detectors monitor 
second signal provided human may possible form damage signal 
example agents terminated incorrectly malicious agents indicator damage 
successful detection malicious agent lead elimination agent detector agent proliferate copy spread network eliminate copies malicious agent 
consistency distributed information class applications require information distributed locations 
information replicated reasons robustness speed access 
information locations consistent central point failure bottleneck communications 
example application domain name service dns 
information dns domain name ip address mappings reasons ecient access mappings replicated internet local name server caches 
information needs consistent ensure accurate resolution domain name ip address pairs 
examples distributed fault tolerance goal detect inconsistent server ordering distributed authentication location capable authenticating contain information implement authentication example database users passwords key distribution cryptographic keys copied locations allow encrypted communication 
apply artis problem way 
peptide piece information compressed way 
example dns application peptide compressed representation domain name ip address pair 
anomaly detection problem facing artis identify eliminate incorrect pairs consequence accidental deliberate corruption 
detector encapsulated mobile agent agents migrate network checking incorrect mappings 
detectors check ensuring corrupted detectors controlled kept check 
response artis nding corrupted mapping eliminate mapping distribute copies relevant detector network eliminate spread corrupted information 
solution provided artis asynchronous applications dns occasional inaccuracies tolerated 
epidemiological monitoring dicult detect spread new diseases 
doctors medical practitioners faced new symptoms diculty associating newly emerging disease may time resources investigate possibilities 
furthermore hard correlate similar disease symptoms widely diverse geographic areas medical practitioners may aware novel symptoms observing observed places world 
propose artis provide assistance early detection correlation diseases 
application peptide representation patient symptoms anomaly detection problem detect sets unusual symptoms indicative outbreaks epidemics new diseases 
detectors mobile agents moving internet local medical database 
local medical practitioner retain accessible database current patients symptoms checked roaming detectors 
second signal con rma massachusetts institute technology evolutionary computation tion medical practitioner symptoms unusual 
response usual replicate detectors distribute far wide addition send alarm inform centers disease control similar body 
spread detectors enable local medical practitioners reliably identify new disease detectors available expressly identi ed set symptoms new disease 
furthermore tracking clones detectors get activated allow determine disease spreading 
financial transactions banks nancial institutions depend ow money distributed locations 
critical detect fraud protect interests 
sort consistency normal money ow propose artis monitor nancial transactions detection unusual transactions indicative fraud 
peptide encoding nancial transaction 
example encode peptide source destination money ow amount involved 
anomaly detection problem detecting unusual transactions indicative fraud 
detectors mobile agents migrate networks linking banks nancial institutions detection anomalous transactions informed provide second signal 
domain suitable artis 
previous examples common themes 
enumerate features believe characterize suitability artis particular problem domain 
number features exhibited problem domain increases expect suitability artis increase 
artis domains exhibit features cases systems suitable 
artis suited applications require pattern classi cation response require distributed architectural solution require distributed architecture scalable environments arbitrary numbers nodes high communication cost nodes address problems commonality patterns nodes multiple nodes see similar patterns limited time period require detection novel anomalous patterns dynamic normal behaviors change slowly time require robust solution centralized control storage capacities single node small compared amount information required represent possible normal patterns require trade resource consumption accuracy performance 
massachusetts institute technology evolutionary computation applied artis speci aspect intrusion detection monitoring tcp packets network 
envision artis broad framework intrusion detection general 
artis described independent particular applications architecture intrusion detection system monitors responds characteristics network connections example system calls executed processes pro les user behavior contents network packets issue ector selection critical broad intrusion detection framework di erent violations require di erent responses example violations detected monitoring system calls require halting suspending processes violations detected monitoring user behavior may require terminating user session 
ector selection includes determining responses corrupted detectors artis self monitoring detectors represented bit strings monitored manner strings 
simple anomaly detection response system 
viewed general pattern learning system highly distributed scalable 
learn classify patterns self nonself respond di erently di erent pathogens learns classify nonself variety classes 
likewise artis general pattern learning system learn discriminate wide variety speci patterns respond di erently di erent patterns 
aspect explicit artis allowing universe partitioned multiple sets 
training di erent detectors recognize single subset nonself 
example assuming samples subsets generate detector recognizes elements negative selection algorithm self set de ned 
holland de ned notion complex adaptive system cas argued system human immune system community large numbers highly mobile units called antibodies continually repel destroy changing cast invaders called antigens 
invaders primarily bacteria viruses come endless varieties di erent snow 
variety new invaders appearing immune system simply list possible invaders 
change adapt latin antibodies new invaders appear settling xed con guration 
despite nature immune system maintains impressive coherence 
immune system coherent provide satisfactory scienti de nition identity 
distinguishing rest world reject cells human 
result skin graft sibling requires extraordinary measures 
arti cial systems commonly regarded cas including neural networks genetic evolutionary algorithms classi er systems echo approach similar successfully 
main di erence alternative approach initially positively selected genetic algorithm closeness matches elements determine tness negatively selected ensure match subsets 
massachusetts institute technology evolutionary computation 
believe artis interesting addition repertoire arti cial cas 
described parallels classi er systems artis section similarities learning mechanisms artis genetic evolutionary algorithms 
memory competition activated detectors supplies selective pressure tness measured terms activated detector matches nonself variation provided time detectors nite lifetimes 
variation enhanced incorporating somatic feature activated cells undergo high mutation rates cloning 
acknowledgments authors gratefully acknowledge support intel defense advanced research projects agency national science foundation iri cda oce naval research 
liu 
dns bind 
reilly associates sebastopol ca 

information security computer attacks defense pose increasing risks 
gao executive report may 
brooks flynn 
fast cheap control robot invasion solar system 
journal british interplanetary society 
cacm 
special edition agents 
beer 
brain body adaptive behavior emerges interactions nervous system body environment 
trends neurosciences 
mark gene spa ord 
defending computer system autonomous agents 
technical report department computer sciences purdue university march 
dasgupta cao yang 
approach spectra recognition 
genetic evolutionary computation conference gecco pages 
haeseleer 
immunological approach change detection theoretical results 
proceedings th ieee computer security foundations workshop los alamitos ca 
ieee computer society press 
haeseleer forrest helman 
immunological approach change detection algorithms analysis implications 
proceedings ieee symposium research security privacy los alamitos ca 
ieee computer society press 
farmer packard perelson 
immune system adaptation machine learning 
physica 
forrest hofmeyr somayaji :10.1.1.53.9010
computer immunology 
communications acm 
massachusetts institute technology evolutionary computation forrest hofmeyr somayaji 
sense self unix processes 
proceedings ieee symposium research security privacy los alamitos ca 
ieee computer society press 
forrest perelson allen :10.1.1.48.3258
self nonself discrimination computer 
proceedings ieee symposium research security privacy los alamos ca 
ieee computer society press 
forrest somayaji ackley 
building diverse computer systems 
proceedings th workshop hot topics operating system los alamitos ca 
ieee computer society press 
heberlein dias levitt mukherjee wood 
network security monitor 
proceedings ieee symposium security privacy 
ieee press 
heberlein 
nid overview 
llnl gov nid html october 
hendriks jansen 
catching act 
mit press cambridge ma 
hochberg jackson stallings dubois ford 
nadir automated system detecting network intrusion misuse 
security 
hofmeyr forrest somayaji 
intrusion detection sequences system calls 
journal computer security 
steven hofmeyr 
immunological model distributed detection application computer security 
phd thesis department computer sciences university new mexico april 
holland 
adaptation natural arti cial systems 
university michigan press ann arbor 
holland 
adaptation natural arti cial systems 
mit press cambridge ma 
second edition edition 
holland 
hidden order 
addison wesley 
holland holyoak nisbett thagard 
induction processes inference learning discovery 
mit press 
travers 
immune system health disease rd edition 
current biology london 

network theory immune system 
annals immunology 
lippman 
lincoln laboratory intrusion detection evaluation 
www ll mit edu ist ideval index html october 

tolerance danger extended family 
annual review immunology 

innate sense danger 
seminars immunology 
massachusetts institute technology evolutionary computation mockapetris 
rfc 
mukherjee heberlein levitt 
network intrusion detection 
ieee network pages may june 
netranger 
netranger web site 
www com html october 
paul 
fundamental immunology cnd edition 
raven press 
perelson 
predicting size region consideration ecient self nonself discrimination 
procedings national academy science pages 

life death immune system special issue 
scienti american 
porras neumann 
emerald event monitoring enabling responses anomalous live disturbances 
proceedings national information systems security conference 

immune system prototype autonomous decentralized systems 
proceedings ieee conference systems man cybernetics 
smith forrest perelson 
immunological memory associative 
workshop notes workshop immunity systems intnl 
conf 
multiagent systems pages 
smith calvert murphy peterson 
activating networks progress report 
ieee computer 
dias heberlein ho levitt mukherjee 
dids distributed intrusion detection system motivation architecture early prototype 
proceedings th national computer security conference pages october 
somayaji 
personal communication 
staniford chen cheung crawford frank levitt wee yip 
graph intrusion detection system large networks 
proceedings th national information systems security conference 
vigna kemmerer 
netstat network intrusion detection approach 
proceedings th annual computer security applications conference 
massachusetts institute technology evolutionary computation 
