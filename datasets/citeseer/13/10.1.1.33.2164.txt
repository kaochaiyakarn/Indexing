araneus era xml mecca paolo merialdo paolo atzeni mecca dia uniroma merialdo dia uniroma atzeni dia uniroma universita della universita di roma tre large body research motivated attempt extend database manipulation techniques data web see survey 
research efforts range definition web query languages related optimizations systems web site development management integration techniques started xml introduced long time handle highly heterogeneous nature html pages 
web data sources evolved small home collections html pages complex platforms distributed data access application development xml promises impose appropriate format new breed web sites 
xml brings data web closer databases differently html clean distinction way data logical structure dtd chosen presentation stylesheet specified 
virtue early research proposals data management web reconsidered new perspective see collection 
discuss impact xml research conducted years group framework araneus project 
araneus started attempt investigate chances re applying traditional database concepts abstractions ones data model query language data web 
spirit developed tools techniques handle structured semistructured data web style follows data model called adm modeling web documents hypertexts ii languages wrapping querying web sites iii tools techniques web site design implementation 
interesting question tools applications era xml 
sections try answer question emphasizing xml fits framework influencing ideas way thinking web data sources design choices needed adapt tools originally conceived html management xml data 
word caution needed popular xml new proposal little real applications web 
quite difficult reason data management problems come xml haven experienced 
development mainly informal basically try discuss choices tradeoffs related modeling section querying section developing section xml data sources 
adm model xml araneus data model adm introduced tool give intensional description web sites spirit databases 
model allows describe organization data web pages abstracting logical features respect physical html code 
fundamental modeling primitives model natural counterpart ones typically offered object database systems main differences absence hierarchies inheritance presence union types 
adm modeling primitives considered subset odmg sql data models enriched union types 
adm page seen complex object identifier url set attributes 
pages sharing structure grouped page schemes page types 
attributes page schemes type simple mono valued multi valued 
simple types text image link plus popular mime types 
links may typed untyped case destination link need belong specified page type important modeling web sites case homogeneous links reach pages different structure functions 
complex attributes built type constructors tuples ii union types disjunctions attributes iii lists ordered collections tuples possibly nested 
site scheme collection page types class pages site connected links 
essence adm conventional heavy weight object model light weight semistructured model considered middle weight data model sense allows capture structure time offers flexibility modeling heterogeneities irregularities union types untyped links 
experiences model proven quite successful description large fairly structured html sites site querying site development purposes 
comparing model xml keep mind xml formalism describing document structure dtd 
xml dtds mix description logical features document physical ones example entities appropriately considered storage units macros structural components fact xml format data model 
concentrate logical structure possible see adm nicely abstracts modeling primitives xml dtds easily associate database type dtd database object xml document 
consider example hypothetical xml repository books books reviews organized dtds 
document containing list books entry point pointing document book book authors title price plus optional link document containing list reviews review may customer professional case reviewer name provided affiliation space reasons links specified simply macro xlink assume corresponds full definition link xlink syntax 
dtds specify document structure terms number elements attributes associated documents attributes may optional type simple complex simple type elements essentially strings pcdata blobs xml documents xlink note ways constrain destination xlink general unconstrained untyped 
complex attributes limited number primitives follows structures typed tuples elements ii union types disjunctions elements iii lists ordered collections elements possibly nested book 
seen fundamental primitives closely correspond ones offered adm shows graphical representation adm scheme corresponding example 
scheme stacks represent classes documents edges denote links 
contains explanation graphical primitives 
model offers web specific constructs forms maps outside scope 
see model abstracts respect physical features dtd consider example attribute currency element price dtd book dtd considered metadata stored slightly different way respect elements title example database abstraction dtd may decide ignore difference model conventional attribute happens example links way model provides uniform view query mechanism data metadata 
affiliation sample adm scheme ideas show adm generally complex object models union types untyped links provides natural framework describing xml repositories dtds adm abstraction dtds description repository structure 
holds regardless specific kind application need develop data case need query existing data source want derive posteriori high level description basis query process case designing developing xml data source prefer reason higher level directly working xml code 
classes applications discussed sections 
querying xml data sources approach target site identified querying purposes adm description site derived basis reverse engineering process sets homogeneous pages site classified page schemes 
typical html data sources appropriate wrappers need written order build html pages site internal representation data instances data model 
process general delicate demanding conducted manually coding wrappers help algorithms tools automatic wrapper generation 
adm description site corresponding wrappers basis site querying process 
consider case need query xml data source html 
reasonable assume data source general composed xml documents linked 
discussed adm may principle model structure sources dtds 
number subtleties modeling effectiveness strongly related nature data discuss paragraphs 
dtds optional modeling approach heavily mapping dtds adm types 
known dtds mandatory 
explicitly referenced valid xml documents xml parser validate document 
documents called formed explicitly associated dtd 
due freedom unclear extent dtds adopted xml applications consider dtds useless side growing interest major software vendors defining standard classes dtds example commerce applications ease data exchange integration 
usage dtds note special tagging format xml documents minimal dtd document valid derived simple syntactic check document 
say xml document associated dtd explicit implicit describing content 
assume dtds available adm logical structure 
dtds database types true dtds exactly usually consider type 
introduced document community means specifying document structure parser viewpoint dbms 
consequence shortcomings associated 
example elements ordered dtds order may cases relevant immaterial corresponding database type built noted 
elements may cases mix free text subelements complicating modeling 
fact elegant elaborated proposals superimposing schemes xml data coming database community see example 
proposals preliminary stage success xml community unclear 
dtds represent reasonable compromise 
dtds long time text databases schema definition formalism documents sgml xml derivative see example 
works mainly concentrate querying single sgml document time documents dtd loading database consider collections linked documents coming different dtds queried remotely network 
large body shows possible build quite effective mappings dtd structure database structure adopt schema data 
approach advocated major database vendors oracle support xml data 
semi structured xml nice feature xml dtds act natural wrappers documents fact specify grammar parse documents looking attribute values 
need generate wrappers needed html sites adm scheme constructed dtds principle possible run queries source 
peculiarities xml data depart traditional database framework impose re consider aspects querying process 
seen approach discussed far effective fairly structured sources degrades soon data source structured 
way happens current html web sites xml repositories available web range structured regular highly unstructured degree variants 
case probably happen applications xml data source model query remote autonomous collection linked documents available web completely control query system 
essence browser parses formed document 
ideas built tool automatically associates adm scheme xml repository existing dtds inferring missing ones 
case fairly structured repositories possible query languages optimization techniques spirit databases 
example possible load repository object database adm types associated dtds query sql 
opposite warehousing approach cases freshness query answers requirement possible extract data line repository navigating network 
developed query algebra called ulixes navigating querying data sources web queries written path expressions adm scheme source specified path ulixes navigates source starting entry point url known system materializes query result local database 
give example suppose interested finding books repository having review written codd 
scheme query written ulixes follows create view title price books bla com select book title book price book name codd couple important points want emphasize 
applicable approach advantages due availability concise description repository structure spirit database scheme query algebra 
fact allows specify accurate queries apply optimization techniques query evaluation efficient 
require data source loaded database querying 
ulixes capable navigating remotely materializing database portions interest 
xml repository conventional database traditional query evaluation techniques need reconsidered respect 
contrary degree structure repository relatively low scheme tends evolve quickly techniques quite ineffective 
cases query languages developed semistructured data completely ignore schema considered appropriate don space elaborate various query languages inspired semistructured proposed xml refer reader 
envision scenario different xml applications require adoption different data models query languages going structured semistructured 
key problem respect choosing right approach level structuredness target data source 
nice feature xml represents fundamental difference respect example html allows precisely measure level structuredness data source follows 
measuring regularity stability xml data may different sources xml repositories 
due low regularity structure second high chances structure evolves time time 
cases possible build adm scheme repository possibly inferring missing dtds 
case quite irregular repositories number different dtds large adm scheme large 
see consider book example suppose regular version data different dtds books instance book ordinary books old books books published slightly different sets elements reconstructing structure modeled separate page types union types introduced link books 
extreme cases number different types may order number documents 
case measure level regularity repository ratio size scheme respect mechanism modeling union types conventional databases needed 
respect version language version prototype changed syntax similar sql 
number types number attributes inside types size data number documents 
evolution repository structure changes existing dtds new dtds repository equally important may require change database schema 
dtds change adm schema changes repository analysis 
case measure level stability repository period time example ratio size schema number types changed speed change number changes time 
summarize foresee xml data intensive applications different nature data structured stable quite semistructured unstable different classes require adoption different query languages schema 
target xml repository selected measures regularity stability discussed metric provide criterion choose right approach query repository 
experiments actual xml data needed establish right choice 
developing xml data sources accessing existing web data sources important class applications devoted developing new ones see survey 
important case xml witnessing growing interest adoption little available data 
section discuss techniques developed html sites extended generate xml repositories 
model development araneus differently market tools low level tools oriented pure html development procedural sql programming adopted model approach web site development sense approach heavily relies adoption high level models conceptual logical level designing developing sites levels site design process designing data hypertext presentation 
leverage robust wide spread technology adopt relational database back site consequence data published site described conceptual level established entity relationship model logical level relational tables 
hypertext structure described adm consider suppose designing book site scratch want develop underlying database site reverse engineering discussed previous section crucial step specify target hypertext organized seen adm particularly effective giving concise description site hypertext 
adm precise notion style describing graphical layout data items page associated tool designing styles 
assuming chosen scheme scheme target site styles associate graphical layout data items pages 
attribute style arbitrary pieces html code attribute values enclosed generating pages 
consider book title example simple style name 
way actual html page generated book title say html piece html code form html produced 
models fit larger methodological framework designers start conceptual description site domain entity relationship scheme set precise steps progressively styling mechanism provided fact sophisticated 
example offers rapid prototyping facilities allows sample html pages generates styles directly writing style code 
elaborate space reasons 
moves database logical design produces database relational scheme hypertext design produces site adm scheme presentation design producing page styles 
process assisted homer case tool conceived simplify design process automatically produce code page generation site design artifacts 
main advantages model approach process essence independent actual tool chosen page generation fact current version homer may generate code tool web site generation called penelope java server pages templates easily extended generate code major web database gateways 
important advantage working high level models adm styles site generation phase independent chosen format html xml 
fact re generated sites originally developed html xml discussed paragraphs 
html sites xml repositories approach page seen instance adm type url identified nested object 
page generated step relevant data extracted database nested corresponding adm object second step actual html code produced specified corresponding style 
close correspondence adm dtds easily adapted tools order produce xml document possibly adm object enclosing attribute value corresponding element tags associated dtd adm page type 
result step system produces collection linked xml documents dtds 
xsl action repository exchange purposes browsable 
browsable need encode chosen style stylesheet formalisms proposed xml 
experiments decided adopt xsl extensible stylesheet language experiences done internet explorer browsers equipped xml xsl processors 
xsl full fledged functional programming language tree structures xml documents restructure 
fact straightforward way associating browsable layout xml document xsl restructure html code 
essence stylesheet associated xml document collection definitions called templates specify recurse xml tree output produce certain element encountered 
output go browser display screen 
give example suppose documents books element html may template stylesheet specifies element encountered piece html code produced enclosing corresponding value certain html tags example html 
seen adm objects straightforwardly mapped xml documents similarly styles easily implemented xsl stylesheets 
outcome system easily gen extended features xml currently system handle example xml element attributes distinction xml elements attributes unclear generate ids idrefs limited extent generate extended 
main contenders associating presentation xml data documents browsable 
xsl currently stage proposed recommendation 
standard css cascading style sheets conceived originally html allows associate tag document xml element set layout properties example font size face paragraph alignment 
write discussion preferred format styling xml documents 
major browsers chosen different routes internet explorer version adopted flexible xsl gecko code name netscape supports stable css 
note css experience may profitably conjunction xsl embedding html code generated xsl refine layout html tags 
done experiments 
erate plain html sites xml sites xsl stylesheets 
principle completely transparent operation subtleties 
due fact xsl processor quite strict enforcing correctness html code produces fact designed produce xhtml code reformulation html xml 
consequence typical errors html developers opening closing tags allowed produce run time errors page displayed 
consequence certain effort needed order polish html code styles able xsl 
xml sites generated including portions sigmod line web site www acm org sigmod available araneus project web site 
araneus project web site 
www dia uniroma araneus 
biztalk web site 
www biztalk org 
java server pages jsp home page 
www java sun com products jsp 
query languages workshop www org ql ql 
technical reports working draft march 
www org tr 
xml support oracle 
www oracle com xml documents xml 
abiteboul cluet christophides milo moerkotte simeon 
querying documents object databases 
journal digital libraries april 
atzeni mecca merialdo 
weave web 
vldb 
atzeni mecca merialdo 
design maintenance data intensive web sites 
edbt 
blake consens larson snider tompa 
text relational database management systems sql sgml 
adb lncs springer verlag june 
christophides abiteboul cluet scholl 
structured documents novel query facilities 
sigmod 
crescenzi mecca 
grammars exceptions 
information systems 
florescu levy mendelzon 
database techniques world wide web survey 
sigmod record 
grumbach mecca 
search lost schema 
icdt 
linden mannila 
structured document database system 
intern 
conf 
electronic publishing document manipulation typography ep pages 
mecca atzeni 
cut paste 
journal computing system sciences 
mecca mendelzon merialdo 
efficient queries web views 
edbt 
mecca merialdo atzeni crescenzi 
short araneus guide web site development 
webdb 
suciu 
managing web data 
tutorial sigmod 
empty html tags need specified entities 
