protecting file systems survey backup techniques ann chervenak zachary vivek cc gatech edu tel fax presents survey backup techniques protecting file systems 
include choices device file backup schemes full vs incremental backups optional data compression 
discuss techniques line backup backups performed users continue access file system techniques include file system locking creating instantaneous copy write snapshots file system 
discuss protecting data site disasters media deterioration 
classifies research commercial backup systems parameters described 
classified systems include unix dump tar utilities hierarchical storage managers ibm distributed storage manager unitree research academic systems 
conclude measurements full incremental backups year period large networked unix environment georgia tech college computing 
survey backup techniques file systems 
backups protect file systems user errors disk hardware failures software errors may corrupt file system natural disasters 
common uses backups restore files accidentally deleted users recover disk failures 
capacities new magnetic disk drives continue increase rate year decade networked computing environments grow include multiple terabytes disk storage 
access times data rates disk tape drives increase slower rates year 
trends indicate take increasingly long read contents disk drive write backup device 
time traditional backup schemes prove slow 
surveys classifies existing backup techniques prelude identifying needs systems 
section characterizes design issues backup software 
section describes features various academic commercial backup schemes 
section presents measurements full incremental backups georgia institute technology college computing 
section discusses desirable properties backup systems 
design issues backup software sections characterize features backup systems full vs incremental backups file vs device schemes support line backups snapshots copy write mechanisms concurrent backups data compression support tape management disaster recovery 
full vs incremental simplest way protect file system disk failures file corruption copy entire contents file system backup device 
resulting archive called full backup 
file system lost due disk failure reconstructed full backup replacement disk 
individual lost files retrieved 
full backups disadvantages reading writing entire file system slow storing copy file system consumes significant capacity backup medium 
faster smaller backups achieved incremental backup scheme copies files created modified previous backup 
incremental schemes reduce size backups small percentage files change day 
typical incremental scheme performs occasional full backups supplemented frequent incremental backups 
restoring deleted file entire file system slower incremental backup system recovery may require consulting chain backup files full backup applying changes recorded incremental backups 
characterize variations incremental backup techniques 
call traditional scheme occasional full backups supplemented frequent incremental backups full incremental simply incremental scheme 
systems include variations incremental backup schemes 
incremental scheme ibm adsm system section full backups eliminated files written backup medium change 
unitree hierarchical storage manager section characterized continuous incremental backup scheme system copies newly written data minutes doing traditional incremental backup day 
file vs device files consist logical blocks 
blocks called pages typically fixed size approximately kilobytes 
logical file block stored contiguous physical disk block 
different logical blocks file may stored contiguously disk 
unix uses index node inode structure map logical block addresses corresponding physical addresses disk 
inode contains pointers physical disk blocks large files single inode may small map logical blocks supplemented indirect blocks contain additional pointers 
backup software operate files physical disk blocks 
file backup systems understand file structure copy entire files directories backup devices 
systems traverse pointers stored inode read physical blocks file sequentially 
backup software writes file contiguously backup medium facilitates fast individual file recovery 
storing files contiguously slows backups extra disk seek operations required file stored contiguously disk 
extra seek operations increase disk overhead decrease disk throughput 
disadvantage file incremental backup schemes small change file requires entire file backed 
tools file backup include unix tar program 
contrast physical device backup systems ignore file structure copying disk blocks backup medium 
improves backup performance backup software performs fewer costly seek operations 
approach complicates slows file restores files may stored contiguously backup medium 
unix dump program called device accurately considered hybrid pure device file scheme section 
allow file recovery device backups include information files directories organized disks correlate blocks backup medium particular files 
device programs specific particular file system implementation easily portable 
file schemes tar portable backup file contains contiguous files notion files fairly universal 
disadvantage device backup schemes may introduce data inconsistencies 
operating system kernel may buffer write data writing disk device backup schemes traverse disk blocks order typically ignore file cache data back older versions files 
contrast file backup schemes consult file cache back current versions files 
line backup backup programs require file system remain quiescent backup line active backup systems allow users continue accessing files backup 
line backup systems offer higher availability introduce consistency problems 
shumway discusses difficulties line backups programs unix tar dump 
serious problems occur directories moved backup changing file system hierarchy 
user moves directory backup depending backup program traversal file system hierarchy backup program may encounter directory fail copy backup medium may encounter copy directory multiple times different locations 
backup programs perform depth traversal file system hierarchy 
unix tar operates single phase copying files backup medium traverses file system hierarchy 
contrast dump operates multiple phases scan phase traverses records structure file hierarchy followed dump phase copies files 
single phase programs tar longest vulnerability file movement multiple phase dump program vulnerable scan phase constructs image file system structure 
problems line backup include file transformations deletions modifications backup 
example file transformation compression contents file compressed written new file name possibly new directory original file deleted 
new compressed file backed backup program completed scan phase dump traversed portion file system hierarchy tar original file backed deleted 
general files deleted backup program reaches copied backup medium 
file modified backup results unpredictable 
backup may contain mix old new data 
strategies overcoming problems line backup locking detection 
section discusses third scheme copy write 
prevent directory movement file modification systems lock directories files disallow move write truncate link commands 
locking limits availability file system important minimize locking period 
alternatively backup system detect file directory movements modifications comparing old new state file system moved modified file left previous backup software ensures included 
ibm adsm hierarchical storage system section offers line backup various levels consistency 
extreme system may configured back file modified 
extreme system copies files backup medium regardless modified 
extremes system retry copy operations attempt back stable consistent version file 
snapshots copy write alternative line backup create snapshot frozen read copy current state file system 
contents snapshot may copied backup device danger file system hierarchy changing subsequent accesses 
systems andrew section petal section section full incremental backups frozen snapshot 
system maintain number snapshots providing read access earlier versions files directories 
copy write scheme snapshots 
snapshot created subsequent modifications files directories applied newly created copies original data 
blocks copied modified conserves disk space 
plan section petal backup systems copy write 
concurrent backups performing backups large collection networked machines desirable perform backups multiple file systems parallel multiple tape drives 
systems discussed section allow concurrent backups 
amanda backup manager section uses temporary staging disk hold backups file systems eventually backups written tape drive high bandwidth 
section interleaves concurrent backups machines single tape drive 
ibm adsm section sends concurrent backups multiple machines separate tape drives 
georgia tech college computing performs backups tape drives parallel section 
compression reduce tape storage network bandwidth requirements backup systems give administrators option compress files backup 
backup system may compress data client file server compression hardware software 
ibm adsm section section include optional file compression 
alternatively storage devices may compress data immediately writing files backup medium 
devices including tape drives equipped compression hardware 
file restores mentioned issues affecting speed restoring individual files entire file systems 
restores slower incremental backup system full backup apply changes subsequent incremental backups 
backup schemes may slow restores blocks file may stored contiguously backup medium 
additional concern restoring entire file systems files deleted previous backup reappear restored file system 
performance individual file restores improves dramatically systems maintain online snapshots earlier versions file system described section 
unitree section supports trash feature temporary storage deleted files 
sections discuss tape management disaster recovery issues affect system ability restore files 
tape management time backup system generates large number backup tapes 
tapes labeled internally externally avoid losing backup data 
internally tape begins file label identifies file system backups stored tape 
information repeated tape external physical label 
backup system writes backup tape reads tape restore operation reads internal tape label verify correct tape loaded 
systems include relational database correlates filenames dates backup tapes 
magnetic tape systems face difficult reliability challenges including errors correctable error correction codes ecc tape wear head wear long term tape storage 
tape error detected previously written data successfully read 
errors caused debris embedded tape surface 
rate errors high magnetic tape drives incorporate large amounts error correction code 
despite tapes occasionally encounter errors rectified ecc 
tape wear reliability issue 
magnetic tapes frequently read written eventually wear 
tapes average passes 
wear sooner particular segment tape accessed repeatedly 
frequent stops starts tape cause excessive wear 
tape heads wear typically hours 
set reliability concerns involves long term storage data tape 
time tapes subject mechanical changes including tape shrinkage edges peeling magnetic layer 
avoid losing data due wear mechanical problems tape deterioration backup systems maintain information tape drive usage replace old tapes schedule drive maintenance 
nemeth offer additional practical advice performing backups unix environments 
correctness backup procedures monitored backup software attempt re read tapes dumps complete 
guard backup tapes unreadable tape drives wrote drive heads drift alignment time system administrators periodically attempt restore files various tapes including tapes months years old 
administrators attempt read backup tapes different drives written guarantee tape drive destroyed drives able read tapes 
particular tapes may lost damaged contain errors important loss tape render entire backup useless 
scheme georgia tech college computing section avoids problem doing full backups week daily incremental backups respect previous week full backup 
allows files recovered event loss current week previous week full backup 
scheme developed ohio state university maintains multiple redundant backup chains independent sets full incremental backups 
scheme requires twice tapes drives offers high degree reliability 
disaster recovery nemeth describe techniques ensure recovery possible natural disasters 
dump tapes contain full backups stored site prevent data loss event natural disaster fire 
backup tapes secured access unauthorized persons contain installation data 
ibm adsm system section automatically generates disaster recovery plan contains recovery instructions scripts plan includes list necessary backup tapes tape drives physical locations 
section plans add support automatically writing site copies data guard data loss local disasters 
backup systems examine commercial research backup systems classify issues discussed section 
table summarizes features backup programs systems 
incremental file line concurrent system scheme device backup backup dump full incremental hybrid scripts tar full incremental file scripts ibm adsm incremental file file interleaved unitree continuous incremental petal full incremental file frangipani uses tar snapshots amanda full incremental uses tar dump plan permanent file storage snapshots full incremental device lfs snapshots table classification backup programs systems 
blank spaces table indicate information available 
indicates category apply 
unix dump common unix backup program dump operates passes 
dump maintains character arrays directories inodes 
pass algorithm dump marks directory setting bit character array 
dump examines inode setting array bit inodes blocks modified dump 
second pass algorithm dump looks bits inodes particular directory 
inodes marked subdirectories directory marked dump leaves directory marked 
dump directory 
pass continues inodes examined 
third pass algorithm dump writes marked directories tape archive device 
fourth pass dump writes marked inodes modified data blocks 
dump create backups local tape drive variation writes backups remote tape drive 
dump performs incremental backups different levels 
level dump corresponds full backup 
level dump backs files modified dump level different sites devise schedules dump activity file systems capacity number tapes amount redundancy desired 
simple expensive schedule level zero dumps full backups day 
moderate schedule perform different levels backup daily weekly monthly annual basis 
example daily level backups supplemented weekly level backups monthly level backups level zero backups year 
backup schemes towers hanoi sequence alternate backups different levels achieve high redundancy relatively tapes schemes complex may perform poorly restores access tapes 
dump program includes options specifying tape characteristics including capacity tape density blocking factor length number tracks 
parameters third fourth passes algorithm estimate tape length number tapes required backup 
goal avoid running tape 
full backups level dumps performed quiescent file system 
addition dump offers verification option checks correctness volume dumped 
unix tar unix tar program file archival program 
tar traverses file system hierarchy single pass 
uses standard unix file system read calls read file sequentially copies sequentially backup medium 
stores files contiguously tar offers efficient restores individual files 
tar writes files semantics files widely accepted tar archives portable dump files 
tar widely transferring files directories backups 
ibm adsm commercial storage management system includes flexible backup functionality ibm adsm distributed storage manager 
adsm supports automated backup multiple clients concurrently separate backup devices optionally compresses data backup write multiple copies backup file 
storage manager maintains multiple versions files specified length time 
adsm allows selective incremental backups 
selective backups copy specified files directories 
incremental backup scheme called progressive incremental incremental duplicates file time backed changes file recorded full copies required 
adsm supports line backup different schemes modes serialization 
static mode adsm back file modified referred open file 
shared static mode system retries backup open file specified number times static copy file 
shared dynamic mode retries backup open file specified number times try file open system backs file regardless may modified backup 
dynamic mode backs files regardless open 
adsm hierarchical storage manager organizes storage devices pools 
primary pools magnetic disk drives provide fast access files 
files soon accessed may automatically migrate lower levels storage hierarchy file size age 
lower levels hierarchy may include magnetic disk magnetic tape optical disk drives 
copy storage pools lower levels storage hierarchy specifically backup 
adsm backup software copies files primary pools copy storage pools 
hierarchical storage manager tightly integrated backup functions typically file replicated copy storage pool migrated lower level hierarchy 
options file recovery adsm 
system supports point intime recovery restores file system database state particular full incremental backup 
database systems adsm maintain log transactions failure system restored state backup log roll forward state database point system crash 
adsm accelerates recovery files single client collocation 
system data client sequential volumes possible 
clients initiate file recovery 
facilitate site recovery disaster adsm automatically generates updated disaster recovery plan 
plan includes instructions recovering server list relevant backups copy pool volumes needed recovery site locations volumes devices needed read backups amount space required restore file system system configuration files shell scripts needed initiate recovery 
commercial storage manager performs automated network backup 
allows file systems send data backup storage devices simultaneously 
achieve optimal transfer rates backup tape drives interleaves backup data sent simultaneously multiple clients single tape 
clients may optionally compress files sending network backup 
includes application specific routines obey locking conventions particular applications relational databases backup data actively running applications 
software writes electronic labels tapes labels checked new writes allowed 
writes files backup medium portable machine independent file format called open tape format 
machine independent format allows clients different operating systems write backup tape allows client restore files backed platform 
server process initiates backup session setting connection save process client media manager process server 
save process reads backup data client file system database forwards media manager writes backup device 
unitree unitree hierarchical mass storage system unix environments originally developed lawrence livermore national laboratory 
unitree allows automatic migration files levels storage hierarchy 
unitree perform traditional full incremental backups provides continuous backup 
creation files stored magnetic disk cache 
short period typically minutes unitree copies newly created files lower levels storage hierarchy 
files protected quickly daily incremental backup 
user copies file physically distinct media 
versions unitree provide disaster protection creating automatic remote copies files wide area network 
copy file exists lower level hierarchy unitree needs space disk cache new files quickly purge existing files 
performance unitree maintains metadata magnetic disk 
data loss files may recovered valid copy hierarchy 
addition unitree supports trash feature directories user retain discarded files 
feature allows users quickly restore files accidentally deleted requiring backup tapes 
unitree offers database recovery including transaction logs 
petal frangipani petal system dec systems research center allows collection network connected servers cooperatively manage pool physical disks 
pool disks appears servers single large virtual disk 
petal provides copy write snapshot mechanism 
creating snapshot petal pauses applications briefly second 
snapshots may kept online quick access previous versions data 
create virtual disk backup petal simply copies snapshot archive device utility tar 
frangipani distributed file system built top petal virtual disks uses petal snapshot facility perform file system backups 
amanda amanda network backup manager developed university maryland college park facilitate network backup unix workstations parallel 
amanda uses standard unix backup programs dump tar 
best performance amanda writes multiple backups parallel temporary holding disk streams data tape drive maximum transfer rate 
amanda backups controlled central backup server host initiates backups peak hours 
backup server host dictates backup level file system night 
amanda provides backup history individual file systems facilitate restores 
system allows optional compression file system 
amanda performs checks backups run 
backups verifies correct tapes loaded tape drives sufficient temporary storage holding disk 
backups amanda reports problems occurred including disk errors backup program problems permission errors software crashes client hosts 
plan plan computing environment write optical disk jukebox permanent file storage 
system included magnetic disk file cache faster file access 
daily line backups creating snapshots file system 
plan copy write scheme state file system subsequent modifications copy frozen data 
old files deleted users restore individual files entire file systems state earlier date 
file access permissions maintained snapshot copies files 
andrew file system andrew file system afs organizes files volumes focus system management including backup restore 
volume collection files directories 
typically user home directory resides different volume different binary directories 
volume resides entirely magnetic disk partition disk partition may hold multiple volumes 
andrew allows cloning copying volumes 
backup afs begins creating clone called backup volume contains hard links files original volume 
backup volume dumped tape full incremental backup scheme 
writing backup tape andrew may delete backup volume may keep line read access previous versions data equivalent snapshot 
machines networked file system designated backup machines 
machines coordinate tape drive operations maintain database information tapes dump schedules individual volumes sets volumes 
log structured file system backup backup system dec provides line backup log structured file system lfs 
log structured file system writes modifications disk sequentially append log 
log divided segments composed disk blocks 
log written sequentially segments appear log temporal order 
time portions files edited deleted portions segments contain obsolete data 
segment cleaner periodically traverses log compresses valid information new segments freeing original segments 
periodically lfs writes checkpoint log records mapping logical file blocks file system location log 
lfs puts pointer log fixed location disk 
crash recovery lfs quickly restores file system reading checkpoint log roll forward checkpoint 
lfs create snapshots called time travel file system creating checkpoints turning segment cleaner space reclaimed files deleted 
exploits features lfs backup system 
uses lfs checkpoint capability create snapshot file system copied backup medium 
uses physical device backup scheme copies lfs segments files read data sequentially disk write backup medium high transfer rate 
temporal ordering segments lfs allows perform simple incremental backup copying segments backup medium modified backup 
facilitate restores individual files writes copy directory tree writing segments backup medium 
directories consulted determine segments contain data requested file segments need read backup medium 
restoring entire volume requires copying incremental backup preceding backups size incremental backups average incremental backup size jul aug oct dec jan mar may jul size incremental backups size full backup average full backup size jul aug oct dec jan mar may jul size full backups size incremental full backups georgia tech college computing august june 
depends disk 
sgi terabyte backup silicon graphics implemented system includes origin server disks channels ibm tape drives 
system achieves backup rate terabyte data hour spectra logic alexandria hierarchical storage manager software 
performance achieved running tpc database benchmark applied load transactions minute 
georgia tech backup measurements college computing georgia tech unix workstations smaller number intel personal computers running windows nt 
machines backed locally defined collection backup scripts performed full backups week incremental backups daily 
backups performed tape drives simultaneously 
tape drive write approximately gigabytes compressed data tape 
shows average sizes incremental full backups respectively period approximately year 
incremental backups show steady increase average data produced week december large increase data probably due temporary storage image video files graphics researchers 
incremental backups typically consume gigabytes full backups consume gigabytes week 
full backup sizes increase considerably december drop march indicating large files created removed system 
backup times represent sum time spent tape drives 
aggregate time incremental backups approximately hours full backups took approxi mately hours 
distributed tape drives means full backups consumed hours real time week drive typically spread days 
college switched software backup unix machines retrospect backup macintosh intel machines 
addition college acquired tape libraries containing drives 
tape library holds gigabytes compressed data 
libraries tape drives capable writing gigabytes compressed data tape 
new scheme full backups unix machines performed quarter level backups performed month level backups done week 
scheme includes daily incremental backups 
college supports active users 
system administrators typically receive request day restore file accidentally deleted user 
restores entire file systems due disk failures frequent occurring approximately month 
summary developed characterization backup systems categorize number commercial research backup schemes 
classified incremental backup schemes 
full incremental scheme supplements occasional full backups frequent incremental backups 
incremental scheme avoids full backups file system writes incremental changes 
continuous incremental system copies new data minutes written 
differentiated systems copy data backup medium contiguous files vs copy physical blocks regardless file structure 
file backups facilitate restores portable device backups access disk efficiently 
discussed problems associated providing line backup considered schemes 
file system disallow writes backup create instantaneous snapshots read copies file system may copied backup medium 
systems create snapshots provide copy write scheme replicates data modified saving substantial disk space 
discussed schemes providing concurrent backup multiple file systems network 
discussed ability file systems compress files written backup device 
systems provide support managing tapes tape drives provide automatic protection site disasters creating managing remote copies data 
file systems grow multiple terabytes new backup strategies required protect 
promising techniques handling large file systems appear incremental backup schemes device backup disk bandwidth efficiently avoid writing entire files small file changes snapshots copy write line backup compression data backup automated creation site backup files 
authors grateful dan forsyth generous assistance gathering statistics georgia tech backup environment 
gupta initial identifying papers study 
funded part nsf ccr 
anderson 
simple free system automated network backups 
third annual system networking security conference sans iii pages 
open systems conference board april 

mechanics magnetic storage devices 
springer verlag new york 
clark cox 
origin terabyte hour backup white 
www sgi com technology html 
documentation 
www com 
da silva 
performance parallel network backup manager 
usenix conference proceedings pages 
da silva 
amanda network backup manager 
proceedings usenix systems administration lisa vii conference pages november 
green baird davies 
designing fast line backup system log structured file system 
digital technical journal october 
hecht 
andrew backup system 
usenix proceedings workshop large installation systems administration pages pp 
november 
distributed storage manager adsm distributed data recovery white 
www storage ibm com storage software adsm htm 
distributed storage manager adsm frequently asked questions 
www storage ibm com storage software adsm htm 
kim 
unitree closer look solving data storage problem 
unitree software www unitree com htm 

long term storage metal tapes 
fuji photo film magnetic recording lab fiat technical commission netherlands june th 

step backup restore technology 
usenix proceedings th conference large installation systems administration pages september 

afs backup system 
usenix proceedings th conference large installation systems administration pages october 
lee thekkath 
petal distributed virtual disks 
seventh international conference architectural support programming languages operating systems asplos vii october 

magnetic tape recording archival considerations 
digest papers 
tenth ieee symposium mass storage systems may 
daniel editors 
magnetic recording volume ii computer data storage 
mcgraw hill new york 
ncsa 
unitree mass storage system frequently asked questions 
consult ncsa uiuc edu docs unitree 
nemeth snyder hein 
unix system administration handbook 
prentice hall upper saddle river new jersey 
pike presotto thompson trickey 
plan bell labs 

backup ohio state take 
usenix proceedings th conference large installation systems administration pages october 
rosenblum ousterhout 
log structured file system 
proceedings th acm symposium operating systems principles pages june 
shumway 
issues line backup 
usenix proceedings th conference large installation systems administration pages september 
software 
technical overview 
www unitree com htm 
thekkath mann lee 
frangipani scalable distributed file system 
sixteenth acm symposium operating system principles sosp october 
dump 
unix system man page 
tar 
unix system man page 

testing backup archive programs things ought know probably 
usenix proceedings th conference large installation systems administration pages september 
