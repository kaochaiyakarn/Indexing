security meteor workflow management system john miller mei fan wu arpinar amit sheth kochut large scale distributed information systems lab lsdis department computer science university georgia athens ga email jam cs uga edu url lsdis cs uga edu meteor workflow management system emphasizes web technology 
includes enactment services purely web orbwork uses web corba technology 
workflow management systems utilizing web technology increasingly viable choice workflows span multiple organizations geographical areas 
web technology terribly secure 
utilizing appropriate encryption algorithms digital signatures access control workflow management systems secure 
systems include subsystems operating system database system may involve multiple organizations complete security solutions enormously complex 
sort promising security alternatives organize security architecture suitable workflow management systems utilizing web technology 
security architecture tested toy enactment service major meteor enactment services 
popularity workflow continues grow invade application domains healthcare military electronic commerce security vital concern 
workflows span multiple organizations interface sorts existing applications security issues quite complex 
workflows utilizing web technology may rapidly deployed large geographical areas involve organizations potentially represent major security risk 
focuses security workflow management systems wfmss utilizing web technology importance associated risk 
krishnakumar sheth sheth emphasizes web technology 
includes enactment services miller purely web orbwork kochut uses web corba technology 
workflow management systems provide automated framework managing intra inter enterprise business processes 
workflow management coalition wfmc workflow management system set tools providing support process definition workflow enactment administration monitoring workflow processes hollingsworth 
application domains workflow technology currently include healthcare education telecommunication manufacturing finance banking office automation 
wfmss today reengineer streamline automate track organizational processes involving human automated information systems georgakopoulos fischer sheth sheth success wfmss driven need businesses stay technologically ahead increasing competition typically global markets 
web technology appropriate choice workflow infrastructure distinct important reasons 
ubiquitous nature web browsers natural user interface 
web browsers satisfy primary concerns application deployment allows users popular computing platforms able participate workflow additional hardware 
second web technology provides solid communications infrastructure building wfmss 
workflow usually contains set automated human tasks organized real world rules business processes 
task represents abstraction activities performed variety processing entities 
tasks meteor basic types human tasks interaction users workflow participants automated tasks directly involve human interaction 
automated tasks may transactional database update non transactional program making non atomic file updates 
compound task consists collection sub tasks forming hierarchy top level task considered workflow 
human task typically worklist organizes items sort list 
task scheduling data flow control flow exception handling recovery monitoring functions provided task managers schedulers auxiliary enactment service processes 
sheth miller miller kochut 
potential threats web workflow allowed execute certain workflow tasks 
allowed access information 
want information sent network stolen 
want tampered information stored database 
need identify security issues related workflow find solutions 
groups companies working workflow management system considering security issues including knowledge systems working workflow enhanced authorization control 
workflow provides data encryption capabilities secure workflows networks 
hung architecture secure ams hung nato advanced study institute asi workflow management systems interoperability 
user point view principal elements security 
user wishing participate workflow identified authenticated allowed participate 
addition activities authenticated user tracked audited 
second system communication involving user secure encrypted 
access object task data object checked sure usage authorized 
sort promising security alternatives organize security architecture suitable web workflow 
key aspects security addressed depth authentication access control secure communication 
authentication prerequisite proper access control 
secure communication stealing tampering messages sent network practically impossible 
workflow prototype developed java order test architecture 
organized follows appropriate background section discusses security services relevant workflow 
section considers role access control workflow point view 
security architecture web workflows section 
section discusses prototype java implementation architecture 
section gives explores 
security services international standards organization iso specified common security services network information systems provide ffl authentication services ffl access control services ffl data confidentiality ffl data integrity ffl non repudiation 
authentication services provide ability verify entity claims 
access control services provide protection system resources unauthorized 
data confidentiality services provide protection data unauthorized disclosure 
data integrity services provide protection data unauthorized modifications 
nonrepudiation services prevent entities involved action denying participation part action 
authentication services important prerequisites proper access control 
user process properly authenticated access control service effectively mediate access system resources 
data confidentiality services protect information stolen provide protection duplication modification data 
prevent data integrity services needed 
non repudiation services important context electronic commerce internet 
authentication service domains critically important limit access data tasks authorized individuals 
subject user client begins participating workflow identified authenticated really 
unique identification workflow system user digital signatures public private keys 
gets user private key system insecure 
minimize risk physical logical barriers set stealing private key difficult 
physical barriers include putting private key removable media floppy disk cd smart card 
user may take private key lock secure place 
may stolen may important logical barriers combinations passwords identifying information name ssn birthday fingerprints retinal scans 
access control service authorized users allowed execute tasks access data objects 
access control effective sense unauthorized user granted access time authorized user denied access 
certain application areas healthcare security get way critical situation 
case emergency certain authenticated users may temporarily assume greater privileges higher role 
referred break glass procedure 
unusual events recorded workflow administrator immediately informed 
addition maximal auditing tracking done user logs higher role 
data confidentiality service network information systems important messages stolen contain confidential information medical patient records 
effectively guarantee sufficiently strong encryption able decipher data flowing network intended recipients 
symmetric key encryption algorithms typically encrypt data faster public key algorithms 
symmetric key algorithms require complex key exchange 
public key algorithms send symmetric keys network 
data integrity service stolen messages useless encrypted malicious user may cause problems 
intercepts message just byte stream modifies sends message longer valid 
ensure message tampered message authentication code mac calculated applying hash function message form digest 
digest sent message digital signature 
receipt message message assumed tampered hash function applied received message disagrees digest 
non repudiation service workflow setting important monitor accesses 
user gains access illegally user significant mistake administrators able quickly find done 
sufficiently effective reliable authentication tracking possible establish identity individual responsible executing task 
system keep track executed task executed 
general wfmss provide auditing tracking monitoring capabilities purposes evaluating efficiency effectiveness elements workflow automated tasks workflow participants users workflow design 
course information useful security 
security privacy violation suspected utilities available workflow administrators facilitate investigations 
having introduced common security services needed workflow systems section appendix examine relevant technologies solutions currently exist today computer industry applied cooper rubin pfleeger oaks knudsen 
role access control workflow security administration large networked systems costly error prone 
role access control rbac barkley security may managed level corresponds organization structure 
simplifies management authorization providing opportunity greater flexibility specifying enforcing enterprise specific protection policies compared access control lists acls 
acls common access control mechanism control user access creation maintenance access control lists associated protected objects 
acls associate protected object list users groups users respective modes access protected object 
acls advantages users owners protected objects 
users right users access object 
acls easy know access object access mode 
real world enterprises users may owner information 
may information 
access priorities controlled organization employee functions data ownership barkley 
difficult retrieve information access rights particular user acl structure barkley 
rbac users discretionary access enterprise objects 
access permissions administratively associated roles users administratively members appropriate roles 
idea simplifies management authorization providing opportunity flexibility specifying enforcing enterprise specific protection policies 
reduces cost administering access control policies making process error prone 
process defining roles may analysis organization operates 
users members roles determined responsibilities qualifications easily reassigned role modifying underlying access structure job assignment changed 
operations user permitted perform user role 
roles granted new operations new applications actions operations revoked roles needed updating privilege user individual basis 
simplifies administration management privileges 
workflow rbac may determine role subject user client may perform 
role determines tasks user may execute data objects may access 
having established identity user need ensure user perform roles entitled 
typically workflow designers define roles workflow participants workflow administrator assign users specific roles 
design time task assigned role expression set roles optional constraints 
approach convenient distinct ways users known design time infeasible authorize users time 
role groups collection privileges tasks executed assigning user long tedious list privileges acl simply assigned roles 
rbac provides solid foundation security workflow management systems 
role hierarchies capability role inherit role common feature rbac models 
roles overlapping responsibilities privileges users belonging different roles may need perform common operations 
role definition assignment convenient roles may organized hierarchically role implicitly including operations constraints objects associated role 
addition role hierarchies enhance logical structuring roles hospital wishes ensure doctors may perform tasks nurses perform 
general role hierarchies designed reflect responsibilities authorities competencies groups organization 
role assignment constraints rbac administrators impose constraints role design user role assignment 
types constraints static separation duties ssd dynamic separation duties dsd barkley barkley 
ffl static separation duties user authorized role role mutually exclusive roles user authorized 
roles ssd relationship user may authorized roles 
example user assigned role teller role auditor bank roles mutually exclusive bank policy 
ffl dynamic separation duties pair roles may designed mutually exclusive regard role activation 
user may authorized roles roles dsd relationship user may roles active time 
example bank teller account holder bank employed 
roles activated time 
properly administered rbac provides flexibility breadth application achieved statically dynamically regulating users actions establishment definition roles role hierarchies relationships constraints 
role domains ontologies defining set roles new workflow designed having set roles apply designed workflows desirable take middle ground 
group roles collected role domain 
role domain may associated workflows 
support mappings role domains supported purpose integrating workflows different role domains domains may referred ontologies 
mappings may map workflow role ontology local ontology subsystem roles defined local oracle database 
security architecture section discusses security mechanisms solutions effectively combined organized architecture security meteor wfmss 
particular architecture requires message encryption digital signatures role access control rbac 
mentioned meteor workflow elements include tasks task managers schedulers 
purposes security types agents added common workflow enactment service elements ffl security agent 
security agent final arbiter security decisions 
security information stored security database possibly replicated accessed security agents 
agents workflow enactment elements consult security agent necessary 
ffl login agent 
login agent charge login procedure role selection procedure 
users workflow participants login select appropriate role proper authentication prerequisite proper authorization 
security agent consulted user identification verification list permitted roles associated user properly authenticated 
ffl worklist agent 
worklist agent launched login agent charge associations role user currently plays permitted tasks corresponding items 
security agent consulted see user authorized execute tasks 
schedulers task managers schedule manage execution tasks 
responsibility authorize execution tasks 
case human task role object embedding user digital signature created login maintained worklist agent 
item selected worklist scheduler task manager check authorization role object 
case automated task execution proceeds incoming requests behalf subject user 
natural way implement send role objects data objects sent automatic tasks 
case scheduler task manager task examines user digital signature role information decide permit task execute information provided security agent 
addition handle task authentication data communication different tasks 
prevent messages stolen tampered communication system components encrypted 
way elements interact shown discussed subsections 
user security agent task task manager task scheduler security db application db login agent worklist agent security architecture workflow centric point view consider fragment workflow consisting human tasks feeding automated task inputs anded 
situation depicted 
human task check assuming requesting role object role created user logins particular role type doctor 
automated task role object checked anding inputs oring allow role object pass check 
details check subsection 
task manager task manager task manager scheduler scheduler scheduler application level workflow level data objects security agent task task human human automatic data objects worklist agent worklist agent role object role object task role object role object security workflow fragment modeling rbac workflow subsection role access control workflow examined terms entities associated roles relationships roles entities 
entities associated roles types entities workflow relevant enforcement role access control 
ffl user 
participant workflow 
ffl role 
participant may play roles particular time 
ffl 
related roles organized role domain may workflows 
ffl task 
task may executed participants logged authorized roles 
ffl 
main types data objects workflow workflow level data objects application level data objects refined categorization see wu 
access data object controlled basis task role requesting access 
role relationships central issue applying rbac workflow relate roles entities discussed 
need thread security weaved user role task data object 
choose relate entities arity relationship 
true spirit rbac user role connected separate binary relationship 
leaves option associating role task ternary relationship 
ternary relationship general flexible approach may complex 
ternary relationship useful binary relationship roles tasks order determine participant logged role may execute task 
addition sacrificing flexibility may choose decompose ternary multiple binary relationships 
possibilities listed ffl ternary relationship 
decisions task execution access may arbitrarily linked roles 
ffl ternary relationship binary relationship 
execution task dependent role 
access dependent task role 
ffl binary relationships 
case binary relationships associating role task associating task 
ffl binary relationships 
case binary relationships associating role task associating task associating role 
point chosen general approach second possibility listed 
total security thread weave composed principal relationships 
specify precisely functional specifications 
unified modeling language uml data model restricted version 
ffl user role mapping 
user needs participate workflows assigned roles 
user role functions returns true iff user assigned perform role 
user successfully logins role object created representing role played user 
role object sent request user information making access control decisions 
ffl task role mapping 
task designed assigned role expression optionally constraint 
task role specify associating roles task 
task role authorized run task iff role expression role constraint 
role expression formed set operators union intersection difference symmetric difference 
role constraint predicate comparison operators combined boolean operators role attributes 
role expressions constraints fundamentally different expressions type expressions constraints operate role objects 
example constraint indicating nurse performing task years experience 
nurse experience constraints introduce complexity possible conflicts 
suppose doctor years experience wishes execute task permitted 
example role constraints may incompatible role hierarchies 
conflicts resolved letting organization set policy hierarchy overrides constraints see arpinar details 
ffl task role mapping 
mapping encode ternary relationship 
specification part access control especially difficult reasons number possible accessible data objects may large deal systematic convenient way 
data objects example legacy systems may accessed invisibly workflow system 
meteor workflow model emphasizes abstraction sense details task need may argue known task managers scheduler 
workflow level processes know application level data objects task control access enforce access control 
specific data objects accessed may determined task begun run 
reasons access control data objects responsibility task workflow system 
invoking role objects input data objects internal logic task decide access permitted defer decision system resource database system 
suggests worst case solution custom coding application task 
cases automation may helpful discussed subsection 
control access data objects information stored wfms workflow applications may access sensitive information stored files databases 
systems ensure sensitive information accidentally available 
security measures applied help assure 
care taken application developers task implementors system administrators database administrators secure data component systems database systems typically provide role security 
security workflows simplified responsibilities divided workflow developer administrator application task implementors 
authorization execute task concern workflow developer administrator enforced schedulers task managers access data objects concern task implementor enforced task 
alternative approach control access data objects managed workflow level see wu 
consider access control done different types data objects ffl accessing databases 
authorization access database objects task handled task implementor conjunction database administrator 
particular access oracle database username password passed parameters connect function 
strings hardcoded task implementation 
hardcoded source code available 
order difficult hackers steal database passwords executable files readable 
alternative passwords tasks may stored role objects 
ffl accessing persistent objects 
typically distributed object management systems provide provide persistent object services security services 
access persistent corba object may controlled corba security services omg vogel 
example target corba object check invoking client user credential analogous role object client binds target object 
ffl accessing workflow data objects 
meteor workflow enactment services transfer data objects task task transient objects persistent objects may sent tasks 
objects workflow level role expressions may assigned 
consistency check task receiving data objects able access 
words task role expression subsume union incoming data objects role expressions 
ffl accessing files 
typically workflow processes run special account account called orbwork 
may case file accessible account unix file mode generally readable 
situations orbwork process may communicate process running different account 
potential security risk possible task switch user account 
minimize amount involved task level access control data objects helper classes developed access common resources oracle dbmss 
example access control example suppose task called executed ordinary doctors doctor role doctors heads departments role 
hospital may policy doctors browse database records patients treated browse patient records 
doctors execute 
case patient records available doctor role subset records available 
may execute task access patient records data objects 
situation simple doctor role 
doctors may execute task access patient records data objects 
questions additional restrictions expressed enforced 
embedded role object database username password permitting access records username password embedded doctor role object permit access patient records 
prototype implementation prototype architecture implemented refine architecture porting main meteor enactment services orbwork 
prototype fully distributed system implemented java remote method invocation rmi 
provides scalability system 
addition java naming directory interface provide location independent access remote objects 
furthermore prototype relies foundation security apis supplied java platform jdk provides general purpose packages security 
latest release java contains subset cryptography functionality including apis digital signatures message digests tools creation management 
provides services algorithm parameter management algorithm parameter generation key factory certificate factory 
trusted applets downloaded jar files signed trusted entity granted permissions signed applets oaks 
case login agent worklist agent signed applet granted read permission order load user private key 
granted network connection permissions need talk system components schedulers task managers 
apis data encryption decryption key exchange message authentication code mac released separately java cryptography extension package gong 
uml diagram security database prototype object relational database system oracle store information required security mechanisms 
security database support user authentication data encryption access control rbac 
prototype role constraints provided inherent complexity impossible statically analyze termination correctness condition workflow 
data model security database includes role relationships previously discussed 
complete data model see wu related workflow meta data see arpinar 
entities attributes relationships shown shows uml data model security database 
corresponding entity types mentioned previous section object types role user task resource 
resource coarse grain alternative 
role collects subsume authorizes rolename user publickey userid plays accesses account password resource task security database design associations relationships supported ffl subsumes 
role hierarchy forms directed acyclic graph dag nodes correspond roles single role domain 
ffl collects 
organization functional requirements roles organized role domains 
role assigned single domain role domain name role name distinguish role 
ffl plays 
workflow administrators assign users roles play 
login involves chosing role play results creation role object servers token user chosen role 
ffl authorizes 
principle mapping roles tasks privilege 
role job function role assigned minimum set tasks role perform 
ffl accesses 
discussed previous section control access data object complicated 
prototype security database contains information tasks access resources databases files 
resource contains account password information example log oracle database 
information embedded role object created user logs 
security agent login agent worklist agent schedulers task managers consult security agent order security decisions 
security agent access security database 
performance reasons multiple security agents may utilized 
multiple security agents ensure consistency security database 
fundamental security agent determine user may login role execute task 
login agent ensure user authenticated assigned role 
task scheduler task manager ensure role authorized execute task 
ffl authenticate user 
security agent loads user public key database verifies user digital signature attached message 
publickey pubkey username signature dsa signature sha dsa dsa pubkey dsa update message verifies dsa verify ffl user role mapping 
user may authorized play set roles 
roles may subsume roles 
user browses roles play security agent look subsume table return roles 
ffl role task mapping 
role subsumes roles role roles 
role list tasks execute 
tasks role execute union tasks roles execute illustrated 
result set union rolename 
get roles user current role contains vector roles username get tasks role union enumeration roles elements hasmoreelements rolename string string qry select rolename rolename new qry union responsibility security agent key management 
appropriate key management generate disseminate destroy keys security unwieldy ineffective 
organization part organization participating workflows need disseminate keys ideally generate destroy keys 
workflow administrator may utility provided security agent produce unique key pairs users 
organizations may wish get keys recognized certificate authorities trusted affiliated organization 
tools netscape certificate server allow organizations conveniently generate keys 
piece code generate key pairs 
private keys store floppy disk public keys stored security database 
keygen dsa keygen initialize new keypair keygen keypair path keypair username user public key object stored database 
member variables algorithm parameters user public key 
implement persistent key class convert public key object byte stream convert byte stream string stored database 
java convert byte stream string contains characters 
string part jdbc queries sent jdbc database trouble special characters may restricted query language 
bytes bytes encode message length message increase 
public static string publickey publickey try write key object object bos new oos new bos oos publickey oos flush new return bos catch exception system println return null try parameters public key object users store user public key smaller public key object database 
user public key object needed restore parameters user public key save substantial amount space 
login agent participate workflow user carries procedure 
web browser user enters url login agent 
important login agent authenticated digital signature access user private key 
login agent implemented signed applet 
need read network permission login agent 
login script displays buttons login logout quit 
user types user name role domain name role name trying perform login script role domain name role name optional user browse roles perform chose 
login agent generate digital signature user private key loaded smartcard 
message encrypted security agent public key sent security agent 
security agent decrypts message loads user public key form security database verifies signature 
user identified login agent display list roles user authorized perform 
user choose role assigned roles perform role hierarchies 
login procedure shown 
user may logout workflow procedure working clicking logout button 
applet user may login wants play role 
quit button clicked memory image applet cleared exiting 
applet store persistently files databases user security agent worklist mgr uname signature roles roles tasks tasks uname private key uname private key current role current role uname signature current role uname signature login manager authentication procedure worklist agent user selected role login agent launch worklist agent display list user tasks role authorized perform consulting security agent shown 
tasks user execute shown browser 
user wants execute clicking button 
worklist manager display list items user user authorized warning message appear 
worklist mgr security agent true false item item allowed execute task button pressed uname signature role name task name true false uname signature role name task name handle items scheduler task manager items displayed screen user 
scheduler task manager invoked user clicks item wants 
invoking scheduler task manager security control information sent application data encoded name value pairs 
lt instance id gt amp lt task name gt amp lt data gt username lt user name gt amp lt user signature gt amp rolename lt role gt allows scheduler task manager uniquely identify sender sure authorized execute task 
illustrates scheduler task manager humancomputer task 
user wants item 
scheduler task manager task invoked security control information sent 
receiving message scheduler task manager sure message forged tampered 
accomplished message authentication code digital signature message 
scheduler task item item cache security agent task scheduler area allowed read data button item pressed display data area true false true false uname signature uname signature role name task name role name task name scheduler task manager manager consult security agent see requesting user authorization checking user digital signature 
scheduler task manager security agent may host scheduler task manager allowed query database communication done remote method invocations 
order improve performance scheduler task manager maintains cache user information including user name user public key user roles tasks associated roles 
cached user information need network communication require cache kept consistent date user information security database 
scheduler task manager look cache 
verify user information cache consult security agent 
security agent authentication authorization return user information scheduler task manager may cache information 
user authorized form data item displayed warning message displayed 
checking consists steps ffl identify user 
user digital signature verified public key 
ffl user role mapping 
scheduler task manager sure user permitted perform indicated role 
ffl role task mapping 
scheduler task manager check role name establish task may executed role 
form human computer task displayed come sources html file hardcoded workflow application program generated code generator 
nonrepudiation know nurse administered medications just nurse administered 
user digital signature know executed task know role user playing executed task 
information store security database workflow repository system 
secured communication channel components system fully distributed 
remote method invocation communication different components 
communication encrypted 
trying third party ssl implementation rsa public key algorithm free implement simplified ssl elgamal algorithm demonstrate secure communication channels 
elgamal system elgamal public key cryptosystem discrete logarithm problem 
detailed information elgamal algorithm implementation fan 
analysis best available algorithms factoring discrete logarithm shows rsa elgamal similar security equivalent key lengths 
main disadvantage elgamal need randomness slower speed especially signing 
potential disadvantage elgamal system message expansion factor takes place encryption 
disadvantages negligible cryptosystem exchange secret keys ssl 
discuss section 
encryption communication section implementation simplified ssl introduced 
depicted client generates symmetric key encrypts server elgamal public key sents server 
note stands encryption algorithm stands decryption algorithm 
intended server decrypt message corresponding elgamal private key 
server recovers symmetric key encrypt data required client 
way application data secured 
designated server recover symmetric key private key server effectively authenticated client 
pub key pri key data data sym key sym key encrypted symmetric key encrypted data client server simplified ssl authentication different components authentication different components done ssl protocol 
discussed section server authenticate client private key corresponding public key encryption 
section discuss client authentication authentication login agent security agent authentication worklist manager security agent 
cases security agent acts ssl servers login agent worklist manager act ssl clients 
mentioned security agent duties key management 
similar generating key pairs user generate key pairs certificate schedulers task managers 
worklist agent communicates scheduler task manager sends certificate digital signature scheduler task manager 
receiving message scheduler task manager extracts worklist manager public key certificate verifies signature 
procedure security agent sever authenticate worklist manager client 
designed security system web workflow provides capabilities ffl user authentication software components authentication verify entity claimed 
ffl role access control user execute tasks current role authorized 
ffl data confidentiality communication encrypted 
ffl data integrity detect messages tampered 
ffl non repudiation establish record identity 
workflow administrator needs monitor keep track accesses 
may want know executed task role executed task nurse administered medications just nurse administered 
user digital signature know task know role user playing executes task 
task executions logged information available 
examples actual workflows security architecture see fan wu 
working improvements extensions architecture prototype 
porting orbwork workflow enactment service underway 
ffl interaction worklist management 
responsibilities worklist agent assign user list items specific assignment policy arpinar 
example user assigned item qualifications availability current workload business rules 
exactly best way provide functionality run time issue 
ffl efficient task authorization 
having schedulers tasks managers consult security agent authorization decisions exploring option including task authorization tickets role object 
ffl multilevel security 
security architecture ported mls version orbwork developed naval research laboratory kang kang 
version provide multilevel security mls networks partitioned security domains top secret secret unclassified 
research partially supported national institute standards technology nist hiit atp contract number naval research laboratory nrl department navy number 
arpinar arpinar 

proposal role domain design specification item assignment strategies meteor 
technical report uga lsdis 
url lsdis cs uga edu activities nsf workflow 
barkley barkley 

comparing simple role access control models access control lists 
technical report nist 
url ncsl nist gov rbac 
barkley barkley kuhn 

role access control world wide web 
technical report nist 
url ncsl nist gov rbac 
barkley barkley kuhn 

role access control model implementation corporate intranet 
technical report nist 
url ncsl nist gov rbac 
cooper cooper 

implementing internet security 
new riders publishing 
dogac dogac 

special theme issue multidatabases 
journal database management 
idea group publishing pa elgamal elgamal 

public key cryptosystem signature scheme discrete logarithms 
ieee 
fan fan 

security meteor workflow management system 
master thesis university georgia 
fischer fischer 

workflow paradigm impact information technology business process reengineering 
strategies ca nd 
edition 
freier freier kocher 

ssl specification 
technical report netscape communications 
url home netscape com eng ssl index html 
kang kang 

mls workflow mls distributed architecture 
technical report naval research laboratory 
url www bs prc com ia htm 
garfinkel spafford garfinkel spafford 

web security commerce 
reilly associates cambridge ma 
barkley barkley 

formal specification role access control user role role role relationship management 
technical report nist 
georgakopoulos georgakopoulos hornick sheth 

overview workflow management process modeling workflow automation infrastructure 
distributed parallel databases 
gong gong mueller 

going sandbox overview new security architecture development kit 
proc 
usenix symposium internet technologies systems monterey ca 
hollingsworth hollingsworth 

workflow model 
technical report tc issue workflow management coalition brussels belgium 


technical report 
www com html 
mulder 

wa empirical study practice workflow management 
university twente enschede netherlands 
research monograph 
kang kang sheth kochut miller 

multilevel secure workflow management system 
proc 
th conference advanced information systems engineering caise heidelberg germany 
hung hung 

security enforcement activity management systems 
nato advanced study institute asi workflow management systems interoperability 


technical report 
www com research projects workflow htm 
knudsen knudsen 

java cryptography 
reilly associates cambridge ma 
kochut kochut sheth miller 

optimizing workflow 
component strategies 
krishnakumar sheth krishnakumar sheth 

managing heterogeneous multi system tasks support enterprise wide operations 
distributed parallel databases 
miller miller sheth kochut singh 

meteor web workflow management system 
journal intelligent information systems special issue workflow management systems 
miller miller sheth kochut wang 

corba run time architectures workflow management systems 
dogac 
nist nist 
digital signature standard 
technical report nist 
url www itl nist gov div pubs fip htm 
oaks oaks 

java security 
reilly associates cambridge ma 
omg omg 
security service specification 
technical report omg 
url www omg org pub docs formal ps 


internet intranet security 
artech house 
pfleeger pfleeger 

security computing second edition 
prentice hall upper saddle river nj 
rubin rubin 

web security 
john wiley sons 
sheth sheth 

proc 
nsf workshop workflow process automation information systems 
university georgia 
url lsdis cs uga edu activities 
sheth sheth georgakopoulos rusinkiewicz scacchi wileden wolf 

report nsf workshop workflow process automation information systems 
technical report university georgia uga cs tr 
url lsdis cs uga edu activities nsf workflow 
sheth sheth kochut miller das lin lynch 

supporting state wide immunization tracking multi paradigm workflow technology 
proc 
nd 
intnl 
conference large data bases bombay india 
vogel vogel 

java programming corba 
john wiley sons new york ny 
wu wu 

task role combined access control model workflow applications 
technical report uga lsdis 
url orion cs uga edu wsl 
appendix applicable cryptography cryptography collection techniques protect information sent communication channels 
mainly includes encryption decryption techniques 
encryption transformation data unreadable form 
purpose ensure privacy keeping information hidden intended 
decryption reverse encryption 
transformation encrypted data back intelligible form 
kinds approaches symmetric key algorithms public key algorithms asymmetric algorithm uses key encryption decryption symmetric key algorithm 
pair key called public key algorithm asymmetric 
key encryption corresponding key decryption 
symmetric key algorithms encrypt bulk data faster public key algorithms garfinkel spafford 
parties key sure send key secret message generate symmetric keys party secure way key generated 
typical symmetric key algorithms des des ides blowfish rc rc rc garfinkel spafford 
public key encryption involves public private key pair 
stands encryption algorithm stands decryption algorithm 
data encrypted public key sent network 
receiving encrypted data decrypts private key get original data 
public key encryption private key decryption message meaningful designated recipient entity having private key able decrypt message 
private key encryption pub key pri key data data encrypted data public key algorithm scenario care message sender securing message may sender public key decrypt message 
digital signatures public key algorithms scenario shown stands signing algorithm stands verifying signature 
difference digital signatures public key encryption message sent network scenario encrypted 
discuss digital signatures detail 
pri key data pub key data data digital signature digital signature algorithm significant advantage public key algorithms private keys need sent network 
unfortunately algorithms computationally expensive 
typical public key algorithms diffie hellman rsa elgamal dss garfinkel spafford 
digital signature digital signature replace authentication enables receiver verify sender claims nist 
handwriting signatures digital signatures satisfy properties 
unforgeable sender private key attach signature document verifiable receiver able verify non deniable sender able 
handwriting signatures digital signatures incorporate data signed 
digital signature constant function data 
document changed signed signature valid anymore non reusable cut signature document attach 
certificate certificate digitally signed statement certificate issuer saying public key entity subject particular value 
certificate driver license 
binds entity public key name 
typical certificate file includes subject name public key certificate issuer issuer digital signature expiration date serial number 
trust issuer trust association certificate specified public key subject authentic 
term related certificates certification authority ca 
ca entity business trusted sign issue certificates people entities 
certification authorities gte netscape 
security socket layer ssl ssl program layer created netscape managing security message transmissions network 
provides security services authentication non repudiation data integrity data confidentiality freier garfinkel spafford 
authentication non repudiation server client provided public key certificate exchange digital signature 
data integrity provided message authentication code mac 
data confidentiality provided keys encryption algorithm negotiated ssl handshake 
ssl handshake protocol consists parts server authentication client authentication 
second part optional workflow project need 
freier setting server administrator creates key pair gets digitally signed certificate trusted certification authority 
client connects server sends list supported cryptographic algorithms 
server chooses sends back selection server certificate 
client retrieve server public key certificate 
client requests server prove identity sending message encrypted server public key 
server private key sends finish message client verification 
server holds private key server decrypt encrypted message generate expected finish message client assured server claimed 
client server hash function message client sent convert secret known sides 
secret generate session keys encryption mac computations 
similarly client authenticate server 
sends certificate verify message digital signature response server request server verify digital signature 
handshake procedure encrypted 
finish message protected just negotiated algorithm key secrets 
handshake finishes communication encrypted selected algorithms keys illustrated 
bracket means encrypted 
application data mac session key data integrity checked time 

