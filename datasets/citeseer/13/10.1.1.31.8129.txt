selective markov models predicting web page accesses mukund deshpande george karypis university minnesota department computer science army hpc research center minneapolis mn technical report karypis cs umn edu updated october am problem predicting user behavior web site gained importance due rapid growth world wide web need personalize influence user browsing experience 
markov models variations suited addressing problem 
different variations markov models generally higher order markov models display high predictive accuracies 
higher order models extremely complicated due large number states increases space runtime requirements 
different techniques intelligently selecting parts different order markov models resulting model reduced state complexity improved prediction accuracy 
tested models various datasets performance consistently superior obtained higher order markov models 
keywords world wide web web mining markov models predicting user behavior 
supported nsf ccr eia aci army research office contract da daag doe asci program army high performance computing research center contract number daah 
access computing facilities provided minnesota supercomputer institute 
related papers available www url www cs umn edu karypis years problem modeling predicting user surfing behavior web site attracted lot research interest improve web cache performance sks bes pm recommend related pages dh ppr improve search engines bp understand influence buying patterns cpm personalize browsing experience pp 
significance problem evident fact sigkdd conference kb problem predicting understanding user browsing purchasing behavior topic kddcup competition 
markov models pap studying understanding stochastic processes shown suited modeling predicting user browsing behavior web site 
general input problems sequence web pages accessed user goal build markov models model predict web page user access 
mogul pm hop markov models improving pre fetching strategies web caches 
pitkow pp proposed longest subsequence models alternative markov model 
sar markov models predicting page accessed user 
cadez chm markov models classifying browsing sessions different categories 
applications order markov models accurate predicting user browsing behavior models look far past correctly discriminate different observed patterns 
result higher order models 
unfortunately higher order models number limitations associated high state space complexity reduced coverage worse prediction accuracy 
simple method overcome problems train varying order markov models prediction phase done th order markov model proposed pp 
approach exacerbates problem state space complexity 
alternate approach proposed pitkow pp identify patterns frequent accesses call longest repeating subsequences set sequences prediction 
approach able reduce state space complexity order magnitude reduces prediction accuracy resulting model 
techniques intelligently combining different order markov models resulting model low state complexity improved prediction accuracy retains coverage th order markov models 
key idea states different order markov models eliminated affecting performance scheme 
particular schemes pruning states th order markov model called support pruning ii confidence pruning iii error pruning 
experiments variety data sets shown proposed pruning schemes consistently outperform th order markov model single order markov models term state complexity improved prediction accuracy 
problems schemes prune states th order markov model improve accuracy 
algorithms developed context web usage data successfully techniques prediction different applications 
example models predict command typed user word processor past sequence commands predicting alarm state telephone switches past states 
applications discussed detail section 
rest organized follows 
section presents overview markov models followed brief overview problem predicting user browsing behavior 
section presents detailed description selective markov models 
section provides detailed experimental evaluation algorithms variety data sets 
section offers concluding remarks 
markov models predicting user actions discussed techniques derived markov models extensively predicting action user take sequence actions performed 
type problems markov models represented parameters set possible actions performed user set possible states markov model built transition probability matrix tpm entry tij corresponds probability performing action process state state space markov model depends number previous actions predicting action 
simplest markov model predicts action looking action performed user 
model known order markov model action performed user corresponds state model 
somewhat complicated model computes predictions looking actions performed user 
called second order markov model states correspond possible pairs actions performed sequence 
approach generalized th order markov model computes predictions looking actions performed user leading state space contains possible sequences actions 
example consider problem predicting page accessed user web site 
input data building markov models consists web sessions session consists sequence pages accessed user visit site 
problem actions markov model correspond different pages web site states correspond consecutive pages length observed different sessions 
case order models states correspond single pages case second order models states correspond pairs consecutive pages 
states markov model identified transition probability matrix computed 
ways tpm built 
commonly approach training set action sequences estimate tji entry frequency event action ai follows state sj 
example consider web session shown 
order markov model state single page page corresponds state 
page follows state entry tpm updated 
similarly state entry updated tpm 
case higher order model state actions second order model state web session consists pages page follows state web session tpm entry corresponding state page updated 
transition probability matrix built making prediction web sessions straight forward 
example consider user accessed pages 
want predict page accessed user order model identify state associated page look tpm find page pi highest probability predict 
case example prediction page 
web sessions ws ws ws ws ws st order nd order nd order sample web sessions corresponding st nd order transition probability matrices 
limitations markov models applications order markov models successful predicting action taken user 
models look far past correctly discriminate different behavioral modes different users 
result order obtained predictions higher order models second third unfortunately higher order models number limitations associated high state space complexity ii reduced coverage iii worse prediction accuracy 
number states models tend rise exponentially order model increases 
states higher order models different combinations actions observed dataset 
dramatic increase number states significantly limit applicability markov models applications fast predictions critical real time performance applications memory constraints tight embedded models web access caching pm 
furthermore may examples test set corresponding states higherorder markov model reducing coverage 
scenarios higher order models default prediction lead lower accuracies 
better understand shortcomings conducted experiment web datasets 
compared various higher order markov models starting way fifth order markov model 
higher order model unable prediction particular web session ignored accuracy calculations accuracy calculated examples prediction 
results plotted see order model increases accuracy increases accompanied decrease coverage 
time order model increases number states model increase dramatically 
simple method overcome problem low coverage train varying order markov models combine prediction pp 
scheme test instance highest order markov model covers instance prediction 
example build second third order markov models test instance try prediction model 
model contain corresponding state try prediction second order model 
scheme called th order markov model pp 
note th order markov model solves problem low coverage exacerbates accuracy coverage accuracy coverage size vs order model accuracy coverage states order markov model plot comparing accuracy coverage model size order markov model 
problem model size states different order models part model 
number states higher order markov models increase number training set instances compute state action transition probabilities states tends decrease 
consequence reduction support individual states estimated state action transition probabilities accurate 
result accuracy achieved higher order markov models lower achieved corresponding lower order markov models 
selective markov models discussed previous section th order markov model holds promise achieving higher prediction accuracies improved coverage single order markov model expense dramatic increase state space complexity 
led develop techniques intelligently combining different order markov models resulting model low state complexity improved prediction accuracy retains coverage th order markov model 
schemes motivated observation sequence actions need predict probable action multiple states th order markov model perform prediction 
fact states number different order markov models form th order markov model 
depending particular set states involved different prediction accuracies 
observation start th order markov model eliminate states expected low prediction accuracy 
allow reduce state complexity affecting performance scheme 
starting point algorithms th order markov model obtained building 
states sequence increasing order markov models 
model prediction number techniques eliminate certain states different order markov models 
set states survive step final model prediction 
goals pruning step primarily reduce state complexity secondarily improve prediction accuracy resulting model 
refer models selective markov models 
key step algorithm scheme determine potential accuracy particular state 
rest section different schemes increasing level complexity 
scheme simply eliminates states low support 
second scheme uses statistical techniques identify states transition probabilities prominent actions statistically significant 
third scheme uses error pruning approach eliminate states low prediction accuracy 
support pruned markov model support pruned markov model observation states low support training set tend low prediction accuracies 
consequently low support states eliminated affecting accuracy coverage resulting model 
amount pruning scheme controlled parameter referred frequency threshold 
particular eliminates states different order markov models supported fewer training set instances 
number observations scheme 
frequency threshold models regardless order 
second pruning policy prune higher order states higher order states support dramatically reducing state space complexity resulting scheme 
third frequency threshold parameter specifies actual number training set instances supported state fraction training set instances done context association rule discovery ais 
done primarily reasons trust estimated transition probabilities particular state depend actual number training set instances relative number ii total number instances general exponential order markov model fractional pruning threshold completely different meaning different order markov models 
confidence pruned markov model limitations scheme capture parameters influence accuracy state 
particular probability distribution outgoing actions state completely ignored 
example consider markov state outgoing actions branches substantially probable 
support state somewhat low predictions computed state quite reliable clear difference outgoing probabilities 
hand outgoing probabilities example close order difference reliable large number training instances 
ideally pruning scheme consider support state weigh probability distribution outgoing actions making pruning decisions 
observation led develop confidence pruned markov model scheme 
uses statistical techniques determine state probability frequently taken action significantly different probabilities actions performed state 
probability differences significant state give high accuracy pruned 
contrast probability differences significant state retained 
scheme determines probable action significantly different second probable action computing percent confidence interval probable action checking probability second action falls interval 
true state pruned retained 
probability probable action percent confidence interval upper percentage point standard normal distribution frequency markov state 
degree pruning controlled confidence coefficient 
value decreases size confidence interval increases resulting pruning 
note state large number examples associated equation compute tighter confidence interval 
result difference probabilities probable actions relatively small state retained 
earlier discussion indicated feature desirable 
error pruned markov model previous schemes support state probability distribution outgoing branches gauge potential error associated 
error state automatically estimated decide prune particular state 
widely approach estimate error associated state perform validation step 
validation step entire model tested part training set validation set model building phase 
know actual actions performed sequences validation set easily determine error rates pruning 
led develop error pruned markov model scheme 
specifically developed different error pruning strategies different definition constitutes error rate markov state 
refer schemes error pruning individual error pruning 
error pruning scheme works follows 
sequence validation set single order markov models prediction 
prediction record prediction correct 
sequences validation set predicted prediction statistics calculate error rate state 
state markov model identify set states lower order models proper subsets 
example highest order state corresponds action sequence lower order states identified third order second order order 
error rate highest order state higher subset lower order pruned 
procedure identifying subset states comparing error rates repeated states lower order markov models order markov model 
states order markov model pruned reduce coverage resulting model 
second scheme iterate higher order states find subset states described previous scheme 
identify examples validation set predicted higher order state validation examples sequence actions corresponding higher order state 
set examples predicted higher order state subset states error rates examples states computed 
error rate higher order state greater subset states higher order markov state pruned 
procedure repeated lower order markov models order markov model 
schemes follow similar procedure locating subset states pruning ones having high error rates differ error rates state computed 
scheme lower order markov state single error rate value computed entire validation set 
second scheme lower order markov states error rate values validated different set examples superset higher order states 
experimental results experimentally evaluated performance proposed selective markov models variety data sets 
rest section briefly describe data sets experimental methodology results obtained schemes 
datasets evaluated performance proposed selective markov models schemes datasets characteristics shown table 
dataset sessions avg 
ses 
length unique actions ec ec owl tc table preliminary dataset statistics 
ecommerce web logs web server logs large commerce companies analysis 
logs cleaned system cts broken series sessions session corresponds sequence web pages accessed user visit site 
note session contains accesses web pages accesses images ignored 
model session corresponds example train test set page accessed user considered action 
datasets referred ec ec 
table see ec total sessions average length pages sessions total unique web pages 
similarly ec sessions average length pages sessions unique web pages 
owl dataset dataset contains log editing commands typed different users microsoft word period years lin 
goal model built dataset predict command typed user user past sequence commands 
predictive system online recommendations user commands typed 
dataset referred owl 
dataset session corresponds sequence commands typed user particular document sitting 
different commands typed users constitute actions markov model 
telephone switch dataset dataset obtained large telecommunications maintains nationwide telephone networks 
dataset contains log different alarms generated telephone switch period month 
session dataset corresponds sequence alarms switch related problem 
dataset alarm generated switch considered action 
dataset referred tc 
experimental design metrics evaluation different schemes manageable limit problem predicting just action test example session 
evaluation purposes divide complete dataset training set test set 
depending model training set may divided validation set 
testing step model trimmed session prediction part session removed 
prediction model compared removed part session compute model accuracy 
cases markov model schemes unable prediction session test set 
length test session order model model seen similar session training step 
evaluation scheme consider sessions longer highest order model model unable predict long sessions considered wrong prediction 
experiments th order markov model selective markov model schemes combined second third order markov models 
performance various markov model algorithms evaluated terms accuracy model size 
accuracy model defined number correct predictions divided total number predictions model size defined total number states model 
accuracy measures predictive ability model model size gives insight memory time requirements model 
results support pruned markov model goal set experiments study effect frequency threshold parameter performance support pruned markov model 
achieve performed experiment different values ranging pruning increments measured accuracy number states resulting markov model 
results shown table different data sets experimental testbed 
better visualize results plotted accuracy obtained scheme different values obtained original th order markov model 
plots shown 
number interesting observations looking 
data sets see increase frequency threshold accompanied increase accuracy 
particular accuracy improvements ec owl datasets quite substantial 
second continue increase frequency threshold accuracy achieved different datasets starts flatten decrease 
ec ec datasets accuracy remains sharp drop owl tc datasets 
decrease accuracy increasing values useful markov states pruned model affecting accuracy 
third datasets achieve maximum accuracy levels different values frequency threshold indicating optimal value dataset dependent 
fourth accuracy tends change smoothly making possible freq 
ec ec owl tc thr 
accuracy states accuracy states accuracy states accuracy states table accuracy model size different values frequency threshold 
validation set approach estimate optimal value dataset 
effect frequency threshold pronounced number states markov model 
size model drops drastically frequency threshold increases 
example case ec dataset number states scheme highest accuracy number states th order markov model 
dramatic reduction number states accompanied improvement accuracy due fact low support states tend noise outliers training set lower order states general higher support reliable making predictions 
results confidence pruned markov model study effect confidence coefficient scheme accuracy state space complexity resulting model performed sequence experiments varied obtain confidence intervals 
accuracy values model size different values percentage confidence interval shown table 
conf 
ec ec owl tc inter 
accuracy states accuracy states accuracy states accuracy states table accuracy model size different values confidence interval 
better visualize effect confidence interval length plotted accuracy improvements achieved accuracy th order markov model different confidence intervals 
results shown 
see length confidence interval similar effect accuracy frequency threshold parameter 
age improvement th order markov model improvement th order markov model vs frequency threshold ec ec owl tc frequency threshold accuracy obtained different values relative obtained th order markov model 
initially accuracy improves increase length confidence interval certain point accuracy starts decrease 
reason performance degradation due fact prunes larger fraction states length confidence interval increases 
consequently reasonably high accuracy states getting pruned 
looking effect confidence interval length model size see length confidence interval increases number states decreases 
note model size reduction achieved somewhat lower achieved 
believe scheme tends retain states pruned probable outgoing actions sufficiently frequent rest 
results error pruned markov model section compare performance individual error pruning schemes discussed section 
accuracy model size achieved schemes test datasets shown table 
rows labeled correspond individual error pruned schemes respectively 
model ec ec owl tc accuracy states accuracy states accuracy states accuracy states table accuracy model size error pruned markov models different datasets 
results table see error pruning schemes produce similar results terms model accuracy error pruned scheme performing slightly better 
age improvement th order markov model improvement th order markov model vs percentage conf 
interval ec ec owl tc percentage confidence interval accuracy obtained different confidence intervals relative obtained th order markov model 
compare corresponding model sizes see individual error pruned scheme leads models states corresponding models error pruned scheme 
results suggest error pruned scheme aggressive pruning states 
believe may due fact error pruned scheme lower order state low error rate potentially prune superset higher order states 
case individual error pruned scheme state different error rate depends particular superset higher order state pruning selective 
possible explanation currently studying phenomenon better understand 
comparison different schemes set experiments compares performance achieved different selective markov model schemes achieved second third order markov models 
results shown table 
note results correspond results obtained optimal frequency threshold optimal confidence coefficient respectively different datasets 
results table see algorithms general achieve better accuracies achieved algorithms 
error pruned schemes highest accuracies support pruned schemes lead models state space complexity factor achieved order markov model substantially worse accuracy 
comparing error pruned schemes th order markov model see improvement ec ec owl tc dataset 
furthermore compare size model ec ec owl tc accuracy states accuracy states accuracy states accuracy states second third th table accuracy model size different markov models datasets 
corresponding models find number states error pruned schemes significantly lower th order markov model 
particular web log datasets contain largest number unique actions sessions state space complexity error pruned scheme smaller order magnitude 
better compare different schemes different datasets performed statistical significance tests accuracy values different models 
results shown table 
details tests explained appendix cell table contains numbers corresponding number datasets scheme row statistically better equal worse scheme column respectively 
see results selective markov model schemes perform statistically better traditional techniques datasets 
furthermore statistical difference accuracies obtained schemes error pruned scheme outperforms individual error pruned scheme dataset 
model second third th support conf error error second third th support conf error error table statistical significance comparisons different schemes 
cell shows number datasets scheme row better equal worse scheme column respectively 
class markov model prediction algorithms obtained selectively eliminating large fraction states th order markov model 
experiments variety datasets shown resulting markov models low state space complexity time achieve substantially better accuracies obtained traditional algorithms 
ais rakesh agrawal thomas imielinski arun swami 
mining associations sets items massive databases 
proc 
acm sigmod int conference management data 
bes 
speculation reduce server load service time www 
proceedings th acm international conference information knowledge management 
bp sergey brin page 
anatomy large scale hypertextual web search engine 
proceedings seventh international world wide web conference 
chm igor cadez david heckerman christopher meek padhraic smyth steven white 
visualization navigational patterns web site model clustering 
technical report msr tr microsoft research microsoft 
cpm ed chi james pitkow jock mackinlay peter pirolli rich stuart card 
visualizing evolution web ecologies 
chi 
cts robert cooley pang ning tan srivastava 
web site information filter system 
proceedings web usage analysis user profiling workshop 
dh dean henzinger 
finding related pages world wide web 
proceedings eighth international world wide conference 
kb ronny kohavi carla brodley 
knowledge discovery data mining cup part sigkdd 
www ecn purdue edu kddcup 
lin frank linton 
owl recommender system organization wide learning 
journal international forum educational technology society 
douglas george 
applied statistics probability engineers 
john wiley sons 
pap papoulis 
probability random variables stochastic processes 
mcgraw hill 
pm mogul 
predictive prefetching improve world wide web latency 
computer communication review 
pp james pitkow peter pirolli 
mining longest repeating subsequence predict wide web surfing 
second usenix symposium internet technologies systems boulder 
ppr peter pirolli james pitkow ramana rao 
silk sow ear extracting usable structures web 
chi 
sar ramesh 
link prediction path analysis markov chains 
ninth international world wide web conference 
sks schechter krishnan smith 
path profiles predict requests 
seventh international world wide web conference 
yl yiming yang xin liu 
re examination text categorization methods 
nd annual international acm sigir conference research development information retrieval 
significance test comparing accuracies get better understanding differences accuracies test comparing accuracy values schemes yl 
schemes produce accuracies pa pb respectively size test dataset standard normal distribution statistic pa pb pa pb please note test set evaluating schemes 

