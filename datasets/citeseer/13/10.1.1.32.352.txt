ida technical report ida issn department computer information science linkoping university linkoping sweden size reactive plans peter jonsson christer backstrom email cbag ida liu se wide spread approaches reactive planning schoppers universal plans 
propose stricter definition universal plans guarantees weak notion soundness original definition 
furthermore isolate different types completeness capture different behaviours exhibited universal plans 
show universal plans run polynomial time polynomial size satisfy weakest type completeness polynomial hierarchy collapses 
relaxing polynomial time polynomial space requirement construction universal plans satisfying strongest type completeness trivial 
research supported swedish research council engineering sciences tfr dnr 
dnr 

appear proc 
th national conference artificial intelligence aaai portland oregon usa aug 
years reactive planning proposed alternative classical planning especially rapidly changing dynamic domains 
term number related approaches thing common usually little planning ahead 
idea centered stimulus response principle prompt reaction input 
known methods reactive planning universal plans schoppers universal plan function set states set operators 
universal plan generate sequence operators leading current state goal state classical planner decides step current state 
universal plans discussed literature 
famous debate ginsberg schoppers ginsberg schoppers ginsberg criticised approach schoppers defended counting argument ginsberg claims interesting universal plans takes large amount space 
defence large extent built observation planning problems structured 
schoppers structure exploited order create small effective universal plans 
refrain going details debate merely note authors shown great ingenuity argumentation 
standpoint formal rigour papers settle question 
papers treats universal plans formal complexity theoretic point view selman shows existence small universal plans ability generate minimal plans implies collapse polynomial hierarchy 
collapse polynomial hierarchy widely conjectured false literature johnson papadimitriou existence universal plans highly 
noted result holds severely restricted problems blocks world 
opinion problems universal plans high generality definition 
generality formal analysis hard impossible 
giving stricter definition universal plans definition embodies notion soundness 
addition supply different types completeness 
notions completeness capture different desirable properties universal plans 
example completeness states problem solution universal plan find solution finite number steps 
main result universal plans run polynomial time polynomial size satisfy weakest type completeness relaxing polynomial time requirement poly list exhaustive 
authors chapman joined discussion 
main schoppers ginsberg 
assumption polynomial hierarchy collapse 
nomial space requirement trivial construct universal plans satisfy strongest type completeness 
case result holds severely restricted problems kind blocks world 
organisation follows section basic strips formalism underlies rest 
topic section formally define universal plan various restrictions 
section devoted proof shows small fast universal plans complete weak sense 
concluded brief discussion results 
basic formalism base propositional strips formalism negative goals bylander equivalent variants propositional strips backstrom definition instance psn planning problem quadruple pi hp gi ffl finite set atoms ffl finite set operators form pre ost pre satisfiable conjunction positive negative atoms respectively called positive preconditions pre negative preconditions pre gamma ost satisfiable conjunction positive negative atoms respectively called positive postconditions add negative postconditions del ffl denotes initial state ffl hg gamma denote positive negative goal respectively satisfying gamma gamma 
psn structure tuple phi hp oi set atoms set operators denote negation atom 
example operator defined satisfies pre pre gamma fpg add fqg del frg 
definition set operators define set operator sequences seqs jo seqs sequence concatenation operator 
sequence ho seqs operators called psn plan simply plan pi 
define plan solves planning instance 
definition ternary relation valid seqs theta theta theta defined arbitrary ho seqs gamma valid ho ht gamma iff 
gamma 
pre pre gamma valid ho gamma del add ht gamma 
plan ho seqs solution pi iff valid ho hg gamma 
define planning problems consider follows 
definition pi hp hg gamma ii psn instance 
plan generation problem pg find seqs solution pi answer exists 
bounded plan generation problem bpg takes integer additional parameter object find seqs solution pi length answer exists 
universal plans universal plans defined follows literature 
ginsberg universal plan arbitrary function set possible situations set primitive actions terminology adopted get equivalent definition 
definition psn structure phi hp oi universal plan function set states set operators general notion universal plans difficult basis formal analyses 
want example discuss correctness resource consumption 
sequel try classify universal plans greater detail 
psn structure phi hp oi 
fo new state denoting undefinedness special operators 
operators considered operators sense definition completely new symbols internal structure 
special operators universal plans communication environment 
definition needed defining soundness universal plans 
definition phi hp oi psn structure 
update operator phi 
theta defined follows phi standard operator phi gamma del add pre pre gamma 

phi phi operator admissible state 
iff phi 
refine notion universal plans 
definition phi hp oi psn structure goal sound universal plan goal function maps 


admissible 

iff satisfies point definition says universal plan generates operator executable current state 
restriction tacitly assumed literature 
second point tells special operator generated universal plan applied state satisfying goal state 
report success 
reason introducing operator avoid generation new operators current state satisfies goal state 
special operator hand indicates universal plan handle current state 
instance due fact goal state reachable current state 
observe operator admissible generate applied 
henceforth term universal plan abbreviation sound universal plan 
continue defining properties universal plans 
universal plan notation denote operator sk sk phi 
definition universal plan psn structure phi hp oi poly time iff implemented deterministic algorithm runs polynomial time size phi poly space iff implemented deterministic algorithm satisfying 
size polynomially bounded size phi 
size space polynomially bounded size phi acceptance complete iff hp gi solvable exists integer rejection complete iff hp gi solvable exists integer 
universal plans satisfying subset restrictions named combining corresponding letters 
example ar universal plan poly time acceptance complete rejection complete 
definition poly time quite clear definition poly space may need explanation 
part definition ensures stored polynomially bounded memory 
second part guarantees computation polynomially bounded amount auxiliary memory 
store run algorithm memory size bounded polynomial size phi 
restriction excludes algorithms extremely large fixed data structures algorithms building structures run time 
sake brevity terms completeness acceptance rejection completeness respectively 
minimal requirement universal plans complete guaranteed find solution finite number steps 
observe complete universal plan complete differ reachable completeness desirable necessary 
domains blocks world know solution exists advance completeness minor interest 
completeness completeness useless trivially construct universal plans satisfying problems 
simply 
complete universal plan trivially implemented poly time poly space deterministic algorithm 
certain applications need stronger form completeness 
definition universal plan psn structure hp oi strongly rejection complete iff hp gi solvable 
motivation introducing strong completeness simple 
universal plan outputs operators know lead solution 
executing operators advisable may wish try planning alternative goal solution 
executing invalid operators may prevent reaching alternative goal 
complexity theoretic point view argued universal plans poly time poly space feasible practice 
hard restriction dropping polynomiality requirements constructing universal plans easy 
theorem psn structure phi hp oi goal state exist universal plans satisfying ar ar respectively 
proof construction define function 
follows 
hp gi shortest solution length choose hp phi gi shortest solution length gamma 
denote operator states 
hp gi solvable satisfies clearly exists integer hp gi solvable 

consequently complete strongly complete 
proposed construction function obviously exponential size 
arranged balanced decision tree depth jp accessed polynomial time 
consequently constructed construction consider forward chaining psn planning algorithm sound complete generates shortest plans 
modify algorithm output operator plan leads plan exponential size necessarily implemented polynomial space 
guess plan operator time compute resulting state action polynomial space 
modified planner represented non deterministic algorithm polynomial space 
savitch theorem savitch represented deterministic algorithm uses polynomial space 
modified planner problems simply giving psn structure phi goal state additional inputs 
constant size size depend size psn structure 
consequently disregard size planner constructed poly space universal plan 
observe soundness implies soundness modify generate current state satisfies goal state 
planner complete generates minimal plans 
shortest plan current state goal state length length shortest plan phi gamma 
observation fact complete completeness follows 
plan current state goal state planner fail generate operator 
case simply output strong completeness follows 
crucial planner previous theorem generates shortest plans 
guarantee completeness 
illustrate small contrived example 
example consider psn structure phi hp oi qg fp gamma gi operators defined follows 
ffl ffl gamma ffl fqg pi hp gi pi hp gi 
shortest plan pi pi hp assume planning algorithm generates plan hq gamma pi hq pi universal plan satisfy gamma consequently odd gamma 
words universal plan toggle forever 
complete 
planning problems bpg solved polynomial time construct universal plans satisfying ar theorem 
planning problems pg polynomial bpg theorem apply 
method constructing universal plans pointed selman explicitly state generating shortest plan necessary 
question construct ar universal plans problems pg polynomial bpg remains open 
non existence universal plans order show exist universal plans psn planning problems advice turing machines johnson advice tms alternative way describing non uniform circuits approach adopted selman definition advice turing machine tm associated special advice oracle necessarily computable function 
arbitrary input string jxj denote size applied special advice tape automatically loaded jxj computation proceeds normal inputs jxj 
advice turing machine uses polynomial advice iff advice oracle satisfies ja fixed polynomial nonnegative integers class poly set languages defined polynomial time advice tms 
advice tms powerful 
instance compute certain undecidable functions 
despite apparent power highly np problems solved poly tms 
theorem karp lipton np poly polynomial hierarchy collapses sigma recall bpg pg denote bounded unbounded plan generation problem respectively 
sigma complexity class second level polynomial hierarchy johnson collapse polynomial hierarchy widely conjectured false literature johnson papadimitriou proofs rely construction 
lemma set sat garey johnson instances variables 
psn structure theta hp oi goal state exists property pi hp planning instance solvable iff satisfiable 
furthermore solution pi length equal 
proof fu set variables formulae observe different clauses formula fc enumeration possible clauses variable set ft atoms meanings true iff variable true true iff variable false true iff clause satisfied 
variable operators needed ffl ffl 
true iff false vice versa 
fashion true 
case clause contains variable operator needed negated variable second operator needed ffl ffl 
specify goal hg gamma want construct initial state pi hp solvable iff satisfiable 
fc jc fg 
clearly true iff satisfying assignment 
easy see solution pi length exactly atoms atom true 
lemma integer exists polynomial advice function allows solve pi polynomial time polynomial hierarchy collapses sigma proof suppose pi solvable iff satisfying truth assignment np poly theorem polynomial hierarchy collapses sigma prove main theorem 
algorithm input sat formula variables 
repeat gn phi fo accept reject algorithm proof theorem 
theorem exists universal plan gn satisfying theta polynomial hierarchy collapses sigma proof assume gn universal plan theta consider algorithm 
gn sound generate operator admissible state generate special operators 
lemma repeat loop iterate times equals 
assumed gn polynomial time algorithm algorithm runs polynomial time 
show algorithm accepts iff satisfying truth assignment 
part trivial noting satisfying truth assignment algorithm accepts completeness 
part assume algorithm accepts 
gn returned operator applied state definition gn iff satisfies consequently satisfiable lemma 
algorithm accepts iff satisfiable rejects iff satisfiable 
furthermore gn polynomial advice restricted gn polynomial size theorem follows lemma 
generality theorem stressed 
recall advice arbitrary function size input 
function computable 
exist mechanism whatsoever polynomial size accessed polynomialtime ability solve problems exhibited previous theorem 
methods proposed reduce size universal plans variables introduced schoppers change fact 
observe theorem applies class severely restricted psn structures 
restrictions empty operator preconditions 
delete lists empty restricted class np bylander consequently class considerably expressive power general psn planning problem pspace complete plausible assumption np pspace exist universal plans class planning problems 
note caused existence exponentially size minimal plans backstrom nebel minimal plans class polynomially bounded 
compare theorem negative result selman theorem np poly exists blocks world planning goal universal plan generating minimal sequence operators leading goal 
important note difference theorem theorem 
selman shows universal plans generate minimal plans certain conditions show cases generate plans 
discussion results interpreted negatively 
tell naive approaches universal planning 
particular hope efficient universal plans solving arbitrary planning problems 
question efficiency universal plans 
claim universal plans inferior classical planners aspects 
instance highly probable universal planning offer great advantages classical planning rapidly changing dynamic domains 
challenges characterize planning problems efficiently solved universal plans 
seen problem solved optimally polynomial time efficient universal plan solving 
certainly interesting classes planning problems solved small fast universal plans 
question answered universal planning powerful 
approaches conceivable 
give universal plans access random sources making universal planning probabilistic 
research shown probabilistic algorithms surprisingly efficient certain types problems 
mention example probabilistic gsat algorithm selman satisfiability testing propositional formulae shown perform empirical studies selman kautz extension allow universal plans internal state output universal plan dependent current state previous states 
universal plans internal state studied briefly selman results unfortunately encouraging 
universal planning compared incremental planning steel jonsson backstrom idea incremental planning planner output valid prefixes final plan finished planning 
argued method considerably bring time lost planning especially dynamic domains replanning occur frequently 
motivation exactly motivation introducing universal plans reactive planning general 
spectrum different approaches planning ranging classical planning computes complete plan executes incremental planning chunks plan generated executed interleaved fashion universal planning just operator time generated immediately executed 
proposed stricter definition universal plans guarantees weak notion soundness original definition 
addition identified different types completeness capture different behaviours exhibited universal plans 
completeness guarantees exists plan current state goal state universal plan find solution finite number steps 
completeness converse completeness exist plan current state goal state universal plan report finite number applications 
completeness stronger version completeness stating exist plan current state goal state universal plan report application 
show universal plans run polynomial time polynomial size complete polynomial hierarchy collapses 
dropping polynomial time polynomial space requirement construction complete universal plans trivial 
steel jos sam steel 
integrating planning execution monitoring 
proceedings th national conference artificial intelligence aaai pages st paul mn usa august 
american association artificial intelligence morgan kaufmann 
backstrom nebel christer backstrom bernhard nebel 
complexity results sas planning 
computational intelligence 
backstrom christer backstrom 
expressive equivalence planning formalisms 
artificial intelligence 
bylander tom bylander 
computational complexity propositional strips planning 
artificial intelligence 
chapman david chapman 
penguins cake 
ai magazine pages winter 
garey johnson michael garey david johnson 
computers intractability guide theory np completeness 
freeman new york 
ginsberg matthew ginsberg 
ginsberg replies chapman schoppers 
ai magazine pages winter 
ginsberg matthew ginsberg 
universal planning universally bad idea 
ai magazine pages winter 
johnson david johnson 
catalog complexity classes 
jan van leeuwen editor handbook theoretical computer science algorithms complexity volume chapter pages 
elsevier amsterdam 
jonsson backstrom peter jonsson christer backstrom 
incremental planning 
malik ghallab alfredo editors new directions ai planning rd european workshop planning frontiers ai applications italy september 
ios press 
karp lipton karp lipton 
turing machines take advice 

math 
papadimitriou christos papadimitriou 
computational complexity 
addison wesley reading ma 
savitch savitch 
relationships nondeterministic deterministic tape complexities 
journal computer system sciences 
schoppers schoppers 
universal plans reactive robots unpredictable environments 
john mcdermott editor proceedings th international joint conference artificial intelligence ijcai pages milano italy august 
morgan kaufmann 
schoppers marcel schoppers 
defense reaction plans caches 
ai magazine pages winter 
schoppers marcel schoppers 
estimating reaction plan size 
proceedings th national conference artificial intelligence aaai pages seattle wa usa july august 
american association artificial intelligence 
selman kautz bart selman henry kautz 
empirical study greedy local search satisfiability testing 
proceedings th national conference artificial intelligence aaai pages washington dc usa july 
american association artificial intelligence 
selman bart selman hector levesque david mitchell 
new method solving hard satisfiability problems 
proceedings th national conference artificial intelligence aaai pages san jos ca usa july 
american association artificial intelligence 
selman bart selman 
near optimal plans tractability reactivity 
doyle sandewall torasso editors proceedings th international conference principles knowledge representation reasoning kr pages bonn germany may 
morgan kaufmann 

