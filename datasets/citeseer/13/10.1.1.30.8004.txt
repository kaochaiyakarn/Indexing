fl kluwer academic publishers boston 
manufactured netherlands 
decision tree induction efficient tree restructuring paul utgoff utgoff cs umass edu department computer science university massachusetts amherst ma neil berkman neil com west st carlisle ma jeffery clouse clouse edu department computer science north carolina state university nc editor doug fisher 
ability restructure decision tree efficiently enables variety approaches decision tree induction prohibitively expensive 
approaches described incremental tree induction iti non incremental tree induction measure tree quality test quality 
approaches variants offer new computational classifier characteristics lend particular applications 
keywords decision tree incremental induction direct metric binary test example incorporation missing value tree transposition installed test virtual pruning update cost 

decision tree induction offers highly practical method generalizing examples class membership known 
common approach inducing decision tree partition labelled examples recursively stopping criterion met 
partition defined selecting test small set outcomes creating branch possible outcome passing example corresponding branch treating block partition subproblem subtree built recursively 
common stopping criterion block examples class 
non incremental approach inducing decision tree quite inexpensive exactly tree generated constructing evaluating explicit alternatives 
terms searching space possible decision trees induction process consists instantiating specific tree starting root 
determines particular node shall decision node specified test leaf specified class label implicitly rejects trees differ node 
greedy tree construction process implements function maps particular set examples particular tree 
alternative strategies searching tree space 
incremental decision tree induction map existing tree new training example new tree 
different non incremental approach described maps single batch examples particular tree 
second decision tree induction measure tree quality called direct metric tree induction simply maps existing tree 
explained methods requires ability restructure existing decision tree efficiently 
section presents tree revision mechanism sections decision tree induction algorithms 

tree revision decision tree induction algorithms depend ability transform decision tree 
simplicity discussion limited section tree consistent set labelled examples 
particular set consistent examples exists multitude decision trees classify examples correctly 
example place test root build rest tree recursively particular tree result 
place different test root build rest tree recursively different particular tree produced 
tree consistent training examples represent different partition example space 
algorithm restructures tree need change test installed decision node 
occurs able produce efficiently possible tree result newly installed test 
effect change installed test revising existing tree building new tree original training examples assuming computationally efficient 

representation assumed possible test decision node exactly possible outcomes means decision tree binary 
loss representational power choice non binary tree binary trees produce identical partition example space 
symbolic variables possible values mapped automatically equivalent set propositional variables 
example value set variable color fred green possible binary tests color red color green color blue 
numeric variables conversion binary test done quinlan finding cutpoint incorporating threshold test example cutpoint 
outcome test value variable example satisfies test 
adoption binary tests brings principal benefits 
bias tests due tests having different number possible outcomes 
important common methods selecting test biased manner white liu 
second choosing binary split decision node conservative approach partitioning block examples divided smaller blocks 
beneficial block subdivided necessary selection new test deemed best block 
choosing test immediately partitions set examples blocks aggressive 
partitioning conservatively keeps larger number examples available block important additional partitioning done block 
mooney shavlik towell gove recoding discrete variables propositional variables improved classification accuracy id decision tree induction algorithm 
breiman friedman olshen stone employ binary tests cart decision tree induction program 
fayyad observes numeric variables advantageous search multiple single 
binary tests represent partition produced multiway test reason believe greedy selection binary tests lead partition 
search multiple pick just binary test leaving subtrees 

information maintained decision node able change test installed decision node needs maintain information node provides basis evaluating quality possible test 
idea maintaining information symbolic variables demonstrated schlimmer fisher 
test specific value symbolic variable 
color blue frequency counts outcome class combination kept updated necessary 
possible test specific cutpoint numeric variable costly keep separate set frequency counts test 
list values observed examples node maintained sorted order value value tagged class example observed 
pair adjacent values midpoint values defines possible cutpoint 
possible merit computed efficiently single pass sorted list tagged values 
average class entropy metric test selection needs consider separate values different fayyad irani 

incorporating training example basic operation tree revision change set examples tree 
various forms incremental tree induction section depends ability add example set examples tree 
adding example way known incorporating training example tree 
example incorporated empty tree tree replaced leaf node indicates class leaf example saved node example node null convert node empty leaf node leaf save example node node converted decision node construct information node mark node fresh example saved node node node left node right update information node mark node stale node example node left example node right example table 
procedure add example tree leaf node 
example incorporated branches tree followed far possible values example 
example class leaf example simply added set examples saved leaf node 
example different class label leaf algorithm attempts turn leaf decision node picking best test test selection metric 
examples saved node just converted leaf node decision node incorporated recursively sending proper branch new test 
example added node way tree leaf possibly branches leaves moves downward tree 
procedure accomplishes task named add example tree pseudo code shown table 

missing values able handle example value input variables missing 
tree construction problematic test chosen decision node requires knowing value missing example 
classification unlabelled example tree leaves infer label unlabelled example 
missing value treated special value satisfy test decision node 
value example satisfies test 
example test color blue value blue satisfies test value red value 
missing satisfies test 
similarly size size color blue color blue color blue size 
tree transposition operator left true right false test age value satisfies test value value 
missing satisfies test 
tree construction classification alike example missing value test decision node passed false branch 
similar treating value different symbolic equality test test value numeric inequality test cutpoint 
binary tests examples missing values test sent false branch 
concentrates examples missing value particular test right subtree keeps left subtree free examples 
partitioning required right subtree tree induction algorithm course free select new test variable 
approach handling missing values simplifies computation test selection metric 
purpose computing metric thing missing value example placed blocks candidate partition 
test selection metrics choose quinlan gain ratio metric adopted 
missing value test false test missing values computation metric 
quinlan special adjustments missing values apply 

recursive tree transposition decision tree induction algorithm elects change test installed decision node tree needs revised corresponds newly installed test 
set training examples satisfied old test generally different set examples satisfies new test 
subtrees need revised accordingly process expensive rebuilding subtrees examples 
operation changing installed test decision node accomplished sequence tree transpositions determined recursively 
desired test installed may subtrees test installed decision node necessary accomplish original tree transposition decision tree induction algorithm choose 
ensure best test installed decision nodes tree revision process checks installed test desired 
subtree revised recursively install desired test root decision node 
consider base cases illustrated 
goal transpose lefthand tree righthand tree 
accomplished easily rearranging pointers test size installed root installed children root 
notice subtrees simply revisited case 
sets examples changed need change subtrees 
test leaf information maintained grandchildren nodes changed 
similarly set examples corresponding root changed designation installed test means test information maintained root remains unchanged 
sets examples new children root test color blue changed 
example left subtree corresponded examples build subtrees corresponds examples build subtrees raises problem update test information child root 
fortunately problem inexpensive solution generally require rebuilding information training examples 
simply test information merging test information grandchildren 
example left subtree define information sum information nodes symbolic variable adds corresponding frequency counts numeric variable copies merges sorted tagged lists values 
base cases dealing grandchildren leaves children leaves 
children root leaf node decision node transposition accomplished somewhat differently 
example consider case right subtree leaf 
transposition accomplished discarding root node left subtree place discarding right subtree leaf examples root 
base case subtrees leaves discards subtrees installs desired test root examples leaves root 
example discarded leaf constitute reprocessing example occurs fringe tree 
base cases revise tree way tree node unnecessarily expanded 
node leaf leaf 
base cases arise transposition process subtree may exist examples outcome installed test represent temporary states handled straightforward manner 
node node decision node node stale find node installed node node decision node mark node fresh node left node right table 
procedure ensure best test base cases handle tree child root leaf decision node test installed root 
child decision node installed test installed root tree transposition applied recursively child desired installed test 
produces base cases handled directly 

apply recursive transposition described recursive tree transposition operator provides ability restructure tree designated test installed root 
quite useful producing best tree caused decision node desired test installed 
recursive transposition may subtrees transposed product bringing desired test root 
installed test decision node subtrees may result transposition result deliberate choice 
consider transposed tree 
subtrees test color blue installed transposition performed color blue identified best choice installed intentionally 
ensure decision node desired test installed attribute selection metric needs visit subtrees recursively 
decision node requires different test installed algorithm transposes tree install best test node 
costly check decision node subtrees transposition 
subtree touched transposition 
marker maintained decision node indicates choice installed test stale 
operation changes set examples subtree marks test stale 
happen incorporating example transposing tree 
changing set examples subtree changes test information invalidating basis installed test selected 
node example node example node table 
procedure incremental update desired test identified necessary installed removes test stale mark 
ensure decision node desired test installed proceeds recursively manner root identify desired test install recursive transposition subtree marked stale recursively identify desired test install 
procedure accomplishes task named ensure best test pseudo code shown table 
incremental tree induction section presents incremental tree induction algorithm iti incremental tree inducer extensive tree transformation mechanism described previous section 
incremental algorithm sense application uses embedded classifier stream observed examples 
applications currently exist accumulate examples day rebuild embedded decision tree night 
employing incremental method allow online tree updating 
algorithm described motivated design goals 
average incremental cost updating tree lower average cost building new decision tree scratch 
necessary sum incremental costs lower care cost brought date particular point time 

extent possible update cost independent number training examples tree 

tree produced incremental algorithm depend set examples incorporated tree regard sequence examples 

algorithm biased selection test test larger set possible outcomes test 
additional accepted design goals algorithm accept examples described mix symbolic numeric variables attributes handle multiple classes handle inconsistent training examples handle examples missing values avoid fitting noise examples 

algorithm iti basic iti incremental decision tree induction algorithm tree revision mechanism described section stated simply 
training example incorporated tree pass proper branches leaf reached 
includes updating test information kept node passes marking node stale 
includes process incorporating example leaf may cause additional growth tree leaf 
example incorporated visit stale node recursively described ensuring desired test installed node 
procedure accomplishes task named incremental update pseudo code shown table 
usual test considered best favorable value attribute selection metric 
order training examples remain immaterial tie best test broken deterministically 
recall test constructed variable observed value set 
iti tie resolved favor lexically lower variable name 
tests variable tie resolved favor lexically lower symbolic value numerically lower cutpoint depending type variable 
tiebreaking mechanism ensures unique tree set training examples 

inconsistent training examples examples inconsistent described variable values different class labels 
inconsistent examples occur directed leaf 
split impure leaf cause infinite recursion 
converting leaf decision node provide information easily detected gain ratio metric iti keeps node leaf simply adds example set examples retained leaf making impure leaf 
causes trouble classification class name returned unlabelled example majority class examples leaf 
tie broken favor lexically lower class name 

virtual pruning important component decision tree induction avoid overfitting training data especially data known contain attribute classification error noise 
variety methods come existence question best suited incremental induction problem 
approaches maintain separate pruning set incremental tree induction 
iti suitable approach minimum description length principle rissanen quinlan rivest 
decide prune subtree leaf considers subtree represented compactly leaf default class list exceptions exception index list examples indication non default class label 
subtree want pruned replaced leaf marks root decision node pruned discard 
incremental induction preserves information possible reconsider subtree virtually pruned 
simply removes mark considered pruned 
practical purposes classifying examples tree inspecting tree printing virtually pruned tree behaves appears truly pruned 
virtual pruning process accomplished post order traversal decision tree sets marker decision node indicate decision node considered pruned leaf 
previous status node marked pruned immaterial 
procedure winds way leaves post order traversal sets subtree pruned description length mdl 
leaf number bits needed encode leaf measured log log log gamma number classes observed leaf number examples leaf default class total number examples leaf 
bit needed indicate node leaf log bits needed indicate default class exceptions needs log bits specify exception log gamma bits specify non default class 
total number bits encode leaf stored leaf node 
decision node number bits needed encode subtree measured log number possible tests node mdl left subtree set mdl right subtree set 
bit needed indicate node decision node log bits needed identify test bits needed encode left right subtrees respectively 
total number bits encode decision node stored decision node 
decide mark decision node pruned mdl node computed case node left decision node pruned case pruned leaf 
virtual leaf require fewer bits encode node marked pruned mdl virtual leaf saved node 
node marked pruned mdl subtree saved 

variants iti variety training modes possible described 
presentation training example decide incorporate training example tree 
policy making decision constitutes element training mode 
elect incorporate new training example tree decide ensure immediately afterward best test installed decision node 
process node pool false true example pool classify node example label example false remove example pool node example node table 
procedure error correction train adding example tree accomplished independently revising tree possible accept examples time add tree revising possibly growing new leaves revise tree just visiting decision nodes ensure best test installed 
incremental mode training example immediately incorporated tree tree immediately restructured necessary decision node desired test installed 
mode produces tree obtain batch version described 
error correction mode incorporates training example existing tree misclassify 
training example incorporated effect tree 
mode training akin error correction procedures statistical pattern recognition suggested schlimmer fisher 
variations mode 
stream training examples simply ignores examples tree currently correct 
second fixed pool examples incorporated tree cycles pool repeatedly removing incorrectly classified example pool incorporating decision tree tree misclassify example remaining pool 
examples examined time training regimen departs somewhat notion linear stream training examples 
pool examples iti build tree halt 
true examples noisy iti continues cycling pool example remaining pool classified correctly 
example pool misclassified removed pool added tree 
tree may perfect classifier training examples incorporated noise inconsistency pruning turned continue select remove currently misclassified training examples pool misclassified examples remain pool 
occurs current tree classifies training examples pool correctly pool empty examples incorporated tree 
procedure accomplishes training pool examples named error correction train pseudo code shown table 
lazy mode delays ensuring tree date tree needed purpose classify unlabelled example 
effort iti goes ensuring training example tree best test installed decision node 
avoid doing tree needed 
add example tree revising tree simple operations occur incorporating example 
tree needed single call procedure ensuring best test installed node brings tree proper form 
practical purposes tree updated incremental mode presumably computation 
batch mode exists case initial batch examples current tree wants build tree quickly possible 
course mode incremental sense provides method building initial tree set examples efficient incremental mode 
algorithm constructs data structures incremental mode traditional top manner 
mode fastest way build iti tree scratch sense wants build tree standard shot way 
data structures created incremental mode subsequent operations require revising tree remain applicable 
give ability subsequent revisions efficient building data structures go tree revision capability 

direct metric tree induction section presents direct metric tree induction algorithm direct metric tree inducer relies tree restructuring mechanism described section 
incremental algorithm greedy top tree inducer 
distinguishing aspect test install node installs uses metric function resulting tree assess desirability test 
differs usual approach picking test heuristic function indirect metric various frequency counts tallied examples 

algorithm algorithm variation classical top approach finds best test install root installs solves subproblems recursively 
important differences 
starts process decision tree built iti set examples 
second test assessed node installing including automatic revision subtrees indirect metric evaluating direct metric resulting tree 
permissible tests node evaluates different trees node node decision node node node note direct metric value resulting tree node node left node right table 
procedure order pick best test install node 
third typically quite expensive consider possible tests node set permissible tests limited best test input variable indirect metric 
symbolic variable best test best equality test variable numeric variable best threshold test 
set permissible tests node limited size number input variables 
pseudo code procedure shown table 

direct metrics direct metric defines test preferred comparison trees result 
raises familiar question decide tree preferred 
additional information universally correct answer question practice usually possible choice 
example strong prior belief target concept modelled best decision tree simple function input variables prefer smaller consistent tree larger consistent tree 
preference accompanies belief designer set training examples try choose input variables predictive class label possible 
prior knowledge determine direct metric appropriate tree induction task 
consider possible direct metrics 
direct metric expected number tests returns number tests expect evaluate order classify example assuming testing examples drawn probability distribution training examples 
expected number tests computed counting total number tests evaluated classifying training examples dividing total number training examples 
possible calculate value metric single traversal tree classifying examples 
examples incorporated tree saved leaf tree node heights known traversal 
metric leaf count returns number leaf nodes tree 
count computed single traversal tree 
number leaves related number tests directly related expected number tests 
example possible tree higher leaf count lower expected number tests tree minimum description length metric returns number bits needed encode tree encoding scheme described section 
pruning turned apply search test produces tree locally smallest attainable mdl 
metric expected classification cost identical expected number tests test specified evaluation cost implied uniform evaluation cost 
applications diagnosis tests expensive cost producing answer important factor tan schlimmer 
direct metric expected misclassification cost measures penalty pay misclassifying example assuming testing examples drawn probability distribution training examples 
tree induction algorithms embody assumption classification errors incur cost pazzani merz murphy ali hume brunk 
comprehensive include explicit cost matrix specifies cost labelling example class class possible calculate value metric single traversal tree 

comparison performance characteristics want iti 
answer question needs know classifier expect may cost produce 
consider comparison algorithms criteria classification accuracy tree size measured number leaves classification cost measured number tests expect evaluate classifying example cpu cost build tree 
algorithms better 

experimental design algorithms compared variants iti variants variants quinlan 
algorithms applied classification tasks perfectly balanced perfectly crossed manner 
task algorithm combination variables mentioned measured tenfold stratified cross validation 
purpose cross validation obtain reasonably unbiased point estimate obtain separate measurements 
splits data algorithms 
able draw algorithms significantly different choose significance test designed handle multiple comparisons 
simply apply test comparison chance false difference rises test repeatedly rolling sided die face marked significant 
variety multiple comparison procedures devised duncan multiple range test walpole 
duncan multiple range test isolates variance attributed treatment called error variance 
proceeds initial stages analysis variance 
twoway analysis factor variance attributed choice task choice algorithm 
proceeding test analysis variance proceeds multiple range test involves comparing means algorithms 
term algorithm mean indicates mean algorithm tasks 
significant range means compared product significant range square root quotient error variance number tasks 
significant range determined table indexed error degrees freedom number means compared 
range means highest lowest compared greater corresponding significant range means presumed significantly different 
table significant ranges computed duncan fact multiple comparisons 
initially sorts algorithm means tests possible ranges means 
group adjacent means significantly different depicted drawing line segment group 
subgroup tested group significantly different 
means common line significantly different 
means common line significantly different steel 
reduce experimental error algorithm variants run group pruning turned separate group pruning turned 
discussion relative merits pruning versus pruning 

algorithms ease algorithms simple name 
variant iti batch mode leaf split example second frequently occuring second majority class 
variant iti batch mode leaf split examples second majority class 
batch mode runs quickly incremental mode builds tree 
computational characteristics incremental mode discussed section interest 
variant runs error correction mode batch mode 
variant default settings 
variant splits leaf examples second majority cass 
variant uses option correspond variant iti 
algorithm uses non binary tests discrete variables value set larger 
recode data preprocessing step forced produce binary tests recoding done 
remaining algorithms variants different direct metric 
dm variant uses minimum description length de variant uses expected number tests classification dl variant uses number leaves 

tasks tasks taken uci murphy aha repository remaining acquired produced 
available uci tasks generally taken uci included extraordinarily large clearly defined class label 
tasks differ ways including number type attributes number classes noise missing values default accuracy 
goal pick tasks practical 
heart disease tasks cleveland hungarian switzerland va problems reports sees classes grouped resulting class problem 
fayyad usama mys tasks come usama fayyad 
horse dead horse sick tasks different uci horse task 
mplex mplex eleven bit versions multiplexor problem 
tictactoe data different uci task similar name 
positions occur play appear examples labelled draw number ply win achieved 
positions represented point view player move coded 
task training set testing set sets merged single set examples 
way stratified cross validation applied tasks 
tasks done audio id monks soybean splice vowel 

accuracy average accuracy algorithms pruning turned dm de dl indicates significant differences 
pruning turned dm dl de indicates dm significantly accurate average dl de 
significant differences 
table shows cross validated accuracy task algorithm combinations pruning turned 
corresponding standard deviations shown separately table fit table 
deviations play role analyses included order help interpret point estimates 
similarly table shows cross validated accuracy task algorithm combinations pruning turned standard deviations shown separately table 

leaves consider average tree size measured number leaves 
important number leaves indicates number blocks partition example space 
number comparable different algorithms binary test decision node 
average tree size algorithms pruning turned de dl dm indicates produces significantly larger trees average de dl dm 
pruning turned de dl dm indicates set significant differences 
table shows leaf counts task algorithm combination pruning turned corresponding deviations appearing table 
inspection data shows considerable variability respect algorithms produced smallest largest trees 
means pulled just tasks 
example produce large trees nettalk task 
attributes large value set algorithm algorithm restricted binary tests 
task test large number branches 
contrast binary tests iti cause conservative way split 
table shows leaf counts task algorithm combination pruning turned associated deviations appearing table 

expected tests expected number tests provides measure classification efficiency 
variants omitted measure readily available 
expect de lowest mean attempts minimize measure 
average number expected tests pruning turned dl dm de indicates significantly different dl dm 
differences significant 
pruning turned dl dm de indicates similar story addition dm de significantly different 
generally variants produce efficient trees iti variants 
table shows expected number tests task algorithm combination pruning turned table shows corresponding deviations 
means deviations pruning turned shown tables 

cpu cost consider question cpu requirements compare dec main memory 
dl dm de indicates dl dm significantly costly 
indicates de significantly costly 
significant differences 
dl dm de shows set significant differences pruning turned 
iti variants significantly different cpu cost 
cpu requirements second average 
variants expensive worth cost applications 
example wants decision tree requires tests average classification de produces significant improvement cost extra computation 
argue algorithm builds classifier average seconds working hard find tree provides efficient classification 
table shows values task algorithm combination pruning turned corresponding deviations shown table 
table shows costs task algorithm combination pruning turned corresponding deviations shown table 

incremental update cost want incremental iti algorithm serial learning system knowledge maintenance system 
primary issue online learning incremental tree revision sufficiently time efficient 
conditions prefer build new tree scratch 
serial task new training example received sequentially problem solved algorithm obtain new tree newly augmented set training examples 
batch case takes complete set examples accumulated builds new tree 
incremental case takes current decision tree new training example produces new decision tree 
cost obtaining tree time number training examples observed 
incremental case tree time gamma new example observed time costs accrued prior time concern incurred paid 
interest cost producing tree time 
cost factors important factors affect cost incremental update existing decision tree 
cost adding information example data structures maintained decision node 
symbolic variable increments counter value class combination example 
number different observed values value set grows additional overhead locating counter data structure 
numeric variable inserts value example tagged class example sorted list values 
symbolic numeric variables cost proportional log size value set 
symbolic variables value set variable typically reaches final size early training 
second cost factor number decision nodes updated example incorporated tree 
tree relatively small early training tend growing early utility observing new examples diminishes 
matter seeing large number training examples representative underlying example distribution 
examples come seen size tree tends stabilize 
training instances observed cpu seconds 
incremental update cost soybean third factor frequency changing installed test decision node tree 
early training example distribution represented meaning new example cause noticeable change distribution conditional probabilities computed test metric computation 
training example effect 
examples lead change installed test 
effect increased stability occurs earlier higher decision nodes tree nodes examples 
examples partitioned decision nodes lower tree fewer examples tend lag stability 
fourth factor cost restructuring tree subtree 
cost attributable tree transpositions 
affects cost tree transposition 
matter recursive calls needed set base case node hand follow recursive calls needed ensure best test installed decision nodes 
mentioned stability best test node tends greater nodes closer root tree 
surmise transposition activity generally lowest root generally highest fringe 
closer fringe transposes cheaper base case tree transposition kind shown adjusting pointers subtrees negligible cost 
bulk expense recreating counting information maintained decision nodes root 
re examine training examples takes effort reconstruct information grandchildren decision nodes 
merging symbolic variable information involves creating structures hold information adding grandchild 
merging numeric variable information requires copying merging sorted tagged lists grandchildren 
assumes size value set independent number examples seen cost base case tree transposition independent training instances observed cpu seconds 
incremental update cost hungarian number examples 
size value set symbolic variable smaller size value set numeric variable 
symbolic variable size value set independent number examples numeric variable 
quite possible real valued numeric variable value example unique meaning size value set continues grow new examples observed 
fifth final important cost factor associated simpler base cases tree transposition 
mentioned subtrees leaf transposition accomplished non leaf subtree result incorporating examples leftover leaf scavenged subtree 
causes example handled incorporated surviving subtree 
activity qualifies limited re examination example 
transposition implemented way order keep tree reduced form 
decision node tree leaf 

illustrations illustrations iti incremental mode show net effect cost factors different circumstances 
soybean hungarian vowel tasks run available examples measuring cost update tree 
soybean task symbolic variables sees updates inexpensive 
cost building tree batch mode examples seconds 
hungarian task equal number symbolic numeric variables see relatively costly revisions 
task cost building tree batch mode examples seconds 
vowel task numeric variables shows large number expensive updates occurred 
furthermore see cost revision tends increase training 
case training instances observed cpu seconds 
incremental update cost vowel value sets continue grow training 
batch mode cost building tree examples seconds 
see updates cost 
average cost incremental update lower cost rebuilding tree despite occasional expensive update 
figures show cost building new tree point 
useful able predict update expensive rebuilding tree 
case opt rebuild tree 
better improve current iti update costs rebuilding tree 

leave cross validation learning methods possible perform leave cross validation inexpensively easy modify classifier incrementally 
example change instance classifier simply adding subtracting example instance base 
leave cross validation inexpensive instance base removes base classifies puts back base 
cross validated accuracy percentage classifications correct 
efficient tree revision leave cross validation practical decision tree classification kohavi 
builds tree examples iti incremental batch mode 
example subtracts tree classifies adds tree 
requires adding primitive subtracts example tree straightforward inverse adding example 
example subtracted added algorithm uses indirect metric identify best test decision node 
cost subtracting example adding back dramatically average cost building tree scratch 

software iti system available www ml cs umass edu iti html anonymous ftp ftp cs umass edu directory pub iti 
distribution includes source code algorithms iti additional small programs running experiments plotting performance graphs plotting decision trees 
tree plotting program pst generates postscript code draws tree pages necessary specified font 
discussed article implemented iti lazy mode expected classification expense metric cost metric 
useful operators implemented discussed save tree restore tree 
addition kolmogorov distance attribute selection metric selected indirect metric utgoff clouse default 
implementation set information items kept decision node maintained avl tree balanced binary search tree wirth 
organization provides log insert delete lookup 
specifically set variables maintained decision node attached avl tree variables 
variable node attached avl tree set observed values variable maintained attached avl tree 
similarly value node attached avl tree set observed classes frequency counts kept attached avl tree 
tree trees trees independent semantics decision tree serves merely efficient scheme tracking information maintained decision node 
due organization large number variables large number values large number classes computationally 
information needed evaluate possible binary tests permitted decision node 
bring inefficiency merging avl trees example sorted lists tagged values making cost log 

related incremental tree induction algorithm id utgoff demonstrated basic process tree revision 
handle numeric variables multiclass tasks missing values include method avoiding overfitting 
version iti utgoff awkward manner handling numeric variables handling missing values replaced 
schlimmer fisher id demonstrated incremental tree induction test revision discarding subtrees 
crawford constructed incremental version cart algorithm breiman friedman olshen stone 
new example received new test picked decision node new subtree new test constructed building new subtree scratch corresponding subset training examples 
crawford notes approach expensive proposes alternative invokes tree rebuilding 
van de velde designed idl id id goal finding trees smaller result standard top induction methods 
lovell bradley msc algorithm refines decision tree incrementally limited backtracking making dependent order training examples 
fisher presents method optimizing hierarchical clustering built initially cobweb 
implements hill climbing search space clusterings attempting find improved clustering specified metric similar spirit 
cockett herrera algebraic approach finding irreducible trees 
morris devised scheme reduce number times test selection metric evaluated 

article set fundamental tree revision operators shown decision tree induction algorithms built 
iti algorithm performs incremental decision tree induction symbolic numeric variables handles noise missing values 
algorithm includes virtual pruning mechanism operate conjunction tree induction algorithm 
iti suitable embedding application receives creates new examples online knowledge maintenance systems 
tasks numeric variables cost tree revision largely independent number examples incorporated 
tasks numeric variables large value sets cost tree revision grow noticeably number examples 
non incremental algorithm uses attribute selection metric function tree function counting information kept node 
possible choose set trees direct measure tree quality 
lends studies indirect metrics identifying tests lead induction preferred trees 
suitable producing trees intended minimize specified objective function 
due greater computational expense associated greater minimization ability suitable willing spend extra time produce superior tree 
acknowledgments material supported national science foundation 
iri digital equipment ross quinlan australian research council 
ross quinlan excellent suggestions author summer stay university sydney 
precup david skalak gunnar david jensen provided helpful comments 
doug fisher suggested improvements greatly improved presentation 
idea implementing efficient leave cross validation suggested independently ron kohavi mike pazzani 
uci tasks originate sources outside machine learning community 
audiology data file originates professor college medicine 
breast cancer data file lymphography data file primary tumor data file come university medical centre institute oncology ljubljana 
bupa data file provided richard forsyth bupa medical research cleveland va data files created robert long beach cleveland clinic foundation 
hungarian data file compiled hungarian institute cardiology budapest 
switzerland data produced william university hospital zurich matthias university hospital basel 
remaining uci data files mentioned name provided uci generous donors 
appendix tables show point estimates standard deviations measurements algorithm task combinations discussed section 
point estimates deviations pair tables single table information large 
variables measured pair tables case pruning turned pair tables pruning turned 
see section explanation algorithm names 
table 
accuracy pruning see table associated standard deviations task dm de dl mean audio id balance scale bc wisc breast cancer bupa chess cleveland crx fayyad glass id hepatitis horse dead horse sick hungarian hypothyroid ionosphere iris landsat led led lenses lung cancer lymphography monks monks monks mplex mplex mushroom nettalk pima post op primary tumor promoter road soybean splice switzerland tictactoe usama mys va votes vowel waveform wine zoo mean table 
standard deviation accuracy pruning see table associated point estimates task dm de dl audio id balance scale bc wisc breast cancer bupa chess cleveland crx fayyad glass id hepatitis horse dead horse sick hungarian hypothyroid ionosphere iris landsat led led lenses lung cancer lymphography monks monks monks mplex mplex mushroom nettalk pima post op primary tumor promoter road soybean splice switzerland tictactoe usama mys va votes vowel waveform wine zoo table 
accuracy pruning see table associated standard deviations task dm dl de mean audio id balance scale bc wisc breast cancer bupa chess cleveland crx fayyad glass id hepatitis horse dead horse sick hungarian hypothyroid ionosphere iris landsat led led lenses lung cancer lymphography monks monks monks mplex mplex mushroom nettalk pima post op primary tumor promoter road soybean splice switzerland tictactoe usama mys va votes vowel waveform wine zoo mean table 
standard deviation accuracy pruning see table associated point estimates task dm dl de audio id balance scale bc wisc breast cancer bupa chess cleveland crx fayyad glass id hepatitis horse dead horse sick hungarian hypothyroid ionosphere iris landsat led led lenses lung cancer lymphography monks monks monks mplex mplex mushroom nettalk pima post op primary tumor promoter road soybean splice switzerland tictactoe usama mys va votes vowel waveform wine zoo table 
leaves pruning see table associated standard deviations task de dl dm mean audio id balance scale bc wisc breast cancer bupa chess cleveland crx fayyad glass id hepatitis horse dead horse sick hungarian hypothyroid ionosphere iris landsat led led lenses lung cancer lymphography monks monks monks mplex mplex mushroom nettalk pima post op primary tumor promoter road soybean splice switzerland tictactoe usama mys va votes vowel waveform wine zoo mean table 
standard deviation leaves pruning see table associated point estimates task de dl dm audio id balance scale bc wisc breast cancer bupa chess cleveland crx fayyad glass id hepatitis horse dead horse sick hungarian hypothyroid ionosphere iris landsat led led lenses lung cancer lymphography monks monks monks mplex mplex mushroom nettalk pima post op primary tumor promoter road soybean splice switzerland tictactoe usama mys va votes vowel waveform wine zoo table 
leaves pruning see table associated standard deviations task de dl dm mean audio id balance scale bc wisc breast cancer bupa chess cleveland crx fayyad glass id hepatitis horse dead horse sick hungarian hypothyroid ionosphere iris landsat led led lenses lung cancer lymphography monks monks monks mplex mplex mushroom nettalk pima post op primary tumor promoter road soybean splice switzerland tictactoe usama mys va votes vowel waveform wine zoo mean table 
standard deviation leaves pruning see table associated point estimates task de dl dm audio id balance scale bc wisc breast cancer bupa chess cleveland crx fayyad glass id hepatitis horse dead horse sick hungarian hypothyroid ionosphere iris landsat led led lenses lung cancer lymphography monks monks monks mplex mplex mushroom nettalk pima post op primary tumor promoter road soybean splice switzerland tictactoe usama mys va votes vowel waveform wine zoo table 
expected tests pruning see table associated standard deviations task dl dm de mean audio id balance scale bc wisc breast cancer bupa chess cleveland crx fayyad glass id hepatitis horse dead horse sick hungarian hypothyroid ionosphere iris landsat led led lenses lung cancer lymphography monks monks monks mplex mplex mushroom nettalk pima post op primary tumor promoter road soybean splice switzerland tictactoe usama mys va votes vowel waveform wine zoo mean table 
standard deviation expected tests pruning see table associated point estimates task dl dm de audio id balance scale bc wisc breast cancer bupa chess cleveland crx fayyad glass id hepatitis horse dead horse sick hungarian hypothyroid ionosphere iris landsat led led lenses lung cancer lymphography monks monks monks mplex mplex mushroom nettalk pima post op primary tumor promoter road soybean splice switzerland tictactoe usama mys va votes vowel waveform wine zoo table 
expected tests pruning see table associated standard deviations task dl dm de mean audio id balance scale bc wisc breast cancer bupa chess cleveland crx fayyad glass id hepatitis horse dead horse sick hungarian hypothyroid ionosphere iris landsat led led lenses lung cancer lymphography monks monks monks mplex mplex mushroom nettalk pima post op primary tumor promoter road soybean splice switzerland tictactoe usama mys va votes vowel waveform wine zoo mean table 
standard deviation expected tests pruning see table associated point estimates task dl dm de audio id balance scale bc wisc breast cancer bupa chess cleveland crx fayyad glass id hepatitis horse dead horse sick hungarian hypothyroid ionosphere iris landsat led led lenses lung cancer lymphography monks monks monks mplex mplex mushroom nettalk pima post op primary tumor promoter road soybean splice switzerland tictactoe usama mys va votes vowel waveform wine zoo table 
cpu pruning see table associated standard deviations task dl dm de mean audio id balance scale bc wisc breast cancer bupa chess cleveland crx fayyad glass id hepatitis horse dead horse sick hungarian hypothyroid ionosphere iris landsat led led lenses lung cancer lymphography monks monks monks mplex mplex mushroom nettalk pima post op primary tumor promoter road soybean splice switzerland tictactoe usama mys va votes vowel waveform wine zoo mean table 
standard deviation cpu pruning see table associated point estimates task dl dm de audio id balance scale bc wisc breast cancer bupa chess cleveland crx fayyad glass id hepatitis horse dead horse sick hungarian hypothyroid ionosphere iris landsat led led lenses lung cancer lymphography monks monks monks mplex mplex mushroom nettalk pima post op primary tumor promoter road soybean splice switzerland tictactoe usama mys va votes vowel waveform wine zoo table 
cpu pruning see table associated standard deviations task dl dm de mean audio id balance scale bc wisc breast cancer bupa chess cleveland crx fayyad glass id hepatitis horse dead horse sick hungarian hypothyroid ionosphere iris landsat led led lenses lung cancer lymphography monks monks monks mplex mplex mushroom nettalk pima post op primary tumor promoter road soybean splice switzerland tictactoe usama mys va votes vowel waveform wine zoo mean table 
standard deviation cpu pruning see table associated point estimates task dl dm de audio id balance scale bc wisc breast cancer bupa chess cleveland crx fayyad glass id hepatitis horse dead horse sick hungarian hypothyroid ionosphere iris landsat led led lenses lung cancer lymphography monks monks monks mplex mplex mushroom nettalk pima post op primary tumor promoter road soybean splice switzerland tictactoe usama mys va votes vowel waveform wine zoo breiman friedman olshen stone 

classification regression trees 
belmont ca wadsworth international group 
cockett herrera 

decision tree reduction 
journal acm 
crawford 

extensions cart algorithm 
international journal studies 
fayyad 

induction decision trees multiple concept learning 
doctoral dissertation computer science engineering university michigan 
fayyad irani 

handling continuous valued attributes decision tree generation 
machine learning 
fisher 

iterative optimization simplification hierarchical clusterings 
journal artificial intelligence research 
morris 

efficient incremental induction decision trees 
machine learning 
kohavi 

power decision tables 
proceedings european conference machine learning 
lovell bradley 

multiscale 
ieee transactions pattern analysis machine intelligence 
mooney shavlik towell gove 

experimental comparison symbolic connectionist learning algorithms 
proceedings eleventh international joint conference artificial intelligence pp 

detroit michigan morgan kaufmann 
murphy aha 

uci repository machine learning databases irvine ca university california department information computer science 
pazzani merz murphy ali hume brunk 

reducing misclassification costs 
machine learning proceedings eleventh international conference pp 

new brunswick nj morgan kaufmann 
quinlan rivest 

inferring decision trees minimum description length principle 
information computation 
quinlan 

programs machine learning 
san mateo ca morgan kaufmann 
rissanen 

modeling shortest data description 
automatica 
schlimmer fisher 

case study incremental concept induction 
proceedings fifth national conference artificial intelligence pp 

pa morgan kaufmann 
steel 

principles procedures statistics 
new york ny mcgraw hill 
tan schlimmer 

case studies cost sensitive concept acquisition 
proceedings eighth national conference artificial intelligence pp 

boston ma morgan kaufmann 
utgoff 

incremental induction decision trees 
machine learning 
utgoff 

improved algorithm incremental induction decision trees 
machine learning proceedings eleventh international conference pp 

new brunswick nj morgan kaufmann 
utgoff clouse 

kolmogorov metric decision tree induction technical report amherst ma university massachusetts department computer science 
van de velde 

incremental induction topologically minimal trees 
proceedings seventh international conference machine learning pp 

austin tx morgan kaufmann 
walpole 

statistics 
new york macmillan 
white liu 

bias information measures decision tree induction 
machine learning 
wirth 

algorithms data structures programs 
englewood cliffs nj prentice hall 
