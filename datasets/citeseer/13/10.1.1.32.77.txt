computer science university manchester understanding inductive types constructions fu technical report umcs understanding inductive types constructions fu department computer science university manchester oxford rd manchester extend calculus constructions generalized inductive types 
extension justified showing usual set theoretical model 
pointed model published collection inductive types different style wrong 
copyright fl 
rights reserved 
reproduction part permitted educational research purposes condition copyright notice included proper attribution author authors commercial gain involved 
technical reports issued department computer science manchester university available anonymous ftp cs man ac uk directory pub tr 
files stored postscript compressed form report number filename 
alternatively reports available post computer library department computer science university oxford road manchester pl constructive type theory developed principles 
oft quoted curry howard principle may stated constructive propositions types 
underlies girard system interest polymorphism functional programming languages 
notion sets missing prime reason limitation languages designed principle 
serious drawback far functional programming concerned 
martin lof principle pole 
says constructive sets types 
lacking calculi logic consequence leibniz equality expressible 
forced internalize definitional equality 
somewhat odd identity sets 
languages group mechanism defining manipulating data types 
applications program specifications verifications limited due absence logic 
coq especially luo see luo know perfectly sound unify kinds languages 
call russell principle range constructive significance type 
idea origin principia mathematica rw 
sensible principle answer question relationship propositions sets 
obviously things structured 
russell principle type prop propositions 
obvious choices 
sets sit top prop prop type calculus constructions ch coq coq luo 
sets sit prop ae prop calculus computation 
sets prop separated calculus separated constructions 
second language elimination rules closed universes usefulness questionable 
detailed description third language see fu 
ecc best representative cc calculi 
part expressive power ecc comes fact type open universes consequence prop type studies carried ber luo clarify negatively positively role propositions constructions 
counter example show identify sets propositions calculus constructions conservative hol constructive version church higher order logic chu 
second shown properly separated way thinking thing ramified logic 
logics intrinsically impredicative sets stratified 
conservative hol 
significance show principles different 
remain questions constructions 
start way carrying investigations various enriched calculi constructions 
model theoretic methods de doomed complicated 
main idea methods reduce issue proof soundness term model inherits combinatorial complexity case study approach 
second don know expressive power languages 
interpret various traditional constructive languages ecc understanding relationships 
doing take account fact ecc contains logic 
usual interpretation martin lof set theory see example acz faithful counterpart ecc logical formulas interpreted impredicative propositions notion sets kept type level 
see fu initial attempt 
russell principle subsumes 
result useful slogan extend calculus constructions include martin lof set theory 
points need clarified 
martin lof set theory mean traditional 
prevented martin lof calling type theory reason call martin lof set theory 
second argue slogan saying universes martin lof set theory closed type 
really misconception 
closed universes sit inside type unifying theory dependent types gl calculus proposed line author emphasis decidability language 
main purpose reinforce confidence slogan look happens model theory 
section study semantics calculus constructions extended generalized inductive types constructive setting 
set theoretical models category set interpret various enriched calculus constructions 
section set general categorical framework prove general categorical result 
show ecc extended class inductive types interpreted set 
general categorical results motivates formulation class inductive types 
traditional approach dyb set theoretic model inductive types defined set theory aczel notion rule sets acz 
similar model continuous functors described cpm 
treat inductive types constructions impredicative 
dyb author says quote interpretation course extend full system calculus constructions extended inductive types 
having set theoretic model properties distinguish predicative impredicative type theory 
course prevents giving constructive set theoretical model 
fact model version recursive set theory 
reflects computational aspect inductive types 
inductive types essence computational objects 
section going transplant classical set theoretical construction category set 
definition interpretation follows dyb closely 
contribution sets obtained certain rule sets 
enriched calculus constructions language style tarski 
formulation coq luo theoretical advantages 
instance standard set model perfect explicit calculus 
rules skeleton calculus constructions 
rop type gamma type gamma rop type gamma gamma rop type gamma gamma gamma rop gamma prf type gamma gamma pix gamma pix gamma gamma fa gamma type gamma type gamma pix type gamma rop gamma rop gamma prf gamma prf gamma prf gamma gamma ffl prf gamma gamma type gamma omitted equational rules 
ways extend language just described 
enrich generalized inductive types formulated dyb 
context gamma type gamma type gamma gamma gamma type gamma ctxt context realization gamma gamma gamma gamma gamma emphasized author 
context delta def piz delta intuitively isomorphic pix delta delta delta pix substitution contexts computed delta means 
formation gamma delta ctxt gamma delta phi ctxt gamma delta phi ctxt gamma delta ctxt gamma delta phi ctxt gamma delta phi nnn ctxt gamma delta delta phi phi phi phi nnn type abbreviate delta delta phi phi phi phi nnn delta phi gamma delta gamma phi ik 
delta phi delta deltan gamma intro delta phi delta deltan elimination gamma delta phi type gamma pi delta piy phi 
delta phi pi phi delta delta delta piy phi 
delta phi pi phi intro delta deltan gamma rec piz delta phi computation gamma delta phi type gamma pi delta piy phi 
delta phi pi phi delta delta delta piy phi 
delta phi pi phi intro delta deltan gamma delta gamma phi 
delta phi gamma phi 
delta phi gamma rec intro phi rec phi rec intro formation rules tell generalized inductive types dimensional generalization known types 
elimination computation rules functions inductive types defined computed 
rules linearized completely independent 
formulation terms contexts entirely satisfactory 
refrain giving completely formal account 
quick review set model section reviews basic facts set model cf 
luo luo ore 
sequel overload syntax type theory interpretation set 
definition set fl consists set underlying set relation fl ae theta exists satisfying fl element witnessed recursive function 
morphism fl fl function gamma 
tracked realized recursive function tracks mean fl delta fl fa delta result applying th recursive function number set write jaj underlying set 
category set locally cartesian closed finite colimits 
summarizes standard constructions 
importantly set contains remarkable internal category 
definition partial equivalence relation transitive symmetric relation set natural numbers 
write man set equivalence classes equivalence class represented dom def 
mean dom 
map set natural numbers dom delta delta 
pers define usual constructions follows 
product theta theta iff ma mb exponential contains pairs hm ni pair ha bi case hm delta delta bi coproduct contains pairs hm ni ma mb initial object empty relation terminal object total relation 
fact category finite colimits 
particularly useful fact small complete full subcategory set 
property enables interpret calculus constructions set types sets propositions interpreted pers 
show enriched calculus constructions modeled set explain generalized inductive types interpreted category 
set model context interpreted set judgement gamma type modeled map underlying set gamma set 
empty context interpreted terminal set theta 
context gamma interpreted oe gamma gammaj gamma 
set denotation gamma type 
gamma pix type modeled gamma gammaj gamma 
set 
denotation gamma ctxt oe gamma oe oe gamma delta delta delta oe oe delta delta deltaoe gamma delta delta delta gamma gamma delta delta delta 
term gamma interpreted morphism gamma gamma 
oe gamma satisfies projection property id gamma oe gamma gamma 
gamma projection 
details see loc cit 
assume gamma set gammaj gamma 
set maps 
define sets gamma oe gamma maps theta gammaj gamma 
set 
joe gamma gamma 
set map define maps oe gamma gamma gammaj gamma 
set 
notice gammaj set defined prescribing ff arbitrary ff gammaj 
set underlying set realizability relation oe gamma fl fl gammaj ja fl jg hm ni fl oe gamma fl fl gamma fl fl fl oe gamma ff ja ff jb ff jg hm ni fl oe gamma ff fl ff fl ff gamma ff gammaj fl gammaj ja fl fl gamma iff fl gammaj fl ja fl fl gammaj fl gamma fg fl gamma fl delta fl fl fl gamma ff ff ja ff ja ff jb ff fl gamma ff ja ff jb ff ja ff fl gamma ff fg fl ff delta fl ff ff ja ff jg hi ni fl ff ja ff jg fl ja ff fl ja ff theta ff ja ff ja ff jg hm ni fl thetaa ff fl ff fl ff notice oe gamma ff oe ff ff gamma ff ff ff 
constructions set model definition acz rule set pair ae rule set set rules rule set set closed rule ae implies set inductively defined set def smallest closed set 
rule set deterministic associated rule set induction suppose property rule implies holds member 
natural generalization transfinite induction set theory 
corresponding generalization definition recursion available define function way elements generated 
usually familiar way obtaining want 
start empty set keep throwing new elements 
transfinite sequence bounded upwards simple cardinality reason 
sequence closes ordinal set obtained stage 
obviously closed hand element set closed sets 
look formation rule 
assumption delta gammaj gamma 
set delta deltan 
ff gammaj phi ik ff delta ff gamma 
set delta deltan 
sufficiently large universe 
define ff rule set delta deltan delta deltan range oe ik hn intro ffi oe oe fi fi fi fi fi fi fi fi fi ffi delta ff oe phi ff ffi delta delta delta oe phi ff ffi intro code intro range oe ik range function oe ik requirements analysis taken dyb ffl finite 

ffl closed pairing 
fi greatest element fi hv fi fi fi conclude limit ordinal 
ffl phi ij ff ffi ae possible suggests regular 
obtain rule set replacing definition 
proposition ff 
suppose delta xn 
assumption phi ik joe delta delta delta oe oe gamma gamma 
set 
phi ik ff derived phi ik proof clearly ff ae suppose ae ff 
delta deltan range oe ik definition 
delta deltan range oe ik ae ff ae oe ik phi ik ff ffi delta deltan ff gammaj ffi delta ff follows ff conclude ff 
ff closed 
hand closed ff induction easy show ff ae ff closed set 
xi proposition collects properties ff ff illustrates part reason ff models inductive type 
proposition 
ff deterministic 

ff hn intro ffi oe oe delta deltan ffi delta ff oe ik phi ik ff ffi delta deltan 

suppose hn intro ffi oe oe ff 
exists unique rule hn intro ffi oe oe ff delta deltan range oe ik 

suppose hn intro ffi oe oe ff 
oe ik delta deltan function phi ik ff ffi ff 
proof 
just extensionality functions 

set rules ff ff closed 

immediate definition ff 
suppose delta deltan range oe ik ff 
exist delta deltan range oe ik ff 
consider ff fhn intro ffi oe oe ig 
ff ae ff fhn intro ffi oe oe ig ae ff 
ff 
hn intro ffi oe oe delta deltan range oe ik impossible delta deltan range oe ik certainly follows ff fhn intro ffi oe oe ig ff closed 
contradiction 
delta deltan range oe ik ae ff 
xi going construct ff set ff 
construction proceeds constructing series functions fi ff gamma 
fi ordinal 
power set series sets ae ae delta delta delta derived functions 

function associates empty set element ff 
def 

fi hn intro ffi oe oe def def hn intro ffi oe oe fi fi fi fi fi fi fi fi fi fi fi fi fi fi fi fi fi fi fi ffi delta ff oe phi ff ffi 
fi delta delta delta oe phi ff ffi 
fi ffi fl delta ff ffi oe fl phi ff ffi 
fi oe delta delta delta oe fl phi ff ffi 
fi oe fi def fi fl fi 
fi iff fi fl fi iff fi 

limit ordinal def fi fi ff def fi 
fi fi fl fi ff gamma 
define iff ff ae 
obviously ordinals fi fi fi fi simple cardinality argument know exists ordinal fi fi fi ordinal theorem lev choose fi 
define ff fi interpret delta delta phi phi phi phi nnn ff gammaj ff 
interpretation elimination rule accommodated proposition 
delta phi usually interpreted way elements ff generated 
done proposition ff obtained ff removing rules ff ff ff ff 
proof 
ff ff closed 
suppose ff ae ff clearly ff 
ff ff ff imply ff 
suppose ff closed 
induction way elements ff constructed easily show fi ae ordinal fi 
xi defined set interpretation inductive type 
need course interpret elimination computation rules 
purpose define rule set closed set graph underlying function modeling eliminator 
suppose ff gammaj ffi delta ff assumption joe gamma ff gammaj ff gamma 
set oe phi ff ffi gamma 
ff ff ff gamma 
set 
write ff oe composition oe ff 
ff defined follows delta deltan delta deltan ik ik phi ik ff ffi jg hhn intro ffi oe oe ff ffi oe oe fi fi fi fi fi fi fi fi fi fi fi fi fi ffi delta ff oe phi ff ffi ff phi ff ffi ff oe delta delta delta oe phi ff ffi ff phi ff ffi ff oe proposition ff graph function ff ff proof induction way elements ff generated construct collection sets ae ae delta delta delta ae ff 
suppose constructed sets fi satisfy conditions fi graph function domain subset ff element fg jc ff 
ii hhn intro ffi oe oe ff ffi oe oe delta deltan equation ik phi ik ff ffi fg oe ik holds 
suppose rule ff delta deltan ik ik phi ik ff ffi jg ae fi delta deltan ik ik phi ik ff ffi jg hhn intro ffi oe oe ff ffi oe oe 
definition hhn intro ffi oe oe ff ffi oe oe ff 
assumption know phi ik ff ffi ik fg fi oe ik delta deltan 
extensionality enables conclude ik phi ik ff ffi fg oe ik delta deltan 

assumption fi definition delta deltan obvious ff ffi oe oe jc ff hn intro ffi oe oe 
suppose hhn intro ffi oe oe ff ffi oe oe fi induction hypothesis ik phi ik ff ffi fg oe ik phi ik ff ffi fg fi oe ik ik delta deltan 
conclude fi def intro ffi oe oe ff ffi oe oe ig fi subset ff satisfies conditions ii 
case limit ordinal handled usual 
sequence ae ae delta delta delta ae fi ae fi ae delta delta delta cardinality restriction implies sequence closes stage say fi 
fi clearly ff closed 
fi ff 
ff graph function 
show ff ff ff show tracked recursive function 
suppose fl gamma ff 
define function follows case intro delta delta delta delta delta delta 
intro dn delta delta delta delta nn delta nn delta delta delta obtained theorem 
observations church thesis function effective variable 
ii effective construct function gamma reason ff gammaj fl gamma ff obtain delta dn delta effectively dn 
iii delta partial combinatory algebra exists effective procedure computes index delta function 
theorem compute godel index delta fm delta recursion theorem says index effective function ff holds ff delta delta ff delta notice ii iii effectiveness recursion theorem ff delta effectively computed 
point important interpretation 
iff 
remains important thing proved ff fl ff ff delta delta defined ff delta delta fl ff ff proved induction way elements ff generated 
element ff form hn intro ffi oe oe realizers definition form hn intro ffi oe oe show ff delta delta hn intro ffi oe oe fl ff hn intro ffi oe oe ff hn intro ffi oe oe suppose added definition ff stage fi 
ff delta delta hn intro ffi oe oe delta ff delta delta hn intro ffi oe oe delta delta ffi oe ff delta delta oe delta oe ff delta delta oe delta want show expression third line partial equation defined 
know oe phi ff ffi 
fi implies oe phi ff ffi ff structural definition interpretation elimination computation rule delta defined ffi oe oe fl phi ff ffi oe oe delta fl fi oe oe implies oe delta fl ff oe oe 
added definition ff stage previous fi 
induction hypothesis ff delta delta oe delta defined ff delta delta oe delta fl ff oe oe ff oe oe 
conclude ff delta oe delta fl phi ff ffi ff oe oe ff oe oe 
delta defined ff delta delta oe delta 
follows ff delta defined hn intro ffi oe oe assumption definitions fi ff property ii ff satisfies delta delta ffi oe ff delta delta oe delta oe ff delta delta oe delta fl ff hn intro ffi oe oe ff ffi oe oe ff oe oe oe oe ff oe oe ff hn intro ffi oe oe conclude holds 
ff tracked ff delta 
xi theorem construction gives sound interpretation inductive types constructions 
proof generalized inductive type delta phi interpreted ff gammaj ff gammaj gamma 
set 
eliminator taken care effective function ff ff ff gamma gamma 
oe gamma gamma ff gammaj ff equation rule sound definition ff delta equation 
xi example basic sets martin lof set theory defined follows unit def def def list def ord def type type sigmax def wx def notice difference empty context inhabited context 
apply previous constructions get follows interpreted theta 
suppose code intro intro respectively simplify function gamma 
element rule set rn def fh delta delta delta ig delta delta delta fi fi fi fi fi fi fi fi fi fi fi smallest rn closed set def fh delta delta delta iji set obtained 
initial set 
set fh ig theta fh ig 
set fh iig theta fh iig 
conclude theta 
interpretation denotation isomorphic standard natural numbers object set 
similarly interpretations second sixth defined types isomorphic established interpretation 
inductive families dyb class types inductive families introduced bear resemblance combination variants tree types proposed ps 
occasions useful able deal family inductive types indexed type 
take attitude indexing type different type context 
plays special role 
formation gamma ind ctxt gamma delta ctxt gamma delta phi ctxt gamma delta phi ctxt gamma delta ctxt gamma delta phi ctxt gamma delta phi nnn ctxt gamma ind ind delta delta phi phi phi phi nnn type abbreviate delta delta phi phi phi phi nnn delta phi gamma delta ind gamma delta phi ik ik ind delta deltan gamma delta gamma pi phi ik delta phi ik delta deltan gamma intro delta phi delta deltan elimination gamma ind ind delta phi type gamma delta ind gamma delta phi ik ik ind delta deltan gamma pi delta piy pi phi delta phi pi phi delta delta delta piy pi phi delta phi pi phi intro delta deltan gamma ind ind rec piz delta phi ind computation gamma ind ind delta phi type gamma delta ind gamma delta phi ik ik ind delta deltan gamma pi delta piy pi phi delta phi pi phi delta delta delta piy pi phi delta phi pi phi intro delta deltan gamma delta gamma pi phi ik delta phi ik delta deltan gamma rec intro phi rec phi rec intro delta deltan 
formation rule defines family types indexed ind rule says family types mutually dependent 
elimination computation rules look stupid linearized things independent 
collection types easy define coherently order get nontrivial family inductive types 
rule clear ind inhabited ind equal delta happens elimination rule fully specified rec ind defined 
sequel assume object ind equal 
semantical justification set model constructed similarly generalized inductive types 
fix ff gammaj 
interpretation delta phi define rule set ff follows large universe delta deltan delta deltan ik ff ffi oe ik phi ik ff ffi jg hp ff ffi hn intro ffi oe oe ii fi fi fi fi fi fi fi fi fi ffi delta ff oe phi ff ffi delta delta delta oe phi ff ffi hind hind elements ff 
ind ind implies suppose ind ff ffi ind ff ffi clearly ffi ffi implies ff defines function 
take effective part set ff transfinite construction 
ind def ind ff 
suppose fi ind constructed ind ff ind def ff ffi 
define fi ind def fi ind fi ind fi ind delta deltan hhn intro ffi oe oe hn intro ffi oe oe ii fi fi fi fi fi fi fi fi fi fi fi fi fi fi fi fi fi fi fi fi fi ffi delta ff oe phi ff ffi fi ff ffi delta delta delta oe phi ff ffi fi ff ffi ffi fl delta ff ffi oe fl phi ff ffi 
fi ff ffi oe delta delta delta oe fl phi ff ffi 
fi ff ffi oe 
limit ordinal ind def fi 
fi ind fi fl fi ind ind ff take fixpoint ff ind ind ff sequence 
delta phi interpreted function sends ff ind joe gamma ind ff ind 
terms delta phi interpreted closure property ff ind 
set graph interpretation godel number tracks constructed fashion 
construct rule set ff delta deltan delta deltan ik ff ffi hoe ik ik phi ik ff ffi jg hp ff ffi hhn intro ffi oe oe ffi oe oe ii fi fi fi fi fi fi fi fi fi fi fi fi fi fi ffi delta ff oe phi ff ffi ff ff ffi phi ff ffi ff ff ffi oe delta delta delta oe phi ff ffi ff ff ffi phi ff ffi ff ff ffi oe ff obtained transfinite sequences ind ae ind ae delta delta delta ae ff ind ind ff 
defined follows ffl ind empty set 
ffl suppose ind constructed fi ind ff ffi delta ff fi ff ffi defined union fi ff ffi hhn intro ffi oe oe ffi oe oe fi fi fi fi fi fi fi fi fi fi fi fi oe phi ff ffi fi ff ffi phi ff ffi ff ff ffi oe delta delta delta oe phi ff ffi fi ff ffi phi ff ffi ff ff ffi oe ffl limit ordinal fl fl ind def fl ind proposition 
fi ind graph function 
fi ind 
hhn intro ffi oe oe ffi oe oe fi ff ffi ik phi ik ff ffi fg fi ik ff ffi oe ik 

closure ordinal ff ind 
proof prove simultaneously induction 
suppose hold fi 
hhn intro ffi oe oe ffi oe oe fi ff ffi fi ff ffi induction hypothesis ik phi ik ff ffi ik phi ik ff ffi fg fi ik ff ffi oe ik fi ff ffi graph 
fi ff ffi hhn intro ffi oe oe ffi oe oe fi ff ffi fi ff ffi hn intro ffi oe oe 
fi ff ffi immediate 
omit argument similar section function tracked effective function 
xi recursive model method described section applied 
get model martin lof set theory extended generalized inductive types 
model universes associate name interpretation type ml martin lof set theory infinite hierarchy universes 
type appeared left hand side interpreted name type modeled corresponding appears right 
basically extension recursive model bee bee 
setting points worth mentioning double role type plays martin lof set theory small universes tremendous amount encoding involved want model universes problem severe ii universe definition rule sets taken terminal theta largest element poset obj 
typically rule set ff defined follows delta deltan delta deltan range oe ik hn intro ffi oe oe fi fi fi fi fi fi fi fi fi ffi delta ff oe phi ff ffi 
theta delta delta delta oe phi ff ffi 
theta notice definition elements tuples natural numbers 
transfinite induction define partial equivalence relation ff 
process produces ff 
details see fu 
models variants inductive types defined logical framework 
advantages logical framework possibility separating computational content language defined extensional properties meta calculus 
language proposed luo designed maximize gain 
able define generalized inductive types martin lof logical framework extended kind schemata 
schemata small sense talk small universe set 
generalized inductive types reside set defined terms kind schemata 
model theoretic point view set internal category ambient category logical framework interpreted 
usual interpret set set kinds objects category omega gamma set sets defined large universe 
rule sets defined live omega gamma set 
kind schemata implies closed sets rule sets set 
categorical semantics logical frameworks see fu 
inductive types types 
known inductive types definable extensional dependent calculus types dyb gl 
interpretation extensional 
follows interprets types extensional rules 
extensional calculus constructions enriched types accounted method illustrated 
formulations generalized inductive types 
essence generalized inductive types understood different formulations problems 
cpm ppm contain formulations 
advantage formulation cpm easier see generalize 
generalized inductive types 
call general inductive types inductive types defined cpm strict positivity relaxed just positivity 
little modification set model sound interpretation generalized inductive types formulated cpm 
method give model general inductive types set 
give model general inductive types 
due existence largest universe 
details see fu 
internal inductive types 
totally different approach code inductive types internally 
adopted ppm fu 
method pose model theoretical problems traditional sense 
semantic interest relate levels models 
see pit fu fu details 
categorical inductive types 
men categorical formulation recursion 
interesting see general definition means concrete categories dependent typed calculus modeled 
see fu examples 
initial algebraic approach way formalizing ideas embodied generalized inductive types initial algebras 
studied ore 
formulation possible calculus extensional 
reason functors define rules inductive types functoriality type constructor equivalent extensionality definitional equality associated type constructor 
section spell rules mutually dependent inductive types 
clear chose ecc ambient calculus 
examples illustrate usage rules 
explain general method construct interpretation types 
give nice generalization known result 
extra generality motivates definition new class inductive types described section 
language definition suppose type oe type say oe strictly positive respect occur oe oe oe pix oe occur oe strictly positive respect clearly oe type oe type strictly positive oe pix delta delta delta pix km occur delta delta delta km formation gamma type type type gamma type type type gamma type appear strictly positively gamma type type type gamma type type type gamma gamma intro abbreviated recursion gamma type gamma type gamma piz sigmax sigmax intro 
gamma piz sigmax sigmax intro gamma rec pix def sigmax sigmax ary functor covariant strictly positive respect computation gamma type gamma type gamma gamma piz sigmax sigmax intro 
gamma piz sigmax sigmax intro gamma rec intro hz rec zi hz rec zi intro 
extensionality gamma delta type gamma delta type gamma intro hid gi pix 
gamma intro hid gi pix gamma piz sigmax sigmax intro 
gamma piz sigmax sigmax intro gamma rec pix hid gi def hz zi hz zi 
diagram helps understand rules concerning inductive types 
sigmax sigmax sigmax hid rec hid rec hid rec intro hm intro example best known mutually dependent inductive type data type trees forests 
hagino notation defined follows intuitively tree consists forest root exists empty forest adjoining tree forest creates new forest ht sum constructors span theta gamma 
join theta gamma 
empty gamma 
notation rules follows type type theta type type type theta type tree def theta theta type type theta type type type theta type forest def theta theta type type theta type type type theta type theta forest tree tree type type theta type type type theta type tree theta forest forest forest tree theta forest tree type forest type piz theta sigmax forest tree zi piz sigmax tree theta sigmax forest forest case inl sigmax tree theta sigmax forest inr wi rec forest case inl inr hh rec rec ii forest theta forest tree type forest type piz theta sigmax forest tree zi piz sigmax tree theta sigmax forest forest case inl sigmax tree theta sigmax forest inr wi rec tree rec ii tree rules complicated appear 
example continued suppose type natural numbers compute sum nodes leaves tree sum nodes leaves trees forest 
mutually recursive programmes derived follows theta forest def theta forest theta theta forest theta def tree theta theta forest theta case inl inr tree theta theta forest theta rec forest case inl inr hh rec rec ii theta forest def theta forest theta theta forest theta def tree theta theta forest theta case inl inr tree theta theta forest theta rec tree rec ii reducible rec forest case inl inr rec rec case rec tree rec second 
constructing initial algebras inductive types previous section course modeled appropriate initial algebras 
question concrete model calculus constructions ecc martin lof set theory endofunctor category model taken construct initial algebra 
answer theorem 
theorem generalizes result ak 
proof theorem generalizes ak 
suppose endofunctor algebra pair ta gamma 
object morphism homomorphism ta gamma 
tb gamma 
morphism gamma 
initial algebra initial object category algebras 
dually define terminal coalgebras notation gamma 
tc 
twisted homomorphism coalgebra algebra morphism gamma 
satisfies equation homomorphism morphism gamma 
tn suppose filtered colimits assume equipped specific colimiting cocones 
ready describe important constructions 
construction 
chain induced coalgebra constructed follows ffl head chain just gamma 
ta ffl successor ordinal defined ta ta gamma ffl limit ordinal fl define fl limit chain constructed far 
fl fl gamma 
fl obtained cocone 
ffl limit ordinal fl fl fl unique mediating morphism shown diagram fl fl delta delta delta fl fl fl fl fl fl dotted diagram obtained applying functor cocone diagram constructed previous step 
limit ordinal ff fl define ff fl ff ff ta ff fl easily seen get new cocone diagram 
say chain closes ff ff ff isomorphism fi ff fi fi isomorphism 
ff called closure ordinal 
lemma chain closes ff fi ff fi fi isomorphism ordinals ff fi fl fl limit ordinal fi fl isomorphism 
construction 
suppose algebra twisted homomorphism coalgebra 
induced cocone induced chain constructed follows ffl morphism def verifies ffl successor ordinal def obtain gamma gamma gamma ffl fl limit ordinal 
constructed far forms cocone define fl unique mediating morphism 
ffl limit ordinal fl fl def fl ta ta ta tx ta fl fl delta delta delta ta ta ta fl fl fl ta fl fl applying cocone diagram far constructed fl fl fl fl fl fl fl fl fl fl fl fl fl uniqueness mediating morphism conclude fl fl fl fl theorem suppose construction 
bijective correspondence class twisted homomorphisms class twisted homomorphisms ff ff ff ordinal ff 
proof construction prescribes function ff gamma 
ff ff ff 
ff surjective 
suppose ff ff ff ff gamma 
twisted homomorphism 
def ff ff readily verified 
show leg induced cocone ff define twisted homomorphism gamma 
ff prove transfinite induction successor ordinals fl fl limit ordinals ii ff ff ffl define def ff ff ff ff ff ff ff ff ff ff ff ff ff ff ffl successor ordinal define def ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ffl fl ff limit ordinal 
fl defined mediating morphism 
fl fl get fl fl ff ff ff ff fl fl follows fl ff ff fl ffl limit ordinal fl fl def fl fl fl fl fl established way construction 
proof fl fl fl second case 
ff successor ordinal ff gamma ff gamma ff ff ff ff ff ff shown ff mediating morphism 
cases ff just defined 

ff injective 
different twisted homomorphisms 
clear general successor ordinals 
fl fl limit ordinals mediating morphisms induced different cocones 
ff ff xi complete construct dually twisted homomorphism gamma 
induced cone induced cochain 
easy see get commutative diagram ff ff delta delta delta ff ff delta delta delta ff ff ff ff simple consequence theorem holds ordinals mentioned theorem generalizes nicely result ak corollary suppose filtered cocomplete initial object endofunctor 
gamma 
induced chain closes ff ff ff gamma initial algebra 
monotonic functors set set gamma set monotonic functor 
inclusion 
construct sequence shown diagram fi def fi 


delta delta delta 
limit ordinal fi colimit defined union sets previously constructed 
suppose vertex cocone 
mediating morphism obviously defined 
type strictly positive respect interpreted monotonic functor set 
functor bounded upwards simple cardinality reason 
interpret initial algebra 
model cpm 
situation set different 
problem fi fi limit ordinal necessarily colimit set colimits 
underlying function shown diagram general guaranteed recursive function tracks 
previous case strictly positive type constructor gives rise monotonic functor set 
unsatisfactory corollary longer applicable 
construction initial algebra monotonic functor set generalize case set 
ore author assumes bounded monotonic functor set generates initial algebra explain 
bounded monotonic functors set initial algebras 
definition say set fl decidable identity endomorphism ida tracked recursive function defined set def fl ag realizers equivalently ida tracked identity recursive function defined 
definition say monotonic functor set decidable maps decidable sets decidable sets 
continuous bounded decidable monotonic functor closure ordinal countable 
proposition suppose set gamma 
set continuous functor 
initial algebra 
proof initial set decidable 
assumption 
decidable 
need show ff 
decidable limit ordinal ff 
decidable id 
tracked defined ff 
id ff 
tracked turing machine ffl imitates step stage 
ffl second stage imitates step second step ffl third stage imitates step second step third step ffl forth 
ff countable diagonal method gives rise turing machine 
clearly machine stops inputs ff 
ff 
decidable 
show ff 
colimit 
suppose ff ff cocone ff tracked analysis ff tracked defined 
view mentioned find recursive function tracks mediating function 
done applying diagonal argument ff ff xi continuous functors seen set counterparts continuous functors 
notice ambient category countability condition dropped 
definition suppose type oe type say oe rigidly positive respect oe standard interpretation set decidable set ii oe iii oe oe omega oe oe oe rigidly positive respect omega theta 
proposition suppose type occurs rigidly positively 
denotation set continuous functor 
clear restricted rigidly positive type constructors language defined section interpretation set 
local inductive types typed calculi programming languages say object oriented languages natural notion subtyping relation language define type inductively contains type 
assume coercions implicit rules describe local inductive types formed manipulated 
formation gamma type gamma type type gamma type gamma type appears strictly positively restriction applies rules 
gamma gamma intro elimination gamma type gamma type type gamma type gamma pix gamma piz sigmax intro gamma hx hi pix gamma rec pix computation gamma type gamma type type gamma type gamma pix gamma piz sigmax intro gamma hx hi pix gamma gamma rec gamma type gamma type type gamma type gamma pix gamma piz sigmax intro gamma hx hi pix gamma gamma rec intro rec intro formulation rules motivated theorem 
diagram helps understand rules sigmax sigmax hx hi hx hi hm intro fi local inductive types formulated traditional style 
losing generality explain rules local types 
formation gamma type gamma type gamma type gamma gamma gamma sup elimination gamma type gamma piz gamma pix piy pib sup gamma rec wd piz computation gamma type gamma piz gamma pix piy pib sup gamma gamma rec wd gamma type gamma piz gamma pix piy pib sup gamma gamma gamma rec wd sup rec wd sup set model described extended interpret local types 
ff gammaj rule set ff defined set fi fi fi jdj range hn sup bi fi fi fi fi fi fi fi ja ff jb ff effective procedure getting ff remains unchanged time take graph ff graph ff jb ff jg hhn sup bi ff fi fi fi fi fi fi fi ja ff jb ff ff ff ff assuming elements distinguished code 
recursive function tracks ff similarly 
difference branching programme perform different actions depending input datum 
ways define inductive set take smallest closure rule set take fixed point bounded monotonic functor 
equivalent classical set theory weaker constructive setting 
explained interpret generalized inductive types set notion rule sets 
noticed notion continuous functors set set considerable restriction 
moment know continuous functors general definition 
interpretation section involves huge amount encoding 
categorical description 
possible give internal account done section 
questions closely related harder endofunctors set initial algebras 
material taken author ph thesis fu 
supervisor david rydeheard helpful way years 
peter aczel martin hyland raised interesting points quite comments 
financial support british council state education commission china late yu gang bau ii project gratefully acknowledged 
acz aczel 
inductive definitions 
barwise editor handbook mathematical logics pages 
north holland 
acz aczel 
type theoretic interpretation constructive set theory inductive definitions 
barcan marcus editor logic methodology philosophy science vii 
north holland 
ak ad amek 
fixed point functor 
journal computer systems 
bee beeson 
recursive models constructive set theories 
annals mathematical logic 
bee beeson 
foundations constructive mathematics 
springer verlag 
ber berardi 
non conservativity coquand calculus respect higherorder intuitionistic logics july 
ch coquand huet 
calculus constructions 
information computation 
chu church 
formulation simple theory types 
journal symbolic logic 
coq coquand 
analysis girard paradox 
proceedings symposium logic computer science pages 
ieee computer science press june 
coq coquand 
mathematical investigations calculus constructions 
odifreddi editor logic computer science pages 
academic press 
cpm coquand paulin mohring 
inductively defined types 
lncs pages 
springer verlag 
dyb dybjer 
inversion principle martin lof type theory 
proceedings workshop programming logic university technology 
pmg report 
dyb dybjer 
inductive sets families martin lof type theory set theoretic semantics 
huet plotkin editors proceedings workshop logical frameworks pages 
cambridge university press 
fu fu 
note topos models 
department computer science university manchester july 
fu fu 
recursion universes set 
department computer science university manchester july 
fu fu 
recursive models general inductive types 
department computer science university manchester july 
fu fu 
semantic issues type theory 
phd thesis department computer science university manchester may 
fu fu 
categorical properties logical frameworks 
department computer science university manchester february 
fu fu 
encodings polymorphism revisited 
department computer science university manchester january 
fu fu 
logical type theory 
department computer science university manchester may 
gl goguen luo 
inductive data types ordering types revisited 
technical report lfcs university edinburgh april 
howard 
formulae type notion construction 
seldin hindley editors curry essays combinatory logic lambda calculus formalism 
academic press 
lev levy 
basic set theory 
springer verlag 
luo luo 
extended calculus constructions 
phd thesis lfcs university edinburgh edinburgh july 
luo luo 
problem adequacy conservativity calculus constructions higher order logic 
lfcs university edinburgh august 
luo luo 
higher order calculus theory abstraction 
information computation january 
luo luo 
unifying theory dependent types schematic approach 
nerode editors logical foundations computer science lncs 
springer 
men mendler 
predicative type universes primitive recursion 
proceedings sixth symposium logic computer science pages 
ieee computer science press july 
ore ore extended calculus constructions ecc inductive types 
information computation august 
pit pitts 
polymorphism set theoretic constructively 
pitt poign rydeheard editors category theory computer science lncs pages edinburgh september 
springer verlag 
ppm pfenning paulin mohring 
inductively defined types calculus constructions 
main editor mathematical foundations programming semantics lncs pages 
springer verlag 
ps petersson 
set constructor inductive sets martin lof type theory 
pitt rydeheard pitts poign editors category theory computer science lncs pages manchester september 
springer verlag 
rw russell whitehead 
principia mathematica volume 
cambridge university press 

note categorical datatypes 
pitt rydeheard pitts poign editors category theory computer science lncs pages manchester september 
springer verlag 

