completion failure leo bachmair department computer science state university stony brook stony brook new york nachum dershowitz department computer science university illinois urbana champaign urbana illinois david plaisted department computer science university north carolina chapel hill chapel hill north carolina 
unfailing extension standard knuth bendix completion procedure guaranteed produce desired canonical system provided certain conditions met 
prove unfailing completion method complete theorem proving equational theories 
method applied horn clauses equality case corresponds positive unit resolution plus oriented paramodulation unrestricted simpli cation 
research supported part national science foundation dcr dcr 
design cient methods dealing equality predicate major goals automated theorem proving 
just adding equality axioms invariably leads unacceptable ine ciencies 
anumber special methods devised reasoning equality 
resolution provers demodulation equations direction rewrite terms simpler form frequently employed wos 
unfortunately demodulation incomplete adhoc method 
complete method handling equations paramodulation robinson wos equational consequences generated equations directions 
general paramodulation di cult control may produce hosts irrelevant redundant formulas 
consider purely equational case theory set equations interested proving equation valid equational theory 
validity equational theories course semi decidable equation true models countable set equations obtained axioms substitute equals equals 
important special cases validity decided canonical terminating church rosser rewrite systems property equal terms equal terms simplify identical canonical form 
deciding validity theories canonical systems known group theory easy reasonably cient 
knuth bendix designed procedure attempts construct canonical rewrite systems set equational axioms 
le derived manner 
knuth bendix completion procedure su ers major problems 
supplied founded ordering uses determine direction generated equation oriented way rule 
finding ordering easy 
secondly appropriate ordering chosen procedure may fail nd canonical system exists dershowitz marcus tarlecki 
address problem presenting unfailing extension completion procedure 
unfailing completion guaranteed produce desired canonical system provided certain conditions met 
complete equational theories advantage paramodulation terms kept fully simpli ed form fewer equational con sequences need considered ordering supplied procedure gives measure direction prover 
method works general purpose orderings proposed rewriting polynomial interpretations recursive path orderings 
demonstrate unfailing completion applied horn clauses equality prove theories inference rules positive unit resolution strong restriction paramodulation complete presence unrestricted simpli cation 
follow approach dershowitz hsiang bachmair formulate unfailing completion level equational inference system 
consequently results apply large class procedures just single version 
de nitions shall consider rst order terms set operator set 
symbols andu denote terms denote operator symbols andz denote variables 
assume thatf contains constant 
set ground terms terms containing variables non empty 
example binary operator unary operator constants non ground ground 
subterm term called proper distinct expression denotes subterm position positions may instance represented dewey decimal notation 
write indicate term contains subterm ambiguously denote result replacing particular occurrence denote result applying substitution term call instance instance proper instance proper instances non proper instance 
binary relation terms monotonic respect term structure implies terms andu 
respect instantiation implies 
terms substitutions relation satis es properties simply called monotonic 
symbols 
denote transitive exive symmetric closure respectively 
inverse denoted strict partial ordering irre exive transitive binary relation 
ordering founded nite sequence reduction ordering founded monotonic ordering terms 
equation pair terms written set equations denote smallest symmetric monotonic relation contains andv term substitution equation ambiguously denotes 
relation smallest monotonic congruence contains congruence de nition monotonic respect term structure 
shall refer equational theory de ned directed equations called rewrite rules written bya rewrite system mean set rewrite rules 
corresponding rewrite relation smallest monotonic relation contains rewrites andv term substitution rewrite rule occasion write indicate rewrites application rule term rewritten said irreducible respect 
nf denote set irreducible terms 
normal form irreducible term 
rewrite system church rosser terms exists term 
rosser system normal form term exists unique 
rewrite system terminates ordering 
founded 
untyped terminating system variables appearing right hand side rule appear corresponding left hand side 
terminating church rosser systems called complete 
de ne unique normal form term 
knuth bendix completion procedure knuth bendix designed procedure attempts construct complete system set equations 
bachmair dershowitz hsiang bachmair reformulated completion procedure equational inference system 
reduction ordering terms 
standard completion consists inference rules may set equations rewrite system contained orientation deduction deletion simpli cation composition collapse fs tg fs tg fs tg fs sg fs tg fu tg fs tg fs ug fs tg fv tg symbol denotes specialization ordering subterm instance vice versa 
write indicate pair obtained application inference rule 
possibly nite sequence called derivation 
limit derivation pair set ej persisting equations set rj persisting rules 
completion procedure program accepts input set equations rewrite system reduction ordering containing uses inference rules generate derivation 
say completion procedure fails inputs 
completion procedure correct ifr complete 
complete system provides decision procedure validity problem equational theory terms equivalent reduce identical normal forms 
unsolvability word problem certain nitely equational theories implies construction complete system possible 
example theories commutativity usually represented terminating systems 
completion fails theories 
correct completion procedure may construct nite complete system ii fail iii terminate compute successive approximations rn nite complete system address problem failure presenting unfailing extension standard completion 
unfailing completion exists complete rewrite system equational theory may possible construct system equations certain church rosser property terms ground term unique normal form 
ground church rosser property su cient purposes including theorem proving 
rst re ne notion rewriting 
call 
orientable instance respect reduction ordering equation denote rewrite system orientable instances equations applying equation position substitution evidently implies set equations said ground church rosser respect implies 
ground terms system ground church rosser respect reduction ordering unique ground normal forms 
normal forms computed provided nite reduction ordering decidable 
inference rule needed construct pairs ground church rosser respect reduction ordering deduction fs tg andt deduction rule special case implies orientable instances equations regarded rewrite rules simpli cation simpli cation composition collapse fs tg fu tg fs tg fs ug fs tg fv tg note di erence simpli cation rules 
restricted cases restriction imposed 
unfailing completion procedure program takes input reduction ordering set equations rewrite system contained uses inference rules plus inference rules standard completion generate derivation 
unfailing completion sound proposition soundness unfailing completion congruence relations 
shall adopt dershowitz hsiang bachmair viewing completion process proof simpli cation derive conditions unfailing completion guaranteed nd ground church rosser system 
proof simpli cation proof proof sequence terms tn tn ti ti ti ti ti holds 
single proof step ti ti justi ed equation ui vi substitution position pi ti pi ui position pi ui ti ti vi replacement takes place vi justi cation proof sequence tuples ti ti ui vi pi concerned justi ed proofs simplicity usually leave justi cation implicit indicate partially writing instance tn 
symbols denote justi ed proofs 
proof tn 
mean proof tn proof tn proof tn 
subproof proof ti tj indicate contains subproof 
proof step called equality step step step proof 
usually abbreviate proof form tn 
tn call proof 
tk tn rewrite proof 
binary relation proofs monotonic respect proof structure implies proofs andq itis monotonic respect term structure implies proofs terms respect instantiation implies proofs substitutions relation satisfying properties called monotonic 
proof reduction ordering simply proof ordering founded monotonic ordering proofs 
inference rules unfailing completion induce certain proof transformations described conditional rewrite rules proofs 
example inference rules orientation deletion re ected proof level rewrite rules simpli cation mirrored indicates orl instances 
composition collapse transformation rules inference rules similar rules 
list symmetric cases proof transformations induced deduction rule interested addition need rule speci es transformation performed applying inference rule see critical pair lemma 
rules proof transformation rules assumed rewrite system contained reduction ordering representative proof transformation rules depicted 
simply denote rewrite relation proofs induced rewrite rules 
connection unfailing completion rewrite relation formally expressed follows 
lemma unfailing completion proof thenthere exists proof words completion interpreted process proof transformation 
ordering founded 
proof simpli cation 
concept multiset orderings useful context 
multiset unordered collection elements elements may appear 
partial ordering set corresponding multiset ordering set nite multisets elements smallest transitive relation fxg fy yi ordering element replaced nite number elements smaller dershowitz manna shown multiset ordering founded founded 
lemma ordering proof reduction ordering 
proof 
wehave founded 
rst de ne complexity measure single proof steps follows fsg ftg ftg fsg fsg ft maxg ftg fs maxg fs tg max new symbol max terms 
rst component relevant clause 
ordering lexicographic combination multiset extension reduction ordering specialization ordering multiset ordering instances considered identical compared specialization ordering 
de ne sm tn sm sm mfc tn tn wherem multiset extension ordering easily shown proof reduction ordering 
foundedness ultimately consequence foundedness components contained 
tu fsg ft maxg fsg ftg 
ii tu 
fsg ft maxg fsg fug 
iii tu 
andf ftg fs maxg mf fsg fug ftg fu maxg iv tu tg 
su sg 
vi tu vii tu 
bigger term 
viii tu 
fsg ftg mf fsg fug ftg fug ix tu 
fsg ftg fsg fug 
tu 
fsg ft maxg fsg fu maxg 
xi tu andf ftg fs maxg fsg fu maxg ftg fu maxg xii tu fsg ftg fsg fug 
xiii tu fsg ftg fsg fu maxg 
assertion follows monotonicity andu correctness unfailing completion reduction ordering rewrite system contained set ground church rosser respect ground rewrite proof valid equation ground terms 
ground rewrite proof respect hand proof containing equality step incomparable respect peak unfailing completion procedure produce ground church rosser system applies inference rules away undesirable subproofs simpli ed 
ordering total equivalent ground terms implies distinct ground terms certainly distinct equivalent terms comparable 
case problem equality steps 
say reduction ordering complete distinct ground terms equivalent ine comparable reduction ordering total set ground terms simply called complete 
elimination peaks su ces compute certain equational consequences called critical pairs 
equations variables common variables equation renamed necessary suppose position variable uni able general uni er 
proof replacement ins takes place position called critical overlap furthermore equation called extended critical pair 
ep denote set extended critical pairs equations ordering restricts number critical overlaps de ning extended pairs 
ordering contained ordering subset ep 
example equations xy zw xz yw xy overlap uv uv uv uv de ne extended critical pair uv uv respect subterm ordering 
usual de nition critical pairs special case extended pairs 
subtle points may arise extended pairs 
instance overlapping equation top results non trivial extended pair 
critical pair lemma 
complete reduction ordering ground terms andu term 
forsome extended critical pair ep 
proof 
lemma straightforward adaption critical pair lemma knuth bendix 
sketch basic ideas 
peak assertion holds trivially identical assume distinct 
distinguish types peaks 
proof steps apply disjoint positions overlap commute 
words peak replaced appropriate term indicated 
proof step applies variable part speak variable overlap 
precisely avariable overlap characterized existence substitution equations positions position variable 
peak replaced proof 
overlap variable overlap depicted 
reduction ordering complete proof rewrite proof respect proof step applies variable part speak proper overlap 
critical overlaps particular proper overlaps 
case equation form extended critical pair ep 
lemma indicates computation extended critical pairs su ces eliminate peaks equations formally wesay derivation unfailing completion fair ep subset ek 
unfailing completion procedure fair generates fair derivations 
de nitions theorem correctness fair unfailing completion procedure system ordering contains extended reduction ordering inputs generate derivation ground church rosser respect 
proof 
derivation produced complete reduction ordering contains prove induction proof ei ri ground rewrite proof respect soundness implies ground church rosser 
proof ei ri 
assertion holds trivially persisting ground rewrite proof 
uses non persisting equation rule lemma conclude proof ej rj persisting proof containing peak critical pair lemma peak replaced rewrite proof 
written extended pair ep 
rst case proof second case fairness fact ep subset ep proof ej rj lemma proof ej rj summary persisting ground rewrite proof proof ej rj induction hypothesis ground rewrite proof theorem applies reduction orderings commonly practice 
ordering polynomial interpretations lankford instance extended complete ordering combining founded ordering distinguish ground terms having interpretations 
furthermore partial ordering set operator symbols precedence ordering extended complete ordering way lexicographic path ordering see survey dershowitz 
precedence ordering total corresponding lexicographic path ordering total ground terms 
theorem applies large class completion procedures just single version 
require procedure compute extended critical pairs necessary satisfy fairness 
correctness depend strategy simplify equations compose collapse rules 
incorporate inference rules unfailing completion generalization subsumption fs fs tg correctness completion procedures inference rule easily established proof ordering framework 
re nements standard completion critical pair criteria bachmair dershowitz carried unfailing completion 
construction canonical rewrite systems standard completion fails equational theory represented complete system 
complete system exist 
example suppose consists equations fb fa rpo recursive path ordering dershowitz corresponding precedence standard completion derivation fb fb dg fa 
bg fb dg fa 

bg fd dg fa 

dg fa 


fd 
dg results canonical system derivation fc fc dg fa 
cg fc cg ffb 
fc dg fc bg fa 
fb fc 
dg fails dershowitz marcus tarlecki 
words success failure standard completion may depend order inference rules applied 
kind failure illustrated strategy systematically enumerates possible derivations backtracking 
cases standard completion bound fail backtracking 
example suppose recursive path ordering corresponding precedence standard completion fails equations unfailing completion obtain complete system rules 


reduction orderings unfailing completion obviates need backtracking 
rewrite system called reduced rewrite rule rin term irreducible irreducible rg 
reduced system proper subterms left hand side irreducible terms proper instance 
note rewrite system complete reduction ordering containing term irreducible minimal congruence class respect reduced complete systems called canonical 
complete system said equivalent de ne equational theory set normal forms nf nf 
complete system transformed equivalent reduced system equivalent canonical systems identical renaming variables 
systems constructed completion need canonical nal system may contain redundant rules 
call completion procedure simplifying inputs system reduced contained incomparable respect irreducible implementations standard completion huet simplifying 
theorem completeness system reduction ordering containing andc fair simplifying unfailing completion procedure 
contained reduction ordering generate derivation inputs identical renaming variables 
proof 
letf set function symbols equational theory set variables 
assume thatf contains constant 
byt denote set terms built symbols inf andv set ground terms 
suppose canonical system complete reduction ordering de ned sett contains weintroduce new constant 
plus skolem constants variables occurring denote set constants result replacing variables corresponding skolem constants 
evidently irreducible 
denote mapping tot df result replacing skolem constant ordering sett de ning df df df lpo smallest constant respect inf total founded ordering onf symbols inf bigger symbols minimal lpo corresponding lexicographic path ordering see kamin levy 
note term minimal respect suppose derivation generated ifl ris rule valid theorem ground rewrite proof respect proof minimal respect proof form tn tk minimal congruence class proper subterms proper subterms minimal respective equivalence classes 
rst proof step application equation top 
words substitution instance proper instance irreducible imply contradict identical renaming variables loss generality contains equation substitution replaces variable corresponding skolem constant proof assumed minimal replaces variable occurring minimal constant 
consequently contain proof steps 
rst proof step applies top rst steps proper overlap 
variable overlap impossible irreducible variable hand proper overlap critical overlap equation substitution variables loss generality change variable renames variables occur away occur consequently variables appear contains avariable appearing contains variable appearing addition implies extended critical pair ep ep 
fairness assumption lemma may conclude simpli ed minimal 
words assumption leads contradiction 
may conclude contains rule left hand side means term reducible respect reducible respect simplifying may infer equivalent terms identical normal forms identical renaming variables right hand side rule irreducible 
emphasize hypothetical complete ordering reduction ordering completion procedure complete 
reduction orderings induced canonical reduced rewrite systems extended complete reduction orderings 
example rewrite system consisting rules 
canonical 
complete reduction ordering contain ori 
monotonicity second rule infer monotonicity 
similar contradiction derived assumption 
characterize class rewrite systems ordering extended complete reduction ordering 
reduction sequence length sequence tn 
nite terminating lemma nitely reduction sequences term reduction sequence called innermost reduction step ti ti applies position pi proper subterm ti pi irreducible length shortest innermost reduction sequence normal form de ne ordering complete reduction ordering 
note need contain 
lemma nite canonical system ordering monotonic respect term structure proof 
reduced rule rin contains unique normal form innermost reduction sequence rearranged reduced rewrite steps applied 
words shortest innermost sequence form 

corresponding innermost sequence 

shorter 
ordering need monotonic respect instantiation 
example 
bg 
restriction ground terms monotonic course 
say term overlaps term uni ed non variable subterm proposition canonical system right hand side corresponding left hand side left hand side overlaps right hand side 
complete reduction ordering 
proof 
transitive closure union reduction ordering restriction ground terms 
ordering monotonic founded 
establish foundedness prove ground instance 
rule denote substitution maps variable normal form variable appears right hand side rule corresponding left hand side shortest innermost reduction sequence longer shortest innermost sequence left hand side overlaps hand side term irreducible reducible 
implies proposition implies ground canonical rewrite system contained complete reduction ordering result proved dershowitz marcus 
result applies arbitrary canonical systems 
proposition system ordering contained 
fair unfailing completion procedure generate derivation inputs contained ine proof 
similar lines proof theorem 
union restriction ground terms 
loss generality de ned terms containing skolem constants 
complete reduction ordering irreducible minimal respect 
rule skolemized equation valid ground rewrite proof respect 
proof minimal respect irreducible form tn proper subterms irreducible rst proof step application equation top 
substitution implies instance suppose 
irreducible impossible 
minimal distinct 
implies reducible reducible reduced renaming variables 
may assume identical 
contain proof steps simpli ed contradicts assumption minimal 
implies 
identical 
words contains variant equation hand reducible contain proof steps rst overlap 
variable overlap simpli ed proper overlap 
critical pair lemma critical overlap fact de nes extended critical pair assumption imply force identical contradict 
lemma simpli ed 
leads contradiction concludes proof 
theorem proving completion procedures primarily constructing canonical rewrite systems 
huet suggested standard completion theorem proving equational theories 
possibility failure particularly validity problem equational theories semi decidable 
unfailing completion hand complete equational theories 
introduce new constants true false denoting truth falsehood respectively new binary operator eq denoting equality able unfailing completion theorem proving procedure 
theorem refutation completeness fair unfailing completion procedure set equations ordering extended reduction ordering ifs valid generate derivation inputs feq true eq falseg set ei ri contains statement true false 
proof 
described 
note equation valid true false valid 
letf set function symbols set variables set skolem constants occurring complete reduction ordering sett 
loss generality vide theorem de ned sett 
extend complete reduction ordering de ning terms int eq true false ii eq eq tg vg extension multisets 
true false valid theorem ground rewrite proof respect true false ei ri term smaller true false proof form true ei ri false implies equation true false contained ei ri 
consider example entropic groupoid de ned axioms xy zw xz yw xy rst equation reduction ordering 
standard completion fail problem 
unfailing completion obtain system hsiang rusinowitch xy xw xy yz xz xy xw ground church rosser respect complete reduction ordering satisfying subterm property terms system provides decision procedure word problem theory 
pedersen system similar completeness property 
theorem unfailing completion guaranteed nd proof valid equation provided reduction ordering extended complete ordering case general purpose orderings 
ciency completion process crucially depends ordering employed main strengths completion derive simpli cation restriction equational consequences extended critical pairs 
short systematic rewriting may considerably reduce search space proof procedure destroying refutation completeness 
unfailing completion empty ordering case degenerates ordinary paramodulation robinson wos 
idea extending completion computing equational consequences equations traced back brown lankford integrating resolution simpli cation rewriting 
peterson proved refutation completeness inference system combining resolution paramodulation simpli cation respect orderings isomorphic ground terms 
fribourg proved completeness restricted version paramodulation locking resolution 
refutation completeness speci version unfailing completion proved independently hsiang rusinowitch 
implementations completion failure reported sakai 
horn clauses equality paul studied application standard completion sets horn clauses equality 
adapt techniques unfailing completion 
addition terms built function symbols inf variables shall consider section atoms expressions tn tn terms element setp predicate symbols 
constants true false considered atoms 
assume thatp contains symbol eq denotes equality 
literal atom positive literal negation atom negative literal 
horn clause disjunction literals positive literal 
unit clause clause containing literal 
literal positive unit clause 
clause represented rewrite rule ln 
true ln abbreviation ln 
deal equality predicate eq extending unfailing completion inference rule feq trueg fs tg words convert positive unit literal eq equation reasoning rewrite representation horn clauses need rules boolean algebra denoted collectively ba true false false true true true true 
true false false results instrumental proving unfailing completion complete horn clauses equality correctness unfailing completion refutation completeness hyper resolution horn clauses equality 
clause furthermore bn positive unit clauses general substitution ai bi identical called hyper resolvent bn constant false resolvent bn 
set horn clauses set ground instances positive unit clauses de ned recursively union set ground instances hyper resolvents clause unit clauses 
denote set ihi 
set clauses called equality unsatis able set eq unsatis able eq consists equality axioms formulated horn clauses eq eq eq eq eq eq eq eq xn xn eq xn xn ranging function symbols predicate symbols 
proposition follows completeness hyper resolution robinson 
proposition set horn clauses 
unsatis able contains propositional constant false ii equality unsatis able eq contains false 
equality axioms re exivity law needed unfailing completion 
re ne notion fairness 
applying unfailing completion horn clauses mayuse reduction ordering terms extended complete reduction ordering 
slightly generalize ordering asserting false false true terms atoms unfailing completion procedure fair horn clauses ep subset ek contains equations terms contains eq 
true rule form eq true 
proposition set horn clauses rewrite system 
ordering terms described 
ground canonical system generated fair unfailing completion procedure inputs ba feq 
trueg true atoms inh eq ii atoms eq inh eq 
proof 
ground canonical system constructed unfailing completion procedure inputs ba feq 
trueg note property ii consequence fairness 
prove induction property holds atoms eq 
inh eq instance positive unit clause form eq 
rst case may infer soundness completion true 
true second case fairness implies eq 
true rule suppose properties ii true atoms eq eq 
may assume ground instance resolvent clause eq atoms eq 
suppose clause bn ground atoms eq substitution bi identical ai substitution thata soundness completion true 
induction hypothesis bi true bi ai identical true true summary true 
constant false 
false true required 
symmetry axiom eq eq andb eq 
simply eq 
induction hypothesis true implies eq eq eq 
hand infer eq eq eq eq 
disjunction simpli ed true eq 
true rules ba 
summarizing obtain eq true 
assume substitutivity axiom eq eq eq 
ground instance eq induction hypothesis show wemay conclude eq eq disjunction simpli ed true implies true 
remaining cases proved similarly 
proposition shows ground atom deducible eq hyper resolution reduced normal form true respect immediately yields theorem unfailing completion complete theories horn clauses equality 
proof 
equality unsatis able set horn clauses representation rewrite system 
system constructed approximated fair unfailing completion procedure inputs ba feq trueg reduction ordering described 
proposition false contained inh eq 
proposition false true 
ground canonical respect rewrite proof false true 
possible contradictory equation false true generated completion procedure 
take closer look extended critical pairs tobe computed unfailing completion case horn clauses 
rules true true representing horn clauses obtain non trivial critical pair clauses positive unit clause 
precisely uni es ai superposition true 
true results critical pair true true simpli ed oriented rule ai ai 
true 
superposition plus simpli cation case corresponds positive unit resolution 
rewrite rules eq true persist fairness need considered critical pair computations 
remaining critical overlaps involving equation rule cases superposition corresponds restricted version paramodulation called oriented paramodulation 
rephrase theorem follows corollary positive unit resolution plus oriented paramodulation complete horn clauses equality unrestricted simpli cation rewriting permitted 
result improves completeness theorem wos respects functional re exivity axioms needed factoring needed paramodulation variables needed oriented paramodulation generates fewer ordinary paramodulation unrestricted simpli cation permitted 
re ne unfailing completion method including instance initial system rewrite rules form xn 
true xn 
true allow elimination tautologies 
factoring accomplished including rules form xn 
true inclusion rules ect completeness result 
unfailing completion applied proofs consistency inductive theorems similar way described paul 
word problem horn clause theories see kounalis rusinowitch 
bachmair 
proof methods equational theories 
ph diss university illinois urbana champaign 
bachmair dershowitz 
critical pair criteria completion 
symbolic computation 
appear 
bachmair dershowitz hsiang 
orderings equational proofs 
proc 
symp 
logic computer science 
boston massachusetts 
brown 
structured design method specialized proof procedures 
ph diss california institute technology pasadena 
dershowitz 
orderings term rewriting systems 
theor 
comput 
sci 

dershowitz 
termination rewriting 
symbolic computation 
dershowitz manna 
proving termination multiset orderings 
commun 
acm 
dershowitz marcus 
existence construction rewrite systems 
unpublished manuscript 
dershowitz marcus tarlecki 
existence uniqueness construction rewrite systems 
siam comput 
appear 
fribourg 
superposition oriented theorem prover 
theor 
comput 
sci 

wos 
unit refutations horn clauses 
acm 
hsiang rusinowitch 
word problems equational theories 
proc 
th icalp ed 
ottmann 
lect 
notes comput 
sci vol 

berlin springer verlag 
huet 
complete proof correctness knuth bendix completion algorithm 
comput 
syst 
sci 


catalogue canonical term rewriting systems 
tech 
rep csl sri international menlo park california 
kamin levy 
generalizations recursive path ordering 
univ illinois urbana champaign 
unpublished manuscript 
knuth bendix 
simple word problems universal algebras 
computational problems algebra ed 
leech 
oxford pergamon press 
kounalis rusinowitch 
word problems horn logic 
proc 
int 
workshop conditional term rewriting 
orsay france 
appear 
lankford 
canonical inference 
tech 
rep atp dept mathematics computer science university austin 
lankford 
proving term rewriting systems noetherian 
tech 
rep mtp mathematics department louisiana tech 
univ 
le 
canonical forms nitely algebras 
research notes theoretical computer science 
new york wiley 

rewriting systems produced knuth bendix completion algorithm 
inf 
process 
lett 


de de automatique de 
ph diss universite 
sakai 
metis term rewriting system generator 
tech 
rep icot research center tokyo japan 
paul 
solving equality problem theories de ned horn clauses 
theor 
comput 
sci 

pedersen 
con uence methods word problem universal algebra 
ph diss emory university 
peterson 
technique establishing completeness results theorem proving equality 
siam comput 

robinson wos 
paramodulation theorem proving rst order theories equality 
machine intelligence ed 
meltzer michie 
new york american elsevier 
robinson 
automatic deduction hyper resolution 
int 
comp 
math 

wos robinson carson 
concept demodulation theorem proving 
acm 

