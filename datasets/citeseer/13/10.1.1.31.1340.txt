painterly rendering curved brush strokes multiple sizes new method creating image appearance photograph new approach designing styles illustration 
paint image series spline brush strokes 
brush strokes chosen match colors source image 
painting built series layers starting rough sketch drawn large brush 
sketch painted progressively smaller brushes areas sketch differs blurred source image 
visual emphasis painting corresponds roughly spatial energy source image 
demonstrate technique painting long curved brush strokes aligned normals image gradients 
explore expressive quality complex brush strokes 
process images single manner painting framework describing wide range visual styles 
style described intuitive set parameters painting algorithm designer adjust vary style painting 
show examples images rendered different styles discuss long term goals expressive rendering styles general purpose design tool artists animators 
cr categories subject descriptors computer graphics picture image generation display algorithms additional keywords non photorealistic rendering 
art illustration historically sole domain artists skilled creative individuals willing devote considerable time resources creation images 
computer technology allows quick easy creation highly realistic images natural imaginary scenes 
technology automates tedious details photorealistic rendering process driven human user selects scene rendering parameters 
technology producing non photorealistic works paintings drawings advanced user paint entire image interactively paint program process image model set non photorealistic filters 
ideally human user email mrl nyu edu url www mrl nyu edu aaron hertzmann media research laboratory department computer science new york university able choose wide range visual styles leaving mechanical details image creation computer 
possible envision animating movie oil painting style feat prohibitively labor intensive traditional media 
non photorealistic rendering inexpensively create attractive concise images graphic design illustration 
current computer painterly rendering algorithms simple brush strokes equal size shape 
resulting images tend appear mechanical comparison hand 
techniques painting image multiple brush sizes painting long curved brush strokes 
find resulting images visually pleasing natural produced previous algorithms 
artists long exploited richness natural media variety unique styles 
naturally computer algorithms capable similar variety 
attempt creativity algorithms prefer cooperative relationship 
user selects composition rendering style computer produces image choices 
show create rendering styles suitable human designer 
related principal challenges face production satisfying non photorealistic images 
physical simulation attempts closely mimic physical appearance real world artistic media 
impressive systems demonstrated variety media user places brush strokes interactively 
wet media oil paint challenging media simulate complex rich set effects produced fluid flow transparency 
concerned convincing physical simulation haeberli shown striking compositions produced simple painting models 
related area research multiresolution painting set techniques interactive painting scales 
extends complementary line research automatic painting drawing human intervention 
cohen casts problem terms artificial intelligence system named aaron follows set randomized rules create original compositions specific style 
aaron robotic painting device 
cohen assume composition provided system form input image painted 
focus creating painterly style need deal problem creativity designing composition 
salesin describe system automatically creating pen ink illustrations models salisbury describe technique producing pen ink illustrations images 
curtis produce paintings semi automatic algorithm 
algorithm necessarily produce visible brush strokes lacks painterly quality 
common method processing image painterly effect place jittered grid short brush strokes image 
brush strokes may aligned normals image gradients size shape 
uses clipped strokes chen statistical analysis source image guide stroke size orientation placement 
vary brush stroke size respect local detail levels 
appear paint image single pass lack ability refine painting multiple passes 
allow rendering parameters encapsulated saved styles overview section method painting different brush sizes express various levels detail image technique painting long curved brush strokes express continuous color regions image 
section show rendering process provide painting styles 
discuss directions non photorealistic rendering 

painting techniques varying brush size artist painting rough sketch go back painting smaller brush add detail 
motivation technique apply computer algorithms yields desirable visual effects 
note different character painting depict sand children boat sky 
painted different brush sizes different stroke styles 
variation stroke quality helps draw attention woman figures little ground words artist fine strokes draw attention fine detail 
compositional devices shape contrast color 
addressed 
strokes size region flatten painting artist chosen emphasize background 
image processing algorithm fine brush strokes necessary refine painting leave rest painting 
algorithm similar pyramid algorithm start coarse approximation source image add progressive refinements smaller smaller brushes 
painting algorithm takes input source image list brush sizes 
brush sizes expressed radii 
algorithm proceeds painting series layers radius largest smallest 
initial canvas constant color image 
motivation establish composition committing fine details artist may experiment adjust composition 
fact original painting algorithm laplacian pyramid difference images guided brush stroke placement 
difference images assume perfect reconstruction lower levels pyramid reconstruction deliberately imperfect 
refinements levels pyramid caused unwanted artifacts 
algorithm avoids problem creating difference images step painting 
detail young woman having hair edgar 
note small brush strokes regions fine detail children background draw attention regions 
layer create image blurring source image 
blurring performed convolution gaussian kernel standard deviation constant factor 
image represents image want approximate painting current brush size 
idea brush capture details large brush size 
layer subroutine paint layer brush image 
procedure locates areas image differ image covers new brush strokes 
areas match source image color threshold left unchanged 
threshold parameter increased produce paintings decreased produce paintings closely match source image 
entire procedure repeated brush stroke size 
pseudocode summary painting algorithm follows 
function paint 
canvas new constant color image paint canvas brush radius largest smallest apply gaussian blur ri paint layer canvas return canvas non linear diffusion may gaussian blur produce slightly better results near edges 

layer painted simple loop image canvas 
approach adapted algorithm described placed strokes jittered grid 
approach may sharp details lines points pass grid points 
search grid point neighborhood find nearby point greatest error paint location 
strokes layer planned rendering 
strokes rendered random order prevent undesirable appearance regularity brush strokes 
procedure canvas new set strokes initially empty create pointwise difference image difference canvas grid stepsize grid stepsize grid sum error near region grid grid grid grid di grid find largest error point arg max di add paint strokes canvas random order formula color difference create difference image order cover canvas paint canvas initially painted special color difference color maxint 
practice avoid overhead storing randomizing large list brush strokes buffer 
stroke rendered random value soon created 
buffer cleared layer 
code listing generic procedure places stroke canvas image brush radius 
constant grid size factor 
shows image illustrated procedure simply places circle radius color source image location 
shows image illustrated short brush strokes aligned normals image gradients 
note regular stroke appearance 
section algorithm placing long curved brush strokes closer find typical painting 
technique focuses attention areas image containing detail high frequency information experimented perceptually correct metrics distance cie luv space 
surprisingly gave worse results 
note stroke clipping 
small scale refinements layers automatically fix edges earlier layers 
placing small brush strokes regions 
areas little detail painted large brush strokes 
strokes appropriate level detail source image 
choice emphasis assumes detail areas contain important visual information 
choices emphasis possible example emphasizing foreground elements human figures require semantic interpretation input images known extremely difficult problem computer vision 
choice emphasis provided human user output renderer 
creating curved brush strokes individual brush strokes painting convey shape texture overlap variety image features 
quite beautiful long curved brush stroke succinctly expresses gesture curve object play light surface 
knowledge previous automatic painting systems series small brush strokes identical aside color orientation apply simultaneously large regions image 
contrast method painting long continuous curves 
particular focus painting solid strokes constant thickness approximate coloration image exploiting full expressivity brush strokes far scope 
model brush strokes anti aliased cubic splines color thickness 
stroke rendered dragging circular brush mask sweep spline 
system limit brush strokes constant color image gradients guide stroke placement 
authors concept placing strokes 
idea strokes represent contours image roughly constant color 
method place control points curve normal gradient 
color stroke deviates color control point curve specified threshold stroke ends control point 
think placing splines roughly match image 
detailed explanation algorithm follows 
spline placement algorithm begins point image brush radius stroke represented list control points color brush radius 
control point added spline color image color spline 
need compute point curve 
gradient point computed luminance image 
point placed direction distance 
brush radius distance control points represents level detail capture brush size 
means large brushes create broad sketches image refined smaller brushes 
luminance pixel computed 
painting brushes 
source image 
layer painting painting circular brush radius 
image painting brush radius 
final image painting brush size 
note brush strokes earlier layers visible painting 
applying multiscale algorithm types brush strokes 
paintings created brush strokes radius 
brush strokes circles 
brush strokes short lines placed normal image gradients 
line length times brush radius 
remaining control points computed repeating process moving image normal image gradients placing control points 
stroke terminated predetermined maximum stroke length reached color stroke differs color control point differs current painting point 
maximum stroke length prevents infinite loop occurring 
point compute gradient direction point 
note normal directions candidates direction 
choose direction minimize stroke curvature pick direction angle equal 

exaggerate reduce brush stroke curvature applying infinite impulse response filter stroke directions 
filter controlled single predetermined filter constant previous stroke direction dx dy current stroke direction dx dy filtered stroke direction dx dx dy dy 
pseudocode summary entire stroke placement procedure follows 
function color new stroke radius color add point color canvas color color return detect vanishing gradient return get unit vector gradient gx gy compute normal direction dx dy gy gx necessary reverse direction dx dy dx dy dx dy filter stroke direction dx dy dx dy dx dy dx dy dx dy dx dy dx dy add point return minimum stroke length prevents appearance short strokes 
render curved stroke spline computed subdivision 
anti aliased circular mask drawn path curve 
shown draw long curved brush stroke represent continuous color regions image 
method works best combination layering method section see example curved brush strokes layering 
enhance painting brush stroke 
brush stroke begins control point continues direction normal gradient 
second point normal directions choose 
choose order reduce stroke curvature 
procedure repeated draw rest stroke 
stroke rendered cubic spline control points 
distance control points equal brush radius 
technique depict features contours texture richer stroke model including pressure tapering 

rendering styles right algorithm non photorealistic rendering just right approach painting 
believe graphic designer artist rendering system allowed vary computer artistic approach forced employ single style painting picture 
order quantify notion painterly styles propose style parameters control rendering process 
parameters provide intuitive way vary visual qualities painting 
possible style parameters include stroke curvature closely painting approximate original 
useful designer style parameters exhibit possible properties intuitiveness style parameter correspond visual quality painting 
qualities intuitive artist technical computer knowledge 
consistency styles produce visual character different images 
example able choose style single frame video sequence render rest sequence style 
robustness parameter produce reasonable results predetermined range breaking values 
default value available extra parameters provide user options adding extra burden 
increasing parameter monotonically increase decrease quality painting cause fluctuate 
independence style parameters independent 
changing line thicknesses example affect saturation image 
group style parameters describes space styles set specific values encapsulated style 
styles may designed imitate styles famous artists may represent approaches painting 
styles collected libraries designers 
may conceivably hundreds rendering parameters designer need adjust parameters appropriate application 
commercial painterly rendering products provide ability vary rendering parameters save sets parameters distinct styles 
style parameters experiments follow style parameters 
approximation threshold closely painting approximate source image 
higher values threshold produce paintings 
see section brush sizes requiring user provide list brush sizes 
useful parameters specify brush sizes smallest brush radius number brushes size ratio 
limited range brush sizes works best 
see section curvature filter limit exaggerate stroke curvature 
see section blur factor controls size blurring kernel 
small blur factor allows noise image produces image 
see section minimum maximum stroke lengths restrict possible stroke lengths 
short strokes image long strokes image 
see section opacity specifies paint opacity 
lower opacity produces wash effect 
grid size controls spacing brush strokes 
grid size times brush radius produces step size procedure 
see section color jitter factors randomly add jitter hue saturation value red green blue color components 
means random jitter larger values increase factor 
threshold defined units distance color space 
brush sizes defined units distance specify sizes pixel units resolution independent measures inches millimeters equally 
brush length measured number control points 
remaining parameters dimensionless 
experiments section demonstrate painting styles wash shows application styles different images 
distinct character style demonstrates consistency painting algorithm 
figures rendered style 
shows continuous transition style wash style 
interpolating style parameter values interpolate visual character rendering styles 
demonstrates robustness parameters 
styles defined follows 
normal painting style curvature filter random color 
elongated brush strokes 
jitter added color value 
wash loose semi transparent brush strokes 
random jitter added color components 
densely placed circles random hue saturation 

similar style provided 

discussion new algorithm producing paintings images 
brush stroke sizes selected convey level detail source image multiscale algorithm 
long curved brush strokes created moving direction normal image gradients 
painting may precise changing threshold parameter 
stroke curvature may limited exaggerated filtering stroke direction 
parameters describe space rendering styles created modified artists graphic designers 
painting complex rich pursuit involving approaches ways interpret scene 
goal developing painting algorithms similar goal pursued artists develop expressive visual languages 
area extend strategies available nonphotorealistic rendering algorithms image model 
able draw inspiration various artistic approaches computer vision cognitive science artificial intelligence 
brush strokes may convey physical properties color texture lighting shape gesture overlap semantic elements emphasis mood emotion 
long term goal develop approach painting convey important features image carefully chosen brush strokes 
relaxation approach may useful computer painting 
relaxation algorithms usually compute intensive direct algorithms allow visual constraints embedded single energy function may difficult achieve direct method 
interesting line real time processing video models different styles 
new techniques required maintain temporal coherence complex brush strokes various size shape attributes maintaining changing rendering styles 
envision real time interactive system rendering style varies mood action 
paintings 
ken perlin useful discussions support course 
rich jon meyer henning biermann discussions 
source images figures provided jon meyer 
source image kind permission cnd author supported nsf 

adobe systems 
adobe photoshop deborah berman bartell david salesin 
multiresolution painting compositing 
siggraph conference proceedings pp 

july 
peter edward adelson 
laplacian pyramid compact image code 
ieee transactions communications 
april 
harold cohen 
exploits aaron painter 
stanford humanities review 
vol 

pp 

sean anderson kurt fleischer david salesin 
computer generated 
siggraph conference proceedings pp 

august 
james foley andries van dam stephen feiner hughes 
computer graphics principles practice addison wesley 
fractal design 
fractal design painter 
paul haeberli 
paint numbers image representations 
computer graphics siggraph conference proceedings august paul haeberli 

www sgi com impression john simon 
expressive rendering review nonphotorealistic techniques 
ieee computer graphics applications may 
peter 
processing images video effect 
siggraph conference proceedings pp 

august 
lee markosian michael kowalski samuel daniel goldstein hughes 
real time nonphotorealistic rendering 
siggraph conference proceedings pp 

august 
pamela 
aaron code meta art artificial intelligence harold cohen 
new york freeman pages 

microsoft 
microsoft image composer ken perlin luiz 
painting procedural multiscale textures siggraph conference proceedings pp 


michael salisbury michael wong hughes david salesin 
orientable textures image pen ink illustration 
siggraph conference proceedings pp 

august 
chen 
statistical techniques automated synthesis non photorealistic images 
proc 
th eurographics uk conference march 
greg turk david banks 
image guided streamline placement 
siggraph conference proceedings pp 

august 
joachim weickert bart ter haar max viergever 
efficient reliable schemes nonlinear diffusion filtering 
ieee transactions image processing 
march 
georges david salesin 
computer generated pen ink illustration 
siggraph conference proceedings pp 

july 
georges david salesin 
rendering parametric surfaces pen ink 
siggraph conference proceedings pp 

august 
tools 
paint applying different painterly styles 
left column middle column right column wash note styles consistent visual appearance applied different images 
interpolating rendering styles 
images rendered wash styles respectively 
average parameters produce style 
number layers rounded 
