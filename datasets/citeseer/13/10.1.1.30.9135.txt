fast key exchange elliptic curve systems richard sean malley tr diffie hellman key exchange algorithm implemented group points elliptic curve field software version optimized achieve computation rates significantly faster non elliptic curve versions similar level security 
fast computation reciprocals key highly efficient implementation described 
march department computer science university arizona tucson az diffie hellman key exchange algorithm useful method initiating conversation previously parties 
relies exponentiation large group software implementation group operation usually computationally intensive 
algorithm proposed internet standard benefit efficient implementation widely deployed variety platforms greatly enhancing security internet solving problem key exchange millions host machines 
diffie hellman algorithm implemented years ago part sun system sun microsystems implementation numbers size determined method described 
indicated bit modulus cracked months effort including software development system designers bit modulus 
informal conversations people associated developing sun system indicated wish increase size numbers part amount time needed computation 
extra time results number large number arithmetic operations carried 
implementations cryptographic protocols developed simple version diffie hellman protocol termed transient mode parties select random exponent exchange values group element 
party selects party selects party compute ab eavesdropper 
implementation ring bit prime size resist attacks hardware resources known today 
protocol took seconds variety modern popular hardware platforms 
speed machines need participate keyed conversations large set peers 
estimate busy machine devote cycles key exchange limits fast machine mhz fewer key exchanges hour 
motivated research faster software implementations basic operations protocol 
elliptic curve systems suggested victor miller independently neal koblitz natural choice insofar known today immune index calculus attack 
means smaller numbers achieve degree security diffie hellman algorithm bit version described 
interesting note numbers implementation smaller sun rpc version 
addition basic savings computation cost software optimization techniques result significantly faster algorithm 
additional advantage computers get faster size numbers needed achieve particular level security grows slowly elliptic curve systems compared methods ordinary integers 
elliptic curve method uses different group operation multiplication integers mod operation group points elliptic curve operation complicated 
size group implementation approximately group operation implemented numbers galois field initial implementation twice fast implementation integers modulo bit prime obvious room improvement 
dh key exchange algorithm properly chosen elliptic curve offers somewhat security working modulo bit prime 
improvements described efficiently compute field operations especially reciprocals minor improvement formula doubling elliptic curve point 
suggest select curve constants easily manipulated software 
important contributor success algorithm fast reciprocal routine 
overview method include brief descriptions field elliptic curve manipulations material draft document 
see silverman general elliptic curves menezes provides cookbook approach cryptographic methods 

purposes elliptic curve set points coordinates lying field satisfying equation xy ax constants field elements specify 
particular choice points form commutative group addition rule addition involves field operations including computing reciprocal formulas section 
elliptic curve analogue diffie hellman key exchange method uses elliptic curve defined field point generates addition group system wide public parameters 
user wants start conversation chooses secret integer multiplier ka range order gamma computes kap iterating addition double add scheme 
user sends coordinates point kap user user selects secret multiplier kb computes sends user point user compute point bits selected coordinates secret session key conversation 
insofar known effective method recovering eavesdropping conversation solving discrete logarithm problem 
discrete logarithm problem hard elliptic curves index calculus attack effective modulo 
elliptic curve operations require addition multiplication squaring inversion underlying field 
number applications operation depends exact details implementation implementations inversion operation far expensive factor multiplication 
working elliptic curve adding doubling points elliptic curve operations relevant complexity multiplying group element constant add double operations 
include negation operation offers speed increase 
operations slightly modified presentation 
elliptic curve set solutions equation xy ax constants field nonzero 
elements solution called point curve 
extra point needed represent group identity 
represent 
solution equation 
add double routines special check see input double routine just optimized special case add routine add formula fails input points equal coordinates formula calls division 
check case coordinates equal input points equal double routine called 
coordinates differ points inverses elliptic curve group returned 
rule adding points points 
point return point sum 
doubling rule 
return sum 
ii rule doubling point point 
gives formula formula equivalent saves multiplication constant 
iii rule negating point point 
gamma 
formulas determine number field operations required kind elliptic curve operation 
see addition step usually requires additions multiplications squaring reductions mod inversion 
doubling step usually requires additions multiplications reductions mod inversion 
negation step requires addition 
important contributors run time multiplications inversions 
choosing curve constant elliptic curve chosen simplify operations doubling point adding points 
eliminates addition formula coordinate operations 
size group depends choice complicated algorithm due improvements atkin morain determining group order 
order close number field elements 
maximum security order large prime factor possible 
equation best possible order prime near 
select order form near giving small amount extra security 
lay zimmer give method creating curve order reluctant scheme produces curves closely related rational curves extra structural property called complex multiplication 
feel extra structure insecure 
recommend trying small bs computing curve order checking order form 
curves tries may necessary 
scheme selecting bs try small values compute equation xy best known methods computing elliptic curve discrete logarithms take time proportional square root largest prime factor group order 
case largest prime factor finding discrete logarithms take operations 
choosing multiplier number additions necessary computing np point curve integer important factor speed dh algorithm 
implemented straightforward double add approach binary expansion random bit multiplier computing np require doubling steps average addition steps 
number addition steps depends number bits binary representation 
number doubling steps roughly fixed possible reduce considerably number addition steps needed 
problem studied large literature addition chains 
mention points ffl menezes discusses idea low hamming weight multiplier 
content select multipliers allowing multipliers select multiplier hamming weight 
ffl operation negate point cheap addition subtraction chains simply addition chains 
extra flexibility permits shorter chains 
ffl multiplier connections pays invest effort finding chain 
speedup available addition subtraction chain random multiplier novel point 
ffl free select random multiplier approach select random addition subtraction chain 
allows selection freedom chain step need fewer addition subtraction steps generate roughly possible multipliers 
care taken selection algorithm avoid having multipliers overly 
happen steps addition subtraction chains commute 
ffl know starting point ahead time prepare tables give considerable speedup 
situation point multiplications diffie hellman key exchange 
field operations representation field elements represent field elements bitstrings length 
bit processor words brevity representation means computation done hardware registers 
ring extension field trinomial 
extension field polynomial irreducible field elements members modulo field polynomial coefficients drawn set 
polynomial reduced remainder degree 
irreducible trinomial structure pleasant choice representing field 
irreducible polynomials degree 
fact middle term exponent roughly half field degree important optimizations calculating modular reductions described section division large powers explained section 
addition multiplication field elements prime power field added multiplied follows ffl field addition gamma delta delta delta gamma delta delta delta gamma delta delta delta field field addition performed componentwise 
ffl field multiplication gamma delta delta delta delta gamma delta delta delta gamma delta delta delta polynomial gamma gamma delta delta delta remainder polynomial gamma gamma delta delta delta delta gamma gamma delta delta delta divided addition algorithm field elements trivial blocks bits simply combined bitwise xor operation 
field characteristic subtraction addition negation identity operation 
multiplication field elements uses shift add algorithm multiplication integers add replaced xor 
virtue operation longer generate carries simplifying implementation 
experimented different ways organizing multiplication routines different architectures different optimal routines 
timings done optimal routines architecture 
explored karatsuba method see knuth multiplication 
turned slightly worse particular cases 
programming tricks speed multiplication ffl subroutine multiplies words word keeping multiplier intermediate product registers 
ffl subroutine contains loop sequences bits multiplier 
unrolling loop saves time 
ffl field element size exact multiple number bits computer word partially word representing high order bits field element 
field elements bit fragment bit machines 
bit machines special subroutine multiplying fragment worthwhile fragment shorter word 
squaring operation squaring polynomial modulo field linear operation 
formula squaring binomial ab cross term vanishes modulo square reduces consequently square sum squaring individual terms 
example 
terms bitstrings square polynomial spread interleaving bit polynomial bit 
example represented square 
sadly computer manufacturers largely ignored need instruction carry operation done quickly table lookup convert byte bit square 
squared polynomial reduced modulo 
squaring faster regular multiplication ignored rough comparisons timings 
modular reduction field elements polynomials coefficients ring multiplication squaring result reduced modulo 
product polynomials degree produces polynomial degree 
product represented words bit architecture words bit architecture 
hand tailored reduction method specific takes advantage degree middle term minimize number operations required 
assume polynomial reduced reduction mod proceeds reducing term modulo trinomial subtracting result 
done efficiently shifts xors 
note gamma gamma mod leading terms reduced modulo replacing non zero term congruent term expression au au gamma au gamma mod 
think zeroing upper bits bits expression subtracting term adding representation original term right shifted multiplied gamma right shifted multiplied gamma gamma gamma gamma gamma mod gammak portion degrees yields length partial result 
reduction repeated degree 
practice computer word time lowering degree proceeding high order terms bits low 
results accumulated original expression bitstring representing operand shift xor operation 
benefit trinomial modulus word needs xored places accumulation operation 
having middle term relatively low degree beneficial accumulation operation high order word affect word reduction step reduces degree full word 
middle term shorten dividend bits time reduction operation multiple times 
better binomial modulus 
unfortunately fields characteristic polynomials number terms divisible reducible 
recommended 
needs field specific degree field trinomial required 
computing reciprocals rules doubling elliptic curve point adding elliptic curve points involve computing reciprocal see section 
multiplicative inversion elements field usually slow people gone great lengths avoid 
menezes beth schaefer discuss projective schemes multiplications elliptic curve step reciprocals 
report relatively fast algorithm field inversion allows direct simple formulas operating elliptic curve points 
field inversion time multiplication times substantial improvement 
field working problem solved non zero polynomial degree equal find unique polynomial degree equal mod problem simple relatively slow recursive solution exactly analogous related algorithm integers 
developed algorithm considerably faster 
borrows ideas berlekamp low gcd algorithm roland silver john stein described knuth 
inverse algorithm computes ab mod deg deg deg deg denotes polynomial degree executing algorithm need divide get true reciprocal pseudo code algorithm 
computer implementation relies representational items ffl multiplication polynomial left shift bit 
ffl division polynomial right shift bit 
ffl polynomial significant bit coefficient constant term 
odd 
irreducible somewhat sparse degrees irreducible trinomial 
menezes inversion scheme field element computes gamma mod 
done multiplications 
algorithm relatively prime odd deg 
inverse algorithm initialize integer polynomials loop 
return deg goto loop 
improved performance raw algorithm considerably programming tricks ffl operations polynomials inline loop unrolled code inversion routine 
crucial optimization resulting factor reduction running time 
ffl small arrays separate named variables hold individual words polynomials 
assign possible registers 
ffl bottom loop goto skip test 
non structured jump body loop saves time 
ffl exchanging copies code names exchanged 
exchange called jump copy 
ffl execution code lengths variables shrink grow 
detect variables lengths cross word boundary switch copy code knows exact number words required hold variables 
optimization code larger bit architecture bit architecture copies required 
fortunately code fits dec alpha chip cache 
additional optimization possible ffl shrink expand variables representing high order terms share machine register 
useful register poor machines 
dividing find true reciprocal need divide working modt 
typical value large 
strategy divide successively number bits computer finish final division smaller power operation dividing broken parts suitably chosen multiple added zero low order bits new degree large second new right shifted bits effectively dividing low order bits division exact right shift reduces degree 
suitably chosen multiple just times low order bits bit sparc notation section gamma gamma gamma mod operation sparc ipc alpha bit add bit multiply bit square modular reduction bits bits reciprocal including divide double elliptic curve point add elliptic curve points multiply point doubles adds msec msec elliptic curve dh key exchange time computed msec msec ordinary integer dh key exchange time msec msec lines times microseconds 
second term computed left shifting low order bits bits bits xored directly zeroing operation complication alpha bits time shift xors step possibly bits gamma additional shift xors step performed cent field clear 
logic modified smaller shift size final division power timings timings platforms 
sun sparc ipc mhz risc architecture bit word size 
dec alpha mhz risc architecture bit word size 
just right data registers sparc machine execute instructions second alpha 
alpha byte chip instruction cache assuring critical field operations loaded cache conflict crucial achieving results reported 
measurements architectures 
intel mhz dec mips mhz sparc times 
machines bit word size 
applications elliptic curve improvements helpful implementing dh key exchange el gamal style encryption attractive 
total effort signing checking signature elliptic curve methods rsa 
new reciprocal algorithm useful doing arithmetic finite fields 
inversion costly worthwhile formulas operations elliptic curves 
reciprocal algorithm slight modifications compute reciprocals ordinary integer modular arithmetic 
algorithm moduli form gamma gamma reasonably gamma gamma bit generic odd moduli peter montgomery trick useful dividing required power 
benefit may ordinary modular exponentiation rsa schemes reciprocal costs multiplications addition subtraction chains compute powers allow shorter chains investment computing reciprocal 
shown software implementation diffie hellman algorithm done efficiently elliptic curve systems integers modulo assuming equivalent discrete logarithm attack exists elliptic curve smaller number representations group elements software quadratically faster 
risc machines bit wide words show excellent performance 
implementation major speed advantage previous implementations derives efficient procedure computing reciprocals network protocols rely method establishing key pairs hosts times connections compared modulo implementations 
fact simplifies task designers need develop secondary key distribution methods reducing computational cost method assists preventing denial service attacks network hosts bogged repeated requests key exchanges 
key exchange remains expensive operation times expensive computing md way hash function example 
acknowledgments macsyma compute table factorizations alfred menezes providing 
beth mullin vanstone arithmetic operations gf journal cryptology 
mullin vanstone implementation elliptic curve cryptosystems ieee journal selected areas communications 
mullin vanstone implementation fast public key cryptosystem journal cryptology 
berlekamp algebraic coding theory mcgraw hill 
beth schaefer non supersingular elliptic curves public key cryptosystems advances cryptology eurocrypt lecture notes computer science springer verlag 
bos addition chain heuristics advances cryptology crypto lecture notes computer science springer verlag 
gordon mccurley wilson fast exponentiation precomputation extended advances cryptology eurocrypt lecture notes computer science springer verlag 
coppersmith odlyzko discrete logarithms gf algorithmica 
jean marc francois morain algorithmic number theory international symposium lecture notes computer science springer verlag 
diffie hellman new directions cryptography ieee transactions information theory nov pp elgamal public key cryptosystem signature scheme discrete logarithms ieee transactions information theory 
alfred menezes scott vanstone public key cryptosystems small key lengths advances cryptology eurocrypt lecture notes computer science springer verlag 
internet engineering task force working group security ipv drafts key management available ftp archives ds internic net internet drafts draft karn txt itoh tsujii fast algorithm computing multiplicative inverses gf normal bases japanese society electronic communications japan 
karatsuba doklady nauk sssr 
donald knuth algorithms art computer programming addison wesley neal koblitz elliptic curve cryptosystems mathematics computation 
neal koblitz constructing elliptic curve cryptosystems characteristic advances cryptology crypto proceedings lecture notes computer science springer verlag 
la odlyzko computation discrete logarithms prime fields designs codes cryptography 
lay zimmer constructing elliptic curves group order large finite fields algorithmic number theory international symposium lecture notes computer science springer verlag 
alfred menezes elliptic curve public key cryptosystems kluwer academic publishers 
alfred menezes qu scott vanstone standard rsa diffie hellman related public key cryptography working draft ieee standard oct 
victor miller elliptic curves cryptography advances cryptology crypto proceedings lecture notes computer science springer verlag 
peter montgomery modular multiplication trial division mathematics computation 
van oorschot wiener parallel collision search application hash functions discrete logarithms nd acm conference computer communications security fairfax virginia november 
pollard monte carlo methods index computation mod mathematics computation 
org andreas resource requirements application addition chains modulo exponentiation advances cryptology eurocrypt lecture notes computer science springer verlag 
elliptic curves finite fields computation square roots mod mathematics computation 
silverman arithmetic elliptic curves springer graduate texts mathematics 

