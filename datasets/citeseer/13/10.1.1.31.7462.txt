communication architectures algorithms media mixing multimedia conferences venkat rangan vin srinivas ramanathan multimedia laboratory department computer science engineering university california san diego la jolla ca mail vin cs ucsd edu phone fax advances computer communication technologies stimulated integration digital video audio computing leading development computer assisted multimedia conferencing 
address problem media mixing arises tele conferencing applications tele orchestra 
mixing algorithm minimizes difference generation times media packets mixed absence globally synchronized clocks presence jitter communication delays packet switched networks 
algorithm shown complete message media data algorithm succeeds algorithm fails 
mixing accomplished different communication architectures 
order support applications tele orchestra involve large number participants propose hierarchical mixing architectures show order magnitude scalable compared purely centralized distributed architectures 
furthermore mechanisms minimizing delays incurred mixing various communication architectures 
implemented mixing algorithms network workstations connected ethernets experimentally evaluated performance various mixing architectures 
experiments revealed interesting results maximum number participants supported conference 
appear ieee acm transactions networking vol 
february motivation voice video data communications handled different communication networks 
primary carrier voice public switched telephone network video transmitted cable tv data handled specialized computer networks lans wans 
historical separation attributed fundamental differences characteristics voice video data traffic 
voice video characteristics sensitivity delay high bandwidth requirement ability tolerate relatively high error rates complete contrast requirements data 
voice video transmission circuit switching analog signals data transmission typically uses digital packet switched networks 
interest integrating different media stimulated advances communication computer technologies 
advances communication technology available large bandwidth modest cost advances computer technology resulted development high performance workstations audio video capabilities 
advances led feasibility supporting multimedia applications computer systems 
class applications multimedia conferencing permits individuals carry collaborative activities exchanging audio video text information multimedia workstations 
various kinds conferences demanding ones terms performance video voice streams continuously transmitted individuals conference individual video images voice streams mixed obtain composite image audio stream 
example application tele orchestra large number performers continuously playing respective musical instruments multimedia workstation 
audio streams received performers need continuously mixed yield coherent musical composition broadcast entire audience may consist individuals receiving audio respective workstations 
techniques mixing depend type media application 
case audio mixing multiple streams involves digitally summing audio samples normalizing result 
order eliminate feedback participant receiving mixed audio packet removes contribution playing back 
case video possible simply display multiple video streams having mix applications tele virtual conferencing may benefit mixing individual video streams synthesize image virtual meeting room 
need continuously mix media streams sources coupled real time nature media poses special requirements media transmission protocols 
design algorithms protocols communication architectures supporting media mixing multimedia conferences subject matter 
related years efforts integrating multimedia conferencing computer systems 
proposes text graphics conferencing architecture basic goal fit existing systems minimal impact rest system 
sarin greif studied conferencing architectures text graphics system include audio 
aguilar sri proposed architectures person person voice conferencing 
ziegler analytical performance evaluation voice conferencing broadcast ring networks 
ahuja bell laboratories swinehart xerox parc proposed architectures video conferencing 
emphasis efforts person person telephony type conferences high performance applications require continuous time critical mixing media streams sources supported 
algorithms protocols communication architectures supporting media mixing received attention 
research contributions address problem mixing media streams transmitted multiple sources multimedia conference packet switched network 
owing real time nature media mixed packets different sources generated time required mixed 
precisely coherent reproduction audio video applications tele orchestra maintaining consistent ordering user triggered events distributed real time games difference generation times packets mixed minimized 
reduction generation time differences reduces waiting time packets mixing leading lower buffering requirements 
mixing algorithm minimizes difference generation times media packets mixed absence globally synchronized clocks presence jitter transmission delays 
algorithm shown complete message exchanges media data mixer media sources algorithm succeeds algorithm fails 
mixing accomplished different communication architectures 
order support applications tele orchestra involve large number participants propose hierarchical mixing architectures show order magnitude scalable compared purely centralized distributed architectures 
furthermore live performances tele orchestra require performer receives audio played performers instantaneously 
mechanisms minimize real time delays incurred mixing various communication architectures 
implemented mixing algorithms network workstations connected ethernets experimentally evaluated performance various mixing architectures 
experiments revealed interesting results maximum number participants supported conference 
integrated networks media capture display sites digitize media data may connected directly opposed host computer network digital hdtv isdn telephone devices may capable running sophisticated time synchronization protocols 
rest organized follows section formulate problem mixing 
section algorithms mixing media sources section extend sources 
section analyze various communication architectures mixing section mechanisms minimizing real time delays due mixing 
section presents experience implementing mixing algorithms section concludes 
problem media mixing conferencing simplest form multimedia conference established setting logical media communication channels group participants 
conference established media information exchanged participants 
multi party conference participant receive composite media stream obtained mixing media streams transmitted participants 
packet switched network environment important problem determine set packets different sources mixed form composite media packet 
call set packets fusion set 
source generates media packets constant rate period smallest time window independent sources guaranteed generate packets general sources smallest time window sources guaranteed generate packets gamma gamma 
proof simple induction number sources 
unbounded smallest window guaranteed packets sources formalized mixing rule multi party conference mixing rule packets belong fusion set mixed jg gamma period generation media packets source generation times packets respective sources 
fusion set determined straight forward manner clocks generating sources globally synchronized 
clock synchronization requires sophisticated protocols negotiation agreement media sources 
assume media sources digitize transmit data network may sophistication exchange control messages run complex protocols 
protocol requires exchange messages media data question 
furthermore overhead clock synchronization protocols may excessive compared simpler protocols sufficient determining fusion set 
determination fusion set absence globally synchronized clocks important problem needs solved multimedia conferencing 
algorithms media mixing consider multimedia conference sources sm see 
source generates media packets constant rate period transmits mixer communication delay source mixer includes transmission times network queuing delays intermediate nodes bounded dmin dmax arrival time mixer packet numbered generated source earliest latest possible generation times denoted respectively packet derived gamma dmax gamma dmin measured mixer clock generation time media packet source belongs interval referred generation interval packet packet numbers arrival times mixing multimedia conference 
mixer mixes packets sources sm straightforward mechanism mixer carry mixing buffer media packets receives sources sm packet received time combine packets transmit mixed packet 
mixing rule separation generation times packets different sources mixed presence communication delay jitter packets generated apart different sources may suffer delays dmax dmin respectively arrive mixer dmax gamma dmin apart maximum waiting time packet mixer buffers mixed 
buffer mix scheme disadvantages due quirk effect jitter packets generated far apart dmax gamma dmin may arrive mixer window dmax gamma dmin misleading mixer combine packets violation mixing rule 
higher jitter wide area networks greater extent violation 
problem gets compounded presence packet losses 
instance mixing packets sources packet loss may cause mixer derive fusion sets pairwise manner fs fs may contain packets maximally separated generation times dmax gamma dmin 
order mix packets mixer takes union pairwise fusion sets packets separated far apart dmax gamma dmin may get mixed separation may increase linearly number sources 
hand mixer decides derive new fusion set containing closely generated packets sources may requirement maintaining consistent relative ordering packets successive fusion sets 
propose mixing algorithm guarantees packets mixed satisfy mixing rule case media sources binary mixing extend case multiple media sources ary mixing 
algorithm robust packet losses network 
absence arrival current packet source mixer derive fusion set help earlier packet received source 
algorithm effectively decouples determination fusion sets live mixing packets 
extreme variation situation determination fusion sets packets transmitted serially concurrently various sources finds important application live performances 
particular live performance generally initial sound check period preceding commencement mixer sequence various performers performing instruments prompting transmit audio packet time 
sound check mixer computes fusion set addition course carrying routine adjustments volume level tone frequency keeps actual performance 
binary mixing algorithm arrival times mixer packets sources earliest latest possible generation times packets gamma dmax gamma dmin gamma dmax gamma dmin generation times successive packets source displaced generation interval packet source estimated exact generation times packets unknown mixer determination binary fusion set estimates earliest latest packet generation times 
max max min min min max jg gamma max gamma min consequently max gamma min generation times packets guaranteed satisfy mixing rule packets belong binary fusion set 
equation defines stronger condition mixing rule determining fusion set 
exact generation times packets unknown mixer determination fusion set equation mixing rule 
remainder equation referred strong mixing rule condition determining fusion set 
maximum uncertainty max gamma min estimated generation times large generation intervals equals dmax gamma dmin duration 
max gamma min dmax gamma dmin clearly jitter communication latency dmax gamma dmin exceeds max gamma min exceed generation intervals satisfy strong mixing rule equation 
fact generation interval packet equals transmission jitter duration jitter exceeds packets satisfy strong mixing rule 
dmax gamma dmin necessary condition determining binary fusion set 
result importance formally stated proposition table 
hand suppose jitter dmax gamma dmin case max gamma min packets form binary fusion set 
dmax gamma dmin max gamma min may binary fusion set determined 
surprisingly true max gamma min situations mixer determine binary fusion set 
generation intervals satisfy strong mixing rule packets may 
notice packets satisfy strong mixing rule packets gamma generation intervals successive packets source displaced 
order determine binary fusion set suffices search packet form binary fusion set shall derive exactly cases mixer determine binary fusion set max gamma min loss generality assume 
depending relative positions generation intervals possible scenarios arise ffl generation intervals overlap see case matter packet gamma considered comparing generation intervals derived substituting equations shown satisfy strong mixing rule 
second result importance formalized proposition table 
time packets overlapped generation intervals time mixing packets disjoint generation intervals ffl generation intervals disjoint see case minimum separation gamma bound positive smallest positive integer gamma gamma maximum separation hand gamma gamma gamma gamma gamma gamma dmax gamma dmin obtain gamma dmax gamma dmin gamma dmax gamma dmin get gamma gamma 
elaboration equation yields sub scenarios 
gamma gamma case comparing generation intervals gamma derived equations shown gamma form fusion sets utilizing result deriving comprehensive binary mixing algorithm formally stated proposition table 
gamma 
case comparing generation interval derived equations shown forms fusion set utilized binary mixing algorithm formalized proposition table 

gamma 
case matter packet gamma considered comparison generation intervals shows satisfy strong mixing rule 
impossibility result formally stated proposition table 
proposition jitter communication latency dmax gamma dmin possible mixer derive binary fusion set 
proposition generation intervals estimated mixer overlapping max gamma min impossible mixer determine binary fusion set 
proposition generation intervals packets estimated mixer integer gamma gamma gamma gamma form binary fusion set packet gamma packet 
refer fn gamma lower binary fusion set fn kg upper binary fusion set 
proposition generation intervals packets estimated mixer integer gamma gamma gamma 
form binary fusion set packet 
proposition generation intervals packets estimated mixer integer gamma gamma gamma 
impossible mixer determine binary fusion set packets media streams 
table binary mixing propositions rigorous mathematical proofs propositions omitted sake brevity 
propositions see table yield powerful techniques combined algorithm mixer execute determine binary fusion set receives packets media sources 
binary mixing algorithm suppose packets arrive mixer times respectively 
dmax dmin maximum minimum possible transmission delays packets network media source mixer 

dmax gamma dmin binary fusion set determined proposition 

dmax gamma dmin compute generation intervals packets respectively gamma dmax gamma dmin 
loss generality min min max max 
gamma binary fusion set fn equation 
generation intervals packets overlap gamma impossible mixer determine binary fusion set proposition 
generation intervals packets disjoint exists integer gamma gamma gamma gamma binary fusion sets possible fn gamma lower binary fusion set fn kg upper binary fusion set proposition 
ii 
gamma 
binary fusion set fn kg proposition 
iii 
gamma 
impossible determine binary fusion set proposition 
completeness binary mixing algorithm effectiveness success algorithm determining binary fusion set critically depends relative values transmission jitter dmax gamma dmin packet duration quantified theorem 
theorem mixer executes binary mixing algorithm packets received times respectively dmax gamma dmin algorithm produces binary fusion set 
dmax gamma dmin algorithm may succeed fail determining binary fusion set 
dmax gamma dmin algorithm fails determine binary fusion set 
algorithm complete message exchanges media data mixer media sources algorithm succeeds algorithm fails 
proof earliest latest generation times packets computed gamma dmax gamma dmin 
loss generality 
generation intervals overlap 
similarly intervals disjoint 
assertions theorem proved follows 
dmax gamma dmin may observed lengths generation intervals packets gamma gamma equal dmax gamma dmin exceeds 
gamma gamma generation intervals overlapped disjoint 
generation intervals overlap obtain max gamma min gamma gamma binary fusion set mixing derived equation 
suppose hand generation intervals packets disjoint gamma gamma gamma gamma integer gamma gamma equations obtain gamma gamma 
conditions proposition proposition satisfied leading determination binary fusion set 

dmax gamma dmin lengths generation intervals packets lie generation intervals overlapped disjoint 
overlapped gamma exceed lie case equation yields binary fusion set case proposition shows impossible determine binary fusion set 
suppose hand generation intervals packets disjoint gamma gamma gamma gamma integer gamma gamma lengths generation intervals definitely equation yield gamma 
proposition satisfied case binary fusion set determined proposition satisfied case impossible determine binary fusion set 
algorithm may succeed fail determining binary fusion set 

dmax gamma dmin proposition impossible derive binary fusion set 

completeness algorithm fails determine binary fusion set dmax gamma dmin dmax gamma dmin generation intervals overlapped max gamma min disjoint gamma 
integer gamma gamma case proposition shows impossible determine binary fusion set case propositions show impossibility 
algorithm succeeds cases goes show binary mixing algorithm complete networking assumptions stated section 
theorem limitation effectiveness binary mixing algorithm arises due uncertainty generation intervals jitter communication delay 
practice mixer may able reduce uncertainty jitter iteratively refining estimates generation intervals time new packet arrives 
see suppose gamma denote generation intervals packets source predicted equations 
arrival subsequent media packet enables mixer recompute generation intervals gamma equations 
actual generation instant packet guaranteed gamma delta gamma delta represents revised possibly precise estimate generation interval packet 
surprisingly intersection small media packets estimates undergo widely different communication delays 
limit exact generation time determined intersection reduces single point occur media packets transmitted source suffer network delays dmax dmin respectively 
ary mixing multimedia applications tele orchestra may general media sources 
section extend binary algorithm handle mixing media packets received sources 
resulting ary mixing algorithm yields fusion sets entire range generation times packets fusion set bounded window shortest window possible shown section 
suppose mixer determine fusion set packets nm received sources sm straight forward extension binary algorithm mixer determine fusion set pairs sm take union gamma binary fusion sets 
maximum latest generation times minimum earliest generation times packets union window union constitutes ary fusion set 
recall binary algorithm scenarios binary fusion sets lower upper possible 
choosing binary fusion sets lead formation ary fusion set choosing binary fusion set 
worst case alternatives binary fusion set gamma alternatives unions gamma binary fusion sets may need computed determination ary fusion set yielding exponential execution times 
algorithm uses window sliding technique obtain ary fusion set linear number executions binary algorithm 
algorithm ary mixing generation intervals packets nm generated sources respectively 
min min max max loss generality generation interval packet disjoint packets replace packet gamma integer sufficiently large earliest generation time packet exceeds maximum latest generation time packets nm 
binary mixing algorithm compute binary fusion sets packets pairs sources sm 
clearly exist binary fusion sets pairs sources exists ary fusion set media streams 
generation interval disjoint determination binary fusion sets require propositions 
fn set obtained union binary fusion sets corresponding packet source propositions section lower binary fusion set chosen case choice 
set turn ary fusion set choice lower binary fusion set packet incorrect set right replacing packet 
refer correction technique window sliding 
gamma incorrect choices set window sliding operation starts considering packet lowest generation interval terminates ary fusion set formed packet choice binary fusion sets encountered gamma choices corrected 
exact algorithm follows ary mixing algorithm 
mixer receive packets fn media sources 
max max smallest positive integer max replace packet packet mark packet fixed 

binary mixing algorithm compute binary fusion set sources choosing lower binary fusion set case choice 
binary fusion set determined terminate algorithm report failure 
binary fusion set fn mark choice lower binary fusion set mark fixed 

compute max min follows max max min min max gamma min terminate algorithm successfully report union fn ary fusion set media streams 
max gamma min perform window sliding operation loss generality min 
packet marked fixed terminate algorithm report failure 
ii 
packet marked replace packet union mark fixed 
iii 
recompute min max union 
max gamma min terminate algorithm successfully report union ary fusion set 
iv 
go step 
completeness ary algorithm correctness completeness algorithm determining ary fusion set proved theorem theorem suppose mixer receives packets nm media sources 
ary mixing algorithm produces fusion set satisfies mixing rule correct 
message exchanges media sources mixer algorithm produces ary fusion set algorithm fails complete 
proof 
correctness self evident computation ary fusion set earliest latest estimates generation times packets guaranteed satisfy max gamma min satisfy equation 

completeness suppose algorithm determines fusion set fn containing packet show ary algorithm produce fusion set 
new algorithm produces fusion set produce binary fusion sets pairs sources sm 
completeness property binary mixing algorithm algorithm succeed determining binary fusion sets 
union binary fusion sets determined algorithm fn binary algorithm chooses lower binary fusion sets obtain gamma 
ary fusion set union binary fusion sets window sliding ary algorithm gamma case forms lower binary fusion set marked ary algorithm hand form upper binary fusion set 
binary fusion sets lower earliest generation time guaranteed occur marked fixed 
window slide replace window slide operation reaches marked fixed algorithm terminates having replaced marked performed gamma window slides yielding set fn algorithm produces ary fusion set ary mixing algorithm goes show complete 
theorem determine media packet size mixing algorithm effective network environment dmax gamma dmin practice chosen large feedback delays applications tele orchestra required small bounded human response time 
communication architectures media mixing process mixing passes sequence phases transient phase fusion set determined steady phase media packets mixed fusion set 
typically process mixing enters transient phase new source joins conference requiring fusion set computed earlier older sources changed accommodate new source 
fusion set determined transient phase contains packets sources respectively steady phase packets mixed 
architecture communication participants conference steady phase centralized spectrum fully distributed spectrum 
centralized architecture requires participant conference transmit media information central mixer 
mixer receives packets participants creates composite packet mixing received packets transmits participants 
participant receiving composite media packet may perform media dependent processing composite packet removing contribution case audio scheduling playback 
spectrum distributed architecture requires participant conference transmit media information participants 
mixing performed participant independently 
possible fusion sets derived participants may different 
resolve conflict participants designated master mixer fusion set computed master propagated participants 
centralized architecture simple implement inflexible provide features autonomous volume control media stream distributed architecture flexible incurs duplication mixing computation bandwidth usage 
architecture scales number participants geographical separation participants network network interface processing power mixer bottleneck 
clustering closely situated participants hierarchical mixing architecture see bound bandwidth processing requirements 
mixing hierarchy participants constitute leaf nodes constitute non leaf nodes 
transient phase root mixer computes fusion set node receives packet information participants propagates intermediate 
steady phase mixer receives media packets children mixes sends composite packet parent 
mixer root hierarchy forwards final mixed packet leaf nodes 
bandwidth required packet reception mixer proportional number children bandwidth packet transmission sending just parent 
root mixer send mixed packet participants mixed packet common participants root mixer needs packet transmission multicasting 
increasing height hierarchy bounding number children mixer hierarchical architectures highly scalable 
participants multicast participants root mixer hierarchical architecture mixing special case hierarchical architecture directed ring thought mixing tree node exactly child 
configuration appropriate token ring networks analyzed ziegler 
generalization hierarchical architecture yields graph structured mixing architecture 
nonhierarchical graph may multiple paths participant mixer 
mixer may receive multiple mixed packets containing participant packet 
eliminate duplication participant packet may transmitted addition mixed packet leading wastage bandwidth 
architectures afford special advantages hierarchical ones interesting mixing 
real time performance mixing interactive real time nature collaborative applications require delay experienced media packets bounded 
mixer receives packet sources goes form mixed packet delay completion mixing process receives packets constitute mixed packet 
network unreliable packets go form mixed packet may arrive mixer 
important question long mixer wait packets sources deciding transmit partially mixed packet fully mixed unavailability packets sources 
simple solution mixer transmit partially mixed packet media packet goes form subsequent mixed packet received sources 
causes mixing delays order packet duration mixer 
extension solution hierarchical mixing architecture height results mixing delay level leading mixing delay delay dmax dmax transmission delay leaf root hierarchy additional dmax multicast final mixed packet root back leaf 
packet duration chosen small typical values voice packets ethernet ms mainly keep packet transmission overhead low 
small mixing hierarchies mixing delay turn unacceptably large supporting interactive real time multimedia applications 
simple algorithm removes proportional dependence mixing delay general mixing hierarchy mixing architectures special cases 
algorithm mixer maintains information expected generation times packets children 
new source joins conference sends probe packet hierarchy enable intermediate mixer compute earliest latest generation times packet 
packet reaches mixer height time mixer computes earliest latest generation times follows gamma dmax gamma dmin consider process forming kth mixed packet mixer 
packets generated regularly interval mixer estimate earliest latest generation times packet source follows minimum earliest maximum latest generation times packets constituting kth mixed packet min min mg max max mg earliest latest arrival times packets constituting kth mixed packet pre computed follows min dmin min max dmax max packets constituting kth mixed packet arrive mixer height interval min max 
root mixer height entire tree max max dmax maximum aggregate delay suffered packet leaf root max gamma min 
adding dmax transmission final mixed packet root participants obtain maximum aggregate delay packet aggregate delay max dmax gamma min dmax dmax derivation mixing delay ignored computational overhead mixing mixer assumed small compared communication waiting delays 
implementation experience implemented mixing algorithms network multimedia stations consisting computing workstation pc video camera tv monitor see 
workstation pc ats connected ethernets 
pc ats equipped digital video processing hardware digitize compress motion video real time rates resolution pixels bits color information pixel audio hardware digitize voice kbytes sec 
gateway ethernets camera camera multimedia station multimedia station workstation workstation pc monitor video monitor video pc hardware configuration carried experiments evaluate performance limits mixing audio conferencing applications 
audio samples packetized transmitted ethernet 
order strike balance network transmission overhead favors large packet sizes packetization delay favors small packet sizes audio packet size chosen samples yielding ms maximum communication delay packet ms observed performance centralized distributed mixing architectures experimentally measured maximum number participants support 
shows variation fraction packets reaching mixer centralized architecture increase size conference 
fraction goes rapid deterioration voice quality mixing architecture breaks 
break point yields maximum conference size presence multicasting absence centralized architecture 
presence multicasting distributed centralized architectures behave similar fashion 
absence multicasting performance poorer due growth bandwidth consumption square number participants 
hierarchical architectures maximum allowable delay ms analysis section yields showing support conferences participants 
packets mixer conference size number participants multicasting multicasting performance audio mixing increase conference size concluding remarks algorithms mixing media data transmitted multiple sources multimedia conferencing applications tele orchestra carried packet switched networks 
algorithms minimize differences generation times media packets mixed delays mixed packets 
algorithms complete effective algorithm mixing absence control message exchanges participants 
implemented mixing algorithms network workstations equipped digital multimedia hardware 
experimental evaluations demonstrate centralized distributed mixing architectures limited number participants support 
order overcome limitations proposed hierarchical mixing architectures significantly reduce bandwidth consumption making suitable scalable multimedia conferences 
aguilar garcia luna aceves moran 
architecture multimedia tele conferencing system 
proceedings sigcomm symposium communications architectures protocols stowe vt pages august 
ahuja horn 
rapport multimedia conferencing system 
proceedings cois conference office information systems palo alto ca pages march 

experiment integrated multimedia conferencing 
proceedings cscw pages december 
venkat rangan swinehart 
software architecture integration video services environment 
ieee journal selected areas communication december 
venkat rangan vin srinivas ramanathan 
communication architectures algorithms media mixing multimedia conferencing 
appear ieee acm transactions networking february 
sarin greif 
computer real time conferences 
ieee computer october 
vin venkat rangan srinivas ramanathan 
hierarchical conferencing architectures inter group multimedia collaboration 
proceedings conference organizational computing systems bulletin vol 
pages november 
ziegler weiss friedman 
implementation mechanisms packet switched voice conferencing 
ieee journal selected areas communications june 
