query language xml deutsch mary fernandez daniela florescu university pennsylvania pa labs florham park nj inria le chesnay cedex france gradient cis upenn edu mff research att com daniela florescu inria fr alon levy dan suciu university washington seattle wa labs florham park nj levy cs washington edu suciu att com important application xml interchange electronic data edi multiple data sources web 
xml data web applications need integrate aggregate data multiple source clean transform data facilitate exchange 
data extraction conversion transformation integration understood database problems solutions rely query language 
query language xml called xml ql argue suitable performing tasks 
xml ql declarative relational complete query language simple optimized 
xml ql extract data existing xml documents construct new xml documents 
keywords xml query languages electronic data interchange edi 
goal xml provide sgml benefits available html provide language easier learn complete sgml 
benefits include user defined tags nested elements optional validation document structure respect document type descriptor dtd 
important application xml interchange electronic data edi data sources web 
electronic data primarily intended computer human consumption 
example search robots integrate automatically information related sources publish data xml format stock quotes financial sites sports scores news sites businesses publish data products services potential customers compare process information automatically business partners exchange internal operational data information systems secure channels 
new opportunities arise third parties add value integrating transforming cleaning aggregating xml data 
focus xml application edi 
specifically take database view opposed document view xml 
consider xml document database dtd database schema 
edi applications require tools support tasks extraction data large xml documents conversion data relational object oriented databases xml data transformation data dtd different dtd integration multiple xml data sources 
data extraction conversion transformation integration understood database problems 
solutions rely query language relational sql object oriented oql 
query language xml called xml ql argue suitable performing tasks 
xml ql features declarative 
relational complete particular express joins 
simple known database techniques query optimization cost estimation query rewriting extended xml ql 
extract data existing xml documents construct new xml documents 
support ordered unordered views xml document 
initial draft query language note www org tr note xml ql 
salient question adapt sql oql query xml 
answer xml data fundamentally different relational object oriented data sql oql appropriate xml 
key distinction data xml data traditional models xml rigidly structured 
relational object oriented models data instance schema separate independent data 
xml schema exists data tag names 
example relational model schema define relation person attribute names name address person name address 
instance schema contain tuples smith philadelphia 
relation attribute names separate data usually stored database catalog 
xml schema information stored data 
structured values called elements 
attributes element names called tags elements may attributes values atomic 
instance 
formed xml 
xml data self describing naturally model irregularities modeled relational object oriented data 
example data items may missing elements multiple occurrences element elements may atomic values data items structured values collections elements heterogeneous structure 
xml data associated dtd self describing schema stored data restrictive forms dtds may irregularities described 
importantly flexibility crucial edi applications 
self describing data considered database research community 
researchers data fundamentally different relational object oriented data called semistructured data 
semistructured data motivated problems integrating heterogeneous data sources modeling sources biological databases web data structured text documents sgml xml 
research semistructured data addressed data models query language design query processing optimization schema languages schema extraction 
key observation xml data instance semistructured data 
designing xml ql drew query languages semistructured data tutorials describing semistructured data :10.1.1.32.3916:10.1.1.45.8397:10.1.1.117.5869
xml ql includes features languages differs important respects 
specifically contributions propose data model xml data extends semistructured data model order 
extension necessary xml documents ordered 
design syntax xml ql combines elements xml syntax traditional query language syntax 
propose novel semantics xml ql support order input output data 
combine powerful data construction mechanisms nested queries skolem functions novel way 
illustrate xml ql tasks designed data extraction transformation integration 
sec 
introduce xml ql examples sec 
describe formally underlying data models 
show sec 
xml ql tasks data extraction translation integration 
sec 
describes extensions discusses open issues 

examples xml ql simplest xml ql queries extract data xml document 
example xml input document www bib xml assume contains bibliography entries conform dtd dtd specifies book element contains author elements title publisher element year attribute 
article similar year element optional omits publisher contains element 
article contains type attribute 
publisher contains name address elements author contains optional firstname required lastname 
assume name address firstname lastname cdata string values 
matching data patterns 
xml ql uses element patterns match data xml document 
example produces authors books publisher addison wesley xml document www bib xml 
uri uniform resource identifier represents xml data source may appear right hand side 
addison wesley www bib xml construct informally query matches element xml document www bib xml element element element element equal addison wesley 
match binds variables title author pair 
note variable names preceded distinguish string literals xml document addison wesley 
convenience abbreviate abbreviation relaxation xml syntax handy introduce tag variables regular expressions tags 
query rewritten addison wesley www bib xml construct constructing xml data 
query produces xml document contains list pairs elements input document 
useful construct new xml data result data exist input document 
query returns groups new element addison wesley www bib xml construct example consider xml data database systems date addison wesley foundation object relational databases date darwen addison wesley 
example bibliographic data applied example data example query produce result date database systems date foundation object relational databases darwen foundation object relational databases grouping nested queries 
query authors book different authors book appear different elements 
group results book title nested query produces result title contains list authors www bib xml addison wesley construct construct notice pattern unnested bind element content 
content variable bound may appear right hand side expression expression nested construct expressions 
binding content element matching patterns bound element common idiom introduce syntactic shorthand preserves original nesting 
content pattern binds content matching element variable addison wesley content www bib xml construct construct example data query produce database systems date foundation object relational databases date darwen joining elements value 
xml ql express joins matching elements contain value 
example query retrieves articles author written book 
assume author uses names denoted variables articles books 
firstname lastname content www bib xml join firstname join lastname www bib xml construct query uses common idiom construct expression produces element occurs input element 
avoid recreating element element expression binds complete preceding element firstname lastname element www bib xml 
construct 
data model xml better understand xml ql necessary describe data models 
describe unordered data model detail ordered data model 
unordered model 
understand xml ql data model consider example book elements 
record elements title author publisher second record authors 
xml document contains additional information directly relevant data comment book element fact title precedes authors fact book precedes book 
information relevant edi application ignores comments treats data unordered structured values 
assume distinction information intrinsic data information document layout specification 
unordered model ignores comments relative order elements preserves essential data 
compromises simplify xml ql semantics effect efficiency query 
definition 
unordered xml graph consists graph node represented unique string called object identifier oid edges labeled element tags nodes labeled sets attribute value pairs leaves labeled string value distinguished node called root 
example example data represented xml graph 
attributes associated nodes elements represented edge labels 
terms node object interchangeably 
omit object identifiers reduce clutter 
unordered xml graph example data model allows edges nodes restriction 
node outgoing edges labels values 
value means string value case leaf node oid case non leaf node 
restated condition says nodes edge label node leaf children label string value 
second condition means data model xml documents denote sets 
example xml graph dates dates isomorphic graph dates important note xml graphs derived xml documents generated queries 
ordered model 
ordered xml graph xml graph total order nodes graph 
graphs constructed xml documents natural order nodes document order 
total order nodes enforce local order outgoing edges node 
ordered model may arbitrarily edges source edge label destination value 
example example data represented ordered graph 
nodes labeled index parenthesized integers total node order edge labels labeled local order bracketed integers 
section discuss xml ql features support ordered model 
ordered xml graph example data 
xml documents ordered dtds may impose particular order elements querying ordered data harder querying unordered data 
semantics xml ql complex ordered data see sec query optimizer fewer choices generating query execution plans 
edi applications element order significant tuples relational table represented unordered model loss information 
cases ignore order subset xml ql order independent 
applications order significant document processing application access section paragraph sentence order ordered model 
element identity ids id support element sharing xml reserves attribute type id called id specify unique key element 
attribute type idref allows element refer element designated key attribute type idrefs may refer multiple elements 
data model treat attributes differently 
example assume attributes id author types id idrefs respectively example xml fragment element associates keys elements second defines element authors refer persons 
john smith 
xml graph node unique object identifier oid id attribute associated corresponding element generated oid id attribute exists 
elements refer elements idref idrefs attributes 
attributes name value pairs associated nodes idref attribute represented edge referring element referenced element edge labeled attribute name 
id attributes treated specially node oid 
example elements represented xml graph fig 
representation idref attributes xml graph 
representation sense blur distinction attributes type idref elements logically point objects 
choice allows users write simple edge traversal pointer chasing queries abc xml possible write explicit join expressions id idref values access referenced objects 
example query produces lastname title pairs joining author element idref attribute value person element id attribute value 
element element abc xml construct note idiom element binds element arbitrary contents 
element expression matches element empty contents 
note choose represent elements idref attributes labeled edges possible xml graph generated xml document recover original document 
distinguish types lexically assuming attributes type idref distinct tags document restriction enforced dtd 
graph node multiple incoming edges distinguish node unique element name possibly multiple idref attributes refer node 
scalar values leaf nodes xml graph may contain values may value 
consequence xml fragment trip moon represented directly xml graph 
cases introduce extra edges enforce invariant value leaf node 
data transformed trip moon modeled xml graph 
representation cdata values 
default variables patterns bind internal nodes leaf values pattern binds node referenced cdata value 
value function produces cdata value node 
representation usually transparent users 
example pattern moon syntactic shorthand moon match graph 
mapping xml graphs xml documents xml graphs may result parsing xml document querying transforming existing xml graph 
general xml graphs unique representation xml document element order unspecified unordered model choose order outgoing edges graph node shared nodes multiple incoming edges unique representation xml 
issues handled graph emitted xml document 
dtd query result xml graph emitted xml document conforms dtd elements ordered 
address algorithmic issues externalizing xml graph 

advanced examples xml ql examples introduce advanced features xml ql 
include tag variables allow variable bound edge element xml graph regular path expressions specify arbitrary paths xml graph 
illustrate xml ql integrate transform xml data 
tag variables xml ql supports querying element tags tag variables support querying data schema 
example query finds publications published smith author editor smith www bib xml author editor construct smith tag variable bound top level tag note construct clause constructs result tag name 
tag variable query constrains bound regular path expressions xml data specify nested cyclic structures trees directed acyclic graphs arbitrary graphs 
element sharing specified element ids idrefs described 
querying structures requires traversing arbitrary paths xml elements 
example consider dtd defines self recursive element part part element contain nested part elements arbitrary depth 
query structure xml ql provides regular path expressions specify element paths arbitrary depth 
example query produces name part element contains brand element equal ford regardless nesting level occurs 
ford www bib xml construct part regular path expression matches sequence zero edges labeled part 
pattern ford equivalent union infinite sequence patterns ford ford ford ford 
wildcard matches tag appear tag permitted 
example query matches sequence elements just part ford www bib xml construct abbreviate 
denotes concatenation regular expressions pattern ford match brand ford depth xml graph 
notation brand reminiscent unix wild cards file names means followed brand 
xml ql regular path expressions provide alternation concatenation kleene star operators similar regular expressions 
regular path expression permitted xml permits element 
example query considers sequence nested elements produces nested element element contained nested element 
operator means part equivalent part part 
www parts xml construct tag variables regular path expressions possible write query applied xml data sources similar identical dtds expressions handle variability data format multiple sources 
transforming xml data skolem functions important xml ql transforming xml data example dtd 
illustrate assume addition bibliography dtd dtd defines person write query transform data conforms bibliography dtd data conforms person dtd 
query extracts authors bibliography database transforms elements conforming person dtd fn ln www bib xml construct fn ln query uses object identifiers oid skolem functions control result grouped 
produced associated oid fn ln 
skolem function purpose generate new identifier distinct value fn ln 
query binds fn ln values finding publication author query create new appends information existing element 
author grouped element 
attributes duplicated refer values 
values emitted exist bibliography data 
note discussion skolem functions assume unordered data model 
ordered data model complex somewhat intuitive semantics describe sec 

integrating data multiple xml sources xml ql query sources simultaneously produce integrated view data 
example produce pairs names social security numbers querying sources www data xml www irs gov taxpayers xml 
sources joined social security number bound ssn expressions 
result contains elements name element source income element second source 
element ssn www data xml ssn element www irs gov taxpayers xml construct ssn alternatively skolem functions write related equivalent query fragments element ssn www data xml construct ssn ssn element www irs gov taxpayers xml construct ssn ssn query contains addition previous query persons taxpayers vice versa 
outer join www data xml www irs gov taxpayers xml 
xml ql queries structured blocks subblocks enclosed braces 
semantics related outer joins relational databases 
example root block empty subblocks 
subblock persons names produced 
result unique oid person ssn 
second subblock persons incomes produced 
match previously generated oid appended object included new query blocks powerful 
query retrieves titles published bibliography database retrieves publication month journal articles publisher books 
content www bib xml construct journal construct book construct outer block runs publications produces result element title 
subblock checks journal month tag adds month element publication controlled skolem function 
second subblock checks book publisher adds publisher element output 
support ordered model recall ordered data model exists total order nodes usually document order induces local order outgoing edges node 
nodes labeled index parenthesized integers total node order edge labels labeled local order bracketed integers 
order outgoing edges determined order destination nodes 
ordered data model patterns clause interpreted unordered 
example pattern match xml data string string data string string patterns unordered variable bindings clause ordered 
applying example pattern xml data left hand side variables bound order right hand side string string string string string string string string string string string string note order pattern significant 
change pattern definition variables bound different order sorted xml ql supports element order variables extract index element 
example patterns 
bind integer represents index local order edges 
example query retrieves persons lastname precedes firstname www people xml construct optional order clause specifies element order output 
example query retrieves publication titles ordered year month preserves order original document publications year month www bib xml order value value construct value function produces cdata value node 
absence value function results ordered oids nodes bound complex example query reverses order authors publication www bib xml construct order descending construct author construct function definitions dtd xml ql supports functions take xml documents arguments 
functions increase query reuse query applied multiple documents 
code defines function takes xml documents inputs function taxpayers employees taxpayers employees construct expression applies function xml sources www irs gov taxpayers xml www employees xml result function formed xml data 
function arguments results restricted dtds 
example function re written function taxpayers www irs gov tp dtd employees www employees org employees dtd www site com dtd 
construct specifies inputs conform tp dtd employees dtd respectively function result conform dtd 
determining output query conforms output dtd statically query compile time open research problem subject 
currently xml ql query processor checks runtime input documents conform respective dtds 

xml ql falls categories extending expressiveness language providing better support existing xml standards 
query language features expect support aggregates provided sql 
example query retrieves lowest highest price publisher element group construct min max absence group construct clause consumes relation clause 
tuple maps variables clause values satisfy expression clause 
group clause maps relation nested relation groups nested relations value group variables 
construct clause variables group variable denote sets may arguments aggregation functions 
subblocks offer limited form 
general construct connect optional parts clause optional components construct part 
currently association expressed cumbersome way nested construct queries subblocks skolem functions 
explained sec compile time type checking query important expect xml ql real applications 
particular guaranteeing function output conforms dtd important applications transform data various dtds 
static type checking remains open problem 
support xml standards useful xml representation xml ql queries applications xml ql embed xml ql queries xml document 
existing xml related standards rdf xsl support xml representations 
choosing xml syntax xml ql intend study related languages choose similar notation similar linguistic constructs 
multitude xml related standards influence evolution xml ql 
particular xpointer xlink proposals support inter document linking provide way referring data multiple sources xml document 
data inter document xml ql query query data interesting open problem decompose xml ql query multiple queries distributed appropriate remote servers 
dtds impose syntactic semantic restrictions xml data 
proposals xml schemas proposed 
proposals precise dtds enforce strict types xml data 
query optimizers rely schemas generate query execution plans 
expect xml ql implementation benefit precise schemas 

summary expectation xml data prevalent html documents anticipate increased demand search engines search xml data content query structure 
expect xml data primary means electronic data interchange web high level support tasks integrating data multiple sources transforming data dtds necessary 
xml ql supports querying constructing transforming integrating xml data 
xml data similar semistructured data proposed database research community model irregular data support integration multiple data sources 
designing xml ql drew experience query languages semistructured data 
implemented xml ql unordered data model prototype downloaded www research att com sw tools line demonstration xml ql www research att com mff demo html 

authors serge abiteboul beeri peter buneman stefano ceri ora lassila alberto mendelzon yannis papakonstantinou referees comments 
bibliography abiteboul quass mchugh widom wiener lorel query language semistructured data international journal digital libraries vol 
pp 

buneman davidson hillebrand suciu query language optimization techniques unstructured data proceedings acm sigmod international conference management data 
abiteboul querying semistructured data proceedings international conference database theory 
buneman tutorial semistructured data proceedings acm sigmod symposium principles database systems :10.1.1.117.5869
fernandez florescu levy suciu query language web site management system sigmod record vol 
pp 

resource description framework rdf model syntax www org tr pr rdf syntax 
xml linking language www org tr wd xlink 
extensible stylesheet language xsl www org tr wd xsl 
appendix grammar xml ql grammar changing language evolves incomplete document 
terminal symbols shown angular brackets lexical structure specified 
xml ql grammar xml ql function query function function 
query query element literal element query 
attribute attribute 
literal construct condition condition construct 
construct query condition pattern datasource predicate pattern pattern element content predicate expression expression expression order descending 
datasource datasource datasource deutsch phd candidate database group university pennsylvania 
earned sc 
degree computer science polytechnic institute bucharest romania technical university darmstadt germany 
daniela florescu received master degree computer science university bucharest romania ph computer science university paris vi france 
spending year labs research researcher inria france 
mary fernandez researcher labs 
primary research area improving software development designing high level languages developing tools efficient implementation 
alon levy received ph stanford university assistant professor university washington computer science engineering department 
research interests database systems artificial intelligence data integration web site management 
dan suciu researcher labs 
works query languages query optimizations semistructured databases complex values object oriented databases database theory 
