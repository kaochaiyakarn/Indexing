descriptive complexity theory real numbers erich gradel klaus meer rwth aachen logical approach complexity real numbers respect model blum shub smale 
logics consideration interpreted special class sorted structures called structures consist finite structure ordered field reals finite set functions finite structure special case metafinite structures introduced gradel gurevich 
argue structures provide right class structures develop descriptive complexity theory substantiate claim number results relate logical definability structures complexity computations bss machines 
computations real numbers 
blum shub smale introduced model computations real numbers rings usually called bss machine 
important difference say turing model real numbers treated basic entities arithmetic operations reals performed single step independently magnitude complexity involved numbers 
particular model abstracts problems actual computers real numbers approximated bit sequences complexity arithmetic operations depends length approximate representations mathematische grundlagen der informatik rwth aachen aachen informatik 
de lehrstuhl fur mathematik rwth aachen aachen meer rwth aachen de 
partially supported neurocolt 
rounding errors problem exact testing impossible practice 
similar notions computations arbitrary fields rings investigated earlier algebraic complexity theory see survey articles forthcoming book comprehensive treatment 
novelty approach blum shub smale model uniform input lengths notions explored algebraic complexity straight line programs arithmetic circuits decision trees typically nonuniform 
main purposes bss approach create uniform complexity theory dealing problems having analytical topological background show certain problems remain hard arbitrary reals treated basic entities 
basic concepts fundamental results classical computability complexity theory reappear bss model existence universal machines classes pr npr real analogues np existence npr complete problems 
course notions appear different form strong analytic flavour typical examples undecidable recursively enumerable sets complements certain julia sets problem shown npr complete question multivariate polynomial degree real root 
boolean setting problems class npr decidable single exponential time trivial classical case pr versus npr question major open problems differences boolean real complexity theory 
just mention note meaning space resources different cf 
section certain separation results established ncr pr npr expr open boolean theory discrete problems change complexity behaviour considered bss model cf 

discrete point view continuous approach provides interesting results particular boolean parts real complexity classes bear strong relationship classical theory see 
logics capture complexity classes 
computational complexity theory concerned amount resources time space solve problem descriptive complexity theory branch finite model theory considers logical complexity defining property query relates computational complexity logical definability 
important results fagin theorem provides purely logical machineindependent characterization np isomorphism closed class finite structures fixed nonempty signature 
np exists existential second order sentence precisely class finite models 
years immerman vardi proved ordered structures problems solvable polynomial time exactly definable fixedpoint logic 
immerman systematically studied problem capturing complexity classes logical languages came logical characterizations major complexity classes 
important results field surveyed 
logical characterizations complexity model theoretic fragments second order logic extensions order logic additional means construct new relations fixed point operators 
different functional approach draws recursion theory model theory 
gurevich proved interpreting classical calculus primitive recursive functions resp 
recursive functions finite successor structures gives precisely log space resp 
polynomial time computable global functions 
variant result obtained sazonov 
noted complexity classes np precise logical characterizations obtained ordered structures 
problem exists logic capturing precisely polynomial time computable queries arbitrary finite structures open 
metafinite models descriptive complexity theory areas computer science databases optimization fault tolerant networks arise objects consist finite structure collection numbers infinite numerical domain arithmetical operations performed 
reason objects adequate way gradel gurevich introduced metafinite structures 
metafinite model theory viewed possibility going finite models order integrate logical queries finite structures arithmetical operations numbers infinite structure ring integers ordered field reals 
avoid problems pertinent typical infinite numerical structures undecidability arithmetic gradel gurevich investigated number logics metafinite models extend usual logics finite structures restricted access infinite numerical domain 
relationship metafinite model theory proposal notably database theory combining finite structures infinite numerical domains discussed 
exploit metafinite models develop logical approach complexity bss model obtain results parallel descriptive complexity theory boolean case 
problem approach define right class structures model convincing way computational problems interested admit logical reasoning computations bss machines natural logical languages 
dealing ordered field reals realm finite model theory anymore 
side model theory real closed fields ring provide right framework 
needed clear separation finite discrete aspects problems computations indices tuples time indices registers finite control machines side arithmetic real numbers side 
achieved structures special case metafinite models 
consist finite structure ordered field reals finite set functions discuss number logical languages structures investigate expressive power 
argue structures provide right class structures develop complexity theory substantiate claim results ffl appropriate variant existential second order logic structures denoted existential quantification functions finite part structure captures npr analogue fagin theorem 
ffl design fixed point logic partial functions finite domains show ordered structures logic captures pr real analogue theorem immerman vardi 
ffl investigate appropriate variants calculus primitive recursive recursive functions ordered structures 
recursive global functions capture precisely polynomialtime primitive recursive global functions coincide functions computable bss machines polynomial time constant space 
consequence exist primitive recursive global functions ncr ffl exhibit problems complete pr npr order reductions 
believe results give sufficient evidence metafinite model theory provides right framework descriptive complexity computability complexity theory real numbers equivalently set functions finitely call jxj length note theta identified natural way concatenation 
decision problem pair blum shub smale machine sequel called bss machine essentially random access machine evaluate rational functions unit cost registers store arbitrary real numbers 
definition bss machine finite set instructions labelled input output spaces subsets configuration quadruple thetan thetan thetar instruction currently executed numbers called copy registers see describes content registers machine 
input computation started configuration 
computation stops case value output computed machine 
instructions types computation rational function instruction copy registers updated similarly registers remain unchanged 
branch goto fi goto 
contents registers remain unchanged 
copy xw content copied write register 
instruction registers remain unchanged 
remarks 
rational function evaluated instruction depends fixed finite collection components finite set real constants appearing functions called machine constants increase running times constant factor power bss machines change restricts basic operations gamma delta assignments ff ff belongs fixed finite set reals machine constants 
definition pr class decision problems exists polynomial time machine decides analogue np class npr decision problems exists decision problem pr constant theta jy jxj fx equivalently npr defined class decision problems decided polynomial time nondeterministic bss machine bss machine nondeterministically guess tuples cost jy particular polynomial time computation input concatenation tuples guessed nondeterministic bss machine gives tuple jy jxj fixed logic structures gamma delta sgn ordered field real numbers 
include subtraction division primitive operations assume element named constant order write rational function term quantifiers 
addition included function sgn gamma clearly efficiently computable rational function 
turns logical descriptions convenient sign function ordering relation 
structures consist finite structure finite set functions special kinds metafinite structures introduced gradel gurevich 
descriptive complexity theory reals appropriate model inputs structures viewing finite part ordered set indices 
upsilon upsilon finite vocabularies upsilon may contain relation function symbols upsilon contains function symbols 
definition structure vocabulary upsilon upsilon triple consisting finite structure vocabulary upsilon called primary part ii infinite structure called secondary part iii finite set functions interpreting function symbols upsilon universe jdj cardinality primary part simple class structures obtained letting kg finite ordered set consists single unary function kg obviously class models definition structure called ranked contains function bijection jaj gamma 
case called ranking 
defines linear order ranking bijection em jaj gamma ranking induces lexicographic rankings order logic 
fix countable set ft variables 
variables range primary part don element variables values secondary part 
language contains vocabulary upsilon upsilon upsilon set upsilon formulae terms 
term takes interpreted structure values primary part case call index term case call number term 
terms defined inductively follows ffl set index terms closure set variables applications function symbols upsilon ffl constant number term 
ffl index terms ary function symbol upsilon number term 
ffl number terms gamma delta sgn 
atomic formulae equalities index terms equalities number terms expressions delta delta delta ary predicate symbol upsilon index terms inequalities number terms 
set formulae smallest contains atomic formulae closed boolean connectives quantification 
note build formulae ranges second order logic 
second order logic structures logic sor obtained adding possibility quantify function symbols 
say existential second order sentence vocabulary upsilon upsilon order sentence vocabulary upsilon upsilon fy 
npr existential second order logic encodings 
showed modelled structures natural way 
conversely structure encoded tuple way choose ranking replace functions relations primary part characteristic functions gives structure primary part plain set functions form rand ranking functions represented tuple xm gamma jaj th tuple respect ranking induced concatenation tuples gives encoding 
note depends ranking chosen 
obviously structures fixed finite signature length bounded polynomial jdj depends signature 
view gamma single function xd means encoding structure basically means representing structure single function appropriate arity gamma furthermore encoding order definable sense lemma signature upsilon upsilon exists order formula code signature upsilon upsilon fx structures signature upsilon rankings functions code iff loss generality view decision problem pair sets structures fixed vocabulary closed isomorphisms say decision problem structures pr npr mean pr npr fe fg similarly npr decision problem pr view structures expansion structures ary function theorem analogous result real setting fagin theorem 
theorem decision problem structures 
statements equivalent 
npr ii exists existential second order sentence fd proof 
easy see ii implies 
converse npr corresponding problem pr ary fd polynomial time bss machine deciding natural number stops steps uses gamma registers jdj 
suppose ranking available 
induced ranking em firstorder definable identify element maximal rank number term available em abbreviation gamma delta delta delta tm gamma tm identify initial subset gamma formulae constructed tuples variables considered range natural numbers conditions expressed formulae vocabulary feg 
computation input represented function follows 
ffl instruction executed time ffl indices read write registers time ffl content register time construct order formula property ranked structures iff represents accepting computation 
express time function encodes input configuration 
need subformula stating values encode input 
lemma expressed order logic 
second ensure gamma sequence hz gamma represents configuration sequence values represents successor configuration 
formula asserting form describes transitions performed instruction consider example computation instruction form assume addition increases index read register sets back index write register 
formula express ffl instruction ffl read register index increased ffl write register index set back ffl register writes result applying rational function register contents time 
ffl registers remain unchanged 
clearly conditions order expressible 
noted number terms rational function number term 
example illustrating explicit function consider copy instruction xw formula express update instruction number done content register time content register time expressed formula em em express accepts input just say gamma convention result computation single number stored register 
combining subformulae appropriate way obtain desired formula 
follows structures iff proves theorem case ranked structures 
away assumption input structures ranked 
ranking structures introduce existentially quantifying function adding conjunct ff asserts exists element 
follows fd ff example npr complete problem logical description 
denote set degree polynomials unknowns arbitrary zero having real zero 
problem zero npr complete 
consider structure ng consists function defines homogenous polynomial xn degree obtain arbitrary necessarily homogenous polynomial xn degree setting sentence zero quantifies functions describes zero partial sum monomials xn lexicographical order 
zero described sentence gamma polynomial degree defined real zero 
fixed point logic structures simplicity restrict attention functional structures algebras primary part plain set upsilon 
loss generality replace relation characteristic function considered function furthermore allow partially defined functions primary part formally define partial algebra algebra extension 
basic operations extended undef gamma undef undef delta undef undef ae undef sgn undef undef define functional fixed point calculus number terms closing set order number terms defined section maximization rule fixed point rule 
maximization rule number term free variables max number term free variables obvious semantic 
maximization may seen functional substitute existential quantifiers 
notion functional fixed point complicated 
fix signature upsilon function symbol contained signature 
number term signature upsilon fzg free variables arity write value interpretation 
algebra signature upsilon term gives rise operator updates partially defined functions follows undef gives inductive definition sequence partial functions undef operator updates points undefined process saturated polynomially iterations jaj denote fixed point call fixed point fixed point rule number term signature upsilon fzg tuple variables arity tuple number terms build new number term fp signature upsilon semantic algebra 
definition functional fixed point logic algebras denoted obtained closing set order number terms maximization rule basic operations gamma delta sgn rand fixed point rule 
proposition pr techniques ehrenfeucht fraiss games apply fixed point logic finite structures show capture full power polynomial time bss machines 
instance number term defining cardinality primary part 
finite model theory fixedpoint logic captures polynomial time structures ranking ordering available fixed point construction simulate cycling algorithm elements 
formula 
write characteristic function understanding undefined terms undefined 
lemma characteristic function formula definable 
proof 
simple induction 
point worth mentioning characteristic functions equalities inequalities number terms defined gamma sgn gamma sgn gamma sgn gamma note ranking induced ranking em definable abbreviation em 
tuples course definable mapped em strictly speaking term abbreviation max em 
theorem ranked structures pr proof 
inclusion pr remains shown 
represent computation polynomialtime bss machine function precisely way proof theorem prove function inductively definable form fp fact term defining characteristic function order predicate 
term describes updates step computation 
form input max input terms describing encoding input updates instruction order definability input encodings lemma yields input definable example term consider computation instruction increases index read write registers 
associated term similarly copy instruction xw term max primitive recursive recursive functions structures mentioned proved gurevich calculus primitive recursive functions defines interpreted finite successor structures precisely global functions computable logspace 
important differences boolean real complexity theory respect space resources result bss decidable problem solved constant space 
obvious type functions play part logspace computable ones 
closer analysis reveals time trade applying reduction get constant space computations 
known done loosing polynomial amount time 
show question closely related relationship recursive primitive recursive global functions 
extend calculi primitive recursive recursive functions natural way global functions structures prove main result section primitive recursive global functions exactly computable polynomial time constant space recursive functions computable polynomial time 
definition global function vocabulary upsilon arity function assigns structure function theta argument call index part number part argument 
definition global function computable time exists bss machine computes jdj steps 
consider ranked structures 
definition initial functions vocabulary upsilon embedding function ii functions vocabulary upsilon characteristic functions relations upsilon 
iii constants considered ary global functions values respectively jaj gamma 
iv constant function 
sign function basic arithmetic operations gamma delta vi projections 
class primitive recursive global functions structures closure initial functions composition simultaneous primitive recursion primitive recursive functions defined successor respect lexicographic ordering tuples 
predicate primitive recursive iff characteristic function lemma number term characteristic function order property primitive recursive 
furthermore functions predicates primitive recursive function order speak bss machines working constant space modify machines registers needed represent structure jdj 
definition bss machine separated input output device shortly sio bss machine bss machine having working registers blocks registers input output 
addition usual operations working registers read values input registers write output registers unit cost 
sio bss machine works space number working registers inputs size exceed 
theorem global function computable sio bss machine polynomial time constant space iff primitive recursive 
proof 
simple induction shows primitive recursive global function computable polynomialtime constant space sio bss machine 
conversely assume global function computed sio bss machine working registers time similarly proof theorem describe behaviour collection global functions 
gamma value content working register time computation calculating 
remaining functions encode instruction indices read write registers encodes content input output registers 
obviously values depend simple way values content input registers 
lemma fact encoding input order definable bit lengthy write primitive recursive function describing update 
obvious content output registers function calculated primitive recursion projection 
primitive recursive global functions finite successor structures logspace computable nc reals situation different 
shown ncr pr ncr consists problems decidable polynomial number working parallel time log refer exact definition 
exploiting argument get result 
theorem exists primitive recursive global function computable polylogarithmic parallel time polynomial number bss machines 
literature number different calculi partial recursive functions give interpreted ordered finite structures precisely polynomial time computable global functions 
gurevich algebras ptime refer similar algebras achieve goal 
algebras extended algebras global functions ordered structures polynomial time computability sense blum shub smale 
due space limitations just sketch example 
gurevich introduce concept global recursive functions ordered structures adapting classical herbrand godel kleene equation language cf 

upsilon vocabulary consider set finitely equations terms function symbols contained upsilon tuples respectively index terms number terms 
number terms vocabulary upsilon ff instance reformulate schema primitive recursion system 
definition ordered structure vocabulary upsilon 
system defines function theta recursively iff theta exists derived identities form holding initial primitive recursive finite applications steps substituting elements individual variables closed number terms real variables 
ii closed term proved occurences replaced recursively defines global function recursively defines 
note don require existence total function satisfied values 
checking values functions defined points mean decide existential order theory reals 
theorem global function vocabulary upsilon 
recursively defined system iff computable polynomial time bss machine 
full discuss algebraic characterizations polynomial time order reductions known exist problems npcomplete order reductions reductions 
ordered structures weaker called projection reductions suffice 
introduce notion reduction classes structures show npr pr contain complete problems reductions 
find convenient generalize notion number term way fo set expressions delta delta delta number terms characteristic functions formulae definition upsilon upsilon vocabularies structures upsilon upsilon upsilon 
assume simplicity upsilon relational 
constant 
order interpretation width structures vocabulary upsilon structures upsilon collection phi order formulae terms ffl ary relation upsilon phi contains formula signature upsilon free variables ij ffl function upsilon arity number term fx fo signature upsilon phi depending km variables ij phi maps structure signature upsilon structure signature upsilon obvious way 
definition sets structures signatures upsilon upsilon respectively 
say reducible iff exists order interpretation phi structure iff shown problem deciding existence real zero degree polynomial npr complete 
follows problem ac algebraic circuit evaluates input npr complete 
definition algebraic circuit cf 

show circuit problem npr complete reductions 
proof extends similar result discrete setting established acs lov asz 
theorem algebraic circuit problem complete class npr reductions 

order reductions computed weak polynomial time sense koiran cf 

theorem generalizes result shub smale npr contains complete problems respect weak polynomial reductions 
easy see order reductions computed algebraic circuits polynomial size constant depth gates allow unbounded fanin bounded fan gets polylogarithmic depth 
proved problem deciding algebraic circuit evaluates real input value pr complete ncr reductions 
fact ncr reductions refined order reductions establishing result 
theorem algebraic circuit evaluation problem pr complete reductions 
blum shub smale theory computation complexity real numbers npcompleteness recursive functions universal machines bull 
amer 
math 
soc 
clausen shokrollahi algebraic complexity theory forthcoming 
pr ncr journal complexity 
power real turing machines binary inputs neurocolt technical report nc tr esprit working group 
shub smale separation complexity classes koiran weak model theoretical computer science 
complete problems theory reals journal complexity 
dahlhaus reductions np complete problems interpretations borger 
eds logic machines decision problems complexity lecture notes computer science nr 
springer 
fagin generalized order spectra polynomial time recognizable sets siam ams proc 

acs lov asz remarks generalized spectra zeitschrift fur mathematische logik und grundlagen der mathematik 
gradel capturing complexity classes fragments second order logic theoretical computer science 
gradel gurevich tailoring recursion complexity proceedings st colloquium automata languages programming icalp lecture notes computer science nr 
springer 
gradel gurevich metafinite model theory preparation 
preliminary versions logic colloquium july gradel conference logic complexity indianapolis october gurevich 
gurevich algebras feasible functions proc 
th ieee symposium foundations computer science 
gurevich logic challenge computer science borger ed trends theoretical computer science computer science press 
immerman relational queries computable polynomial time information control 
immerman languages capture complexity classes siam comput 

immerman expressibility complexity measure results directions proc 
nd ieee conference structure complexity theory 
immerman descriptive computational complexity hartmanis ed computational complexity theory proc 
ams symposia appl 
math 

koiran weak version blum shub smale model proc 
th ieee symposium foundations computer science 
decision complexity icsi tech rep tr universit tubingen 
meer complexity quadratic programming real number models computation theoretical computer science 
une propos des machines sur par blum shub smale acad sc 
paris erie 
sazonov polynomial computability finite domains und kybernetik 
strassen algebraic complexity theory van leeuwen ed handbook theoretical computer science vol 
elsevier amsterdam pp 

vardi complexity relational query languages proceedings th acm symposium theory computing 
von zur gathen algebraic complexity theory ann 
reviews computer science 
