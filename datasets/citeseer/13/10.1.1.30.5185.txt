representations hierarchies graphs institutions dissertation am fachbereich mathematik und informatik der universitat bremen von till mossakowski prof dr hans jorg kreowski bremen prof dr andrzej tarlecki juli supported des deutschen partially esprit basic research working group compass ii want hans jorg kreowski teaching algebraic specifications giving freedom find line research interest open questions discussions 
members research group theoretical computer science bremen arises really working atmosphere 
andrzej tarlecki 
learned numerous discussions subject 
approaches thesis follow view main topics personal ideas views subject strong influence 
reverse alphabetical order uwe wolter burkhard wolff paw sernadas scollo horst reichel meseguer bernd krieg bruckner jo goguen cerioli valentin formalism logic institution relating translating structuring community various discussions 
contents data types arbitrary fixed signature modular data types moving signatures specification data types arbitrary fixed logical system moving logical systems problem choose arbitrary fixed category logical systems moving categories logical systems role model morphisms initial free models structure thesis categories logical systems specification frames institutions composable signatures amalgamation entailment systems logics transporting logical structure maps liberality variety institutions total partial order sorted algebras relational partial conditional existence equational logic restrictions rp 
restrictions rp 
restrictions special interpretation limit theories algebraic notions propositions left exact sketches order sorted algebra sort constraints rewriting logic composable signatures amalgamation liberality institutions different types arrow logical systems theory monad simple representations institutions conjunctive monad conjunctive representations institutions theory extension monad weak representations institutions semantical consequence th model class monad semi representations institutions summary subinstitutions equivalent expressiveness institutions notion equivalence strong 
example graphs institutions equivalences various institution level categorical intuitionistic type theory equivalences level embeddings level equivalences level embeddings level equivalences level embeddings level level embeddings level hierarchy theorems model theoretic hierarchy theorem level versus level partial conditional logic horn clause logic level versus level horn clause logic conditional equational logic level versus level conditional equational logic partial equational logic subhierarchy level 
level versus level partial equational logic total equational logic initial semantics properties parameterized adts example hierarchy theorem locating bounded stacks hierarchy summary equivalence difference institutions conditional equational logic algebras part construction measuring difference institutions categorical retractive representations part categorical retractive categorical retractive representations level versus level level versus level level versus level level versus level representations part summary limits parchments systematically construct institutions partial algebras institution morphisms suffice parchments parchment morphisms putting parchments limits related category theoretic preliminaries monads kleisli categories multiple pushouts multiple pullbacks amalgamation locally finitely presentable categories effective equivalence relations foundational issues chapter theoretical computer science uses different logical systems 
popular variants higher order logic current generation theorem provers 
popular equational logic study data types horn clause logic logic programming prolog 
exotic logical systems temporal logic second order polymorphic lambda calculus dynamic logic order sorted logic modal logic continuous algebra infinitary logic intuitionistic higher order type theory intensional logic proposed handle problems concurrency overloading exceptions non termination program construction natural language 
apparent general results applications completely independent underlying logic chosen 
goguen burstall gb complexity software systems grown way methodologies tools guide support development process important 
crucial problem translate description solution problem informal formal language 
informal requirement program necessarily written formal language large gap 
methodology algebraic specification data types provides formal language mathematical semantics level requirement specification gap informal requirement formal document smaller 
specification formalized development process supported semi automatic tools formal semantics allows formally define notion correctness implementations derive consequences implied specification stepwise transform requirement specifications design specifications implementations 
method algebraic specification characteristic describe data types giving explicitly describe properties 
allows concentrate essential requirements potentially may refined delay complete design implementation 
variety specification languages formal specification development correct software systems 
examples clear bg asl wir larch gh act em extended ml st st obj gw 
specification languages differ purpose expressiveness level abstraction requirement design implementation notation available tools ingredients languages vary 
kind logical system 
want introduce various levels logical systems considered level indicate thesis contributes theory logical systems 
data types arbitrary fixed signature signature provides names individual program components example types called sorts functions operations 
describes ingredients data type 
consider problem sorting list natural numbers sig sorting sorts nat list opns zero nat succ nat nat empty list add nat theta list list sort list list preds nat theta nat model data type signature described usual semi formal language mathematics spec carriers nat list functions empty adda delta permutation ascending order predicates implementation sorting lists natural numbers yields model 
stage requirement specification want implement data type describe abstractly properties 
leads data type properties hold hold concrete representation data inessential 
example ordering natural numbers axioms hold nat zero succ nat succ succ usually specifications considered loose talk realm models specification may narrowed refining specification 
situations useful canonical data type semantics initial models specification 
set axioms derive consequences theorems proof calculus theorem prover 
may check logical consequences specification consistent informal specification 
course proof calculus depends semantics 
example loose semantics calculus different initial semantics 
modular data types moving signatures mathematical theory data types arbitrary fixed signature developed mainly branches mathematics universal algebra mathematical logic 
computer science view suffice 
able specify data types modular way need notion morphism signatures allows change signatures smoothly 
able specify list sorting example correctly need enrich auxiliary operations may hidden 
want consider just lists natural numbers arbitrary element type leads parameterized specification spec nat sorts nat opns zero nat succ nat nat preds nat theta nat axioms zero succ succ succ spec elem sorts elem preds elem theta elem spec list enrich nat elem sorts list opns empty list add elem theta list list list theta list list count elem theta list nat list empty elem list add add elem count empty zero elem list count add succ count elem list count add count spec enrich list sort list list elem list sort add add empty list elem count count sort development may want combine specification sharing specification natural numbers way may want rename 
done signature morphisms typically induce translations axioms models 
model translation done direction opposite signature translation straightforward reduce model signature morphism expanding signature morphism 
model translations called reducts 
reducts axiom translations linked important property satisfaction invariant change notation signature morphisms 
example properly add initiality constraint ensures nat interpreted natural numbers free generating constraint ensures model list generated freely elem reduct 
specification data types arbitrary fixed logical system previous sections clear specification language contains 
constructs specification small specifying properties individual program components 
specification building operators enrich union rename translate derive constructing complex specifications simpler ones goguen burstall institutions gb formalization notion logical system sannella tarlecki st show possible separate specification language levels 
choose particular institution providing notions signature signature morphism model satisfaction 
choose set specification building operators defined institution independent way 
second point important issue studied thesis 
assume canonical choice specification building operators see example st need supply institution get specification language 
institutions examined relational partial conditional existence equational logic abbreviated rp 
signatures sorted signatures including symbols partial operations indicated relations indicated 
models sorted algebras precisely partial algebraic systems relations 
signature morphisms map sorts sorts way compatible mapping components 
reducts defined renaming components model signature morphism 
sentences universally quantified conditional indicated existence equations indicated mixed relation applications indicated 
see books burmeister bur reichel rei 

fragment sorted order logic described coste cos allows restricted unique existential quantification 
sentences universally quantified conditionals indicated expression brackets premise consists conjunction equations relations applications unique existentially quantified conjunction 
cos institution coherent order sorted signatures algebras theories introduced goguen meseguer gm conditional sort constraints yan 
institution left exact sketches gra bw graphs signatures interpreted category sets 
sentences allow state commutativity diagrams properties products limits sense category theory 
general choice institution determines just total operations available predicates sorting example partial operations notions built equality available kinds logical connectives quantifiers logic order higher order 
modal temporal object behaviour process relevance logics programming languages considered institutions 
thesis cover small part variety institutions 
concentrate institutions total order sorted partial algebras 
introduced chapter 
institutions liberal means initial models free constructions canonical semantics parameterized specifications exist 
important institutions allow theorem proving tools conditional term rewriting paramodulation complex tools institutions 
restricted realm institutions systematic study requires effort 
course step extend systematic study institutions 
doing find useful develop meta theoretical means systematically combine concepts different institutions see chapter 
easily get stuck overwhelming manifold existing formalisms 
moving logical systems large number institutions sketched previous section differ purpose expressiveness personal taste 
useless try construct universal institution serving purposes thing clumsy inconsistencies arise due combination concepts 
hand unsatisfactory specifications written different institutions totally unrelated 
typically team uses institution able relate need notion representation encoding institution 
technically leads category institutions representations 
compare expressiveness institutions 
chapter certain number institutions embedded chapter proves separation results 
outcome graph institutions representations represents objects morphisms category institutions representations 
specification problem find institution strong express problem weak support theorem provers specification language frameworks available 
topic multiparadigm specification languages advocated astesiano cerioli ac tarlecki tar allow heterogeneous specifications components written different institutions 
select representation institution graph get specification building operator translates specification institution tar 
important question new specification building operators commute old ones institution representations preserve specification building operators cer 
problem choose arbitrary fixed category logical systems literature described categories logical systems institutions gb maps institutions mes specification frames epo institutions simulations ac entailment systems maps mes proof calculi maps mes logics maps mes pre institutions transformations ss institutional frames wol institutions fs ss foundations poi galleries may context institutions paw parchments gb various notions morphisms st mos mtp related cerioli thesis cer 
meta level choose different types logical system resp 
categories logical systems 
objects category remain fixed reasonable choices morphisms 
follow neat structuring principle meta theory types logical system danger realm different languages object theories different logical systems 
meta theory help structure compare variety logical systems produce diversity notions 
probably arguments introducing new type logical system introducing new logical system important arguments show category logical systems serving equally purposes 
main argument having types logical system distinction proof theory model theory question proof theoretical logical components 
specification frames just consider specifications models 
institutions split specifications signatures sentences satisfaction relation models sentences provided 
parchments specify syntax sentences satisfaction defined inductively algebra term evaluators 
context institutions allow deal variable contexts substitutions 
hand entailment systems provide syntactical entailment relation sets sentences sentences proof calculi provide proofs entailment 
logics logical systems combine model theoretic proof theoretic components 
thesis concentrate model theory consider proof theory affected representations 
second argument having different categories logical systems purpose morphisms 
tarlecki tar distinguishes purpose said representation logical system 
orthogonal purpose building logical system captured notion institution morphism gb 
basis combination logical systems study interaction different concepts systematic way 
direction done chapter applied institutions institution graph 
implementations typically go institution semi morphisms st tar relate example high level specification language programming language 
third argument observation different degrees representation logical system possible 
chapter studied subclass representations called embeddings come close embeddings 
chapter argue examples require intermediate notion institution representation specification frames representation 
proofs proof theory combinations ent entailment log inst satisfaction model theory models ent fflffl log fflffl ent ls inst ls ent log inst frame fflffl different categories logical systems representations related forgetful functors distinction signatures sentences institution 
distinction necessary just specification frames abandons notion sentence theorem proving choices included signature part sentences 
need types arrow may mix distinction 
chapter show different types arrow generated basic type arrow monadic constructions categories logical systems effect automatically having functors relating new categories logical systems old ones 
moving categories logical systems alert reader may expected story continues considering arbitrary fixed thing consider moving things morphisms 
lesson category theory consider just objects relations 
idea iterated various levels previous sections 
don bother reach story soon 
different categories logical systems related functors 
cerioli meseguer cm describe kinds functors 
forgetful functors forget part logical structure logical system 
example institution yields generally poor specification frame just forgetting sentences satisfaction 

functors add part logical structure canonical way 
example chapter show add sentences satisfaction specification frame 
typically functors right adjoints forgetful functors 
adjoint pair functors relating different categories logical systems cerioli meseguer show missing logical components entailment system proof theory model theory borrowed logical system richer type transporting logical components representation map 
chapter borrowing idea applied sentences 
apart functors logical systems close forgetful functors forget things construct things things example construction institution parchment 
important relate new category logical systems existing categories logical systems order chance relate unify theories built categories 
levels abstraction introduced right studied literature 
kept way 
studying general theory concrete examples may lead theoretical notions content sticking concrete examples may result narrow horizon loss overview 
role model morphisms initial free models model morphisms play important role universal algebra 
generally defined way preserve structure models 
revert say model categories essentially determined morphisms implicitly define structure models 
hil extracts syntax terms model categories 
hand model morphisms important mathematical logic theory logical systems preserve satisfaction somewhat unrelated logical structure 
subject chapter entirely independent model morphisms 
true chapters 
definition embedding representations chapter essential notion model isomorphism counting identities morphisms possible useful embeddings excluded 
isomorphisms typically preserve satisfaction definition preservation amalgamation chapter required 
initial models provide canonical models specifications 
institutions characterized term generated confusing terms implied specification 
similar manner free functor semantics yields canonical parameterized data types 
loose semantics concepts initiality free generating constraints em state part model shall initial result free functor 
definition initiality freeness heavily class model morphisms 
institutions examined liberal means initial free models exist useful consider initiality freeness preserved representations see chapter categorical retractive simulations 
important model morphisms concerns negative results existence embeddings 
results category theoretic classification theorems ar 
category theoretic results reflected similar separation results show different levels expressiveness behave respect free constructions see chapter 
interested model morphisms just isomorphisms requirement preserve satisfaction category theoretic classification results ar longer apply 
results classification stability theory bal branches model theory 
scope thesis 
structure thesis chapter recalls categories logical systems needed study 
emphasis laid model theoretic types logical system institutions specification frames 
question combination theories treated syntactical composable signatures theories semantical amalgamation level 
concerning preservation composable theories amalgamation new definitions theorems arise 
chapter variety institutions total partial order sorted algebras algebraic theorems recalled literature 
chapter introduces different types representation institutions new 
types arrows generated general categorical construction product leads relation different resulting categories adjoint functors 
subclass representations type singled serve embeddings 
central notion comparison expressive power 
chapter uses theses types representation systematically embed institutions chapter 
levels expressiveness emerge 
chapter levels separated model theoretic properties properties parameterized data types 
chapter studies constructions interpret theories models institution denote complex objects 
example part construction kre interprets total partial algebras logic mss interprets predicate symbol typing relation 
interpretations captured notion categorical retractive representation weakening notion embedding 
levels proof theoretic complexity emerge 
chapter leaves path far switches new perspective combination logical systems 
formally entirely orthogonal chapters motivated conceptually overwhelming possibilities combine logical systems 
systematic notation institutions introduced chapter allows structure realm institutions bit 
chapter tries give semantic foundation notation 
chapter concludes thesis appendix contains category theoretical prerequisites 
chapter categories logical systems unique contributions broader area software foundations formal methods conceptual developments place position 
probably believe particularly pressing problem solve serious need formal interoperability different formal methods specification formalisms capacity move mathematical rigorous way different formalizations system rigorously integrated way different tools supporting formalizations 
meseguer mart oliet mom chapter categories logical systems specifications frames institutions entailment systems logics representations morphisms recalled literature related functors 
specification frames specification frames ehrig pepper orejas epo formalize specifications models specifications notions sentence satisfaction 
theory specification number axioms may infinite specification generally considered finite 
hand may confuse think theories closed semantical consequence required 
definition specification frame th mod consists 
category th theories 
functor mod th op gamma 
cat giving category models theory 
write oe oe reduct oe mod oe 
oe called oe expansion note models translated direction opposite direction theory morphisms 
tries expand models theory morphisms difficulty cat categories 
categories allowed class objects see section 
extension theory causes need supply additional components models 
clear additional components 
model extended theory easy restrict take reduct consisting components covered original theory 
definition specification frame representation gamma 
consists ffl functor phi th gamma 
th ffl natural transformation fi mod ffi phi op gamma 
mod composition representations gamma gamma 
gamma 
gamma gamma 
defined phi phi ffi phi fi fi ffi fi phi 
gives quasi category specification frames 
institutions institutions introduced goguen burstall gb split theories signatures sentences area logic starts definition institution sign sen mod consists ffl category signatures sign ffl functor sen sign gamma 
set giving set sentences signature ffl functor mod sign op gamma 
cat giving category models signature ffl sigma jsignj satisfaction relation sigma sigma theta sen sigma morphism oe sigma gamma 
sigma sign satisfaction condition sigma oe oe sigma holds model sigma sentence sen sigma oe stands sen oe 
call half satisfaction condition principle reduction preserves satisfaction rps half principle expansion preserves satisfaction eps 
rps pre institution data institution rps required 
semantical entailment defined usual sen sigma gamma sen sigma write gamma sigma models satisfy gamma satisfy 
definition institutions sign sen mod sign sen mod plain institution representation tar plain map institutions mes phi ff fi gamma 
consists composition morphisms written applicative order fi phi natural transformation fi phi sigma fi phi sigma terminology pre institutions rps taken scollo ss slight modification scollo pre institutions model functors going set keep going cat 
ffl functor phi sign gamma 
sign ffl natural transformation ff sen gamma 
sen ffi phi ffl natural transformation fi mod ffi phi op gamma 
mod representation condition satisfied mod phi sigma sen sigma phi sigma ff sigma fi sigma sigma split representation condition rps eps half 
representation rps pre institutions rps half required 
phi ff fi gamma 
phi ff fi gamma 
institution representations 
composition ffi gamma 
consists components ffl phi phi ffi phi ffl ff sigma ff phi sigma ffi ff sigma ffl fi sigma fi sigma ffi fi phi sigma gives quasi category plaininst institutions plain representations category rps pre institutions plain representations 
call representations plain order distinguish complex forms representations introduced chapter 
example rps pre institution institution sorted equational logic behavioural satisfaction 
ehrig treat logical system specification frame proof specification frame goes lines proof th functor 
definition define functor frame gamma 
institutions specification frames takes theories specification frame just signatures institution frame sign sen mod just sign mod general poor specification frame frame phi ff fi phi fi 
definition functor bit richer really combines signatures sentences get theories 
rps pre institution sign sen mod induces category theories axiom preserving theory morphisms th 
objects theories sigma gamma sigma jsignj gamma sen sigma gamma necessarily closed consequence 
morphisms oe sigma gamma gamma 
sigma gamma th signature morphisms oe sigma gamma 
sigma oe gamma gamma axioms mapped axioms 
extract components theory setting ax sigma gamma gamma define forgetful functor sign th gamma 
sign simply projects component 
extend functor mod sign op gamma 
cat mod th th op gamma 
cat mod th sigma gamma full subcategory mod sigma consisting sigma gamma oe sigma gamma gamma 
sigma gamma th mod th oe restriction mod oe mod th sigma gamma 
show restriction mod oe really ends mod th sigma gamma 
mod th sigma gamma sigma gamma oe gamma gamma sigma oe gamma get rps half satisfaction condition extended sets sentences oe sigma gamma oe mod th sigma gamma 
specification frame th th mod th 
th extended representations rps pre institution representation phi ff fi gamma 
phi ff ff extension theories phi map sigma gamma sign phi sigma ax phi sigma ff sigma gamma 
similar argument rps half representation condition fi sigma easily restricted model categories theories 
restriction denoted fi th sigma gamma putting th phi ff fi th th gamma 
functor 
composing obvious inclusion plaininst get functors plaininst denoted frame th respectively 
composable signatures amalgamation species structure say widgets result interconnecting system widgets form super widget corresponds colimit diagram widgets morphisms show interconnected 
gog want apply combine signatures theories assume signature categories cocomplete 
combination reflected semantics model functor continuous 
common institutions unsorted logics type theories name semantical objects example unsorted logic carrier set left implicit 
generally destroys continuity model functor 
model functors institutions preserve subclass colimit multiple pushouts see 
cases multiple pushouts suffice combination signatures theories talk 
results easily generalize colimits note colimits generated multiple pushouts initial objects 
definition logical system said finitely composable signatures resp 
theories talk specification frames iff signature resp 
theory category finite canonical multiple pushouts 
logical system representation said preserve finitely composable signatures resp 
theories iff phi component preserves finite multiple pushouts 
category logical systems defined comp denote subcategory consisting objects composable theories representations preserving 
definition specification frame resp 
institution resp 
rps pre institution composable theories resp 
signatures amalgamation model functor mod preserves multiple pullbacks multiple pushouts th resp 
sign taken multiple pullbacks cat 
note multiple pullback category cat objects resp 
morphisms objects resp 
morphisms component categories see 
clear preservation amalgamation representations mean 
syntactical side representations preserve multiple pushouts signatures 
corresponding condition semantical side 
straightforward answer shall possible reduct functors mixtures reducts model translations 
technical requirement theory morphism oe gamma 
diagrams mod mod mod phi mod phi mod oe oo fi oo fi oo mod phi oe oo commute guaranteed naturality fi pullbacks cat 
property holds fi natural isomorphism 
fi pointwise equivalence categories examples fi pointwise equivalence isomorphism 
apply condition skeletons model categories yields say phi fi preserves amalgamation isomorphism theory morphism oe gamma 
diagram allows amalgamation isomorphism 
means mod phi mod fi mod oe unique isomorphism model mod phi mod phi oe fi properly functors logical systems require satisfaction defined skeletons model categories satisfaction invariant model isomorphisms 
amal restriction specification frames having amalgamation representations preserving amalgamation 
amal restriction rps pre institution amalgamation satisfaction invariant isomorphism representations preserving amalgamation means condition holds signature morphisms 
similarly plaininst amal proposition th gamma 
restricted th comp gamma 
comp proof known fact composable signatures induce composable theories see gb 
sigma gamma sigma gamma oe gamma gamma 
sigma gamma source theories th sigma sigma ae gamma 
sigma sigma ae gamma gamma 
sigma colimit sign signature category colim cone tip sigma ae gamma ae gamma injections ae ae cone sigma gamma sigma gamma 
sigma sigma gamma gamma 
sigma colimiting property signature category unique signature morphism sigma gamma 
sigma ffi theory morphism ae gamma gamma gamma theory morphism 
phi ff fi gamma 
rps pre institution representation preserving composable signatures 
show th phi ff fi th preserves composable theories 
source phi ff tip colim phi sigma ff sigma ae gamma ae gamma tip colim phi sign phi ae ff sigma gamma phi ae ff sigma gamma tip colim phi injections preserved directly follows preserving composable signatures 
order carry semantical side amalgamation show proposition may interest proposition rps pre institution composable signatures equivalent satisfies eps institution amalgamation 
th amalgamation 
proof sigma gamma sigma gamma oe gamma gamma 
sigma gamma source th 
proposition multiple pushout sigma gamma sigma gamma ae gamma 
sigma gamma sigma gamma ae gamma gamma 
sigma gamma 
mod sigma gamma family models oe fixed mod sigma gamma 
take amalgamation mod sigma 
show sigma gamma ae gamma ae gamma 
follows ae sigma gamma ae sigma gamma eps half satisfaction condition 
signature morphism oe sigma gamma 
sigma mod sigma sen sigma oe sigma 
consider pushout theories sigma sigma sigma sigma oe oe fflffl fflffl oe th 
oe oe mod sigma oe 
oe oe oe oe sigma oe 
amalgamation follows th having amalgamation 
proposition rps pre institutions amalgamation satisfaction closed model isomorphism 
rps pre institution representation gamma 
preserving composable signatures equivalent satisfies eps preserves amalgamation 
th preserves amalgamation 
proof assume rps pre institution representation phi ff fi gamma 
satisfies eps preserves amalgamation signature morphisms oe sigma gamma 
sigma diagram mod sigma mod sigma mod phi sigma mod phi sigma mod oe fi sigma oo fi sigma oo mod phi oe oo amalgamation isomorphism 
show theory morphisms oe sigma gamma gamma 
sigma gamma th diagram mod sigma gamma mod sigma gamma mod phi ff sigma gamma mod phi ff sigma gamma mod oe oo fi sigma gamma oo fi sigma gamma oo mod phi ff oe oo allows amalgamation isomorphism 
easy mod phi ff sigma gamma mod sigma gamma fi sigma gamma mod oe amalgamation signature morphism oe unique isomorphism model mod phi sigma mod phi ff oe mod phi oe fi sigma gamma fi sigma remains show phi ff sigma gamma phi sigma ff sigma gamma model 
phi sigma ff sigma gamma follows fi sigma gamma eps half representation condition invariance satisfaction model isomorphisms 
mod phi sigma sen sigma fi sigma sigma 
inclusion sigma sigma 
th preserves amalgamation mod sigma mod sigma mod phi sigma mod phi sigma ff sigma mod oo fi sigma oo fi sigma oo mod phi oo allows amalgamation 
fi sigma fi sigma mod phi sigma ff sigma ff sigma 
preserves amalgamation follows th preserving amalgamation 
corollary th plaininst gamma 
restricted th plaininst amal gamma 
amal prove representations model translation pointwise equivalence categories preserve amalgamation 
proposition phi fi gamma 
specification frame representation phi ff fi gamma 
institution representation phi preserving multiple pushouts fi pointwise equivalence categories 
preserves amalgamation 
proof consider case specification frames institutions result follows considering frame 
fi inverse isomorphism fi oe gamma 
theory morphism mod mod mod phi mod phi fi fflffl mod oe oo fi fflffl fi oo fi oo mod phi oe oo mod phi mod fi mod oe put fi 
fi fi fi mod phi oe fi fi mod phi oe fi fi mod oe fi fi fi mod oe fi fi uniqueness property follows similarly 
propositions results obtained chapter suggest rps half satisfaction condition syntactic nature eps half semantical condition amalgamation 
entailment systems entailment systems introduced meseguer mes closely related institutions fs 
capture aspects proof theory 
definition entailment system sign sen consists ffl category sign signatures ffl functor sen sign gamma 
set giving set sentences signature ffl sigma jsignj entailment relation sigma sen sigma theta sen sigma properties satisfied 
reflexivity sen sigma sigma 
monotonicity gamma sigma gamma gamma gamma sigma 
transitivity gamma sigma gamma sigma gamma sigma 
translation gamma sigma oe sigma gamma 
sigma sign oe gamma sigma oe definition entailment systems sign sen sign sen entailment systems representation called plain map entailment systems meseguer consists ffl functor phi sign gamma 
sign ffl natural transformation ff sen gamma 
sen ffi phi property satisfied gamma sigma ff sigma gamma phi sigma ff sigma representation called conservative addition ff sigma gamma phi sigma ff sigma gamma sigma composition representation institution representation model translation omitted 
gives category 
logics logics mes combine model theory proof theory definition logic tuple sign sen mod 
sign sen entailment system denoted ent 
sign sen mod institution denoted inst 
soundness condition satisfied sigma jsignj gamma sen sigma sen sigma gamma sigma gamma sigma logic complete addition gamma sigma gamma sigma logic representation phi ff fi gamma 
just institution representation phi ff fi inst gamma 
inst entailment system representation phi ff ent gamma 
ent 
composition taken institution representations gives category logics logic representations 
ent log easily extended functors ent gamma 
inst gamma 
plaininst 
functor plaininst gamma 
logic institution 
defined sign sen mod second satisfaction semantical entailment 
leaves representations unchanged 
representation id sign id sen id mod gamma 
inst unit adjunction inst see cm 
transporting logical structure maps state fundamental definition cerioli meseguer cm categories ffl gamma 
adjoint situation 
idea categories logical systems having richer structure forgetting richer structure left adjoint 
morphism gamma 
pullback oo gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma jd oo exists say admits extension gamma 
called extension roughly speaking constructed enriching features translated cerioli meseguer show situation arrows fig 
frame plaininst gamma 

application re theorem provers 
known theorem ac theorem gamma 
institution representation surjective model components 
semantical entailment preserved gamma sigma iff ff sigma gamma phi sigma ff sigma proof gamma sigma iff mod sigma sigma gamma implies sigma iff surjectivity mod sigma fi sigma sigma gamma implies fi sigma sigma iff representation condition mod sigma phi sigma ff sigma gamma implies phi sigma ff sigma iff ff sigma gamma phi sigma ff sigma re theorem prover designed proofs cerioli meseguer cm reformulate terms institutions logics institution representation phi ff fi gamma 
inst logic take pullback inst jl oo gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma jl oo cm proposition 
complete 
fi sigma surjective sigma jsignj ent conservative representation underlying entailment system gamma sigma ff sigma gamma phi sigma ff sigma re entailment system liberality act approach em em specification parameterized data types follows parameterized theory theory morphism gamma 

gamma 
parameterized data type pair mod gamma 
mod functor id mod gamma 
mod ffi natural transformation 
see sst comparison approaches parameterized data types typically sort constraint free generating constraints reachability term generating constraints 
canonical obtained free constructions gamma 
called free left adjoint mod unit model morphism gamma 
exists unique morphism gamma 
definition specification frame called liberal theory morphism oe gamma 
mod th oe left adjoint 
institution called liberal specification frame th liberality means free constructions needed act style parameterization module concepts em exist 
initiality freeness constraints state part theory interpreted fixed canonical way 
restriction liberal institutions effect theorem proving feasible conditional term rewriting paramodulation known liberal institutions 
chapter variety institutions total partial order sorted algebras need systematic treatment partial operations clear practice 
able handle errors exceptions account non terminating operations 
approaches deal literature appears fully satisfactory 
feferman fef section formally introduce variety institutions 
emphasis laid institutions sorted algebras way capture need having operations defined partially 
list institutions limited liberal institutions universally quantified conditional axioms sentences contains expressive liberal institutions studied literature 
note strong connection liberality axioms universally quantified conditional see tar 
relational partial conditional existence equational logic recall institution rp 
relational partial conditional logic partial algebraic systems universal horn sentences existential atomic formulas see bur bur 
institution semantics sentences leads valued logic partial algebras see bur 
undefinedness terms falsehood relations distinguished possible valued logics 
overview different semantics justification valued semantics far cmr 
finite signature sigma op pop rel consists ffl finite set sort symbols ffl finite theta indexed set op total operation symbols ffl finite theta indexed set pop partial operation symbols ffl finite indexed set rel relation symbols 
set strings called arity operation symbol op written op gamma 
pop written pop gamma 

note unrestricted overloading example may op gamma 
op op gamma 
op sequel deal finite signatures contrary stated explicitly results generalize infinite case 
signature morphism oe op pop rel gamma 
op pop rel consists ffl map oe gamma 
ffl map oe op gamma 
op oe oe ffl map oe pop gamma 
pop oe oe ffl map oe rel gamma 
rel oe sigma model sigma algebra consists ffl family carrier sets ffl family op aw gamma 
op gamma op total operations ffl family pop dom popa gamma 
pop gamma op partial operations dom popa aw domain popa ffl family ra aw rel relations 
sigma homomorphism gamma 
family gamma 
total functions op gamma 
op aw op sn pop gamma 
pop aw dom popa popa implies sn dom sn rel aw ra sn rb sigma op pop rel oe sigma gamma 
sigma signature morphism sigma model oe sigma algebra ffl oe ffl opa oe op op op oe extension oe strings abbreviate theta delta delta delta theta sn aw ffl popa oe pop pop pop ffl ra oe rel similarly homomorphisms define oe oe variable system sorted set pairwise disjoint 
variable system set sigma sigma terms sort inductively defined 
sigma 
op sigma op gamma 
op sigma 
pop sigma pop gamma 
pop sigma third clause omitted get set total terms sigma denoted tot sigma 
note unrestricted overloading parsing terms ambiguous explicit sort annotations 
cases restricted forms overloading omit sort annotations form terms 
sigma equipped algebraic structure putting ffl op sigma op op gamma 
op ffl pop sigma pop pop gamma 
pop ffl sigma rel sigma term algebra sigma variables valuation gamma 
map variable system sigma algebra valuations homomorphic extensions dom gamma 
set dom sigma interpretable terms 
variable interpretable 

op op gamma 
op sigma interpretable dom case define op opa 

pop pop gamma 
pop sigma interpretable dom interpretable dom popa case define pop popa 
sentence signature sigma op pop rel conditional formula delta delta delta atomic formulas kinds terms sort sigma rel term sort sigma 
sentence translation signature morphisms oe sigma gamma 
sigma defined way sigma sentence delta delta delta translate variable system oe oe oe 
disjointness required 
define valuation gamma 
sigma oe oe putting sigma gamma 
sigma oe oe easily extended atomic formulas letting act component terms 
oe oe delta delta delta satisfaction defined follows sigma valuations gamma 
satisfy premises satisfy 
satisfaction atomic formulas defined defined equal defined ra oe contain exactly variables different sorts signature morphism oe sigma gamma 
sigma sigma model correspondence valuations gamma 
oe oe gamma 
sigma sigma oe oe oe fflffl oe commute category sorted sets sorted partial functions defined iff defined case 
satisfaction condition follows easily 
prove satisfaction condition may simplified presenting institution parchment see chapter 
sets variables notation means valuations gamma 
considered arguments operations op theta delta delta delta theta gamma 
restrictions rp 
natural restrictions rp 
defined immediately partial conditional existence equational logic subinstitution rp defined requiring rel signatures sigma op pop rel 
partial existentially conditioned existence equational logic subinstitution defined requiring sentences form delta delta delta premises contain definedness conditions 
introduced burmeister bur 
weak varieties jar jar restricted liberal case form 
institution signatures models 
sigma sentence form sigma satisfaction defined follows sigma iff valuations gamma 
defined defined case equal 
strong equations cited literature quite frequently see bur hoe kle 
note literature total operations omitted presence partial operations total operation viewed partial operation satisfying pop pop existence equations available 
existence equations fact total operations slightly weaker algebra totally undefined partial operations model sentence containing operation symbols sides happen presence total operation op arity partial operation pop equation fx op pop forces pop total fx pop pop holds 
hep hierarchical equationally partial theories defined reichel rei institution signatures sigma op pop def consisting signatures op pop founded partial order pop mapping def assigns pop gamma 
pop finite set existence equations def pop sigma theta sigma partial operation symbols occurring def pop strictly pop signature morphisms additional requirement def oe pop oe theta oe def pop sigma models op pop models dom popa equals aw gamma 
def pop reducts sentences satisfaction defined 
note reichel theory morphisms defined rei slightly general theory morphisms hep 
reichel defines specification frame 
signatures sentences separated slight restriction 
freyd essentially algebraic theories fre essentially freyd define signatures reducts 
define restrictions hep hep restriction signatures hierarchy operations height domain partial operation defined total operations 
axioms form delta delta delta weak equation satisfied case definedness sides equal 
hep restriction hep unconditional weak equations hep 
restriction hep conditional equations total terms premises 
restrictions rp 
restrict rp 
get institutions turn strictly weaker expressiveness 
institution relations partiality atomic formulas axioms total flat partial rel 
equa partial equa eq 
tions cations rp 
conditional conditional rp 
conditional conditional 
conditional conditional rp unconditional unconditional rp unconditional unconditional unconditional unconditional rp rp sentences added 
flat partiality means atomic formulas axioms form pop consist total operation symbols 
nested partiality partiality combined relations 
indicated sign 
note case give definition satisfaction just terms total homomorphic extensions valuations partial operations symbols applied total terms valuation gamma 
satisfies op dom opa opa 
similarly relations 
sign restriction equations total terms 
concerning weak equations introduce extends allowing unconditional weak equations additionally allows weak equations conditioned existence equations 

horn clause logic basis specification language gm pad restriction 
axioms relational basis logic programming prolog llo 
conditional equational logic equational logic known institutions em 
institutions turn equivalent expressiveness known ones 
restrictions special interpretation equational type logic etl due scollo mss plain subinstitution 
etl signature sorted 
signature exactly relation symbol typing relation binary 
models reducts sentences satisfaction inherited 

unified algebras due mosses mos form subinstitution th 
simple subinstitution 

unified algebra signature sorted 
theory op rel gamma op rel contains signature sorts opns theta gamma 
theta gamma 
rels theta theta gamma consists exactly axioms axioms xjy xjy xjy xj xjy xjz op op op gamma 
op models reducts sentences satisfaction inherited th 

course captures part intended meaning etl typing relation special meaning 
intended meaning cases formalized institution representation codomain resp 
etl see discussion categorical retractive simulations chapter 
limit theories 
extension institution 
signatures sigma op rel 
signatures 
signature morphisms models reducts inherited 

sigma sentences form delta delta delta delta delta delta disjoint sorted variable sets atomic formulas terms atomic formulas terms atomic formulas may relation applications equalities 
coste limit theories cos general sentences shown equivalent conjunctions sentences form 
satisfaction defined follows sigma delta delta delta delta delta delta valuations gamma 
satisfying exists unique extension gamma 
satisfies 
restriction 
sentences conditional sentences form delta delta delta atomic formulas terms terms unconditional sentences form delta delta delta atomic formulas terms algebraic notions propositions algebraic notions apply rp 
restrictions may trivial restricted institutions example homomorphisms closed 
sigma algebra subset closed total operations relative subalgebra induced defined follows note mosses defined kinds reducts 
forgetful functors forgetful functors formalized subinstitution th 

ffl opa opa op gamma 
op ffl pop gamma 
pop dom popa dom popa dom popa popa popa ffl rel ra ra congruence sigma algebra relation theta reflexive symmetric transitive compatible operations 
means op gamma 
op aw resp 
op gamma 
pop dom opa jw op opa smallest congruence delta diagonal identity relation 
congruence generated relation theta denoted congruence containing exists property congruence preserved arbitrary intersections relations 
sigma homomorphism gamma 
kernel ker defined ker congruence 
sigma homomorphism gamma 
called full pop gamma 
pop aw sn dom sn implies dom opa rel sn rb implies ra stated succinctly hw theta graph pop graph hw theta aw theta hw ra rb hw aw sigma homomorphism gamma 
called closed pop gamma 
pop aw sn dom dom opa rel sn rb ra stated succinctly gamma dom dom opa gamma rb ra easily shown closed homomorphism full 
definition sigma algebra congruence jj factorization short equivalence class nat gamma jj natural projection mapping impose algebraic structure jj get sigma algebra rel aw ra jw pop gamma 
pop analogously dom pop aw dom popa jw dom pop dom popa jw pop pop op gamma 
op aw op op way get quotient burmeister bur proves construction defined nat gamma 
full surjective sigma homomorphism ker nat proposition theories sigma gamma coequalizers mod just quotients 
proof surjective homomorphisms preserve existence equations table bur 
quotient taken mod sigma satisfies gamma 
property follows diagram completion lemma lemma bur 
proposition theories sigma gamma categorical intersections mod constructed relative subalgebra intersection carriers 
proof bur pullbacks mod sigma constructed pullbacks underlying sets 
particular intersections constructed relative subalgebra intersection carriers 
gamma gamma 
valuation intersection know ffi ffi defined equal similarly assuming inclusions ffi ffi similarly 
family morphisms gamma gamma 
gamma 
theta delta delta delta theta denote unique morphism gamma 
theta delta delta delta thetab gamma gamma 
gamma gamma 
left exact sketches institution left exact sketches see gra bw signatures sigma start gamma gamma gamma 
gamma gamma 
finite directed graph possibility multiple edges nodes map assigning vertex object keep close categorical terminology edges arrow signature morphisms oe gamma 
graph homomorphisms oe gamma 
oe ffi ffi oe 
set signature underlying graph category sets assigning set identity function set 
sigma model signature morphism sigma gamma 
set model morphism natural transformation gamma 
note defined target category 
oe sigma gamma 
sigma signature morphism mod oe functor ffi oe composing oe 
sentence finite diagram graph homomorphism gamma 
finite index graph finite cone finite diagram gamma 
object arrows gamma 
jij 
sentences translated oe composing oe sen oe oe ffi 
model sigma gamma 
satisfies diagram takes commutative diagram set satisfies cone takes limiting cone set 
theories called left exact sketches see gra 
order sorted algebra sort constraints cos institution coherent order sorted signatures algebras theories conditional sort constraints introduced goguen meseguer gm 
order signatures triples sigma op partial order op sorted signature monotonicity condition satisfied op imply note condition excludes overloaded constants order sorted signatures generalization sorted signatures 
signature called regular op arity op greater equal condition implies rank arity op arity greater equal see gm 
signature called coherent regular locally filtered 
means connected component filtered elements connected component common upper bound 
signature morphisms oe op gamma 
op sorted signature morphisms oe op gamma 
op satisfy additional properties 
implies oe oe monotonicity 
op implies oe op op oe op op preservation overloading signature morphism oe op gamma 
op regular signatures said preserve regularity op oe applied arity op yields arity oe op op oe 
op models op models 
implies 
op imply opa aw gamma 
equals opa aw gamma 
aw monotonicity 
homomorphisms gamma 
sorted homomorphisms gamma 
imply 
reducts defined 
shown hn signature morphism preserves overloading corresponding reduct functor preserves monotonicity algebras case signature morphisms condition preservation overloading 
sorted variable system set sigma sigma terms sort inductively defined 
sigma 
op sigma op gamma 
op sigma 
sigma sigma straightforward impose algebraic structure sigma 
note different sorted case sort annotations 
overloading clause term different sorts 
proposition regular signatures sigma sigma sorted signature consisting sort set operation symbol op gamma 
op gamma 
op plus additional coercion operation symbols gamma 
term sigma sort ls sigma gm sort parse lp sigma sigma gm 
restrict signature morphisms preserving regularity constructions natural sigma 
proof defined inductively follows variable unique sort ls sigma due disjointness condition variable systems lp sigma op sigma induction hypothesis sort take term formation rules op regularity rank op desired sort op lp sigma sn lp sigma sort parse signature morphisms preserve regularity ls lp natural sigma 
definition sentences signatures containing sort constraints yan quite complex parse terms result annotated term plus sort constraint conditions lead partial homomorphic extensions assignments 
resembles satisfaction partial algebras clear satisfaction condition holds case yan proved restricted case simpler way get institution put conditional sort constraints signatures sentences 
course effect having typed terms due sort constraints lost 
cos institution coherent signatures signature morphisms preserving regularity order sorted algebras models sigma sentences conditional formulas sorted system variables atomic formulas kinds sigma terms variables ls sigma ls sigma connected component 
sigma term variables sort connected component ls sigma 
sentence translation defined inductively usual 
sigma algebra satisfies conditional axiom valuations satisfy premises satisfy 
satisfaction atomic equations defined usual valuation gamma 
satisfies atomic formula homomorphic extension sigma see gm 
institutions follows results yan 
define restrictions 
signature noetherian ordering sorts infinite strictly increasing sequence sorts 
signatures connected component sorts maximum element proposition gm 
restriction severe finite coherent order sorted signature 
severe requirement signature morphisms preserve maximal elements connected components 
monotonicity implies connected components joined maximal elements identified 
excludes signature morphism example inclusion specification natural numbers specification natural numbers subsort integers 
outlined restriction cos 
advantage cos simpler embedding rp 
see chapter composable signatures see proposition 
restrict cos conditional equations sort constraints get cos 
restriction unconditional equations denoted cos restriction unconditional equations sort constraints denoted cos 
rewriting logic meseguer rewriting logic mes glance fit collection institutions introduced chapter 
question embeddability institution representation concerns behaves strange 
fact notion embedding developed chapter equational logic embeddable rewriting logic conditional equations rewriting logic conditional rewrites different semantics 
rewriting logic universal framework representing entailment systems institutions neat representation model categories desired 
furthermore rewriting logic embeddable institutions studied chapter liberal 
see consider rewriting theory consisting sort constants rewrite models theory categories distinguished objects exists morphism model morphisms functors gamma 
preserving distinguished objects necessarily morphism assume initial category models 
category consisting objects serve distinguished objects apart identities morphisms gamma 
initiality functor gamma 
preserving define gamma 
objects morphisms computes value morphism swaps morphism contradicting initiality 
rewriting logic studied general order theories scope thesis 
specification frame called rewriting logic meseguer different th applied institution called rewriting logic liberal 
theories models institution rewriting logic allows model morphisms preserve natural transformations required exist rewrites theory 
clearly come institution model morphisms restricted presence sentences institutional framework sentences considered specify full subcategories models 
specification frame rewriting logic embeddable easily say noting theory small categories specified see rei 
composable signatures amalgamation proposition rp 
restrictions composable signatures 
proof easy generalization proof cocomplete signature category 
proposition composable signatures 
proof signature category just model category theory sorts opns start gamma 
gamma 
axioms start model category locally finitely presentable corollary cocomplete definition 
cos know signature category multiple pushouts 
hn show inclusion category order sorted signatures monotonicity coherence condition category coherent order sorted signatures preserve pushouts 
generally theory signature colimits complicated order theoretic considerations come ordering sorts 
signature category property signatures corresponding preservation property signature morphisms possible signature category general cocompleteness theorem 
proposition composable signatures 
proof consider specifications signature categories theories abbreviates sig sorts op opns gamma 
theta gamma 
rels gamma 
op theta theta sig rels theta axioms reflexivity transitivity antisymmetry op op op gamma 
op gamma 
monotonicity sequel lr abbreviate op 
partial opns op theta gamma 
axioms op op lr op gamma 
op op lr lr op op lr op lr lr gamma 
lr op op lr op gamma 
lr opns max gamma 
axioms max max max max max mod directly specifies category order sorted signatures signature morphisms preserving overloading necessarily regularity difference global space operation symbols 
fact hn global treatment operation symbols equivalent standard local global space op operation symbols union local sets op op op gamma 
exclude elements op op op gamma 
take full subcategory mod consisting algebras op op non junk related op gamma 
isomorphic category order sorted signatures signature morphisms preserving overloading 
operation symbol op gamma 
operation seen yield rank op arity op op op 
axiom schema just states conditions op gamma 
definedness conditions second axiom schema states delivers rank third axiom schema states delivers rank op forth axiom schema states rank rank op arity full subcategory mod consisting signatures non junk operation symbols isomorphic category regular signatures signature morphisms preserving regularity 
likewise full subcategory mod consisting signatures non junk operation symbols seen isomorphic category noetherian coherent signatures signature morphisms preserving regularity maximal elements connected components 
mod locally finitely presentable corollary cocomplete definition 
full subcategory consisting signatures non junk operation symbols just deletes junk operation symbols 
coreflection condition shown noting signature morphism oe sigma gamma 
sigma signature junk operation symbols viewed signature morphism coreflection sigma op gamma 
implies oe op oe gamma 
oe operation symbols image non junk 
proposition full subcategory mod consisting signatures non junk operation symbols cocomplete signature category 
concerning amalgamation rhode wolter prove theorem specification frame th amalgamation 
proposition carries institution proposition subinstitutions 
see remaining institutions amalgamation corollary 
liberality institutions section introduced parameterized data types liberal institutions 
prove introduced institutions liberal 
show carries institutions see corollary 
fact rp 
restrictions parameterized theory gamma 
free exists 
denote 
rp 
restrictions liberal 
proof follows general theorem tarlecki tar 
need definite construction follow reichel book rei em 
gamma 
parameterized theory model 
constructed follows sigma gamma sigma sigma augmented constants gamma gamma plus axioms op op dom opa op op pop ra rel 
write sigma sigma sigma sigma putting sigma gamma sigma algebra terms usual term algebra operations relations rh quotient full surjection gamma gamma 
kernel ker chapter different types arrow logical systems observed concept category essentially auxiliary basic concepts essentially functor natural transformation 
eilenberg mac lane chapter considered distinction proof theory model theory main argument having types logical system 
argument just theories having notion axiom specification frames semantic point view amenable theorem proving 
contexts need institutions distinction notion signature sentence 
choices included signature part sentences 
example type theories hhp typing information put sentences hep theories rei typing definedness axioms put signatures 
problem arises considering representations 
plain representations institutions entailment systems keep signatures sentences separated occur contexts typically trivial sub logical systems 
representations called embeddings plain 
meseguer notion simple institution representation entailment systems mes solution signatures mapped theories sentences mapped sentences 
contexts suffice 
need notions representations located simple institution representations specification frame representations 
monads adjunctions known simple representations new notions representations institutions introduced 
vary strictness keeping signature sentence distinction 
case briefly show application different logical systems 
applications chapter 
short version chapter published published mos 
notion embedding institutions published km 
transactions american mathematical society 
theory monad simple representations institutions introduce meseguer simple institution representations scratch structured way monadic construction enrich target institution 
compared plain representations simple representations greater flexibility 
constructing representation may added expressiveness enriched target institution 
definition introduced functor th plaininst gamma 
institution yields category theories th model functor starting category 
easy define sentence functor starting th just composing sen sign gamma 
set sign th gamma 
sign 
similarly satisfaction theory just satisfaction sign 
get functor plaininst plaininst abuse language denote th action representations defined follows th phi ff fi phi ff ff sign fi th 
obvious inclusion representation gamma 
th maps sigma sigma projection th th gamma 
th mapping sigma gamma gamma sigma gamma gamma 
identity sentences models 
proposition th monad plaininst 
proof identity laws follow identity union associativity law union associative 
definition monad th th plaininst induces kleisli category inst plaininst th institutions simple institution representations recall objects kleisli category plaininst morphisms gamma 
representations gamma 
th plaininst allowed map signature just signature theory gives flexibility setting representations institutions 
kleisli adjunction plaininst inst th th oo th just inclusion plain representation simple representation th essentially th typical example simple institution representation partial order logic total order logic partial functions mapped total functions plus partial congruence relation sentences translated replacing existential equality partial congruence models translated factoring modulo congruence 
phi sigma contain congruence axioms example 
translation allows re proof theory borrowing see cmr 
plenty simple representations see cer cm ac mes chapter 
corollary repeat section plaininst replaced plaininst amal thing need prove plaininst amal preserve composable signatures amalgamation 
immediate 
form phi id id sigma gamma gamma sigma gamma gamma oe gamma gamma 
sigma gamma gamma source signature category th th 
notation proof proposition show preserves composable signatures phi tip colim phi id tip colim sign id ae gamma phi id id tip colim sign sign id ae gamma id ae gamma tip colim sign sign id ae gamma id ae gamma tip colim sign sign ae gamma gamma tip colim phi preservation amalgamation follows proposition 
gives category inst amal institutions amalgamation simple institution representations preserving amalgamation 
likewise enlarging source target th get category rps pre institutions simple rps pre institution representations 
conjunctive monad conjunctive representations institutions simple representations institutions cover desirable representations institutions 
second step allow sentences mapped single sentences finite sets sentences 
institution sign sen mod enriched institution sign sen mod sen fin ffi sen composition sen functor fin set gamma 
set giving set finite subsets sigma iff sigma 
construction easily turned monad conj time acting inst 
definition morphisms kleisli category inst inst conj called conjunctive simple representations institutions 
conjunctive representations needed course target institution conjunction available 
consider representation strong equation mapped gamma 
gamma 

complex examples studied chapter 
extend re theorem provers cf 
theorem simple conjunctive representations corollary gamma 
conjunctive institution representation surjective model components 
gamma sigma iff ff sigma gamma sign phi sigma ff sigma ff sigma finite set sentences 
section applied inst amal 
theory extension monad weak representations institutions need complex representations institutions 
examples possible map theories theories 
definition weak rps pre institution representation gamma 
specification frame representation th gamma 
th 
composition 
gives category rps pre institutions weak rps pre institution representations 
full subcategory generated institutions denoted institutions weak institution representations 
cases weak representation shown modular 
means mapping theories theories split maps mapping signatures theories mapping sentences extensions theories 
construction just monad previous sections comes naturally adjunction specification frames institutions 
unfortunately adjunction specification frames institutions general 
enlarge restrict categories 
case enlargement 
strictly speaking slightly restrict things composable signatures resp 
theories 
looking adjoint th gamma 
adds sentences specification frames canonical way 
idea consider specification frame theory extensions gamma 
sentences institution 
theory extension arbitrary theory morphism reduct functor restrict models theory crucial property sentences 
technically mod shall injective objects 
adjoint functorial theory extensions need representations preserve amalgamation 
defer requirement injectivity property case amalgamation 
proposition functor th gamma 
right adjoint theory extension functor 
data adjoint situation ffl th comp gamma 
comp proof specification frame th mod set th sen mod sen set theory morphisms gamma 
th 
sentence gamma 
translated signature morphism theory morphism oe gamma 
gamma 
pushout oe fflffl gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma fflffl oe gamma gamma gamma gamma gamma gamma gamma gamma gamma 
iff mod iff mod show rps half satisfaction condition 
oe gamma 
signature morphism gamma 
means mod putting oe mod oe ffi ffioe oe witness oe gamma 
composable signatures follows immediately having composable theories 
morphisms phi fi phi phi fi 
show rps half representation condition 
phi phi phi gamma gamma gamma 
phi 
repeat argument mod oe replaced fi mod oe replaced fi show fi gamma 
phi fi preserves composable signatures follows phi fi preserving composable theories 
unit gamma 
th adjunction mapping signature sigma theory sigma mapping sigma sentence theory extension sigma 
sigma leaving models unchanged 
representation condition preservation composable signatures naturality shown easily 
counit ffl th gamma 
adjunction defined phi fi ffl theory tt gamma gamma 
take phi ae gamma 
ae gamma 
colim gamma gamma 

ffl oe tt gamma 
tt tt gamma gamma 
theory morphism oe gamma 
square oe fflffl fflffl ae oe ae pushout 
ae gamma 
ae gamma 
multiple pushout tt similarly tt triangle commutes square oe gamma 
ae gamma 
oe gamma gamma 
ae gamma gamma gamma 
cocone tt cocone induces theory morphism take phi oe 
ffl preservation composable theories shown complex chasing diagrams commutation colimits dual hs 
ffl fi tt just mod ae mod gamma 
mod 
ffl naturality ffl follows phi preserving multiple pushouts naturality fi 
show adjointness prove gamma gamma gamma gamma 
th ffl gamma gamma gamma gamma 
id th th gamma gamma gamma gamma gamma gamma 
th th ffl th gamma gamma gamma gamma gamma gamma 
th id th equation trivial signatures models 
sentences gamma 
mapped gamma 
gamma 
inclusion 
turn mapped ffl multiple pushout gamma 
gamma 
equation theories sigma gamma th mapped th sigma sigma 
sigma gamma 
ffl th maps tip colimit source sigma gamma 
concerning models sigma gamma model mapped ffl th sigma gamma sigma gamma th leaves unchanged 
adjunction induces monad ext rps ffi th ffl th comp kleisli category comp ext rps proposition functor rps comp ext rps gamma 
comp identity objects ext rps morphisms isomorphism 
proof ext rps full faithful see 
interpreting result shift level institutions 
able restrict institutions amalgamation 
proposition functor th inst amal gamma 
amal right adjoint denoted 
data adjoint situation ffl th amal gamma 
inst amal proof redefine proposition ffl kept 
inherit signatures models sentences theory extensions theory morphisms gamma 
mod necessarily injective injective isomorphism mod sentence translation defined pushing 
gamma 
model reduct isomorphic due semantic condition reduct functors corresponding sentences satisfy set sentences syntactically determined 
subset extensions definitions determined syntactically extensions definitions admit exactly model expansion 
satisfies eps gamma 
sentence translated signature morphism oe gamma 
gamma 
oe fflffl gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma fflffl oe gamma gamma gamma gamma gamma gamma gamma gamma mod oe gamma 
means model oe oe mod witness gamma 
satisfaction invariant model isomorphism follows definition satisfaction 
having amalgamation property immediately inherits phi fi phi phi fi proposition 
crucial point show gamma 
sen phi phi gamma gamma gamma 
phi sen phi 
mod phi phi phi mod mod mod phi mod phi mod oo fi oo mod phi oo fi oo implies fi fi phi fi phi fi gamma 
sentence get fi fi 
diagram allows amalgamation isomorphism phi fi phi fi 
uniqueness amalgamation isomorphism get preservation amalgamation carries directly phi fi phi phi fi 
show proposition inst amal ffl ram amal follows proposition 
concerning able apply proposition ffl phi fi show fi pointwise equivalence categories 
recall theory tt gamma gamma 
ae gamma 
ae gamma 
colim gamma gamma 
defined fi tt mod ae 
inverse fi tt takes tt model mm amalgamated sum mm unique isomorphism expansion mm fi tt fi tt mm mm ae mm model fi tt fi tt ae unique isomorphism expansion ae ae expansion ae uniqueness isomorphism amalgamation ae adjointness equations follow proposition adjunction induces monad ext 
ffi th ffl th inst amal kleisli category inst amal ext proposition functor inst amal ext gamma 
amal identity objects ext morphisms isomorphism 
proof ext full faithful see 
spelled detail gamma 
th th th gamma gamma gamma gamma gamma gamma 
th th ffl th gamma gamma gamma gamma gamma gamma gamma 
th gamma th gamma 
th gamma gamma 
th gamma gamma gamma 
th 
phi ff fi maps signature sigma phi sigma sigma sentence phi sigma 
sigma sigma gamma gamma model fi sigma gamma 
weak institution representation th gamma 
th amal mapping theories theories models models modularized simple institution representation gamma gamma 
th mapping signatures theories mapping sentences theory extensions mapping models kept 
note applied theory just multiple pushout theory extensions resulting application gamma sentence theory 
diagram section amal inst amal amal inst amal ext 
th oo ext th oo ext bbf ext oo ext just inclusion simple representation weak representation 
ext considers weak representation kleisli form gamma 
th live th institution theory extensions available sentences 
easy see conjunctive representation weak institution representation gives embedding weak inst amal gamma 

typical examples weak representations institutions constructions ffl explicit definition abstraction weak representation higher order logic higher order logic abstraction 
hol formula translated recursively replacing subterm ff fi context ff ff ff ff ff fi new function symbol equation ff ff ff fi theory extension 
ffl explicit definition description operators weak representation partial function higher order logic definite description operators far partial function higher order logic description operators 
formula translated theory extension containing formula plus axioms delta ff far description operator ff ff contained formula 
examples studied chapter 
way theorem corollary weak representation limit theories 
horn clause theories 
meta level 
simulate object level 
case 
adjunction amal inst amal borrowing logical structure 
specification frame th mod may borrow sentences institution specification frame representation phi fi gamma 
th 
representation institution th sen mod sen oe gamma 
phi oe sigma gamma gamma 
sigma gamma sen th sigma sigma oe gamma 
iff sigma oe gamma 
theorem psi 
diagram pullback inst th phi fi psi id oo gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma phi fi gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma oo proof follows generalization construction limits plaininst tar inst 
borrow sentences lead new theories 
example take lawvere theories fp sketches set bw mathematically elegant formulations equational theories lack notion axiom map equational theories equip equational theories notion derived signature morphism usual equations new axioms 
semantical consequence th weak institution representations theorem corollary allows re theorem provers 
weak institution representation th gamma 
th modularized simple institution representation gamma gamma 
th know model translation surjective theorem prover th re semantical consequence th look 
arbitrary sentences proposition specification frame amalgamation theory tt gamma gamma 
ae gamma 
ae gamma 
colim gamma gamma 

sentence gamma 
constructed pushout ae fflffl ae fflffl tt gamma 
function particular case persistent extension 
proof tt gamma 
iff tt model model iff model ae expansion isomorphism iff function models models yielding expansion isomorphism ae iff amalgamation function models models yielding expansion isomorphism case persistency yields expansion isomorphism 
proposition institution amalgamation theory tt sigma gamma sigma gamma gamma gamma 
sigma gamma th sigma gamma ae sigma gamma gamma 
sigma gamma ae sigma gamma gamma 
sigma gamma colimit 
sentence sigma gamma 
sigma gamma gamma sigma gamma constructed pushout 
tt sigma gamma sigma gamma 
sigma gamma gamma gamma sigma ae gamma proof tt sigma gamma sigma gamma 
sigma gamma gamma iff tt model model iff sigma gamma model ae expansion isomorphism iff sigma gamma model ae sigma gamma iff sigma gamma model sigma ae gamma iff gamma sigma ae gamma 
weak representation gamma 
surjective model translation theorem prover checker persistency theory extensions propositions get sound theorem prover guaranteed complete sentences translated modularized weak representation theory extension identity signatures 
model class monad semi representations institutions previous section generated sentences theory extensions specification frame 
explore canonical possibility generate sentences model classes 
proposition functor frame plaininst gamma 
exists right adjoint gamma 
plaininst 
proof th mod th sen mod sen mod sen oe gamma 
mod oe gamma 
satisfaction just element relation 
phi fi phi fi gamma fi 
satisfaction condition easy oe iff oe iff mod oe gamma iff sen oe iff sen oe 
strictly speaking change definition institution allow proper classes sentences 
foundational problem proper classes models anyway 
see section unit adjunction gamma 
frame id ff id ff sigma mod sigma sigma counit ffl frame gamma 
just identity 
show adjointness prove gamma gamma gamma gamma 
frame ffl gamma gamma gamma gamma 
id frame frame gamma gamma gamma gamma gamma gamma gamma 
frame frame ffl frame gamma gamma gamma gamma gamma gamma 
frame id frame follows model classes sentences ff sigma just identity sentences 
follows frame frame id ff id id id 
adjoint situation ffl frame gamma 
plaininst induces monad mod plaininst 
definition morphisms kleisli category plaininst mod called institution semi representations 
mod full faithful semi representations gamma 
correspondence specification frame representations mod frame gamma 
frame just plain representation component mapping sentences 
correspondence mod mapping gamma 
frame frame frame gamma gamma gamma gamma gamma gamma 
frame frame id frame gamma gamma gamma gamma gamma gamma gamma 
frame gamma mod mapping frame gamma 
frame gamma gamma 
frame gamma gamma gamma 
frame semi representations related institution semi morphisms tar defined similarly signatures models mapped covariantly 
example see tar 
know examples institution semi representations 
formalize concepts finite model theory 
example phi fi institution semi representation institution unsorted order logic plus existential second order quantifiers th applied institution unsorted order logic plus fixed point operators formulas expressing relations model categories restricted finite models 
phi maps signature sigma sigma plus binary relation symbol axioms stating total ordering 
fi just forgets total ordering phi sigma model 
results fagin immerman lei extended simple institution representation iff np 
possibility borrowing sentences institution specification frame representation phi fi gamma 
frame 
representation th mod 
put th sen mod sen mod sen phi fi gamma mod phi iff theorem diagram pullback frame ff oo gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma phi fi gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma ff oo proof follows construction limits plaininst tar 
comparison theorem borrow sentences institution capture fi preimage class models fi identity isomorphism means sentences semantically captured theory specification frame frame poor applications may useful consider frame th 
composite frame th probably adjoint note frame left adjoint th inst gamma 
plaininst right adjoint 
example lawvere theories sketches borrow conditional equations strictly enlarging power summary started argument problems distinction signatures sentences notion institution 
distinction useful necessary representations institutions go distinction 
new notions representation institutions conjunctive representations weak representations semi representations introduced chapter 
allow relax distinction signatures sentences sentence structured opposed mere representations specification frames 
introducing types arrow followed guidelines allow relate different categories logical system pair adjoint functors 
pairs borrowing sentences institution cerioli meseguer borrowing logical structure representations cm relation specification frames institutions 
technical results chapter summarized lower half fig 
arrows ext ffi gamma ffi ext exist restricted case composable signatures inst replaced case amalgamation 
ent log inst plaininst ent fflffl jj jj jj jj log fflffl ent ls inst ls oeoe oo fl iit sigma oo ent log inst weak fflffl inst th fflffl iit oo ffif ext th th oo frame mod fflffl ext ffik gamma th 
oo mod oo mod oo functors adjunctions different categories logical systems subinstitutions equivalent expressiveness institutions equivalent expressiveness logical systems mean 
section develop answer question 
institution representations single subclass called embeddings represent faithfully essential properties 
notion embedding separation results institutions proved 
meseguer mes defines notion subinstitution 
definition follows definition meseguer subinstitution institution representation phi ff fi gamma 
phi faithful injective objects phi embedding categories ff pointwise injective fi natural isomorphism 
definition somewhat narrow situations fi just pointwise equivalence categories 
prominent example embedding order sorted algebra sorted algebra see gm theorem 
equivalences categories preserve reflect interesting categorical properties 
restate definition subinstitution follows definition embedding institutions institution representation phi ff fi gamma 
phi embedding ff pointwise injective fi pointwise equivalence categories 
embedding called subinstitution km additionally required phi preserves colimits order represent faithfully burstall goguen slogan putting theories specifications bg 
reasonable signatures composable required situation see section 
definition call institutions equivalent expressiveness embeddings institutions directions 
implies satisfaction represented faithfully prove property similar defining property scollo invertible pre institution transformations ss proposition equivalent expressiveness embeddings gamma 
gamma 
sigma fi phi sigma gamma fi sigma gamma phi phi sigma ff phi sigma ff sigma proof apply satisfaction condition twice 
scollo pre institutions equivalent expressiveness invertible pre institution transformation 
notion equivalence expressiveness stronger considers logical consequence institutions equivalent expressiveness sentence theory model category theory morphism colimit theories reduct taken institution faithfully simulated 
easy show constructions cerioli representation independent specification language constructs cer reasonable specification language constructs formulated institution independent way st preserved directions 
notion embedding institutions notions embedding derived definition embedding specification frames specification frame representation phi fi gamma 
phi embedding preserving colimits fi pointwise equivalence categories 
embedding called definition simple conjunctive weak embedding institutions simple conjunctive weak institution representation gamma 
corresponding monadic construction see chapter embedding considered plain institution representation resp 
specification frame representation 
embedding called simple conjunctive weak subinstitution definition call institutions simply conjunctively weakly equivalent expressiveness simple conjunctive weak embeddings institutions directions 
proposition suppose specification frame representation phi fi gamma 
comp fi equivalence categories theory particular phi fi embedding amalgamation amalgamation tricks proposition proof th op th op cat phi op mod mod fflffl mod mod ffi phi op fi 
gamma 
th source considered diagram 
mod lim mod phi op lim 
phi op preserves multiple pullbacks equal mod lim phi op ffi 
mod preserves multiple pullbacks turn equal lim mod ffi phi op ffi 
mod mod ffi phi op lim functorial see lan isomorphic lim mod ffi 
limits translated isomorphisms limits mod preserves multiple pullbacks 
proposition suppose specification frame representation phi fi gamma 
fi equivalence categories theory particular phi fi embedding liberal liberal proof oe gamma 
theory morphism fi fi equivalences categories choose fi left adjoint fi fi right adjoint fi units isomorphisms 
naturality fi fi ffi mod phi oe mod oe ffi fi multiplying right fi yields fi ffi mod phi oe ffi fi mod oe 
liberality mod phi oe left adjoint phi oe compositionality left adjoints fi ffi phi oe ffi fi left adjoint mod oe 
notion equivalence strong 
example example testing notion embedding institutions 
see section embedded way simply represent relations domains partial operations partial operations graph relations 
formalized follows proposition 
simply equivalent expressiveness 
proof direction 
simple subinstitution 
define phi ff fi 
gamma 
ffl phi op rel theory signature op gamma 
rel axioms fx rel 
extended signature morphisms obvious way 
ffl ff sigma doesn change variable system 
atomic formulas action ff sigma ff sigma easily extended conditional formulas compatible signature morphisms ff natural 
ffl fi op rel op op op dom rel fi op rel axioms phi sigma partial operations phi sigma model exactly determined domains 
fi see isomorphism inverse replaces relation ra sigma model partial projection argument domain ra reducts vertical interchange relations partial projections 
gives naturality fi representation condition verified follows fi dom valuation gamma 
satisfies atomic formula considered valuation gamma 
fi satisfies 
extended conditional formulas usual 
converse direction simple subinstitution 
define graph phi graph ff graph fi graph 
ffl phi graph op pop theory signature op pop pop gamma 
pop axioms fx pop pop pop pop extended signature morphisms obvious way 
ffl ff graph sigma doesn change variable system 
atomic formulas action ff graph sigma ff graph sigma pop pop ffl fi graph op pop gamma op op op graph gamma pop pop pop graph gamma takes graph partial operation operation fi graph op pop gamma phi graph sigma axioms guarantee op graph partial operation 
fi graph isomorphism inverse replaces partial operations model graphs 
representation condition fulfilled valuation gamma 
considered gamma 
fi graph satisfies atomic formula op op graph gamma op defined equal gamma 
fi graph satisfies op phi preserves multiple pushouts colimits follows left adjointness phi cases proposition 
right adjoint phi graph phi graph maps theory op rel gamma signature op pop gamma 
pop rel fx pop pop gamma unit identity 
prove universal property note signature morphism oe op pop gamma 
phi graph op rel gamma seen theory oe phi graph op pop gamma 
op rel gamma 
phi proof left adjointness similar 
graph show 
simple subinstitutions 
simply equivalent expressiveness 
phi phi graph left adjoint shown full 
thing missing categorical equivalence isomorphism 
phi flatten chapter isomorphism dense full 
concerning equivalence institutions pleasant simple embeddings embedding phi equivalence categories theories 
rule equivalences proposition simply equivalent expressiveness simple embedding phi equivalence categories theories 

proof mono cardinality object category cardinality longest chain existing proper subobjects monos isos object 
proper subobject exists mono cardinality taken zero 
clearly notion preserved equivalences categories 
example set mono cardinality usual cardinality 
theory consisting sort unary relation symbol axioms category sets relation specified 
theory mono cardinality 
exactly subtheories empty theory theory consisting sort symbol 
works theory having mono cardinality theory sorts partial opns gamma 
axioms consists components dependent previous components exactly subtheories 
theories consists ffl sort symbols ffl sort operation symbol ffl sort axiom theories specify category sets relation 
requiring phi equivalence categories theories strong 
equivalence proposition trivial course 
non trivial task develop suitable notion equivalence 
course notions embedding equivalence expressiveness strong 
weaker notion developed chapter 
chapter graphs institutions developed symbolism allows quickly visualize quite complicated facts means diagrams 
ad amek herrlich strecker ahs previous chapter introduced notions institution representation mes mos 
simple institution representations allow map signatures theories sentences sentences models models 
theorem provers re representations extra technical condition 

conjunctive institution representations simple representations sentence may translated finite set sentences 
theorem provers re 

weak institution representations map theories theories models models 
condition modular sentences mapped theory extensions mapping theory collect theory extensions 
semantic properties kept representations sentences mapped theory extensions restricted re theorem provers 
notion restricted case embeddings means signatures sentences embedded model categories linked equivalences categories 
equivalent expressiveness means embeddability directions 
systematic study expressiveness institutions order embeddability 
section establish levels expressiveness 
level institutions shown equivalent expressiveness 
institutions different levels embeddings direction 
separation levels considered chapter 
equivalences various institution level section start expressive level 
prove equivalence expressiveness number institutions introduced chapter respect weak embeddings institutions 
extends results equivalence hep theories left exact sketches proved ar showing exactly locally finitely presentable categories model categories 
limit theories shown exactly locally finitely presentable categories model categories cos 
section strengthen results constructing weak embeddings institutions follow categorical constructions act level syntax 
furthermore give new unexpected results concerning institutions 
partial algebras strong equations equivalent partial algebras universal horn sentences 
exact relation order sorted algebra sort constraints partial algebras clarified 
main result gives compilers institutions consideration 
chance unify different branches specification partial algebras 
step goal formal interoperability multiparadigm specification languages re theorem provers mentioned 
results section announced published mos 
theorem institutions introduced chapter institution representations shown fig 

preserve composable signatures 
proof proof separately arrow diagram 
concerning preservation composable signatures note non trivial representations translate signatures modular component wise manner proof left adjointness proposition applicable 
trivial representations inclusions full subcategories signature level turn coreflection just forgetting parts bigger signature smaller institution 
embeddings left adjoints cases preservation colimits follows proposition 
corollary institutions fig 
weakly equivalent expressive 
particular considered specification frames equivalent expressive 
proof composability weak embeddings institutions 
corollary institutions fig 
possibly cos amalgamation 
proof theorem amalgamation 
theorem propositions carries institutions 
corollary institutions fig 
liberal 
proof hep shown liberal reichel rei rp 
liberal fact 
theorem proposition carries institutions 
note gives institution morphism sense chapter 
pairs institution representations institution morphisms arising adjoint pairs signature translations studied af 
hep hep 
hep hep rp 
cos 
fflffl oo fflffl gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma upsilon upsilon fflffl fflffl fflffl gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma fflffl oo fflffl oo fflffl embeddings institutions partial algebras 
solid arrow denotes simple embedding institutions dotted arrow denotes conjunctive embedding institutions dashed arrow denotes weak embedding institutions 
corollary re theorem provers dashed arrows fig 

proof theorem corollary 
corollary model categories specifiable institutions locally finitely presentable 
institutions subclass locally finitely presentable categories specified 
extend institutions infinite signatures consisting infinite sets sorts infinite sets finitary operation relation symbols infinite graphs extended institution exactly locally finitely presentable categories specified model categories theories 
proof see cos ar gu corollary fact locally finite representability invariant equivalences categories 
follows corollary 
coste cos shows statement 
ar show hep 
carries institutions noticing proof theorem easily extended infinite signatures 
proof theorem obvious subinstitutions 
proof theorem simple institution representation hep gamma 
hep defined letting phi fi sigma identities ff sigma maps sentence delta delta delta delta delta delta representation condition easily follows definition satisfaction weak equations 
proof theorem weak embedding hep 
gamma 
hep due signatures models weak equations left unchanged 
conditional sigma equation delta delta delta sort translated definitional extension sigma partial operation op theta delta delta delta theta gamma 
domain condition def op weak equations axioms op axioms op axioms just state case definedness op premises hold definedness sigma model expanded extended theory iff satisfies 
proof theorem define simple embedding institutions hep hep gamma 
ffl phi hep op pop def theory signature op pop circumscription def pop condition axioms axioms pop pop def pop def pop pop pop pop gamma 
pop ffl phi hep oe oe ffl ff hep sigma fi hep sigma identity proof theorem embedding section representing relations domains partial operations easily extended simple embedding institutions rp gamma 

ffl phi op pop rel theory signature op pop gamma 
rel axioms fx rel 
ffl ff sigma change variable system 
atomic formulas action ff sigma ff sigma easily extended conditional formulas 
ffl fi section 
proof theorem simple embedding institutions pp gamma 
defined follows signature sigma op pop translated phi pp sigma extended partial opns gamma 
axioms sort atomic formula sort translated ff pp translation easily extended conditional formulas 
fi pp translates model simply forgetting operations 
defined uniquely axioms fi pp isomorphism categories 
representation condition follows fact defined iff proof theorem conjunctive embedding institutions se gamma 
defined ffl phi se fi se sigma identities ffl ff se sigma axioms state side defined side defined sides equal 
representation condition follows 
proof theorem simple embedding institutions gamma 

defined follows ffl phi op pop theory op rel gamma rel contains relation pop gamma contains axiom fx pop pop pop gamma 
pop relation pop shall hold graph partial operation pop axiom states pop right unique graph partial operation 
ffl burmeister bur translate existence equations relational form 
defined inductively follows pop pop delta delta delta pop gamma 
pop op op delta delta delta op gamma 
pop variable considering axiom delta delta delta rules prenex normal form sho assume form form consist conjunctions atomic formulas 
ff sigma delta delta delta delta delta delta ffl fi sigma takes phi sigma model replaces relation pop partial operation graph pop representation condition essentially proposition page bur observation delta delta delta equivalent delta delta delta rules prenex normal form sho turn equivalent delta delta delta right uniqueness axioms 
proof theorem obvious subinstitution 
proof theorem define simple embedding institutions cr gamma 
rp 
ffl phi cr op theory sorts maximum connected component partial opns op max max gamma 
max op gamma 
op max maximum connected component rels max axioms maximum connected component max max max op op op gamma 
op max max op op ffl sentence translation replace sort constraint premises new variable new premise assume sort constraints 
ff cr sigma lp sigma lp sigma lp sigma lp sigma lp sigma lp sigma ff cr sigma lp sigma lp sigma lp sigma lp sigma lp sigma lp sigma sort parse defined proposition 
ffl fi cr sigma carrier sort set operations opm restricted domain 
fi cr sigma gamma keeps carrier maximum element connected component just total operations 
opm interpreted partial operations simply note construction just mimics definition order sorted algebra representation condition easy 
proof theorem define simple embedding institutions ch cos gamma 

ffl phi ch sigma sigma sigma op sigma sorts operation symbol op gamma 
op gamma 
op plus additional coercion operation symbols gamma 
axioms identity injectivity transitivity fx homomorphism fx op op sn op gamma 
op gamma 
op ffl replace sort constraints premises 
ff sigma delta delta delta lp sigma lp sigma delta delta delta lp sigma lp sigma lp sigma lp sigma ff sigma delta delta delta lp sigma lp sigma delta delta delta lp sigma lp sigma new variable occurring ffl fi sigma ffl coercions replaced set inclusions ffl colimits filtered diagrams built coercions 
goguen meseguer show fi pointwise equivalence categories 
exact definition ffl gm 
representation condition follows theorem gm coincidence homomorphic extensions valuations ffl proof theorem weak embedding institutions hs hep gamma 
sketched poi 
ffl phi hs op pop def resolves overloading op pop renaming operation symbols way construction sigma 
op pop def result renaming 
phi hs op pop def sketch object vertex object projection arrows limits introduced 
operation op gamma 
op arrow theta delta delta delta theta op gamma gamma 
limit cone theta delta delta delta theta projections theta delta delta delta theta gamma 
partial operations translated founded induction induction step concerning pop pop terms sigma consist partial operation symbols pop total operation symbols translated partial arrows pairs arrows theta delta delta delta theta oo gamma oo described poign poi 
partial operations pop assume existence partial arrows corresponding operations constructing gamma existence equation def pop translated gamma 
theta delta delta delta theta equalizer ffi ffi pullback gamma gamma theta delta delta delta theta eq ffi ffi gamma jj ii gamma iit iis pop gamma 
translated partial arrow theta delta delta delta theta dom pop def pop oo pop gamma oo pop intersection categorical intersection limit 
ffl ff hs sigma delta delta delta sigma 
sigma sign phi hs sigma phi hs sigma expanded equalizers pullbacks arrow gamma 
diagram theta delta delta delta theta dd uniqueness follows arrows monic 
ffl fi hs sigma maps sketch model sigma gamma partial algebra carriers total operations op op op partial operations pop dom pop gamma 
pop gamma 
pop 
natural transformation gamma 
translated homomorphism partial algebras vice versa partial sigma algebra construct sketch model fi hs sigma interpreting object resp 
arrow corresponding sort domain resp 
operation symbol corresponding set resp 
operation 
interpretation parts sketch determined limit cones chose canonical limit structure set 
similarly homomorphisms 
fi hs sigma ffi fi hs sigma id fi hs sigma ffi fi hs sigma isomorphism 
representation condition poign construction satisfies gamma 
theta delta delta delta theta gamma 
fi hs 
fi hs theta delta delta delta theta fi hs sn model expansion interpreting gamma 
exists gamma 
fi hs gamma 
fi hs fi hs fx delta delta delta proof theorem conjunctive embedding institutions sc gamma 

defined expressing universal property limits 

phi sc theory sort object total operation gamma 
arrow gamma 
fi sc model sigma gamma 
set objects fm arrows converse direction defined analogously 
ff sc maps diagram gamma gamma 
set consisting axiom fx dmn dm pair oeoe aa theta theta theta theta theta theta theta theta theta theta theta theta paths considering cones diagram gamma gamma 
ji cone interpretation dm ffi gamma 
limiting cone cones ji exists unique gamma 
ffi jij 
property second order property existence unique set morphism function required 
express order axioms replacing cones ji elements jij maps gamma 
elements 
limiting property expressed axioms dm gamma 
jij gamma dm ji set axioms translation ff sc cone ji gamma gamma 
proof theorem define weak embedding rs phi rs ff rs fi rs 
gamma 
hep 

represent relations 
hep 

idea additional sorts hold relations sort sense subsort theta delta delta delta theta introducing injection theta delta delta delta theta possible indirectly product sorts introduce projections gamma 
injective gamma 
theta delta delta delta theta injective 
phi rs extend signature op rel theory sorts rel opns gamma 
rel delta gamma 
axioms rel fx delta axiom scheme states injective injective 
axiom schemes diagonal function delta ensure exactly holds equality relation translate 
axiom replace equations relation applications gain uniformity 
modified axiom delta delta delta mq delta delta delta nr xm 
sequel assume conventions variable ranges states relation members certain form relation members certain form depending additional variables want simulate effect introducing partial operations proj proj arguments valuation variables relation members values corresponding relation members resp 
values variables proj gamma 
proj gamma 
ordering partial operations discrete 
def proj def proj proj proj defined value represents member premise true 
case xm premises hold relation members state premises hold holds 
proj xm yield value property substituted true proj xm represents corresponding member 
expressed axioms proj xm term replaced proj xm proj xm unique property 
expressed axioms proj xm note passing proj xm arbitrary pass proj xm arbitrary components 
ff rs sigma sigma 
sigma sign phi rs sigma extension phi rs sigma outlined 
prove uniqueness sigma 
expansions existing sigma models sigma 
expansions arguments proj proj resp 
identified valuations gamma 
valuation satisfying def proj extend gamma 
proj proj 
holds premise holds proj proj injectivity proj proj considering models fi rs op rel takes sigma model replaces relation symbol rel components gamma 
relation 
homomorphisms left unchanged components fall away 
easily shown equivalence categories 
prove representation condition assume fi rs sigma sigma 
show sigma sigma 
sigma 
construct sigma expansion simplicity assume rel injection gamma 
theta delta delta delta theta sn inclusion deal extra isomorphisms 
valuations gamma 
satisfying def proj define proj proj 
equations satisfied restriction satisfies premises 
assumption unique extension gamma 
satisfying 
define proj proj guarantees 
way round assume sigma sigma 
holds 
assume valuation gamma 
fi rs sigma satisfies premises 
unique sigma 
expansion define gamma 

satisfies def proj proj proj defined define gamma 
proj 
satisfies 
unique property 
holds illustrate rs 
gamma 
hep works giving example 
consider specifications simple transitive graphs 
graph sorts nodes rels edge nodes nodes transitive graph axioms nodes edge edge edge translated rs hep renaming omission delta needed equations graph sorts nodes edges opns source target edges gamma 
nodes axioms edges source source target target transitive graph partial opns proj edge nodes edges gamma 
edges def proj edge edges nodes source target source target axioms edges nodes source proj edge edges nodes target proj edge case axioms form 
axiom expresses arguments proj edge terms 
redundant arguments proj edge omitted concatenation operation transitive graph partial opns ffi edges theta edges gamma 
edges def ffi edges source target axioms edges source ffi source edges target ffi target way representation simple graphs easily pass multigraphs omitting graph axiom 
course translations complex theories may unreadable 
better viewed output compiler fed semi automatic tools 
proof theorem construction weak embedding ls 
gamma 
similar rs new idea represent relations domains partial operations irrelevant values 
atomic relation application translated defined conjunctions handled nested terms outer operation symbol chosen total nested term defined subterms defined 
equivalence um translated um propositional logic implications equivalent equivalences represent conditional axioms 
ls 
gamma 
defined follows ffl phi ls op rel op extended sorts bool opns true bool partial opns theta bool gamma 
theta delta delta delta theta gamma 
bool rel theta gamma 
bool axioms bool fx bool fx true axiom ensures bool point values irrelevant 
axioms ensure domain equality relation phi ls oe maps bool bool true true oe 
ffl consider 
sentence delta delta delta mq delta delta delta nr xm equations replaced relation applications gain uniformity 
translate introduce auxiliary partial operations partial opns bool gamma 
bool bool gamma 
bool bool gamma 
bool forget gamma 
bool axioms fx bool true fx bool true fx bool true fx forget true introduce partial operations proj gamma 
proof proj shall defined arguments considered valuation premises true 
expressed axioms qq mq forget proj xm shall hold case proj xm shall unique property proj xm defined delta delta delta nr proj xm delta delta delta proj xm translated discussion axioms rr nr proj xm proj xm proj xm ff ls sigma sigma 
sigma sign phi ls sigma extension phi ls sigma outlined 
ffl fi ls sigma takes sigma model replaces operations domains considered relations operations introduced forgotten 
homomorphisms left unchanged 
vice versa fi ls sigma gamma replaces relations rm partial operations corresponding relation domain 
axiom bool value defined true operations introduced determined axioms 
representation condition verified follows suppose fi ls sigma sigma holds 
show sigma sigma 
sigma construct sigma 
expansion determined axioms 
noticing defined rm holds act conjunction definedness proceed similar 
note take op regarding total operations partial operations op op 
translates 
theory total operations ls translates theory op true bool need just existence equation true true express 
total operations 
single existence equation needed purely partial theories strong equations totally undefined algebra model case 
proof theorem weak institution representation sn gamma 
defined follows ffl phi sn theory sort object total operation gamma 
arrow gamma 
ordering sorts discrete 
ffl ff sn maps diagram gamma gamma 
sigma 
sigma sign phi sn phi sn expanded axioms fx dmn dm pair oeoe aa theta theta theta theta theta theta theta theta theta theta theta theta paths ffl ff sn maps limit cone jij diagram gamma gamma 
sigma 
sigma sign phi sn defined follows objects define sort theta delta delta delta theta operations theta delta delta delta theta gamma 
shall hold product theory expansion phi sn sorts theta delta delta delta theta opns gamma 
theta delta delta delta theta theta delta delta delta theta gamma 
axioms fx theta delta delta delta theta 
fx 
limits equalizers products equalizers subsets set 
expressed requiring theta delta delta delta theta theta delta delta delta theta theta delta delta delta theta fl fl fl fl fl fl fl fl fl fl fl fl sigma sigma dm construction limits equalizers products described theorem ahs projections limit shall projections product composed subsort inclusion subset shall extract exactly points product arrows limit cone commute projections 
inclusion set equation expressed equations dm gamma 
sort constraint theta delta delta delta theta gamma dm ffl fi sn model sigma gamma 
set objects fm arrows converse direction defined analogously 
representation condition verified theorem ahs 
etl 
rp 

rp 
fflffl fflffl oo oo fflffl oo embeddings level 
solid arrow denotes simple embedding institutions 
categorical intuitionistic type theory intuitionistic type theory topos theoretical semantics developed lambek scott ls 
mentioned giving formal definition liberal institution somewhat related institutions studied 
surprisingly embedded simple embedding briefly sketch construction embedding 
bw category topoi strict logical functors specified theorem 
translate signature categorical intuitionistic type theory specification category topoi extended constants types arrows signature equations specifying source target arrows 
model theory topos interpretation language signature topos extracted model translation model categorical intuitionistic type theory 
signature translation easy definition satisfaction sentences page ls 
liberal categorical logics sense meseguer mes embeddable 
equivalences level embeddings level theorem institutions introduced chapter institution representations shown fig 

proof simple equivalence 
shown section 
done 
easy extension just leaves relations relation applications unchanged 
obvious subinstitutions 
composition 
cos rp 
rp 
cos hep 

fflffl fflffl oo fflffl omega omega omega omega omega omega omega omega omega omega omega omega omega omega omega omega omega omega omega omega omega omega omega omega omega omega omega omega omega omega omega omega omega omega omega omega omega omega omega omega omega omega omega xi xi fflffl vv vv fflffl oo fflffl ffi oo fflffl ffi ffi embeddings level 
solid arrow denotes simple embedding institutions dashed arrow denotes weak embedding institutions 
equivalences level embeddings level theorem institutions introduced chapter institution representations shown fig 

proof theorem proof proceeds similar proof 
define simple embedding institutions ch cos gamma 
ffl phi ch sigma sigma ffl ff sigma delta delta delta lp sigma lp sigma delta delta delta lp sigma lp sigma lp sigma lp sigma ffl fi sigma ffl representation condition follows theorem gm coincidence homomorphic extensions valuations ffl proof theorem order define simple embedding gamma 
cos take obvious subinstitution unrestricted overloading particular overloading constants cos restricted form overloading particular overloading constants 
decorate operation symbols arities 
formally translate signature sigma op phi sigma gamma 
op gamma 
op 
translation sigma terms pairs consisting phi sigma term phi sigma sort defined inductively translating variable pair translating op inductively translating op sn translation op translation easily extended sentences forgetting sort component 
models affected translation 
representation condition follows observation renamed operation symbols 
proof theorem simple embedding exploits fact satisfaction weak equations defined conditional statement sides defined equal encode general conditional equations 
equations encoded definedness conditions technique proof 
phi op signature op extended opns theta gamma 
partial opns op theta delta delta delta theta theta gamma 
op gamma 
op axioms op op op op op op second axiom domain op contains graph operation op 
third fourth axiom domain op contained graph op 
furthermore third axiom value op determined projection value component graph 
ff sigma translates sigma sentence op delta delta delta op mq phi sigma sentence op op mq fi sigma takes phi sigma model simply forgets operations op fi gamma sigma extends sigma model new operations op uniquely determined axioms 
representation condition proved follows op op mq holds phi sigma model iff valuations gamma 
definedness op op mq implies iff valuations gamma 
op delta delta delta op mq implies iff valuations gamma 
fi sigma op delta delta delta op mq imply iff fi sigma satisfies op delta delta delta op mq proof theorem obvious subinstitutions 
proof theorem simple embedding institutions gamma 
combination restriction modification embedding 
note phi sigma contains conditional axioms equational 
sentence mapped unconditional unique existential statement 
translate sentence delta delta delta 
translation proof representation condition similar 
proof theorem ffi simple embedding obvious subinstitution 
combining get simple embedding rp 
proof theorem weak embedding gamma 
restriction weak embedding rs 
gamma 
hep numbered 
note signatures translated phi rs theories 
axioms form delta delta delta translated rs theory extensions notation proof operations proj proj total 
axioms form delta delta delta mq translated axiom premise definedness condition proj directly states desired condition 
proof representation condition easily adapted 
proof theorem obvious subinstitutions 
proof theorem simple institution representation gamma 
defined similarly letting phi fi sigma identities ff sigma maps sentence delta delta delta delta delta delta existence equation left unchanged 
representation condition follows definition weak satisfaction 
proof theorem obvious subinstitutions 
equivalences level embeddings level theorem institutions introduced chapter institution representations shown fig 

rp cos cos cos rp cos fflffl fflffl oo oo fflffl fflffl fflffl oo ffi oo ffi ffi embeddings level 
solid arrow denotes simple embedding institutions dashed arrow denotes weak embedding institutions 
proof theorem restrict unconditional case 
proof theorem obvious subinstitutions 
proof theorem restrict ffi unconditional case 
proof theorem define weak embedding gamma 
cos ffl phi op pop op plus pop gamma 
pop theory sorts dom pop theta delta delta delta theta opns theta delta delta delta theta gamma 
theta delta delta delta theta theta delta delta delta theta gamma 
val pop dom pop gamma 
axioms 
theta delta delta delta theta ffl pop ff sigma definitional extension phi sigma opns op theta delta delta delta theta gamma 
dom pop axioms op 
val pop op newly introduced operation defined explicitly extension definitions guarantees uniqueness expansions 
ffl fi sigma just replaces new sort dom pop operation val pop partial operation domain dom pop values val pop forgetting product structure 
replacement easily reversed get isomorphism categories 
verify representation condition note possible expand phi sigma model defining op required axiom 
expansion satisfies second axiom iff fi sigma sign phi sigma pop may substitute op 
proof theorem define weak embedding gamma 
identity signatures models 
sigma op pop 
sigma sentence translated extension sigma opns gamma 
subterm having sort axioms op um op um op gamma 
op op um subterm pop um pop um pop gamma 
pop pop um subterm extension definition model expansions unique 
prove representation condition suppose valuation gamma 
define defined subterm axioms hold definition forth axiom holds 
expansion theory 
conversely suppose expansion theory gamma 
valuation 
axioms 
forth axiom 
proof theorem define weak embedding cos gamma 
cos ffl phi fi identities 
ffl ff sigma leaves sigma sentence unchanged maps sigma sentence definitional extension sigma opns op gamma 
axioms op sigma model expansion extension iff opa valuation gamma 
taken iff valuations gamma 
belongs iff satisfies proof theorem obvious subinstitutions 
cos fflffl embeddings level 
solid arrow denotes simple embedding institutions 
level embeddings level theorem institutions introduced chapter institution representations shown fig 

proof obvious subinstitutions 
chapter hierarchy theorems old main said tell add 
arithmetical lore claims add fear 
previous chapter devoted study embeddings equivalences institutions 
realm institutions introduced chapter ordered expressive power 
note weak equivalence total ordering institutions count special restrictions etl 
chapter negative results proved yielding strict hierarchy institutions showing different levels introduced previous chapter really different levels expressiveness 
hierarchy theorems usually proved finding property holds objects class hold objects expressive class turns strictly expressive 

properties model categories institutions show model category definable expressive institution definable expressive institution 
properties specifiable parameterized data types specifiable considered functors specifiable import body export specifications sense em 
technically free functors followed forgetful functors 
ways lead hierarchy levels 
part hierarchy set recursion theoretical methods 
get simplified proofs directly usual construction free 
usefulness hierarchy theorem illustrated locating sample bounded stacks hierarchy 
general sample algebraic properties help find lowest position restricted institution hierarchy usable specify dahl 
brandt 

important available tools may weaker choose general institution 
main part chapter published mos part 
graphs levels introduced chapter choose institutions level get overview institutions left hand side known literature equivalent institutions right hand side form uniform line relations partiality rp rp 
rp 
rp 
ffi fflffl fflffl fflffl ffi fflffl ffi oo ffi fflffl fflffl oo examine hierarchy rp rp rp 
rp 
representative equivalence class weak equivalence prove properties institutions separate levels hierarchy 
start properties model categories look initial semantics parameterized data types 
model theoretic hierarchy theorem theorem institutions consider form proper hierarchy institution properties model categories separating example effective equivalence relations rp subobjects commute coequalizers graphs binary relations rp forgetful functors preserve regular epis special theory rp 
regular epi mono transitive binary relations rp 
locally finitely presentable transitive multigraphs small categories proof split parts subsequent subsections 
level versus level partial conditional logic horn clause logic essential difference level level theorem homomorphisms holds fails 
categorically theorem homomorphisms means exists regular epi mono factorizations 
proposition rp 
equivalent expressiveness rp 
strictly stronger expressive 
proof theory sigma gamma rp 
model morphism gamma 
mod try get factorization image procedure take kernel pullback ker fflffl corollary proposition mod complete cocomplete 
take coequalizer get image ker gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma universal property coequalizer exists unique gamma 
ffi remarks ar belongs surjective implies injective monomorphism regular epi mono factorization known theorem homomorphisms generalized 
contrast rp 
may surjective monomorphism regular epi mono factorization rei counterexample similar example discussed detail 
factorizations rp 
iterate construction kernels coequalizers possibly infinitely 
regular epi mono clearly preserved equivalences categories 
institution representation rp 
model translation pointwise equivalence categories 
corollary rp 
strictly stronger expressive rp 


level versus level horn clause logic conditional equational logic difference level level quotients homomorphisms closed homomorphisms closed 
categorically means forgetful functors preserve regular epis 
proposition 
considered subinstitution 

strictly stronger expressive 
proof difference 

quotients closed 
happen homomorphisms closed 
consider theories sorts rels transitive axioms transitive identify elements get quotient 
quotient homomorphism gamma 
closed hand quotient gamma 
closed able theory institution representations switch categorical formulation 
observe regular epimorphism transitive factor 
forgetful functor mod oe associated inclusion oe gamma 
transitive preserve regular epis 
hand regular epis precisely surjective homomorphisms follows ahs 
forgetful functors preserve surjectivity preserve regular epis 
preservation regular epis forgetful functors categorical property inherited subinstitutions 

subinstitution 
categorical properties separate 
essentially intuition 
model categories dense set regular 
lacks property see ar see bar similar property 
corollary rp 
considered subinstitutions rp 
level versus level conditional equational logic partial equational logic difference level level lies presence conditional axioms level 
imply construction quotients categorically coequalizers complex take just algebraic quotient factor new equations may derived conditional axioms elements congruence relation 
contrast level quotients just algebraic quotients 
able formulate categorically need compare different quotient constructions done subalgebra 
level construction quotients commutes subalgebras sense congruence relation algebra subalgebra induces congruence relation subalgebra natural way level case 
definition category having coequalizers pullbacks say subobjects commute coequalizers category holds equivalence relation object subobject gamma 
monomorphism pullback theta theta hp qi oo hp theta oo coequalizers result unique factorization mq gamma 
ffi exists universal property coequalizer monomorphism 
oo oo mq oo proposition theories sigma gamma mod subobjects commute coequalizers 
proof relation gamma 
subobject proposition coequalizers just quotients 
mq mq hp hp qi proposition restricted mq injective 
counterexample showing model categories subobjects commute coequalizers 
sigma gamma theory spec sorts opns axioms algebra spec carriers functions aa subalgebra set congruence generated 
satisfy axioms order identify sigma gamma sigma gamma 
corresponding coequalizer having carrier set restricted diagonal relation deltaa deltaa corresponding coequalizer 
unique homomorphism mq deltaa gamma 
sigma gamma sigma gamma injective identifies 
corollary rp subinstitutions 
subhierarchy level 
levels institutions level weakly equivalent expressiveness count special restrictions aus etl case level 
level may increasing expressiveness weak embeddings ffl level consisting 
ffl level consisting rp ffl level consisting cos cos 
conjecture separated finer categorical properties related equivalence relations 
level versus level partial equational logic total equational logic difference level level concerns role congruence relations level algebraic structure congruence relation considered algebra determined set theoretical relation level flexibility algebras congruence relation carrier effectively generated kernel homomorphism 
proposition model category effective equivalence relations category theoretic definition effective equivalence relation see definition 
proof see remarks ar 
example consider signature graph consisting sort symbol binary relation symbol 
clearly signature rp 
sequel identify models graph graphs 
mod graph category graphs effective equivalence relations consider graph fflffl theta fflffl fflffl deltag theta diagonal hid id gamma 
theta fflffl consider relation inclusion gamma 
theta represented pair ffi ffi mi 
deltag contained gamma gamma 
reflexive 
define lip gamma 
just flipping 
lip isomorphism subobject represented ffi ffi mi subobject represented ffi ffi mi 
gamma gamma 
symmetric 
composing gamma gamma 
pulling back yields diagonal relation subobject theta theta plays role contained gamma gamma 
reflexivity 
gamma gamma 
transitive 
suppose graph homomorphism gamma 
inner square theta ffi oo ffi oo cc upsilon upsilon upsilon upsilon upsilon upsilon upsilon upsilon upsilon upsilon upsilon upsilon upsilon upsilon upsilon upsilon upsilon upsilon upsilon gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma pullback 
identity underlying sets outer diagram commutes 
pullback property exists graph homomorphism theta gamma 
ffi ffi ffi ffi uniqueness property product ffi id identity underlying sets 
violates graph homomorphism property 
gamma gamma 
equivalence relation kernel pair 
mod graph effective equivalence relations 
corollary rp subinstitution 
proof clearly effective equivalence relations preserved equivalences categories 
similar counterexample constructed category unary relations example instructive 
general relations introduce kind flexibility information represented data elements 
kind flexibility rp 
initial semantics results previous section concern problem specifying model categories loose semantics 
common problem question adt specifiable initial semantics 
theorem concerning initial semantics hierarchy collapses totally rp rp rp 
rp 
resp 
adts specifiable initially hidden machinery coincide semi computable adts resp 
total semi computable adts 
institution initially specifiable adts hidden machinery total semi computable adts rp semi computable adts rp semi computable adts rp 
semi computable adts rp 
semi computable adts proof see 
properties parameterized adts parameterized data types useful designing modular specifications 
specification hidden machinery means specification modules import export body parts sense ehrig mahr em 
body adt constructed freely parameter adt export interface view forgets irrelevant details hidden parts body adt 
consider question specified hidden machinery expressible composite free forgetful functor see section mod import mod export mod body free forgetful theorem proved recursion theoretic methods 
prove directly construction fact 
theorem respect specifiable hierarchy properties institution properties specifiable functors separating example full rp preserves kernels making relation reflexive rp preserves full surjective homomorphisms factorization function image rp 
preserves surjective homomorphisms making binary relation transitive rp 
generating paths multigraph preservation kernels roughly means kernel yield kernel 
functor applied kernel form binary relation careful exact formulation 
technically preservation kernels formulated follows 
product projections gamma 
pi gamma 

inclusion ker ker interpreted algebra 
pi ffi ker ker pi 
denotes congruence generation 
proof level versus level rp 
specifiable functors preserve surjectivity 
forgetful functors obviously preserve surjectivity assume free gamma 
rp 

gamma 
surjective homomorphism 
want show surjective 
done steps 
represent free construction quotient term algebra sigma parameter acts inductive extension terms denoted sigma sigma sign 
second step factor parameter representing term sigma term term algebra sigma fixed variable set valuation gamma 
replace leaves term 
representation sigma acts composing valuation surjective surjective 
formally sigma signature phi graph free phi graph phi graph gamma gamma gamma gamma gamma 
phi graph 
sigma contains total operation symbols construction fact property sigma 
quotient sigma fi graph gamma gamma gamma 
fi graph gamma fi graph fi graph identity carrier sets represent quotient full surjection sigma gamma gamma 
similarly get quotient sigma gamma gamma 
theta sigma theta sigma sigma sigma ffi theta id fflffl fflffl sigma fflffl fflffl lower rectangle commutes surjectivity follows surjectivity sigma 
show fix infinite sorted variable system sorts represent sigma theta sigma 
pair gamma 
mapped sigma term sigma uses finitely elements assignment surjective 
similar representation holds commutativity upper diagram surjectivity sigma follows surjectivity ffi theta id prove gamma 
valuation 
surjectivity factorization gamma 
gamma 
gamma 
ffi surjective 
level versus level rp specifiable functors preserve full surjective homomorphisms 
observing fi ffi gamma exactly maps full surjective homomorphisms surjective homomorphisms 
exactly full surjectivity gamma 
means surjectivity graph popa graph pop gamma 
pop ra rb rel equivalent surjectivity fi ffi gamma pop pop pop fi ffi gamma rel respectively 
assume free gamma 
rp gamma 
full surjective homomorphism 
equivalence fi ffi gamma surjective 
free phi ffi phi ffi gamma gamma gamma gamma gamma gamma gamma gamma 
phi ffi 
fi ffi gamma fi ffi gamma surjective 
equivalence full surjective 
level versus level rp specifiable functors preserve kernels 
similar argument graph restrict 
sigma sigma sigma fflffl fflffl commutes mod sigma 
lemma surjective homomorphisms ker ffi sigma 
ker ker sigma proof follows ker ker ffi ker ffi sigma ker sigma ker ffi sigma logical consequence expressible congruence generation see em 
equation ker fact rewritten ker 
gamma 
sigma gamma ker ffi sigma implies sigma sigma ker implies gamma 
sigma gamma sigma sigma 
surjectivity sigma factor gamma 
sigma gamma 
sigma sigma gamma gamma gamma gamma 
sigma sigma ffi fix gamma sigma 
sigma sigma 
ker sigma ker ker sigma altogether 
ker ker sigma 
lemma key relating free construction term algebra proof pi ffi ker ker pi product projections gamma 
pi gamma 
pi unique homomorphism pi fflffl commuting gamma 
projections factors 
free gamma 
gamma 
surjective homomorphism 
inclusion ker ker interpreted algebra 
pi 
sigma sigma sigma gamma 
sigma defined similar way 
sigma ker sigma sigma ker sigma ker ker sigma fflffl pi fflffl fflffl oe oo fflffl pi oe oo lemma 
binary relation sigma 


pi ffi ker ker sigma pi sigma 
ker pi ker ffi sigma ffi pi sigma proof 
proof induction definition 
clearly 

delta sigma 


inductive hypothesis implies 
implies 

transitivity compatibility operations treated similarly 

pi sigma ker ffi ffi sorted variable system gamma 
sigma ffi ffi ffi ffi ker sigma pi sigma 
pi ffi ker pi ffi ffi ker sigma ker pi ffi ffi sigma sigma ker ffi pi sigma ker ker sigma pi sigma 
ker pi ker ffi ffi pi sigma ker ffi sigma ffi pi sigma ready prove pi ffi ker ker pi pi ffi ker ker sigma pi sigma 
ker sigma ffi pi sigma ker ffi sigma ffi pi sigma ker pi 
congruence inclusion holds pi ffi ker 
ker pi ker ffi sigma ffi pi sigma 

ker ker sigma ffi pi sigma lemma 
ker ker sigma ffi pi sigma 
delta ker sigma ffi pi sigma 
ker sigma ffi pi sigma 
ker sigma pi sigma pi ffi ker 

level versus level homomorphisms full fact property model classes 
example hierarchy theorem section examine example simple useful illustrate results preceding sections 
particular look example separating different methods 
example specified level example graph transitive parameterized theory graph sorts nodes edges opns source target edges gamma 
nodes transitive graph partial opns conc edges edges gamma 
edges axioms nodes source target conc conc nodes source target target conc target nodes source target source conc source free graph transitive graph algebras representing graphs gamma gamma gamma gamma closed surjective graph homomorphism gamma 
indicated picture 
transitive algebras computed 
look gamma gamma gamma gamma homomorphism acts similarly difference edge pre image 
surjective preserve surjectivity 
theorem specifiable level resp 
rp 
specifiable level 
example transitive closure relation specifiable level 
level resp 
rp 
bin rel sorts elem rels elem elem trans rel bin rel axioms elem free bin rel trans rel 
interpret pictures bin rel algebras arrow meaning 
gamma 
surjective full closed full 
theorem specifiable level specifiable level 
example factorization function image specifiable level level resp 
rp 
func sorts source target opns source gamma 
target factor func sorts image opns surj source gamma 
image inj image gamma 
target axioms source inj surj source surj surj free func factor 
takes function yields factorization image expressed surjection followed injection 
gamma 
func homomorphism target source oo oo 
gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma graph indicated arrows 
kernel func algebra target source ker theta oo oo oo oo oo apply thing get target image source oo oo oo aa theta theta theta theta theta theta ggp fa take identity isomorphism 
ker form target image ker ccg ccg oo ker form target image ker pi gamma 
fa identity ker congruence pi ffi ker ker ker ker pi 
theorem specified level resp 
rp 
example making relation reflexive specifiable level rp level resp 

making relation reflexive specified follows sorts rels theta reflexive axioms specifiable relations 
bit trivial course motivation equipping institutions relations partiality 
corollary relations partiality encodable 
altogether theorem examples lead hierarchy theorem 
theorem hierarchy theorem institutions rp 
rp rp rp form hierarchy strictly decreasing expressive power respect 
locating bounded stacks hierarchy consider requirement bounded elem nat bool sorts elem total opns inbound nat gamma 
bool axioms nat inbound succ true inbound true nat inbound false inbound succ false bounded stack bounded elem sorts stack total opns mt stack partial opns push elem stack gamma 
stack pop stack gamma 
stack top stack gamma 
stack subcategory mod rp bounded elem contains models nat reduct isomorphic natural numbers bool reduct isomorphic standard booleans 
aim specify persistent functor gamma 
mod rp bounded stack stack contains stacks elem heights succ true pop push top usual partial 
stack operations 
easy bounded stack body bounded stack total opns height stack gamma 
nat axioms height mt elem stack inbound height true push push elem stack push push height push succ height elem stack push push pop push elem stack push push top push free bounded elem bounded stack body functor composed forgetful functor stack body stack restricted equal 
free functor preserve surjectivity consider homomorphisms terminal model specifiable rp 
theorem 
look different way specify rp 

generating bounded stacks partial operation impossible rp 
generate total operation factor stacks high specify partial push derived operation 
bounded stack body bounded stack total opns push elem stack gamma 
stack height stack gamma 
nat axioms height mt elem stack inbound height true height push succ height elem stack inbound height false push elem stack inbound height true push push elem stack inbound height true pop push elem stack inbound height true top push rp 
consider bounded elem algebras false true false trueg true 
gamma 
gamma 
unique homomorphisms terminal object 
full surjective 
unbounded stacks push mt defined 
push mt push mt defined 
hand totally undefined push 
particular push mt undefined push mt push mt defined 
means full 
implies preserve full surjectivity theorem rp specified 
summary proved hierarchy theorem concerning widely institutions ranging equational logic relational partial conditional existence equation logic rp 
institutions differ respect initial semantics differ properties model categories 
argue differences hierarchy caused availability partiality relations 
shown introducing institutions having features weakly equivalent expressiveness widely institutions features 
real cause differences degree axioms may visible 
expressive institutions rp 
conditional generation data 
corresponds availability conditional axioms pop pop may generate data free construction 
hand rp 

unconditional generation data free construction 
corresponds property preserve surjective homomorphisms 
rp 

conditionally generate relation partial operation graph members form pop hand rp possible preserve full surjective homomorphisms 
rp thing conditional generation kernel members possible rp kernels preserved 
illustrated table institution conditional generation corresponds availability conditional axioms unconditional generation corresponds property rp kernel members equations preserves kernels kernel members equations relation graph members preserves full surjective homomorphisms 
rp 
relation graph members data preserves surjective homomorphisms rp 
data pop pop considered interesting purely categorical separating properties institution independent 
preservation kernels property 
cases impossible property property preserved categorical retractive representations due results chapter 
chapter equivalence difference institutions simulating horn clause logic algebras choice semantical simplicity fact restriction put typing relation resulted somewhat surprising outcome formally logic viewed horn logic equality binary predicate viz 
type assignment 
fact renders parsimony logic 
obvious logic special case horn logic easily prove misleading 
types predicates different logical devices sufficient expressive power encode 
differences arise intuition underlies formal devices reflected natural scollo mss slogan chapter natural different logical devices technically captured notion categorical retractive representation 
natural refers second logical system encoded categorical retractive representation logic approaches similar structure unified algebras mos part construction algebras kre 
cases possibly show essential difference logical systems captured categorical retractive representation 
logical systems occurring situation typically equivalent expressiveness sense chapter relatively close 
notion embedding narrow weakened 
introduce notion categorical retractive representation captures essential properties representations partiality total logical systems 
develop measure equivalence difference specification frames functor th inst gamma 
applies institutions 
parts chapter published km 
conditional equational logic algebras compared 
loose possibility representing partial operations graphs 
possibility kreowski kre introduces algebras device different purposes 
particular algebras gain partiality staying total approach relations 
institution algebras theories signatures triples form sigma sigma oe sigma sigma signatures indicates base part target part oe sigma gamma 
sigma signature morphism 
signature morphisms sigma sigma oe gamma 
sigma sigma oe pairs sigma gamma 
sigma sigma gamma 
sigma ffi oe oe ffi 
sigma sigma oe algebra triple sigma algebra sigma algebra gamma 
oe sigma homomorphism 
homomorphisms hb hc gamma 
consist sigma homomorphism hb gamma 
sigma homomorphism hc gamma 
oe oe hb fflffl fflffl hc oe commutes 
words mod sigma sigma oe comma category mod sigma mod oe 
reducts defined componentwise 
sigma sigma oe signature sigma bc sigma sigma plus operations gamma 
oe sigma sigma sigma oe sentence sigma bc sentence 
sigma sigma oe algebra fi flatten gamma sigma bc algebra sigma sigma bc sigma sigma bc satisfaction defined follows sigma sigma oe sigma bc proposition equivalent expressiveness 
proof define embed gamma 
ffl phi embed sigma sigma 
sigma ffl ff embed sigma note sigma bc sigma ffl fi embed ffl fi embed hb hc hc preservation colimits follows left adjointness phi embed proposition 
define flatten gamma 
ffl phi flatten sigma sigma oe sigma bc axioms op oe op sn op gamma 
op sigma ffl ff flatten sigma sigma oe ffl fi flatten sigma sigma oe sigma sigma bc sigma sigma bc sigma ffl fi flatten sigma sigma oe sigma sigma bc sigma sigma bc phi flatten isomorphism dense sigma empty simply sigma copied 
implies preservation colimits proposition 
part construction closer look difference expressiveness 

kreowski kre describes representation 
part construction takes algebra viewed extension junk yields partial algebra simply interpret junk values outside undefined 
formally simple institution representation part phi part ff part fi part gamma 
defined ffl phi part op pop theory sigma sigma oe gamma 
renaming op base part sigma op gamma 
op gamma 
op target part additionally includes partial operations sigma op gamma 
op gamma 
op pop 
signature morphism oe simply maps op op gamma consists ffl phi part applied signature morphism simply duplicates components renaming 
ffl ff part op pop ff part ff part ff part considered sigma sentence ff part variables translated expressions varying ff part op op ff part ff part ff part ff part ff part op op ff part ff part ffl fi part op pop op op op op op pop op pop op restriction op arguments yield values undefined 
restriction yields relative subalgebra sense section 
note homomorphism closed operations op op op restriction needed 
ffl fi part sigma hb hc hc representation condition verified follows valuations gamma 
correspondence valuations gamma 
fi part variable translations vary carriers fi part 
difference interpretation terms treatment existence equations ff part op op op dom op fi part op fi part values op op fi part coincide 
difference may remain domains 
variables vary closed sigma operations 
right hand side holds op dom op fi part right hand side holds 
converse direction easy 
left hand sides equivalent 
extension atomic formulas gives representation condition 
expressions varying defined non junk elements correspond safe variables sense ad ad 
needed faithful translation sentences part considering algebras leading certain algebra junk may satisfy non trivial equations may 
relate representation condition validity axioms unsafe variables range algebras validity axioms part constructions 
fact free completion see proposition junk freely generated satisfy non trivial equation 
expressions corresponding safe variables translating axioms 
examine conditions unsafe variables may shall consistent 
allow unsafe variables translations note possibly properties theories considered 
possibility talk positively undefined functions strict argue theories define non strict partial functions 
restriction theories generated theories rules non strict partial functions 
hand proposition extended part construction arbitrary theories 
power non strict partial functions available modular axiom axiom manner 
turns non strictness handled conditional formulas 
corresponds observation formalisms non strict functions definable strict functions non strict 
measuring difference institutions categorical retractive representations institutions simply equivalent expressiveness simulate respect sentences theories model categories theory morphisms reducts free constructions faithful way space semantic differences 
clearly equivalence rare occurrence 
example resp 
equivalent corollary partiality expressed directly 
part construction way view total algebras partial algebras 
level point categorical retractive representations may reasonable generalization useful compare institutions equivalent 
preserve initial models free constructions forgetful functors 
introducing general notion part construction shown categorical retractive representation 
example part construction carried cases constructions fi models models interpretations views models models extensible institution representations phi ff fi gamma 
theory find theory simulates help construction 
example equational type logic etl mss yields order sorted partial algebra 
model 
mss authors state etl 
pragmatic expressiveness gained interpretation binary etl predicate typing 
ss representation partial algebras etl formalized pre institution transformation institution representation 
examine properties constructions fi model part institution representations contain part pragmatics mentioned 
institution representations obtained constructions generally fail embeddings fi isomorphic change representation construction power 
weaken notion embedding maintaining preservation institution independent language constructs possible 
important thing preserved logical consequence 
arbitrary institution representations preserve cerioli simulations cer model translation surjective objects theorem 
canonical choice represent particular model model plus construction 
particular algebra represented canonical algebra plus part construction see 
surjectivity fi comes right inverse fi rinv fi ffi fi rinv id notions depend theory categories model functors developed specification frames 
applying th plaininst gamma 
th starting inst inst theory carries institutions plain simple conjunctive weak representations 
definition retractive specification frame representation specification frame representation phi fi gamma 
fi right inverse isomorphism fi rinv fi ffi fi rinv id theory retractions surjective objects simple retractive institution representations special case astesiano cerioli logical simulations ac 
particular simulations inherit nice property faithful respect logical consequence theorem gamma 
plain simple conjunctive retractive institution representation institutions model isomorphisms preserve satisfaction 
semantical entailment preserved gamma sigma iff ff sigma gamma phi sigma ff sigma proof similar proof theorem 
considering levels institution equivalence formulated cer retractive representations cover set theoretical logical level categorical level 
categorical representation sense cer preserve initial models 
parameterization module concepts constraints st em preservation initial models free constructions forgetful functors combinations desirable 
categorical retractive representations guaranteed definition retractive specification frame representation phi fi gamma 
called categorical theory right inverse fi rinv left adjoint fi proposition embeddings categorical retractive representations 
retractive representations composed definition phi fi fi rinv gamma 
phi fi fi rinv gamma 
retractive specification frame representations 
composition ffi gamma 
consists components ffl phi phi ffi phi ffl fi fi ffi fi phi ffl fi rinv fi phi rinv ffi fi rinv proposition categorical retractive representations closed composition 
proof left adjoints closed composition 
theorem phi fi fi rinv gamma 
categorical retractive representation 
compatible free constructions sense oe gamma 
theory morphism phi oe oe exist oe fi ffi phi oe ffi fi rinv modt mod phi modt mod phi fi rinv oe fflffl phi oe fflffl fi oo mod oe oo fi rinv mod phi oe oo fi oo proof naturality fi fi ffi mod phi oe mod oe ffi fi turning left adjoints compositional isomorphism phi oe ffi fi rinv fi rinv ffi oe multiplying left fi get fi ffi phi oe ffi fi rinv oe theorem phi fi fi rinv gamma 
categorical retractive representation liberal specification frames having initial theories preserved phi terminal model categories initiality models preserved fi fi rinv note generally fi reflect initiality 
proof fi rinv left adjoint preserves colimits especially initial objects 
considering fi arbitrary theory phi initial theories oe gamma 
unique theory morphism 
letting denote initial object category fi fi phi oe fi rinv phi oe fi rinv left adjoints preserve initiality oe diagram left adjointness 
corollary phi fi fi rinv gamma 
categorical retractive representation th th cocomplete mod mod phi preserve colimits fi fi rinv preserve initial objects 
part categorical retractive part construction precisely fi part theory left adjoint right inverse part categorical retractive 
theory op pop gamma sigma sigma oe theta phi part op pop 
fi part rinv op pop gamma sigma sigma oe theta algebra base part op op op target part op op sigma ffl sigma element variable ffl sigma congruence generated op op dom opa op gamma 
op pop homomorphism base target part defined js fi part rinv op pop gamma free completion see bur 
sigma operation applications defined js js unique simply evaluate definition 
js 
injective satisfies theta 
valuations gamma 
correspondence valuations gamma 
fi part rinv variables vary isomorphic argument similar part op op extension formulas fi part rinv satisfies phi part fi part rinv functor fi part rinv mod gamma 
mod phi part natural 
consider theories oe gamma 
consists sort symbol additionally partial operation symbol 
algebra singleton carrier set undefined operation 
shown card fi part rinv phi oe card fi part rinv oe 
proposition part categorical retractive fi part rinv proof 
theory id mod fi part ffi fi part rinv natural isomorphism ja gamma 
fi part fi part rinv gamma 
inclusion free completion carrier part construction 

categorical theory show fi part rinv left adjoint fi part unit adjunction ja gamma 
fi part homomorphism define unique phi part homomorphism fi part rinv gamma 
fi part fi part rinv fi part ja fi part xx gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma commutes fi part ffi ja condition homomorphic property forces inductive definition ffl ffl op op fflffl fflffl injectivity inclusion ffih injective phi part axioms bijective 
implies uniquely determined corollary logical entailment 
faithfully simulated logical entailment 
proof theorem theorem 
categorical retractive representations representation 
gamma 
ur 
horn clause logic unsorted horn clause logic see ac categorical retractive left adjoint right inverse applied sorted algebra yields sorted algebra freely generated sorted carriers ill sorted operation applications 
hand 
ur 
equivalent expressiveness ur 
forgetful functors faithful 
case 
representation dns gamma 
dt institutions non strict partial algebras order structures disjunctive sentences shown categorical retractive cer right inverse called left inverse caused different orders composition 
note institutions non liberal 
level versus level simple institution representation gamma 

represents partial algebras total algebras definedness relations see cer shown categorical retractive 
link level level see chapter 
minor differences representation captures essence partiality etl mss mss unified algebras mos definedness coded bit complex way 
formalizes situation etl theories unified algebras hand special horn clause theories hand interpreted theories partial algebras 
conjunctive categorical retractive institution representation phi ff fi gamma 
etl defined follows ffl phi maps signature op pop etl signature note unsorted opns op ary op gamma 
op pop ary axioms delta delta delta op op gamma 
op ffl fi op pop maps phi op pop model carriers jm opm opm op gamma 
op axiom phi op pop defined 
undefined homomorphism gamma 
mapped function preserve sort constants 
ffl ff op pop maps op pop sentence delta delta delta phi op pop sentences delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta sort sort 
ffl define fi rinv op pop op pop model free phi op pop model set unit gamma define congruence generated axioms op op gamma 
op pop opm defined 
representation condition follows observation valuations gamma 
satisfying delta delta delta correspondence valuations gamma 
fi sigma 
proof fi rinv pointwise left adjoint right inverse proceeds similar proof proposition 
level versus level char flatten ffi part ffi char 
gamma essentially represents relations total characteristic functions elements outside relation mapped junk 
determination junk achieved algebra construction 
get link level level 
level versus level conjecture categorical retractive representation level rp level 
gap conditional unconditional axioms 
prove conjecture try part theorem stating rp specifiable preserve kernels 
unfortunately categorical formulation property uses coequalizers pullbacks preserved member adjoint pair translating models categorical retractive representation 
suffice proving preserving kernels property preserved categorical retractive representations 
level versus level restriction models non empty carrier sets 
link level level simple retractive representation gamma 
composing restriction embedding number rp defined subsection get retractive representation 
maps signature op pop theory consisting sorts theta theta total operations op theta delta delta delta theta gamma 
op gamma 
op pop theta delta delta delta theta gamma 
pop gamma 
pop inj gamma 
proj gamma 
axiom needed proj inj sort add supersort shall hold values undefined applications 
phi sigma model translated forgetting carriers fi total operations remain operations pop gamma 
pop restricted pop fi proj pop inj undefined sentence pop mapped pop inj sort note due flatness partiality purely total equation 
fi sigma pop iff gamma 
fi sigma pop fi sigma defined iff gamma 
inj iff ff sigma pop 
show fi rinv just copy held sorts label embedded inj operations free completion held sorts label 
proj identity takes arbitrary value outside carriers non empty 
representations examples preceding section embedding gamma 
categorical retractive representation gamma 
simulate necessarily loose semantics theorem relevant forgetful free constructions may say sense complex construction fi 
way round 
construction fi expressed 
answer question define specifiable specification frame representations show closure composition 
definition th mod specification frame 
functor modt gamma 
modt called specifiable theory morphisms ae gamma 
gamma 
theory mod ffi ae called persistently specifiable ae persistent mod ae ffi ae id modt functor specifiable sense expressible composite free forgetful functor 
theory may contain hidden parts forgotten forgetful functor mod 
definition phi fi gamma 
specification frame representation phi fi gamma 
embedding 
call specifiable theory theory psi including phi phi say 
psi ae phi phi 
psi mod phi modt mod phi phi mod psi fi fi phi gamma fflffl ae mod oo commutes natural isomorphism 
addition retractive representation call specifiable retractive representation specifiable specification frame representation theory xi including phi say 
xi ae phi phi 
xi mod phi modt mod phi phi mod xi fi rinv oo fflffl fi phi mod ae oo commutes natural isomorphism 
persistent defined expected 
categorical specifiable retractive representation gamma 
precise measure difference expressive power respect parameterization 
slogan power power power fi power fi rinv constructions fi fi rinv parts contain essence difference expressiveness respect parameterization 
direction equality follows theorem allows simulate free construction free constructions plus fi plus fi rinv considering direction check components right hand side equal power left hand side 
component follows follows isomorphism functor fi phi taken account isomorphisms add complexity change representation 
considering compositions specifiable specification frame representations need proposition th mod specification frame having amalgamation 
extension lemma holds 
pushout th oe fflffl fflffl oe oe persistent diagram modt modt modt modt oe oe mod oo mod oo commutes natural isomorphism 
implies persistently specifiable functors closed composition see 
proof see bau 
theorem persistently specifiable specification frame representations specification frames amalgamation closed composition 
proof gamma 
gamma 
specification frame representations specifiable embeddings gamma 
resp 
gamma 
ffi ffi resp 
leads theory morphisms gamma 
psi ae phi gammai phi gamma 
psi definition 
theory take pushout th phi phi phi phi phi phi phi psi phi psi phi phi psi phi ae phi ae gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma phi phi ae oo oo ae ae ffi phi ae phi ffi commutativity outer square follows commutativity 
commute definition 
leads commutativity isomorphism 
commutes naturality fi 
commute functoriality mod compositionality left adjoints 
commutes theorem categorical retractive commutes proposition 
outer square commutes specifiable psi ae 
theorem persistently specifiable retractive representations specification frames having amalgamation closed composition 
proof analogous theorem 
arrows reversed fi fi phi fi replaced right inverses psi replaced xi mod interchanged 
part part construction part gamma 
want show fi part fi part rinv specifiable 
interpret 
abuse language call composition flatten gamma 
obvious inclusion 
flatten show fi part specifiable theory op pop gamma define theory psi part contains phi flatten phi part union phi flatten phi part renaming say 
phi flatten phi part definitions phi part phi flatten psi part augmented total operation symbols gamma 
toc gamma 
partial operation symbols gamma 
axioms mod phi phi mod phi modt mod phi mod phi phi mod psi phi mod phi phi mod psi mod phi psi phi mod phi phi mod psi mod phi phi phi phi fi fi phi gamma fflffl fi phi tt tt tt tt fi phi gamma fi fi phi gamma oeoe ae phi fi phi phi gamma fi psi phi gamma mod phi cc upsilon upsilon upsilon upsilon upsilon upsilon upsilon upsilon upsilon upsilon upsilon upsilon upsilon upsilon upsilon upsilon upsilon upsilon upsilon ae mod jj mod phi phi bb xi xi xi xi xi xi xi xi xi xi xi xi xi xi xi xi xi ae ae phi ae phi jj jj jj jj jj jj jj jj jj jj jj mod oo mod composition specifiable representations toc op toc op op gamma 
op pop toc pop pop gamma 
pop intuition psi part follows 
don arbitrary existence equations bur generate carriers part partial operation operations generate copy axioms factor kernel get carriers part 
operations toc needed translation part partial part may subsets carriers 
part toc axioms express relations functions axioms translate operations op op op total operations op part axioms generate partial restriction total phi part operation pop pop pop part 
oo op oo toc op oo proposition psi part specifies fi part mod phi part mod mod phi flatten phi part mod psi part fi part fi flatten phi part gamma fflffl ae mod oo commutes natural isomorphism 
proof phi part algebra fi flatten phi part gamma flattening fi part part construction 
extend psi part algebra follows ffl ae ffl ffl gamma 
ffl toc inclusion ffl dom axioms checked hold easily 
algebra ae ae left adjoint arrow id ae gamma 
adjoint id gamma 
aj ae ae ae ae ja id id ae gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma delta delta commutes 
unit ja section injective 
ja surjective 
show prove induction operations ja generate elements form ja resp 
elements form ffi ja op op inductive step easy homomorphic property ja trivial 
toc handled 
defined values ffi ja ja ffi yield form 
op op op op ffi ffi ja ffi op ffi toc ffi ffi ja ffi op ffi ffi ja ffi ffi op ffi ja phi flatten gamma axioms ffi op ffi ja values pop pop pop desired form 
ja isomorphism inverse id ae extend ja homomorphism id gamma gamma 
ae inverse id putting id gamma ffi ja defined homomorphic property ja check homomorphic property id gamma complicated cases operations pop pop pop pop ffi defined value remember part construction acts function 
construction fi part means pop ffi defined value 
ja phi flatten phi part homomorphism means pop ffi ffi ja defined value 
pop ffi ja 
implies pop ffi ffi ja ffi ja pop ffi id gamma ffi id gamma shows isomorphic fi part ae mod ffi ae ffi fi flatten phi part gamma 
show fi part rinv specifiable theory op pop gamma define theory xi part contains phi flatten phi part union phi flatten phi part renaming say 
phi flatten phi part definitions phi part phi flatten xi part augmented total operation symbols gamma 
axioms op op op gamma 
op op op op gamma 
op pop pop pop gamma 
pop proof specifies fi part rinv left reader 
retractive representation specifiable 
conjecture specifiable specifiable division unsorted carrier sorted carriers specified 

show graph section embed flatten retractive representations theory psi xi built renaming gamma 
phi phi adding total operations gamma 
gamma 
axioms op op op gamma 
op specifying isomorphisms specific axioms rel graph pop pop pop gamma 
pop embed flatten sigma proposition theorem char flatten ffi part ffi char ffi specifiable categorical retractive representations 
summary examined expressiveness generation partial algebras total ones part construction 
remarks definition turns equivalent expressiveness respect power parameterization module concepts horn clause logic 
algebra approach part construction clear intuition formalism partiality 
benefit developed theory horn clause theories see pad 
hope shown equivalence approaches fruitful influence 
see pad 
instructive example 
considering loose semantics gap conditional equational logic horn clause logic 
view part construction bridges gap representation horn clause logic conditional equational logic logically faithful compatible initial semantics free constructions 
altogether state equation horn clause logic conditional equational logic part construction inverse situation described generalized institutions notion specifiable categorical retractive representation 
particular partiality logic unified algebras viewed categorical retractive representations 
considering levels expressiveness introduced chapters categorical retractive representations level level level level level level 
shows level hand level tho hand equivalent entailment re theorem proving methods conditional term conditional equational logic level level re equational term works level level 
institutions conditional axioms level institutions unconditional axioms level gap bridged categorical retractive representations 
modulo embeddings levels weak chapter limits parchments systematically construct institutions partial algebras motivation developing systems dependent particular logical system single logical system clearly adequate purposes 
practical situations necessary heterogeneous logics contain constructs dealing different features computation parallelism side effects non determinism polymorphism higher order functions features adequately understood algebraic level considered isolation features 
sense develop complex logics simpler logics structured fashion just complex specifications built structured fashion simpler units 
methods building complex logics fashion explored 
sannella tarlecki st results previous chapters means complete 
gaps left study embeddability levels institutions introduced important institutions considered 
know happens concepts partiality relations order sort constraints conditional existence equations combined possible variations course entirely new concepts added 
tried design notation institutions previous chapters 
semantical counterpart constructing institution partial algebras usually redefines concept total algebras scratch generalizes partial case 
may tedious process 
choose different generalizations design decisions scattered definitions 
chapter try combination different institutions 
goguen burstall argued gb bg combinations done limits 
category institutions institution morphisms gb complete tar limits category put different concepts true interaction 
move goguen burstall parchments gb allow defining institutions ffl initial algebra semantics definition sentence syntax ffl special signature definition models ffl semantical algebra sentence evaluators definition semantical evaluation sentences 
introduce notion morphism parchments allows combine different concepts interaction limits 
problem cases limit contains unwanted junk truth values space truth values need preserved 
problem solved imposing congruence relation semantical algebra limit 
congruence usually generated small number axioms state different concepts interact 
expect combination done automatically case combining theories step semi automatic method specify components combined specify interaction concepts 
ideas illustrated generalizing concepts total partial algebras 
role congruence relation decide want valued logic determine concept equality 
chapter published mos 
institution morphisms suffice argued section different notions morphisms institutions see cer overview 
combination logical systems representations adequate 
tar points institution morphisms gb better suited capture intuition building complex institution simpler institution idea may contain basic concepts may add concepts institution morphism phi ff fi gamma 
consists ffl functor phi sign gamma 
sign ffl natural transformation ff sen ffi phi gamma 
sen ffl natural transformation fi mod gamma 
mod ffi phi op satisfaction invariant holds fi sigma phi sigma sigma ff sigma theorem tarlecki tar category ins institutions institution morphisms complete 
apply idea combining things colimits institutions special point take limits colimits 
limits cat results categories amalgamated objects put signatures models level single objects 
contrast sentences combined colimits set due contravariant direction sentence component 
sets sentences combined 
show works introduce known institutions morphisms 
example institution sorted algebras sentences obtained subinstitution 
example institution introduced section 
example institution partial sorted algebras sentences obtained subinstitution 
example institution morphism id ff id ms gamma 
identity signatures models sentences ff sigma inclusion 
example institution morphism phi id fi gamma 
maps signature sigma op pop phi sigma op 
sigma model consists phi sigma model plus family partial operations fi sigma just forgets family partial operations 
prepared consider combination pullback gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma fflffl gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma fflffl turns signatures models op pop sentences op sentences 
equations built total operation symbols true interaction concepts allow write equations containing partial operation symbols 
parchments lack interaction concepts limits institutions shows colimit example disjoint union sentence sets 
unite constructions operators sentence sets 
idea notion parchment introduced goguen burstall gb generate sentences initial algebra semantics 
signature sigma syntax lang sigma sorts operations generates sigma sentences considered terms lang sigma 
combination syntaxes sentences causes true interaction different syntactical operators generation process 
reflected semantics 
semantics ffl special signature gamma acting semantical universe models signature morphisms gamma ffl lang gamma algebra gj specifying semantical evaluation 
sign category sorted relational signatures distinguished sort distinguished relation symbol signature morphisms preserving parchment sign lang gamma gj consists ffl category sign signatures ffl functor lang sign gamma 
sign ffl signature gamma sign ffl semantical algebra gj mod lang gamma gj space truth values usually gj bool bool true false required able construct limits capturing multi valued logics drop restriction 
logical consequence valued notion satisfaction gj gj singles designated truth values example kleene valued logic kle paraconsistent valued logic pri differ set designated truth values 
parchment sign lang gamma gj yields institution sign sen mod ffl sen sigma lang sigma lang sigma initial lang sigma algebra ffl sen oe sigma gamma 
sigma lang oe lang oe lang sigma gamma 
lang sigma lang oe initial homomorphism ffl mod sigma sigma gamma 
gamma sign sigma gamma ffl mod oe sigma gamma gamma 
gamma sigma oe gamma 
sigma gamma gamma 
gamma ffl sigma iff gj lang sigma gamma 
gj lang initial homomorphism 
definition mod continuous slightly different formulation dropping gamma models non continuous mod 
example institution sorted algebras generated parchment sign lang gamma gj denoted 
ffl sign taken institution ffl gamma sorts sets operation symbols op gamma 
functions op theta delta delta delta theta gamma 
foundational problems construction discussed section 
ffl lang takes signature op overloaded signature sorts erm sorted variable system opns true gamma 
erm op erm theta delta delta delta theta erm gamma 
erm sorted op gamma 
op ffl lang takes signature morphism oe sigma gamma 
sigma signature oe lang sigma gamma 
lang sigma maps erm erm oe oe oe defined section op oe op 
ffl gj bool dg true ffl gj erm env gamma 
env set valuations ffl xg ffl op gj op op gamma 
gamma example sign lang gamma gj ffl sign sign gamma gamma ffl lang op lang op sorts sorted variable system opns erm gamma 
sorted bind gamma 
sorted ffl gj lang gamma gj ffl gj env gamma 
bool ffl true false ffl bind gj true env true false env false example partial sorted parchment sign lang gamma gj ffl sign taken institution ffl gamma sorts sets total partial operation symbols total partial functions corresponding sets ffl lang op pop lang op opns pop erm theta delta delta delta theta erm gamma 
erm sorted pop gamma 
pop ffl gj bool dg true ffl gj erm env gamma ffi set partial maps env ffl xg defined undefined ffl op gj op def 
undefined ffl pop gj pop def 
pop def 
undefined justify overloading names fact maps 
parchment morphisms intuition setting parchment morphism phi ff gamma 
expressive built adding new concepts 
phi forgets new parts signatures ff injects old syntax sentences new injects old semantics new 
definition parchments sign lang gamma gj sign lang gamma gj parchment morphism phi ff gamma 
consists ffl functor phi sign gamma 
sign phi gamma gamma ffl natural transformation ff lang ffi phi gamma 
lang ffl lang gamma homomorphism gj gamma 
gj ff gamma gives category parchments parchment morphisms 
id dg dg phi ff preserves truth 
dg dg non designation truth values need preserved 
category parchments parchment morphisms preserving truth 
proposition extended functor gamma 
ins 
proof put sign lang gamma gj phi ff gamma gamma gamma gamma gamma 
sign lang gamma gj sign lang gamma gj phi ff fi gamma gamma gamma gamma gamma 
sign lang gamma gj andrzej tarlecki st different notion parchment morphism 
relation notion discussed forthcoming joint 
ffl ff sigma init lang phi sigma init gamma gamma gamma 
lang sigma ff sigma initial homomorphism ffl fi sigma sigma gamma gamma 
gamma phi sigma phi gamma gamma gamma 
phi gamma id gamma gamma 
gamma fi sigma phi sigma iff phi dg iff phi dg iff init dg diagram iff sigma ff sigma lang phi sigma gj lang phi lang sigma ff sigma gj lang sigma gj ff gamma phi phi init fflffl lang phi fflffl ff sigma id diagram commutes lang phi sigma initial 
institution morphisms lifted parchment morphisms preserving truth example gamma 
id ff id ff sigma inclusion 
example gamma 
phi ff ffl phi op pop op ffl ff sigma inclusion ffl erm inclusion env gamma 
env gamma ffi identity remaining sorts combine take pullback 
prove completeness 
putting parchments limits combing parchments natural condition require space truth valued preserved 
want take limits 
complete see proposition 
take limits risk getting parchment morphisms preserving truth starting diagram 
need prerequisites 
theorem theorem theorem ind op gamma 
cat indexed category 
ind cocomplete 
cocomplete 
oe gamma 
ind oe gamma 
left adjoint lat cocomplete 
able apply theorem need lemmas lemma mod sign gamma 
cat model functor sigma sign mod sigma cocomplete 
proof mod sigma locally finitely presentable corollary cocomplete definition 
lemma oe signature morphism sign mod oe left adjoint denoted oe proof follows corollary 
lemma tar lemma category category functors gamma 
morphisms phi ff gamma 
gamma 
gamma 
consisting phi gamma 
ff ffi phi gamma 
complete cocomplete 
lemma tar lemma categories gamma 
gamma 
functors 
cocomplete comma category cocomplete 
prove lemma roj sign gamma 
cat map functor domain category 
category object morphism 
comma category roj complete 
proof sign shown cocomplete 
sigma signature consisting true sign comma category sigma sign cocomplete lemma 
lemma sign complete 
dual lemma roj complete 
theorem complete 
proof apply functor indicated diagram roj sign op cat gamma lang lang gamma gamma lang lang gamma lang phi gamma apply mod phi ff fflffl ff gamma oo mod ffi apply roj op op gamma 
cat indexed category lat mod ffi apply equivalent op roj op cocomplete dual lemma 
mod apply gamma lang mod lang gamma cocomplete lemma mod apply phi ff mod ff gamma left adjoint lemma 
theorem lat mod ffi apply op cocomplete 
proof theorem proceeds level spell details construction theorem case pullbacks sign lang gamma gj sign lang gamma gj sign lang gamma gj sign lang gamma gj phi ff gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma phi ff gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma fflffl phi ff fflffl phi ff 
step take pullback cat sign sign sign sign phi gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma fflffl phi gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma phi fflffl phi gamma gamma gamma gamma take pushout sign lang phi phi sigma lang phi sigma lang phi phi sigma lang phi sigma lang sigma ff phi sigma id ff sigma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma fflffl ff phi sigma ff sigma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma take pushout mod lang gamma ff gamma ff gamma gj ff gamma gj ff gamma ff gamma gj ff gamma gj gj ff gamma iso fflffl gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma ff gamma fflffl gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma pushout constructed follows lang gamma ff gamma diag gj ff gamma diag gj axioms ff gamma ff gamma gj lang gamma gj lang gamma combine diagrams gj gj equate images gj interpret result freely 
compute pullback gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma fflffl fflffl sign lang gamma gj 
ffl sign sign ffl gamma gamma ffl lang sigma lang sigma lang sigma ffl gj erm env gamma ffi ffl env gamma 
bool ae gj proper subset generates new data partial maps ffl bool ae gj proper subset bind gj generates new data partial maps ffl dg true step interaction concepts equations partial operation symbols 
semantical interpretation bit funny 
problem hint interpret equations partial operation symbols 
pullback construction generates free interaction concepts yielding junk truth value possible equation involving partial term evaluation 
happens presence truth values causes problems combinations 
example adding negation implication behave expected way formula containing undefined term non true false functor false case undefinedness solution problem specify equality interpreted partial term evaluation 
done defining congruence relation gj example define congruence gj generated true defined equal false quotient gj gamma gamma gamma 
gj leads parchment morphism id id resulting quotient reduces junk preservation truth value space restored 
parchment sorted partial algebras existence equations bur 
note quotient semantical algebra special case limit parchments 
similarly define congruences leading parchments weak equations strong equations see section 
get valued logic 
true defined equal false defined equal identify valued map env gamma 
true false satisfying congruence relation generated 
id id yields partial algebras valued logic 
adding relations done augmented relation symbols signatures relations models applications relation symbols terms sentences 
rp gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma fflffl gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma fflffl congruence relation generated true def 
false similarly get 
adding partiality order logic done parchment fol total order logic universal quantification modeled overloaded operation gamma 
cf 
ste pfol rp fol gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma fflffl fflffl valued case pfol fol fol fol gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma fflffl fflffl specify congruence fol defining valued logical connectives quantifiers 
example kleene definitions kle vdm jon 
due lack time consider parchments institutions built partial term evaluation partial variable valuations see sco ac 
help examples ready prove proposition complete 
proof suppose ae ae pullback 
universal property exists unique gamma 
ffi ae ffi ae constructed id id gamma 

ffi id id ffi id id preserve truth 
outer diagram commutes 
universal property gamma 
universal property follows id id ffi phi ff phi ff gj gj gj gj env gamma ffi totally undefined function 
bind gj 
bind gj bind gj gj bind gj gj erm erm bind gj gj true false regardless true false preserve truth ae ae pullback 
oeoe id id ffi id id id id ffi ae ae fflffl fflffl related argued category institutions institution morphisms allows combinations institutions true interaction 
goguen burstall notion parchment gb equipped notion parchment morphism 
category parchments turns complete parchments combine limits true interaction 
happen combination introduces new freely generated truth values 
indicates need specification semantical evaluation combination automatically inferred components cases 
semantical interaction specified explicitly congruence relation semantical algebra parchment generated small number axioms 
axioms specify combined things behave semantically 
design decisions scattered definitions clearly singled point 
basis semi automatic process combination institutions 
ideas illustrated introducing partiality different institutions ranging equational order logic 
hendrik generating syntax ends purely model theoretic functors hil formal similarities parchments 
equation sigma set set sigma sigma set sigma corresponds env set set sigma sigma corresponds env gamma 
viewed part lang reduct gj 
main differences 
generates term syntax term evaluation model categories parchments allow specify term syntax lang functor term evaluation semantical algebra gj modular global way leading possibility structured combinations 
generating term syntax model categories free specifying situations cope realm possible operations consistent model morphisms single particular ones 
clear difference means combination process clear approach allows combinations completeness theorem 
approaches complementary 

institutions partial algebras deal partial variable valuations term evaluation 
approach set replaced category partial maps clear results generalize case 
chapter fly flea 
said fly flee fly said flea 
flew flaw 
general theory institutions logical systems thesis contributes systematic development notions representation may mix distinctions signatures sentences different degrees 
simple institution representations allow map signatures theories sentences sentences models models 
theorem provers re representations extra technical condition 

conjunctive institution representations simple representations sentence may translated finite set sentences 
theorem provers re 

weak institution representations map theories theories models models 
condition modular sentences mapped theory extensions mapping theory collect theory extensions 
semantic properties kept representations sentences mapped theory extensions restricted re theorem provers 

usefulness institution semi representations clear useful link institution semi morphisms notion restricted case embeddings 
see chapter 
notions introduced basic notion plain representation different monadic constructions act target institution 
side effect resulting categories institutions linked adjoint functors relation institution specification frames collapse signatures sentences theories clarified 
dahl 
brandt 
notions useful proved quasi empirical study 
help notions institution representation draw detailed picture relations various known institutions total partial algebras 
main result states institutions weakly equivalent expressive plenty simple conjunctive embeddings see chapter 
relational partial conditional existence equational logic rp 
bur 
partial conditional existence equational logic bur bur 
partial existentially conditioned existence equational logic bur jar jar 
partial logic strong equations bur hoe kle 
hierarchical equationally partial theories hep hep hep fre rei 
limit theories 
cos 
left exact sketches bw gra 
coherent order sorted algebras sort constraints cos mg form strongest level hierarchy expressiveness institutions consisting altogether levels 
hierarchy strict semantical level 
levels hierarchy correspond different degrees may axioms conditional statements equations relations data chapter 
notion embedding weakened way free constructions extra assumption proof theory preserved technically get categorical retractive representations picture changes 
levels expressiveness conditional axioms unconditional axioms 
level conditional axioms special restrictions known institutions pragmatic intended meaning theories models 
turns pragmatic intended meaning formalized categorical retractive representation representation captures essential difference institutions equivalent categorical retractive representations embeddings 
results help unify different branches specification partial algebras semantical point view 
combine specifications written different logical systems multiparadigm specification ac embeddings 
plenty simple conjunctive institution representations set entailment systems theorem provers re cm 
institution graphs set chapter allow navigate different logical systems 
interactive system find weakest expressive logical system specification consideration expressed point edges graphs may translation logical systems 
research pass examination institutions logics stronger incomparable expressiveness capture concepts concurrency 
essential able talk integrate different concepts simultaneously 
notation institutions suggests institutions built modular manner 
chapter starting point examination mathematical foundations combinations 
combinations representations studied mtp leave ad hoc manner construction representations science 
representation combination logical systems fully understood lot done 
appendix category theoretic preliminaries purpose categorical algebra show trivial trivially trivial 
peter freyd thesis familiarity category theoretic notions category functor natural transformation limit adjoint assumed 
readers familiar may consult textbook example bor 
appendix notions may common recalled 
monads kleisli categories monad category triple gamma 
functor gamma 
ffi gamma 
natural transformations satisfying commutativity conditions ffi ffi identity ffi ffi associativity monad induces kleisli category intuition morphisms go enriched target constructed flexibly morphisms defined ffl objects ffl morphism gamma 
morphism gamma 
ffl composite gamma 
gamma 
composite gamma 
gamma gamma gamma 
gamma gamma 
ffl identity object just jx gamma 
pair adjoint functors gamma 
gamma gamma gamma 
gamma gamma 
gamma 
gamma 
gamma gamma 

unit adjunction just proceedings conference categorical algebra 
adjoint situation ffl gamma 
putting ffi ui yields monad full faithful comparison functor gamma 
comparing kleisli adjunction monad adjunction 
gamma 
gamma gamma gamma 
ffl gamma gamma gamma gamma 
gamma gamma 

oo omega omega omega omega omega omega omega omega omega omega omega pi pi yy ee omega omega omega omega omega omega omega omega omega omega omega multiple pushouts multiple pullbacks amalgamation gamma gamma 
source class arrows common codomain 
note codomain separately may empty 
colimit diagram consisting objects arrows source called multiple pushout source 
denoted colim ae gamma 
ae gamma gamma 
tip colim tip colimiting cocone ae ae injections 
category canonical multiple pushouts category endowed distinguished multiple pushout source result pasting distinguished pushouts distinguished pushout 
dual notion multiple pullback see ahs 
cat multiple pullbacks construction amalgamation gamma gamma 
sink cat gamma gamma 
gamma 
multiple pullback 
objects written amalgamated sums ja fixed object unique object morphisms similar relation holds 
definition full subcategory called colimit closed colimit diagram belongs fullness subcategory colimit diagram 
proposition full subcategory colimit closed isomorphism closed proof take dual proposition ahs 
proposition left adjoint functors preserve colimits 
proof dualize proposition ahs 
proposition embeddings isomorphism dense subcategories preserve colimits 
proof isomorphism dense subcategory limit dense 
apply dual proposition ahs 
locally finitely presentable categories definition ar object category called finitely presentable provided hom functor hom gamma 
set preserves directed colimits 
example set finitely presentable set iff finite 
sorted algebra finitely presentable mod op iff finitely generators finitely equations usual algebraic sense 
definition ar category called locally finitely presentable provided cocomplete set finitely presentable objects object directed colimit objects proposition ar locally finitely presentable category complete 
locally finitely presentable categories categories satisfy completeness properties completeness cocompleteness properties roughly speaking categories structures operations finite arities 
effective equivalence relations definition cf 
ar relation object subobject theta usually represented pair gamma 
morphisms morphism gamma 
theta monomorphism 
call gamma 
equivalence relation provided 
reflexive diagonal theta contained subobject represented 
symmetric monomorphisms represent subobject 
transitive form pullback subobject represented ffi ffi contained represented definition kernel pair morphism gamma 
category pair gamma 
fflffl pullback 
category effective equivalence relations equivalence relation kernel pair morphism 
foundational issues theory logical systems problem standard foundations mathematics example zermelo fraenkel set theory zf suffice standard institutions collections models signature proper classes resp 
categories small proper class objects 
problem arises category theory solved follows 
extend zf contains additional axioms stating set universe inner model zf closed standard set theoretic operations products powersets 
call sets classes elements sets 
category classes objects morphisms arbitrary objects morphisms 
likewise functors hs 
existence universe essentially equivalent existence strongly inaccessible cardinal 
impossible prove relative consistency axiom 
derive con zf inner model zf zf proved consistent situation totally different axiom choice continuum hypotheses 
godel proved relative consistency axiom choice zf con zf con zfc axiom choice introduce inconsistencies zf prove zf con zf con get con second godel incompleteness theorem inconsistency follows 
spite generally felt free inconsistencies 
usually universe needed possibility assuming infinite hierarchy universes possibilities inconsistencies 
returning logical systems institutions component mod category signatures categories 
behave respects categories functors 
differences category theory deals conditions 
example categories usually limits set indexed diagrams limits class indexed diagrams exist thin categories pre orders 
limits non thin exist indexed large 
essential thing prove plaininst inst ins 
entirely trivial objects categories institutions contain components 
domain codomain bounded fixed conglomerate 
categorical logics meseguer mes institutions logics models small categories 
leads funny possibility embedding categorical logics partial algebras conditional existence equations jump meta object level see section 
jump possible models large categories class objects resulting categorical logic lives higher universe 
need higher universes due large objects gamma gj mtp replaced similar category higher universe needed 
bibliography ad amek herrlich 
essentially equational categories 
cahiers topologie eom 

ahs ad amek herrlich strecker 
concrete categories 
wiley new york 
ar ad amek 
locally presentable accessible categories 
cambridge university press 
ad 
consistency semantics equational definitions predefined algebras 
rusinowitch 
emy eds conditional term rewriting systems third international workshop lecture notes computer science 
springer verlag 
ad 
consistency equational 
voronkov ed logic programming automated reasoning lecture notes computer science 
springer verlag 
af fiadeiro 
unifying theories different institutions 
haveraaen owe 
dahl eds trends data type specifications 
th workshop specification data types lncs 
appear 
springer verlag 
ac astesiano cerioli 
relationships logical frameworks 
bidoit choppy eds proc 
th adt workshop lncs 
springer verlag 
ac astesiano cerioli 
multiparadigm specification languages attempt foundations 
andrews groote eds semantics specification languages workshops computing 
springer verlag 
ac astesiano cerioli 
non strict don care algebras specifications 
mathematical structures computer science 
bal baldwin 
fundamentals stability theory 
springer verlag 
bar barr 
models horn theories 
contemporary mathematics 
bw barr wells 
toposes triples theories der mathematischen wissenschaften 
springer verlag 
bau 
unifying initial loose semantics parameterized specifications arbitrary institution 
abramsky maibaum eds tapsoft vol 
caap lncs 
springer verlag 
bor borceux 
handbook categorical algebra iii 
cambridge university press 
bur burmeister 
partial algebras survey unifying approach valued model theory partial algebras 
algebra universalis 
bur burmeister 
model theoretic approach partial algebras 
akademie verlag berlin 
bg burstall goguen 
putting theories specifications 
proceedings th international joint conference artificial intelligence 
cambridge 
cer cerioli 
relationships logical formalisms 
phd thesis td universit di pisa genova udine 
cm cerioli meseguer 
may borrow logic 
sokolowski eds proc 
mfcs mathematical foundations computer science lncs 
springer verlag berlin 
appear theoretical computer science 
cmr cerioli mossakowski reichel 
total equational partial order 
astesiano 
kreowski krieg bruckner eds algebraic foundations systems specifications 
chapman hall 
appear 
rhode wolter 
categorical concepts parameterized partial specification 
mathematical structures computer science 
cos coste 
localisation spectra sheaf representation 
fourman mulvey scott eds application sheaves lecture notes mathematics 
springer verlag 
ehrig orejas 
theory algebraic module specification including behavioural semantics constraints 
nivat rattray rus scollo eds proc 
amast workshops computing 
springer verlag 
em ehrig mahr 
fundamentals algebraic specification 
springer verlag heidelberg 
em ehrig mahr 
fundamentals algebraic specification 
springer verlag heidelberg 
epo ehrig pepper orejas 
trends algebraic specification 
proc 
icalp lncs 
springer verlag 
far farmer 
partial functions version church simple type theory 
journal symbolic logic 
fef feferman 
new approach data types informal development 
mathematical structures computer science 
fs fiadeiro sernadas 
structuring theories consequence 
sannella tarlecki eds trends data type specification th workshop specification data types lncs 
springer verlag 
fre freyd 
aspects topoi 
bull 
austral 
math 
soc 

gu gabriel 
lecture notes mathematics 
springer verlag heidelberg 
goguen 
jouannaud jos meseguer 
operational semantics order sorted algebra 
brauer ed proceedings international conference automata languages programming lecture notes computer science 
springer 
gog goguen 
categorical manifesto 
mathematical structures computer science 
gb goguen burstall 
study foundations programming methodology specifications institutions charters parchments 
pitt ed category theory computer programming lncs 
springer verlag 
gb goguen burstall 
institutions model theory specification programming 
journal association computing machinery 
predecessor lncs 
gm goguen meseguer 
equality types generic modules logic programming 
degroot lindstrom eds logic programming 
functions relations equations 
prentice hall englewood cliffs new jersey 
gm goguen meseguer 
order sorted algebra equational deduction multiple inheritance overloading exceptions partial operations 
theoretical computer science 
goguen thatcher wagner 
initial algebra approach specification correctness implementation data types 
yeh ed current trends programming methodology 
prentice hall 
gw goguen winkler 
introducing obj 
research report sri csl sri international 
gra gray 
categorical aspects data type constructors 
theoretical computer science 
gh guttag horning 
report larch shared language 
science computer programming 
hhp harper honsell plotkin 
framework defining logics 
journal association computing machinery 
hn 
pushouts order sorted algebraic specifications 
proceedings amast lecture notes computer science 
springer verlag 
hs herrlich strecker 
category theory 
allyn bacon boston 
hil 
syntax 
algebra 
manuscripts st peter college oxford 
hoe 

partial algebras 
universal algebra proc 
coll 
colloq 
math 
soc 
bolyai 
north holland amsterdam 
jar 
weak varieties partial algebras 
algebra universalis 
jar 
programs partial algebras 
theoretical computer science 
jon jones 
systematic software development vdm 
prentice hall 
kle kleene 
metamathematics 
north holland 
kre 
kreowski 
partial algebras flow algebraic specifications 
ottmann ed proc 
icalp lecture notes computer science 
springer verlag 
km 
kreowski mossakowski 
equivalence difference institutions simulating horn clause logic algebras 
mathematical structures computer science 
ls lambek scott 
higher order categorical logic 
cambridge studies advanced math 
cambridge university press 
lan mac lane 
categories working mathematician 
springer 
lei leivant 
characterization complexity classes higher order logic 
proc 
nd annual conference structure complexity theory 
ieee 
llo lloyd 
foundations logic programming 
springer verlag 
mss scollo 
equational type logic 
theoretical computer science 
mss scollo 
expressiveness equational type logic 
rattray clark eds unified computation laboratory 
oxford university press 
mom mart oliet meseguer 
data types logical frameworks 

may 
galleries institutions 
report daimi pb aarhus university 
mes meseguer 
general logics 
logic colloquium 
north holland 
mes meseguer 
conditional rewriting unified model concurrency 
theoretical computer science 
mg meseguer goguen 
order sorted algebra solves constructor selector multiple representation coercion problems 
information computation march 
mossakowski 
parameterized recursion theory tool systematic classification specification methods 
theoretical computer science 
appear 
mossakowski 
simulations various institutions partial total algebras 
talk workshop esprit basic research working group compass dresden september 
mos mossakowski 
hierarchy institutions separated properties parameterized data types 
astesiano reggio tarlecki eds trends data type specification 
proceedings lecture notes computer science 
springer verlag london 
mos mossakowski 
different types arrow logical frameworks 
meyer auf der heide monien eds proc 
icalp lncs 
springer verlag 
mos mossakowski 
equivalences various logical frameworks partial algebras 
ed computer science logic 
th workshop csl 
paderborn germany september selected papers lecture notes computer science 
springer verlag 
mos mossakowski 
limits parchments systematically construct institutions partial algebras 
haveraaen owe 
dahl eds trends data type specifications 
th workshop specification data types lncs 
appear 
springer verlag 
mtp mossakowski tarlecki paw 
combining representing logical systems 
logic colloquium 
mos mosses 
unified algebras institutions 
proceedings th annual ieee symposium logic computer science 

pad 
computing horn clause theories 
springer verlag heidelberg 
paw pawlowski 
context institutions 
haveraaen owe 
dahl eds trends data type specifications 
th workshop specification data types lncs 
appear 
springer verlag 
poi poign 
algebra categorically 
pitt ed category theory computer programming lecture notes computer science 
springer verlag 
poi poign 
foundations rich institutions institutions poor foundations 
ehrig ed categorical methods computer science aspects topology lncs 
springer verlag 
pri priest 
inconsistent arithmetics non euclidean geometries 
invited talk logic colloquium san 
rei reichel 
initial computability algebraic specifications partial algebras 
oxford science publications 
ss scollo 
soft stairway institutions 
bidoit choppy eds proc 
th adt workshop lncs 
springer verlag 
sst sannella sokolowski tarlecki 
formal development programs algebraic specifications parameterisation revisited 
acta informatica 
st sannella tarlecki 
working multiple logical systems foundations algebraic specifications formal program development chapter 
cambridge university press appear 
see edu pl tarlecki book index html 
st sannella tarlecki 
specifications arbitrary institution 
information computation 
st sannella tarlecki 
formal development programs algebraic specifications implementations revisited 
acta informatica 
st sannella tarlecki 
extended ml past 
ehrig jantke orejas reichel eds proceedings trends data type specification lncs 
springer 
st sannella tarlecki 
algebraic specification formal methods program development real problems 
rozenberg salomaa eds current trends theoretical computer science 
essays tutorials 
world scientific series computer science vol 

st sannella tarlecki 
extended ml institution independent framework formal program development 
proc 
workshop category theory computer programming lncs 
springer 
sco scott 
identity existence intuitionistic logic 
fourman mulvey scott eds application sheaves lecture notes mathematics 
springer verlag 
ss sernadas sernadas 
theory spaces 
research report lisboa portugal 
adt compass 
shelah 
classification theory number non isomorphic models studies logic foundations mathematics 
north holland 
sho shoenfield 
mathematical logic 
addison wesley reading massachusetts 

peano algebras quasi algebras mathematicae mat 


ste 
order parchment 
report prg tr oxford university computing laboratory 
tar tarlecki 
existence free models algebraic institutions 
theoretical computer science 
tar tarlecki 
bits pieces theory institutions 
pitt abramsky poign rydeheard eds proc 
intl 
workshop category theory computer programming guildford lncs 
springer verlag 
tar tarlecki 
moving logical systems 
haveraaen owe 
dahl eds trends data type specifications 
th workshop specification data types lncs 
appear 
springer verlag 
tar tarlecki 
structural properties categories institutions 
technical report warsaw university 
tarlecki burstall goguen 
fundamentals algebraic tools semantics computation 
part indexed categories 
theoretical computer science 
thatcher wagner wright 
specification data types conditional axioms 
technical report rc ibm yorktown heights 
wir wirsing 
structured algebraic specifications kernel language 
theoretical computer science 
wol wolter 
institutional frames 
trends data type specification 
proceedings lncs 
springer verlag london 
yan yan 
theory implementation sort constraints order sorted algebra 
phd thesis oxford university 

