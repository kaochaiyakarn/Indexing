geometric constraint solver william bouma ioannis christoph hoffmann department computer science purdue university west lafayette cai robert paige department computer science courant institute mercer str new york ny report csd tr report development dimensional geometric constraint solver 
solver major component new generation cad systems developing high level geometry representation 
solver uses graph reduction directed algebraic approach achieves interactive speed 
describe architecture solver basic capabilities 
discuss detail extend scope solver special emphasis placed theoretical human factors involved finding solution exponentially large search space solution appropriate application way finding intuitive untrained user 
solving system geometric constraints problem considered communities different approaches 
example symbolic computation community considered general problem supported part onr contract nsf cda nsf ecd 
supported david ross fellowship 
supported part onr contract afosr nsf mip 
revised january 
report available anonymous ftp arthur cs purdue edu directory pub 
context automatically deriving proving theorems analytic geometry applying techniques vision problems 
geometric modeling community considered problem purpose developing sketching systems rough sketch annotated dimension constraints instantiated satisfy constraints 
reviewed section 
applications approach mechanical engineering especially manufacturing 
mainly manufacturing applications mind 
purposes goals follows 
develop constraint solver information flow user interface underlying solver formalized high level representation minimally committed particular capabilities technical characteristics solver independent interface 
representation basis archiving sketches neutral format ability retrieve archived sketch edit 
solution building block larger project developing new generation cad systems neutral high level geometry representation expresses design intent preserves ability redesign 

explore utility different general purpose interoperating rapid prototyping languages systems developing specific tools experimenting conveniently variety ideas approaches constraint solving 
aside known special purpose tools lex yacc constraint solver high level language setl specify complex combinatorial algorithms transformational system apts perform syntactic analysis symbolic manipulation geometrical constraint specifications 

study number neglected aspects constraint solving 
include redirecting solver different solution constrained sketch devising generic techniques extending capabilities solver preserving interactive speed rigorous correctness proof solver 
note correctness proof reported separately 
reports substantial progress problem dimensions identifies number open issues remain 
approaches geometric constraint solving consider constrained dimensional sketches formed points lines circles segments arcs 
constraints explicit dimensions distances angles constraints parallelism incidence tangency collinearity prescribed radii 
exclude relations dimension variables inequality constraints 
particular user specifies rough sketch adds geometric dimensional constraints normally satisfied sketch 
sketch topologically correct 
constraint solver determines sketch geometric elements processes constraints determine geometric element constraints satisfied 
solving underconstrained sketches significant practical interest 
experience solving underconstrained sketches customarily approached adding solution progresses constraints derived metric properties initial sketch ad hoc rules selection constraints 
prove underconstrained sketch partially solved unique way constraints 
adding constraints deduced metric properties user supplied rough sketch rely heuristic selection 
explain section difficult 
argue section consistently constrained sketches attractive property number possible solutions reduced 
consequence constraint problems unambiguously specify user intent 
finding solution intractable simple configurations research needed devise demonstrably effective approaches 
constraint solver variational 
solver obliged process constraints predetermined sequence constraints specified user parametric sense determined serially explicit function previous constraints 
analogous writing constraints declarative language solution independent order constraints written 
greatly increases generality constraint solving problem demands solvers advanced mathematical concepts 
users geometric constraint solving systems think geometrically express visual gestures constraint solvers different internal representation 
users quite unaware nature underlying representation internal workings constraint solver 
coupled fact constrained geometric constraint problem general exponentially solutions satisfies user intent constraint solvers address distinct tasks 
determine problem solved 

possible solutions identify user intended 
literature assumes tacitly second task easy discharge 
section question assumption show task difficult 
describing approach task characterize approaches literature 
constraint solvers combination methods 
satisfy editorial requirements review brief 
detailed analysis extensive prior constraint solving see 
numerical constraint solvers numerical constraint solvers constraints translated system equations solved iterative method 
newton iteration solvers require initial values initial sketch satisfy constraints 
solvers quite general capable dealing overconstrained consistent constraint problems 
examples include brunet gossard light 
nonlinear systems exponential number solutions newton iteration find 
numerical solvers inappropriate initial sketch topologically correct solver locks solution unsuited application method find suitable alternatives 
sutherland sketchpad system method numerical relaxation 
systems relaxation alternative method 
constructive constraint solvers class constraint solvers fact configurations engineering drawing solvable ruler compass classical repertoire construction steps 
methods constraints satisfied constructively placing geometric elements order may may fixed 
natural user approach suitable interactively debugging sketch 
rule constructive solvers rule constructive rewrite rules discover execute construction steps 
bruderlin solve constraints way incorporate knuth bendix critical pairs algorithm 
show method correct solves problems constructed ruler compass 
rule constructive solvers include 
problem nonunique solutions considered 
logic programming style constraint solving approach prototyping experimentation extensive computations searching matching rewrite rules constitute liability 
graph constructive solvers graph constructive solvers phases 
graph representing constraints analyzed sequence construction steps derived 
second construction steps carried derive solution 
approach fast methodical rule constructive approach 
repertoire possible constraints increases algorithm modified 
requicha uses dimensioned trees allow horizontal vertical distances 
todd generalizes dimension trees gives characterization expressive power solver 
owen presents extension principle include circularly dimensioned sketches dcm commercial constraint solver method 
core algorithm similar describe owen solvers detail 
owen analyzes constraint graph components 
component reduced number elements interact components determination elements fit 
component separately determined 
procedure recursive components reduced turn members components reduced graph 
key aspect solver ruler compass construction construction steps allowed 
algebraically equivalent solving quadratic equations specific coordinate computations require sophisticated mathematical computations 
argues solver complete ruler compass constructible point configurations prescribed distances algebraically independent 
kramer describes constraint solver deals constraints kinematics characterized basic joint types 
complex geometric elements placed implicitly choosing suitable number local coordinate frames placed respect rigid body motions 
propagation methods constraint propagation popular approach early constraint solving systems 
constraints translated system equations involving variables constants undirected graph created nodes equations variables constants edges represent variable constant occurs equation 
method attempts direct graph edges equation solved turn initially constants 
succeed various propagation techniques tried guaranteed derive solution exists fail circularly constrained problem 
detailed review see 
graphical user interface constraint solver architecture constraint solver symbolic constraint solvers constraints translated system algebraic equations 
system solved symbolic algebraic methods grobner bases wu method 
methods solve general nonlinear systems algebraic equations may require exponential running times 
kondo considers addition deletion constraints buchberger algorithm derive polynomial gives relationship deleted added constraints 
constraint solving system information flow rationale architecture constraint solver shown 
user draws sketch annotates geometric constraints 
additional capabilities include interacting solver identify different valid solution 
user interface translates specification textual language records problem faithfully 
user edit textual problem specification unnecessary specification edited updated automatically user interface 
language designed achieve objectives neutral problem specification assumptions architecture underlying constraint solving algorithm 
quite easy federate constraint solver capable handling geometric configurations consider 
textual problem specification handed constraint solver translates constraints graph described solves graph reductions govern workings algebraic variational constraint solver 
solver capabilities consequence certain construction steps implemented 
particular constraint problem solved steps solver find solution 
construction steps involve ruler compass constructions quadratic equations need solved 
construction steps permitted ruler compass situations roots univariate polynomial numerically 
polynomial precomputed coefficients functions specific constraint values 
constrained geometric problem exponentially solutions number constraints 
solutions correspond algebraic set zero dimensional ideal generating polynomials nonlinear 
solver determine possible solutions 
doing time waste time overwhelm user 
certain heuristics described narrow solutions final configuration corresponds intended solution high probability 
case different solution wanted solver redirected intended solution interactively 
system component constraint driven variational cad system high level declarative editable geometry representation discussed 
architecture poses challenges 
efficient variational constraint solving address problem 
key challenge formulate language neutral way committing particulars user interface solver algorithms 
subtle challenge way dimensions displayed sketch assumptions capabilities user interface 
likewise interacting solver find alternative solutions requires conceptualizing solution process way assumptions 
assume solver capable undoing placement operation look different placement geometric element 
textual protocol communicating matters encapsulated 
system implementation graphical user interface application written motif widget set 
user prepared sketch changed specification passed text constraint solver 
solver written novel software tools apts transformational programming system high level language setl having special features solver exploits 
front constraint solver engine apts program reads program type checks 
example check lines participate angle constraints 
obvious type errors program transformed equivalent specification normal form distance angle constraints allowed 
example incidence constraints translated zero distance constraints 
specification orientation lines angle constraints regularized 
relations representing constraint graph extracted program exported foreign interface setl program implements main algorithmic part solver 
novel systems apts setl motivated special needs project 
major part research discovery implementation complex algorithms 
goal high performance new algebraic approach constraint solving entails deep graph theoretic analysis implicit dependencies constraints complex graph traversals analysis 
wide variety techniques available proper evaluation requires extensive labor intensive computational experiments 
tools allowed implement algorithms surprising speed 
hope promising new technology mechanically transforming prototype setl programs high performance code 
special syntactic semantic transformational capabilities apts suited flexible experimental development logical framework evolving language corresponding solver 
systems centaur synthesizer generator refine apts single uniform formalism lexical analysis syntactic analysis 
semantic formalism apts advantages conventional attribute grammar approach synthesizer generator 
apts uses logic approach semantics semantic rules define relations written datalog language full expressive power prolog 
rules written independently individual grammar productions parse tree structure 
define relations rich assortment primitive constructed domains brevity convenience unrestricted circular attribute grammars 
aware implementation allows comparable unrestricted circularity 
solver algorithmics extensibility discuss basic method solving geometric constraints 
owen solver top determining interaction clusters geometric elements basic method bottom 
allows prove correctness basic algorithm respect constraint graph analysis subsequent geometric construction 
permits systematic extensions expressive power solver algorithm easy describe implement understand 
basic algorithm placing geometric elements cluster determined 
construction steps needed described 
cluster extended cluster constructed way 
clusters sharing geometric elements coalesced simple rules described rigid motion respect 
coalesced clusters treated clusters recursive nature owen algorithm manifest approach 
basic algorithm quadratic equations solved 
basic algorithm restricted ruler compass constructible configurations 
example configuration corresponding constraint graph 
unlabeled edges represent incidence 
larger class geometric elements consisting points lines circles basic algorithm owen methods solve ruler constructible configurations 
example subcase table section basic solver extended 
dcm solve configuration depending way problem posed 
suspect complete ruler compass constructible solver larger class geometric elements requires graph rewriting rules equivalent knuth bendix algorithm 
discuss general method extending solver configurations done basic algorithm 
strategy places clusters related constraints 
extension goes ruler compass constructions requires root finder univariate polynomials 
conceptually extension corresponds adding new geometric construction steps 
solving graph reduction cluster formation user sketch annotated constraints translated graph vertices correspond geometric elements points lines circles edges constraints 
particular segment translated line points arc circle arc points center circle 
example sketch left translated graph right 
graph represents distance constraint angle constraint 
tangency expressed distance constraint center circle line tangent circle 
graph edges represent incidence 
circles fixed radius determined placing center vertex corresponding cluster circle arc constraint graph 
basic idea solver algorithm follows 
pick geometric elements graph vertices related constraint connected edge place respect 
elements known geometries unknown 

repeat unknown geometric element constraints relating known geometric elements place unknown element respect known ones construction step 
geometric element placed known 
note subsequent cluster formation initial geometric elements may belong cluster 
example graph may elements effectively drawing line placing point 
place sequence point additional elements placed cluster complete shown 
note know situated far arc extends 
starting clusters determined 
consists cluster consists note geometric element may occur cluster 
clusters shown side side 
recursion clusters geometric element common constraint general placed respect 
shared geometric element identified remaining degree freedom eliminated additional constraint 
clusters sharing geometric element placed relative 
designating elements cluster case third cluster cluster placement operation subsumes cluster case 
shows cases 
clusters briefly cluster merging accomplished follows fix cluster say fixing geometric elements place respect deriving needed constraints metric properties clusters move clusters match position geometric elements rigid body transformation 
construction steps reduction steps correspond standardized geometric construction steps solving standardized small systems algebraic equations 
construction steps include basis steps basis steps place geometric elements related graph edge 
include placing point line placing lines angle placing points distance 
note general ways place geometric elements 
point placements rules place point constraints 
include placing point prescribed distance points prescribed distances lines 
see 
recursive cluster placement point placement rules left distance points right distance lines 
line placements rules place line respect geometric elements 
include placing line tangent circle point distance points circle placement rules place circle fixed variable radius 
fixed radius circles require constraints determining reduced placing center point 
variable radius circles require constraints reduce cases problem finding circle tangent ones 
algebraic formulation geometric elements represented follows points represented cartesian coordinates 
line determined implicit equation coefficients normalized consequently distance origin line 
normalization lines determined numerical quantities signed distance origin line direction angle cos ff constraints determine line 
lines oriented choosing gamman direction line 
circles represented cartesian coordinates center radius unsigned number 
graph transformations scope basic solver extended certain graph transformations 
simple effective technique extend scope solver 
example angle constraints ff fi lines third angle constraint added requiring angle ffi gamma ff gamma fi 
transformations 
note avoid transformations restrict generality solver 
example consider constraining configuration shown point line point line situation implies lines incident points incident 
resulting constraint graph 
possibilities lead different solutions 
apply transformation constraint graph added incidences new graph edge excluded possibility solutions 
added incidence edges introduced unwarranted assumption points lines coincide 
case exhibit examples solvable constraint problem unsolvable 
example undesirable graph transformation 
solver extensions basic algorithm solving constraints extended handle complex geometric situations 
strategy discussed generalizes placement clusters respect constraints 
constrast individual geometric elements clusters degrees freedom 
recursion basic algorithm able place clusters shared elements special case 
clusters related constraints possible place respect basic algorithm 
describe extend basic algorithm systematically configurations solved 
simple example type extension consider 
triangle specified length side angle fl height see associated constraint graph clusters placed relation consisting vertex sides specified fl 
clusters obtained related constraints 
case side cand vertices consider situation shown 
cluster cluster solved separately distinct elements identified constrained clusters placed respect 
distinct elements involved basic algorithm solve problem 
conceptual approaches fix clusters 
sequence ordinary construction steps places cluster possibly auxiliary construction points lines circles 
fixing clusters consider cluster moves constraints satisfied 
move degree freedom 
precompute locus geometric element constraint ignored far 
element point locus implicit algebraic curve coefficients expressions constraints 
locus intersected construction line circle depending nature third constraint intersections identify positions third geometric element remaining constraint satisfied 
method corresponds ruler compass construction 
second method necessarily equivalent ruler compass construction 
example clusters triangle distances corresponding vertices satisfied ruler compass construction exists 
methods conceptually satisfy constraints examine motion remaining degree freedom 
particularly case point loci classical curves obtained described literature 
major cases distinguished possible element pairs constraints satisfy priori 
major cases involve angle subcase constraints properties properties method number combination solution 


table essential combinations 
constraint symbols mean incident nonzero distance parallel nonzero angle 
third inter cluster constraint parallel constraint lines shown solvable method 
major case number subcases depend third constraint particular value configurations constraints 
suitable coordinate transformations combined 
examine major case requires method general subcases solved method 
case assume cluster elements points line cluster elements lines point constraint possibilities denoted nonzero distance incidence angle parallel 
configuration fix cluster move cluster relative constraints satisfied 
consider moves constraint constraint satisfied 
focus situation constraints incidence constraints 
subcases arise summarized table 
combinations involving mapped table replacing lines suitably positioned parallel lines 
consider subcase assuming distance distance distance distances may zero 
clusters shown 
families solutions exist lines coincide possibly opposite orientation points subcase configuration coincide 
situation locus pair lines parallel distance intersections lines parallel distance possible locations determines relative position respect second situation locus circle radius intersections lines parallel distance possible locations see 
consider subcase table 
determine curve locus assuming coordinates 
coordinate transformation assume coordinates constrained coordinates 
simplest case distance apart 
left corresponds 
angle lines gammaa express sin cos gammaa locus described equations xu gamma au yu gamma gamma eliminating grobner basis computation establishes locus discussed configuration subsection 
subcase left solution right second solution 
locus ia pair lines parallel left circle centered right 
left subcase right subcase degree curve gamma gamma gamma curve intersected lines parallel distance intersection points determine possible positions incident 
equations describing locus slightly complicated xu gamma au yu gamma gamma lies degree curve coefficients polynomial degree 
curve intersected lines parallel distance position 
general situation subcase referring right equations describing locus xu gamma au gamma yu gamma gamma gamma gamma grobner basis computation determines locus curve degree 
coefficients polynomials degree 
line loci element locus determine point need equations determining quantities 
case lines coefficients configuration satisfying line constraints line equation equivalently direction angle distance origin 
example consider case constrained element pairs 
suppose approach situation satisfying constraints point line pairs precompute line equation varies 
subcases 
moving cluster point lines fixed cluster point lines subcase general situation determine distance moving line origin components normal vector length see 
ff fixed angle moving lines direction angle angle determines particular position moving cluster 
fl direction angle line assume lines form angle ffi fi direction angle solve ffi fi gamma ff sigma ffi gamma fi ff sigma accounting different positions moving configuration relative orientation lines known resulting configuration easily computed 
suitable nonlinear system equations formed analyzed grobner bases 
user interaction general constrained geometric constraint problem exponential number solutions 
example consider drawing points gamma distance constraints assume distance constraints place points serially time determining point distances known points 
general new point placed different locations known points structurally distinct solutions constraint problem new point put distance respectively 
draw circles radius radius intersection circles possible locations points gamma solutions 
solutions intended depend application created constraint problem place 
discuss select right solution 
call root identification problem technical level corresponds selecting number different roots system nonlinear algebraic equations 
solutions constrained problem merely symmetric arrangements shape may differ structurally great deal 
shows possibilities illustrate possible range 
application usually require specific solution 
identify intended solution trivial undertaking 
wide range possible solutions severe consequences problem communicating generic design constrained sketches 
sketch constraint schema necessarily identify solution intended needs communicated 
section consider approaches selectively moving geometric elements adding constraints narrow number possible solutions dialogue constraint solver identifies interactively intended solution 
approaches contend difficult technical problems 
consider possibility structuring constraint problem hierarchically 
doing increase knowledge design intent diminish obvious technical problems 
moving selected geometric elements constraint solvers known adopt set rules select solution ultimately user 
stated explicitly incorporated implicitly code solver rules ultimately infer solution meant observing topological coordinate relationships initial sketch user specified constraint problem 
solution graphically user natural user graphically select certain geometric elements final sketch considered misplaced 
user show solver selected element placed relation elements moving mouse 
simple idea ultimately may effective number conceptual difficulties need overcome 
example picking geometric element ambiguous 
recursive nature solver picking refer individual element cluster super clusters part 
importantly required restructuring entail complex operations merely moving single group geometric elements 
furthermore length segments arcs implicitly depends final placement clear user reasonably expected understand effect moving geometries 
clearly research needed fashion concept useful method 
adding constraints consider problem placing points prescribed distances 
narrow solution meant ways may add domain knowledge application may give additional geometric constraints problem 
unfortunately ideas result np complete problems 
instance assume set points set vertices polygonal cross section 
case application specific information require resulting cross section simple polygon form polygon self intersecting 
may communicated giving addition cyclical ordering points sequence vertices cross section 
simple additional requirement problem np complete theorem suppose points plane constrained gamma pointto point distances cyclical ordering specifying connect points obtain polygon 
problem identifying solution resulting polygon simple self intersecting np complete 
consequently little hope adding domain specific knowledge application expectation obtaining efficient constraint solver finds intended solution cases 
adding application specific rules instance derive simple polygons add geometric constraints 
example consider solutions parallel lines specifying parallel lines distances pairs 
shown distinct solutions constrained problem 
adding required distance third pair parallel lines eliminate case solution unique 
overconstrained geometric problems carefully avoided field set constraints contradictory 
blue prints usually reasons eliminating unwanted solutions limiting errors redundancy 
unfortunate simple case placing parallel lines overconstrained problem np complete 
adding constraints simple situations results np complete problems attractive idea adding constraints narrow range possible solutions practice 
plausible heuristic approach succeeds solving problem range cases practical interest possibility specific instances solver bog 
research needed better understand potentialities approach 
dialogue solver considerations suggest automatic approach root identification succeed delivering efficient constraint solver gets intended solution time 
consequently feel promising alternative devise simple heuristics succeed cases easy understand 
rely interaction user cases heuristics fail deliver acceptable solution 
note placement rules widely rarely discussed 
placement heuristics solvers known derive initial geometric sketch information select specific solution 
reasonable expect sketch topologically accurate observing side oriented line specific point lies sketch reliably indicating final solution 
generic designs archived edited longer expect types tangency arc segment simple correspondences sketch ultimate solution dimension values change may side line point situated 
system highly effective rules 
rules fail rely user interaction amend situation require 
note rules fully supported approach different situations characterized recorded faithfully 
points consider placing points relative 
points drawn initial sketch position order determined follows 
determine lies respect line oriented line determine lies preceding solver preserve orientation possible 
lines point placing point relative lines possible locations selected quadrant oriented lines point lies original sketch 
note line orientation permits unambiguous specification angle lines 
line points line oriented points kept side line original sketch 
furthermore preserve orientation vector respect line orientation preserving sign inner product line tangent vector 
tangent arc arc tangent line segments centered arc subtended preserves type tangency 
types tangency illustrated 
center placed smaller arcs possible chosen ties broken placing center side segments input sketch 
specific degeneracy heuristics arc length ffi suppressed 
rules tangency rule mutually exclusive 
applicable interference 
tangency rule contradict rules dimensioned arcs circles determined placing center 
cases tangency rule takes precedence 
experiments rules situations solved user expect 
rules easy implement easy understand user 
selecting alternative solutions useful paradigm user solver interaction intuitive account fact application users intimately knowledgeable technical workings solver 
need simple effective communication paradigm user interact solver direct different solution browse subset solutions case right 
conceptually possible solutions constraint problem arranged tree leaves different solutions internal nodes correspond stages placement elements clusters 
different branches particular node different choices placing element cluster 
tree depth proportional number elements clusters 
browsing possible solutions exponential number elements inappropriate stepping solution proportional tree depth 
added solver incremental mode user browse construction tree visually informed elements placed particular moment 
button user steps forward backwards construction sequence traversing tree path backwards root forward leaf 
level geometric element placed point highlighted panel displays number possible positions 
user select possible choices 
example consider constraint example 
role arc clearly round corner formed adjacent segments 
drawn indicated angle values larger ffi solver finds leftmost solution 
angles changed subsequently ffi solver heuristics select solution shown center arc remains side adjacent segments 
user relocates center changing placement ar respect sg sg pressing level buttons user returns level 
ar sg highlighted 
user changes solution pressing soln 
buttons 
changes arc center respect sg 
continuing level buttons level ar sg highlighted 
different solution selected level changing arc respect sg solver construct solution shown 
simple interaction technique highly useful exploring alternative solutions users effective directing solution process short time 
specifications interaction process solver instructed serially perform back seek way place element cluster 
convention excludes solvers find solution numerical sg sg sg sg ar pt pt pt pt pt default solution changing angles iterative computation places geometric elements iteration homotopy continuation techniques find solutions nonlinear system equations numerically 
note different solvers may cluster geometric elements differently place elements clusters different sequence 
interaction sequence solver different effects different solving algorithms 
avoided arrange tree solutions canonical order prescribe canonical sequence priori geometric elements computed compute canonical basis ideal generated constraint equations describe geometric problem enumerate associated variety canonical way 
case prescribe solver algorithm belong certain family 
second case ideal basis computation equivalent solving constraint problem constitutes committing canonical solver 
ways compromise devising neutral format archiving 
consequently neutrally archive constraint problem solved unsolved manner solve seek alternative solution 
intrinsic problem solving geometric constraints 
canonical solver completely general fast situations efficiency constraint solvers rests restricting generality solver 
ar sg sg sg sg pt pt pt pt pt interactively changing solutions elements highlighted placed respect level solution tree 
constraint problem left solutions changing angles 
design paradigm approach consider solving constraint problem left 
role arc clearly round adjacent segments solution shown middle user meant right changing angles ffi solver unaware intended meaning arc needs technical heuristic tangent arc rule avoid solution right 
simpler user sketch way design intent arc evident 
difficulty geometric constraint solver sketches usually flat geometric elements grouped features 
better sketches hierarchically basic dimension driven sketch 
subsequent steps dimension driven modify basic sketch add complexity 
example basic sketch quadrilateral 
subsequent modification adding twodimensional round required radius 
analogous feature design implemented current cad systems 
hierarchical approach sketching important benefits 
sketch structured modifications driven constraints earlier steps simple functional dependencies relations dimension variables previously defined sketch features defined implemented trivial extensions basic constraint solver 
summary research constraint solving develop natural paradigms narrowing number possible solutions constrained geometric problem devising solver interaction paradigms allow user correct solutions intended 
increasing penetration constraint design interfaces problem increasingly pressing 
solution intended crucial archiving designs neutral format 
far neutral archiving restricted detailed design formal record design intent constraint schema editing handles 
editable design archived requires proprietary format native particular cad system typically record internal data structures cad system 
alternatives 
current trends data exchange standards indicate growing interest archiving constraint designs additional information formalized commitment particular cad system 
constraint feature design common available variational constraint solver constraint problems geometric constraints 
particularly apparent persistent id problem discussed 
conceived constraint solver conceivably avoid problems assist devising graphical techniques generic design 
manufacturing applications interested functional relationships dimension variables relationships express design intent flexibly 
parametric relationships implemented easily structuring advocated section 
simple functional relationships content certain geometry theorems theorems proportionality classical results 
theorems added constraint solver manner analogous extensions discussed 
general functional relationships dimension variables necessitate additional mathematical techniques 
geometric theorem proving developed general techniques applicable suitable restrictions needed achieve higher solver speeds 
geometric coverage refers range shapes constraint solver understands 
restricted geometric coverage points 
lines circles 
conic sections easy add splines curves translating constraints equivalent ones control points 
rich repertoire literature cagd provides convenient tools doing 
clear control point manipulations natural tool expressing constraints 
studies analyze design splines application point view 
geometric coverage discussed theoretical problems remain open 
precise analysis owen constraint solving algorithm run worst case time linear number graph edges 
conjecture algorithms run quadratic time due repeated traversals regions graph 
worthwhile analyze worst case running times algorithms precisely study improve 
worthwhile consider minimize arithmetic operations involved construction steps analyze construction sequences numerical stability 
insightful discussions john owen cubed 
variation geometries geometric reasoning method 
computer aided design april 
clement despeyroux kahn lang 
centaur system 
technical report de recherche inria 
bruderlin 
constructing dimensional geometric objects defined constraints 
workshop interactive graphics pages 
acm october 
buchberger 
grobner bases algorithmic method polynomial ideal theory 
bose editor multidimensional systems theory pages 
reidel publishing 
buchberger collins 
algebraic methods geometric reasoning 
annual reviews computer science 
cai 
language semantic analysis 
technical report new york university dept comp 
science 
cai paige 
increased productivity algorithm implementation 
acm sigsoft 

chou 
mechanical theorem proving 
reidel publishing dordrecht 

editable representations geometric design 
master thesis purdue university dept comp 
sci 
hoffmann 
correctness proof geometric constraint solver 
technical report purdue university computer science 
hoffmann 
geometric solid modeling 
morgan kaufmann san mateo cal 
hoffmann 
semantics generative geometry representations 
proc 
th asme design automation conference pages 
vol 

hoffmann juan 
editable high level representation geometric design analysis 
wilson pratt editors geometric product modeling pages 
north holland 
kapur 
approach geometry theorem proving 
kapur mundy editors geometric reasoning pages 
press 
knuth 
semantics context free languages 
mathematical systems theory 
knuth bendix 
simple word problems universal algebras 
leech editor computational problems algebra pages 
press oxford 
kondo 
parametric interactive geometric modeller mechanical design 
computer aided design december 
kondo 
algebraic method manipulation dimensional relationships geometric models 
computer aided design march 
kramer 
solving geometric constraint systems 
mit press 

constraint programming languages specification generation 
addison wesley 
light gossard 
modification geometric models variational geometry 
computer aided design july 
owen 
algebraic solution geometry dimensional constraints 
acm symp 

solid modeling pages austin tex 
paige 
apts external specification manual 
internal documentation 
reasoning systems 
refine user guide 
version 
reps teitelbaum 
generator 
springer verlag 
requicha 

technical report production automation project university rochester may 
padl tm 
snyder 
setl programming language 
technical report new york university computer science courant institute 

interaction constraints dimensional modeling 
master thesis dept computer science university utah march 
brunet 
system constructive constraint modeling 
kunii editors modeling computer graphics pages 
springer verlag 

specification shape dimensions geometric constraints 
mclaughlin editors geometric modeling cad applications pages 
north holland ifip 
sutherland 
sketchpad man machine graphical communication system 
proc 
spring joint comp 
conference pages 

todd 
tree generalization characterizes consistency dimensioned engineering drawings 
siam disc 
math 
roller 
rule oriented method parameterized computer aided design 
computer aided design october 
wu wen 
basic principles mechanical theorem proving geometries 
systems sciences mathematical sciences 
yamaguchi kimura 
constraint modeling system variational geometry 
turner editors geometric modeling product engineering pages 
elsevier north holland 

