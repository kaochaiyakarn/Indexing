knowledge systems automatic induction rules text simplification institute research cognitive science center advanced study india university pennsylvania philadelphia pa linc cis upenn edu srinivas department computer information sciences university pennsylvania philadelphia pa srini linc cis upenn edu long complicated sentences pose various problems state ofthe art natural language technologies 
exploring methods automatically transform sentences order simpler 
methods involve rule system driven syntax text domain interest 
hand crafting rules domain time consuming impractical 
describes algorithm implementation generalized rules simplification automatically induced annotated training material novel partial parsing technique combines constituent structure dependency information 
algorithm described employs example generalizations linguistically motivated structures 
need text simplification long complicated sentences pose various problems state theart natural language technologies 
example parsing sentences syntactically complex number parses increases greater likelihood incorrect parse 
machine translation complex leave national centre software technology cross road mumbai india knowledge systems sentences lead increased ambiguity potentially unsatisfactory translations 
complicated sentences lead confusion assembly manuals user manuals maintenance manuals complex equipment 
exploring methods automatically simplify complicated sentences 
consider example sentence example major government survived crucial vote coal pits closure minute concessions extent tory issue generated unusual heat house commons brought miners london streets 
sentences uncommon newswire texts 
compare equivalent manually simplified multi sentence version example major government survived crucial vote coal pits closure 
minute concessions extent tory coal mine issue 
issue generated unusual heat house commons 
brought miners london streets 
problems posed complicated sentences eliminated substantially reduced simplified version shown 
instance simpler sentences fewer constituents fewer ambiguities identifying attachments parsed faster 
simplification great areas natural language processing machine translation information retrieval applications clarity text imperative 
course may lose nuances meaning original text simplification process 
interest simplified english companies boeing xerox 
researchers boeing hoard developed simplified english checker 
focus carefully constraining words specific domain providing tool authors machine maintenance operation manuals help adhere guidelines aimed clear written communication 
contrast aim develop system semi automatically simplify text domain 
outline 
section architecture simplification 
method analysis input discussed section supertags lda described 
section describe method generalized rules automatically induced annotated training material newspaper text english 
section describes rules applied 
discuss issues pertaining simplification section 
knowledge systems architecture simplification view simplification stage process analysis followed transformation 
analysis stage provides structural description input transformation stage uses representation simplification 
simplification system processes sentence time 
discourse related issues considered 
obvious choice analysis stage full parser obtain complete structure sentence 
constituents sentence dependency relations simplification straightforward 
may possible get correct full parse sentence especially complicated sentence benefit simplification 
discussed alternative approaches analyzing text simplification describes finite state grammar approach describes dependency approach 
summarize dependency approach section 
note approach different full parsing approach complete constituent structure required created 
define articulation points points sentences may split simplification 
segments sentence articulation points may extracted simplified sentences 
nature segments delineated articulation points depends type structural analysis performed 
sentences viewed just linear strings words define articulation points say punctuation marks 
words input tagged part speech information split sentences category information instance relative pronouns 
part speech information subordinating coordinating conjunctions may detected articulation points 
just information span subordinating coordinating clause difficult determine 
hand sentence annotated phrasal bracketings beginnings ends phrases articulation points 
example sentence relative clause annotated phrasal bracketing simplified sentences shown example rule shown rule relies skeletal phrasal structure punctuation information 
example singh np crash np killed hour encounter np pp 
knowledge systems example singh killed hour encounter 
singh crash 
rule np np np rule interpreted follows 
sentence starts segment noun phrase np followed phrase form followed arbitrary sequences words sentence may simplified sentences sequence followed sequence followed 
rule shown handle reduced relatives sentence 
example creator air india tata np believes comp airline np known board service np pp return old days glory np pp 
solve problems rules representation combines dependency information constituent structure providing attachment scope information 
representation described section 
need variety rules simplify text particular domain 
hand crafting simplification rules time consuming practical 
rules common domains domain specific 
ideally need method develop rules easily induced new domain 
algorithm implementation automatically induce rules simplification annotated aligned corpus complex simple text 
addition developing rules need gap filling routines 
example separate relative clause sentence example insert copy head noun gap relative clause 
exact choice gap fillers complicated task variety pragmatic factors discussed 
analysis input approach analysis stage simplification uses rich syntactic information simple dependency representation provided lexicalized tree adjoining grammar ltag joshi schabes uses supertagging techniques described joshi srinivas 
knowledge systems section convenience outline basics ltag supertagging related ideas 
lexicalized tree adjoining grammars basic elements lexicalized tree adjoining grammar ltag joshi schabes joshi called elementary trees 
elementary tree associated lexical item called anchor tree 
arguments anchor realized substitution adjunction slots elementary tree 
elementary tree serves complex description anchor provides domain locality anchor specifies syntactic semantic predicate argument constraints 
elementary trees types initial trees ff trees represent non recursive linguistic structures nps pps auxiliary trees fi trees represent recursive structures adjuncts basic structure relative clauses sentential adjuncts adverbials 
np np purchase price vp includes np ancillary companies includes price purchase companies ancillary includes price purchase companies ancillary fig 

derived tree derivation structure dependency tree sentence purchase price includes ancillary companies elementary trees combined operations substitution adjunction 
result combining row elementary trees derived tree 
important structure ltag parse derivation tree represents process combining elementary trees yield parse 
derivation tree interpreted dependency tree unlabeled arcs knowledge systems words sentence 
wide coverage english grammar implemented ltag framework 
grammar parse sentences wall street journal ibm manual atis domains 
detailed description system performance results srinivas 
supertags elementary trees ltag localize dependencies including long distance dependencies requiring dependent elements tree 
result localization lexical item may associated elementary tree tree corresponds particular role played word 
example illustrates set elementary trees assigned word sentence purchase price includes ancillary companies 
call elementary trees supertags contain information subcategorization agreement information standard part speech tags 
supertags recursive non recursive constructs labeled fis ffs respectively 
parsing lexicalized grammar viewed step process 
step select appropriate supertags word input second step combine selected supertags substitution adjunction operations 
call step supertagging 
note standard part speech disambiguation supertagging done parser 
just carrying part speech disambiguation prior parsing job parser easier faster supertagging substantially reduces parser 
result supertagging parse sense parser need link individual structures arrive complete parse 
simple linking procedure lightweight dependency analyzer section 
method parse sentence fragments possible combine disambiguated supertag sequence single structure 
trigram model supertagging task supertagging similar part speech tagging set tags word objective assign appropriate tag word context sentence 
part speech tagging trigram model weischedel church disambiguate knowledge systems np vp np purchase np price np np vp includes np na np vp ap ancillary np companies ff ff ff ff ff np np purchase np np vp np price np na vp includes np np np ancillary np np vp np companies fi fi ff ff fi fi ff np purchase np vp np price np vp includes np np np vp ap ancillary np companies ff ff ff ff ff 
np np purchase np price np vp includes np np np ancillary np companies fi fi ff ff fi fi ff purchase price includes ancillary companies 
fig 

selection supertags associated word sentence purchase price includes ancillary companies appropriate supertag sequence sentence 
knowledge systems supertags 
objective trigram model assign probable supertag sequence sentence approximation supertag current word influenced lexical preference current word contextual preference supertags preceding words 
lexical contextual preferences estimated corpus sentences words tagged correct supertag 
estimates unseen events arrived smoothing technique 
discounting technique combined katz back model katz smoothing 
word features similar ones weischedel capitalization hyphenation endings words estimating unknown word probability 
trained words wall street journal corpus word tagged appropriate supertag trigram associated correct supertags word wall street journal test corpus 
lightweight dependency analyzer supertagging associates word unique supertag 
establish dependency links words sentence interpret dependency requirements encoded supertags 
substitution nodes foot nodes supertags serve slots filled arguments anchor supertag 
substitution slot supertag filled complements anchor foot node supertag filled word modified supertag 
argument slots polarity value reflecting orientation respect anchor supertag 
associated supertag list internal nodes including root node appear supertag 
structural information argument requirements supertag sentence annotated dependency links srinivas 
example illustrating output lda shown table 
column lists word positions input second column lists words third column lists names supertags assigned word 
slot requirement supertag shown column dependency links words shown fifth column 
number indicate type dependency relation modifier relation complement relation 
supertag associated word provides constituent structure information lightweight dependency analyzer provides dependencies constituents 
purpose simplification constituent infor knowledge systems position word supertag slot req 
dependency links fi np purchase fi price ff includes ff np 
np 

fi np ancillary fi companies ff table output lightweight dependency analyzer mation determine supertag contains clausal constituent dependency links identify span clause 
embedded clauses easily located extracted arguments 
punctuation identify constituents appositives separated 
induction rules simplification approach automatically inducing rules training data described section 
training data aligned text corpus links complex sentences corresponding simplified sentences 
data analyzed lda simplification rules induced subsequently generalized techniques similar explanation learning harmelen bundy 
provides schematic overview training application procedures 
training procedure rule induction detailed illustrated running example 
training data consists set input sentences paired set equivalent manually simplified sentences corresponding input sentences 
example singh crash killed hour encounter 
example singh killed hour encounter 
singh crash 
knowledge systems pattern generalizer complex sentence simple sentences tree comparator generalized patterns complex sentence simple sentences preprocessor input syntactic processor generalizer pattern input preprocessor syntactic processor fig 

training application procedures ii sentences training data preprocessed identify phrases denote names people names places designations 
phrases converted effectively single lexical items 
iii training sentence associated simplified sentences ij processed lightweight dependency analyzer lda 
iv resulting dependency representations ij chunked 
chunking collapses certain substructures dependency representation noun phrases verb groups allows define syntax sentence coarser granularity 
chunking phrasal structure explicit maintaining dependency information 
approach benefit phrasal dependency representations 
chunked lda representation example sentence simplified version illustrated 
nodes representation consist word groups linked dependency information 
knowledge systems node associated supertag subject relative supertag rel fi transitive supertag trans ff 
singh crash rel encounter killed trans crash singh encounter singh killed fig 

chunked lda representation complex sentence simplified versions chunked dependency representation complex sentence compared simpler sentences tree comparison algorithm 
algorithm computes tree trees transformations required convert sentence sentences ij program represent chunked dependency representation complex sentence trees corresponding simpler sentences ij collections parent child tuples 
tuple words chunks supertags 
tuple collections form initial versions left hand side lhs right hand side rhs transformation rule created 
general rhs simple sentence tuples rhs annotated indicate simple sentence number 
tree comparison works fashion 
tuples common modulo sentence number lhs rhs deleted 
corresponds ignoring similar sub trees sentences 
generalize tuples left determine edges changing simplification 
words occur sides rule replaced variable names leading lexical generalization 
words remain lhs replaced variables supertag information retained 
knowledge systems bn nx anxn bn nx anx anxn anx bn nx anxn bn nx anx anxn anx fig 

example induced rule generalization generalization 
ation marks side left intact 
attempt generalize rule induced applicable wider variety sentences retain discriminating character 
strategy generalization ways generalizing rule 
strategies may suitable particular domains 
vi input sentences processed steps ii duplicate rules removed 
results set generalized simplification rules 
vii rule indexed articulation points stored appropriately 
articulation point defines link edge cut simplification 
example rule indexed subject relative supertag rel fi 
example rule induced program sentences examples input shown generalization 
tuples indicate parent child relations 
terms lhs rule represent conjunction constraints satisfied rule fire 
generalized tags comps nxn appropriate supertags assigned words context sentences 
number 
refers tuples second simple sentence 
supertags rule apply sentences relative clauses regardless argument relativized subject object indirect object 
important verb rel knowledge systems ative clause rule apply verb associated subject relative transitive supertag 
fact true morphological variant verb verbs mastermind show behaviour similar context 
example changes indicated rule correspond changes complex simple versions ffl subject relative supertag rel fi nx changes transitive supertag trans ff nx 
ffl head relative clause represented parent rel fi node lda representation copied place relative pronoun 
note reduced relative clauses empty relative pronouns 
ffl subject relative supertag rel fi dependents separated 
application simplification rules rule application phase new sentence preprocessed analyzed lda chunked 
node chunked lda representation potential articulation point 
system retrieves rules associated categories articulation points attempts apply 
rules match structure applied 
supertags localize dependencies word structure dependents word lda representation appear children word 
simplification rules induced operate localized representations local domain influence 
rules interact regard applicability 
result simplification independent order rule application 
sentence matched specific rule tuples lhs treated set conjunctive terms satisfied rule applicable 
involve instantiation variables lhs 
corresponding variables rhs bound values 
dependencies lhs deleted ones rhs added respective simplified sentences 
consider sentence shown example creator air india tata believes airline celebrated th anniversary today return old days glory 
knowledge systems rel return airline celebrated 
tata believes glory th anniversary today trans celebrated airline return airline 
tata believes glory th anniversary today fig 

chunked lda representation complex sentence simplified versions shows chunked lda representations original text result applying rule induced training phase 
note structure sentence level significantly different training example similarity sub structure rule applicable component 
training data system culled set stories leading indian newspaper published english 
simplified version stories manually created 
concentrated simplifying sentences relative clauses 
extending handle syntactic phenomena 
discussion novel approach induce rules simplification text representation provided supertags combines phrasal dependency information uniform manner 
knowledge systems rule systems hand crafting rules time consuming tedious error prone process 
automated method rule induction facilitates improved coverage system terms phenomena handled induction rule sets new domains manageable effort 
provides opportunity experiment texts different genres variety preprocessing post processing software 
integrated transparency interpretability afforded rule representation robustness provided training process aligned corpora 
believe important advance simplification 
problems interest area simplification 
example ordering simplified sentences choice referring gap filling expressions maintenance discourse coherence deserve attention 
aspect deserves attention evaluation simplification 
believe performance simplification best evaluated context application simplification component 
working aspects problems 
acknowledgments partially supported nsf nsf stc sbr arpa aro daah 
hybrid approach machine translation man machine communication phd thesis university bombay tata institute fundamental research bombay september 
doran srinivas motivations methods text simplification poster 
proceedings th international conference computational linguistics coling copenhagen sweden august 
church church kw 
stochastic parts program noun phrase parser unrestricted text 
proc 
nd applied natural language processing conference austin texas pp 

knowledge systems ij 
population frequencies species estimation population parameters biometrika vol 
nos 

harmelen bundy frank van harmelen allan bundy explanation generalization partial evaluation artificial intelligence vol 

hoard hoard je rh kc 
automated grammar style checker writers simplified english po holt williams eds computers writing state art kluwer 
joshi joshi ak 
tree adjoining grammars context sensitivity required provide reasonable structural description dowty karttunen eds natural language parsing cambridge university press cambridge uk 
joshi srinivas joshi ak srinivas disambiguation super parts speech supertags parsing proceedings th international conference computational linguistics coling kyoto university japan august 
katz katz estimation probabilities sparse data language model component speech recognizer ieee transactions acoustics speech vol 

joshi joshi ak 
linguistic relevance tree adjoining grammars technical report ms cis department computer information science university pennsylvania 
schabes schabes joshi ak 
parsing strategies lexicalized grammars application tree adjoining grammars 
proceedings th international conference computational linguistics coling budapest hungary august 
srinivas srinivas doran hockey ba joshi ak 
approach robust partial parsing evaluation metrics proceedings workshop robust parsing european summer school logic language information prague august 
knowledge systems srinivas srinivas complexity lexical descriptions relevance partial parsing doctoral dissertation department computer information sciences university pennsylvania philadelphia pa 
weischedel weischedel schwartz meteer ramshaw ambiguity unknown words probabilistic models computational linguistics vol 
pp 
june 
rh harrison bracketed parses evaluate grammar checking application 
proceedings st annual meeting association computational linguistics acl ohio state university columbus ohio 

