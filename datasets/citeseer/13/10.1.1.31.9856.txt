fully combinatorial algorithm submodular function minimization satoru iwata october presents strongly polynomial algorithm submodular function minimization additions subtractions comparisons oracle calls function values 
nite nonempty set cardinality function de ned subsets submodular es examples submodular functions include cut capacity functions matroid rank functions entropy functions 
gr lov asz schrijver showed submodular functions minimized strongly polynomial time ellipsoid method 
combinatorial strongly polynomial algorithms developed independently iwata fleischer fujishige iff schrijver 
algorithms rst combinatorial pseudopolynomial time algorithm due cunningham 
iff algorithm employs scaling scheme submodular functions developed design capacity scaling algorithms submodular ows schrijver algorithm builds directly cunningham algorithm 
combinatorial algorithms perform multiplications divisions despite problem submodular function minimization involve multiplications divisions 
schrijver asks minimize submodular functions strongly polynomial time additions subtractions comparisons department mathematical engineering information physics university tokyo tokyo japan iwata sr tokyo ac jp 
oracle calls function values 
algorithm called fully combinatorial 
settles problem developing fully combinatorial variant iff algorithm 
fully combinatorial algorithm consists oracle calls function evaluation fundamental operations including additions subtractions comparisons 
algorithm strongly polynomial total number oracle calls fundamental operations bounded polynomial dimension problem 
design fully combinatorial strongly polynomial algorithm allowed multiply integer bounded polynomial allowed compute integer rounding ratio numbers provided answer bounded polynomial fully combinatorial strongly polynomial algorithms known quite combinatorial optimization problems minimum spanning tree shortest path maximum ow assignment problems 
minimum cost ow problem rst strongly polynomial algorithm due tardos fully combinatorial uses gaussian elimination 
variant fujishige provides fully combinatorial implementation 
problem testing membership matroid polyhedra special case submodular function minimization cunningham devised strongly polynomial algorithm fully combinatorial implementation 
nding proper nonempty subset minimizing symmetric submodular function queyranne fully combinatorial strongly polynomial algorithm extending minimum cut algorithm ibaraki undirected graphs 
advantage fully combinatorial algorithms easily extended solve problem totally ordered additive group 
fact algorithm analysis applied submodular functions arbitrary totally ordered additive group 
organized follows 
section provides preliminaries base polyhedra 
section outline algorithm 
algorithm repeatedly applies procedure fix described section 
section discuss time complexity show algorithm strongly polynomial 
base polyhedra section provides preliminaries submodular functions base polyhedra 
see details general background 
vector subset denote 
denote vector de ned 
denote vector 
submodular function consider base polyhedron fx vector called base 
particular extreme point called extreme base 
extreme base computed greedy algorithm edmonds shapley follows 

linear ordering denote fv 
greedy algorithm respect generates extreme base conversely extreme base obtained way appropriate linear ordering 
suppose immediately succeeds linear ordering generates extreme base 
linear ordering obtained interchanging extreme base generated di er precisely satis es quantity called exchange capacity 
introduce size fug ug base satisfy fug size serves upper bound exchange capacities 
fully combinatorial algorithm section presents outline fully combinatorial algorithm minimizing submodular function algorithm consists iterations 
iteration calls procedure fix described section 
algorithm works directed acyclic graph subset included minimizer vertex set corresponds partition 
subset denote union subsets represented vertices arc re ects implication minimizer including fug include fvg 
subset called ideal arc leaves minimizer form ideal initially apparently satisfy properties 
set ideals forms distributive lattice 
consider function de ned minff dnf 
easy verify submodular vertex denote set vertices reachable vector de ned maxf consider iteration algorithm deals function introduced follows 
subset denote unique maximal member included function de ned note fvg fvg lemma function submodular 
proof 
nx fvg fvg fvg fvg function monotone nonincreasing implies submodularity recall fvg submodularity jv 
obtain fvg jv implies jv 
lemma minimizer represented minimizer proof 
recall minimizer represented minff minimizer de nition minimizer lemma minimizer proof 
unique maximal minimizer submodularity fvg fvg nx contradicts de nition minimizer implies minimizer represented follows minff minimizer describe outline fully combinatorial algorithm submodular function minimization 
iteration algorithm computes 
algorithm nds minimizer lemma 
vertex attains maximum 
algorithm applies procedure fix nd vertex contained minimizer fwg included minimizer lemma algorithm adds fwg deletes resulting continues satisfy required properties 
algorithm applies procedure fix nd vertex nr contained minimizer de ned nr note submodular nr 
subset nr minimizer minimizes subsets contains minimizer containing contain implies lemma minimizer including fug include fwg 
algorithm adds new arc yields directed cycle minimizer include elements represented vertices algorithm contracts single vertex 
resulting continues satisfy required properties 
result iteration algorithm deletes vertex adds new arc iterations algorithm terminates provides minimizer lemma 
fixing procedure section describes procedure fix nding vertex contained minimizer submodular function 
denote jv assume assume subset 
algorithm calls fix conditions satis ed 
procedure consists scaling phases scale parameter initially set 
keeps set linear orderings fl ig vertices linear ordering generates extreme base greedy algorithm 
procedure keeps set nonnegative integral coecients ig initially arbitrary linear ordering 
furthermore procedure works ow complete directed graph vertex set ow represented skew symmetric function arc capacity equal 
hold pair vertices boundary de ned initially scaling phase aims increasing ow procedure constructs auxiliary directed graph arc set 
fv fv directed path called augmenting path 
set vertices reachable 
triple nw called active immediately succeeds describe operation double exchange applicable active triple 
see formal description 
rst step double exchange compute exchange capacity recall exchange capacity satis es 
double exchange called saturating 
called nonsaturating 
nonsaturating double exchange new index added associated previous respectively 
computes repeatedly subtracting 
number required subtractions eciently carry computation log fundamental operations 
associated coecient replaced note new satis es saturating nonsaturating double exchange interchanges updates 
resulting extreme base generated new linear ordering nal step double exchange adjust invariant 
resulting satis es 
double exchange nonsaturating satis es implies reachable 
ready describe procedure fix 
double exchange new index fkg update interchanging algorithmic description double exchange 
procedure fix step arbitrary linear ordering 
compute extreme base greedy algorithm respect put step augmenting path active triple repeat augmenting path augment ow updating arc 
apply double exchange active triple 
step return step put go step 
execution step referred scaling phase analysis 
lemma scaling phase pg holds 
proof 
active triple pg 
note nw nw jw jv nw pg 
theorem scaling phase contained minimizer proof 
lemma set satis es pg 
pg 
minimizer pg pg 
obtain implies 
complexity section devoted complexity analysis fully combinatorial algorithm 
lemma procedure fix consists log scaling phases 
proof 
recall subset 
blog scaling phases scale parameter satis es pg implies exists vertex 
procedure terminates log scaling phases 
lemma procedure fix performs log augmentations 
proof 
scaling phase set obtained previous scaling phase satis es pg lemma 
rst scaling phase inequality note pg procedure 
scaling phase increases 
augmentation increases scaling phase performs augmentations 
follows lemma total number augmentations fix log 
lemma procedure fix performs nonsaturating double exchange log times 
proof 
double exchange nonsaturating vertex reachable means set enlarged 
applications nonsaturating double exchange augmentations 
fix performs log augmentations lemmas number nonsaturating applications double exchange log 
lemma procedure fix maintains log extreme bases 
proof 
new index added result nonsaturating double exchange 
follows lemma jij log 
lemma procedure fix performs double exchange log times 
proof 
procedure applies double exchange vertices interchanged triple active augmentations phase 
procedure applies double exchange times augmentations 
follows lemmas procedure performs double exchange log times 
theorem fully combinatorial algorithm nds minimizer log oracle calls function values log fundamental operations 
proof 
fully combinatorial algorithm calls procedure fix times 
application double exchange requires function evaluation requires steps oracle call value lemma algorithm performs log oracle calls function values log fundamental operations 
cunningham testing membership matroid polyhedra combin 
theory 
cunningham submodular function minimization combinatorica 
edmonds submodular functions matroids certain polyhedra combinatorial structures applications guy sauer sch eds gordon breach 
fleischer iwata mccormick faster capacity scaling algorithm submodular ow math 
programming submitted 
frank tardos generalized submodular ows math 
programming 
fujishige capacity rounding algorithm minimum cost circulation problem dual framework tardos algorithm math 
programming 
fujishige submodular functions optimization north holland 
gr lov asz schrijver ellipsoid method consequences combinatorial optimization combinatorica 
gr lov asz schrijver geometric algorithms combinatorial optimization springer verlag 
iwata capacity scaling algorithm convex cost submodular ows math 
programming 
iwata fleischer fujishige combinatorial strongly polynomial algorithm minimizing submodular functions acm submitted 
lov asz submodular functions convexity 
mathematical programming state art gr korte eds springerverlag 
ibaraki computing edge connectivity multigraphs capacitated graphs siam discrete math 
queyranne minimizing symmetric submodular functions math 
programming 
schrijver combinatorial algorithm minimizing submodular functions strongly polynomial time combin 
theory ser 
appear 
shapley cores convex games int 
game theory 
tardos strongly polynomial minimum cost circulation algorithm combinatorica 

