specification ieee floating point standard hol pvs international workshop higher order logic theorem proving applications september aspen grove utah usa track included supplemental proceedings victor paul miner nasa langley research center hampton va fv larc nasa gov ieee standard radix independent floating point arithmetic partially defined mechanical verification systems 
specification key parts standard hol pvs 
effort formalize ieee opportunity compare styles imposed verification systems specification 
hol pvs systems general purpose mechanical verification systems specification languages higher order logic 
partially defined ansi ieee standard radix independent floating point arithmetic verification systems 
effort formalize ieee opportunity compare styles imposed verification systems specification 
formalization floating point arithmetic 
geoff barrett describes formalization ieee development inmos transputer 
reported different respects 
primarily specification language limited mechanical support 
hol pvs provide substantial support machine checked theorem proving 
ieee generalization ansi ieee standard binary floating point arithmetic 
compare portions specifications 
section describe aspects ieee addressed 
sections hol pvs formalizations respectively 
section discuss differences specifications 
believe modern verification systems advancing point may practical formally define standards mechanized logic 
ieee standard ieee general standard floating point arithmetic 
contrast ieee standard binary floating point arithmetic ieee ffl define formats storage floating point numbers ffl fully specify required number digits ffl fully specify exponent range ffl allows decimal binary arithmetic 
constraints required ensure number system behaved 
ieee parameterized constraints placed formal parameters 
section standard defines parameters integer parameters specify precision radix number base digits significand max maximum exponent min minimum exponent parameters subject constraints 
shall shall supported precisions 
max gamma min shall exceed exceed 
gamma balance overflow threshold emax underflow threshold emin characterized product emax emin smallest integral power 
page precisions defined single double single extended double extended 
addition satisfying constraints relationship supported precisions constrained 
examples deal multiple precision constraints 
floating point numbers standard defines operations definitions floating point numbers precision allows representation just entities 
numbers form gamma delta delta delta gamma algebraic sign integer min emax inclusive base digit gamma 
gamma 
signaling nan 
quiet nan page illustrate represent entities hol pvs 
rounding floating point numbers finite approximation real numbers standard defines real numbers mapped floating point representation implementation standard shall provide round nearest default rounding mode 
mode representable value nearest infinitely precise result shall delivered nearest representable values equally near significant digit shall delivered 
section page addition standard continues implementation standard shall provide user selectable directed rounding modes round round gamma round 
section page different ways specify rounding 
hol specification gives definitions satisfy required properties 
pvs specification uses concrete definitions rounding functions 
proven satisfy necessary properties 
rounding difficult part standard define formally 
arithmetic operations standard states requirements arithmetic operations conforming implementations standard shall provide operations add subtract multiply divide extract square root find remainder 
operations shall performed produced intermediate result correct infinite precision unbounded range coerced intermediate result fit destination precision 
section page illustrate definition arithmetic functions definitions floatingpoint addition 
hol system specification section gives partial specification ieee illustration purposes comparison pvs specification 
full ieee specification hol 
definition hol parameter restrictions floating point type rounding add operation discussed section 
john harrison reals library gunter integer library definition real integer type 
natural real integer numbers separate types hol system different functions defining arithmetic operations 
sample arithmetic operators naturals integers reals natural integer real standard symbol minus real sub gamma real lt real le int abs jxj hol system symbol represents represents choice hilbert operator 
parameters defining precision max min defined hol system declaring constant placing constraints values emax min type num emax emin type integer 
single single emax emin int emax minus emin sig sig 

definition radix accordance constraint section 
second constraint addressed predicate single 
definition sig algebraic simplification third constraint 
order complaint ieee necessary show predicates sig single true corresponding instantiation emax emin 
proven hol values single precision standard ieee comply predicates sig single 
floating point numbers meaning floating point number value positive negative infinite signaling quiet represented hol system respectively finite sign exp dig value gamma sign exp gamma infinite infinite nan signal nan quiet arbitrary natural number finite infinite nan type constructors applied triple type num integer num 
num element type num pair type nan type num respectively return element type fp num 
floating point type defined type signaling quiet defined signal quiet floating point type defined finite num integer num 
num infinite num nan num definitions identifying manipulating floating point fp numbers specification floating point operations 
fp fp finite fp fp infinite fp fp nan fp fp finite dig function takes position digit returns digit 
example dig fp fp infinite fp fp nan definitions predicates return true applied finite infinite nan fp number respectively false 
definitions inverse respective type constructors return argument constructor applied appropriate fp number 
theorems finite infinite nan proven functions illustrate action inverse functions 
floating point numbers hol restricted accordance ieee predicate emax emin fp emin exponent fp exponent fp emax digits fp predicate restricts exponent value fp number minimum maximum exponent values value digit significand inclusive 
rounding rounding defined hol system assertional style 
rounding function takes real number rounding precision destination precision predicate returns finite floating point representation complies ieee requirements 
function rounding mode 
round near defined round near fp fp fp fp fp fp 
abs fp abs fp 
fp fp fp fp fp fp 
abs fp abs fp fp fp fp fp 
abs fp abs fp digits fp function round near states exists fp unique value nearest return fp 
fp values nearest return fp value nearest digit 
round near uses function extracts value floating point number returning real number 
shown hol iszero round near iszero fp 
fp 
arithmetic operations arithmetic operations floating point numbers defined performing operations floating point number values real numbers domain converting result floating point representation rounding definition 
add definition selected represent definition arithmetic operations floating point 
fp fp pr traps mode tiny acc emax emin fp fp fp fp 
nan quiet cn invalid fp 
fp fp 
fp fp fp fp fp 
fp round fp fp pr traps mode tiny acc emax emin function takes floating point numbers fp fp rounding mode mode parameters returns floating point exception flag 
operands fp add operation infinite algebraic signs equal operation produces quiet nan invalid exception possibly invokes trap handler 
operands infinite algebraic signs operand number significant digits pr rounding precision traps enabling disabling flags trap handlers tiny acc methods detect underflow emax emin destination precision maximum minimum exponent 
full explanation arguments see 
equal operand infinite add operation produces infinite fp number appropriate sign exceptions 
operands finite values fp numbers converted reals added infinite precision function rounded destination precision rounding mode 
operands passed finite infinite 
filtered function invoking 
pvs specification section illustrates parts pvs specification ieee 
pvs prelude defines real numbers base type satisfies standard set axioms 
basic arithmetic operations built number pre proven theorems real numbers available pvs prelude 
properties known pvs decision procedures 
numeric types defined progressively smaller sub types reals 
example rationals defined sub type reals satisfy completeness axiom 
similarly integers defined sub type rationals closed division 
pvs parameters required ieee defined parameters formal theory 
theory parameters treated constants appropriate type 
instantiating theory multiple times different values parameters readily define different precisions allowed standard 
ieee emax emin integer theory assuming assumption assumption emax emin assumption assumption emax emin emax emin endif lemma emax emin emax emin lemma emax emin importing ieee defs emax emin ieee pvs theory formal parameters constrained type fi max min unconstrained integers 
assuming section allows define constraints formal parameters 
assumptions correspond directly constraints standard 
pvs theory imports ieee incurs proof obligations typechecking show actual parameters satisfy assumptions 
case instantiations required ieee pvs automatically verifies assumptions single double precision 
assumption balance lemma exponent balance commented 
constraints strictly required standard 
included indicate optional portions standard may addressed pvs 
theory ieee defs imports underlying theories containing definitions floating point numbers operations 
definition floating point numbers floating point numbers defined pvs datatype mechanism 
pvs theory parameterized min constrained dependent type mechanism strictly max ieee values emax integer emin fi integer emax ig theory type fn nat exponent type fi int emin digits type type datatype finite sign exp exponent digits finite 
infinite infinite 
nan status data nan 
single precision ieee parameters emax emin gamma 
predicate subtype mechanism constrain representation set values required standard 
type sign rep set 
type exponent defined collection integers min max inclusive restriction min formal parameter list ensures type non empty 
type digits collection functions pvs prelude defines type fi ng 
definition datatype fp num states type floating point numbers disjoint union sets finite numbers infinite numbers numbers 
finite number constructed constructor finite algebraic sign integer exponent appropriate range significand infinity constructed algebraic sign nan constructed status flag signal quiet data undetermined standard 
valuation function implied standard defined pvs digits nat endif value fin finite real sign fin exp fin sum fin type finite 
predicate sub type datatype fp num sign exp accessors sign exponent significand fields finite floatingpoint numbers 
initially verified instances finite floating point numbers expected value provide evidence definition correct 
proof attempt uncovered error definition value 
proven range function value correct 
value floating point number representing zero nonzero finite floating point number fin emin gamma gamma fin emax gamma emax gamma gamma rounding pvs specification defines rounding arbitrary real integer rounding modes required standard 
allows take advantage functions floor ceiling control direction rounding 
sgn real integer endif real integer floor ceiling floor elsif ceiling floor ceiling elsif floor ceiling floor floor ceiling endif round real mode integer cases mode sgn floor abs topos ceiling floor built pvs strategy grind able prove jr gamma round mode jr gamma round 
definitions round reals significant base digits scaling argument appropriately 
lemma px scale px px scale px mode real elsif mode scale abs round mode endif analogous integer cases proven pvs fp round mode significant base digit mode nearest 
shown direction rounding correct 
functions combined function real fp maps appropriately rounded real corresponding floating point representation 
inexact exception signaled fp round mode 
function round exceptions handles cases overflow underflow may occurred 
arithmetic operations basic definition arithmetic operation illustrated definition fp add definitions fp sub fp mult nearly identical 
operation fp div requires special treatment fp denotes 
fp fp mode pvs strategies analogous hol tactics 
finite fp finite fp add fp fp mode elsif nan fp nan fp add fp fp fp fp endif function definition invokes functions depending arguments 
arguments finite function invokes corresponding real function applied values arguments 
argument nan rules operations invoked 
arguments infinite result required standard returned 
definition fp op 
function definitions cases including appropriate exception handling 
apply op fin fin fin div op 
zero fin real cases op add value fin value fin sub value fin value fin mult value fin value fin div value fin value fin op fin fin ffin div op 
zero fin mode apply op fin fin mode function fp op calls function apply perform arithmetic operation rounds result prior converting result floating point number 
function apply uses dependent type predicate subtype mechanisms pvs restrict domain third argument nonzero numbers operation division comparison section discusses notable differences hol pvs systems encountered specification ieee 
errors hol pvs formalizations ieee 
experience find errors quickly pvs 
due main factors pvs specification language expressive primarily due subtyping pvs prover effective due decision procedures 
theories theories hol system explicitly support theories 
mechanism implemented hol library theory permits pa restriction added original definition 
pvs generated tcc requiring fin non zero operator div 
tcc unprovable restriction 
theories 
theory library hol parameter declared constant parameters max min arguments functions 
making parameters arguments functions permits definition functions operate mixed precisions theory 
theories pvs parameterized formal parameters theory treated constants theory body 
definition ieee values emax min parameters pvs theory 
theory instantiated supported precision 
assumptions restricting value parameters hol system accomplished axioms defining predicates assumptions theory proofs 
second alternative hol definition ieee 
pvs theory may contain assumptions restrict parameter values 
theory assumptions similar axioms defining properties theory parameters 
theory assumptions imported theory assumptions generate proof obligations importing theory 
subtyping subtyping supported hol system 
real numbers integers naturals different type 
order perform comparisons arithmetic operations numbers different type explicit conversions 
pvs defines real numbers primitive type rationals integers natural numbers subtypes 
example functions defined rationals accept integral arguments 
subtyping mechanism adds great deal flexibility pvs specification language type system undecidable 
pvs unable determine declaration typed generates proof obligations called type correctness conditions tccs 
proof obligations discharged pvs fully admit proof involving corresponding function 
error function definition results unprovable tcc 
inspection tccs provides useful diagnostic information debugging specification 
predicate subtypes hol supports limited form predicate subtyping restricted quantification 
syntactic sugar definition ieee 
pvs predicate defined type ff may declare subtype ff 
pvs unable determine function argument appropriate type system generate tcc ensure arguments conform restrictions subtype 
dependent subtypes pvs allows definitions restrict type functions arguments value arguments 
allows finer touch defining functions 
example definition apply section 
datatypes new type declaration hol system produces theorem manually construct recognizers function extractors 
recognizers function extractor automatically generated hol 
graphical user interface developed donald syme 
datatype declaration pvs system produces supporting definitions 
predicates recognizing range constructor automatically generated 
similarly accessor functions extract components constructor defined 
properties datatypes automatically added pvs decision procedures 
proofs verified number properties specifications 
general difficult prove properties hol 
pvs automates proof effort significant number properties proven just pvs prover commands 
addition pvs decision procedures automate verification simple arithmetic properties 
simple illustration consider second constraint section max gamma min 
simple consequence max min hol formulation constraint proof fact int emax minus emin 
emin emax int int int int th th int int spec cases 
repeat transit probably efficient hol proof goal representative initial proof attempt 
pvs proof consists single command emax emin 
emin emax rule 
ground applying propositional simplification decision procedures pvs type information available decision procedures 
case critical information 
sequent illustrates ease different numeric types pvs expression 
max min type integer type arithmetic operators defined reals 
result difference proof effort properties proved pvs specification hol specification 
concluding remarks portion formalization ieee standard floating point arithmetic hol pvs 
effort enabled highlight differences verification systems 
general specification language system expressiveness represent properties ieee 
pvs natural environment defining standard 
specification language provided rich collection constructs allowed straightforward definition aspects standard 
capabilities pvs prover greatly simplified task verifying putative challenges specification 
type system pvs aided debugging specification 
frequently encountered unprovable type correctness conditions tccs course defining ieee pvs 
cases due typographical errors cases illustrated conceptual specification 
far proofs attempted demonstrate specifications possess certain properties 
attempt verify correctness algorithms respect specifications 
specifications reviewed people 
possible features standard overlooked 
prior specifications serious verification effort necessary subject rigorous review 
writing specification formal language easier catch errors prevent making errors 
geoff barrett 
formal methods applied floating point number system 
ieee transactions software engineering may 
victor interpretation ieee floating point standard definition hol system 
appear nasa technical memorandum 
gordon 
hol proof generating system higher order logic 
graham birtwistle editors vlsi specification verification synthesis pages 
kluwer academic publishers 
ieee 
ieee standard binary floating point arithmetic 
ansi ieee std 
ieee 
ieee standard radix independent floating point arithmetic 
ansi ieee std 
paul miner 
defining ieee floating point standard pvs 
technical memorandum nasa langley research center hampton va july 
sam owre john rushby natarajan shankar friedrich von henke 
formal verification fault tolerant architectures prolegomena design pvs 
ieee transactions software engineering february 
shankar 
datatypes pvs 
technical report csl computer science laboratory sri international menlo park ca december 
phillip 
theories hol 
research report lal laboratory applied logic university idaho june 
