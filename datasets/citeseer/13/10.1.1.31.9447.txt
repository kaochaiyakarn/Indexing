examples termination nachum dershowitz department computer science university illinois urbana il usa 
graded sequence examples uniform framework stages development methods proving termination rewrite systems 
set terms vocabulary 
system nite nite set rules terms containing variables ranging rule applies term subterm matches left hand side substitution terms variables appearing rule applied replacing redex corresponding right hand side rule substitution terms variables applied 
write indicate term rewrites way single application rule 
note rule apply rules apply subterm rewrite systems long decision procedures validity equational theories truth equation models theory 
speci cation programming language 
see dershowitz jouannaud klop plaisted surveys term rewriting applications 
rewrite system terminating nite derivations termination unde 
proof termination take consideration di erent possible rewrite sequences permitted nondeterministic choice rules subterms 
series examples culled literature illustrate progression techniques prove termination vanilla rewriting 
describe techniques manner designed highlight similarities follow logical sequence perfectly chronological 
covered methods transformations system including intricate forms rewriting notably permutation operands associative commutative operators permitted prior rewriting 
survey termination methods rewriting may dershowitz 
example loops 
evans gave rst rewrite decision procedure dozen rules compute normal forms xn nx nx system obviously terminates application rule redex decreases size number symbols jtj quote evans ect elementary reduction reduce length word ut example fragment group theory 
similarly research supported part national science foundation ccr ccr 
apologize providing provenance examples 
terminates jsj jtj note rule left hand side longer right hand side 
righthand side occurrences variable left rule application causes increase size 
size length ordering particularly popular semigroups jlj jrj rule su ces ensure termination 
ut example 
clearly measures size 
example terminates number decreases 
ut example 
lexicographic combination founded orderings founded show termination considering pair number fsi 
ut example 
general measure founded ordering example terminates number adjacent decreases regardless substituted context surrounds 
ut example 
show termination suggestion consider tuple heights distance constants tree representation term fs 
moving right decreases height increasing height fs left compare heights lexicographically fs height height leftmost fi 
ut example dutch national flag 
consider rules term viewed integer base blue white red symbol appearing term 
ut example di erentiation 
problems qualifying exam floyd carnegie mellon university prove termination mind proof ordinals dt constant dx dy 
dx dy dx dy dx 
constant sums products commutative 
ut example semigroups 
manna took floyd exam ness manna student suggested general method interpretations assign ary function founded set ary symbol interpret terms accordingly 
added replacement property true ordinal notations symbol need show variables appearing take constant shown termination system vocabulary constants implies termination larger vocabulary adds symbols appearing system rules 
ut example 
student test went produce dissertation symbolic computation class systems including di erentiation proved terminating 
idea exponential interpretations somewhat simpli ed dx constant example 
lankford polynomial interpretations su ce expanded di erentiation program dt constant dx dy 
dx dy dx dy dx 
dx dy ln dx 
dx ln dy ut example disjunctive normal form 
exponentials required dx ln constant 



constant primitive recursive interpretations prove termination terminating systems resort ordinals equivalents inevitable 
ut example 
pairs interpretations come handy term term 

constant constant rst rules decrease rst interpretation decrease second changing rst 
lexicographic comparison pairs order 
ut example 
times pays map terms pairs zantema 
looking follows hx yi hx xi hx yi hy xi constants 
interpretation term rewritten decreases second component rst remains intact term value shown decreasing 
ut example 
way termination look pair top leftmost symbols compared precedence ordering function symbols rules decrease top symbol second component ensures decrease carries recursively term 
recursive comparisons yield awell founded ordering second component bounded 
show recursive component su right hand side smaller left hand side 
fact case need include proper subterm relation ordering simplest example path ordering plaisted dershowitz 
ut example 
consider triple rst second compared recursively lexicographic ordering constant term minimal elements 
need check left hand side strictly greater subterms right hand side 
ut example group theory 
rst decision procedure obtained knuth bendix completion program system prove termination knuth devised recursive ordering combined notion precedence simple linear weight top rst argument 
arguments listed permutation just 
weight sum weights symbols non negative integers 
symbols compared precedence order arguments compared recursively 
constants positive weight unary symbol may maximal precedence 
ensures terms greater subterms arguments bounded 
group example give constants weight operators weight greatest precedence 
weight needed simple rules precedence rule distributing inverse lexicographic comparison subterms needed associativity 
ut example distributivity 

lipton snyder suggested pair interpretation maximum 
natural interpretation constant unchanged rewriting imposes maximum size height equal terms second component decrease 
ut example 
knuth bendix pointed method needs extended handle duplicating systems occurrences variable right left 

lankford suggested extending method knuth bendix integer polynomial weights positive coe cients guarantee terms greater subterms term top left argument right 
natural interpretation precedence trick 
ut example 
prove termination 

multiset xj 
finite multisets compared wellfounded multiset ordering dershowitz manna replacing element number smaller elements decreases multiset 
applying rule change total contribution redex unchanged 
ut example factorial 
oftentimes consider top symbol interpretation 
way ignore signi cant functions 
fact fact fact 
precedence fact 
compare calls fact natural interpretation fact 
compare terms consider term terms greater subterms 
replacement property need ensure rewriting subterm increase term symbols problem interpretation value preserving 
show opposed redex increase decrease implies multiset pairs subterms shows strict decrease account fact terms taken larger subterms dershowitz 
ut example 
approach multisets proving termination di erentiation plaisted simple path ordering 
terms mapped multisets sequences function symbols tg path sequence function symbols starting root symbol subterms constant reached 
sequences compared example di erentiation operator precedence 
ut example 
nested multiset structures prove termination di erentiation example dershowitz manna dx constant really just encoding floyd ordinal solution 
ut example 
consider really want consider size rst 
product larger needs add factor size rst simpler knuth bendix ordering 
rewriting ect size term increase 
better rst proper subterm re products rst longer 
ordering transitive closure proper subterm relation ordering size rst 
ut example 
factorial system imitate structural induction proof termination corresponding recursive de nitions argument precedence fact simplifying interpretation fact rst argument factorial times second plus 
combined subterm relation 
value preserving nature interpretation guarantees increase 
ut example 
disjunctive normal form example served motivation development recursive path ordering dershowitz parallel related ideas plaisted 



intuitively precedence terms greater subterms 
adding subterms second component need ascertain left hand sides greater ordering subterms corresponding right hand sides 
path ordering 
ut example 
previous methods orderings better 
example rst rule suggests precedence second rule hand requires termination number si multiset path ordering rst component terms equivalent symbols replaced equivalents arguments permuted 
ut example conditional normalization 
prove termination treat rst argument top symbol recursive path ordering dershowitz rst argument 
ordinary precedence compares rst arguments recursively 
ut example ackermann function 
kamin 
levy suggested lexicographic version recursive path ordering knuth bendix terms having weight rst argument terms greater subterms 
works beautifully examples ack succ ack succ ack succ ack succ succ ack ack succ precedence ack succ rst rule lexicographic aspect 
establish ordering check recursively ack succ succ ack succ 
ut example combinator 
lexicographic path ordering shown terminate precedence 
ut example 
lexicographic path ordering directly handle system 
termination proved semantic path ordering kamin levy form greater product product greater term term greater subterms products treated lexicographically left right 
note rule application changes value redex 
ut example insertion sort 
sort nil nil sort cons insert sort insert nil cons nil insert cons choose cons choose cons cons cons choose cons cons insert choose cons choose cons termination shown subterm quadruple argument top show left side greater right subterms 
rst precedence sort insert choose cons second insert choose 
second component take rst second argument choose insert constant component take third argument choose 
details general path ordering see dershowitz appear 
ut example battle hydra hercules 
system terminating provably peano arithmetic general path ordering semantic component 
pred compare term top second argument ofd gi precedence ut dershowitz appear nachum dershowitz charles 
natural termination 
theoretical computer science appear 
dershowitz jouannaud nachum dershowitz jean pierre jouannaud 
rewrite systems 
van leeuwen editor handbook theoretical computer science volume formal methods semantics chapter pages 
north holland amsterdam 
dershowitz manna nachum dershowitz zohar manna 
proving termination multiset orderings 
communications acm august 
dershowitz nachum dershowitz 
orderings term rewriting systems 
theoretical computer science march 
dershowitz nachum dershowitz 
termination rewriting 
symbolic computation february april 
corrigendum december reprinted rewriting techniques applications 
jouannaud ed pp 
academic press 
evans trevor evans 
multiplicative systems de ned generators relations proceedings cambridge philosophical society 
saul 
conclusive validation symbol manipulation processes know 
franklin institute december 

contributions mechanical mathematics 
ph thesis department computer science carnegie mellon university pittsburgh pa 
kamin levy sam kamin jean jacques levy 
generalizations recursive path ordering 
unpublished note department computer science university illinois urbana il february 
klop jan willem klop 
term rewriting systems 
abramsky gabbay maibaum editors handbook logic computer science volume chapter pages 
oxford university press oxford 
knuth bendix donald knuth bendix 
simple word problems universal algebras 
leech editor computational problems algebra pages 
pergamon press oxford 
reprinted automation reasoning springer verlag berlin pp 

lankford dallas lankford 
proving term rewriting systems noetherian 
memo mtp mathematics department louisiana tech 
university la may 
revised october 
lipton snyder lipton snyder 
halting tree replacement systems 
proceedings conference computer science pages waterloo canada august 
manna ness zohar manna steven ness 
termination markov algorithms 
proceedings third hawaii international conference system science pages honolulu hi january 
plaisted david plaisted 
founded orderings proving termination systems rewrite rules 
report department computer science university illinois urbana il july 
plaisted david plaisted 
recursively de ned ordering proving termination term rewriting systems 
report department computer science university illinois urbana il september 
plaisted david plaisted 
term rewriting systems 
gabbay hogger robinson editors handbook logic arti cial intelligence logic programming volume chapter 
oxford university press oxford 
appear 
zantema hans zantema 
classifying termination term rewriting 
technical report ruu cs utrecht university netherlands november 
article processed lat macro package llncs style 
