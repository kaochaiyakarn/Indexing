journal artificial intelligence research submitted published market oriented programming environment application distributed multicommodity flow problems michael wellman wellman engin umich edu university michigan dept electrical engineering computer science ann arbor mi usa market price systems constitute understood class mechanisms certain conditions provide effective decentralization decision making minimal communication overhead 
market oriented programming approach distributed problem solving derive activities resource allocations set computational agents computing competitive equilibrium artificial economy 
walras provides basic constructs defining computational market structures protocols deriving corresponding price equilibria 
particular realization approach form multicommodity flow problem see careful construction decision process economic principles lead efficient distributed resource allocation behavior system meaningfully analyzed economic terms 

distributed planning economics distributed multiagent planning system plan system composite plans produced constituent agents 
plans may interact significantly resources required agents activities preconditions products resulting activities postconditions 
despite interactions advantageous necessary distribute planning process agents separated geographically different information possess distinct capabilities authority designed implemented separately 
case agent limited competence awareness decisions produced sort coordination required maximize performance system 
allocating resources central control extensive communication deemed infeasible violates constraints dictated distribution planning task place 
task facing designer distributed planning system define computationally efficient coordination mechanism realization collection agents 
agent configuration may may design parameter 
term agent refer module acts mechanism knowledge interests 
capabilities agents organization decision making structure determine behavior system 
concerns collective behavior self interested decision makers design decentralized structure fundamentally exercise economics incentive engineering 
problem developing architectures distributed planning fits framework mechanism design hurwicz reiter ideas results economics directly applicable 
particular class mechanisms price systems competition deeply investigated economists characterized conditions efficiency fl ai access foundation morgan kaufmann publishers 
rights reserved 
wellman compatibility features economy 
applicable competitive mechanism achieves coordination minimal communication requirements precise sense related dimensionality messages transmitted agents reiter 
theory general equilibrium kirman provides foundation general approach construction distributed planning systems price mechanisms 
approach regard constituent planning agents consumers producers artificial economy define individual activities terms production consumption commodities 
interactions agents cast exchanges terms mediated underlying economic mechanism protocol 
specifying universe commodities configuration agents interaction protocol achieve variety interesting effective decentralized behaviors 
furthermore apply economic theory analysis alternative architectures exploit wealth existing knowledge design distributed planners 
phrase market oriented programming refer general approach deriving solutions distributed resource allocation problems computing competitive equilibrium artificial economy 
describe general approach primitive programming environment supporting specification computational markets derivation equilibrium prices 
example problem distributed transportation planning demonstrates feasibility decentralizing problem nontrivial interactions applicability economic principles distributed problem solving 

walras market oriented programming environment explore market mechanisms coordination distributed planning modules developed prototype environment specifying simulating computational markets 
system called walras th century french economist eon walras envision system interconnected markets price equilibrium 
walras provides basic mechanisms implementing various sorts agents auctions bidding protocols 
specify computational economy defines set goods instantiates collection agents produce consume goods 
depending context goods agents may fixed exogenously example correspond real world goods agents participating planning process 
completely artificial ones invented designer decentralize problem solving process particular way 
market configuration walras runs agents determine equilibrium allocation goods activities 
distribution goods activities constitutes market solution planning problem 

name inspired shoham agent oriented programming refer specialization object oriented programming entities described terms agent concepts interact speech acts shoham 
market oriented programming analogous specialization entities economic agents interact market concepts production exchange 
phrase invoked lavoie refer real markets software components 
market oriented programming general equilibrium walras framework patterned directly general equilibrium theory 
brief exposition glossing fine points follows elaboration see text microeconomic theory varian 
start goods agents 
agents fall general classes 
consumers buy sell consume goods preferences consuming various combinations bundles goods specified utility function 
agent consumer utility function ranks various bundles goods preference 
consumers may start initial allocation goods termed endowment 
denote agent endowment amount ultimately consumes 
objective consumer choose feasible bundle goods rendered vector notation maximize utility 
bundle feasible consumer total cost going prices exceed value endowment prices 
consumer choice expressed constrained optimization problem max delta delta vector prices goods 
agents second type producers transform sorts goods technology 
technology specifies feasible combinations inputs outputs producer 
consider special case output indexed remaining goods potential inputs 
case technology producer described production function gammax gamma specifying maximum output inputs 
input production production function characterizes net output 
case producer objective choose production plan maximizes profits subject technology going price output input goods 
involves choosing production level levels inputs produce minimum cost 
denote consumption prices respectively input goods 
corresponding constrained optimization problem maximize profits difference revenues costs max gamma min delta equivalently min delta gamma agent acts competitively takes prices neglecting impact behavior prices 
formulation implicitly assumes perfect competition prices parameters agents constrained optimization problems 
perfect competition realistically reflects individual rationality numerous agents small respect entire economy 
case wellman implement competitive behavior individual agents choose 
implications restriction perfect competition discussed 
pair price vector vector demands agent constitutes competitive equilibrium economy 
agent solution constrained optimization problem prices 
net amount produced consumed equals total endowment words total amount consumed equals total amount produced counted negative quantities consumption bundles producers plus total amount economy started endowments 
certain classical assumptions essentially continuity monotonicity concavity utility production functions see kirman varian competitive equilibria exist unique strictness conditions 
perspective mechanism design competitive equilibria possess desirable properties particular fundamental welfare theorems general equilibrium theory competitive equilibria pareto optimal agent better doing worse feasible pareto optimum competitive equilibrium initial allocation endowments 
properties offer exactly need bound quality solution plus prospect achieve desired behavior carefully engineering configuration computational market 
equilibrium prices reflect exactly information required distributed agents optimally evaluate perturbations behavior resorting communication reconsideration full set possibilities koopmans 
computing competitive equilibria competitive equilibria computable algorithms fixed point methods scarf optimization techniques developed 
sorts algorithms effect operate collecting solving simultaneous equilibrium equations 
expressly distributed formulation techniques may violate decentralization considerations underlying distributed problem solving context 
quite acceptable purposes algorithms originally designed analyze existing decentralized structures transportation industries entire economies whalley 
purpose implement distributed system obey computational distributivity constraints relevant usual purposes applied general equilibrium analysis 
general explicitly examining space commodity bundle allocations search equilibrium undercuts original motive decomposing complex activities consumption production separate goods 
market oriented programming important constraint internal details agents state utility production functions bidding policy considered private order maximize modularity permit inclusion agents designers direct control 
consequence computationally exploiting global properties arising special features agents generally permissible purposes 
example constraint profits zero consequence competitive behavior production technology 
information form technology bidding policy private producer agents considered cheating embed zero profit condition equilibrium derivation procedure 
walras procedure decentralized relaxation method akin mechanism tatonnement originally sketched eon walras explain prices derived 
basic tatonnement method initial vector prices agents determine demands prices solving corresponding constrained optimization problems report quantities demanded auctioneer 
reports auctioneer iteratively adjusts prices excess demand supply respectively 
instance adjustment proportional excess modeled difference equation ff gamma sequence converges excess demand market approaches zero result competitive equilibrium 
known tatonnement processes converge equilibrium general scarf 
class economies tatonnement works called stable equilibria hicks 
sufficient condition stability gross substitutability arrow hurwicz price rises net demands goods decrease 
intuitively gross substitutability violated complementarities preferences technologies reduced consumption cause reduced consumption samuelson 
walras bidding protocol method employed walras successively computes equilibrium price separate market manner detailed 
tatonnement involves iterative adjustment prices reactions agents market 
differs traditional tatonnement procedures agents submit supply demand curves single point quantities particular price auction adjusts individual prices clear adjusting entire price vector increment usually function summary statistics excess demand 
walras associates auction distinct 
agents act market submitting bids auctions 
walras bids specify correspondence prices 
general approach called progressive equilibration applied particular transportation network equilibrium problem 
model market dynamics appear investigated extensively general equilibrium theory match kind price adjustment process envisioned hicks pioneering study dynamics stability hicks 
wellman quantities agent offers demand supply 
bid particular corresponds dimension agent optimal demand parametrized prices relevant goods 
solution equation appropriate prices walras agent bids assumption prices remaining goods fixed current values formally agent bid function prices quantities satisfying subscript right hand side selects quantity demanded demand vector 
agent computes sends function encoded variety formats auction bids interested agents auction derives market clearing price quantity demanded balances supplied prespecified tolerance 
clearing price simply zero crossing aggregate demand function sum demands agents 
zero crossing exist long aggregate demand sufficiently behaved particular continuous decreasing price 
gross substitutability classical conditions existence equilibrium sufficient ensure existence clearing price stage bidding protocol 
walras calculates zero crossing aggregate demand function binary search 
aggregate demand behaved result auction may non clearing price 
current price clearing respect current bids say market commodity equilibrium 
say agent equilibrium set outstanding bids corresponds solution optimization problem going prices 
agents commodity markets equilibrium allocation goods dictated auction results competitive equilibrium 
presents schematic view walras bidding process 
auction distinct agent link auctions interest 
board current prices kept date various auctions 
current implementation board global data structure price change notifications explicitly transmitted interested agents central information easily dispensed 
agent maintains agenda bid tasks specifying markets update bid compute new 
agent pending tasks submit bids auctions bidding process highly distributed agent need communicate directly auctions goods interest domain utility production function nonzero endowments 
interactions concerns single auctions coordinate 
agents need negotiate directly agents know existence 
new bids received auction previously computed clearing price obsolete 
periodically auction computes new clearing price new updated bids received posts board 
price updated may invalidate agent outstanding bids computed assumption prices remaining goods fixed previous values 
finding market oriented programming task agenda board walras bidding process 
denotes auction jth ith trading agent 
item task agenda denotes pending task compute submit bid price change agent augments task agenda include potentially affected bids 
times walras maintains vector going prices quantities exchanged prices 
agents nonempty bid agendas auctions new bids goods may disequilibrium 
auctions clear agendas exhausted economy competitive equilibrium numeric tolerance 
result milgrom roberts theorem shown condition sufficient convergence tatonnement gross substitutability sufficient convergence walras price adjustment process 
key observation progressive equilibration synchronous price time set previous supply demand bids 
precise results effect computational effort required convergence fixed tolerance highly sensitive number goods number agents 
analyzed detail convergence pattern progressive equilibration algorithms related walras particular special cases roughly linear growth number agents 
general difficult draw cost computing equilibrium particular computational economy may depend strength interactions agents goods 
market oriented programming described walras provides facilities specifying market configurations computing competitive equilibrium 
view walras programming environment decentralized resource allocation procedures 
environment provides constructs specifying various sorts agents defining interactions wellman relations common commodities 
setting initial configuration market run determine equilibrium level activities distribution resources economy 
cast distributed planning problem market needs identify goods traded agents trading agents bidding behavior 
design steps serially dependent definition constitutes exchangeable commodity severely restricts type agents sense include 
mentioned take fixed real world agents goods part problem specification 
configuration determined advantageous adjust general parameters bidding protocol 
illustrate design task walras formulation multicommodity flow problem 
implementation walras implemented common lisp common lisp object system clos 
current version provides basic infrastructure running computational economies including underlying bidding protocol library clos classes implementing variety agent types 
object oriented implementation supports incremental development market configurations 
particular new types agents defined slight variations existing types example modifying isolated features demand behavior bidding strategies management task agenda bid format 
wang detailed case object oriented languages represent general equilibrium models 
proposed system similar walras respect formulation designed interface conventional model solving packages support decentralized computation equilibrium directly 
models distributed system walras runs serially single processor 
distribution constraints information communication enforced programming specification conventions fundamental mechanisms software environment 
asynchrony simulated randomizing bidding sequences agents called unpredictably 
artificial synchronization lead undesirable oscillation clearing prices agents collectively imbalances preceding iteration 
current experimental system runs transportation models sort described exchange production economies parametrized utility production functions including expository examples scarf whalley 
customized tuning basic bidding protocol necessary 
process getting walras run examples added generically useful building blocks class libraries required fill comprehensive taxonomy agents bidding strategies auction policies 

formal dynamic models huberman kephart hogg huberman homogeneous agents choose instantaneously optimal policies accounting simultaneously making choice 
value particular choice varies inversely number agents choosing delayed feedback decisions leads systematic errors oscillation 
observed phenomenon empirically synchronized version walras 
eliminating synchronization agents tend different markets time suffer delayed feedback prices 
market oriented programming 
example multicommodity flow simple version multicommodity flow problem task allocate set cargo movements transportation network 
transportation network collection locations links directed edges identifying feasible transportation operations 
associated link specification cost moving cargo 
suppose cargo homogeneous amounts cargo arbitrarily divisible 
movement requirement associates amount cargo origin destination pair 
planning problem determine amount transport link order move cargo minimum cost 
simplification ignores salient aspects real transportation planning 
instance model completely atemporal suitable planning steady state flows planning dynamic movements 
distributed version problem decentralize responsibility transporting separate cargo elements 
example planning modules corresponding geographically organizationally disparate units arrange transportation cargo respective spheres authority 
decision making activity decomposed hierarchical levels abstraction gross functional characteristics relevant distinction 
decentralization result real distribution authority human organization inherent informational asymmetries communication barriers modularity imposed facilitate software engineering 
consider example transportation network taken 
locations directed links shown 
consider movement requirements 
transport cargo location location second reverse direction 
suppose wish decentralize authority separate agents called decide allocate cargo movement 
shipper decides split cargo units paths second figures split paths 
note paths shipper share common resource link 
simple network 
overlapping resource demands decisions appear necessarily intertwined 
congested network example cost transporting unit cargo link increasing usage link 
shipper planning cargo movements user network underestimate costs potentially transportation resources 
wellman analysis networks transportation researchers developed equilibrium concepts describing collective behavior 
system equilibrium transportation cargo proceeds omniscient central planner directing movement shipment minimize total aggregate cost meeting requirements 
user equilibrium allocation cargo movements shipper minimizes total cost sharing proportionately cost shared resources 
system equilibrium global optimum user equilibrium corresponds composition locally optimal solutions subproblems 
intermediate possibilities corresponding game theoretic equilibrium concepts nash equilibrium shipper behaves optimally transportation policies remaining 
perspective designer distributed planner seek decentralization mechanism reach system equilibrium come close possible distributed decision making structure 
general expect derive system equilibrium globally optimal solution central control 
limits coordination communication may prevent distributed resource allocation exploiting opportunities inhibiting agents acting cross purposes 
certain conditions decision making decentralized effectively market mechanisms 
general equilibrium analysis help recognize take advantage opportunities 
note multicommodity flow problem effective distributed solution due gallager 
market structures described effectively mimics solution gallager algorithm formulated expressly market terms 
point crack hitherto unsolved distributed optimization problem nice illustrate general approach simply described nontrivial task 

walras transportation market section series transportation market structures implemented walras 
simplest model comprises basic transportation goods shipper agents augmented succeeding models include agent types 
comparative analysis market structures reveals qualitatively distinct economic computational behaviors realized alternate walras configurations 
basic shipper model resource primary interest multicommodity flow problem movement cargo 
value cost cargo movement depends location designate distinct capacity origin destination pair network see 
capture cost input required move cargo define denoting generic transportation resources 
concrete model consist vehicles fuel labor factors contributing transportation 

nash solution correctly anticipate effect cargo movements average cost link 
resulting equilibrium converges user equilibrium number increases effect individual behavior prices diminishes marcotte 
market oriented programming decentralize decision making identify movement requirement distinct shipper agent 
consumers interest moving various units cargo specified origins destinations 
agents goods defines market configuration 
depicts walras configuration basic shipper model corresponding example network 
model denotes shipper requirement move goods origin destination connect goods serve objectives case movement links belong simple path shipper origin destination 
diagram denotes representing amount cargo moved link denotes special transportation resource 
notice goods interest endowments transportation link serving origin destination pairs 
walras basic shipper market configuration example transportation network 
model employ transportation costs network congestion exhibiting scale 
words marginal average costs terms transportation resources required increasing level service link 
data take costs quadratic 
quadratic cost model posed simply concreteness represent substantive claim transportation networks 
important qualitative feature model necessary example exhibits decreasing returns defining characteristic congested networks 
note model terms monetary costs introduce input 
denote cost transportation resources required transport units cargo link complete cost functions shipper objective transport units cargo origin destination 
wellman basic shipper model assume pay proportionately units total cost link 
amounts policy average cost pricing 
take shipper objective ship possible movement requirement costly manner 
notice objective expressible terms consumer optimization problem equation model technically instance general equilibrium framework 
network prices link cheapest cargo movement corresponds shortest path graph distances equated prices 
link shipper prefer ship entire quota link shortest path zero 
case ties indifferent possible allocations 
bid link shipper derive threshold price determines link shortest path difference shortest path distance networks link distance set zero infinity respectively 
incrementally changing bids shipper consider outstanding bids current prices 
value reserving capacity particular link zero get service links path 
similarly committed shipping cargo parallel path gain obtaining capacity lower price withdraws bids 
actual demand policy shipper spend uncommitted income potential flow increase derived maximum flow calculations obtain purchasing capacity link 
willing spend threshold value link described 
determines point demand curve 
unsatisfied requirement uncommitted income indicates willingness pay lower price greater amount capacity 
boundary points serve bootstrap economy initial conditions typically case individual link contributes flow shipper origin destination 
demand curve completed smoothing operation points 
details boundary points smoothing operation arbitrary claim particular bidding policy ideal guaranteed broad class problems 
crude approach appears sufficient example similar ones long policies accurate prices approach equilibrium 
walras successfully computes competitive equilibrium example case basic shipper model corresponds user equilibrium ue transportation network 
ue example network shipper sends units cargo shared link remaining cargo direct link location destination 
allocation inefficient total cost resource 
shipper simultaneously update bids markets idea 
competitive shipper send cargo costly path neglecting possibility demand may increase prices longer cheapest 
outstanding bids provide sensitivity effect functions price 
respond changes prices policy updating bids simultaneously lead perpetual oscillation 
example network considered unique competitive equilibrium shipper splitting cargo different paths 
policies allocating cargo path lead result convergence competitive equilibrium depends incrementality bidding behavior 
market oriented programming units somewhat greater global minimum cost solution units 
economic terms cause inefficiency externality respect usage shared link 
effectively charged average cost case decreasing returns marginal cost price face reflect full incremental social cost additional usage resource 
effect incremental usage resource agent 
steeper decreasing returns agents incentive resource 
simple example classic tragedy commons 
classical remedy problems internalize externality allocating ownership shared resource decision maker proper incentives efficiently 
implement solution walras augmenting market structure type agent 
carrier agents extend basic shipper model introducing carriers agents type producer capability transport cargo units specified links varying amounts transportation resources 
model described associate carrier available link 
production function carrier simply inverse cost function described 
achieve global movement cargo obtain transportation services carriers exchange necessary transportation resources 
denote carrier transports cargo location location carrier connected auction output input production process 
shipper agents connected endowed transportation resources exchange transportation services 
depicts walras market structure carriers included economy 
walras market configuration example transportation network economy carriers 

average cost pricing common mechanism allocating costs shared resource 
shenker points problems scheme respect efficiency strategic behavior context allocating access congested computer networks problem analogous transportation task 
wellman case decreasing returns technology producer carrier optimization problem unique solution 
optimal level activity maximizes revenues minus costs occurs point output price equals marginal cost 
result carriers submit supply bids specifying transportation services function link prices resource price fixed demand bids specifying required resources function input prices activity level computed output price fixed 
example consider carrier output price input price carrier profit gamma level service chooses supply 
cost function expression maximized gamma fixed carrier submits supply bid function demand side carrier takes fixed submits demand bid produce treated function revised configuration agent behaviors described walras derives system equilibrium se cargo allocation minimizing transportation costs 
derived cargo movements correct bidding cycles cycle agent submits average bid auction 
total cost units division expenditures carriers profits equilibrium prices table 
data ue solution basic shipper model included comparison 
decentralized process produces global optimum perfectly consistent competitive behavior carriers price outputs marginal cost technologies convex 
pricing tc expense profit mc se ac ue table equilibria derived walras transportation example 
tc mc ac stand total marginal average cost respectively 
tc shipper expense gamma carrier profit 
simple check prices table verify relationships hold equilibrium assuming links nonzero movements shipper reduce cost rerouting cargo 
simple small symmetric example easy derive equilibrium analytically global equations 
argued improper exploit relationships implementation truly distributed decision process 
lesson exercise achieve qualitatively distinct results simple variations market configuration agent policies 
designers perspective prefer configuration leads transportation efficient se 
examination table reveals achieve result allowing carriers earn nonzero profits economically speaking really fixed factor represented market oriented programming congested channel redistributing profits cover increased expenditures 
model general equilibrium production consumers shares producers profits 
closes loop value ultimately realized consumption 
specify shares part initial configuration just endowment 
example distribute profits evenly 
agents preceding results demonstrate walras implement decentralized solution multicommodity flow problem 
market structure distributed agents connected need know links potentially serving origin destination pair 
concerns easily remedied choice single transportation resource completely arbitrary 
example straightforward consider collection resources fuel labor vehicles endow shipper subsets 
second concern addressed walras 
introduce sort producer agent 
new agents called act specialized middlemen monitoring isolated pieces network inefficiencies 
produces transportation buying capacity production function simply specifies amount output equal minimum inputs production profitable 
bidding policy walras increment level activity iteration amount proportional current profitability decrement proportional loss 
incremental behavior necessary constant returns producers walras profit maximization problem interior solution linear case 
incorporate transportation market structure create new goods corresponding transitive closure transportation network 
example network leads goods location pair 
add triple locations original network exists path traverse location conditions ensure pair connected path link eliminate combinations redundant clearly unprofitable 
revised market structure running example depicted new goods agents shaded 
goods agents inactive market solution omitted diagram avoid clutter 
notice connectivity significantly decreased need aware directly serving origin destination pair 
dramatically simplifies bidding problem avoid analysis price network 
structure distributed agent concerned goods 

restriction bidding behavior competitive constant returns producer choose operate level infinity zero depending activity profitable unprofitable going prices break producer indifferent levels 
lead perpetual oscillation problem noticed solved paul samuelson considered market mechanisms solve linear programming problems samuelson 
wellman revised walras market configuration 
despite simplified shipper behavior walras converges se optimal solution configuration 
resulting allocation resources identical qualitative change market structure corresponds qualitative change degree decentralization 
fact behavior walras market configuration virtually identical standard distributed algorithm gallager multicommodity flow minimum delay communication networks 
gallager algorithm distributed modules expressly differentiate cost function derive marginal cost increasing flow communication link 
flows adjusted equate marginal costs competing subpaths 
procedure provably converges optimal solution long iterative adjustment parameter sufficiently small 
similarly convergence walras model requires adjust activity levels quickly response profit opportunities loss situations 
summary preceding sections developed progressively elaborate market configurations multicommodity flow problem 
table summarizes size shape configuration transportation network locations links movement requirements 
basic shipper model results user equilibrium augmented models produce globally optimal system equilibrium 
carrier model requires new producer agents produce superior result 
model adds producers potentially new goods reduces number goods interest individual agent small constant 
market models represent qualitatively distinct points spectrum potential configurations 
hybrid models conceivable example partial set included arranged hierarchy regular market oriented programming model goods carriers basic shipper plus carriers plus table numbers goods agents market configurations 
type agent brackets indicates number goods individual bids 
structure 
expect configurations exhibit behaviors intermediate specific models studied respect equilibrium produced degree decentralization 

limitations serious limitation walras assumption agents act competitively 
mentioned behavior rational agents small respect economy 
individual agent large affect prices significantly possesses market power utility profits failing take account 
approaches alleviating restriction perfect competition computational economy 
simply adopt models imperfect competition specific forms imperfection spatial competition general game theoretic models 
second architects configure markets promote competitive behavior 
example decreasing agent grain size enabling free entry agents enhance degree competition 
interestingly controlling agents knowledge market structure standard information encapsulation techniques degrade ability exploit market power possess 
uncertainty shown increase competitiveness risk averse agents formal bidding models mcafee mcmillan computational environment substantial control uncertainty 
existence competitive equilibria efficient market allocations depends critically assumption nonincreasing returns scale 
congestion real factor transportation networks example modes transport economies scale density may lead returns increasing 
note strategic interactions increasing returns factors degrading effectiveness market mechanisms inhibit decentralization general need addressed directly approach 
having cast walras general environment distributed planning natural ask universal market oriented programming computational paradigm 
characterize computational power model easily correspondence class convex programming problems represented economies satisfying classical conditions 
interesting issue conceptual framework market wellman equilibrium corresponds salient features distributed planning problems 
early definitive assertion clear planning tasks fundamentally problems resource allocation units distribution correspond units agency 
economics prominent arguably successful approach modeling resource allocation decentralized decision making reasonable suppose concepts economists find useful social context prove similarly useful analogous computational context 
course just economics ideal analyzing aspects social interaction expect issues organization distributed planning accounted framework 
transportation network model highly simplified version actual planning problem domain 
realistic treatment cover multiple commodity types discrete movements temporal extent hierarchical network structure critical features problem 
may captured incremental extensions simple model applying elaborations developed transportation science community 
example transportation models including elaborate formulation allow variable supply demand commodities complex shipper carrier relationships 
concepts spatial price equilibrium markets commodities location offer direct approach extending transportation model walras 

related distributed optimization techniques models described obviously build economics transportation science operations research 
intended research contribution fields application construction computational framework decentralized decision making general 
words order regarding relation approach described extant methods distributed optimization 
elaborate walras model essentially equivalent existing algorithms distributed multicommodity flow bertsekas tsitsiklis gallager market framework offers approach extensions strict scope particular optimization problem 
example reduce number eliminate guarantees optimality reasonable expectation graceful degradation 
similarly realize conceptual extensions structure problem distributed production goods addition transportation adding new types agents 
extension may customized distributed optimization algorithm outperform computational market coming algorithm involve completely new analysis 
stated speculations regarding methodological advantages market oriented framework just speculations point relative flexibility applications programming paradigm ultimately demonstrated empirically 
market oriented programming large literature decomposition methods mathematical programming problems common approach distributed optimization 
techniques interpreted economic terms close relationship prices lagrange multipliers 
main distinction approach advocated conceptual 
global optimization problem decentralizing aim provide framework formulating task distributed manner place 
market computation basic idea applying economic mechanisms coordinate distributed problem solving new ai community 
starting contract net davis smith metaphor markets appealing built systems organized markets market mechanisms malone fikes howard 
original contract net include economic notions bidding mechanism sandholm shown cost price incorporated contract net protocol true market mechanism 
miller drexler drexler miller miller drexler examined market approach depth presenting underlying rationale addressing specific issues salient computational environment 
waldspurger hogg huberman kephart stornetta investigated concepts implementing market mechanisms allocate computational resources distributed operating system 
researchers distributed computing kurose simha applied specialized algorithms economic analyses specific resource allocation problems arising distributed systems 
remarks line see wellman 
kuwabara ishida experimented demand adjustment methods task similar multicommodity flow problem considered 
significant difference method consider path network separate resource market structures manipulate links location pairs 
cast system competitive equilibrium framework results congruent obtained walras 
walras distinct prior efforts primary respects 
constructed expressly terms concepts general equilibrium theory promote mathematical analysis system facilitate application economic principles architectural design 
second walras designed serve general programming environment implementing computational economies 
developed specifically allocate computational resources reason included market structures configured particular application domains 
idea grounding measures value computation real world values cargo movements follows naturally general equilibrium view interconnected markets exciting prospects applications walras distributed problem solving 
organizational theorists studied markets mechanisms coordinating activities allocating resources firms 
example malone models information requirements flexibility performance characteristics variety market non market structures 
terminology walras implements centralized market wellman allocation mediated auction 
models determine gross form organization advantageous information cost communication flexibility individual modules related features 
examine greater detail coordination process computational markets elaborating criteria designing decentralized allocation mechanisms 
take distributivity constraint exogenously imposed constraint organizational economic analysis illuminate tradeoffs underlying mechanism design problem 
market oriented programming shares shoham agent oriented programming shoham view distributed problem solving modules best designed understood rational agents 
approaches support different agent operations transactions versus speech acts adopt different rationality criteria emphasize different agent descriptors ultimately aimed achieving goal specifying complex behavior terms agent concepts belief desire capability social organizations 
combining individual rationality laws social interaction provides natural approach generalizing newell knowledge level analysis idea newell distributed computation 

summary walras represents general approach construction analysis distributed planning systems general equilibrium theory competitive mechanisms 
approach works deriving competitive equilibrium corresponding particular configuration agents commodities specified walras basic constructs defining computational market structures 
particular realization approach simplified form distributed transportation planning see qualitative differences economic structure cost sharing versus ownership shared resources profit maximizing carriers correspond qualitatively distinct behaviors user versus system equilibrium 
exercise demonstrates careful design distributed decision structure economic principles lead effective decentralization behaviors alternative systems meaningfully analyzed economic terms 
contribution reported lies idea market oriented programming algorithm distributed computation competitive equilibria computational economies initial illustration approach simple problem distributed resource allocation 
great deal additional required understand precise capabilities limitations approach establish broader methodology configuration computational economies 
revised extended version wellman 
benefited discussions computational economies colleagues particular jon doyle ed durfee eli gafni daphne koller tracy mullen anna market oriented programming scott shenker yoav shoham hal varian carl waldspurger martin anonymous reviewers helpful comments suggestions 
arrow hurwicz 
eds 

studies resource allocation processes 
cambridge university press cambridge 
bertsekas tsitsiklis 

parallel distributed computation 
prenticehall englewood cliffs nj 


supply demand equilibration algorithms class market equilibrium problems 
transportation science 
davis smith 

negotiation metaphor distributed problem solving 
artificial intelligence 
drexler miller 

incentive engineering computational resource management 
huberman pp 



progressive equilibration algorithms case linear transaction costs 
computer science economics management 
gallager 

minimum delay routing algorithm distributed computation 
ieee transactions communications 


alternative models spatial competition 
operations research 


predicting freight flows 
science press utrecht netherlands 


multiple equilibrium behaviors networks 
transportation science 
marcotte 

relationship nash cournot wardrop equilibria 
networks 
hicks 

value capital second edition 
oxford university press london 
kirman 

equilibrium analysis variations themes edgeworth walras 
north holland publishing amsterdam 
huberman 
ed 

ecology computation 
north holland 
hurwicz 

design resource allocation mechanisms 
arrow hurwicz pp 

reprinted american economic review papers proceedings 
wellman kephart hogg huberman 

dynamics computational ecosystems 
physical review 
koopmans 

uses prices 
scientific papers koopmans pp 

springer verlag 
originally published proceedings conference operations research production inventory control 
kurose simha 

microeconomic approach optimal resource allocation distributed computer systems 
ieee transactions computers 
kuwabara ishida 

symbiotic approach distributed resource allocation coordinated balancing 
pre proceedings th european workshop modeling autonomous agents multi agent world 
lavoie 

coping complexity oops economists critique central planning 
hotline object oriented technology 
malone fikes howard 

enterprise task scheduler distributed computing environments 
huberman pp 

malone 

modeling coordination organizations markets 
management science 
mcafee mcmillan 

auctions bidding 
journal economic literature 
milgrom roberts 

adaptive sophisticated learning normal form games 
games economic behavior 
miller drexler 

markets computation open systems 
huberman pp 



network economics variational inequality approach 
kluwer academic publishers 
newell 

knowledge level 
artificial intelligence 
reiter 

information incentive performance new welfare economics 
reiter 
ed studies mathematical economics 
maa studies mathematics 
samuelson 

market mechanisms maximization 

ed collected scientific papers paul samuelson vol 
pp 

mit press cambridge ma 
originally appeared rand research memoranda 
samuelson 

complementarity essay th anniversary revolution demand theory 
journal economic literature 
market oriented programming sandholm 

implementation contract net protocol marginal cost calculations 
proceedings national conference artificial intelligence pp 
washington dc 
aaai 
scarf 

computation equilibrium prices 
scarf 
eds applied general equilibrium analysis pp 

cambridge university press cambridge 
shenker 

congestion control computer networks exercise cost sharing 
prepared delivery annual meeting american political science association 
shoham 

agent oriented programming 
artificial intelligence 
whalley 

applied general equilibrium models taxation international trade survey 
journal economic literature 
whalley 

applying general equilibrium 
cambridge university press 
varian 

microeconomic analysis second edition 
norton new york 
waldspurger hogg huberman kephart stornetta 

spawn distributed computational economy 
ieee transactions software engineering 
wang 

object oriented knowledge approach formulating applied general equilibrium models 
third international workshop artificial intelligence economics management portland 
wellman 

review huberman 
artificial intelligence 
wellman 

general equilibrium approach distributed transportation planning 
proceedings national conference artificial intelligence pp 
san jose ca 
aaai 

