research memo cs survey uses gate diana maynard hamish cunningham bontcheva george robert gaizauskas mark hepple patrick herring brian mitchell michael wim peters andrea mark stevenson valentin tablan christian yorick wilks july institute language speech hearing department computer science university sheffield uk diana dcs shef ac uk www dcs shef ac uk diana contents motivation infrastructure language processing gate projects involving gate 
cass swe 
gie 




lasie 

trestle 
pasta 
german named entity recognition 
usage gate strengths weaknesses gate general architecture text engineering aims provide software infrastructure researchers developers working nlp 
gate widely available years 
review objectives motivated creation gate functionality design current system 
describe ways gate time examine strengths weaknesses current system identifying areas improvement 
relates experiences projects gate general architecture text engineering years initial release 
section motivation type system give definition architecture context section 
section briefly describes gate section covers range projects system section examines additional ways gate 
experiences form input section discusses system strengths weaknesses 
motivation re researching human language processing probably writing code ffl store data disk ffl display data ffl load processor modules data stores processes ffl initiate administer processes ffl divide computation client server ffl pass data processes machines 
software architecture language processing 
parameterise deployment applications software require low level optimisation purposes main activities carried infrastructure language sciences researcher field 
go say shouldn reinvent components resources outside job 
statistician doesn need know details ieee floating point computation standard discourse processing specialist doesn need understand ins outs part speech tagging worse install particular pos tagger particular machine 
re professional mathematician probably regard tool spss mathematica necessary infrastructure 
re computational linguist language engineer chances large parts infrastructural support 
infrastructure tends specific restricted areas 
gate general architecture text engineering represents attempt fill gap software architecture language processing years experience gate began widespread release late 
system currently pivotal point development new version due release 
experiences reported contribute requirements analysis design new system 
infrastructure language processing infrastructure mean natural language processing nlp 
sorts tasks delegated general tool left individual projects 
position took designing gate focus common elements nlp systems 
useful tools performing specific tasks developing feature structure grammars evaluation unification collecting statistical measures corpora 
varying extents entail adoption particular theories 
common factor nlp systems alas create information text 
developers systems create modules data resources handle text store data exchange various modules compare results test runs generally spend inordinate amounts time pouring samples really enjoying slurp relaxing 
types data structure typically involved large complex tools manage allow succinct viewing data potential 
stage progress field really write tree viewing program output syntax analyser example significant get existing viewing tool process data 
addition common language processing tasks solved acceptable degree previous reused 
writing new part speech tagger sentence splitter list common nominal compounds available store reusable tools data plugged new systems minimal effort 
reuse common installation integration problems solved afresh case cfb 
sum define infrastructure architecture framework development environment architecture macro level organisational pattern components data resources language processing system framework class library implementing architecture development environment adds graphical tools access services provided architecture 
gate gate version things ffl manages textual data storage exchange ffl supports visual assembly execution modular nlp systems plus visualisation data structures associated text ffl provides plug modularity text processing components 
architecture subsystems ffl gdm gate document manager ffl ggi gate graphical interface ffl creole collection reusable objects language engineering 
gate architecture gdm manages information texts produced consumed nlp processes ggi provides visual access data manages control flow creole set resources far integrated 
developers working gate subset creole basic tasks tokenisation sentence paragraph identification part speech tagging 
add modify modules specific tasks 
single api accessing data storing data back central database 
lines configuration information allow system display data friendly graphical form including tree diagrams appropriate 
system takes care data storage module loading deliver embeddable subsystems stripping graphical interface 
supports modules language including prolog lisp perl java tcl 
projects involving gate past years gate number projects university sheffield variety external institutions 
section outline main projects gate examine performance case 
goal extraction content research near market year eu funded research project main aim carrying information extraction adapted lexicons 
participants thomson csf paris project sis smart information systems germany university sheffield university rome la sapienza university geneva athens description gate mainly project implement general word sense disambiguation engine combination classifiers 
benefits modular architecture gate allowed carried rapidly 
drawbacks main disadvantages gate 
architecture development time word sense disambiguation engine 
speed database access tipster database slow large amounts lexical data 
solution store large amounts lexical data separately gate hash tables 
cass swe goal aim cass swe project cascaded finite state parser syntactic analysis swedish kjk create parsing system fast accurate analysis large volumes written swedish 
participants goteborg university sweden 
description cass swe implements grammar modular set small grammars 
gate integrate required software components system prior parsing enable results visualised user friendly environment 
benefits gate allows tagging process carried sequentially enables modification individual elements disruption 
gate visualisation environment enables results cass swe applications tasks additional semantic processing 
drawbacks initial difficulties understanding workings gate system problems originally thought caused gate traced cass parser 
gie goal aim gie greek information extraction project develop prototype named entity recognition model greek 
participants athens university sheffield description gie system vie system provided gate requires different language specific resources gazetteers grammars 
gate enables non language specific resources reused english version saving time effort 
benefits gate facilitated significantly integration existing new modules gie validation final demonstrator 
generally fast easy powerful 
drawbacks gate demand system resources document size increases serious limitation 
complex compilation processes embedding static modules difficult 
gate difficulties supporting non latin languages 
relating gui 
minor possible improvements gui gate general addition new features identified project 
goal advanced information system multinational drug enforcement eu funded research development programme set build information system multinational drug enforcement 
participants germany adb france amt fur germany germany gothenburg sweden institute language speech processing greece spain university sheffield 
description aims collect information distributed international sources advanced linguistic techniques improve involving multimedia resources supporting multilinguality 
goal ols go year project aimed developing integrated toolbox language processing components resources swedish 
participants sics swedish institute computer science uppsala university goteborg university ab research ab ibm ab description toolbox gate language engineering platform incorporates language processing tools developed sics contributed external sources 
benefits component standardised interface users choice working gate selecting combining supplied components integration user application 
gate useful committed particular type data task 
emphasis modularity particularly appealing 
drawbacks gate time early phases problems large scale resources 
specification byte offset requirements different modules difficult 
goal low overhead triage text information extraction demonstrator project gate infrastructure 
aimed provide proof concept implementing demonstration software dealing major technological problems involved computer assisted triage 
participants university sheffield description gate formed basis prototype initial versions release 
parts real project different domain parts served test case gate development demonstration possibilities 
goal aim distributed multimedia infrastructure supporting annotation speech video corpora 
participants max planck institute psycholinguistics nijmegen netherlands university sheffield description enables transcriptions utterances time aligned speech video data dynamic simultaneous viewing editing possible 
integration gate carried order benefit gate ability represent store visualise linguistic data 
benefits flexibility gate data model enabled seamless integration time data gate offset annotations 
enabled representation manipulation display time aligned transcriptions gate viewers allowing user manipulate different types data simultaneously uniform environment 
drawbacks certain lack support distributed remote access document manager 
client server environment entire data sent network just parts needed 
lasie goal lasie wg advanced large scale system performing named entity recognition coreference resolution template element filling scenario template filling 
participants university sheffield description lasie designed specifically gate architecture led free distribution counterpart vie baseline system 
lasie modules gate formed part customised projects ec fourth framework 
goal enzyme metabolic path information extraction month research project aimed applying information extraction technology bioinformatics tasks 
participants dept information studies dept computer science university sheffield plc elsevier science 
description aims extract details enzyme reactions articles biomedical journals 
system derived lasie developed gate architecture 
benefits embedding gate environment means modules reused 
lasie modules produces modules related projects 
gate enables low level moving systems new domains carried effortlessly 
trestle goal trestle text reuse extraction summarisation large enterprises tre year project involving electronic alerting bulletins distributed daily pharmaceutical industry 
participants plc university sheffield dept computer science dept information studies 
description trestle lasie system requires different domain specific resources gazetteers ontology substantial modification discourse interpreter template writer 
benefits gate provides domain independent linguistic components trestle important semantic parser 
named entity recognition requires installation domain specific gazetteers 
drawbacks strong computing skills necessary order system 
pasta goal pasta protein active site template acquisition extracts information protein structures directly scientific journal papers stores template 
participants depts 
computer science molecular biology biotechnology information studies university sheffield 
description system adapted molecular biology domain pre existing technology lasie 
progress far demonstrates feasibility developing intelligent systems text sources pursuit knowledge biological domain 
benefits common database storing intermediate results offers advantages 
gate allows simple integration heterogeneous system components algorithms 
user interface attractive 
drawbacks gate version slow memory hungry documents robust face changes versions compiler gcc 
german named entity recognition goal german named entity recognition mit msc project adapt part lasie system deal german test architecture suitable processing language english 
participants dept computer science sheffield university description system followed general architecture lasie modifications various modules grammar 
benefits gate architecture meant fairly minor modifications individual modules necessary rule adaptation easy 
evaluation lasie tool processing languages positive borne development lasie multilingual system 
drawbacks ability group modules blocks processing useful addition easier method inserting new modules correct place 
usage gate addition projects described gate research tool applications development teaching 
examples uses 
colleagues universities edinburgh umist manchester sussex reported system teaching university stuttgart produced tutorial german purposes see www dcs shef ac uk gate contrib michael 
numerous locations diverse israel copenhagen surrey system order avoid having write simple things sentence splitters scratch enable visualisation management data 
turning applications development gothenburg athens system adding name recognition mt systems language pairs improve performance unknown words 
london developing product automatically applies legal documents gate framework 
british gas research master foods nv owner mars brand lasie system competitor intelligence systems 
lasie configured embedded library gate deployment facilities 
grg report experiments named entity tagged language models large vocabulary connected speech recognition 
modelling data created running lasie batch process gate command line interface 
competitor intelligence researchers finland gate project kei brief driven information retrieval extraction strategy concerns business intelligence companies 
initial difficulties getting system run platform linux red hat able get results short period time main reasons choosing gate place personal communication october polytechnic catalunya barcelona gate part item project multilingual retrieval spanish catalan basque 
gate framework integrating tools different languages visualisation tool results 
particularly useful providing user friendly environment non experts slow speed processing large corpora problem 
gate information extraction english german french spanish greek swedish 
projects researchers contributed diverse growing set components creole collection language resources 
creole includes ffl vie english components text structure analysers sentence splitter pos taggers morphological analyser chart parser name matcher discourse interpreter ffl alvey natural language tools morphological analyser parser ffl plink parser ffl parseval tree comparison software ffl muc scoring tools ffl french parsing morphological analysis tools fribourg inria italian corpus analysis tools rome tor ffl wide range swedish language processing tools 
main deficiency set bias language analysis processing resources language resources 
partial list gate licensees available www dcs shef ac uk nlp gate users html 
experiences cited list indicates take system healthy le workers system useful contexts 
jordi personal communication march 
vanilla system related lasie strengths weaknesses strengths final version release gate ffl facilitates reuse nlp components reducing overheads integration documentation data visualisation ffl facilitates multi site collaboration research providing modular base line system vie experiment ffl facilitates comparative evaluation different methods making easy interchange components ffl facilitates task evaluation internal components taggers parsers systems materials arpa muc programme gs scoring software available gate parseval tree scoring tool har generic annotation scoring tool ffl provides reasonably easy rich graphical interface ffl contributes increased software level robustness quality efficiency nlp systems cross platform portability unix systems windows nt windows native support java tcl ffl contributes portability nlp systems problem domains providing markup tool generating training data learning take input alembic tool dah purpose ffl unifies best approaches managing information text combining tipster style database sgml input output filters developed tools edinburgh language technology group mbt 
principal problems version ffl biased algorithmic components language processing neglects data resource components prs vs lrs 
ffl biased text analysis components neglects text generation components 
ffl database implementation space time inefficient 
ffl visual interface complex somewhat non standard 
ffl task graph generation management process scale small component sets ggi suffers scaling problem bbb size custom graph quickly unmanageable 
ffl annotator component model extensible adding new viewers tools possible 
ffl installing supporting system skilled job runs better platforms unix vs windows 
ffl sharing components depends sharing annotation definitions isomorphic transformations relatively easy implement 
ffl caters textual documents multi media documents 
ffl supports bit character sets 
ffl module reset cascades previously run prs nonmonotonic database updates 
currently progress version gate aims combat problems extend range system cun 
details requirements type system evaluate 
collective experiences sizeable user base eu system claim viable infrastructure certain sections field 
development hope take role wider variety tasks 
supported epsrc gr gr 
bbb burnett baker carlson yang van zee scaling visual languages 
ieee computer 
basili pazienza velardi collier stevenson wilks luk 
extracting case relations corpora 
deliverable version 
russel wittenburg 
corpus research internet 
international conference language resources evaluation lrec workshop distributing accessing linguistic granada spain 
cunningham bontcheva tablan wilks 
software infrastructure language resources taxonomy previous requirements analysis 
proceedings nd international conference language resources evaluation lrec athens 
gate ac uk 
cfb cunningham freeman black 
software reuse object oriented frameworks natural language processing 
new methods language processing september manchester 
re published book form ucl press 
cunningham humphreys gaizauskas wilks 
software infrastructure natural language processing 
proceedings fifth conference applied natural language processing anlp march 
xxx lanl gov abs cs cl 
cun hamish cunningham 
software architecture language engineering 
phd thesis university sheffield 
gate ac uk sale thesis 
dah day aberdeen hirschman kozierok robinson vilain 
mixed initiative development language processing systems 
proceedings th conference applied nlp systems anlp 
go olsson 
experiences language engineering algorithm reuse 
second international conference language resources evaluation lrec pages athens greece 
grg gotoh renals gaizauskas williams cunningham 
named entity tagged language models lvcsr 
technical report cs department computer science university sheffield 
gs grishman sundheim 
message understanding conference brief history 
proceedings th international conference computational linguistics copenhagen june 
har harrison 
evaluating syntax performance parsers grammars english 
proceedings workshop evaluating natural language processing systems acl 
kei 
gaining information value dynamical business environments 
www hut fi 
humphreys gaizauskas 
applications information extraction biological science journal articles enzyme interactions protein structures 
proc 
pacific symposium biocomputing psb honolulu hawaii 
kjk kokkinakis johansson kokkinakis 
cascaded finitestate parser syntactic analysis swedish 
technical report gu iss dept swedish goteborg university 
gu se publications html 
mbt mckelvie brew thompson 
sgml basis data intensive nlp 
proceedings fifth conference applied natural language processing anlp washington dc 
mit mitchell 
named entity recognition german identification classification certain proper names 
master thesis dept computer science university sheffield 
www dcs shef ac uk campus projects bm pdf 
olsson eriksson 
reusing swedish language processing resources 
workshop minimising efforts lr acquisition granada spain 
ols olsson 
tagging morphological processing system 
master thesis university uppsala 
stp ling uu se ps 
paliouras spyropoulos androutsopoulos 
resolving part speech ambiguity greek language learning techniques 
proc 
advanced course artificial intelligence greece 
rodgers gaizauskas humphreys cunningham 
visual execution data visualisation natural language processing 
ieee visual language capri italy 
tre trestle 
trestle project 
www dcs shef ac uk research groups nlp trestle 
wg wilks gaizauskas 
report epsrc research large scale information extraction research project 
technical report gr university sheffield 

