generalizing gloss vector space databases broker hierarchies stanford university technical note number stan cs tn luis gravano ector garc ia molina computer science department stanford university stanford ca usa cs stanford edu fax large numbers text databases available internet getting harder locate right sources queries 
ggloss generalized glossary servers server keeps statistics available databases estimate databases potentially useful query 
ggloss extends previous ggmt focused databases boolean model document retrieval cover databases sophisticated vector space retrieval model 
evaluate new techniques real user queries databases 
generalize approach showing build hierarchy ggloss brokers 
top level hierarchy small widely replicated user workstations 
keywords resource discovery database selection vector space retrieval model information retrieval text databases dramatic growth internet past years created new problem finding right text databases evaluate query 
thousands sources available users internet practically impossible query search information topic exhaustive search take long time complete cost users lots money text databases internet may charge 
consequently users need way narrow searches useful text databases 
specific instance general resource discovery problem odl 
tools appeared internet help users select text databases useful queries see section 
tools essentially research sponsored advanced research projects agency arpa department defense 
mda national research initiatives cnri 
views contained document authors interpreted necessarily representing official policies endorsement expressed implied arpa government cnri 
supported equipment ibm 
keep global index documents available 
approach clearly scale growing number sources documents 
alternatively tools index small part available document title 
approach fails identify useful sources queries significant part document simply discarded 
similarly tools just keep succinct summaries contents database 
summaries manually written date fail capture content databases 
approach broker users query obtain rank potentially useful databases query 
broker keeps partial information contents database scales growing number available databases information covers full text content documents useful sources identified 
ggmt gloss glossary servers server centralized tool keeps meta information databases supporting boolean model document retrieval 
gloss maintains statistics databases uses statistics estimate actual contents databases 
users query gloss uses statistics rank databases estimated usefulness query 
users access databases order gloss suggested 
example consider boolean query find documents word computer word science 
documents match query boolean model document retrieval containing word computer word science 
suppose databases available db db gloss knows db say documents word computer documents word science 
gloss knows documents database db 
databases periodically collect send information gloss server 
gloss know identities documents contain word know documents db contain words query 
gloss estimate number 
way gloss estimation assuming keywords appear documents uniform independent probability distributions 
see ggmt 
assumption db theta documents matching query 
db documents word computer word science gloss estimates number documents matching query db theta 
gloss ranks database db higher database db db higher estimate number documents matching query 
boolean model document retrieval widely primitive 
information retrieval community worked years developing useful document retrieval algorithms models 
popular models vector space retrieval model sm sal 
model represents documents database queries weight vectors 
query documents ranked similar corresponding vectors query vector 
example consider vector space database db documents word suppose word appears df documents db tf times document doc 
importance weight word document doc determined example sal tf theta log df implemented gloss accessible gloss stanford edu 
weight word document doc higher word appears doc times documents database db 
consider query information retrieval 
need express query weight vector 
example number times word appears query weight word query vector 
word information word retrieval weight query vector words database vocabulary weight zero 
suppose document doc db weight word information weight word retrieval 
compute sim doc similarity doc inner product doc weight vectors 
sim doc theta theta 
similarly doc db weight word information weight word retrieval sim doc theta theta 
consequently db ranks doc promising doc query information retrieval theory community designed smart algorithms database query expressing information need try find documents relevant information need sm sal 
deal problem 
focus choosing different databases local search engines 
search engines finding relevant documents outside scope sm 
discussed earlier goal gloss guess correct ranking databases correctness metric target accessing databases keeping full indexes 
gloss understands boolean queries expect rankings approximate actual database rankings document query vector weights 
ggloss generalized powerful version gloss deals vector space databases queries 
gloss ggloss periodically collects statistics underlying sources time including summary word weight information 
analyze different options decide goodness database query define ideal database rank query rank ggloss try produce query 
query desired goodness metric ggloss rank available sources 
ggloss produces estimates ideal database ranks need compare estimates ideal ranks evaluate performance ggloss real user queries vector space databases terms close ggloss ranks ideal ones 
estimate size ggloss information size full index databases experimental results section showing ggloss closely approximate ideal database ranks queries 
facilities building hierarchies ggloss servers 
case hgloss high level server summarizes contents lower level ggloss brokers way ggloss brokers summarize contents underlying databases 
query hgloss server suggests ggloss servers index useful databases query 
hgloss server smaller ggloss brokers easily replicate hgloss server performance bottleneck distributing load searching system 
section analyze possible ideal database ranks query 
section presents different ways ggloss approximates ideal database ranks partial information section reports experimental results ggloss methodology section 
section show build higher level hgloss servers 
related text database discovery problem generally resource discovery problem odl received considerable attention years 
approach solving text database discovery problem users browse information different databases 
known examples include gopher world wide web 
prospero file system neu lets users organize information available internet definition sharing customized views different objects services available 
different approach users query database meta information available databases 
example wais km provides directory servers 
master database contains set documents describing english contents database network 
users query master database identified potential databases direct query databases 
search facilities created gopher worldwide web veronica service fos gopher lycos service world wide web example 
scale growing number available databases systems index document titles generally just small fraction document world wide web worm 
systems keep succinct human generated summaries contents database aliweb system 
sch follows probabilistic approach resource discovery problem consists phases dissemination phase information contents databases replicated randomly chosen sites search phase randomly chosen sites searched parallel 
sites organized specialization subgraphs 
node graph reached search process search proceeds non randomly subgraph corresponds specialization relevant query executed 
see sch 
shorthand distributed indexing dlo broker associated boolean query called generator rule 
broker indexes necessarily local documents satisfy generator rule 
document added information source brokers generator rules match new document sent descriptor new document 
generator objects associated brokers gathered directory servers users query initially obtain list brokers generator rules match query 
see 
sa bc om examples type approach users query meta information databases 
content routing system sdw ds keeps content label information server collection objects generally attributes describing contents collection 
users assign values content label attributes queries sufficiently small set information servers selected browse possible values content label attribute 
see 
harvest system bdh provides flexible architecture accessing information internet 
collect information data sources pass brokers 
harvest server registry special broker keeps information brokers things 
flexibility harvest leaves broker specification open alternative designs possible 
lycos accessible lycos cs cmu edu 
world wide web worm accessible www cs colorado edu home mcbryan wwww html 
aliweb accessible web uk aliweb doc aliweb html 
whois directory service ws organizes whois servers distributed directory mesh searched server automatically generates centroid listing words contains different attributes 
centroids gathered index servers turn generate centroid describing contents 
index server centroids may passed index servers 
index server forwards query index servers centroids match query 
fy site keeps statistics type information receives link connecting sites 
query arrives site site forwards promising link statistics 
ggmt ggmt described gloss glossary servers server server helps users select databases supporting boolean model document retrieval boolean query find documents word computer word science databases return set documents match query :10.1.1.46.2302:10.1.1.46.2302
described variety ways gloss estimates size answer set databases partial information databases 
specifically database db gloss knows documents db include word identity documents 
ggmt ggmt reported results performance gloss scenario estimated storage requirements gloss gloss required storage full index databases choosing right databases queries tried definitions right means :10.1.1.46.2302:10.1.1.46.2302
main differences initial gloss ffl extend approach deal vector space databases estimating vector space searching harder estimating boolean searching 
ffl ways ranking vector space databases query compare rankings ggloss rankings 
ffl evaluate ggloss realistically considering databases opposed original 
ffl define hierarchy ggloss servers allows wide replication small top levels 
ranking databases query rank available vector space databases usefulness 
ranking capture ideal order searching databases search useful database second useful database exhaust rank satisfied documents got point 
section explores determine ideal database rank 
section explores ggloss try rank databases way resembles ideal rank closely possible 
idea rank databases number documents contain relevant query 
believe useful scheme 
illustrate say database db contains relevant documents query 
relevant mean gloss accessible gloss stanford edu 
user submits judge documents interest 
unfortunately turns search engine db include documents answer user benefit relevant documents 
focus answers database gives user queries 
attempt rank databases contents relevance judgments documents search engine answers users queries 
set databases db query define different ideal database ranks 
ranks orders databases goodness different definitions goodness means 
rank associated different definition goodness db goodness database db query ranks consider docs db set documents db having similarity greater threshold underlying assumption documents ones relevant user documents lower similarity useful ignore 
goodness metric associated rank adds similarities acceptable documents goodness db doc docs db sim doc docs db doc lg threshold sim doc similarity query document doc 
alternatively goodness metric associated rank counts acceptable documents goodness db db ranks take documents databases similarity generate single document rank similarities 
consider top documents rank database db consider top db db db documents appear top documents set documents determines goodness metrics associated ranks 
goodness metric associated rank top adds similarities documents goodness db doc top db db sim doc top db db top documents db 
alternatively goodness metric associated rank top counts db documents appear top documents goodness db db db example consider databases db db db query answers databases give query db db db db goodness db goodness db goodness db goodness db db db db db db db db db db db db table database ranks example 
example db returns documents answer documents ranked highest answer closest query database db similarity 
determine databases definitions 
columns table correspond rank threshold user willing examine document similarity higher 
example goodness db equation goodness db db documents similarity higher 
table database rank db db db alternatively second columns table correspond rank 
example goodness db equation goodness db documents db similarity higher 
database rank db db db different db contains documents vectors closer query db db contains acceptable documents documents similarity greater threshold 
determine ranks sort documents databases similarity suppose user willing inspect documents closest 
db contains documents top documents 
goodness metric equation goodness db goodness metric equation goodness db 
table database ranks db db db 
tie db db 
definitions database goodness try quantify useful database user issued query 
ranks users find useful document close query prefer access databases containing highest number useful documents highest accumulated similarity coming useful documents 
alternatively ranks users want access documents closest query prefer access databases containing highest number documents highest accumulated similarity coming top documents 
course meaningful ways define goodness database query 
focus definitions just illustrate issues involved choosing databases 
choosing databases ggloss helps users determine databases helpful query 
users query ggloss obtain rank databases potential usefulness 
perform task ggloss keeps information available databases estimate goodness query 
option ggloss keep complete information database database db word ggloss know documents db contain weight 
ggloss answers accurate information kept date storage requirements approach high ggloss needs index databases keeping information scale 
extreme option ggloss keep information rank databases randomly example storage requirement approach low useful obviously 
extremes lie reasonable solutions keep incomplete useful information databases 
explore options ggloss require matrices ffl ij ij number documents database db contain word ffl ij ij sum weight word documents database db words word vector space database db ggloss needs numbers 
second numbers sum weight documents db determined vector space retrieval algorithm db uses 
typically weight word document doc function number times appears doc number documents database contain sal 
information ggloss stores database incomplete prove useful generate database ranks resemble ideal database ranks section see section 
furthermore information orders magnitude smaller required full text index databases example 
adapting boolean database estimates ggmt estimate size ggloss information vector space database size full text index database ggloss needs keep weights associated words document frequencies vector space full text index 
ggloss information database remains estimated size corresponding full text index 
obtain data ggloss keeps database db columns matrices database db periodically extract information local indexes send ggloss server 
current implementation boolean gloss server provide text databases gloss indexes collector program 
database runs collector locally collector scans local database indexes extracts appropriate information sends gloss server far provide collector wais km databases collector extracts term weight information ggloss need 
weights simply ignored current implementation boolean gloss server 
gloss collector described gloss stanford edu collector html 
example consider database db word computer 
suppose documents db having word computer associated weights computer document contains word computer weight weight computation algorithm sm document weight 
ggloss collector send ggloss information tell ggloss word computer appears documents database db sum weights word appears documents 
definitions assume query expressed weight vector sm weight word query example weight simply number times word appears query 
assume vector space databases compute similarity document query inner product corresponding document query vectors 
ggloss represents databases queries vectors ggloss compute similarities vectors analogously documents queries compared 
ggloss similarities rank databases query 
example ggloss estimate goodness database db query inner product column corresponds db estimate special case general estimates describe 
see section note vectors ggloss represents database viewed cluster centroids sal database considered single document cluster information ggloss keeps database incomplete assumptions regarding distribution query keywords weights documents database 
assumptions allow ggloss compute better estimates 
sections sets assumptions ggloss derive different sets database ranks query 
assumptions unrealistic rarely set databases queries conform 
type assumptions proved useful boolean gloss case choosing right databases query ggmt ggmt 
build ggloss database ranks approximate ideal ranks section ggloss ranks sections approximate ranks section 
high correlation scenario derive maxw maxd database ranks ggloss tries match database ranks section ggloss assumes words appear user query words appear database documents highest possible correlation assumption query keywords appear documents database db respectively db document contains contains interesting direction explore represent database db set cluster centroids 
centroids summarize set closely related documents db 
example consider database db query computer science department 
simplicity computer science department 
suppose documents db word computer word science word department 
ggloss assumes documents word computer contain words science department 
furthermore gamma documents word science word computer contain word department 
exactly gamma document just word department 
ggloss needs assumptions weight distribution words documents database assumption weight word distributed uniformly documents contain word 
word weight ij ij db document contains goal unrealistic assumption simplify computations ggloss rank databases 
example cont 
suppose total weights query words database db 
assumption documents contain word computer weight documents contain word science weight 
ggloss uses assumptions estimate documents database similarity greater threshold query added similarity documents estimates determine maxw maxd database ranks 
consider database db associated vectors query associated vector suppose words ia ib assume 
assumption documents db contain word contain gamma query words 
assumption similarity documents query sim theta ij ij furthermore documents highest similarity documents db sim documents db similarity greater threshold hand sim ggloss explore gamma documents assumption contain words word ggloss finds sim theta ij ij sim theta ij ij ip documents having query words estimated similarity greater threshold condition documents having query words 
definition assumptions give definition estimate db estimated goodness database db query determines maxw database ranks estimate db ij gamma gamma theta sim theta ij ip theta theta ij ij define sim similarity document having words words gamma ij gamma gamma documents db alternatively rank maxd define estimate db ip definition equation computes added similarity ip documents estimated similarity greater threshold see conditions assumptions 
second definition equation documents 
maxw maxd database rank approximate database ranks section 
example cont 
assume query weight words 
assumption documents word computer words science department 
similarity documents assumption 
threshold documents acceptable similarity higher 
gamma documents words science department computer 
similarity documents 
documents acceptable threshold 
gamma document word department document similarity lower 
consequently see conditions 
maxw definition estimate estimate db theta theta maxd definition estimate estimate db disjoint scenario derive sumw ranks ggloss uses approximate ggloss assumes words appear user query words appear database document assumption set db documents word disjoint set db documents word appear query words appear user query assumed negatively correlated database documents 
ggloss needs assumption assumption weights uniformly distributed 
consider database db associated vectors query associated vector suppose words query word ij documents containing contain query word assumption 
furthermore similarity ij documents exactly theta ij ij ij assumption 
rank sumw define estimate db estimated goodness database db query estimate db nj ij theta ij ij ij theta theta ij ij nj ij theta ij ij theta ij alternatively rank define estimate db estimate db nj ij theta ij ij ij definition equation computes added similarity acceptable documents second definition equation computes total number documents 
example consider data example 
assumption documents containing word computer query words documents containing word science query words documents containing word department query words 
documents group similarity assumption acceptable threshold 
documents second third groups similarity respectively acceptable threshold 
documents close query documents contain word computer 
sumw definition estimate estimate db theta definition estimate estimate db notice special case threshold zero 
case maxw sumw definitions estimate equations estimate db theta ij assuming ij ij 
estimate db inner product compute maxw sumw ranks ggloss need matrix document frequencies words needs matrix added weights 
similarly maxd definition estimate equation estimate db definition estimate equation estimate db ij compute maxd ranks ggloss need matrix added weights 
storage requirements ggloss compute database ranks lower emulating ranks example 
pay special attention ranks experiments section 
preceding discussion just considered vector space databases 
ggloss deal boolean databases adapting results ggmt ggmt framework 
section study compare database ranks ggloss generates ideal database ranks section 
comparing database ranks section analyze compare ggloss ranks section ideal ones section section report experimental results comparison methodology section 
query db fdb db set available databases 
db db database rank ggloss generated schemes section 
include databases estimated goodness greater zero assume users ignore databases zero estimated goodness 
general db db ideal database rank definitions section 
include databases actual goodness greater zero 
goal compare quantify close ranks 
way compare ranks goodness metric build consider top databases rank compute accumulated goodness databases query rank generated metric top databases rank maximum accumulated goodness subset databases db 
consider top databases rank compute accumulated goodness databases ggloss generated rank partial information databases general 
resp 
compute just databases 
compute gn number gives fraction optimum goodness ggloss captured top databases models user searches top databases ggloss suggests definition rn metric section partially peter schwarz laura haas ibm almaden personal communication 
db goodness db estimate goodness db estimate goodness db db db db db db db db db db db table ideal ggloss database ranks example 
get compared user gotten searching top databases ideal rank 
example consider query databases db 
table shows ideal database rank different ggloss database ranks definition ranks sections 
example db top database ideal rank goodness db 
database db appear rank goodness db 
ggloss correctly predicted rank estimate db db appear db appear estimate db focus rank db top database estimate db 
real goodness db goodness db 
ranks table access db top database rank obtain goodness db best database db goodness db 
similarly 
case accessing top databases rank access exactly top databases ideal rank 
rank include db estimate db useful goodness db 
consider rank 
includes databases goodness 
exactly order metric coincides rank sense better rank predicted db zero goodness mentioned 
failed predict 
metric distinguish ranks 
introduce metric 
previous example motivated need new metric distinguishes ggloss ranks include useless databases 
ggloss rank query fraction top databases non zero estimate non zero goodness query top database goodness db gj top database db estimate db 
note independent ideal database rank just depends databases ggloss estimated potentially useful turned useful query 
point view users ranking higher better leads fewer fruitless database searches 
example cont 
previous example databases actual non zero goodness 
databases non zero goodness 
notice alternative metrics possible comparing database ranks 
example consider minimum number swaps pairs databases required obtain viewing permutations db 
alternatively consider top databases compare set top databases report fraction second set related recall metric information retrieval theory sm fraction set second set related precision metric information retrieval theory ggmt :10.1.1.46.2302
section evaluate ggloss metrics different values believe metrics better reflect users expectations ggloss includes top database rank database db best databases ggloss partial credit db turns useful query db useful best databases 
metrics ggmt ggmt reflect metrics section :10.1.1.46.2302:10.1.1.46.2302
evaluating ggloss section evaluate ggloss experimentally different ggloss ranking algorithms section different ideal ranking definitions section 
describe real user queries databases experiments 
report results maxw maxd sumw ggloss ranking algorithms section ideal ranking definitions section 
queries databases evaluate ggloss experimentally real user queries databases 
queries profiles real users submitted sift netnews server developed stanford users send profiles form boolean vector space queries sift server turn filters netnews articles day sends articles matching profiles corresponding users 
vector space profiles active server december 
evaluate ggloss performance queries newsgroups databases took snapshot articles active stanford computer news host arbitrary day articles populate databases 
selected newsgroups comp databases comp graphics comp comp security rec arts books rec arts cinema rec arts rec arts theatre hierarchies active documents took snapshot 
note newsgroups cover closely related topics cover totally unrelated topics 
indexed databases evaluated queries smart system version developed cornell university 
keep experiments simple chose weighting algorithms queries documents databases 
indexed documents smart ntc formula generates document weight vectors cosine normalized tf idf product sal 
indexed queries smart nnn formula generates query weight vectors word frequencies queries 
similarity coefficient document vector query vector computed inner product vectors 
sift accessible sift stanford edu 
query ideal rank definition ggloss ranking algorithm compared ideal rank ggloss rank methodology section 
fixed ideal rank definition query generated ideal rank databases query evaluated query databases 
fixed ggloss ranking definition query generated rank databases ggloss generate query extracted partial information ggloss needs databases 
query word ggloss needs number documents database include word sum weight word documents 
extract information queried databases query word individually extra queries 
stress just way performed experiments way ggloss server obtain information needs database real system database periodically scan indexes generate information ggloss needs send ggloss server 
see section 
experimental results section experimentally compare ggloss database ranks ideal ranks terms metrics 
study sumw database ranks better predicting ideal ranks impact threshold performance ggloss 
investigate keeping matrices section really necessary ggloss needs matrices compute ranks sumw section 
shows values metrics ideal database rank case document non zero similarity query considered useful 
ranks maxw sumw identical ideal rank shows 
ranks maxd high values higher 
ranks show corresponding 
immediate ranks maxw sumw coincide target rank 
ranks maxd query database db estimate db goodness db 
consequently 
summary user wishes locate databases similarity documents query highest document non zero similarity interesting rank ggloss maxw identically sumw ranks get perfect results 
study impact higher rank thresholds figures show results ideal rank 
surprisingly experiments ranks maxw maxd performed identically 
estimates defining ranks different assumptions produce similar database orderings 
analogously ranks sumw performed identically 
clarity just data maxw sumw labeled maxw maxd sumw respectively ignore maxd rest discussion 
show values ranging 
report data higher queries fewer useful databases 
results high values significant 
shows rank sumw perfect database db estimate db 
sumw rank goodness db 
words rank sumw includes databases guaranteed useful 
rank maxw may include databases guaranteed useful yielding higher values lower values 
decide ggloss really needs keep matrices section ranks maxw maxd sumw approximate rank 
ggloss needs matrices compute ranks section 
ranks maxw sumw identical ranks maxd performed similarly experiments just data maxw maxd labeled maxw sumw maxd respectively 
shows maxw rank highest values followed sumw ranks assume threshold tend include databases ranks counterparts threshold 
maxw sumw lower values maxw sumw include databases zero goodness 
summary users interested missing useful database willing search useless ones maxw best choice ggloss ggloss matrix users wish avoid searching useless databases sumw best choice 
unfortunately sumw low values means useful sources 
compromise user maxw better values maxw generally better values sumw 
note special case users interested accessing databases maxw best choice metric 
case worthwhile ggloss keep matrices show impact rank thresholds figures show values different ranks fixed values threshold 
larger values queries database goodness greater zero 
example ideal rank query average useful databases making experimental results threshold meaningful 
show data threshold lower 
glance expect performance maxw change threshold varies ranking computes independent desired increases ideal rank changes static estimate provided maxw performs worse worse 
maxw sumw ranks take account target values substantially better 
notice earlier holds strategy sumw best avoiding useless databases maxw provides best values cost low values 
ideal rank number documents database similarity greater query determines goodness database 
performance ggloss ranks similar 
space limitations show metric changes different thresholds 
values identical ideal rank database db goodness db rank db goodness db rank definition ranks section 
rank rank matched exactly ggloss rank 
recall maxw sumw ranks coincide rank 
point view suggesting sources matter users looking sites largest number threshold documents rank looking sites largest total similarity query threshold documents rank 
summary ggloss generally predicts fairly best databases query 
ggloss knows users expectations better ggloss rank databases query 
high values interest ggloss produce max sum max sum parameter function number databases examined ranks ideal database ranking different ggloss rankings 
ranks high correlation assumption section ranks maxw maxd best candidates ranks 
high values interest ggloss matrix produce ranks maxw sumw 
high values interest ggloss produce ranks assumption section ranks sumw best candidates 
rank ranks maxw sumw give perfect answers 
furthermore ggloss need matrix compute ranks 
rank ranks maxd give best approximation require matrix 
decentralizing ggloss far described ggloss centralized server users query select promising sources queries 
section show build distributed version ggloss essentially methodology developed previous sections 
suppose number ggloss servers indexing set databases described previous sections 
servers index databases university example 
build higher level ggloss server hgloss summarizes contents ggloss servers way ggloss servers summarize contents underlying databases 
users query hgloss server obtain rank ggloss servers indexed useful databases 
ggloss servers produce final database ranks 
hgloss server single entry point users search documents size server small inexpensive massively replicate distributing access load replicas 
way organizations able manage traditional ggloss servers replicas logically unique higher level ggloss hgloss concisely summarize contents ggloss servers illustrates 
max max sum sum max sum max sum parameter function number databases examined ranks ideal database ranking different ggloss rankings 
max max sum sum max sum max sum parameter function number databases examined ranks ideal database ranking different ggloss rankings 
max max sum sum max sum max sum parameter function threshold ideal rank 
key point notice hgloss treat information database traditional ggloss server way traditional ggloss servers treat information document underlying databases 
documents hgloss database summaries ggloss servers 
keep size hgloss server small information hgloss server keeps ggloss server limited 
example hgloss keeps matrices see section ffl rj rj number databases ggloss contain word ffl rj rj sum number documents contain word database ggloss words word ggloss server hgloss needs numbers way ggloss servers summarize contents document databases section 
example consider ggloss server word computer 
suppose databases having documents word computer corresponding ggloss weights frequencies computer db db db database db documents word computer added weight word database db documents word computer 
hgloss know word computer appears databases sum number documents word databases 
hgloss know identities databases individual document counts associated word database 
max max sum sum max sum max sum parameter function threshold ideal rank 
max max sum sum max sum max sum parameter function threshold ideal rank 
ggloss database database database database 
hgloss hgloss hgloss ggloss hgloss server summarizes contents traditional ggloss servers turn summarize contents underlying databases 
methodology ggloss previous sections query define goodness ggloss server query example take database rank produces goodness estimate databases define goodness function rank 
computation analogous computed goodness databases section 
defining goodness ggloss server query define hgloss going estimate goodness partial information ggloss server 
hgloss determine estimate ggloss server vectors way analogous ggloss servers determine estimate database db vectors 
defining estimate ggloss server hgloss ranks ggloss servers users access promising servers index useful databases 
due space limitations unable detailed results hgloss 
simply illustrate potential briefly describe experiment 
divide databases section randomly chosen groups databases 
groups corresponds different ggloss server 
assume ggloss servers approximate ideal rank maxd database rank 
ggloss servers keep document count vector section 
define goodness ggloss server query 
goodness determines ideal rank ggloss servers way analogous defined ideal database rank query section 
define goodness ggloss server query number databases indexed having goodness estimate greater zero 
definition analogous goodness definition associated ideal rank 
define hgloss approximates ideal rank ggloss servers 
hgloss periodically receives matrix defined underlying ggloss servers 
query words ggloss server rn database counts associated query words 
word appears databases ggloss server 
assume rn hgloss estimates goodness rn 
analogous estimate definition associated rank maxd section words hgloss estimates rn databases non zero goodness estimate table shows different values adapted metrics queries table metrics hgloss sample experiment 
section 
note time hgloss chooses ggloss server ranking described server databases non zero estimates 
high values follows hgloss extremely ranking useful ggloss servers 
single experiment particular ideal ranking evaluation strategy 
rankings strategies adapted hgloss level tuned actual user requirements 
hgloss server small size easily replicated eliminating potential bottleneck centralized ggloss architecture suffer 
shown construct information broker vector space text databases hierarchies brokers 
compact collected statistics broker provide hints finding relevant databases finding relevant lower level brokers information query 
important feature approach machinery types brokers lower level higher level ones 
experimental results show ggloss hgloss brokers quite promising provide useful services large distributed information systems 
bc daniel barbar chris clifton 
information brokers sharing knowledge heterogeneous distributed system 
technical report mitl tr matsushita information technology laboratory october 
mic bowman baruah bill 
file system information management 
proceedings conference intelligent information management systems june 
bdh mic bowman peter danzig darren hardy udi manber michael schwartz 
harvest scalable customizable discovery access system 
technical report cu cs department computer science university colorado boulder august 
tim berners lee robert cailliau jean 
groff bernd 
world wide web information universe 
electronic networking research applications policy 
peter danzig ahn john noll katia obraczka 
distributed indexing scalable mechanism distributed information retrieval 
proceedings th annual sigir conference october 
dlo peter danzig shih hao li katia obraczka 
distributed indexing autonomous internet services 
computer systems 
ds andrzej duda mark sheldon 
content routing network wais servers 
th ieee international conference distributed computing systems 
fos steve foster 
veronica service november 
message posted comp gopher 
fy david yesha 
information retrieval system network resources 
proceedings international workshop generation information technologies systems june 
ggmt luis gravano ector garc ia molina anthony tomasic 
effectiveness gloss text database discovery problem 
proceedings acm sigmod conference may 
available anonymous ftp db stanford edu pub gravano stan cs tn sigmod ps 
ggmt luis gravano ector garc ia molina anthony tomasic :10.1.1.46.2302
precision recall gloss estimators database discovery 
proceedings rd international conference parallel distributed information systems pdis september 
available anonymous ftp db stanford edu pub gravano stan cs tn pdis ps 
km brewster kahle art 
information system corporate users wide area information servers 
technical report tmc thinking machines april 
neu clifford neuman 
prospero file system global file system virtual system model 
computer systems 
odl katia obraczka peter danzig shih hao li 
internet resource discovery services 
ieee computer september 
om ordille barton miller 
distributed active catalogs meta data caching descriptive name services 
technical report university wisconsin madison november 
sa patricia simpson rafael alonso 
querying network autonomous databases 
technical report cs tr dept computer science princeton university january 
sal gerard salton 
automatic text processing transformation analysis retrieval information computer 
addison wesley 
sch michael schwartz 
scalable non hierarchical resource discovery mechanism probabilistic protocols 
technical report cu cs dept computer science university colorado boulder june 
sch michael schwartz 
internet resource discovery university colorado 
ieee computer september 
sdw mark sheldon andrzej duda ron weiss james toole david gifford 
content routing system distributed information servers 
proc 
fourth international conference extending database technology 
michael schwartz alan brewster kahle clifford neuman 
comparison internet resource discovery approaches 
computer systems 
sm gerard salton michael mcgill 
modern information retrieval 
mcgrawhill 
ws chris simon 
architecture whois index service october 
working draft 
tak yan ector garc ia molina 
sift tool wide area information dissemination 
proceedings usenix technical conference pages 

