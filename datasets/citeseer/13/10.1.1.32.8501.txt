information extraction html application general machine learning approach dayne freitag department computer science carnegie mellon university forbes avenue pittsburgh pa dayne cs cmu edu world wide web consists primarily text information extraction central effort web resource knowledge discovery 
show information extraction cast standard machine learning problem argue suitability relational learning solving 
implementation general purpose relational learner information extraction srv described 
contrast earlier learning systems information extraction srv assumptions document structure kinds information available learning extraction patterns 
structural information supplied input form extensible token oriented feature set 
demonstrate effectiveness approach adapting srv learning extraction rules domain consisting university course research project pages sampled web 
making srv web ready involves adding simple html specific features basic feature set 
world wide web explosive growth broadening reach swiftly default knowledge resource areas endeavor 
unfortunately web pages readily accessible internet connected workstation information content pages human interpretation largely inaccessible 
systems developed sense highly regular web pages generated automatically internal databases response user queries doorenbos etzioni weld kushmerick 
surprising number web sites pages amenable techniques systems 
web pages exhibit regularity required require 
larger class pages regular sense 
web pages come collections page describes single entity event home pages cs department describes owner 
purpose page convey essential facts entity copyright fl american association artificial intelligence www aaai org 
rights reserved 
describes 
reasonable approach page set standard questions expect answers questions available succinct text fragments page 
home page example frequently lists owner name affiliations email address problem identifying text fragments answer standard questions defined document collection called information extraction def 
interest concerns development machine learning methods solve 
regard kind text classification strong affinities investigated problem document classification presents unique challenges 
share focus number systems soderland califf mooney including system designed learn extract html soderland 
describe srv top relational algorithm information extraction 
central design srv reliance set token oriented features easy implement add system 
domain specific information contained features separate core algorithm srv better poised similar systems targeting new domains 
perform extraction electronic seminar announcements medical abstracts newswire articles corporate acquisitions 
experiments reported show targeting system html involves addition html specific features basic feature set 
learning information extraction consider collection web pages describing university computer science courses 
page task information extraction system find title course page describes 
call title field literal title taken actual page artificial intelligence instantiation instance title field 
note typical information extraction problem involves multiple fields may multiple instantiations file 
example course page members joe blow jane 
joe fragment examples classifier members joe confidence members joe blow joe blow 
information extraction text classification 
hypothetical fragment text document describing research project 
corresponding examples 
assigned number classifier designed recognize say project members 
illustration assumes fragment containing tokens terms units punctuation example actual range example lengths depends task 
include addition title official course number names instructors 
traditional terms collection tasks template field slot instantiation slot fill 
general problem information extraction involves multiple sub tasks syntactic semantic pre processing slot filling anaphora resolution cardie 
research reported addresses slot filling problem term information extraction refer problem 
results report system attempting solve task find best unbroken fragment fragments text fill slot answer template 
note task attempted field isolation 
solution task simple may serve basis large number useful applications involving web non web documents 
focus allows study carefully behavior machine learning approaches develop 
extraction text classification information extraction kind text classification 
shows problem finding instances project member field re cast classification problem 
candidate instance document classifier asked accept reject project members generally assign score size confidence fragment project member 
contrast document classification problem objects classify documents clear boundaries problem part identify boundaries field instances occur context larger unit text 
way implement learned classifier treat fragment mini document bag words technique document classification 
reason believe yield results 
terms fragment typically determine field instance relation surrounding context usually great importance 
relational learning relational learning rl known inductive logic programming comprises set algorithms suited domains rich relational structure 
rl shares traditional machine learning ml notion universe consisting class labeled instances goal learning classify unlabeled instances 
contrast traditional ml instances represented fixed length attribute value vectors instances relational universe embedded domain theory 
instance attributes isolated related logically 
typical covering algorithm cn clark niblett predicates attribute values greedily added rule construction 
step number positive examples class heuristically maximized number negative examples minimized 
relational learners rule learners fly feature derivation 
addition simple attribute value tests relational learner logically derive new attributes existing ones example foil quinlan 
srv learner induce rules identify text fragments instances field 
instance field rules say term sequence drawn document collection say set positive examples learning simply set field instances 
set possible text fragments intractably large assumption field instances smaller number terms smallest larger largest seen training 
non field instance fragment training document collection matches criteria considered negative example field counted induction 
features traditional covering algorithm learner provided set features defined examples construct predicates 
unfortunately multi term text fragments difficult describe terms simple features 
contrast individual terms tokens lend readily feature design 
token drawn document number obvious feature types suggest length single character word word sentence punctuation capitalized upper case lower case hybrid alpha num prev token token table srv core token features 
features bold face relational features 
character type numeric orthography capitalized part speech verb lexical meaning geographical place 
course token related tokens number different kinds structure structure suggests relational feature types adjacency token linguistic syntax subject verb 
srv differs existing learning systems requiring learning explicitly provided set features 
features come basic varieties simple relational 
simple feature function mapping token discrete value 
relational feature hand maps token token 
shows features experiments 
call core features embody domain specific assumptions 
search srv proceeds foil starting entire set examples negative examples positive examples covered induced rules adds predicates greedily attempting cover positive negative examples possible 
individual predicate belongs predefined types ffl length relop number tokens fragment greater equal integer 
relop 
example length accepts fragments containing tokens 
ffl var path feat value feature value test token sequence 
example true means fragment contains token capitalized 
argument predicate variable 
rule match text fragment distinct variable bind distinct token fragment 
path argument described 
ffl feat value token fragment passes feature value test 
example false means token fragment non numeric ffl position var relop constrains position token bound predicate current rule 
variable takes values 
values control position specified relative sequence 
example position means token bound second fragment ffl var var relop constrains ordering distance tokens bound distinct variables current rule 
example means token bound immediately precedes token bound step rule construction documents training set scanned text fragment appropriate size counted 
legal predicate assessed terms number positive negative examples covers 
predicate chosen maximizes gain metric foil 
relational paths relational features path argument predicate 
argument empty case predicate asserting feature value test token occurring field list relational features 
case positing relationship field token nearby token feature value token 
example assertion prev token prev token capitalized true amounts english statement fragment contains token preceded capitalized token tokens back 
limit number relational features learner string way 
possible principle learner exploit relations tokens quite distant 
practice srv starts rule considering paths length zero 
posits predicate containing path adds set candidate paths paths obtained appending relational feature path predicate 
way builds notion field context outward rule 
validation experiments reported rule learned rule set validated hold set 
randomly selected portion third case training data set aside validation prior training 
training remaining data number matches correct predictions validation set stored rule 
order get training data possible procedure training validation repeated times partitions training data 
resulting validated rule sets concatenated single rule set prediction 
summarizes steps involved training srv 
testing bayesian estimates assess rule accuracy validation numbers cestnik 
rules matching fragment assign confidence score srv extraction fragment 
set accuracies matching example position predicate legal predicate part rule 
see discussion restrictions relational component predicate 
documents simple relational features induction validation 
matched correct 
matched correct annotated annotated validation documents rules validated rules 
input output srv algorithm 
rules combined confidence gamma gamma 
practice yields better results say score single matching rule highest confidence 
srv foil important distinguish srv foil general purpose learning algorithm 
foil takes input set horn clauses define set training examples structure search space 
srv contrast takes document collection tagged field set features see 
possible get functionality srv encoding field extraction problem order logic encoding best doubtful foil perform certainly perform efficiently 
addition heuristics srv shares foil encompasses additional heuristics render search typically huge negative example sets tractable 
examples handled implicitly token token basis token generally shared examples see permits rapid accounting examples explicitly 
srv exploration relational structure restricted way sense problem contrast traditional ilp systems example infer recursive rules 
experiments test system sampled set pages web tagged relevant fields 
section describes data set approach took adapting srv html 
adapting srv html making srv able exploit html structure involved addition number html specific fea title list tt table font center strong em emphatic br hr li td th td th table col table prev col table row table prev row table row header table col header table html features added core feature set 
features bold face relational 
tures default set 
table shows features added core set experiments 
features return true token occurring scope corresponding tag 
features return true single token corresponding tag 
feature emphatic disjunction em strong 
addition relational features added capture relations tokens occurring html tables 
data experiments sampled labeled course research project pages university computer science departments cornell university texas university washington university wisconsin 
course pages labeled fields course title course number course instructor 
course instructor defined include teaching assistants 
project pages labeled fields project title project member 
collection tagging counted pages course collection research project collection 
procedure gauge performance srv partitioned data sets training testing sets times averaged results 
tried srv core features shown table set augmented html features shown table 
performed separate experiments ways partitioning random partitions collection course project randomly divided training testing sets equal size leave university partitioning pages university set aside testing pages university training 
random partitioning split data set times training testing sets equal size 
numbers reported experiments represent average performance sessions 
partitioning numbers reported represent average performance fold experiment single experiment involves reserving pages university testing 
full acc cov acc cov acc cov course title html core html core course number html core html core project title html core html core table srv performance document fields 
label ran stands random partitioning stands leave university partitioning 
rows labeled core show srv performance feature set shown table labeled html feature set augmented features shown table 
results distinguish kinds task depending field multiple instantiations document 
example research project page refers single project single project title project title may occur tagged multiple times page 
hand project typically multiple members 
case document opd obviously simpler task 
system heuristic learned may recognize multiple project titles page simply take single confident prediction done 
case project member document field system ideally extract occurrence 
answer system case extraction task return prediction document 
table shows performance srv opd fields course title course number project title 
unit performance single file 
accuracy acc number files learner correctly identifies field instance divided number files prediction 
coverage cov number files containing instances prediction 
common machine learning information retrieval try exploit spread confidence learner predictions trading coverage increased accuracy 
sacrificing predictions full field prec rec prec rec course instr 
html core html core project member html core html core table srv performance fields 
confidence greater instance realize accuracy higher baseline 
standard way measuring feasibility trade accuracy coverage graph 
construct graph sort learner predictions confidence various plot accuracy confident predictions 
lieu graphs included additional columns table accuracy approximately coverage approximately coverage 
table shows srv performance fields course instructor project member 
unit performance table individual prediction field instance 
accuracy coverage statistics bear strong relationship standard ir notions precision recall order emphasize different way measuring performance different labels columns 
prec number correctly recognized field instances divided total number predictions 
rec number correctly recognized field instances divided total number field instances 
fundamentally harder task table case srv achieve coverage column 
token accuracy coverage trade crucial shows effect discarding low confidence predictions naturally filtered opd setting 
table shows performance strawman approaches task 
rote learner simply memorizes field instances sees training set making prediction test sequences match entry learned dictionary returning confidence probability training statistics sequence field instance 
take learner simplest possible machine learning approach problem 
actual coverages listed impossible choose confidence cut yields exactly desired coverage 
field instances correspond relevant documents incorrect predictions irrelevant ones 
rote guess field part 
acc cov acc course title rand univ course number rand univ project title rand univ prec rec prec rec course instr 
rand univ project member rand univ table performance simple baseline strategies 
length false true false true title 
course information cs title 

cs programming 
learned rule course number sample matching text 
rule matched examples validation set false positives 
contexts performs surprisingly small number naturally occurring problems 
guess column shows expected performance random guesser unrealistically optimistic assumptions 
learner told field instances occur test file lengths 
instance allowed guess appropriate length 
exactly predictions test field instances precision recall equal fields 
discussion surprisingly srv performs better baseline approaches cases 
especially apparent opd fields 
note rote may appear comparable accuracies cases accuracy figures show performance covered files 
cases srv rote accuracies appear comparable rote coverage generally lower 
expected addition html features generally yields considerable improvement especially high precision curve 
html information appears particularly important recognizing project titles 
single exception trend course instructor problem setting 
appears formatting conventions course page relatively specific department comes page templates passed instructors re semester semester 
srv takes advantage resulting regularities performance suffers rules learns generalize university boundaries 
srv performs best far course number field case results rote indicate memorization yields benefit 
shows html aware rule responsible performance 
core results show performance field attributable strong orthographic regularities numbers exhibit 
noted rote viable approach 
appears true course title field rote achieves reasonable performance surprisingly high coverage levels 
obviously effect generic character course titles 
title artificial intelligence quite course title encountered probably universities variation 
rote high coverage field allows measure accuracy approximate level accuracy coverage random split experiments coverage experiments 
armed html specific features srv achieves better accuracy coverage level partitioning methods 
comparison table table difficulty extraction problem evident 
course lower performance table due fact names people extracted probably difficult task automated system fields common english terms formatting conventions course instructors project members vary say course titles 
note satisfied finding names instructors project members case random partitioning expect thirds predictions correct 
comparison partitioning methods shows surprisingly random partitioning easier learning task partitioning 
especially apparent rote person name fields faculty members tend teach multiple courses researchers university involved multiple projects 
web formatting conventions tend shared department hope srv benefit regularities 
surprisingly uniformly evident 
case project title srv worse columns 
effect probably part due differences training set size partitioning regimes half data random vs data average 
related soderland originally showed viability covering rule learning approach slot filling problem soderland 
califf mooney demonstrated similar system relational extensions califf mooney 
systems rules patterns stipulate occur field instances systems generalize starting maximally specific patterns gradually dropping constraints 
generalization halted rule begins accept negative examples 
bottom search represents efficient useful approach rely heuristics control constraints dropped 
typically ways rule generalized cover negative examples 
contrast topdown search entirely controlled distribution positive negative examples data 
srv part aid set features separate core algorithm 
bottomup systems discussed features implicit entangled search heuristics 
soderland describes modifications crystal learning system order html soderland 
crystal assumption text sentence sized chunks satisfied heuristically 
segmentation performed depends part domain requires manual engineering 
contrast srv searches token level requires modifications retargeted 
exploiting html structure involves addition new html specific features basic feature set 
feature additional information srv require order html 
common report performance system terms summary numbers precision recall systems described adhere convention 
srv added mechanism numbers varied achieve balance advantages particular application 
proceeding general considerations nature problem implemented srv relational learner task 
adapting srv html requires heuristic modifications basic algorithm html structure captured addition simple token oriented features 
clear evidence armed features srv achieves interesting effective generalization variety tasks html domains 
contributions ffl increased modularity flexibility 
domainspecific information separate underlying learning mechanism 
permits things rapid adaptation system html 
ffl top induction 
srv demonstrates feasibility conducting learning direction general specific 
ffl accuracy coverage trade 
contrast area learning framework includes mechanism associating confidence scores predictions 
allows system trade coverage increased accuracy 
srv systems address larger problem designing artificially intelligent agents mining world wide web 
acknowledgments members webkb project cmu data collection possible 
research supported part darpa hpkb program contract 
califf mooney 
relational learning pattern match rules information extraction 
working papers acl workshop natural language learning 
cardie 
empirical methods information extraction 
ai magazine 
cestnik 
estimating probabilities crucial task machine learning 
proceedings ninth european conference artificial intelligence 
clark niblett 
cn induction algorithm 
machine learning 
defense advanced research projects agency 

proceedings sixth message understanding conference muc morgan kaufmann publisher doorenbos etzioni weld 
scalable comparison shopping agent worldwide web 
proceedings international conference autonomous agents 
freitag 
general purpose learning information extraction 
proceedings 
submission 
kushmerick 
wrapper induction information extraction 
ph dissertation university washington 
tech report uw cse 
quinlan 
learning logical definitions relations 
machine learning 
soderland 
learning text analysis rules domain specific natural language processing 
ph dissertation university massachusetts 
cs tech 
report 
soderland 
learning extract text information world wide web 
proceedings rd international conference knowledge discovery data mining 
