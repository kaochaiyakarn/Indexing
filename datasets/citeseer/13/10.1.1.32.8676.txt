efficiently constructing relational features background knowledge inductive machine learning appears proceedings aaai workshop knowledge discovery databases john aronis foster provost computer science department university pittsburgh pittsburgh pa aronis cs pitt edu foster cs pitt edu existing inductive learning systems form concept descriptions propositional languages vectors basic features 
concepts characterized relationships individual examples general domain knowledge 
describe system constructs relational terms efficiently augment description language standard inductive systems 
approach examples domain knowledge combined inheritance network form spreading activation find relevant relational terms 
equivalence inheritance networks relational databases yields method exploring tables database finding relevant relationships data characterize concepts 
describe implementation prototype system cm parallel computer experiments large data sets 


typical inductive learning systems decision tree learners rule learners form concept descriptions propositional languages similarities differences vectors features 
set features static completely determined 
furthermore learners take account relationships examples relationships general domain knowledge 
goal described existing domain knowledge create new terms features originally provided inductive learners 
approach represent examples background knowledge form inheritance hierarchy roles equivalent multi table relational database 
parallel formula propagation techniques suggest relevant terms efficiently 
parallel formula propagation find relationships large knowledge bases including relationships span multiple functional links relate multiple examples see example 
new terms augment description language standard machine learning program 
domain knowledge necessary features attached individual examples capture abstractions general distinctions relate examples concept 
domains typical inductive learning basic features creates small disjuncts inherently error prone lack statistical confidence disjunct covers examples 
creating higher level features useful coalescing related small disjuncts larger rule statistical confidence 
examples show larger rules understandable corresponding collection small disjuncts 
order system combines data prior domain knowledge useful require user know priori knowledge relevant learning problem 
systems able deal large knowledge bases contain irrelevant knowledge 
large knowledge bases combined large example sets vital efficient techniques available representation prior knowledge search relevant prior knowledge 
previous shown parallelism help scale feature inductive learning large data sets 
show parallelism scale learning domain knowledge large knowledge bases combination large data sets 

parallelism domain knowledge 
simple blocks world example illustrate basic ideas describe system performs real world learning problems 
table simple example 
consider example 
shows blocks various shapes sizes colors 
additionally blocks stacked top 
simple feature learner learn description concept set consisting blocks limited reasoning intrinsic features shape color 
learn simple description concept consists blocks gray blocks requires representing reasoning relational information 
represent relevant information concept simple inheritance network 
see blocks concept connected paths consisting color links node gray 
problem know combination links characterizes set 
complex example triangle square rectangle shape color gray white table network example 
links coming node looking diagram clear relationships common nodes concept 
gray block block color block block block block color block gray simple example formula propagation 
aronis developed method called parallel formula propagation explore possibilities simultaneously 
attach initial formulas nodes network propagate network small set rules show relationship original nodes nodes network 
idea illustrated 
initial formula block block attached node block 
crossed block block link formula block block 
notice new formula true link tells block block 
new formula crosses block color gray link formula color block gray 
block block color gray 
model extended count occurrences formulas record frequency relationships 
suppose mark blocks concept block block block initial formula blocks complement initial formula formulas propagate network certain formulas show frequently certain nodes 
reflects prevalence particular relationships nodes concept complement node 
nodes count number times formula occurs keep track relationships 
example node gray eventually occurrences formula color gray occurrences formula color gray 
shows blocks concept relationship blocks complement know formula color gray characterizes concept 
words concept consists exactly blocks gray block 
concept characterize characterizing class 
method nearly nodes concept related single node way nodes complement relationship 
illustrates set characterized rule items connected sequence links place initial formula item propagate network collect node copies formula node distinguished formulas initially concept fact relationship node characterizes concept accumulation formulas 
potential characterizing relationships parallel may need search combinations find suitable rules 
instance situation rule may true objects outside concept case need search additional conditions exclude negative examples 
alternatively relationship true concept need search additional formulas characterize remaining items concept 
characterize concept characterizing class conjunction 
consider situation 
case characterizes set conjunction 

prototype system 
built prototype system ideas 
basic operation system follows 
load learning set knowledge base inheritance network 
mark nodes concept positive initial formulas mark nodes complement negative initial formulas allow propagate network keeping track accumulations 

select significant formulas proportion positive negative formulas accumulated 
briefly formula large number positive occurrences negative occurrences candidate characterize concept little complement 

selected formulas create new features learning set done parallel described run feature learning system enhanced database done parallel see 
basic ideas explained rest section describe details implementation 

parallel implementation 
cm connection machine simd computer thousands processors ideally suited implementing formula propagation model 
node assigned single processor instructions propagating formulas links issued front processors simultaneously 
process propagating formulas concept complement network described 
important problem surfaces implemented cm inheritance networks irregular structure branching factors range links cm uses regular interconnection scheme data communications processors 
bottleneck result nodes try send formulas single node node direct communication lines may hundreds links 
furthermore processor sequential processor process incoming formula individually 
solved problem auxiliary nodes spread node links communication processing load processors 
building tree processors rooted node links leaf processor process portion original node links combine results tree 
original node connections scheme introduces log factor better order time required process links directly 
scheme reduces amount memory required nodes store links 
formulas propagated potentially useful ones need identified 
say node significant formula attached higher proportion positive formulas proportion negative formulas proportions computed relative total number items concept complement 
nodes identified marked parallel 
complex measures significance possible required explore 
fx fx fx fx fx simple 
significant formula fx node want attach new feature fx node learning set node initial formula propagated sequence links isa links node done parallel attaching initial formula node allowing propagate backwards links 
nodes original learning set related node concept complement formula fx attached new feature 
illustrated 
new features derived nodes relationships significant rough indicator proportion concept complement nodes related 
guarantee new features enhance learning process generally augment features inductive learner operate 
prototype new features identified attached learning set rl sytem learn rules characterize concept 

results scientific data 
system run database stellar spectra learn classification rules luminosity 
stellar spectrum marked lines corresponding substances star atmosphere 
lines varying intensity predict star luminosity 
rl system data stars spectral lines absent produced rules tio line high luminosity line high luminosity oh line high luminosity ca line high luminosity star spectrum line molecules tio oh ion ca high luminosity 
ca fe ti mg tio oh element molecule spectral line line line line multiply singly star element neutral element spectral lines classification 
rules useful match experts classification stars capture connections generalizations data features reasoned 
capture represent generalizations learned rules requires representing basic scientific knowledge 
linked stellar spectra knowledge base elements characteristics shown 
experiments data stars shown clarity 
learning data general knowledge available inheritance network system learned rules previous molecule line high luminosity ca line high luminosity rule states item spectral line satisfies predicate molecule item satisfies predicate high luminosity 
second rule says item line satisfies predicate ca satisfies predicate high luminosity 
rules fact combined single rule knowledge added knowledge base represents exceptional property element calcium similar molecules 
require representing nonmonotonic reasoning currently capabilities system 
system run database infant births deaths department health 
original data births categorized county state region country occurred 
regions included areas new england middle atlantic southeast addition categories original data department health linked records geographic categories including new region east coast 
run combination original data new domain knowledge system able find new rule living east coast extremely low incidence infant mortality 
note simple attribute value hierarchy discovered rule east coast regions specified priori way know east coast relevant category 
putting categories relevant efficient representation rule learned 

capabilities limitations 
formulas propagated paths parallel complexity finding significant nodes new terms learning linear depth network 
efficiency fact paths explored simultaneously system choose paths promising 
systems foil perform heuristic search large space terms 
system sufficient look ahead know branches search tree promising 
instance gives example concept foil learn 
foil system relations fh ig fh ti fi ti fig fh ti ti fi fig fh fi ti fi tig attempting learn concept select relations limited search lookahead look equally promising foil chooses wrong pruning branch search tree leading correct solution 
system relations represented graph format formulas propagated links parallel correct characterization concept noticed immediately 
efficiency system stems limited description language links inheritance network 
inheritance system find new terms form 
nodes role link network 
isa links interspersed role links appear final formula 
rl system assemble new terms boolean combinations characterize concept 
language restricted systems example foil golem takes advantage close correspondence databases inheritance networks 
records rows relations correspond individuals columns correspond relational links 
instance simple database relations shown represented inheritance network shown 
simplified example show structure associated various attributes 
instance bmw may structure classified additional isa links 
people name occupation automobile bob bmw john programmer spectrum sam lawyer bmw tim lawyer bmw occupations occupation salary high programmer medium low lawyer high simple relational database 
reasoning disjoint tables original database learning program find lawyers bmw 
learning program formula propagation inheritance network learn people high salaries bmw 
done marking node bmw propagating formulas mark people bmw 
new formulas concept characterized predicate represent unary relation single valued role link find formula bob law 
acct 
prog 
bar 
occupation occupation occupation salary salary high medium low salary salary spectrum bmw tim occupation john sam occupation auto auto auto auto auto people occupations equivalent inheritance network 
propagated network find characteristics people 
case people jobs high salaries 
rule people high salaries bmw equivalent database rules lawyers bmw 
single rule intuitively explanatory fact useful 
inheritance networks represent generalizations knowledge individual facts possible generalize rules 
get rules robust data added 
correspondence databases inheritance networks allow system learn relations implicit structure databases 
open possibility integrating databases knowledge bases exploit generalities expressed knowledge just data 

related 
closely related relational inductive learning come known inductive logic programming 
method differs methods take advantage efficiencies offered representing background knowledge inheritance hierarchy roles 
standard relational approaches foil golem assume background knowledge expressed set ground facts 
large amounts background knowledge combined large data sets number ground facts needed immense 
approaches scale large problems 
hierarchies give compact efficiently searchable representation background knowledge 
techniques finding relationships inheritance hierarchies suggest new terms propositional learner 
related feature construction constructive induction 
matheus gives overview techniques feature construction 
address large body domain knowledge suggesting relational terms 
exception inductive logic programming system linus 
linus uses relational background knowledge suggest new terms standard feature inductive learners 
linus enumerates possible relational terms syntactic semantic constraints type constraints 
relational approaches discussed exhaustive enumeration scale large problems problems examples lots irrelevant domain knowledge address problem formula propagation techniques find terms appear useful characterizing concept learned terms compositions relationships hierarchy 

discussion 
real world applications applied prototype system take full advantage system capability learning relational terms 
case system allowed learning attribute value hierarchies relational knowledge learned general rules 
blocks world example illustrates complicated relationships discovered 
addition computational effort involved scales complexity knowledge represented inheritance hierarchy 
complex spectrum background knowledge system degenerates standard feature learner 
attribute value hierarchies provided system take advantage learn general rules 
complex system take advantage background knowledge includes functional roles relationships examples 
believe inheritance hierarchies represent background knowledge useful real world learning problems 
shown inductive learning take advantage efficiency inheritance hierarchy representation augmenting description language propositional learner 
important large amount irrelevant background knowledge addition large number examples 
domains blindly compiling background knowledge propositional form set possible ground facts infeasible 
inheritance hierarchy representation facilitates parallelization 
massively parallel machine greatly increases space relations searched relevant knowledge 
project 
hope link large databases large knowledge bases way learning feasible 
example infant mortality data linked knowledge industrial environmental factors different regions country 
considering dealing live births year efficiency major concern 
addition improve parallel inheritance hierarchy search deal complex inheritance representations including non monotonicity 
aronis 

implementing theory nonmonotonic inheritance connection machine 
ph thesis intelligent systems program university pittsburgh 
clearwater provost 

rl tool knowledge induction 
proceedings second international ieee conference tools artificial intelligence pp 

ieee press 
provost 

small disjuncts action learning diagnose errors telephone network local loop 
proceedings tenth international conference machine learning ml 
morgan kaufmann 
holte acker porter 

concept learning problem small disjuncts 
proceedings eleventh international joint conference artificial intelligence pp 

morgan kaufmann 
matheus 

feature construction analytic framework application decision trees ph thesis 
department computer science university illinois urbana champaign 
michalski hong lavrac 

multi purpose incremental learning system aq testing application medical domains 
proceedings fifth national conference artificial intelligence pp 

aaai press 
muggleton feng 

efficient induction logic programs 
proceedings international conference algorithmic learning theory pp 

tokyo japan japanese society artificial intelligence 
lavrac dzeroski 

inductive logic programming 
ellis horwood 
provost aronis 

scaling inductive learning massive parallelism 
intelligent systems laboratory report isl computer science department university pittsburgh quinlan 

induction decision trees 
machine learning pp 

quinlan 

learning logical definitions relations 
machine learning pp 

rendell 

learning hard concepts constructive induction framework rationale 
appear computational intelligence 
