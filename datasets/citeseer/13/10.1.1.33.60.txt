mining data flow environment experience network intrusion detection wenke lee salvatore stolfo mok computer science department columbia university wenke sal mok cs columbia edu discuss kdd process data flow environments unstructured time dependent data processed various levels structured forms analysis tasks 
network intrusion detection concrete application example describe construct models accurate describing underlying concepts cient analyze data real time 
procedures analyzing frequent patterns lower level data constructing appropriate features formulate higher level data 
features generated various levels data di erent computational costs time space 
show order minimize time required classification models real time environment exploit necessary conditions associated lowcost features determine high cost features need computed corresponding classification rules need checked 
applied tools problem building network intrusion detection models 
report experiments network data provided part darpa intrusion detection evaluation program 
discuss experience mined models nfr real time network intrusion detection system 
business engineering applications raw data collected fielded systems needs processed various forms structured records data analysis tasks produce accurate useful understandable results 
consider problem credit card fraud detection 
credit card purchase transmits stream data containing credit card number amount type merchandise credit card data server 
data processed transaction record contains additional computed features fields measuring short long term activity behavior account 
network intrusion detection packet sniffer tcpdump record passing network packet 
data needs processed connection records contains connection hosts service telnet ftp number bytes describe network states 
refer applications involve real time data collection processing analysis data flow environments 
accuracy data analysis depends algorithms employed large degree quality processed data 
example activity history account number type purchases past hours useful predicting certain missing credit card transaction records accuracy fraud detection system su er 
defining features determining constituent attributes records traditionally deep domain knowledge 
real time environment ciency data analysis critical 
example line fraud detection systems need respond approval rejection transaction seconds 
tradeo model accuracy model evaluation ciency needs considered 
researchers recognized kdd single plan defined operations sequence iterative steps include limited data cleaning preprocessing feature extraction data mining consolidating utilizing discovered knowledge 
research kdd focuses data mining step assumes availability preprocessed data 
kdd finding useful knowledge interesting see apply kdd techniques automate knowledge intensive data preprocessing tasks 
data mining techniques consider accuracy complexity measures evaluation criteria extracting models data 
problem ciency cost time space model execution real time adequately studied 
address important challenging problems adequately needs access data flow entirety 
impossible legal organizational constraints 
research somewhat di erent advantageous context applying data mining techniques build network intrusion detection models lsm lsm data abundant nearly needs computer network 
focus discussion automatic techniques comparing frequent patterns mined normal intrusion data constructing appropriate features building classification models 
report results darpa intrusion detection evaluation showed detection models produced data mining programs performed better equivalent knowledge engineered intrusion detection systems 
discuss techniques deriving low cost necessary conditions learned rule filter unnecessary wasteful real time rule checking 
contributions kdd new techniques feature construction frequent patterns mined data minimum preprocessing simple useful pattern encoding comparison technique assist model construction strategies minimizing cost model execution real time importantly demonstration objective evaluation feasibility advantage applying systematic semi automatic data mining approaches network intrusion detection important challenging traditionally knowledge engineering application area 
rest organized follows 
give brief overview problem network intrusion detection summarize basic association rules ais frequent episodes mtv algorithms characteristics network audit data 
discuss feature construction steps include mining comparing sets patterns identify intrusion frequent patterns parsing pattern construct temporal statistical features 
report experiments techniques darpa data 
describe utilize associations low cost features class labels necessary conditions rules checked real time execution 
data mining intrusion detection intrusions actions aim compromise security goals computer system confidentiality integrity availability 
intrusion detection id considered integral part critical infrastructure protection mechanisms 
traditionally intrusion detection systems idss built purely knowledge engineering approaches system builders encode security knowledge detection models 
manual ad hoc nature development process ectiveness adaptability idss face new attack methods changed network configurations 
aim automate process building idss possible 
developing framework madam id described detail lsm mining audit data automated models intrusion detection :10.1.1.33.1238
framework consists classification meta classification cs programs association rules frequent episodes programs feature construction system 
product concise intuitive classification rules detect intrusions 
previously discussed demonstrated need select construct set temporal statistical features order build accurate classification models detect network intrusions lsm 
example large number rejected network connections short time span strong evidence intrusions need include feature measures indicator 
proposed frequent sequential patterns mined audit data guidelines feature construction lsm 
process data mining approaches build intrusion detection models shown 
raw binary audit data processed ascii network packet host event data turn summarized connection records host session records containing number features service duration flag indicating normal error status protocols data mining programs applied connection records compute frequent sequential patterns turn analyzed construct additional features connection records 
classification programs example ripper coh inductively learn detection models 
process course iterative 
example poor performance classification models indicates pattern mining feature construction needed 
mining audit data important incorporate domain knowledge direct data mining algorithms find relevant patterns ciently 
described detail ex data mining process building id models tensions basic association rules frequent episodes algorithms utilize schema level information connection records mining frequent patterns lsm lsm 
briefly describe main ideas 
observe network connection uniquely identified combination time start time src host source host src port source port dst host destination host service destination port essential attributes network data 
argue relevant association rules describe patterns related essential attributes 
depending objective data mining task designate essential attribute axis attribute lsm form item constraint association rule mining 
candidate generation itemset contain value axis attribute 
axis attributes frequent episodes algorithm finds frequent associations axis attributes computes frequent sequential patterns associations 
associations attributes sequential patterns records combined single rule 
essential attributes attributes 
attributes normally carry information subject attributes describe actions refer subject 
example want study sequential patterns connections destination host dst host subject service action 
attribute lsm frequent episodes algorithm ensures episode minimal occurrences records covered constituent itemsets attribute value :10.1.1.33.1238
example frequent episode derived connection records table service axis attribute dst host attribute shown table 
pattern syn flood attack attacker sends lot half opened connections flag port victim host order run quickly bu er achieve denial service 
feature construction mined patterns packet data summarized connection records see commonly available packet processing engines record contains set intrinsic features general network tra analysis purposes 
features service src host src port dst host dur duration connection flag src bytes dst bytes number data bytes direction 
frequent sequential patterns initial connection records viewed statistical summaries network activities 
comparing patterns normal dataset collected normal network tra extended period time intrusion dataset recorded simulation runs attack programs identify utilize intrusion patterns feature construction 
experience showed choice axis attributes important computing intrusion patterns 
example port scan time duration service src host dst host src bytes dst bytes flag 
spoofed victim 
spoofed victim 
spoofed victim 
spoofed victim 
spoofed victim 
ftp sf 
telnet sf 
table network connection records frequent episode meaning service flag service flag service flag time connections flag host victim seconds third similar connection pattern occurs data table example frequent episode rule intrusion attacker typically connections ports di erent services host short period time 
lot connections rejected ports normally closed 
dst host axis attribute produces distinct intrusion patterns example lag rej dst host host lag rej dst host host 
intrusion pattern service axis attribute dst host attribute large number di erent services attempted short period time result service destination host connection rejected sequential patterns frequent 
need alleviate user burden guessing choices 
iterative procedure involves pattern mining comparison feature construction patterns model building evaluation employed 
iteration di erent combination axis attribute attribute selected 
choices limited essential attributes service dst host src dst src port 
note exact time frequent omitted 
intrusions generally targeted victim host network start service axis attribute dst host attribute 
iteration set features performance resulting classifier tp true positive fp false positive recorded 
set features results best model selected procedure 
focus discussion pattern comparison feature construction 
pattern comparison order create baseline normal patterns compare frequent patterns intrusion datasets mine patterns subset day normal network connection records incrementally merge patterns form aggregate pattern set lsm 
done possible combination axis attributes 
aggregate normal pattern set usually large range thousands tens thousands patterns 
developed encoding scheme convert frequent pattern number easily visualize understand ciently compare patterns 
encode associations constituent itemsets frequent episodes due axis attribute see section 
goal encoding scheme map associations structurally syntactically similar closer numbers 
seek encoding scheme simple compute manipulate 
define similarity measure precisely define partial order discovered associations 
assuming records attributes call association complete ordered attributes user defined decreasing order importance simplest form alphabetical order attribute names 
discovered association converted complete ordered form inserting null missing attribute sorting attributes order importance 
complete ordered associations say vn un say association similar holds 
set associations algorithm compute encodings convert association complete order form 
encoding association number 
vn order digits significant corresponds decreasing order importance attributes 
null attribute missing original association order appearance values seen processed far encoding process forms ordering trivially incorporated 
encoding associations network records decreasing order importance flag axis attribute attribute rest essential attributes alphabetical order remaining attributes alphabetical order 
attribute flag important interesting association value summary connection behaved network protocols 
value sf normal connection establishment termination great interest intrusion detection 
table shows examples encodings 
service axis attribute dst host attribute 
associations encoded processed order positions table row 
advantage encoding scheme simple arithmetic operations easily control level detail required analysis comparison associations 
example choose ignore src bytes simply integer division encodings 
encodings associations map episode rule associations itemsets data point encoding encoding encoding pattern visualization 
due di culties manipulating dimensional displays longer episode rule general subsuming form missing simply set encoding 
pattern comparison convert encoding episode value 
assume encoding encoding encoding representation 
xn yn presentation preserves order importance attributes association encoding considers rule structure episode 
episodes similar body head mapped closer numbers 
example association encodings table ignoring dst host src host src bytes syn flood pattern table encoded 
similarly normal pattern lag sf service lag sf service icmp echo lag sf service encoded 
comparing episodes numbers simple digit wise comparison performed 
resulting di score 
xn zn yn digit absolute value di erence corresponding digit episodes 
example comparing syn flood pattern normal pattern di score 
normal patterns patterns intrusion dataset computed choices axis attribute attribute support confidence window requirements identify intrusion patterns procedure encode patterns pattern intrusion dataset calculate di score normal pattern keep lowest di score intrusion score pattern output patterns non zero intrusion scores user specified top percentage patterns highest intrusion scores 
example normal pattern lag itemsets di score syn flood pattern high pattern selected 
procedure considers pattern intrusion dataset normal long match normal patterns 
simplicity omit comparisons support confidence values heads bodies rules match 
seen case matched rules values apart considered acceptable threshold 
feature construction intrusion patterns syn flood pattern shown table constructing association encoding lag sf service src bytes service icmp echo dst host host lag service src host host service user app src host host lag sf service icmp echo dst host host src host host 
table encodings associations input frequent episode set existing features connection records output updated dst host attribute mine episode seconds minimum width episode features consider connections past seconds share value current connection count number connections count essential attribute value itemsets percent percentage connections share value current connection percent di erent values percent di percentage di erent values connections percent di value non essential attribute itemsets percent percentage connections share value current connection percent numerical attribute average average values connections average constructing features frequent episode additional features connection records algorithm 
procedure parses frequent episode uses operators count percent average construct statistical features 
features temporal measure connections time window share attribute value 
intuition feature construction algorithm comes straightforward interpretation frequent episode 
example attribute value appears itemsets episode large percentage records original data value 
treat essential non essential attributes di erently 
essential attributes describe anatomy intrusion example service port targeted 
actual values important attack method applied di erent targets ftp 
hand actual non essential attribute values lag indicate invariant intrusion summarize connection behavior network protocols 
observations postprocess patterns eliminate exact host names service names encoding comparison steps 
briefly pattern src src dst dst srv srv replace source hosts destination hosts services current pattern 
example feature construction syn flood pattern results additional features count connections dst host past seconds connections percentage service current percentage flag 
open problem decide right time window value experience shows plot number patterns generated di erent values plot tends stabilize initial sharp jump 
call smallest stable region experiments showed plot accuracies classifiers temporal statistical features calculated di erent stabilizes tend taper 
intuitively requirement window size set sequential patterns stable su cient patterns captured noise small 
adding temporal statistical features 
experiments darpa data participated darpa intrusion detection evaluation program prepared managed mit lincoln labs 
objective program survey evaluate research intrusion detection 
standard set extensively gathered audit data includes wide variety intrusions simulated military network environment provided darpa 
participating site required build intrusion detection models tweak existing system parameters training data send results detected intrusions test data back darpa performance evaluation 
summarize experience provided gigabytes compressed raw binary tcpdump data weeks network tra processed full detail features constructed darpa data set appear companion lsm :10.1.1.33.1238
summarize experiments self contained 
connection records bytes 
weeks test data connection records 
main categories attacks simulated dos denial service syn flood unauthorized access remote machine guessing password unauthorized access local superuser root privileges various bu er overflow attacks probing information gathering port scan 
procedures discussed section compared aggregate normal pattern set patterns dataset contains attack type 
features constructed intrusion patterns host features include count connections past seconds destination host current connection connections percentage service current percentage di erent services percentage flag percentage rej flag similar set service features include count connections past seconds service current connection connections percentage destination host current percentage di erent destination hosts percentage flag percentage rej flag 
call time tra features connection records 
slow probing attacks scan hosts ports larger time interval seconds example minute 
result attacks produce intrusion patterns time window seconds 
sorted connection records destination hosts applied pattern mining feature construction process 
time window seconds connection window connections constructed mirror set host tra features time tra features 
discovered dos probing attacks attacks don intrusion frequent sequential patterns 
dos probing attacks involve connections host short period time probing attacks embedded data portions packets normally involves single connection 
algorithms mining unstructured data portions packets development 
presently domain knowledge add features look suspicious behavior data portion number failed login model feature set intrusion features rules features categories records rules content intrinsic content tra intrinsic dos probing tra host tra intrinsic slow probing host tra table model complexities attempts behavior suid programs call features content features 
built specialized models ripper di erent set features detects di erent categories intrusions 
example content model connection record contains intrinsic features content features resultant ripper rules detect attacks 
meta classifier combine predictions base models making final prediction connection record 
table summarizes models 
numbers bold example indicate number automatically constructed temporal statistical features ripper rules 
see tra host tra models feature construction process contributes majority features rules 
report performance detection models evaluated mit lincoln labs 
trained intrusion detection models base models meta level classifier weeks labeled data predictions weeks unlabeled test data 
test data contains total attack types types test data new models 
shows roc curves detection models attack categories intrusions 
roc plots axis false alarm rate calculated percentage normal connections classified intrusion axis detection rate calculated percentage intrusions detected models produced binary outputs roc curves continuous 
compare models participants denoted group darpa evaluation program groups knowledge engineering approaches build intrusion detection systems 
see detection models best performance attack category model best 
plots duplicated presentation slides report lincoln labs darpa pi meeting 
slides viewed line www cs columbia edu sal jam project mit mit index html 
discussed evaluation results researchers participating groups 
agreed manual knowledge engineering approach suffers di culties dealing large amount data generalize specific hand coded models 
procedures automatic construction features mined patterns worked large dataset 
inductive classification rules provides better performance new attacks 
results shows models performed poorly large varieties attack methods intrusion category 
research needed network intrusion detection 
cient execution learned rules intrusion detection models produced line 
ective intrusion detection real time minimize security compromises 
need study models perform real time environment 
working translating ripper rules real time detection modules nfr network flight recorder nfr system includes packet capturing engine code programming support specifying packet filtering logic 
implementation essentially tried follow line analysis steps real time environment 
connection inspected classified rules connection record completely formulated packets connection arrived summarized temporal statistical features computed 
scheme failed miserably 
large volume network tra amount time taken process connection records past seconds calculate statistics large 
ensuing connections may terminated completed attack actions current connection inspected ripper rules 
detection intrusions severely delayed 
ironically dos attacks typically generate large amount tra short period time detection rate false alarm rate columbia group group group dos false alarm rate columbia group group group probing detection rate false alarm rate columbia group group group columbia false alarm rate columbia group group roc curves detection rates false alarm rates intruders overload ids detection delay window opportunity quickly perform malicious intent 
example seize control operating system kill ids 
need examine time delay associated feature order speed model execution 
data flow environment real time intrusion detection time delay feature includes time computation time readiness computed 
example flag connection computed summarized packet connection arrived service connection obtained checking header packet 
partition features cost time delay levels level features computed packet level features computed connection information current connection level computed connection require access data prior connections 
datum arrives early data flow shown cost lower calculate feature depends datum 
order conveniently estimate cost rule assign cost level features level level 
di erent levels order magnitude di erence cost 
feature set derived darpa dataset service level feature intrinsic content features level tra features level 
note simply order rules costs real time execution reasons 
rules output ripper strict sequential order rule rule reordering rules may result unintended classification errors 
furthermore rules tested strictly cost order introducing classification errors rules tested fail match classification 
ordering rules costs necessarily optimal solution fast model evaluation 
seek compute cient schedule feature computation rule testing minimize model evaluation costs increase response rate real time detection 
low cost necessary conditions ideally tests involving low cost level level features eliminate majority rules need checked eliminating needs compute high cost features 
order eliminate rule intrusion need test form derived compute association rules intrusion labels lhs low cost features rhs confidence 
discovered associations ripper rules example ping death service icmp echo phf service port scan src bytes syn lag note feature values example src bytes ripper rules prevalent normal data 
don predictive power 
associations necessary conditions intrusions example connection port scan attack src bytes equivalent src bytes connection port scan attack 
note rhs associations feature value pairs regarding di erent features corresponding independent necessary conditions 
select lowest cost 
merge associations 
single association 
vn 
example darpa data bu er overflow service telnet bu er overflow service rlogin merged bu er overflow service telnet rlogin 
ripper rule intrusion excluded failure necessary condition features rule need computed needed candidate remaining rules 
discuss cient bookkeeping candidate rules features determine schedule feature computation rule condition testing 
real time rule filtering suppose ripper rules 
bit vector bit order corresponding order rules output ripper remaining vector indicate rules need checked 
initially bits 
rule invalidating bit vector bit corresponding rule bits 
high cost features level temporal statistical feature computing bit vector bits corresponding rules require feature 
intrusion type record lowest cost necessary condition conditions costs features involved 
sort necessary conditions costs produce order real time condition checking 
examining packet just completed connection necessary condition intrusion violated corresponding invalidating bit vectors ripper rules intrusion remaining vector computing vectors high cost features 
necessary conditions checked get features non zero computing vectors 
features potentially useful remaining rules need checked 
single function call code modules compute features 
execution strategy reduces memory disk access features compute statistical information past stored connections records 
remaining vector check remaining rules 
currently fine tuning implementation scheme need perform extensive set experiments simulating wide variety intrusions establish empirical speed may attain 
analysis necessary conditions dos probing attacks set features ripper rules suggest simple low cost tests service flag reduce number high cost feature tests see table 
preliminary experiments far confirmed result 
related feature construction approach similar jh 
operators extracted patterns existing sets features consider syntactic form patterns 
fewer simpler operators patterns carry stronger information invariant behavior intrusion 
automatic pattern encoding comparison algorithms produce input patterns feature construction program 
related cost sensitive learning example tur cost tests features accuracy crucial criteria building models 
cost model evaluation adds significant twist approach 
plan study comparison approaches 
dc detector constructor fp sequence operations constructing features indicators needed cellular phone fraud detector classifier constructed 
harder problem standard record format connection records invent 
need construct temporal statistical features just individual accounts di erent connections services 
modeling di erent logical entities take di erent roles behavior recorded great detail 
extracting fast overwhelming stream packet data adds considerable complexity problem 
described challenges opportunities kdd data flow environment 
network intrusion detection concrete case study showed expert intensive feature construction process part data preprocessing guided supported data mining programs 
approach encode compare frequent patterns mined normal intrusion datasets automatically construct statistical temporal features describe anatomy invariant behavior attacks 
results darpa evaluation show intrusion detection models produced method outperformed knowledge engineered systems 
pointed critical consider cost time delay real time execution model 
devised simple scheme aims low cost tests filter large portion high cost feature computations 
continue research optimizing learned rules real time execution 
study issues network anomaly detection possible means detect new attacks completely di erent nature known intrusions 
acknowledgment research supported part darpa nsf iri cda 
forster provost bell atlantic william cohen helpful discussion 
ais agrawal imielinski swami 
mining association rules sets items large databases 
proceedings acm sigmod conference management data pages 
coh cohen 
fast ective rule induction 
machine learning th international conference lake ca 
morgan kaufmann 
cs chan stolfo 
parallel distributed learning meta learning 
aaai workshop knowledge discovery databases pages 
fp fawcett provost 
adaptive fraud detection 
data mining knowledge discovery 
fayyad piatetsky shapiro smyth 
kdd process extracting useful knowledge volumes data 
communications acm november 
jh japkowicz hirsh 
bootstrapping approach constructive induction 
working notes workshop constructive induction change representation 
jacobson leres mccanne 
tcpdump 
available anonymous ftp ftp ee lbl gov june 
lsm lee stolfo mok 
mining audit data build intrusion detection models 
proceedings th international conference knowledge discovery data mining new york ny august 
aaai press 
lsm lee stolfo mok :10.1.1.33.1238
data mining framework building intrusion detection models 
proceedings ieee symposium security privacy may 
mtv mannila toivonen verkamo 
discovering frequent episodes sequences 
proceedings st international conference knowledge discovery databases data mining montreal canada august 
nfr network flight recorder network flight recorder 
www nfr com 
tur turney 
cost sensitive classification empirical evaluation hybrid genetic decision tree induction algorithm 
journal artificial intelligence research 

