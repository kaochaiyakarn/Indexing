designing family coordination algorithms keith decker victor lesser technical report th intl 
dai workshop december researchers shown single best organization coordination mechanism environments 
discusses design implementation extendable family coordination mechanisms called generalized partial global planning gpgp 
set coordination mechanisms described assists scheduling activities teams cooperative computational agents 
gpgp approach unique features 
tied single domain 
mechanism defined response certain features current task environment 
show different combinations mechanisms appropriate different task environments 
secondly approach works conjunction agent existing local planner scheduler 
initial set mechanisms generalizes extends partial global planning pgp algorithm 
comparison pgp gpgp allows agent heterogeneity exchanges global information communicates multiple levels abstraction 
analyze performance gpgp algorithm family members centralized upper bound algorithm data simulations multiple agent teams working task environments 
show decide adding new mechanism useful suggest way prune search appropriate combination mechanisms environment 
presents formal description implementation domain independent coordination approach call generalized partial global planning gpgp 
gpgp approach consists extendable set modular coordination mechanisms subset response particular task environment 
mechanism defined formal framework expressing coordination problems tms 
gpgp generalizes extends partial global planning pgp algorithm :10.1.1.48.8362
approach unique features shorter version appeared proceedings th international distributed ai workshop seattle july 
supported darpa contract office naval research contract nsf contract iri 
content information necessarily reflect position policy government official endorsement inferred 
ffl mechanism defined response certain features current subjective task environment 
mechanism removed entirely parameterized active portion episode 
new mechanisms defined initial set mechanisms examined approximate original pgp behavior 
eventually intend develop library reusable coordination mechanisms 
individual coordination mechanisms rest shared substrate mechanisms agent local scheduler decision theoretic manner 
ffl gpgp works conjunction existing agent architecture local scheduler 
experimental results reported achieved design time real time local scheduler developed garvey 
ffl gpgp pgp tied single domain 
gpgp allows agent heterogeneity pgp respect agent capabilities 
gpgp mechanisms general exchange information pgp algorithm information gpgp mechanisms exchange different levels abstraction 
pgp agents communicated complete schedules single fixed level abstraction 
gpgp mechanisms communicate scheduling commitments particular tasks convenient level abstraction 
gpgp approach views coordination modulating local control replacing 
process occurs set domain independent coordination mechanisms post constraints local scheduler importance certain tasks appropriate times initiation completion 
example gpgp coordination mechanism handles simple method redundancy 
agent equivalent method accomplishing task agent schedules method commit executing notify agents commitment 
agent happen commit redundant method mechanism takes care retracting redundant commitments 
concentrating creation local scheduling constraints avoid sequentiality scheduling original pgp algorithm occurs multiple plans 
having separate modules coordination local scheduling take advantage advances realtime scheduling produce cooperative distributed problem solving systems respond real time deadlines 
take advantage local schedulers great deal domain scheduling knowledge encoded 
approach allows consideration termination issues glossed pgp termination handled external oracle 
tms underlying task structure representation requires agents cooperative antagonistic simply self motivated 
obvious connections earlier pgp gpgp builds von martial detecting reacting relationships von martial favor relationship 
gpgp uses notion social commitments similar discussed :10.1.1.37.83
durfee newer hierarchical behavior space representation gpgp allows agents communicate multiple levels detail 
mechanisms deal coordination agents scheduling locating time activities planning meet goals 
allows distributed scheduling systems agenda systems blackboard systems systems agents instantiate previous plans case planning systems 
focus mechanisms coordinating schedules slightly different focuses multi agent planning 
shoham tennenholtz social laws approach viewed tries change perceived structure tasks example restricting agents possible activities 
intelligent agents approaches time 
section briefly re introduce framework representing coordination problems summarize assumptions agent internal architecture 
describe gpgp substrate coordination mechanisms 
previous shown gpgp approach duplicate extend behaviors pgp algorithm section summarizes new results reported concerning approach performance adaptability extendibility 
conclude look directions 
representing task environment coordination process managing interdependencies activities 
view agent entity beliefs world perform actions coordination problem arises situations occur agent choice actions take choice affects agent performance order actions carried affects performance time actions carried affects performance 
coordination problem choosing temporally ordering actions complex agent may incomplete view entire task structure actions part task structure may changing dynamically agent may uncertain outcomes actions 
multiple agents environment potential actions agent related agent call relationship coordination relationship 
gpgp coordination mechanism response coordination relationship 
tms framework task analysis environment modeling simulation represents coordination problems formal domain independent way 
represent coordination problems distributed sensor networks hospital patient scheduling airport resource management distributed information retrieval pilot associate local area network diagnosis 
describe agent current subjective beliefs structure problem trying solve tms framework 
purpose unique features tms 
explicit quantitative representation task interrelationships describe effect performance activity choices temporal orderings 
second representation task structures multiple levels abstraction 
lowest level abstraction called executable method 
method represents schedulable entity blackboard knowledge source instance chunk code input data totally ordered plan recalled instantiated task 
method instance human activity useful level detail example take ray patient left foot 
task group contains tasks explicit computational interrelationships 
coordination problem instance called episode defined set task groups deadline ht shows objective task group agent subjective view task group 
goal agent agents maximize sum quality achieved task group deadline 
task group consists set tasks related subtask relationship forms acyclic graph tree 
tasks leaves tree represent executable methods actual instantiated computations actions mechanisms oriented producing pgp cooperative team behavior 
mechanisms agents possible 
word objective refers fact true real structure 
agent execute produce amount quality shown boxes 
circles higher tree represent various subtasks involved task group indicate precisely quality accrue depending methods executed 
arrows tasks methods indicate task interrelationships execution method positive negative effect quality duration method 
presence interrelationships np hard scheduling problem complicating factors local scheduler include fact multiple agents executing related methods methods redundant executable agent subjective task structure may differ real objective structure 
min task quality accrual function min subtask relationship enables relationship method executable task facilitates relationship agent min max max min max objective task group min max agent initial subjective view agent initial subjective view min max max min max agent subjective views bottom typical objective task group top summary gpgp algorithm family approach section provide quick overview gpgp approach 
shows simple agent example 
agent part architecture belief database local scheduler coordination module 
local scheduler uses information belief database schedule method execution actions agent attempt maximize performance 
add coordination module charge communication actions information gathering actions making breaking commitments complete tasks task structure 
coordination module consists coordination mechanisms notices certain features task structures belief database responds certain communication information gathering actions proposing new commitments 
coordination mechanisms rest shared coordination module substrate keeps track local commitments commitments received agents chooses multiple schedules local scheduler returns multiple schedules 
environments agents attempt maximize system wide total utility quantity called quality described executing sequences interrelated methods 
agents initially complete view problem solving situation execution method agent positively negatively affect execution methods agents 
show examples effect environment performance gpgp family member show environment family member better different environment better return demonstration meta level information useful large amount variance episodes environment 
agent coordination module local scheduler local scheduler coordination module agent belief database belief database max min max max min max max min max max min max max min max max min max effect effect deadline finish quality violations cmt alternative finish quality violations commitment deadline quality non local commitment deadline quality finish quality violations scheduling constraints schedules alternatives non local commitment deadline quality commitment deadline quality results non local views commitments objective task group subjective task group objective task method environment subjective representation agent task non local view min local task quality accrual function min subtask relationship enables relationship local method executable task facilitates relationship name duration quality finish quality violations idle schedules alternatives scheduling constraints overview generalized partial global planning short example intended give reader feel approach 
agents executed initial information gathering action initial views task structure agents belief database shaded tasks tasks relationships touching shaded tasks 
coordination mechanisms mech 
update non local views performs information gathering action determine tasks may related tasks agents detect coordination relationships 
tasks exchanged agents resulting belief databases shown including shaded tasks 
mechanisms react task structure 
mechanism mech 
handle soft predecessors notices task agent facilitates task agent order agent schedule take advantage agent mechanism local intermediate deadline commitment complete task time minimum quality may infer intends execute method local information part commitment 
commitment stages locally see possible far agent local scheduler concerned non locally communicated agents involved 
note deadline non local version commitment time take account communication delay time unit 
similarly agent mechanism mech 
handle simple redundancy notices agents task 
agent eventually commit task process bit complicated explained communicates commitment agent cases agents local schedulers information task structure belief database local non local commitments construct schedules 
local scheduler may return multiple schedules reasons explain 
schedule evaluated dimensions performance criteria total final quality termination time local commitments violated 
commitment violated local scheduler may suggest alternative instance relaxing quality intermediate deadline constraint 
coordination module chooses schedule set handles retraction violated commitments 
agent architecture assumptions architecture agents 
agents database holds current beliefs structure tasks current episode represent information tms 
agents types actions execute methods task structure send direct messages information gathering 
information gathering actions model new task structures communications get agent belief database 
combination external actions checking agent incoming message box internal planning 
method execution actions cause quality accrue task group indicated task structure 
communication actions send results method executions turn may trigger effects various task interrelationships meta level information 
formally write mean agent subjectively believes time shoham 
shorten particular agent time important 
agent subjective beliefs current episode include agent beliefs task groups subtasks executable methods interrelationships enables 
gpgp family coordination algorithms stronger assumption agent architecture 
assumes presence local scheduling mechanism described section decide method execution actions take place 
local scheduler attempts maximize possibly changing utility function 
current set gpgp coordination mechanisms cooperative teams agents assume agents intentionally lie agents believe told 
agents believe communicate subjective information may unwittingly transmit information inconsistent objective view cause things phenomena distraction 
gpgp family approach requires domain dependent code detect predict presence coordination relationships local task structure 
refer domain dependent code information gathering action called detect coordination relationships describe action section 
local scheduler gpgp agent contains local scheduler takes types input information produces set schedules alternatives 
input current subjectively believed task structure 
information potential duration potential quality interrelationships local scheduler chooses orders executable methods attempt maximize pre defined utility measure task group utility function sum task group qualities denotes quality time defined 
note quality accrue task group deadline 
second input set commitments commitments produced gpgp coordination mechanisms act extra constraints schedules produced local scheduler 
example method executable agent method executable agent methods redundant agent coordination mechanism may commit agent method 
commitments social directed particular agents sense shoham castelfranchi 
local commitment agent non local commitment received agent types commitments commitment achieve quality satisfied time second type dl dl deadline commitment time dl satisfied time dl 
commitment sent agent implies task result communicated agent deadline deadline commitment 
third input local scheduler set non local commitments nlc agents 
information local scheduler coordinate actions agents 
example local scheduler property method executable agent method enables method agent agent knows ba dl bb nlc schedule produced agent hm ti words agent schedules enabled method deadline agent committed 
schedule produced local scheduler consist set methods start times fhm hm hm ig 
schedule may include idle time local scheduler may produce schedule invocation situation commitments met 
different schedules represent different ways partially satisfying set commitments 
function violated returns set commitments believed violated schedule 
violated deadline commitments dl dl violated function alt returns alternative commitment dl dl dl min exists nil 
violated commitment alternative may contain lower minimum quality alternative may possible 
function est nlc returns estimated utility episode agent follows schedule non local commitments nlc kept 
may define local scheduler function ls nlc returning set schedules fs smg 
detailed information kind interface local scheduler coordination component may 
extremely general definition local scheduler minimal necessary gpgp coordination module 
stronger definitions needed predictable performance discuss 
ideally optimal local scheduler find schedule maximum utility su schedule maximum utility violates commitments practice heuristic local scheduler produce set schedules schedule highest utility su necessarily optimal su nlc su nlc 
gpgp coordination mechanisms role coordination mechanisms provide information local scheduler allows local scheduler construct better schedules 
information form modifications portions subjective task structure episode form local non local commitments tasks task structure 
mechanisms describe form basic set provides similar functionality original partial global planning algorithm shown 
mechanism exchanges useful private views task structures mechanism communicates results mechanism handles redundant methods mechanisms handle hard soft coordination relationships 
mechanisms added update utilities agents discussed section balance load better agents 
mechanisms independent sense combination 
inconsistent constraints introduced local scheduler return violated constraint schedules 
local scheduler typically optimizes may constraints inconsistent search exhaustively 
section describes schedule chosen coordination module substrate 
gpgp coordination module substrate specific coordination mechanisms rest common substrate handles information gathering actions invoking local scheduler choosing schedule execute including dealing violated inconsistent commitments deciding terminate processing task group 
information gathering actions include noticing new task group arrivals receiving communications agents 
information gathering done start problem solving communications expected agents agent idle 
communications expected response certain events arrival new task group indicated set nonlocal commitments nlc 
minimal general information gathering policy 
termination processing task group occurs agent agent idle expected communications outstanding commitments task group 
choosing schedule complicated 
agent local scheduler may return multiple schedules find single schedule maximizes utility meets commitments 
set schedules returned local scheduler particular schedules identified schedule highest utility su best committed schedule sc schedule chosen 
examine sum changes utility commitment 
commitment created assigned estimated utility est task group part 
utility may updated time agents depend commitment example 
choose schedule largest positive change utility 
allows abandon commitments doing result higher utility 
coordination substrate local scheduler utility estimate est directly entire schedule local view 
coordination substrate may receive non local information places higher utility commitment locally 
example time agent may commitment task results schedule initially acquires estimated utility task group part est ft ba nlc 

communicating commitment agent making part bb nlc agent uses commitment improve est ft bb nlc 
coordination mechanism detect discrepancy communicate utility increase back agent agent considers discarding commitment coordination substrate recognizes non local utility commitment greater local utility 
schedules utility negotiable chosen 
commitment index high medium low indicates heuristically difficulty rescheduling commitment broken 
index set individual coordination mechanisms 
example hard coordination relationships enables ignored trigger commitments low 
schedules equivalent shorter chosen length chosen random 
schedule chosen violated empty commitment violated replaced alternative alt 
commitment agents agents informed change commitment 
potentially cause cascading changes schedules multiple agents generally reasons mentioned previous paragraph important commitments broken secondly local schedulers solve problems multiple ways tends damp fluctuations third agents time cognizant resource bounded reasoners interleave execution scheduling agents spend day arguing scheduling details meet deadlines 
observed useful phenomenon plan analyze 
mechanism updating non local viewpoints remember agent partial subjective view current episode 
gpgp mechanism described communicate private information policy non local view policy global view take intermediate approach policy partial view 
process detecting coordination relationships private shared parts task structure general domain specific model process new information gathering action relationships takes fixed amount agent time 
action scheduled new task group arrives 
set privately believed tasks methods agent tasks believed arrival time fx task ba ar set agents ar arrival time definition action detect coordination relationships returns set private coordination relationships pcr fr pt private mutually believed tasks 
action return task just relationship exists unknown task example physical organization agents detect agent task overlapping sensor area fact related unknown task agent ba bb 
non local view coordination mechanism communicates coordination relationships private tasks context pcr communicated agent set agents fa ba example shows local subjective beliefs agents communication due mechanism 
min task quality accrual function min subtask relationship enables relationship method executable task facilitates relationship agent min max max min max group min max min max agent view communication min max max min max agent view communication agents local views receiving non local viewpoint communications mechanism shaded objects 
shows agents initial states 
agents initial local view shown previously 
example elements agent private set tasks facilitates oe oe pcr facilitation relates private task mutually believed task enables completely local agent relates private tasks 
start section mentioned coordination relationships exist portions task structure controllable different agents pcr portions controllable multiple agents 
ll denote complete set coordination relationships cr includes elements pcr relationships non private tasks 
relationships entirely local private tasks concern local scheduler 
purpose coordination mechanism exchange information expands set coordination relationships cr 
mechanism place cr consist non private relationships pcr 
primary focus coordination mechanisms creation social commitments response coordination relationships elements cr mechanism significant indirect benefits 
environments tends small expensive compute useful making commitments see sections mechanism omitted 
mechanism communicating results result communication coordination mechanism possible policies communicate results necessary satisfy commitments agents minimal policy communicate information plus final results associated task group tg policy communicate results policy 
extra result communications broadcast agents minimal communications sent agents commitment communicate result set agents fa ba policy needed simple environments 
mechanism handling simple redundancy potential redundancy efforts multiple agents occur places task structure 
task uses max quality accumulation function possible semantics node indicates absence relationships subtask needs done 
subtasks complex involve agents coordination agents avoid redundant processing complex address general redundancy avoidance problem see 
original pgp algorithm domain distributed sensor interpretation primary form potential redundancy simple method redundancy result derived data number sensors 
coordination mechanism described meant address simpler form potential redundancy 
idea simple redundancy coordination mechanism agent wants execute redundant method agent randomly chosen execute send results interested agents 
generalization static organization algorithm discussed decker lesser try load balance uses communication action general case agents know communication certain methods redundant 
mechanism considers set potential redundancies rcr fr cr subtask min method methods current schedule time method potentially redundant commit send commitment non local agents method hm subtask min rcr est comm see example top agents commit methods commitment agent refrain executing method question possible non local commitments simultaneously arrive communication delay time ffi 
mechanism watches multiple commitments redundant set appear unique agent chosen randomly identically agents best commitments keep commitment 
agents retract commitments 
example bottom shows situation agent retracted commitment agents follow algorithm communication channels assumed reliable second message retraction needs sent choose agent redundant method 
implementation described identical random choices giving method unique random identifier agents choose method smallest identifier execution 
initially commitments initiated redundant coordination mechanism marked highly negotiable 
redundant commitment discovered remaining commitment lowered medium indicate commitment somewhat important 
mechanism handling hard coordination relationships hard coordination relationships include relationships enables indicate executed order obtain quality redundant methods hard coordination detection redundant methods domain dependent discussed earlier 
talking simple direct redundancy doing exact method agent detection straight forward 
min max min max facilitates min max max min max facilitates agent view communication agent view communication duration quality schedules commitments mech commitments dl mech mech min max min max min max max min max agent view commitments agent view receiving commitments duration quality schedules commitments mech commitments dl mech continuation figures 
top agents propose certain commitments mechanisms 
bottom receiving initial commitments mechanism removes agent redundant commitment 
relationships culled set cr 
hard coordination mechanism distinguishes direction relationship current implementation creates commitments predecessors enables relationship 
ll ae cr indicate set potential hard predecessor coordination relationships 
hard coordination mechanism looks situations current schedule time produce quality predecessor commits execution certain deadline locally socially est enables dl est early comm question time early commit providing answer 
solution usable local scheduler fits general description section min est 
implementation local scheduler provides query facility allows propose commitment satisfy early possible allowing agent relationship slack 
take advantage ability hard coordination mechanism adding new commitment dl est early local commitment set invoking local scheduler ls nlc produce new set schedules preferred highest utility schedule su violations highly local scheduler simply return schedule better replace current schedule new schedule potentially earlier finish time provide value early new completed commitment entered locally low sent subset interested agents 
redundant commitments task earliest commitment agent kept agent committing highest quality remaining ties broken method 
currently hard coordination mechanism pro active mechanism providing information agents putting individual agent extra effort 
coordination mechanisms added family reactive request agents certain tasks done certain times quite different behavior need analyzed separately 
mechanism handling soft coordination relationships soft coordination relationships handled analogously hard coordination relationships start high 
current implementation predecessor facilitates relationship triggers commitments agents hinders relationships 
positive relationship facilitates oe oe indicates executing decreases duration power factor related oe increases maximum quality possible power factor related oe see details 
situation specific version coordination mechanism ignore relationships low power 
relationship hinders oe oe negative indicates increase duration decrease maximum possible quality 
coordination mechanism designed hinders similar negative relationships added family 
pro active existing mechanisms hinders mechanism successors relationship try schedule late commit earliest start time successor 
shows agent making commitment method turn allows agent take advantage facilitates relationship causing method take half time produce times quality 
experimental results believe mechanisms collectively form gpgp family coordination algorithms indispensable 
evaluate mechanisms terms costs benefits cooperative problem solving analytically experimentally 
analysis experimentation takes place respect general task environment correspond particular domain 
doing produces general results weaker possible derive single fixed domain performance variance problem episodes far greater performance variance different algorithms single episode 
allows determine broad characteristics algorithm family reduce search particular set mechanism parameters particular domain machine learning techniques see section 
discuss statistical techniques paired response simulations deal large episode variances occur randomly generated problems 
gpgp simulation issues model task environment experiments parameters table lists values experiments described sections 
shows small example task group 
parameter values facilitation exps 
values clustering exps 
mean branching factor poisson mean depth poisson mean duration exponential redundant method max max number task groups task distribution min max min max min max hard cr distribution enables enables enables soft cr distribution facilitates hinders facilitates hinders facilitates hinders chance overlaps binomial facilitation strength table environmental parameters generate random episodes primary sources overhead associated coordination mechanisms include action executions communication information gathering calls local scheduler algorithmic overhead associated mechanism 
table summarizes total amount overhead source coordination mechanism setting coordination substrate 
represents length processing time termination general density measure coordination relationships 
believe amounts derived environmental parameters table measured experimentally 
interactions presence coordination mechanisms quantities include number methods tasks depends non local view mechanism number coordination relationships subsets rcr redundant coordination relationships hard predecessor coordination relationships soft predecessor coordination relationships depends number tasks methods number commitments jcj depends mechanisms commitments 
general performance issues examined general performance complex mechanisms place complex mechanisms members gpgp family comparison comparison centralized scheduler implementation upper bound 
looked performance measures total final quality achieved system amount done number deadlines missed termination time 
centralized schedule system earlier focussed analysis distributed sensor network task environments 
mechanism setting communications information gathering scheduler overhead substrate idle lc dp crs crs comm min tg redundant rcr rcr cr hard cr soft cr table overhead associated individual mechanisms parameter setting appropriate solution general coordination problem cooperative groups agents reasons ffl centralized scheduling agent possible single point failure cause entire system fail decentralized gpgp system 
ffl centralized scheduling agent requires complete global view episode view mentioned earlier easy achieve 
account costs building global view implementation viewing upper bound performance 
allow dynamic changes episodic task structure require rescheduling 
ffl centralized scheduler uses optimal single agent schedule starting point 
problem scheduling actions fairly simple task structures np complete optimal scheduler performance grows exponentially worse number methods scheduled 
centralized scheduler global view schedules actions agents size centralized problem grows faster size scheduling problems gpgp agents partial views heuristic schedulers 
conducted paired response experiments algorithms 
balanced refers mechanisms partial non local views communication committed results completed task groups 
simple refers mechanisms non local view broadcast communication results 
parallel refers centralized scheduler uses heuristic parallelization optimal single agent schedule complete global view 
experiments environmental parameters facilitation experiments table 
important things note class environments ffl size episodes kept artificially small centralized scheduler find optimal schedule reasonable amount run time 
ffl experiments low numbers enables relationships low number min quality accrual functions penalize simple algorithm demonstrate section 
ffl deadline pressure kept low simple algorithm perform badly 
experiments centralized parallel scheduler outperformed distributed gpgp agents time difference distributed better total final quality criterion 
gpgp agents produced quality centralized parallel scheduler average 
results need understood proper context centralized scheduler takes processing time distributed scheduler scaled larger numbers methods task groups 
centralized scheduler starts global view entire episode 
table shows results measured criteria summarizing block paired response comparisons 
total final quality number deadlines missed better simply refers episode algorithm question greater total final quality missed fewer deadlines respectively 
respect method execution time measure system load termination time better refers fact algorithm produced higher quality missed fewer deadlines algorithm algorithms better algorithm lower total method execution time lower load terminated sooner 
looked performance mechanisms episodes gpgp agents produced average times final quality uncoordinated agents 
coordinated agents balanced execute far fewer methods ability avoid redundancy 
redundant execution methods proves hindering element uncoordinated agents acting severe time pressure 
table summarizes results 
parallel better balanced better significant 
total final quality method execution time deadlines missed termination time table performance comparison centralized parallel scheduler vs balanced gpgp coordination decentralized dtt scheduler simple better balanced better significant 
total final quality method execution time deadlines missed termination time table performance comparison simple gpgp coordination vs balanced gpgp coordination termination time units considered balanced algorithm fixed unit startup cost 
average task duration time units 
advantage coordination relationship add new mechanism practical question ask simply addition particular mechanism benefit performance system agents 
give example respect soft coordination mechanism mechanism commitments facilitation relationships 
ran randomly generated episodes generated environmental parameters shown table agents soft coordination mechanism 
variance randomly generated episodes great took advantage paired response nature data run non parametric wilcoxon matched pairs signed ranks test 
test easy compute assumptions primarily variables interval valued comparable block paired responses 
blocks calculated difference total final quality achieved group agents excluded blocks difference leaving blocks 
replace differences ranks absolute values replace signs ranks 
sum positive negative ranks separately 
standardized score calculated 
small value means consistent variation large value occur treatment consistently outperformed 
experiment null hypothesis system soft coordination mechanism alternative system soft coordination mechanism better terms total final quality 
result gamma highly significant allows reject null hypothesis mechanism effect 
different family members different environments section show particular example different family members better worse different environments 
concentrate distinct family members modular agent archetype cr modules non local views communicate commitments completed task groups simple agent cr modules non local views broadcast completed methods 
environmental parameter vary derived screening data collected section min percentage tasks min quality accumulation function semantics 
hypothesis modular agents better simple agents min increased tasks needed done 
ran paired response experiments levels min enables probability varying levels time pressure overlaps task groups agents run 
performance terms total final quality coordination styles significantly different wilcoxon matched pairs signed ranks test different pairs gamma 
interestingly see difference performance widening value min 
shows probability coordination style doing better calculated simply frequencies plotted verses value min 
allows see graphically difference styles min changes 
modular agent simple agent min probability doing better plot probability modular simple coordination styles doing better total final quality verses probability task quality accumulation min semantics meta level communication return load balancing dynamic reorganization question examined effect task structure variance performance load balancing algorithms 
logical follow analysis static dynamic negotiated reorganization detailed 
static organization divides load priori case randomly assigning redundant tasks agents 
shot dynamic reorganization analyzed assigns redundant tasks basis expected load agents 
meta level communication mlc reorganization assigns redundant tasks basis actual information particular problem solving episode hand 
requires extra communication mlc reorganization expensive extra information pays variance static agent loads grows 
mlc coordination mechanism mechanism implemented gpgp 
implementations possible chose works altering way redundant commitments handled 
commitment sent agent modified include current load agent making commitment precise amount agent current schedule 
decision redundant commitments need agent mechanisms simple redundancy hard soft successor relationship handling load agents redundant commitments taken account point ties broken randomly 
agent lowest load keeps commitment 
loads equal tie broken randomly 
effect mechanism general gpgp environments agents default design time scheduler minimal 
heuristics dtt scheduler focused providing highest possible total final quality agent violating deadlines terminating quickly scheduler heuristics prefer earlier termination times 
randomly generated task environment methods assigned agents randomly somewhat evenly rarely significant change termination time 
recall results remember mlc coordination useful environments high variance task structures agents 
look experiments light calculating endogenous input variable run represents amount variance redundant tasks ones potentially eligible load balancing mechanism decision 
shows probability terminating quickly mlc load balancing algorithm grows standard deviation total durations redundant tasks agent grows 
probability termination better load balancing initial std expected pr actual probability probability mlc load balancing terminate quickly static load balancing fitted loglinear model actual tms simulation data 
exploring family performance space looked multidimensional performance space family coordination algorithms different performance measures 
level mechanisms parameterized independently possible settings total possible coordination algorithms 
applied standard statistical clustering techniques develop smaller set significantly different algorithms 
resulting prototypical combined behaviors useful starting point searching appropriate algorithm family member new environment 
analysis proceeded follows generated random episode randomly chosen environments ran agent types episode cases 
collected performance measures total quality number methods executed number communication actions termination time 
took data standardized performance measure environment 
measure represented number standard deviations mean value environment 
took summary statistics measure grouped agent types boils cases standardized environment summary cases summarized environments 
summaries correspond average standardized performance agent type performance measures 
hierarchical clustering balanced mute myopic simple tough balanced mute myopic simple tough communication actions method execution actions balanced mute myopic simple tough balanced mute myopic simple tough total final quality deadlines standardized performance named coordination styles 
algorithm join complete linkage produce general prototypical agent classes chose representative algorithm class simple commitments non local view just broadcasts results 
myopic commitment mechanisms non local view 
balanced mechanisms 
tough guy agent soft commitments 
mute communication whatsoever shows values typical performance measures named types 
performance measures standardized episode types 
shown means percent quantiles 
algorithms performances distances calculated farthest points cluster 
distance measures euclidean centroid pearson correlation gave similar results 
algorithm commitments mechanisms communicates mechanism satisfied commitments sends communications 
significantly different tukey kramer hsd method execution simple vs mute total final quality balanced vs tough deadlines missed simple vs mute balanced vs tough 
analyzing effect environmental characteristics agent performance 
shows example effect amount overlap method redundancy number method execution actions named agent types 
note balanced tough agents significantly lot overlap expected 
performance tough balanced agents similar table algorithms differ way handle facilitation half experiments facilitation power 
method execution actions overlap balanced tough myopic mute simple effect overlaps task environment standardized method execution performance named coordination styles smoothed splines fit means 
linear clustering algorithm kmeans produces similar result hierarchical clustering produces mean value performance measure group 
example non communicating agents high negative mean number communications remember averaged standardized scores execute methods average produce final quality 
terminate slightly quicker average 
balanced group comparison communicates little average executes fewer methods way edge statistic returns better average quality average termination time 
reasonable avoiding redundant reducing ideas key feature original pgp algorithm replicated set mechanisms 
discusses design extendable family coordination mechanisms called generalized partial global planning gpgp form basic set coordination mechanisms teams cooperative computational agents 
important feature approach includes extendable set modular coordination mechanisms subset response particular task environment 
subset may parameterized parameterization chosen statically chosen task group task group basis response particular problem solving situation 
example mechanism handle soft predecessor crs certain classes tasks classes usually weak soft crs 
general specification gpgp mechanisms involves detection response certain coordination relationships incoming task structure tied particular domain 
tms model simple distributed sensor network problem original domain hospital scheduling environment 
careful separation coordination mechanisms agent local scheduler allows better job designed 
believe separation useful applying coordination mechanisms problems existing customized local schedulers problems involving humans coordination mechanism act interface person suggesting possible commitments person consideration reporting non local commitments 
gpgp coordination approach described fully implemented tms simulation testbed 
significant experimental validation gpgp approach documented 
showed decide addition new gpgp mechanism useful 
showed general performance gpgp family algorithms compared centralized parallel algorithm gpgp mechanisms produces quality centralized scheduler random environment 
performance reasonable feel better developing better local scheduling algorithms new coordination mechanisms 
demonstrated feature task environment probability task quality accumulation max cause different gpgp family members preferred 
discussed sixth mechanism load balancing mechanism communicates meta level information showed somewhat useful variance duration agents overlapping tasks high 
section ties back discussion usefulness metalevel communication case transmission local load information inter episode variance case initial agent loads high 
gave sense performance space broadly parameterized mechanisms clustering technique 
clustering useful method dealing large algorithm spaces prune search appropriate combination mechanisms 
methods may lead ways learn situation specific knowledge application certain mechanisms certain situations case reasoning techniques 
believe gpgp reusable domain independent basis multi agent coordination conjunction library coordination mechanisms learning mechanism 
intend develop library reusable coordination mechanisms 
example mechanisms successors hard soft relationships predecessors negotiation mechanisms mechanisms behavior contracting mechanisms agents non cooperative environments 
mechanisms built existing dai researchers 
examine expanding parameterization mechanisms machine learning techniques choose appropriate parameter values learning best mechanism set environment 
gpgp approach applications ranging providing human coordination assistance distributed information gathering 
castelfranchi 
commitments individual intentions groups organizations 
michael editor ai theories groups organizations conceptual empirical research 
aaai workshop 
working notes 
philip cohen hector levesque 
intention choice commitment 
artificial intelligence 
daniel 
applied nonparametric statistics 
houghton mifflin boston 
keith decker 
environment centered analysis design coordination mechanisms 
phd thesis university massachusetts 
keith decker victor lesser 
generalizing partial global planning algorithm 
international journal intelligent cooperative information systems june 
keith decker victor lesser 
approach analyzing need meta level communication 
proceedings thirteenth international joint conference artificial intelligence pages chamb ery france august 
keith decker victor lesser 
shot dynamic coordination algorithm distributed sensor networks 
proceedings eleventh national conference artificial intelligence pages washington july 
keith decker victor lesser 
quantitative modeling complex computational task environments 
proceedings eleventh national conference artificial intelligence pages washington july 
durfee montgomery 
coordination distributed search hierarchical behavior space 
ieee transactions systems man cybernetics november 
durfee lesser :10.1.1.48.8362
partial global planning coordination framework distributed hypothesis formation 
ieee transactions systems man cybernetics september 
ephrati rosenschein 
divide conquer multi agent planning 
proceedings twelfth national conference artificial intelligence pages seattle 
aaai press mit press 
alan garvey keith decker victor lesser 
negotiation interface real time scheduler decision maker 
cs technical report university massachusetts 
alan garvey victor lesser 
design time real time scheduling 
ieee transactions systems man cybernetics 
special issue scheduling planning control 
jennings 
commitments conventions foundation coordination multi agent systems 
knowledge engineering review 
lesser 
retrospective view fa distributed problem solving 
ieee transactions systems man cybernetics november 
shoham tennenholtz 
synthesis useful social laws artificial societies preliminary report 
proceedings tenth national conference artificial intelligence pages san jose july 
yoav shoham 
agent simple agent language interpreter 
proceedings ninth national conference artificial intelligence pages anaheim july 
frank martial 
coordinating plans autonomous agents 
springer verlag berlin 
lecture notes artificial intelligence 

