exploiting keynote webcom architecture neutral glue trust management simon foley thomas john morrison david power james kennedy 
department computer science university college cork ireland 
practical trust management system webcom distributed computing architecture described 
keynote credentials determine authorisation authenticated ssl connections peers 
webcom provides meta language glue bringing components distributed application way components need concern synchronisation concurrency issues 
integration keynote webcom enhances trust management framework providing complete separation security components distributed application single security critical component 
encourages loose coupling application components trust management addition supporting shelf application components results applications easier develop understand maintain secure 
keywords trust management authorisation mobile computation meta computing distributed system security software engineering condensed graphs 
trust management tm approach constructing interpreting trust relationships public keys mediate security critical actions 
credentials specify delegation authority public keys determine signed request complies local authorisation policy 
keynote expressive flexible trust management scheme provides simple credential notation expressing security policies delegation 
keynote provide trust management number applications including active networks control access web pages 
standard api keynote application queries requests application authorisation 
formulation management security policies credentials separate application making straight forward support trust management policies different applications 
coupling remains trust management system application keynote api calls embedded application code 
addresses concern proposing framework avoids intertwining functionality security critical code 
describe development keynote trust management system webcom distributed computing architecture 
applications webcom programmed hierarchical condensed graphs mobile components 
components represent tasks graphs sub components available execution network 
condensed graphs provide complete separation implementation components synchronisation communication 
meta language glueing new existing shelf components 
flexibility extends trust management integration keynote webcom 
advantage webcom webcom application components need keynote api need aware sense trust management system 
webcom acts form monitor contextual information condensed graph application construct keynote queries determine authorisation application components 
loose coupling functionality trust management leads applications easier develop understand maintain secure 
organised follows 
sections outline keynote webcom architectures respectively 
sections describe keynote integrated webcom keynote credentials determine authorisation authenticated ssl connections 
section sketches implementation issues 
section provides general observations discussion 
trust management request untrusted principle key networked application execute particular action authentication notwithstanding application determine key request authorised 
authorisation comes form digitally signed public key credentials bind public keys authorisation perform various actions 
example alice may hold credential signed manager private key binding public key authorisation place orders value 
alice public key signs order request purchasing application credential provides proof authorisation 
practice authorisation achieved collection credentials exhibit necessary trust relationships keys 
example may trust alice public key orders manager public key trusted delegate orders forth delegation chain ends key known appropriately trusted 
policy public keys trusted known ways collection credentials network application determine particular public key authorised request particular operation 
example simple purchase order processing application runs server accepts requests clients 
request operation prop propose new order request ok inspect validate order 
expect practice clerk authority propose orders supervisor authority validate orders authority delegated manager 
assume owner public key trusted requests order processing application 
specified keynote credential 
keynote version comment unconditionally delegate trust ordering application key authorizer policy licensees conditions operation prop operation ok special policy credential defines conditions requests key may trusted application 
conditions defined expression syntax terms action attributes example operation characterise circumstances request 
note purposes illustration short simple names represent public keys encoding proper cryptographic keys 
owner public key authority delegate trust keys signing credential clerk owns public key 
comment trusted propose purchase orders authorizer licensees conditions operation prop signature signed 
signing credential delegates authority proposing orders key 
alice proposes order signed presents credential proof authorisation 
confirm key authorised default policy trust propose ok orders delegated trust virtue signing credential 
similar credential may issued supervisor bob comment trusted validate purchase orders authorizer licensees conditions operation ok signature signed 
application may trust management tm scheme keynote determine requests authorised application having know determination 
keynote trust management architecture depicted 
public key infrastructure pki manage credentials 
example continuing example application queries keynote tm system determine safe execute particular request specify circumstances query 
circumstances include action corresponding key request action attribute set set action attribute name value pairs characterise request policy credentials representing keys trusted credentials provided requester pki 
requests policy application tm api policy application tm api system tm pki untrusted principles tm queries trusted environment untrusted keynote trust management architecture 
example requests order proposal order application queries keynote action action attribute set operator prop policy credential set signed credentials provided alice 
keynote determine request authorised circumstances provided 
application interacts keynote calls keynote api 
example include code authenticated request carry operation op authorizer key making request operation op policy policy credential credentials provided requester authorizer policy credentials true op prop process order proposal true op prop allow validation order reject request keynote architecture provides level separation provision security policy authorisation application functionality 
software engineering paradigm techniques support separation concerns security synchronisation real time constraints forth desirable lead applications easier develop understand maintain 
keynote provides separation concerns conceptual level 
illustrated example calls keynote api coded part application system 
ensuring cohesive applications remains coupling application functional security concerns complete separation concerns code level security critical calls trust management api intertwined functionality 
coupling means applications regarded part trusted environment illustrated 
webcom distributed system webcom system uses variant client server paradigm distribute operations execution network 
system uses implicit program parallelism separates application program underlying computation engine efficient compact 
heart webcom system condensed graphs computational model employs 
applications coded hierarchical graphs provide simple notation lazy eager imperative computation naturally expressed 
types distributable operation nodes represent atomic tasks condensed nodes represent subtasks encapsulated subgraphs 
client master phi phi phi phi phi scheduler connect op connect op webcom master webcom application client master webcom webcom webcom architecture top level architecture webcom illustrated consists master arbitrary number clients 
clients connect master turn assigns operations execution 
atomic operations may scheduled execute client 
condensed nodes defining graphs may scheduled run designated client masters ability schedule component operations clients 
advantage developing distributed applications condensed graphs implementation graph coded independently underlying system network architecture 
atomic operations actions defined level granularity ranging low level machine instructions mobile code programs applets com objects cots components 
atomic operations need address synchronisation concurrency concerns details implicitly specified condensed graph managed webcom 
webcom provides separation concerns code level allowing loose coupling functionality control 
example condensed graphs exploit parallelism computation webcom schedule computation networks workstations 
gives example graph schedules distributed brute force key search known plain cipher text 
key space split series intervals indexed 
atomic operation int cr int interval searches specified interval key 
key returned returned 
condensed node search defined recursively high degree parallelism exploited webcom schedules component cr operation executed clients schedule graph operation search client masters 
operation search passed initial value 
definition behaviour condensed node search constructed condensed graph single entry node single exit node 
node operation boolean condition clauses respectively 
example condensed graphs may distributed job control language describe application system scheduling requirements flow 
clerk performs prop operation complete purchase order manager executes ok operation inspect order 
scheduling system described condensed node order defined 
webcom master schedules atomic actions prop ok appropriate connected clients 
example shows cr search recursive definition condensed node ff omega phi psi search prop ok definition condensed node ffl ffi fi fl order operations implemented microsoft com objects scheduled webcom graph order 
system connecting clients specify operations wish willing scheduled 
section describe clients may authenticated authorisation determined 
integrating keynote webcom illustrates keynote trust management scheme integrated webcom regarding webcom application 
webcom master authenticates clients uses credentials determine operations may schedule 
webcom client trust management architecture similar keynote architecture authenticating master master credentials determine authorised schedule operation 
selected keynote simplicity expressiveness 
keynote provides simple notation specifying local security policies credentials sent untrusted networks 
example presentation assume just root public key specified keynote trusted policy credential 
client master system tm connect op connect op xxx policy tm api pki scheduler webcom application tm queries untrusted environment trusted environment webcom master untrusted principles webcom client master webcom webcom keynote architecture keynote version comment unconditionally delegate trust webcom application key authorizer policy licensees conditions webcom credential uses just action attribute specify unconditionally trusted delegate authority related webcom application 
proposed internet assigned numbers authority suitable authority provide registry reserved names provide name application domain credential defined 
key difference webcom keynote architecture original keynote architecture applications may desired regarded untrusted contain security critical code 
webcom scheduler component acts form monitor interfacing keynote system decide distribute control synchronise applications 
webcom master authorisation webcom masters schedule operations executed webcom clients 
operations may access local resources client webcom master prove authority furnishing appropriate credentials client 
illustrates connect op ssl server op client master connection authenticated master authentication message sequence current prototype certificates authentication keynote credentials authorisation 
connecting webcom client establishes ssl connection master process master presents appropriate certificate chain public key master protocol run successful client knows communicating master 
master schedules operation op client ssl connection sends necessary credentials prove master authorised schedule op 
webcom client uses keynote determine schedule authorised credentials master 
webcom client uses keynote determine safe execute scheduled operation action specify circumstances query action attribute set 
list attribute names value pairs agreed application writers writers related credentials 
addition existing attribute app domain action attributes proposed identify circumstances webcom keynote query ffl attribute name role example values schedule execute indicating principle authorised schedule execute 
ffl attribute name node values identified operations scheduled executed 
example consider example 
assume webcom master owns public key keynote credential signed private key keynote version comment delegates scheduling authority authorizer licensees conditions webcom role schedule node cr node search signature signed private key 
credential carry operation expression condition evaluates true attribute values defined action attribute set operation requested 
assume suitable certificate available 
operation cr scheduled client authenticated client queries keynote action attribute set app domain webcom role schedule node cr action 
credential policy credential example keynote returns true indicating safe webcom client execute operation 
keynote support delegation chains sophisticated trust relationships 
example delegate authority schedule cr operations delegate authority 
authorizer licensees conditions node cr 
keynote reserved attribute action pre defined attribute action attribute set defining names principles directly operation 
credential uses attribute prevent delegation 
client execute cr operations scheduled accept search operations 
collection credentials keynote query searches credential delegation graph appropriate paths connect trusted keys policy action requesting key conditions satisfied action attribute set 
reader referred details specify keynote credentials 
note standard code signing approach java provide sufficient security infrastructure support webcom 
webcom master schedules just code schedules mobile computations comprised tasks inputs 
client determine trust master task schedules inputs task master provides subsequent output returned master 
webcom client authorisation webcom client authorisation done master determine client necessary authorisation execute certain operations inputs outputs may security critical 
trust architecture webcom master 
illustrates current prototype certificates client authentication keynote credentials authorisation 
master certificates credentials connection op op connect client master ssl server client master client authentication message sequence previous section 
clients credentials secure connection established wish operations scheduled 
webcom master maintains list clients currently connected available scheduled operations 
scheduling operation client master determine client authorised execute operation 
done master making query keynote action attribute set attributes role node action client key 
client authorised execute operations scheduled master ssl connection terminated 
connecting webcom clients declare available execute range possible scheduled operations 
webcom master uses keynote search database credentials connected available clients action client key authorisation execute particular operation specified action attribute set 
search operation extension standard keynote api 
example continuing example suppose webcom clients identified public keys 
authorised execute cr operations 
authorizer licensees conditions webcom role execute node cr 
authorised execute schedule cr search operations authority operate client master 
authorizer licensees conditions webcom role schedule role execute node cr node search 
assume appropriate certificates keys available authentication purposes 
clients connect authenticated webcom master adds credentials client credential database 
master ready schedule operation cr sends search query keynote action attribute set role execute node op 
new keynote search function searches client credential database action keys authorised case return 
operation search scheduled returned keynote search 
example webcom master running trusted server authorised execute order operation schedule components example 
assume order operation may scheduled webcom master 
authorizer licensees conditions webcom role execute node order role schedule node prop node ok 
webcom clients alice authorised execute prop ok operations respectively 
authorizer licensees conditions webcom role execute node prop 
authorizer licensees conditions webcom role execute node ok 
connects requesting prop operations presents credential 
authorisation validated master schedules execution prop client system 
note example offers authority execute ok similarly bob connects offering execute ok scheduled 
webcom master uses ssl secured connection send operations execute receive results webcom clients 
example simple static separation duty policy provided combination credentials condensed graphs 
currently exploring dynamic separation duty keynote support credentials specifying threshold signatures transparently supported framework 
implementation number working prototypes condensed graphs developed demonstrating usefulness general model computation 
prototypes include sequential condensed graph interpreter pvm application programming interface cluster webcom referred specialisation webcom supports microsoft com objects 
date integrated trust management support scheme described existing java webcom system described 
integration straightforward current prototype uses existing packages possible ffl package provides cryptographic certificate ssl support 
keynote credentials constructed keys extracted corresponding certificates 
ffl existing keynote api extended addition search query function outlined section 
ffl current implementation keynote implemented java native interface currently provide java api keynote 
planned eventually replace java implementation keynote interpreter 
discussion keynote credentials determine authorisation authenticated ssl connections webcom masters clients 
client credentials webcom masters determine operations client authorised execute webcom master credentials clients determine master authorisation schedule trusted mobile computation client execute authorisation covers just scheduled code input data output 
relationship webcom trust management system local operation system protection mechanisms addressed 
example protection domain client execute operation scheduled authorised master 
propose protection model condensed graphs integration keynote webcom regarded step implementing protection model 
keynote provide trust management webcom ability support expressive fine grained authorisation delegation policies 
keynote credentials typically short expressive expected contribute significantly communication overhead clients masters 
purposes illustration simple examples 
reader referred discussion expressiveness keynote 
emphasis webcom provide complete separation distributed application trust management 
considered pki issues best control dissemination keynote credentials revocation forth 
architecture uses certificates authentication expect associated pki degree support issues key revocation 
topics research implementation described expresses security granularity operation identifiers prop order forth 
expect straight forward generalise include attributes pass input output operations 
execution nodes condensed graph represented triple input parameter bindings output binding operation applied 
attributes referred credentials form part action attribute set keynote query search 
extension example generalised support credentials bob validate orders limit 
webcom masters may promote clients client masters passing condensed nodes example search example components subsequently scheduled clients promoted client 
currently extending webcom trust management architecture exploit promotion 
uses credentials control masters authority promote clients clients turn authority promoted 
writing credentials specify straightforward done enlarging domain attribute role include values promoter 
addition promoting client master write necessary credentials delegate promoted client authority schedule operations managing 
currently porting implementation existing webcom application supports microsoft com objects 
particularly useful provide basis trust management glue existing cots components spreadsheets databases forth 
integration keynote webcom enhances trust management framework providing complete separation security components distributed application single security critical component 
keynote provides loose coupling trust management application conceptual level webcom keynote architecture takes providing complete separation code level 
application developers need application code security critical calls trust management system 
functional components prop ok example coded independently security concerns security concerns expressed independently terms credential policy condensed graph specifies synchronisation control concerns components 
operation identifiers couple concerns 
means applications may regarded untrusted security critical webcom scheduler acting security wrapper operations trust management system help decide distribute control synchronise applications 
think architecture neutral glue trust management 
acknowledgments research supported enterprise ireland national software directorate 
authors anonymous reviewers helpful suggestions 
apache ssl release version 
open source software distribution 
www apache org 
aksit real time specification inheritance anomalies real time filters 
european conference object oriented programming ecoop pages 
springer verlag lncs 
blaze 
keynote trust management system 
www crypto com december 
blaze keynote trust management system version 
september 
internet request comments 
blaze role trust management distributed systems security 
secure internet programming issues distributed mobile object systems 
springer verlag lecture notes computer science 
blaze feigenbaum lacy 
decentralized trust management 
proceedings symposium security privacy 
ieee computer society press 
blaze ioannidis keromytis 
trust management network layer security protocols 
security protocols international workshop 
springer verlag lncs 
foley 
kernelized architecture multilevel secure application policies 
european symposium research security privacy 
springer verlag lncs 
foley morrison 
scheduling protection condensed graphs 
technical report tr department computer science university college cork june 
gong going sandbox overview new security architecture java development kit 
usenix symposium internet systems pages 
dstc security group 
java crypto security implementation 
see security dstc edu au 
lopes lieberherr 
abstracting process process relations concurrent object oriented applications 
european conference object oriented programming ecoop 
springer verlag lncs 
john morrison architectural neutral glue com objects 
preparation 
john morrison david power 
master promotion client redirection webcom system 
pdpta las vegas usa 
morrison 
condensed graphs unifying availability driven coercion driven control driven computing 
phd thesis eindhoven 
morrison connolly 
facilitating parallel programming pvm condensed graphs 
proceedings universitat de barcelona spain 
sept 
morrison power kennedy 
condensed graphs engine drive metacomputing 
proceedings international conference parallel distributed processing techniques applications pdpta las nevada june july 
morrison rem 
speculative computing condensed graphs machine 
proceedings iwpc university aizu japan sept 
rivest lampson 
sdsi simple distributed security infrastructure 
dimacs workshop trust management networks 

