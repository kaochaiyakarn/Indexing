relational properties domains andrew pitts cambridge university computer laboratory pembroke street cambridge cb qg england january new tools reasoning properties recursively defined domains 
general category theoretic framework various notions relation domains actions domain constructors relations 
freyd analysis recursive types terms property mixed initiality finality transferred corresponding property invariant relations 
existence invariant relations proved completeness assumptions notion relation 
show leads simpler proofs computational adequacy denotational semantics functional programming languages user declared datatypes 
show initiality finality property invariant relations specialized yield induction principle admissible subsets recursively defined domains generalizing principle structural induction inductively defined sets 
show initiality finality property gives rise induction principle studied author theoretical computer science equalities elements recursively defined domains may proved appropriate notion bisimulation 
appear information computation 
revised version cambridge univ computer laboratory tech 
report 
research supported uk serc gr ec esprit basic research project ii 
characteristic feature higher order functional languages standard ml milner tofte harper haskell hudak peyton jones wadler facilities provide user declared recursive datatypes 
powerful feature comes price syntactic restrictions placed form datatype declaration general hard understand values datatype denote correspondingly hard reason observable behaviour evaluation expressions involving datatypes 
way round problem consider restricted forms datatype declaration example just giving rise inductively defined sets finitely constructible data values lists trees understood reasoning techniques principle structural induction 
restrictive cuts lazy datatypes containing partial potentially infinite data values important functional programming tool unavoidable design non strict languages haskell 
whilst properties lazy datatypes considered case case basis see thompson example remarkably reasoning principles literature apply uniformly recursive datatypes including ones definitions contain negative occurrences declared type 
attempts improve situation studying properties relations recursively defined domains arise denotational semantics datatypes 
key idea explored goes back milne plotkin reynolds take account fact various domain constructors extended corresponding constructors relations domains 
traditionally considers certain kinds relation domains ones sufficiently complete admissible 
appropriate various inductive properties domains pitts shows go arbitrary set theoretic relations order capture fully inductive properties recursively defined domains 
fact need remarkably properties general notion relation order establish main results 
properties conveniently axiomatized framework adapted hearn tennent applying reynolds notion relational parametricity semantics local variable declarations 
accordingly results relational properties recursively defined domains parameterized particular notion relation particular way domain constructors act relations 
preliminary version results appeared extended pitts 
referees comments helped improve exposition 
overview purpose section just provide busy reader understanding having read rest 
summarising main results applications attempts highlight key ideas techniques get obscured detailed development subsequent sections 
section ff phi ff fixed domain equation 
phi domain constructor involving standard constructions domains denotational semantics deterministic programming languages various kinds product sum function space lifting reviewed sect 

techniques minimal invariant property rec ff phi ff 
domain equation solution domain isomorphic phi scott remarkable discovery late initiated domain theory subject 
fact general may nonisomorphic solutions usually interested particular solution minimal suitable sense denote rec ff phi ff 
ways express minimality property shall see extremely simple convenient way terms called minimal invariant property rec ff phi ff 
states identity function def rec ff phi ff fixed point continuous operator domain strict continuous functions mapping ffi phi def phi phi gamma 
phi 
phi continuous action domain constructor strict continuous endofunctions defined structure phi 
course fixed point ffi phi calculated upper bound ffi phi ffi phi minimal invariant property amounts fact uniform expression elements upper bounds chains projected elements 
def def ffi phi see sect 
details 
course minimal invariant property proved examining detailed construction rec ff phi ff known scott solving domain equations see theorem 
established remarkable number properties recursively defined domains follow elementary fashion 
relational properties illustration derive directly minimal invariant property 
example give illustration simple proof due plotkin private communication curry fixed point combinator coincides fixed point operator canonical domain model lazy lambda calculus studied abramsky abramsky ong 
separation positive negative occurrences variables 
key aspect freyd recursive types notion algebraic compactness freyd 
phi ff gamma ff denote result replacing positive occurrences ff phi new variable ff replacing negative occurrences different variable ff gamma occurrence ff phi positive respectively negative hereditarily left respectively odd number function space constructors 
example phi ff ff ff phi ff gamma ff ff gamma ff 
original domain constructor recovered diagonalization phi ff phi ff ff 
phi ff gamma ff better functoriality properties phi ff 
example action phi strict continuous endofunctions definition minimal invariant property seen diagonalization continuous binary action mapping gamma gamma gamma theta phi gamma phi gamma phi gamma preserves identity functions composition contravariantly left hand argument covariantly right hand 
elaboration domain constructors functors mixed variance enables freyd establish powerful mixed initial algebra property rec ff phi ff theorem things shows minimal invariant phi ff unique isomorphism 
freyd initial algebra final coalgebra property rec ff phi ff apply separation variables trick level actions domain constructors relations 
action domain constructions relations 
mentioned key technique take account fact various notions relation various domain constructors extended act relations domains 
observation developed length sect 
applied sects 
wish emphasise general points 
fairly view constitutes relation deduce variety results theorems invariant relations general 
induction principle rec ff phi ff theorem need consider admissible chain complete bottom containing subsets domain relations induction principle theorem need consider arbitrary subsets theta relations computational adequacy result sect 
need consider notion relation mixes syntax semantics 
secondly fixed notion relation may domain constructor usefully considered kind action relations 
example consider continuous function space construction phi ff gamma ff ff gamma ff 
fixed relation domain mean subset fold product natural consider action phi relations defined gamma 
fn gamma dn gamma fn action characteristic uses logical relations case general induction principle 
induction principle consider case simpler action throws away gamma gamma 
fn gamma dn gamma fn results invariant relations 
main technical results concern existence theorem properties corollary certain recursively specified relations recursively defined domains 
purposes overview simplify matters slightly suppose rec ff phi ff minimal solution equality just isomorphism phi 
possible scott information systems see winskel larsen 
various notions relation construction 
phi domains extends corresponding action relations sending relation domain relation phi domain phi 
def rec ff phi ff phi rec ff phi ff sense ask invariant relation delta rec ff phi ff satisfying delta phi delta 
particular choices notion relation invariant relations lie heart proofs correspondence denotational operational semantics plotkin meyer appendix example denotational semantics reynolds example 
existence invariant relation delta straightforward case phi ff contains negative occurrences ff 

phi monotone operator relations collection relations rec ff phi ff may form complete lattice simply appeal tarski knaster fixed point theorem construct delta 
various constructions particular invariant relations occur literature rely quite heavy technical machinery establish existence solutions place 
contrast get quite elementary tools minimal invariant property rec ff phi ff mentioned tarski knaster fixed point theorem scott principle induction fixed points continuous endofunctions domain 
position apply scott induction develop suitable notion admissibility general framework relations generalising usual definition admissible subset domain chain closed subset containing element 
typically particular notion relation properties admissible relations domain form complete lattice suitable notion inclusion relations action 
phi phi preserves admissibility 
precisely phi gamma admissible phi ff gamma ff constructor obtained phi separating positive negative occurrences ff 

phi need monotone construction gamma 
phi gamma order reversing left hand argument order preserving left hand 
gamma 
phi gamma phi gamma monotone operator complete lattice op theta pre fixed point delta gamma delta say 
suffices prove delta gamma delta relation required invariant relation diagonalization phi phi 
delta contained delta gamma follows immediately symmetry properties operator 
reverse containment exploit minimal invariant property checks maps delta gamma delta ffi phi 
admissibility delta means collection maps chain closed subset containing bottom scott induction collection contains fixed point ffi phi id identity function maps delta gamma delta just say delta gamma contained delta required 
outline proof existence theorem invariant relations 
computational adequacy 
sect 
illustrates application invariant relations proofs correspondence operation denotational semantics programming language 
consider simple non trivial fragment standard ml milner tofte harper containing datatype declaration datatype ty oe delta delta delta inn oe types oe oe built basic types booleans integers characters type variable ty combination product function space 
constructors 
standard techniques denotational semantics type oe modelled domain oe ty rec ff phi ff suitable choice phi closed expression language assigned denotation element domain oe oe type denotational semantics induces notion equivalence expression equal type equality denotations 
example language equivalent fragment standard ml comes equipped operational semantics definition milner tofte harper 
determines notion contextual equivalence language expressions equal type expressions contextually equivalent occurrences interchanged occurrences expression affecting observable results expression evaluation 
denotational semantics language computationally adequate equality denotations expressions implies contextual equivalence 
computationally adequate denotational semantics provides sound method establishing instances contextual equivalence 
notoriously difficult devise denotational semantics equality denotations coincides contextual equivalence called full abstraction problem language 
known standard domain theoretic semantics language computationally adequate 
proof reduces showing closed expression type oe say evaluates value diverging denotation equal element domain oe 
plotkin property deduced existence certain logical relation language expressions domain elements 
presence language recursive types ty imposes requirements logical relation proving existence non trivial task 
show sect 
suitable choice notion relation action domain constructors relations requirements just invariant relation computational adequacy denotational semantics language derived general existence theorem invariant relations 
induction induction 
invariant relation delta phi defined simply fixed point certain operator induced phi fact unique fixed point 
follows fact freyd mixed initial algebra final coalgebra property rec ff phi ff theorem induces corresponding universal property delta proposition 
notions relation possess distinguished identity relations domain admissible preserved action domain constructors 
definition gives requirements identity relations 
cases identity relation necessarily fixed point operator defining delta uniqueness property invariant relation recursively defined domain just identity relation 
situation universal property delta gives rise rule inference mixed inductive inductive character 
sect 
demonstrates varying notion relation choice action domain constructors relations rule gives rise induction induction principles wide class recursively defined domains 
induction principle theorem coincides structural induction recursively defined domain lift inductively defined set 
generally recursively defined domain type constructor defined type occurs positively induction property coincides initial algebra induction principle sense lehmann smyth 
particular includes induction principle fixed point object lifting monad studied crole pitts 
scott principle induction admissible properties fixed points continuous functions consequence case 
show induction property yield non trivial proof principle problematic recursively defined domains model untyped lambda calculus see example 
induction principle theorem author established pitts 
takes form extensionality property elements recursively defined domain satisfy respectively simulation respectively bisimulation relating 
contrast induction principle induction principle deals arbitrary binary relations just admissible ones 
proof give corollary general theory developed sect 
simpler pitts 
method loc 
cit 
deal recursively defined domains involving powerdomain constructors difficulties defining action relations constructors needed theory developed see 
parameterized domain equations 
simplicity exposition theory developed applies domains recursively defined single equation 
extension theory simultaneous domain equations straightforward 
important case domain equations free parameters needed treat domain constructors recursively defined introduces extra complications connection technique separating positive negative occurrences 
extension considered briefly final section 
minimal solutions domain equations section reviews theory recursively defined domains need 
draw category theoretic approach smyth plotkin revised light freyd algebraically compact categories freyd 
term cpo mean partially ordered set possessing upper bounds countable chains necessarily possessing element 
pointed cpo cppo short cpo possess element denoted just 
cpo denote category objects cppos morphisms monotone functions continuous preserve upper bounds countable chains strict preserve element 
notation ffi gamma 
indicate function cppos 
domain theoretic terminology generally follows survey article gunter scott 
fix notation recall standard constructions cpos cppos 
definition lifting 
recall cpo gives rise cppo 
def called lift adjoining element extending partial order making 
cppo denote cpo obtained removing element def fx ii discrete cpos flat cppos 
set gives rise discrete cpo partial order vx flat cppos lifts discrete cpos 
iii cartesian smash products 
cartesian product cpos cpo underlying set theta def partially ordered componentwise vx thetay vx clearly theta pointed element 
smash product cppos cppo omega def theta iv disjoint union coalesced sum 
disjoint union finitely cpos xn cpo underlying set delta delta delta xn def fin 
injective functions disjoint images 
partial order delta delta delta xn vx delta delta delta vx coalesced sum cppos dn cppo phi delta delta delta phi dn def delta delta delta dn insertion functions gamma 
delta delta delta dn extend injective strict continuous functions ffi gamma 
phi delta delta delta phi dn denote 
function spaces 
cpos continuous function space cpo underlying set continuous functions partially ordered pointwise vx 
clearly pointed element constant function 
strict continuous function space cppos cppo underlying set def ff partial order element inherited known constructions cppos functorial strict continuous functions 
lifting determines functor cpo gamma 
cpo cartesian smash products binary coalesced sum determine functors cpo theta cpo gamma 
cpo strict non strict continuous function spaces determine functors cpo op theta cpo gamma 
cpo 
functors locally continuous sense action morphisms preserves upper bounds countable chains 
consider domain equation form ff phi ff phi formal expression built variable ff constants ranging cppos constructors gamma theta omega phi 
solution specified cppo isomorphism phi 
phi denotes cppo results interpreting variable ff cppo phi 
seminal scott plotkin shows solutions exist category theoretic construction terms colimit chain embedding projection pairs scott original method full ramifications smyth plotkin set theoretic construction terms scott notion information system scott winskel larsen advantage yielding solutions equality just isomorphism related approach fixed points continuous operators universal domains described gunter scott 
various constructions serve prove existence solution domain equation fact produce solution minimal sense review section 
minimality property important reasons 
minimal solutions domain equations turn unique isomorphism 
methods mentioned construct essentially cppo write rec ff phi ff refer cppo recursively defined 
secondly minimal solutions needed ensure denotational semantics programming language expressions computationally adequate technical sense described survey meyer operational behaviour 
give concrete example sect 

order express minimality condition solutions needs notion comparison cppos preserved action constructor phi 
liberal notion comparison stronger minimality property 
view functoriality relevant constructors noted hope compare cppos morphisms category cpo 
problem function space constructors phi ff may contain positive negative occurrences variable ff 
recall occurrence ff phi negative passes odd number left hand branches strict non strict function space constructors occurrence root parse tree occurrence positive 
phi contains positive occurrences ff determines covariant locally continuous functor phi gamma cpo gamma 
cpo 
contains negative occurrences determines contravariant locally continuous functor phi gamma cpo op gamma 
cpo 
general case assignment 
phi may object part contra variant functor cpo 
traditional way round problem restrict class morphism act valid comparisons cppos 
example embeddings come associated projections reverse direction achieves functoriality embedding part positive occurrences ff projection part negative ones 
complicating notion comparison elaborate constructor phi ff separating types occurrence ff 
phi ff gamma ff denote result replacing positive occurrences ff phi new variable ff replacing negative occurrences different variable ff gamma occurrences ff respectively ff gamma phi positive respectively negative possible build induction structure phi locally continuous functor phi gamma cpo op theta cpo gamma 
cpo example phi phi phi action phi objects sends pair cppos cppo phi phi sends pair strict continuous functions ffi gamma 
ffi gamma 
strict continuous function phi phi phi ffi gamma 
phi phi phi ffi ffi phi note original construction cppos 
phi diagonalizing phi clearly phi phi 
study solutions domain equations subsumed study invariant objects locally continuous functors cpo op theta cpo gamma 
cpo invariant object mean cppo equipped isomorphism definition cpo op theta cpo gamma 
cpo locally continuous functor 
invariant minimal fixed point fix ffi continuous function ffi gamma 
ffi gamma identity function id ffi gamma 
theorem existence minimal invariants locally continuous functor cpo op theta cpo gamma 
cpo possesses minimal invariant 
proof existence minimal invariant locally continuous functor follows scott original construction recursively defined domains colimits chains embedding projection pairs combined characterization colimits smyth plotkin theorem 
completeness review details 
recall embedding cppos continuous function gamma 
exists continuous function ffi gamma 
satisfying id ffi ff ffi id note ffi uniquely determined conditions called projection corresponding embedding note embeddings projections necessarily strict functions apply 
locally continuous particular locally monotone ffi gamma 
embedding corresponding projection ffi 
element cppo 
initial embeddings cppo unique embedding 
element 
constant function value 
starting 
iterating gamma build chain embeddings delta delta delta 
dn dn dn 
ffi cppo underlying set def 
dn xn ffi 
partially ordered componentwise 
limit cpo op chain ffi 
projection functions 
xn dn projection parts embeddings dn gamma 
dn 
def ffi embedding dm gamma 
dn composition gamma delta delta delta morphisms 
form colimit chain category cppos embeddings 
form colimit category cpos continuous functions 
limit property ffi 
colimit property 
fact follow simple properties id dn ffi id 
ffi properties preserved application gamma embeddings ffi dn dn gamma 
form colimit chain ffi ffi ffi delta delta delta just chain dn colimit isomorphism ffi 
isomorphism ffi gamma recall embedding ffi ffi ffi 
combining facts ffi ffi ffi ffi ffi ffi gamma ffi ffi gamma ffi follows induction ffi ffi ffi function defined definition 
id 
ffi 
ffi fix ffi 
minimal invariant concept minimal invariant freyd apparently stronger definition requires id unique fixed point ffi 
locally continuous functors strengthening corollary result provides useful universal property recursively defined domains 
theorem freyd definition 
pair cppos pair strict continuous functions ffi gamma 
ffi gamma 
unique strict continuous functions ffi gamma 
ffi gamma 
making squares strict continuous functions commute gamma mapping 
determines continuous function theta gamma 
theta proof considering locally continuous functors arbitrary ones freyd give elementary proof loc 
cit simply relying uniformity property enjoyed fixed points continuous functions 
property called plotkin axiom fixed points states ffi gamma 
strict continuous function cppos gamma 
gamma 
continuous functions satisfying ffi ffi fix ffi fix 
property established simple fixed point induction see gunter scott theorem 
turning proof theorem consider function oe theta gamma 
theta oe gf gamma 
continuous function locally continuous fixed point yields pair strict continuous functions required property 
see pair suppose consider function gamma 
theta defined eh 
clearly continuous strict strict assumption satisfy functoriality imply diagram commutes ffi defined definition theta ffi theta oe square commutes strict apply uniformity property fixed points conclude fix oe ffi fix ffi 
minimality fix ffi id def fix oe ffi id required 
sentence theorem follows continuity fixed point operator function referred fix gf gamma paraphrase theorem categorical terms minimal invariant object cpo op theta cpo simultaneously initial algebra final coalgebra endofunctor gamma gamma cpo op theta cpo gamma 
cpo op theta cpo 
structure isomorphism initial algebra gamma final coalgebra inverse 
coincidence initial algebra final coalgebra concept free algebra endofunctor lies heart freyd categorical analysis recursive types 
whilst true ingredients proofs theorems time certainly smyth plotkin freyd abstracted appears powerful property 
note initial algebras final coalgebras unique isomorphism virtue universal property enjoy particular minimal invariants isomorphic 
locally continuous functor phi gamma cpo op theta cpo gamma 
cpo obtained separating positive negative occurrences ff domain constructor phi ff minimal invariant constructed proof theorem precisely recursively defined cppo rec ff phi ff constructed scott method colimit embeddings 
minimal invariant property definition provides powerful tool reasoning rec ff phi ff having delve details construction 
relational properties illustration derive directly minimal invariant property 
illustration simple proof curry fixed point combinator coincides fixed point operator certain domain model untyped lambda calculus 
argument due plotkin private communication compared proofs similar results barendregt exercise winskel sect 

example rec ff ff ff canonical domain model lazy lambda calculus studied abramsky abramsky ong 
minimal invariant locally continuous functor gamma 
cpo op theta cpo gamma 
cpo comes equipped isomorphism 
case minimal invariant property says id fixed point function mapping ffi ffi def ffi ffi gamma gamma 

delta denote application function delta delta unique element 
curry fixed point delta delta delta delta def delta wish prove fix fixed point certainly fix fixed point suffices show fix 
consider subset def fe id delta delta delta fix show id fix ffi lies note chain complete contains 
fixed point induction suffices show ffi maps 
straightforward calculation definitions ffi delta fact elements satisfy id relational structures reasoning principles recursively defined domains apply wide class properties domains possible 
reason employ general axiomatic framework relations domains 
framework surprisingly simple remarkably properties general notion relation needed establish quite powerful results 
accordingly diversity examples fit framework 
structure relations hearn tennent applying relational parametricity study local variable declarations 
add treatment crucial property relations lcf gordon milner wadsworth called admissibility meaning admitting induction 
definition relational structure category specified data ffl object set relations 
ffl morphism gamma 
binary relation elements elements written ae just ae 
binary relations required satisfy properties id ae composable ae ae gf ae notion relational structure weaker employed hearn tennent sect 
require possess distinguished identity relations satisfying ae gamma 
level generality needed application proofs computational adequacy give sect 

identity relations play key role formulating induction coinduction principles considered sect 

applications need consider unary relational structures hearn tennent need binary ones order reynolds notion relational parametricity reynolds 
general ary relational structure specified sets dn tuple objects relations fn ae gamma 
satisfying analogues conditions 
seen examples relational structures assertion ae abstracts notion function mapping related elements related elements 
making fundamental notion contrasts usual axiomatic approach predicates categorical logic lawvere hyperdoctrines lawvere notion inverse image predicate map fundamental 
close connections notions see 
principle reason starting relational structures hyperdoctrines concerned actions functors relations preserve ae relationship preserve operation inverse images relations 
similarly notion composition binary relations fundamental categories relations see freyd scedrov example plays little role preserved functors need consider 
examples relational structures category cpo cppos strict continuous functions relevant 
example strict relations 
fix natural number 
cppo consist subsets fold smash product omega delta delta delta omega containing 
relation ae defined hold omega delta delta delta omega example case derive induction principle recursively defined domains sect 

ii non strict relations 
fix natural number cppo consist subsets fold product theta delta delta delta theta relation ae defined hold theta delta delta delta theta example case derive induction principle recursively defined domains sect 

iii set 
sect 
relational structure fold power case example 
described explicitly follows 
cppo consist subsets theta 
recall relation ae defined hold relational structure category binary relation ae set defined ae id ae preorder virtue properties definition 
say normal preorders partial orders ae ae imply examples relational structures normal 
arbitrary relational structure turned equivalent normal quotienting equivalence relation associated preorders ae 
assume relational structures deal normal 
definition relational structure cpo 
relation called admissible relations subset def ff ae rg strict function space cppo contains closed upper bounds countable chains 
denote subset admissible relations defined admissibility terms concrete structure cppos definition fact phrased purely terms monoidal closed structure omega category cpo 
see maclane chapter vii categorical notion 

lift element set unit smash product operation cppos 
adjunction gamma omega gamma morphisms 
ffi gamma 
correspond naturally morphisms omega ffi gamma 
admissible morphism ffi gamma 
property composition induces bijection morphisms 
ffi gamma 
morphisms ffi gamma 
ae holds 
necessarily monomorphism determines sub cppo definition example relational structure example admissible subset omega delta delta delta omega chain complete 
contains definition condition easily seen sufficient 
see necessary suppose 
countable chain upper bound omega delta delta delta omega fm 
strict continuous function mapping gamma jth component xm gamma note fm ae functions fm form countable chain upper bound strict continuous function mapping jth component admissible ae required 
similar argument shows example ii admissible chain complete subset theta delta delta delta theta containing 
example iii admissible fd rg chain complete subset particular relational structure cpo interested lifting functorial constructions cppos constructions relations 
basic requirement construction relations respects relation gamma gamma ae gamma 
important examples actions may subject certain admissibility conditions 
definition sums exactly require general mixed variance functor cpo cpo op theta cpo gamma 
cpo 

note includes case functors purely covariant purely contravariant 
definition relational structure cpo cpo op theta cpo gamma 
cpo functor 
admissible action relations operation mapping tuples relations relation dm en satisfying admissible ii ae ae admissible fm ae example examples admissible actions sects 
cases condition ii definition holds admissibility restriction example needed occurs derive induction principle introduced pitts making actions familiar domain constructors binary relations cppos 
relational structure involved case example ii relations cppo subsets theta ae holds theta maps action function space constructors cpo op theta cpo gamma 
cpo relations needed intensional relating functions give related results argument extensional relating functions map related arguments related results 
particular action theta theta subset theta defined def ae ae general ae hold noted relational structure admissible contains 
mapping 
satisfy conditions ii definition 
note action different arises connection logical relations defines def sg illustrates fact domain constructor may different actions relational structure 
definition contains key notion 
definition invariant relations relational structure cpo 
cpo op theta cpo gamma 
cpo locally continuous functor equipped admissible action relations minimal invariant existence guaranteed theorem 
invariant relation admissible relation delta satisfying gamma delta ae delta delta delta delta ae delta 
proposition delta definition 
ffi gamma 
ffi gamma 
ae ae ae delta delta ae ffi gamma 
ffi gamma 
strict continuous functions determined theorem 
proof theta ae delta delta ae delta admissible ae delta delta delta delta ae ae delta gf gamma delta ae function oe gf gamma maps set delta theta delta ae delta delta ae sg 
delta admissible relations chain complete subset theta containing 
fixed point induction fix oe delta theta delta 
proof theorem fix oe 
ae delta delta ae required 
corollary invariant relation delta satisfies rule gamma gamma gamma ae gamma gamma ae admissible 
gamma ae delta ae particular delta unique exists 
proof take gamma gamma proposition 
case id id satisfies commutative squares determine uniquely 
proposition id gamma ae delta id delta ae required 
delta invariant relation apply gamma delta conclude delta ae delta delta ae delta delta delta assuming normal 
significance notion invariant relation 
see section existence relation lies heart proofs computational adequacy denotational semantics involving recursively defined domains 
sect 
see property delta corollary gives rise various reasoning principles recursively defined domains including general form induction admissible properties induction principle introduced pitts 
proposition viewed result freyd notion free algebra cf 

note relational structure cpo gives rise new cpo enriched category cpo frg cppos equipped admissible relations 
objects pairs written cppo morphisms morphisms ffi gamma 
cpo ae holds composition identities cpo 
clearly forgetful functor cpo frg gamma 
cpo faithful 
cpo op theta cpo gamma 
cpo admissible action relations lifts functor action objects def ff jf diagram commute cpo frg op theta cpo frg cpo frg cpo op theta cpo theta cpo proposition implies deltag simultaneously initial algebra final coalgebra functor gamma gamma cpo frg op theta cpo frg gamma 
cpo frg op theta cpo frg 
show invariant relations exist relational structure certain completeness properties summed definition 
definition relational structure category 
inverse images gamma 
relation satisfying ae fg ae 
ii intersections relation satisfying ae ae note gamma determined properties uniquely equivalence general equality normal relational structures 
example relational structures example inverse images intersections 
example fu omega delta delta delta omega omega delta delta delta omega sg example ii fu theta delta delta delta theta theta delta delta delta theta sg example iii sg 
case set theoretic intersection 
consequences definition easily established 
lemma normal relational structure cpo possessing inverse images intersections 
inverse image operator monotone function inverse images contravariantly functorial sense id id fg complete lattice ae ordering meets intersections 
admissible relations closed intersections inverse images 
lemma normal relational structure inverse images determines indexed poset functor gamma op gamma 
poset poset category posets monotone functions 
action gamma morphisms defined fact indexed poset arises way gamma op gamma 
poset corresponding relational structure relations elements posets ae defined hold ae ae denotes partial order 
theorem existence invariant relations relational structure cpo possessing inverse images intersections cpo op theta cpo gamma 
cpo locally continuous functor equipped admissible action relations 
minimal invariant existence guaranteed theorem 
invariant relation exists 
proof inverse images existence invariant relation reduces solution fixed point equation poset 
facts inverse images stated lemma hard see delta invariant relation fixed point function oe gamma 
defined oe def gamma intersections admissible relations closed complete lattice 
immediately appeal tarski knaster fixed point theorem find element satisfying delta oe delta oe necessarily monotone function action gamma admissible relations order reversing left hand argument 
apply technique separating positive negative arguments 
gamma define gamma def gamma gamma id gamma ae gamma id ae admissible admissible action yields id id id gamma ae gamma gamma ae gamma 
determines monotone function op theta gamma 

note oe obtained diagonalizing 
construct invariant relation suffices find delta satisfying delta delta delta 
obtain monotone operator op theta gamma 
op theta complete lattice op theta defined gamma def gamma gamma apply tarski knaster fixed point theorem obtain pre fixed point denote delta gamma delta 
delta gamma delta admissible relations satisfying delta gamma delta delta gamma delta gamma delta delta gamma gamma ae gamma gamma ae gamma ae delta gamma delta ae view complete proof suffices show delta gamma delta delta ae delta gamma delta gamma ae delta follows immediately take gamma delta delta gamma conclude delta ae delta gamma just remains prove delta gamma ae delta id lies set delta gamma delta fe delta gamma ae delta delta admissible chain complete subset containing 
minimal invariant property fixed point induction suffices check delta gamma delta closed function ffi gamma 
fixed point id delta gamma ae delta admissible action yields delta delta gamma ae delta gamma delta 
hand property implies gamma delta gamma ae delta delta gamma delta gamma delta ae delta delta gamma ae delta ffi def gamma delta gamma ae delta required 
computational adequacy denotational semantics programming language said computationally adequate operationally defined notion program equivalence provided programs equivalent programs equal denotations 
study property origin wadsworth milne plotkin 
plotkin reduces proof adequacy recursively typed functional language showing existence relation formal approximation domain elements programs satisfying certain properties 
see properties specifying relation formal approximation fixed point certain operator relations 
unfortunately operator monotonic establishing fixed point non trivial 
general difficulty non monotonicity occurs denotational semantics programming language requires recursively defined domains rec ff phi ff ff occurs negatively phi ff 
traditionally delve detailed construction recursively defined domain establish existence formal approximation relation 
fact see suitable choice relational structure requirements formal approximation relation just invariant relation definition simply apply theorem deduce existence 
illustrate method proving computational adequacy programming language equivalent small non trivial fragment standard ml milner tofte harper containing single recursive datatype declaration datatype ty oe delta delta delta inn oe types oe oe built ground types unit element type bool booleans int integers single type identifier ty combination product function space 
constructors 
expressions language identifiers unit value true false booleans conditional numerals op operations int bool datatype value case fin delta delta delta case expression pairing fst snd product projections oe function abstraction ee function application letrec fx oe fe recursive functions 
consider typed expressions xm distinct identifiers types typing assertion xm oe identifier type expression type oe free identifiers contained set fx xm defined inductively usual way 
example rules datatype values case expressions gamma oe gamma ty gamma ty gamma oe oe delta delta delta gamma xn oe en oe gamma case fin delta delta delta inn en oe types oe oe occurring fixed declaration 
rule recursive function declarations gamma oe oe oe oe gamma oe gamma letrec fx oe fe oe omit type assignment rules 
see gunter tables example 
expr oe denote collection closed expressions type oe expressions typing assertion oe holds 
oe denote subset expr oe consisting expressions canonical form 
true false oe operational semantics programming language type indexed family evaluation relations oe expr oe oe relations inductively defined rules table follow dynamic semantics corresponding standard ml expressions specified milner tofte harper 
table rules expression evaluation 
oe bool true oe oe bool false oe oe int int names value op oe type op oe oe ty ty oe case delta delta delta delta delta delta oe oe oe oe oe oe oe fst oe oe oe snd oe oe oe oe oe oe ee oe oe oe letrec fx oe fx oe letrec fx oe fe oe turning denotational semantics language type oe oe gamma cpo op theta cpo gamma 
cpo locally continuous functor defined unit gamma def 
bool gamma def 
int gamma def 
ty gamma def oe oe gamma def oe gamma omega oe gamma oe oe gamma def oe gamma oe gamma 



cppos obtained lifting discrete cpos gamma gamma cpo op theta cpo gamma 
cpo locally continuous functor gamma def oe gamma phi delta delta delta phi oe gamma minimal invariant associated isomorphism define denotation oe type oe oe def oe particular isomorphism oe phi delta delta delta phi oe ty 
closed expression expr oe denotation element cppo oe 
generally open expression typing assertion holds determines strict continuous function omega delta delta delta omega ffi gamma 
oe equivalently continuous function theta delta delta delta theta gamma 
oe 
functions defined induction structure corresponding domain theoretic operations 
example dm theta delta delta delta theta defines def ffi ffi case delta delta delta delta delta delta def gamma oe oe ffi gamma 
oe phi delta delta delta phi oe insertion function associated coalesced sum definition iv 
clauses definition quite standard omit 
see winskel sect 
example 
similarly context gamma type oe say containing hole type define continuous function gamma gamma 
oe induction structure gamma 
take context extended expression containing instances place holder gamma closed expression expr oe closed expression expr substituted place holder 
simplifying matters considering notion context contextual equivalence closed expressions 
wish show denotational semantics adequate establishing expressions observable behaviour evaluation contexts 
notion observation form canonical expression arbitrary type 
relation oe oe having form inductively defined unit true bool true false bool false int oe ty oe oe oe oe oe oe oe oe expr write mean contexts gamma type oe oe oe oe oe oe oe say contextually equivalent write hold 
particular language strict function application notion contextual equivalence remains unchanged definition restrict contexts type bool merely observe convergence 
proposition computational adequacy types expr proposition deduced easily properties denotational semantics gamma oe 
oe oe expr oe oe oe expr oe oe oe suppose 
oe gamma gamma oe oe 
holds symmetrical argument 
imply proposition 
basic property compositionality denotational semantics established definition induction structure gamma 
properties simple prove induction structure canonical form property called soundness denotational semantics respect operational semantics proved checking relation closed rules table defining evaluation relation 
remains prove 
adapting method plotkin done constructing type indexed family formal approximation relations oe oe theta oe properties oe fd oe cg chain complete unit bool false bool true int ty oe ffi oe oe oe oe oe oe oe oe oe oe auxiliary relation oe oe theta expr oe defined oe oe oe oe suppose moment family relations oe exists 
valid typing assertion properties imply delta delta delta dm cm oe proof proceeds induction derivation typing assertion 
induction step case letrec fx oe fe requires fixed point induction relying fact fd oe contains 
case implies closed expression expr oe oe implies oe proposition follow existence relations oe satisfying 
existence relations straightforward 
clause simply define oe induction structure oe 
right left implications clauses simultaneous inductive definition relations oe clause corresponding contains negative occurrence relation defined 
literature methods constructing relations recursively defined domains non monotonic fixed point properties 
method due milne plotkin reynolds scott construction recursively defined cppo colimit chain embeddings gamma 
gamma 
delta delta delta cppo dn obtained iterating domain constructor times starting trivial cppo cf 
proof theorem 
desired relation constructed intersection countably relations defined induction time dn defined see reynolds 
second method essentially due applies scott domains precluding constructors plotkin powerdomain presentation terms information systems scott 
method hinges fact fd oe fact scott closed subset oe 
suffices construct relations oe compact elements oe oe holds oe holds compact information systems provide formal language compact elements recursively defined scott domains oe compact defined founded induction size formal representation see winskel sect 

show existence relations oe satisfying follows directly theorem choosing suitable relational structure cpo defining admissible actions appropriate domain constructors 
provides new method construction relies minimal invariant property recursively defined cppo ty techniques giving concrete constructions recursively defined domains 
relational structure example iii set equal def fc oe oe set canonical forms tagged types 
cppo consists subsets theta relation ae holds oe oe example admissible oe oe fd oe rg chain complete subset locally continuous functors oe give denotation types endowed admissible actions relations 
define oe oe induction structure oe follows unit unit bool false bool true bool int int zg ty oe oe oe oe oe oe oe oe oe oe oe oe oe oe oe oe oe oe oe action functor oe phi delta delta delta phi oe defined ty oe oe hard verify induction structure oe definitions satisfy requirements definition admissible actions functors cpo op theta cpo gamma 
cpo 
determinacy evaluation relation gamma oe gamma needed induction step function type proving oe admissible recall definition ty minimal invariant cppo functor noted example inverse images intersections 
apply theorem deduce possesses invariant relation delta ty 
type oe define oe def oe oe delta delta claim family formal approximation relations required proof computational adequacy 
oe oe certainly case oe subset oe theta oe delta admissible definition action oe relations satisfies clause definition oe satisfies property 
properties follow immediately corresponding clauses definition action functors oe relations 
property follows corresponding clause defining property invariant relation delta delta delta ae delta gamma delta ae delta delta 
clear extend proof computational adequacy case simultaneous recursive datatype declarations 
treat case local datatype declarations extend approach developed sects case domain equations extra parameters 
considered briefly sect 

deducing adequacy results general theory relational properties apply key techniques proof ad hoc basis 
pitts illustrates direct approach respect simple language untyped lambda calculus arithmetic operations 
induction induction principles kinds relational structure cpo possess distinguished identity relations 
definition properties require identity relations cf 
hearn tennent sect 

definition unitary relational structure category relational structure sense definition family relations object satisfying ae gamma 

call identity relation 
example relational structure unitary defining example ii unitary defining xn delta delta delta xn natural candidate identity relation case xn delta delta delta xn condition constraint family example illustrates may different ways enrich relational structure identity relations 
interested actions functors relations preserve identity relations constrains matters 
definition unitary relational structure cpo cpo op theta cpo gamma 
cpo functor equipped admissible action relations definition 
say action unitary provided cppos dm en dm en dm en cpo op theta cpo gamma 
cpo definition 
suppose locally continuous possesses minimal invariant cppo associated isomorphism gamma ae ae provided admissible defining properties invariant relation cf 
definition corollary holds delta proved result 
proposition suppose unitary relational structure cpo identity relations admissible 
cpo op theta cpo gamma 
cpo locally continuous functor equipped unitary admissible action relations 
minimal invariant cppo satisfies rule gamma gamma gamma ae gamma gamma ae admissible 
gamma ae ae show rule gives rise families induction induction principles recursively defined cppos 
induction relational structure cpo example case identity relations example 
cppo consists subsets contain relation ae holds just case maps identity relation example admissible chain complete subset containing relation 
note particular identity relation admissible 
theorem induction property minimal invariant cppos suppose cpo op theta cpo gamma 
cpo locally continuous functor minimal invariant cppo associated isomorphism suppose possesses unitary admissible action relations satisfying satisfies rule induction chain complete subset containing 
proof identity relations admissible apply proposition conclude satisfies rule 
note gamma ae holds gamma half tells case 
suggests take gamma second half tells subset assumption gamma half hypothesis gamma gamma gamma ae gamma automatically satisfied gamma case gamma reduces desired induction rule 
show theorem applies wide range recursively defined cppos 
define 
theta theta omega omega phi phi follows 
def theta def sg omega def sg phi def fin rg fin sg def ff sg def lemma ae ae 

ae 
theta theta ae theta omega omega ae omega phi phi ae phi ae ae 
ii 
theta omega omega phi 
iii phi ff cppo constructor built variable ff constants ranging cppos gamma theta omega phi 
locally continuous functor phi cpo op theta cpo gamma 
cpo associated phi sect 
possesses admissible action relations 
relational structure property ii definition holds restriction concerning admissibility 
iv phi iii action phi relations satisfies phi phi 
particular action phi relations unitary 
proof properties ii easily verified iii follows induction structure phi inductive definition 
phi case phi ff take phi case phi constant take phi iv note 
facts ii gives desired result induction structure phi 
corollary phi ff cppo constructor built variable ff constants ranging cppos gamma theta omega phi 
rec ff phi ff cppo recursively defined ff phi ff associated isomorphism phi satisfies rule induction chain complete subset containing phi phi phi phi defined induction structure phi follows operations subsets defined lemma 
ff def def phi 
def phi phi theta phi def phi theta phi phi omega phi def phi omega phi phi phi phi def phi phi phi phi phi def phi phi phi phi def phi phi proof lemma implies theorem holds functor phi minimal invariant rec ff phi ff 
easy verify phi precisely subset phi defined 
stated induction rule rec ff phi ff 
example lazy lambda calculus phi ff ff ff 
case rec ff phi ff canonical domain model lazy lambda calculus studied abramsky abramsky ong 
case phi subset 
containing elements form satisfies gamma phi delta delta application defined example 
note bijection phi ae holds gamma phi implies corollary yields induction principle chain complete containing subsets canonical domain model lazy lambda calculus delta principle looks kind impredicative 
structural induction function decomposed vector values delta 
example fixpoint induction phi ff ff rec ff phi ff cpo delta delta delta fixpoint object strong monad gamma category cpos sense crole pitts 
case corollary induction principle motivated fixpoint objects strong monads general studied loc 
cit 
scott principle induction admissible properties fixed points continuous functions formal consequence instance theorem 
example structural induction suppose phi ff built ff flat cppos omega phi 
rec ff phi ff flat cppo form 
discrete cpo initial algebra appropriate endofunctor category sets functions functor built set operations cartesian product corresponding omega disjoint union corresponding phi structure phi 
case induction principle corollary instance principle initial algebra induction studied lehmann smyth sect 

known various choices phi yields inductively defined sets numbers lists trees initial algebra induction coincides corresponding principle structural induction 
jensen derives family induction principles recursively defined domains starting minimal invariant property 
corollary differs jensen induction property couple respects 
proof ultimately depends properties continuous endofunctions recursively defined domain induction hypothesis stated purely terms subsets domain jensen principle general contains hypotheses involving endofunctions 
secondly problematic case constructor phi ff involving negative occurrences ff example jensen principle vacuous sense occurs part induction hypothesis 
yield useful information rec ff phi ff cases 
example phi ff ff fixed cppo phi hypothesis phi ae just ae isomorphism 
induction principle vacuous case 
induction relational structure cpo example ii case 
cppo consists subsets theta relation ae holds endow identity relations example partial order relation vd example admissible chain complete subset theta containing 
note particular admissible 
theorem induction property minimal invariant cppos suppose cpo op theta cpo gamma 
cpo locally continuous functor minimal invariant cppo associated isomorphism suppose possesses unitary admissible action relations satisfying call theta simulation satisfies gamma gamma vd simulation proof identity relations admissible apply proposition conclude satisfies rule 
consider special case admissible relation just second part rule viz 
ae automatically satisfied 
true second half hypothesis viz 
gamma ae assumption gamma gamma gamma ae ae gamma ae holds just case simulation vd says simulation contained partial order relation 
establishes direction theorem 
direction just note gamma monotone vd simulation 
apply theorem need produce suitable actions cppo constructors relations 
define 
theta theta omega omega phi phi follows 

theta omega phi easy verify constructions relations properties stated lemma ae ae ae need assume certainly case admissible get admissible actions functors phi part iii lemma 
note definitions throw away relation cf 
discussion example 
ensures constructions satisfy 
part iv lemma holds 
phi ff cppo constructor built variable ff constants ranging cppos gamma theta omega phi associated locally continuous functor phi cpo op theta cpo gamma 
cpo unitary admissible action relations 
minimal invariant rec ff phi ff satisfies theorem 
writing phi phi definitions give direct description subset phi theta phi induction structure phi explain relation theta phi simulation 
ff vk phi 

phi phi theta phi phi phi phi omega phi phi phi phi phi phi phi phi phi phi phi phi phi phi phi phi phi phi phi phi phi phi phi phi theorem yields result rec ff phi ff 
corollary phi ff cppo constructor built variable ff constants ranging cppos gamma theta omega phi 
rec ff phi ff cppo recursively defined ff phi ff associated isomorphism phi prove suffices show subset theta satisfying gamma gamma phi induction principle recursively defined cpos established pitts deduced corollary restricting attention cppo constructors phi ff just involving constructions gamma omega phi gamma 
phi phi psi psi corresponding cpo constructor built gamma theta partial continuous function space constructor gamma 
rec psi rec ff phi ff induction principle theorem loc 
cit 
precisely corollary case 
shown loc 
cit binary relations satisfying give uniform notion simulation cppo constructors considered includes example sided applicative bisimulation abramsky connection lazy lambda calculus 
refer reader pitts discussion applications inductive characterization partial order recursively defined cppos 
see fiore rutten paulson related applications 
existence simulation relation satisfying containing elements recursively defined cppo establishes order relation holds 
equality elements established exhibiting simulations containing 
symmetric notion bisimulation establishes directly elements equal 
obtained changing notion identity relation relational structure section vd equality relations dg 
order retain necessary property phi phi definition action cppo constructors relations 
example 



similar changes cppo constructors corollary remains valid stated replaced seen fruitful treat domain constructions functors mixed variance suitable category domains 
approach taken properties recursively defined domains exploits structure domain constructions functoriality properties 
unitary admissible action relations particular construction possesses may consequence functoriality properties 
notion relation may take outside category domains case notion relation sect 
example 
rutten fiore develop results analogous theorem relations subobjects category notion bi simulation phrased purely terms order enriched categorical properties functor 
approach advantage relaxing conditions functor needed establish inductive property minimal invariant 
disadvantage tightening conditions required simulation 
concrete instances leads results corollary weakened adding requirement simulation chain complete subset theta case induction properties chain completeness condition unnecessary 
inconvenient practice seeks simulations elements possible establishing specific instance order relation rec ff phi ff 
useful consider formulations induction principles theorem relax conditions imposed functor example pitts sect 
extends corollary domain constructors phi ff involving plotkin powerdomain plotkin 
case proof quite corollary theorem operation 
obviously satisfy requirements definition admissible action 
satisfy weaker version condition ii definition projection half embedding projection pair loc 
cit 
shows sufficient establish induction result includes abramsky internal full abstraction theorem domain model sccs abramsky proposition instance 
rutten sect 
obtains abramsky result modulo chain complete simulations just local continuity functor cpo gamma 
cpo order enriched categorical notion bisimulation 
parameterized recursive domains results exploit fact various simple domain constructors behaved actions relations 
solution recursive domain equations parameters provides important source complicated domain constructors 
example psi ff fi binary domain constructor built variables ff fi gamma theta omega phi get unary domain constructor phi ff def rec fi psi ff fi value phi cppo minimal solution domain equation fi psi fi 
extend results sect 
include constructors see treatment sect 
domain constructors terms locally continuous functors mixed variance extended cope parameterization 
parameterized minimal invariant cppos sketch associate locally continuous functor cpo op theta cpo gamma 
cpo domain constructor 
psi ff gamma ff fi gamma fi denote result separating positive negative occurrences ff fi psi ff fi 
sect 
psi determines locally continuous functor cpo op theta cpo theta cpo op theta cpo gamma 
cpo 
property psi 
possible construct family cppos gamma gamma cpo isomorphisms gamma gamma gamma gamma gamma satisfying simultaneous minimal invariant property pair cppos gamma id gamma id gamma fixed point continuous ffi gamma gamma gamma theta gamma gamma ffi gamma gamma ffi gamma gamma gamma ffi gamma gamma ffi gamma gamma gamma def gamma ffi id id gamma gamma ffi gamma gamma ffi gamma gamma def gamma ffi id gamma id gamma ffi gamma gamma construction cppos carried proof theorem works doubly indexed families cppos embeddings build desired doubly indexed family cppos colimits chains embeddings 
just theorem simultaneous minimal invariant property leads universal property ffi gamma 
gamma gamma ffi gamma 
unique ffi gamma 
gamma gamma ffi gamma 
making squares commute gamma gamma gamma gamma gamma gamma gamma id id gamma gamma gamma gamma gamma gamma id id assignment 
determines continuous function 
universal property allows extend gamma 
gamma locally continuous functor cpo op theta cpo gamma 
cpo 
gamma gamma ffi gamma 
gamma ffi gamma 
define gamma gamma ffi gamma 
gamma component pair corresponding gamma id id ffi gamma gamma gamma ffi gamma id id uniqueness part universal property ensures action morphisms preserves identities composition local continuity functor follows fact assignment 
continuous 
constructed cpo op theta cpo gamma 
cpo cpo op theta cpo theta cpo op theta cpo gamma 
cpo 
write gamma rec gamma gamma indicate dependence 
diagonal case gamma simultaneous minimal invariant property yields minimal invariant sense definition locally continuous functor gamma cpo op theta cpo gamma 
cpo 
psi functor associated binary constructor psi ff fi minimal invariant locally continuous functor psi gamma 
precisely functor obtained separating positive negative occurrences fi domain constructor psi fi minimal invariant definition rec fi psi fi 
rec fi psi fi diagonalization locally continuous functor cpo op theta cpo gamma 
cpo 
note diagonal case gamma simultaneous minimal invariant property gamma gamma subtle property minimal invariant gamma functor gamma gamma 
expect gamma functorial gamma gamma gamma gamma gamma expression respect variances gamma parameterized invariant relations suppose relational structure cpo functor admissible action relations definition case 
order extend results sects encompass domain constructors investigate action relations gives rise similar action gamma rec gamma gamma 
action invariant isomorphisms sense gamma gamma gamma gamma ae gamma gamma gamma gamma ae gamma gamma gamma proposition pair cppos gamma family admissible relations gamma gamma gamma gamma satisfying universal property ffi gamma 
gamma gamma ffi gamma 
gamma gamma ae gamma gamma ae unique ffi gamma 
gamma gamma ffi gamma 
determined satisfy ae gamma gamma ae proof proved way proposition fixed point characterization note universal property proposition specializes mixed fixed point rule family relations gamma ae gamma gamma ae admissible 
ae gamma gamma ae particular family admissible relations satisfying unique exists 
universal property proposition implies gamma 
gamma satisfies conditions definition required admissible action relations 
gamma admissible assumption gamma gamma ae gamma ae gamma gamma ae gamma follows gamma id id ffi gamma gamma gamma ffi gamma id id corresponding gamma gamma gamma gamma 
sufficient completeness properties inverse images intersections cf 
definition existence relations satisfying hypotheses proposition established way existence invariant relations established theorem 
note relational structure inverse images conditions reformulated family fixed point equations gamma gamma gamma gamma gamma gamma fixing gamma set pairs ae gamma ae functions ae gamma gamma theta gamma 
gamma ae gamma theta gamma 
gamma intersections gamma complete lattice complete lattice partial order ae gamma ae ae gamma ae gamma ae gamma gamma ae ae gamma gamma ae gamma ae ae gamma ae gamma ae 
gamma ae gamma ae ae gamma ae gamma ae gamma ae gamma def gamma gamma gamma ae gamma ae gamma gamma ae gamma ae gamma def gamma gamma gamma ae gamma gamma ae gamma monotone complete lattice apply tarski knaster theorem obtain fixed point oe gamma oe 
suffices prove oe gamma oe gamma def oe gamma gamma oe gamma admissible relation solving 
prefixed point property oe gamma oe symmetry ae immediately gives oe oe gamma reverse inequality proved appealing simultaneous minimal invariant property gamma 
set gamma gamma oe gamma gamma ae oe gamma oe gamma gamma ae oe gamma chain complete subset gamma gamma theta gamma gamma containing 
verify subset closed action continuous ffi gamma simultaneous minimal invariant property fixed point id id 
fixed point induction id id belongs subset 
id oe gamma gamma ae oe gamma gamma oe gamma oe summarize established result 
theorem relational structure cpo possessing inverse images intersections cpo op theta cpo theta cpo op theta cpo gamma 
cpo locally continuous functor equipped admissible action relations 
locally continuous functor gamma rec gamma gamma possesses admissible action relations gamma admissible satisfies 
theorem generalizes easily case functors extra parameter form cpo op theta cpo theta cpo op theta cpo gamma 
cpo 
method developed sect 
proving computational adequacy applied functional languages involving recursive types parameters metalanguage plotkin 
note identity relations action relations unitary sense definition action rec gamma gamma just apply rule gamma identity relations see gamma gamma mixed inductive coinductive rule established proposition applied recursively defined functors rec gamma gamma 
go deduce proposition results sect 
induction induction extended recursively defined constructors needs establish particular relational structures property 
property automatic rec gamma gamma 
induction result corollary extend case recursively defined constructors indicated briefly pitts 
leave consideration similarly extended induction principle occasion 
concluding remarks far concerned expressions rec gamma gamma informal notation certain locally continuous functors 
interesting extend plotkin metalanguage recursive types syntax enforces separation positive negative occurrences whilst allowing diagonalization back usual language recursive types logic formalizing various relational properties parameterized recursive domains established 
utility considering actions type constructors relations best known body reynolds relational properties parametric polymorphism see abadi cardelli curien plotkin abadi 
known inductive inductive types encoded girard reynolds polymorphic lambda calculus 
inherit relational properties types 
domain theory brings picture considerations partiality particularly distinctive combination inductive inductive properties enjoyed recursively defined domain 
nearly ultimate metalanguage domain theory presumably incorporate syntactic version reynolds relational parametricity types lines loc 
cit derive kind proof principles recursively defined domains established 
abadi cardelli curien 
formal parametric polymorphism theoretical computer science 
abramsky 
lazy lambda calculus research topics functional programming turner ed pp 
addison wesley abramsky 
domain equation bisimulation information computation 
abramsky ong 

full abstraction lazy lambda calculus inform 
computation 
barendregt 
lambda calculus 
syntax semantics revised edition north holland amsterdam 
crole pitts 
new foundations fixpoint computations fix hyperdoctrines fix logic inform 
computation 
fiore 
coinduction principle recursive datatypes bisimulation proc 
th annual symposium logic computer science montr eal pp 
ieee computer society press washington 
freyd 
algebraically complete categories proc 
como category theory conference lec 
notes math vol 
carboni eds pp 
springer verlag berlin 
freyd 
remarks algebraically compact categories applications categories computer science fourman johnstone pitts eds pp 
lecture note series cambridge university press 
freyd scedrov 
categories allegories northholland amsterdam 
gordon milner wadsworth 
edinburgh lcf lecture notes computer science vol 
springer verlag berlin 
gunter 
semantics programming languages 
structures techniques mit press 
gunter scott 
semantic domains handbook theoretical computer science leeuwen van ed pp 
elsevier science publishers amsterdam 
hudak peyton jones wadler 
report programming language haskell version technical report yale univ glasgow univ jensen 
inductive inference reflexive domains edinburgh univ dept computer science report 
csr 
lawvere 
equality hyperdoctrines comprehension schema adjoint functor applications categorical algebra heller ed pp 
amer 
math 
soc providence ri 
lehmann smyth 
algebraic specification datatypes synthetic approach math 
systems theory 
mac lane 
categories working mathematician springerverlag new york 
meyer 
semantical paradigms notes invited lecture proc 
rd annual symposium logic computer science edinburgh pp 
ieee computer society press washington 
milne 
formal semantics computer languages implementations ph thesis cambridge university 
milner tofte harper 
definition standard ml mit press 
hearn tennent 
relational parametricity local variables conf 
record th symp 
principles programming languages charleston pp 
acm new york 
paulson 
induction recursion higher order logic cambridge univ computer laboratory tech 
rept 

pitts 
relational properties recursively defined domains proc 
th annual symp 
logic computer science montr eal pp 
ieee computer soc 
press washington 
pitts 
computational adequacy mixed inductive definitions mathematical foundations programming language semantics proc 
th int 
conf new orleans la usa april lecture notes computer science vol 
pp 
springer verlag berlin 
pitts 
induction principle recursively defined domains theoretical computer science 
plotkin 
lambda definability logical relations memorandum sai rm univ edinburgh school artificial intelligence 
plotkin 
powerdomain construction siam comput 

plotkin 
lcf considered programming language theoretical computer science 
plotkin 
lectures predomains partial functions 
notes course csli stanford university 
plotkin abadi 
logic parametric polymorphism proceedings conference typed lambda calculus applications utrecht lecture notes computer science vol 
pp 
springer verlag berlin 
reynolds 
relation direct continuation semantics nd int 
colloq 
automata languages programming ed lecture notes computer science vol 
pp 
springer verlag berlin 
reynolds 
types abstraction parametric polymorphism information processing mason ed pp 
elsevier science publishers amsterdam 
rutten 
structural induction theorem proc 
th int 
conf 
math 
foundations programming language semantics new orleans brookes eds lecture notes computer science vol 
pp 
springer verlag berlin 
scott 
domains denotational semantics proc 
th internat 
coll 
automata languages programming nielsen schmidt eds lecture notes computer science vol 
pp springer verlag berlin 
smyth plotkin 
category theoretic solution recursive domain equations siam computing 
thompson 
logic miranda formal aspects computing 
wadsworth 
relation computational denotational properties scott models lambda calculus siam comput 

winskel 
formal semantics programming languages 
mit press 
winskel larsen 
information systems solve recursive domain equations effectively semantics data types kahn eds lecture notes computer science vol 
pp 
springer verlag berlin 

