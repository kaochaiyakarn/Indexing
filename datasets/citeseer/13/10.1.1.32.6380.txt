appear international journal intelligent cooperative information systems 
retrieving integrating data multiple information sources arens chin chee chun nan hsu craig knoblock information sciences institute university southern california admiralty way marina del rey ca chee isi edu current explosion data retrieving integrating information various sources critical problem 
multidatabase systems begun address problem primarily focused methods communicating databases requires signi cant ort new database added system 
describes general approach exploits semantic model problem domain integrate information various information sources 
information sources handled include databases knowledge bases information sources programs potentially incorporated system 
describes domain information sources modeled shows query domain level mapped set queries individual information sources presents algorithms automatically improving ciency queries knowledge domain information sources 
implemented system called sims tested transportation planning domain oracle databases loom knowledge base 
keywords information server multidatabases planning query reformulation knowledge representation sims related tasks performed users complex information systems involve interaction multiple information sources 
examples areas analysis research reported supported rome laboratory air force systems command defense advanced research projects agency contract 

views contained report authors interpreted representing cial opinion policy darpa rl government person agency connected 
term information source refer system information obtained 
sims currently deals oracle databases loom knowledge bases 
intelligence data logistics forecasting resource planning brie ng applications 
retrieval desired information dispersed multiple sources requires general familiarity contents structure query languages location existing networks 
user break retrieval task sequence actual queries information sources handle temporary storing possible transformation intermediate results satisfying constraints reliability results cost retrieval process 
large number information sources di cult nd individuals possess required knowledge automation necessity 
sims accepts queries form description class objects information desired 
description composed statements loom knowledge representation language section 
user presumed know information distributed data knowledge bases sims access assumed familiar application domain standard terminology compose loom query 
enables user inspect domain model aid composing queries 
sims proceeds reformulate user query collection elementary statements refer data stored available information sources 
sims creates plan retrieving desired information establishing order content ofthe various plan steps subqueries 
knowledge contents structure information sources sims reformulates plan minimize expected execution time 
resulting plan executed performing local data manipulation passing subqueries lim system section generates nal translation database queries appropriate language 
graphical user interface enables user inspect plan various stages supervise execution 
sims project applies variety techniques systems arti cial intelligence build intelligent interface information sources 
sims builds ideas knowledge representation modeling describe domain information stored information sources structure contents information sources 
domain model declarative description objects activities possible application domain viewed atypical user 
model information source indicates data model query language network location size estimates update frequency describes contents elds terms domain model 
user formulates queries terms application domain needing know speci information sources 
sims models di erent information sources completely independent greatly easing process incorporating new information sources system 
planning search construct sequence queries individual information sources satisfy user query 
planner initial reformulation step selects information sources answering query 
order queries individual information sources services information management decision systems 
select location processing intermediate data determine queries executed parallel 
reformulation learning 
sims considers alternative information sources queries retrieve desired information 
search cient query formulations guided detailed semantics provided application domain model 
additional knowledge contents information sources may learned databases reformulate queries 
initial prototype incorporating features sims approach built applied domain transportation planning organizing movement personnel materiel geographic location available transportation facilities vehicles 
earlier prototype applied information needed daily naval brie ngs hawaii status paci fleet 
system currently access oracle databases loom knowledge base information ships ports locations relevant activities sims controlled graphical user interface 
written common lisp uses clim graphics 
problem accessing information distributed multiple sources ai oriented database community traditional database community 
heterogeneous distributed databases includes adds preci systems 
survey comparison 
systems rst attempt support total integration information sources sense sims provides 
sims distinguished community complete semantic model application domain created state art knowledge representation language powerful reasoning facilities 
model provides collection terms describe contents create available information sources include knowledge bases addition databases 
furthermore sophisticated planning mechanism run time order determine potentially complex relationship collection information requested user data available various sources 
contrast previous domain model sims speci particular group information sources necessarily direct mapping concepts model objects information sources 
approach provides exible easily extensible interface possibly changing collection information sources 
ai oriented database community done aspects knowledge base integrate variety information sources 
carnot project integrates heterogeneous databases set articulation axioms describe sql queries domain concepts 
carnot uses cyc knowledge base build articulation axioms axioms built domain model longer needed 
contrast domain model sims integral part system allows sims combine information stored knowledge base reformulate queries 
illarramendi approach automatically integrating knowledge base models individual relational database schemas 
sims integration database models automated translation individual database schemas knowledge base models automated lim system sims 
elements approach described applied automating process database modeling sims 
papazoglou intelligent information systems sims explicit knowledge model integral part intelligent information agent 
additional related research performed working semantic object oriented data models 
interested constructing single dbms take diametrically opposed view problem sims 
sims attempts preserve independence data models constituent data knowledge bases planner bridge gap query time attempt closely integrate data model dbms 
remainder structured follows 
rest section devoted overviews rst technological infrastructure sims operation sims system 
section follows description modeling provides sims knowledge needed plan data retrieval 
full description sims planning reformulation components provided sections 
sims user interface described section 
ends brief summary directions section 
technological infrastructure subsection provided readers may familiar systems underlying sims 
general understanding loom lim planners prodigy assumed rest 
loom loom serves knowledge representation system sims uses describe domain model contents information sources serving information source right 
provides language environment constructing intelligent applications 
loom combines features semantic network languages provides reasoning facilities 
knowledge representation language descendent kl system 
heart loom powerful knowledge representation system provide deductive support declarative portion loom language 
declarative knowledge loom consists de nitions rules facts default rules 
deductive engine called classi er utilizes forward chaining semantic uni cation object oriented truth maintenance technologies order compile declarative knowledge network designed ciently support line deductive query processing 
detailed description loom see 
illustrate loom form sims queries consider contains simple semantic query sims 
query requests value depth san diego port 
query specify respectively variable port describes member model class port relation port name holds value port string san diego relation port depth holds value port value db retrieve depth port port port name port san diego port depth port depth example sims loom query variable depth 
semantic query speci es value variable depth returned 
query sims need necessarily correspond single database query may exist database contains information requested 
lim loom members class possible values variable port expression instances knowledge base 
case large sized realistic domains preferable de ne objects domain knowledge base instances 
databases provide cient structures organizing large numbers objects dbmss cient ai languages manipulating 
loom interface module lim researchers systems mediate loom databases 
lim reads external database schema uses build loom representation database 
loom user treat classes instances stored database contained real loom instances 
loom query information class lim automatically generates query appropriate database query language database contains information returns results loom instances 
lim focuses primarily issues involved mapping semantic query single database 
sims planned query formed subqueries grounded single database hands subqueries lim actual data retrieval 
sims handles direct queries loom knowledge base 
prodigy problems selecting information sources ordering queries easily cast planning problems 
sims uses prodigy means ends analysis planner solve problems 
prodigy expressive operator control language linked loom loom domain model model world 
sims formulates selection information sources ordering queries planning problems hands prodigy 
problem speci ed prodigy giving system set operators de ne legal operations problem initial state description de nes current state world 
system goal case query answered prodigy generates sequence operators transforms initial state state goal satis ed 
user query information source selection access planning domain model database models query plan reformulation learning sims overview diagram 
execution data knowledge bases output prodigy solving planning problems sims main reasons 
provides expressive language de ning problem constructing set rules control search 
second provides natural framework planning operations monitoring execution operations 
case failures failure points easily identi ed system return planner select alternative plan retrieving data 
overview sims sims addresses problems arise tries provide user familiar general domain access system composed numerous separate data knowledge bases 
speci cally sims deals determining information sources contain data relevant knowledge base classes formulating query 
classes mentioned query matching information source determining knowledge encoded domain model relationship classes permits reformulation way enable suitable information sources identi ed 
creating plan sequence subqueries forms executed yield desired information 
knowledge databases optimize plan 
general providing uniform way describe information sources system data accessible 
retrieve name rail port port port port port geocode port geocode port name port name geoloc geoloc geoloc country name geoloc germany geoloc geocode geoloc geocode example sims query 
visual representation components sims provided 
initial loom query kind sims handles shown 
rst clause rail port port concept expression constrains variable port set port objects knowledge base 
loom class rail port standing sea ports rail facilities need necessarily correspond contents speci eld single information source 
planner nd combination subqueries obtain necessary objects 
case discussed 
second clause relation expression states port relation holds llers variables port 
clause bring retrieval possible llers facilities relevant port 
third clause constraint relation number facilities requiring positive integer 
entire query requests names ports rail facilities facilities geographic code designation indicates germany 
fragment model describing hierarchy concepts relevant query 
gure circles denote concepts knowledge base upward arrows indicate links arrows indicate relations concepts 
example port concept subconcepts sea port air port sea port subconcept rail port railway capability 
shaded concepts represent retrieved directly database 
information rail ports geographic locations stored directly loom knowledge base loom directly answer query 
gure indicates note case 
sims uses loom semantically model domain data stored multiple information sources information required answer query retrieved appropriate sources help lim necessary 
referenced information stored database query passed directly lim case 
data pertaining query spread databases containing information ports containing information geographic locations 
system handed query rst de links back execution component information source selection access planning discussed 
termine information sources access 
formulates set subqueries executed directly lim loom derive desired result 
sims lim return intermediate results processed loom 
see execution example query require subqueries 
databases combine intermediate results obtained 
processes described overview discussed depth remaining sections 
rst step processing query determine requested data resides 
instance inspecting model fragment reveals rail port directly corresponding database shaded concept 
model relation port rail distinguish ports 
speci cally identify desired ports sea port corresponding database 
reformulations nature described section 
step processing query produce plan implement required retrieval 
mean sims produce plan consisting data retrieval data manipulation speci cations associated partial ordering speci ed actions 
data retrieval steps plan grounded speci information sources data step requests contained single information source 
data manipulation steps plan performed loom reasoning facilities 
plan produced takes form lattice plan steps 
steps plan partially ordered structure query 
ordering determined fact steps data obtained steps logically considered 
example plan step may compare items data measure 
data obtained di erent information sources comparison come retrievals data items 
plan produced inspected appropriate steps grounded information source grouped eventually execution result single query 
call process subquery formation 
result grouping process new graph node ultimately corresponds query information source internal manipulation sims data acquired 
processes involved subquery formation described section 
plan query obtained system reformulates query plan expensive semantically equivalent plan 
reformulation logical inference content knowledge queried databases 
cost reduction reformulated plan due reduction amount data re nement ofeach subquery 
reformulation process described section 
discuss approach modeling 
domain information source models sims reason data knowledge stored variety locations formats 
imperative sims available detailed descriptions various information sources access 
merely artifact sims approach system retrieve requested information knowledge information question may stored go accessing 
sims model information sources created describe system 
addition domain model constructed describe objects actions signi cance performance tasks application domain 
domain model collection terms forms vocabulary characterize contents information sources 
important note models di erent information sources independent ofeach 
greatly simpli es task modeling time enables new components added sims need recompilation process 
planner simply new information appropriate 
modeling information sources information source sims model include fact uence decisions concerning utilize 
order decide query lim necessary processing performed locally model speci es source database loom knowledge base types information sources currently supported order decide expend ort reformulating plans concerned cost transmitting intermediate data model describes size databases tables location order help decisions concerning reformulation model de nes key columns database exist nally order enable sims determine information source desired information resides model describes content information source 
fact modeling ort done sims goes describing content databases 
models lim sims respective purposes cf 
database modeling 
simply put model database describe precisely type information stored 
key column columns table create loom class corresponding class items column drawn 
column table viewed corresponding loom relation fact knowledge described stored sims single model de ned uniform way 
purposes exposition describe di erent parts model separate models 
afsc database table port name glc cd 
shore 

floating 
afsc port name afsc glc cd port name port geocode port depth afsc sea port afsc shore sea port port afsc floating rail port indicates subrelation port rail port floating shore model database table embedded domain model 
describing relationship key item column 
figures provides simple illustration content modeling 
modeling domain sims deals single application domain organizing retrieval information relevant coherent collection tasks 
currently application domain selected military transportation planning domain tasks involving movement personnel materiel location aircraft ships trucks sims model application domain includes hierarchical terminological knowledge base nodes representing objects actions states possible domain 
addition includes indications relationships possible nodes model 
example node model representing class ports node representing class geographic location codes 
relation speci ed ports geoloc codes notation indicating precisely 
loom knowledge representation language describe sims domain model 
statements loom express elaborate relationships model entities rail ports sea ports rail terminal cf 

entities included domain model meant correspond objects described particular database 
domain model intended description application domain point view needs perform real world tasks domain obtain information 
domain model ectively describe contents database sims 
done including relations wehave chosen simple examples 
loom supports far powerful statements 
full description see 
hierarchical precisely describe aspect contents database terms domain model cf 
section 
order submit query sims user composes loom statement terms relations domain model describe precise class objects interest 
user happens familiar particular databases representation concepts relations may 
knowledge required 
sims designed precisely allow users query speci knowledge data structure distribution 
task accurately relating database information source model engaged database knowledge base sims capable utilizing 
sims includes graphical interface simpli es process section 
modeling prerequisite sims able access information sources substantial ort importance 
extent sims nd information accuracy retrievals completely dependent 
scalability modeling process sims discussed 
scalability sims dependence models domain information sources utilizes requires question scalability addressed 
separate issues arise considering application domain model information resource models 
expanding application domain model considerable ort expended model application domain sims possible 
task extent minimized relatively tractable di erent areas arti cial intelligence 
fact clearly de ned limits full utility possible moment model built cover data objects described desired databases 
model building point increases expressivity query language adds user convenience provides access data 
reasonable anticipate domain model incrementally enlarged accommodate new data sources added system 
sims designed handle domain time safely assumed modeling ort gradually reach closure 
adding information source models additional modeling engaged new information source added sims 
need remain constant system grows sims approach greatly limits required ort compared potentially 
obviously modeling information sources complete description content database knowledge base simply impossible intelligently decide attempt retrieve desired information 
sims allows model new information geo geoloc geoloc geoloc 
geocode geo code port 
geocode port depth afsc sea port port name sea port sea port port rail port fragment domain model port air port port rail afsc air port source independently incorporated system 
need try anticipate interactions overlaps di erent information sources decide joins databases performed decisions run time sims planner 
simplify modeling performed sims project includes ongoing ort develop modeling aids graphical loom knowledge base builder see section 
selecting information sources rst step answering query expressed terms domain model select appropriate information sources 
done mapping concepts domain model concepts database models correspond directly database information 
user requests information ports database concept contains ports mapping straightforward 
cases direct mapping 
original domain model query reformulated terms concepts correspond database concepts 
consider fragment knowledge base shown covers knowledge relevant example query 
concepts sea port air port geoloc subconcepts shown shaded circles correspond concepts instances retrieved directly database 
afsc database contains information airports database contains information 
user asks translated database concepts afsc sea port sea port 
user asks rail ports rst translated request sea ports augmenting original query constraint port railroad capability 
addition retrieving data databases data stored retrieved loom knowledge base 
knowledge base simply treated information source 
loom kb added advantage information database queries cached model updated indicate information stored loom 
section describe set problem reformulation operations implemented sims reformulation process transform user query retrieve data 
describe reformulation mechanism supports catching retrieval data loom 
reformulation operations order select information sources answering query sims applies set reformulation operators transform domain level concepts concepts retrieved directly databases 
system uses operators select database generalize concept specialize concept partition concept 
reformulation operators described 
select database select database reformulation operator maps domain level concept directly database level concept 
cases simply direct mapping concept sea port concept corresponds particular database 
may databases contain information case domain level concept reformulated database concepts 
sea port transformed afsc sea port sea port 
example shows simple query reformulated afsc sea port 
general choice minimize number queries di erent databases 
generalize concept input query retrieve name sea port port port name port name reformulated query retrieve name afsc sea port port afsc port name port name generalize concept operator uses knowledge relationship class superclass reformulate requested concept terms general concept 
order preserve semantics original request additional constraints may need added query order avoid distinguished query plan reformulation operations described section 
currently assume databases contain consistent information choice databases ects ciency query accuracy 
retrieving extraneous data 
example request rail ports replaced request additional constraint rail capability 
port rail port 
illustrated example 
specialize concept input query retrieve name rail port port port name port name reformulated query retrieve name sea port port port name port name port rail port specialize concept reformulation operator attempts replace concept speci concept 
done checking constraints query see appropriate specialization requested concept satisfy 
identifying specialization concept implemented building set loom expressions representing concept loom classi er nd specializations concept expression 
example consider hierarchy fragment shown 
query shown requests ports depth greater loom classi er uses fact relation corresponds port depth 
possible satisfy query original request ports replaced 
databases correspond requested information 
input query retrieve name port port port name port name port depth port depth depth reformulated query retrieve name sea port port port name port name port depth port depth depth partition concept partition concept operator uses knowledge set coverings set concepts include instances concept specialize concept 
information replace requested concept set concepts cover 
example knowledge air port request ports satis ed retrieving combining subconcepts 
illustrated example 
input query retrieve name port port port name port name reformulated query retrieve name sea port port port name port name air port port port name port name reformulation process reformulation performed treating reformulation operators set planning operators planning system search reformulation set concepts 
initial clauses query divided individual concepts associated constraints 
planner searches concepts associated constraints database concepts 
example consider query shown 
rst decomposed separate expressions ports 
reformulation operators nd mappings database concepts 
remaining clauses comparisons concepts dealt plan accessing data generated 
retrieve name rail port port port port port geocode port geocode port name port name geoloc geoloc geoloc country name geoloc germany geoloc geocode geoloc geocode reformulation operators described previously planner determines geoloc concept expression mapped directly database rail port concept expression needs reformulated 
reformulated sea port concept expression described section adding constraint 
resulting plan reformulating initial query shown 
generalize concept rail port sea port filled port rail select database sea port afsc sea port select database geoloc geo geoloc nal step take plan execute 
straightforward process applying transformations query plan order listed 
resulting query follows 
caching retrieved data retrieve name afsc sea port port afsc port rail port afsc port port afsc port geocode port geocode afsc port name port name geo geoloc geoloc geo geoloc country name geoloc germany geo geoloc geocode geoloc geocode data required frequently expensive retrieve cached loom knowledge base retrieved directly loom 
elegant feature loom model domain caching data ts nicely framework 
data currently brought loom perform local processing caching simply matter retaining data recording data retrieved 
cache retrieved data loom requires formulating description data 
extracted initial query queries expressed loom rst place 
description de nes new subconcept placed appropriate place concept hierarchy 
data instances concept accessed retrieving instances 
data stored retrieved specialization operator described 
user poses query system reformulate query newly stored stored query cached data retrieved directly loom 
access planning planning process described section nds ordering database accesses data comparisons analyzing dependency structure constraints query 
generalizes plan remove unnecessary ordering constraints order maximize plan potential parallelism 
complete database access plan converted back partially ordered set grounded subqueries handed lim executed directly loom 
rst concept afsc sea port port relation port port relation port geocode port geocode relation port name port name comparison concept geoloc geoloc relation geoloc country name geoloc germany relation geoloc geocode geoloc geocode goal statement planner subsection describes initial access plan generated second subsection describes plan converted appropriate subqueries 
generating access plan databases quite large signi cant di erence ciency di erent possible plans query 
nd subqueries implemented ciently possible 
planner take account cost accessing di erent databases cost retrieving intermediate results cost combining intermediate results produce nal results 
addition databases distributed di erent machines di erent sites potential parallelism generate subqueries issued concurrently 
task planner determine ordering various accesses databases 
course executing task selects databases extract information 
ordering determined analyzing steps plan query generating values variables steps ltering possible values 
step depends information produced step done correct order 
prodigy system described section form subqueries order 
problem cast set prodigy operators original semantic query constitutes goal planner 
straightforward process reformulated example query described section mapped prodigy goal planner shown 
note language longer loom 
query annotated additional information indicating concept relation comparison 
set operators planner shown 
rst operator retrieve concept simply maps concept database retrieve desired information 
operators generate values filter values compare values determine constraints order accesses individual databases 
remaining operators query query delimit operations performed individual database 
illustration retrieve concept operator shown 
operator speci es set preconditions true order apply operator 
case preconditions information concept operator purpose retrieve concept retrieves information particular database 
generate values uses relation generate values variable 
filter values uses relation lter values variable 
compare values performs comparison 
query indicates query databases 
query indicates query 
operators planning query retrieve concept params pred object db preconds database pred db open db db effects add pred object add available object db operator retrieving concept database directly available database database opened 
database opened retrieval planner create subgoal doing insert query operation 
retrieve concept operator ects 
rst speci es information concept available second speci es database information available 
system generates plan achieve goal selecting operators achieve goal conditions 
preconditions selected operator hold system recursively achieve preconditions 
system achieved goal conditions plan retrieving information satisfy initial query 
resulting plan speci es databases satisfy query constraints order information retrieved 
prodigy initially produces totally ordered plan retrieving information 
plan converted partially ordered set plan steps free unnecessary ordering constraints 
operator preconditions database access plan explicitly states conditions operator depends 
algorithm veloso totally ordered plan partially ordered plan de nitions operators 
algorithm polynomial length plan 
resulting partially ordered plan shown 
compare values afsc port storage port generate values filter values afsc port rail port query afsc retrieve concept afsc sea port port query afsc afsc port geoloc code port geocode generate values afsc port name port name generate values query loom query compare values loom geocode geocode sims geo geoloc geoloc code geoloc geocode generate values query geo retrieve concept geo geoloc geoloc query geo geo geoloc country name geoloc germany filter values preliminary sims plan example query subquery formation final sims plan example query second step query planning process formulate actual subqueries passed lim eventually translated database queries 
lim takes care details need worry access languages individual databases locations need formulate loom queries refer information database 
lim dbmss individual databases responsible selecting appropriate access paths locally optimizing query database discuss global optimization section 
subqueries formed grouping steps original plan 
relatively straightforward process aided presence query query steps plan graph 
grouping done combining nodes plan partial order produce nal partial order subqueries 
subqueries example problem shown 
shows implement original query operations necessary 
rst accesses separate databases done parallel 
third operation comparison loom results subqueries 
step complete 
query plan reformulation constructing plan retrieving information part problem 
important consideration mapping initial query set subqueries total time take execute subqueries 
approach reducing cost search reformulations query access plan reduce 
database management systems dbmss perform syntactic query reformulation 
leave task respective dbms focus global semantic query reformulation 
idea transform query resulting planning process semantically equivalent executed ciently 
consider planned query illustrated 
nal step query comparing geographic location codes geocode geocode quite costly cost comparison proportional square potentially large number intermediate data items 
comparison performed loom highly optimized state art dbmss 
variety query reformulated reduce eliminate cost step 
example knowledge contents databases augment earlier subqueries intermediate information generated 
knowledge domain transform subquery equivalent ciently executed 
approach problem di ers related semantic query reformulation important respect rely explicit heuristics database implementation guide search reformulations combinatorially large space potential reformulated subqueries 
algorithm considers possible reformulations ring applicable rules collecting candidate constraints inferred set 
select cient setof constraints inferred set form reformulated subqueries 
algorithm exible cient results rule ring turn useful information extending subquery reformulation reformulation entire query plan 
related reformulates single database queries 
describe principle semantic reformulation knowledge performing reformulation reformulation algorithms subqueries query plans 
reformulation subqueries subquery reformulation problem analogous problem semantic query optimization single database queries previous 
goal query reformulation reformulation search expensive query space semantically equivalent queries original 
queries de ned semantically equivalent return identical answers contents database 
alternative de nition semantic equivalence requires queries return identical answers contents database de nition limit semantic integrity constraints available 
restrictive de nition semantic integrity requires system updates learned knowledge databases change 
reformulation query logical inference database abstractions abstracted knowledge contents relevant databases 
database abstractions describe databases terms set closed formulas rst order logic 
formulas describe database sense true regard instances database 
de ne classes formulas range information propositions assert value range database attributes rules implications arbitrary number range propositions antecedent side range proposition consequent side 
shows small set database abstractions 
formulas variables implicitly universally quanti ed 
range information geo geoloc country name france taiwan japan italy germany afsc port geocode afsc port storage rules geo geoloc country name germany geo geoloc country code frg geo geoloc country code frg geo geoloc country name germany geo geoloc country code frg geo geoloc latitude afsc port rail afsc port geocode geo geoloc longitude geo geoloc latitude geo geoloc country code frg example database abstractions subq retrieve geoloc geocode geo geoloc geoloc geo geoloc geocode geoloc geocode geo geoloc country name geoloc germany subq retrieve geoloc geocode geo geoloc geoloc geo geoloc geocode geoloc geocode geo geoloc country code geoloc frg subq retrieve geoloc geocode geo geoloc geoloc geo geoloc geocode geoloc geocode geo geoloc country code geoloc frg geo geoloc latitude geoloc latitude latitude latitude equivalent subqueries rst rules state instances value attribute country name germany value attribute country code frg 
rules reformulate subquery subq equivalent subquery subq replacing constraint geo geoloc country name constraint geoloc country code 
inversely reformulate subq subq rules 
subquery set range interaction constraints reformulation operators return semantically equivalent query range re nement range information proposition states values attribute range range constraint ofa constrains values range re ne range constraint replacing constraining range subq reformulation subquery db knowledge cost model refine range constraints subquery refuted return nil applicable rules db knowledge subquery refuted return nil add inferred set add dependency list inferred set order cost indexed dependency list delete subquery delete dependency list replace dependency list return reformulated subquery inferred set 
subquery reformulation algorithm constraint addition rule subset constraints implies add constraint constraint deletion rule subset constraints implies implies delete subquery refutation rule subset constraints implies query exists range constraint implies assert return nil 
replacing constraints treated combination addition deletion 
note reformulation operators lead cient versions subquery 
knowledge access cost attributes required guide search 
example suppose database index placed attribute geo geoloc country name 
case reformulating subq subq reduce cost size database amount data retrieved 
geo geoloc country name geo geoloc country code indexed prefer lower cost short string attribute geo geoloc country code 
case reformulating subq subq reasonable 
shows subquery reformulation algorithm 
explain algorithm subq reformulation reformulates subquery subq lower query query plan 
input arguments algorithm subquery reformulated database abstractions cost model 
rst step algorithm re ne range constraints 
range constraint subq geo geoloc country name constrained value germany range possible values see rst formula range information constraint remains unchanged 
second step match applicable rules set database abstractions reformulation operators de ned 
rst rule matched red subq get additional constraint geo geoloc country code geoloc frg added inferred set 
second third rules matched additional constraint country code 
constraints geo geoloc latitude geo geoloc country name added inferred set 
third step select constraints inferred set delete subquery 
selection constraint relative estimated execution cost computed thetype constraints range constraint interaction constraint type attribute values integer string length indexed 
attribute geo geoloc country name deleted long string type expensive 
expensive constraint attribute geo geoloc country code 
preserved cause constraint geoloc country name just deleted 
constraint geo geoloc latitude kept indexed attribute improve ciency subquery 
algorithm returns reformulated subquery subq shown inferred set reformulating succeeding subqueries query plan 
worst case complexity reformulation mn maximum length antecedent rules greatest number constraints partially reformulated query number original constraints plus number added constraints nal selection size db knowledge 
average case complexity smaller worst case estimation 
mn dominating factor complexity kept manageable size 
complexity analysis assumes system matches database abstractions linear search 
avery large set database abstractions reformulation costly 
avoid problem plan adopt sophisticated rule match algorithm rete algorithm improve algorithm ciency 
reformulation query plans reformulate subquery query plan subquery reformulation algorithm improve ciency 
expensive aspect multidatabase query processing intermediate data 
example query plan constraint nal subqueries involves variables geocode geocode bound preceding subqueries 
reformulate preceding subqueries retrieve data instances possibly satisfying constraint geocode geocode nal subquery intermediate data reduced 
requires query plan reformulation algorithm able propagate constraints data ow paths query plan 
query plan reformulation algorithm de ned achieves updating database abstractions rearranging constraints 
explain algorithm query plan 
algorithm takes input arguments query plan database abstractions cost model 
algorithm reformulates subquery partial order data ow order speci ed plan subq reformulation 
addition database abstractions updated inferred set returned subq reformulation propagate constraints subqueries 
example second formula initial range information replaced afsc port geocode consequent condition fourth rule 
algorithm uses updated range information reformulated sims plan example query reformulate nal subquery reduces possible values 
addition constraint afsc port rail port upper subquery propagated data ow path succeeding subquery 
updated range information geocode available subquery reformulation algorithm infer constraint geocode geocode new constraint member geocode 
example variable bound geo geoloc geocode geoloc geocode lower subquery 
algorithm insert new constraint geocode subquery 
way constraints afsc port rail port geocode geocode propagated back data ow lower subquery 
process new constraint insertion referred constraint rearrangement 
nal reformulated query plan shown 
query plan cient returns answer original 
example lower subquery cient new constraint indexed attribute geo geoloc latitude subq reformulation 
intermediate data items reduced new constraint attribute geo geoloc geocode 
logical rationale new constraint derived constraints subqueries afsc port rail port geocode geocode fourth rule database abstractions 
query planning time sec reformulation time rules red times query exec 
time query exec 
time total elapsed time total elapsed time intermediate data intermediate data reformulation 
reformulation 
table experimental results reformulation sr mn number subqueries query plan mn cost subq reformulation actual queries relatively small dominating factor cost subquery reformulation mn size database abstractions important factor shown section 
manageable size database abstractions algorithms cient neglected total cost multidatabase retrieval 
earliest query reformulation referred semantic query optimization applied single database query processing domain system called 
contrast syntactic query optimization widely studied database community uses rules semantic integrity constraint database background knowledge reformulate query 
heuristics select reformulation operators rules reformulate query hill climbing manner 
reformulation algorithm require heuristic control exible 
algorithm utilizes database abstractions greatest possible extent hill climbing searches local optimum 
experimental results reformulation table provides statistical data concerning preliminary experimental results query plan reformulation algorithm 
experiment sims system connected remote oracle databases 
databases consists tables instances database consists tables instances 
queries selected set sql queries constructed original users databases 
rst queries single database queries multidatabase queries 
initial results indicate algorithm reduce total cost retrieval substantially 
multidatabase queries amount data reduced signi cantly 
overheads reformulation included total execution time relatively small compared cost executing queries 
system database abstraction rules experiment 
rules prepared compiling databases 
compiling procedure summarizes range relation database extracting minimum maximum sample sims interface screen values numerical relations enumerating possible values string type relations 
number possible values exceeds threshold range information discarded 
rules prepared semi automatic learning algorithm similar kid 
algorithm takes user input condition learns set rules form database 
algorithm retrieves data satisfy condition compiles data developing automatic learning algorithm driven example queries 
plan inductive learning identify costly aspects example subqueries propose candidate rules learn re ne candidate rules desired 
previous automatically derives content knowledge proposed siegel 
approach di ers theirs driven need reformulation example xed set heuristics exible regard various database implementations 
necessary case databases integrated sims usually heterogeneous 
sims interface intention user view sims black box allows user query multiple sources information single source 
scenario important issue ease user pose queries system receive 
exact terms model developer di er user may familiar important developer model accessible user 
stressed importance providing easy interface posing queries allows user convenient access model help construction query 
time important model constructed accurately developer 
model de nes application domain ontology user sims 
model builder need able build model domain needs able connect terms domain model corresponding terms database model 
order build model containing hundreds possibly thousands concepts essential model builder tools view models 
model builder needs tools help connect models fragments 
common need users model builders way viewing model 
sims models loom models subsumption hierarchy concepts logical visual representation graph 
subsumption hierarchy shows part de nition model relations show subconcept di ers superconcept usually necessary show roles 
graph shows concepts roles concepts ranges 
sims dictate single mode interaction 
believe full range underlying user interface management modalities available user 
commands issued mouse gestures applied desired objects menu commands 
user interface management system presentation user interface system 
query interface sims accessed user query interface 
central ability pose query knowledge terms domain de ned 
sims query interface provide user aid manner forms query input facility 
access models graph domain database models 
ability specify terms query clicking nodes graph 
intelligent defaulting automatic lling appropriate variable names sub query 
model building interface domain model de nes ontology domain terms relations query various information sources 
de nes expressiveness domain sims reformulating queries 
domain model realistic application easily contain hundreds concepts relations depending complexity application get hand fast especially created text editor 
time concepts similar slightly modi ed copies existing subconcepts concepts tedious enter 
ease model building process provide tools editors form editor knowledgeable terms allowable inputs 
text editor direct manual entry modi cation de nitions 
interactive gesture editing nodes modi ed added deleted clicking mouse relevant node 
graph navigation aids panning node hiding node centering 
describes system ciently accessing integrating information multiple information sources databases knowledge bases 
various information sources integrated loom knowledge representation language 
system requires model application domain model contents information sources 
query system generates executes plan accessing appropriate information sources 
executing query system rst reformulates individual subqueries minimize cost data processed 
subqueries executed exploiting parallelism plan 
sims currently integrates information data stored oracle databases information stored loom knowledge base 
system uses loom interface manager lim retrieve data oracle databases processes data loom 
plan selecting accessing various information sources generated prodigy planning system 
resulting plan reformulated set special purpose algorithms semantic query optimization multiple database queries 
acknowledgments manuela veloso providing code generating partial orders 
lim project providing databases database models sample queries 
arens 
services information management decision support 
proceedings annual ai systems government conference george washington university washington dc 
arens craig knoblock 
planning reformulating queries semantically modeled systems 
proceedings international conference information knowledge management baltimore md 
blanco illarramendi go ni 
terminological system integrate relational databases 
facultad de informatica universidad del pais vasco san sebastian spain 
brachman schmolze 
overview kl knowledge representation system 
cognitive science 
cai nick cercone jiawei han 
learning relational databases attribute oriented approach 
computational intelligence 
jaime carbonell craig knoblock steven minton 
prodigy integrated architecture planning learning 
kurt vanlehn editor architectures intelligence pages 
lawrence erlbaum hillsdale nj 
chakravarthy john jack minker 
logic approach semantic query optimization 
acm transactions database systems 
chan sy stephen fox wen te lin anil daniel ries 
storage access support semantic data model 
proceedings th international conference onvery large data bases pages large database endowment saratoga ca 
christine michael huhns wei min shen 
resource integration large knowledge base carnot 
ieee computer pages december 
forgy 
rete fast algorithm pattern object pattern matching problem 
arti cial intelligence pages 
david haussler 
quantifying inductive bias ai learning algorithms valiant learning framework 
arti cial intelligence 
hull king 
semantic database modeling survey applications research issues 
acm computing surveys 
illarramendi blanco go ni 
step integrate data knowledge bases 
facultad de informatica universidad del pais vasco san sebastian spain 
jarke koch 
query optimization database systems 
acm computer surveys 
jonathan jay king 
query optimization semantic reasoning 
phd thesis stanford university department computer science 
lenat guha 
building large knowledge systems representation inference cyc project 
addison wesley reading ma 
macgregor 
deductive pattern matcher 
proceedings aaai national conference onarti cial intelligence st paul mn 
macgregor 
evolving technology classi cation knowledge representation systems 
john sowa editor principles semantic networks explorations representation knowledge 
morgan kaufmann 
donald mckay timothy finin anthony hare 
intelligent database interface integrating ai database systems 
aaai proceedings eighth national conference onarti cial intelligence 
michalski 
theory methodology inductive learning 
machine learning arti cial intelligence approach volume pages 
morgan kaufmann publishers los altos ca 
steven minton jaime carbonell craig knoblock daniel kuokka oren etzioni yolanda gil 
explanation learning problem solving perspective 
arti cial intelligence 
mike papazoglou 
organizational framework cooperating intelligent information systems 
international journal intelligent cooperative information systems 
piatetsky shapiro 
discovery analysis presentation strong rules 
piatetsky shapiro editor knowledge discovery databases pages 
mit press 
reddy prasad reddy 
query processing heterogeneous distributed database management systems 
gupta editor integration information systems bridging heterogeneous databases pages 
ieee press ny 
michael siegel 
automatic rule derivation semantic query optimization 
larry kerschberg editor proceedings second international conference expert database systems pages 
george mason foundation fairfax va 
shalom tsur carlo zaniolo 
implementation gem supporting semantic data model relational back 
sigmod international conference management data pages acm new york 
manuela veloso 
nonlinear problem solving intelligent 
technical report cmu cs school computer science carnegie mellon university pittsburgh pa 

