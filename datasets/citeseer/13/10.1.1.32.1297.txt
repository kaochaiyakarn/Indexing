time identification low memory serge laboratoire informatique de ecole normale sup erieure research group affiliated cnrs rue ulm paris cedex france describe practical cryptosystem authentication tree 
extension ralph merkle results 
security system depends assumptions way function 
cryptosystem allows interactive proofs knowledge keys 
prove identity sign message 
efficient implementation done low cost smart card 
cryptosystem alternative zero knowledge algorithms 
notion authentication tree defined 
allows authenticate values taken directory 
list values assign values leaves tree 
collision free hash function propagate values leaves root tree 
assume value root authenticated authenticate value tree producing values authentication path see 
just values assigned brothers ancestors node 
authentication trees achieve signature scheme 
diffie lamport scheme 
scheme time signature scheme 
delta delta delta delta delta delta delta delta delta delta delta delta ak ak ak ak omega omega omega omega oe omega omega omega omega oe gamma gamma gamma gamma gamma gamma value authenticate values reveal delta delta delta ak omega omega omega omega oe gamma gamma gamma gamma gamma gamma authentication binary tree needs set keys sign message 
time signature scheme needs sets keys messages sign 
reason need authentication tree authenticate keys 
achieve cryptosystem define authentication tree levels top bottom ffl level tree leaf corresponds user authenticate users ffl user second level tree leaf corresponds set keys transaction ffl set keys third level tree authenticate key 
third level tree compute values quickly hash function 
level tree store permanently values authentication path need 
second level tree compute successively authentication paths 
wish sign messages value registers transaction 
time needed compute authentication path number values authentication path 
compute memory log keep values memory log path regeneration algorithm proposed get log exp log log obtain family algorithms complexity vary figures log log log exp log log log exp log log log reduce memory requirement factor log log asymptotic evaluation 
practice need may reduce memory requirement factor quite significant applications 
scheme settings signature 
interactive proof knowledge scheme proposed 
zero knowledge scheme time proof knowledge scheme 
scheme arbitrary security parameter path regeneration algorithm obtain practical cryptosystem 
notations assume tree node denoted word alphabet non negative integers 
root denoted empty word node degree ff denoted word words ff gamma represent ordered list sons assume collision free hash function assignation oe map set leaves domain 
recursively define map oe set nodes oe 
oe oe oe ff gamma authenticate oe gamma give values oe gamma assume function satisfies damgard property 
gamma define hash values get function 
property useful 
way function section 
pseudo random generator 
assume set related cryptographic tools built algorithms implementation efficient 
assume hashing values costs time computing values complexity 
diffie lamport scheme diffie lamport scheme time signature scheme 
assume message sign 
message coded bits assume set secret keys fk sg 
values assumed public 
signature message set keys keys leaves authentication tree authenticated signature message set cheater gets authenticated signature forge signature message coded monotone code code different codewords exists sure valid codeword 
proposed code set phi 
code consists appending weight message codeword 
code proposed set theorem shows code shortest monotone binary code cardinality 
main problem exhibit efficient coding scheme reason abandoned 
improvement described 
simply consists larger alphabet code 
codewords coded alphabet set integers fi gamma base fi assume values fi gamma public authenticated signature set 
verify signature apply fi gamma gamma times get public keys 
monotone code reason 
set words bs fi gamma 
difficult exhibit efficient coding scheme 
get rid difficulty algorithm signatures interactive proofs 
time proof knowledge scheme assume level authentication tree described 
level assignation oe original set keys equivalent 
denote 
prover verifier new fb random oe fb ff identification scheme level leaf corresponds user identity id second level tree 
define oe 
id oe root authenticate identity user value assigned root tree 
second level leaf corresponds ith interactive proof third level tree define oe oe root third level tree simple 
consists root sons leaves 
leaf corresponds public key 
define oe fi gamma fi defined previous section 
oe 
fi gamma fi gamma fi gamma user secret key may prove user identity id prove knows set keys fk sg prover chooses verifier chooses digits base fi bs fi gamma prover reveals protocol illustrated 
protocol prover proves knowledge assumed prove knowledge protocol achieve signature scheme usual method simulate verifier pseudorandom generator fed message sign 
usually security required signature greater security required interactive protocol 
order sign message increase security scheme 
fi fis gamma possible couples fi fact corresponds security unit 
user fixed number security units likes cryptographic operations security required 
proof identity costs unit signature costs units 
prover uses knowledge cheater set bs fi gamma cheater chooses index probability able answer challenge verifier inverse number possible list security parameter scheme 
get security choose fi 
practical applications 
security transactions shops prover physically 
sign security units 
table shows combination fi security greater 
time required compute hash value fi gamma fis gamma units assumptions 
exactly complexity oe minimize security 
choose fi 
get security notice corresponds cost security represents money unit coin 
give coin give 
proof gave coin 
cheater gave coin people proofs give combinations probability depends security parameter 
combinations prove cheater gave information allowed 
proof cheated 
imagine achieve electronic cash system cryptosystem 
path regeneration algorithm section denote second level tree 
assume balanced tree degree ff depth number value store constant 
oe denote assignation leaf corresponds transaction 
algorithm describe shows visit computing values authentication path 
authentication value leaf gamma consists revealing values oe gamma damgard property remove set values oe gamma keep hash value 
define oe gamma 
oe gamma oe gamma gamma hashed value left brothers gamma authentication consists revealing values oe gamma values oe gamma 
define oe gamma oe gamma oe oe gamma meaning formulae explained 
denotes successor base ff 
denotes node immediately right values ones stored memory visit tree 
define function acc acc function regenerate stored values accumulators 
accumulator compute hashed value node hashing values leftmost son rightmost son 
order accumulate value new son function acc 
compute oe gamma need gamma gamma accumulators tree floor 
show algorithm described path regeneration algorithm refreshes stored values incrementing life authentication tree assume values authenticate leaf 
initialize stored values step 
step operations leaf time interactive proof scheme instance 
gamma 
initialize ff 
visit authenticate oe 
ff gamma 
gamma ff gamma 
gamma acc ap 
gamma gamma gamma oe gamma gamma 
gamma gamma gamma acc gamma gamma oe gamma gamma 
gamma downto gamma gamma acc 
gamma 
go 
path regeneration algorithm example path regeneration authenticate oe 
simply consists giving values values 
steps regenerate stored values algorithm oe computed accumulators accumulator floor tree 
visit leaf leaves accumulated 
accumulators authentication floor tree set window ff nodes leftmost gamma see 
node useful anymore window shifted right see step gamma step 
order shift window compute value gamma ff accumulators gamma 
step compute index highest floor window shifted 
useful accumulator modified step window lowest floor shifted step eventual window shifted step 
steps accumulators modified 
lowest ones modified computation oe step 
ones modified lower accumulators step 
denote computation time number values reveal order authenticate oe number registers required store values interested average complexity exp exp maximum complexity max max 
assumptions time compute value time unit 
denote time needed compute value oe 
exp gamma gamma gamma ff gamma max gamma gamma exp ff gamma ff max ff gamma nff gamma ff related relation ff number leaves tree denotes time reveal value transmission time authentication path regeneration cost prove log gamma choice ff corresponds smallest value smallest possible corresponds ff implicit equation ff log ff gamma gamma log log ff gamma obtained respect ff expression ff corresponds ff log log log log log log choose favorite ff log log log achieve space time prefer 
obtain family algorithms complexity varies log exp log log log log log exp log log log exp log log log shows combinations ff larger 
assume corresponds fi section transmission byte value bps assume requires ms 
actual parameters low cost smart card implemented software way function 
shows max minimal ff 
corresponds low memory bytes assume value byte value bytes binary trees 
program achieves path ff max exp exp max exp different combinations ff ff regeneration algorithm simple require space rom 
average time compute transmit authenticating values ms 
implementation algorithm parameters able security units 
assume session needs security units authenticate sign message sessions month smart card years quite expected life smart card 
hardware way functions get better results 
authentication tree practical way authenticate value large directory 
requires small file read prover requires computations verifier 
path regeneration algorithm efficient algorithm visit directory computing values authentication paths 
allows achieve time cryptographic algorithms time algorithm needs time authenticated key 
keys put directory authentication path visit 
time interactive proof scheme authenticate sign messages 
consists revealing information key able arbitrary security parameter 
prove key times revealed information scheme achieve electronic cash systems 
possible achieve efficiently systems low cost smart cards 
acknowledgment card international particularly david having encouraged 
jacques stern achieved 
merkle certified digital signature advances cryptology crypto springer verlag 
merkle protocols public key cryptosystems proc 
ieee symp 
security privacy 
diffie hellman new directions cryptography ieee transaction information theory vol 

lamport constructing digital signatures way function technical report csl sri intl 
