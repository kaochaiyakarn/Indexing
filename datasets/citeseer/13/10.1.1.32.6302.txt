survey paraconsistent semantics logic programs carlos viegas dam asio lu pereira universidade rua da polit lisboa portugal cd di fct unl pt centro de universidade nova de lisboa monte da portugal lmp di fct unl pt 
chapter motivate paraconsistency survey salient paraconsistent semantics extended logic programs briefly defined explained 
semantics accompanied multi valued model theory giving new perspective 
survey presents new results regarding embedding part semantics normal logic programs wellfounded semantics partial stable model semantics stationary semantics stable model semantics 
furthermore concise recapitulation related paraconsistent formalisms 
reader assumed knowledge semantics normal logic programs 
believe comprehensive coverage topic stands attained 
contribution volume consists giving logic programmer view handling inconsistency 
semantics overview touch aspects implementing reasoning presence contradiction 
logic programming shown wide representing knowledge 
fact important non monotonic formalisms instance default logic 
autoepistemic logics counterpart semantics logic programming side logic programming turned vehicle implementing exploring important aspects artificial intelligence identifying new problems 
strange lot logic programming community carried order understand integration paraconsistent reasoning logic programming 
justifies existence size reporting concisely fair possible growing area applied research 
overview modal logics default logics knowledge representation formalisms see chapters volume 
mechanism explicitly declaring falsity propositions available restricted language normal logic programs 
importance extending logic programming explicit form non classical negation usual default stressed deductive databases knowledge representation non monotonic reasoning 
recognized lately authors proposed enhanced language semantics 
extended logic programming came born 
study explicit form negation strong form compared classical negation 
explicit negation enables requires able reason detect contradictory information 
information normally incomplete contradictory 
remarked main ways dealing inconsistent information logic programs see chapter volume explosive approach program contradictory formula derived 
corresponds usual approach mathematical logic semantics extended logic programs 
belief revision approach program revised order regain consistency 
view adopted authors logic programming community 
necessarily require explicit paraconsistent semantics procedural program transforming revision operators suffice 
corresponds particular case view handling inconsistency defined introductory chapter volume paraconsistent approach accept contradictory information semantics perform reasoning tasks take account 
approach followed dozen semantics describe corresponds actual contradictions view besnard hunter 
approach sense dealing mathematical objects 
instance large knowledge base maintained updated different agents natural encounter inconsistencies database 
time inconsistency local part knowledge base shouldn affect independent information 
adopt explosive approach single contradiction discard entire knowledge base 

contradictory information due specification error fix debugging 
situations information provided contradictory corrected 
case rely belief revision techniques 
paraconsistent deductive mechanism necessary 
perform belief revision need case detect inconsistencies reasons supporting 
paraconsistent reasoning implicitly intermediate step attaining belief revision 
idea introducing paraconsistent reasoning logic programming fairly 
paraconsistent reasoning fundamental understanding human cognitive processes studied philosophical logic authors 
reader referred hunter chapter volume detailed discussion logical properties paraconsistent logics 
intuitions results brought logic programming setting mainly blair pearce subrahmanian wagner 
non classical explicit form negation logic programming led researchers address issue przymusinski sakama respect extensions founded answer sets semantics 
survey emphasize relationships semantics providing complete analysis 
prominent features singled large body examples 
try reduce semantics founded stable model semantics 
means readily implemented means program transformations existing implementations important semantics normal logic programs 
furthermore description semantics reported chapter complemented short analysis underlying multi valued logic theory 
important properties logics pointed sake comparison 
avoid full discussion logics 
believe presentation give outsider complete view done logic programming different perspectives 
plan chapter follows 
start motivating need paraconsistent semantics recourse examples 
discussing semantics definite extended logic programs occurrence default negation 
cover non monotonic semantics extended logic programs default negation founded semantics 
subsequent section engage similar study answer sets semantics 
proceed dissecting semantics advanced detecting support contradiction 
semantics covered chapters adhere actual contradictions view 
finish detailed overview section works logic programming follow enable potential contradictions view 
unfortunately consider survey detail extant semantics paraconsistent logic programs extended 
notable cases annotated logic programs extensions exception 
fitting semantics great detail 
section briefly describe important features related works 
collect section main comparative study 
purpose concerns semantics defined general disjunctive extended logic programs consider article disjunction free fragment 
motivating examples paraconsistency everyday life 
support argument examples realistic situations 
describe main problems requirements paraconsistent semantics 
syntax check definition definition 
reader acquainted order logic certainly understand examples 
interesting case point taxonomies incomplete information 
natural example knowledge animal world limited new species discovered regularly example 
consider simple minded common sensical rules identifying birds mammals warm animals having bill birds hairy warm animals mammals birds mammals vice versa birds fly mammals nurse offspring 
chunk knowledge represented extended logic program rules bird bill warm blood mammal hair warm blood mammal bird bird mammal lies bird nurses mammal information regarding cats ducks correctly filled gets expected results paraconsistent semantics extended logic programs 
just add program set facts obvious abbreviations hair warm blood bill warm blood relevant cats mammals cats nurse offspring cats birds fly 
hand ducks birds ducks fly ducks mammals nurse 
trip australia discover creatures named platypus lay eggs warm blood sport bill hairy 
obtain contradictions program containing facts hair warm blood bill program semantics extended logic programs provide information platypus mammals mammals platypus birds birds platypus fly nurse 
remarkable points example manifold 
contradictory information coexist safe information interfering particular relinquish information cats ducks introducing characteristics platypus 
second detect contradiction mammal bird predicates 
furthermore consequences predicates propagated aware knowledge platypus regarding nursing flying abilities open doubt supported contradiction 
third correct information covered program model platypus mammals fly nurse 
unsound introduce heuristic rule effect dropping objective default knowledge regarding platypus 
want retain nurse descendants discard ly 
taxonomy example clearly identifies desirable property semantics extended logic programs 
assume knowledge revised order consistently incorporate new information regarding platypus 
contradiction supported available desirable undesirable ones identified 
program revision declarative debugging prefer may performed problematic rule instances example bird bill warm blood devised declarative debugging techniques logic programs basis paraconsistent semantics contradiction removal methods 
reader referred definitions techniques 
manifest discussion supported contradiction desirable avoided discarded contain necessary information identifying fixing problem 
paraconsistency evaluate pros cons possible situations take appropriate measures contingencies 
particularly relevant representing medical knowledge 
example 
patient arrives hospital urgency symptoms signs sudden pain abdominal signs irritation 
symptoms common acute 
requires surgery solely therapeutic treatment 
approximate rules diagnosing conditions doctor medicine ant dias ribeiro hospital dos cov oes coimbra providing example 
mistakes entirely 
patient sudden pain abdominal signs irritation acute furthermore high levels vice versa exhibits manifestation situation patient take 
scenario represented extended logic program sudden pain abd irritation high sudden pain abd irritation surgery indication surgery indication surgery indication antagonist antagonist notice rules diagnosing default negation operator 
high inserted program rule applicable 
similar reasoning applicable second regarding manifestation 
assume physician uncertain regarding levels existence manifestation 
add program adds information high system known symptoms sudden pain abd irritation 
opinion results obtainable 
conclude patient suffers 
case sick person fed take 
recommended relies contradictory information surgery indication surgery indication 
problematic cases patient usually operated regardless 
possible situations test depends contradiction 
motivation paraconsistency important queries executable goal oriented fashion 
case desirable pay extra price allowing myocardial sake simplicity ignore situation 
paraconsistency 
second queries evaluated goal oriented fashion recommended test check consistency entire knowledge base contradictions dealt run time compile time advantage simplifying knowledge base updating 
global consistency enforced allowing paraconsistency help identifying reasons non intended 
restoring consistency carried computationally demanding second stage contradiction removal 
furthermore precise declarative meaning programs provided underlying semantics reluctant having consequences contradiction long distinguished ones 
noted keeping contradiction important knowledge representation significative information contradiction supported 
definite extended logic programs introduce language definite extended logic programs default negation monotonic extended logic programs semantics common denominator semantics examined survey 
related blair subrahmanian generalized horn programs wagner logic programs strong negation nelson paraconsistent constructive system gamma 
language fixpoint semantics usual sake simplicity loss generality restrict discussion possibly infinite propositional ground programs 
non ground program stands fully instantiated version set ground instances rules 
alphabet language programs set atoms 
atoms negated explicit negation symbol obtaining explicitly negated literals 
explicit complement set fa set objective literals 
definition 
definite extended logic program set rules form lm objective literals 
rule said fact denoted simply natural idea view definite extended logic programs way explicitly negated literals simply envisaged new atoms 
remarked approach put forth 
definition 
definite extended logic program 
model mp program obtained follows 
transform program definite logic program substituting occurrence objective literals respectively 
minimal model computed ordinary tp operator 

obtain model mp reverse mapping step transforming mp mp 
obvious semantics monotonic relies classical logic determine meaning program 
example 
consider classical birds example lies bird lies penguin bird penguin suppose facts bird tweety penguin fred added rules 
model mp program ff lies tweety bird tweety ff lies fred lies fred bird fred penguin fred notice corresponding classical theory literal entailed program ex principle 
arbitrary set new facts rules added program corresponding model superset 
behaviour justified monotonicity semantics 
recall besnard hunter introductory chapter volume identify schemas detecting presence contradiction theory scheme scheme scheme 
scheme says inconsistency arises formulas inferred 
scheme set elements language represent absurdity 
scheme relies existence negation operator capturing notion contradiction simultaneous truth formula negation represent inconsistency 
example face contradiction mp contains literal explicit negation corresponding adoption scheme contradiction conclude special proposition identifying contradiction particular objective literal scheme scheme enforced 
schemes semantics user explicitly program shown examples 
semantics compatible schemas 
example 
recall example volume 
consider language snow sung relation iff cases relation implemented definite extended logic program containing theory rules rain rain snow snow rain snow sun rain snow fact drop rules void 
example 
consider besnard hunter illustrating example combination schemes 
language coloured solid solid fool fool recall literals fool fool represent respectively contradiction literal coloured solid 
inference relation obey coloured fool solid fool logic programming rules implementing constraints fool coloured coloured fool solid solid examples worked similar fashion 
state main result 
important semantics surveyed coincide class definite extended logic programs 
theorem 
definite extended logic programs 
apart syntactical differences semantics reported wagner logic programs strong negation liberal reasoning isomorphic mp theorem fully characterizes semantics definite extended logic programs terms fixpoint semantics definition :10.1.1.38.904
model theoretic semantics order get better understanding underlying logic provide model theoretical characterization common semantics 
resort belnap valued logic depicted 
semantics providing meaning paraconsistent logic programs reported 
discuss approach detail section 
truth values stand respectively undetermined false true overdefined contradictory 
resort type representation synthetically characterize logics discussed chapter 
orderings defined truth ordering knowledge ordering 
axis oe oe oe oe axis oe oe oe oe 
interpretation connectives described tables 
conjunction operation corresponds meet truth ordering disjunction operation reflects join ordering 
negation operation obtained flipping diagram 
vertical axis 
differ belnap logic definition consequence relation associated implication connective table 
define propositional language logic usual notion interpretation mapping propositional symbols truth values case true table 
truth table negation table 
truth table conjunction 


table 
truth table disjunction 
table 
truth table implication 
fig 

belnap truth space generalization arbitrary formulas truth valuation 
designate logic 
interpretations ordered extension interpretations pointwise knowledge ordering 
translation definite extended logic programs logic theories immediate 
notion designated truth values logics define consequence relation 
definition 
interpretation corresponding 
arbitrary propositional formula 
say satisfies denoted iff ft set ft forms set designated truth values 
interpretation model theory iff satisfies formulas theory 
usual stands satisfy mark implication operator evaluates point definition ensure equivalences valid theorem 
interpretation 
iff iff iff characterize bit logic need clarify notion equivalence 
multi valued setting define natural notions equivalence truth value assignment consequence relation 
definition 
formulas language 
say iff interpretation hand equivalence holds interpretation iff false 
theorem 
formulas language 
mark theorem valid arbitrary valued logic defined truth value equality expressed means set designated truth values 
forms equivalence meta language level 
stated talk equivalence mean weaker form equivalences true similar ones holding classical logic 
fact easily show associative distributive commutative idempotent absorption double negation zero de morgan laws hold logic 
deduction theorem modus ponens hold 
logic defined classical 
instance excluded middle law contradiction valid scheme complied 
furthermore implication definable terms connectives contraposition laws obeyed modus disjunctive syllogism fail 
interestingly axioms propositional logic hold single exception 


corresponding rule negation natural deduction calculus 
negation intuitionistic elimination rules negation intuitionistic logic obeyed 
clearly logic da costa 
system excluded middle satisfied belnap original logic modus ponens sound rule 
details consult anthony hunter chapter volume 
small detour provide desired relationship logic definite extended logic programs 
theorem expresses correspondence consequence relation truth assignment propositional symbols 
theorem 
propositional symbol interpretation language containing iff iff iff iff definition properties see tables section chapter 
results theorem synthesized 
literal entailed interpretation iff maps 
explicit complement holds iff maps 
remaining chapter logics hand side conveying information relating consequence relation truth valuation function 
fig 

correspondence consequence relation truth assignment theorem paves way defining isomorphism interpretations sets objective literals logic programming side 
relationship theorem 
theorem 
definite extended logic program 
mp model definition iff interpretation model respect knowledge ordering arbitrary proposition language interpretation iff mp mp iff mp mp iff mp mp iff mp mp example 
consider definite extended logic program example 
model mapping lies tweety bird tweety penguin tweety lies fred bird fred penguin fred models program convey unsupported information instance lies tweety bird tweety penguin tweety lies fred bird fred penguin fred model minimal required theorem 
clearly knowledge regarding non penguins non bird entities expressed program 
unexpected penguin tweety bird fred entailed program model 
blair subrahmanian generalized horn programs section logic programming semantics defined 
historically semantics logic programs account problems handling contradiction coherent manner resorts valued logic 
authors emphasize need paraconsistent logic programming semantics means produce declarative semantics arbitrary sets clauses 
introduced valued logic described previous subsection knowledge ordering main contribution discussion definition monotonic fixpoint operator respect providing direct way compute model definite extended logic program 
negation operation adopted defined table 
restrict comparisons definitions ground case 
definition 
generalized horn program ghp set gh clauses form objective literals truth values annotations original definition ghp finite set possibly non ground 
definition interpretation usual function herbrand base set truth values forming complete lattice ordered extension interpretations pointwise order notion satisfaction formula interpretation usual exception annotated literals 
interpretation satisfies iff satisfies iff satisfies 
negated annotated literal replaced program 
semantics generalized horn program model ordering model determined continuous operator complete lattice interpretations natural generalization tp 
definition 
suppose ghp 
ghp mapping herbrand interpretations herbrand interpretations defined ghp ja words truth value upper bound gh clauses body satisfied mark 
fact authors consider annotated literals rules 
literal annotated iff results easily carry general syntax 
example 
consider program computation fixpoint proceeds follows ghp ghp 
ghp ghp 
relationship definite extended logic programs definition definition 
ghp consider arbitrary gh clause form body gh clause transformed conjunction body objective literals replacing annotated literal 
annotated literals replaced conjunction literals satisfied interpretation 
definite extended logic program ghp constructed gh clauses follows 
add ghp add rule body body 
add rules program 
example 
ghp 

resulting transformed extended logic program ghp transformation definition similar appearing defined generalized horn programs 
essentially wagner consider case body literals annotated 
theorem 
ghp lfp ghp ghp equivalence holds iff iff iff iff example 
consider translation ghp example model fp ghp example 
course converse question naturally arises able transform definite extended logic programs generalized horn programs answer 
result follows previous theorem clear literals annotated correspondence definite extended logic programs 
immediate corollary realize ghp transformed equivalent ghp occurrences literals annotated corresponding annotated programs 
furthermore operator ghp readily applied computation interpretation definite extended logic program inverting ghp transformation definition 
operational mechanism necessary implement blair subrahmanian semantics 
article devoted study sld proof procedure semantics 
provide complex definitions weak results regarding soundness completeness 
translating logic programs derivation procedure sld readily implementable 
wagner logic programs strong negation wagner supporter explicit negation constructive paraconsistent logics logic programming 
main motivating works nelson constructive logic strong negation belnap system levesque vivid reasoning research programme 
book proposals extending logic programming strong negation nelson sense explored form vivid rule knowledge bases 
system corresponds shall see previously named definite extended logic programs 
definition 
language logic programs strong negation consists logical operator symbols standing conjunction disjunction strong negation respectively 
logic program strong negation set clauses form atom strong negation arbitrary formula 
author assumes language finite number atoms function symbols 
usual loss generality restrict discussion ground instantiation logic program strong negation 
furthermore assume premise implicational formula conjunction literals 
shown wagner program full syntax transformed equivalent restricted format 
definition intended semantics class programs quite simple notion partial models definition 
partial herbrand interpretation omega ff pair sets atoms contains true atoms false ones 
partial interpretation gives rise model relation iff iff iff iff iff jf iff jf jg jf iff jf jg iff attentive reader notice similarities definition levesque logic implicit belief see meyer hoek chapter volume 
wagner define belief operator language 
definition model logic programs strong negation obtained describing intended meaning implication rule operator definition 
partial herbrand interpretation called model logic program pi strong negation symbolically pi pi implies model definition wagner showed logic program strong negation model pi property formula entailed model pi iff entailed pi semantics programs provided model pi surprising attentive reader notice immediately similarities definitions semantics definite extended logic programs section 
fact natural correspondence holds theorem 
pi extended logic program obtained logic program strong negation pi substituting literal form pi iff pi pi iff pi model theoretically defining semantics wagner tries give proof theoretic interpretation 
wagner characterizes special class logic programs designates founded semi wellfounded showing pi iff pi gamma implication free formula gamma paraconsistent system obtained nelson logic dropping axiom schema 
adopting non explosive behaviour face contradiction follows contradiction dropping scheme 
fact pi respect logic gamma known hold arbitrary definite extended logic programs theorem 
pi logic program strong negation literal language pi 
belongs pi iff pi gamma case definite extended logic programs objective literal consequences pi consequences nelson paraconsistent constructive logical system gamma logic provided section 
equivalent restriction nelson system gamma language definite extended logic programs 
results relating ordinary logic programming semantics constructive logics 
extended logic programs wfs semantics definite extended logic programming monotonic character nonmonotonic reasoning mechanism needed increase expressive power language 
usual default negation operator employed purpose 
start extending language extended logic programs default negation symbol applicable objective literals 
default literals form atomic proposition language alphabet 
set literals lit default negation set objective literals stands set comprised default negation 
definition 
extended logic program set rules form lm mn objective literals 
default negation box opens 
address section valued extended logic programming semantics section valued ones 
paraconsistent extensions founded semantics sakama extended founded semantics paraconsistent founded semantics explicit negation wfsx conclude studying wagner vivid knowledge bases liberal reasoning :10.1.1.38.904
sakama extended founded semantics przymusinski extended stable semantics attempt introduce explicit negation founded semantics przymusinski motivated gelfond lifschitz answer sets semantics 
semantics views explicitly negated literals simply new atoms 
przymusinski extended stable semantics definition discards inconsistent models contain atom corresponds adoption scheme scheme discussed volume 
sakama dropped scheme extended founded semantics obtaining paraconsistent version wfs extended logic programs 
original presentation semantics constructive definition wfs terms theta operator 
prefer declarative simpler definition equivalent definition 
definition 
extended logic program 
extended founded model mp program obtained follows 
transform program normal logic program replacing occurrences literals respectively 
obtain model mp undo mapping previous step respect resulting wfm 
example 
consider extended logic program extended founded model program bg 
mark belongs model 
probably interesting aspects sakama tentative model theoretical characterization 
author uses logic vii ginsberg define model theory version wfs logic vii introduced ginsberg represent default assumptions see 
reading truth values df dt respectively unk df dt fig 

ginsberg logic vii defined false default true default don care default false true contradictory consequence relation defined terms set designated truth values ft details consult definition 
underlying language logic theories extended operator 
definition negation operations table 
operation flips diagram vertical 
axis 
clearly default negation table 
truth table negations logic vii df dt dt df df dt extension classical negation dt df believe natural reading default negation operator regards mapping definite truth values default negations dt df 
fact say defined sakama true negation stick fundamental properties definition 
negation operator bilattice satisfy properties 


case double negation condition verified negation operator said weak 
intuition negations reverse degree truth preserve knowledge 
double negation law consider instance intuitionistic logic 
obviously defined table satisfy mandatory property 
conjunction disjunction operators usual meet join truth ordering 
implication defined logic order guarantee validity iff theorems classical logic valid vii 
excluded middle contraposition laws verified forms negation law contradiction valid explicit negation holds default negation de morgan laws hold implication connective definable terms classical relation 
furthermore modus invalid forms negation disjunctive syllogism holds vii default negation 
important property valid coherence principle formula defer discussion principle section 
fundamental equivalences classical logic true vii associative distributive commutative idempotent absorption double negation zero laws 
deduction theorem modus ponens hold 
furthermore negations interchangeable easily conclude vii classical logic intuitionistic logic da costa 
system 
interesting aspect logic vii difference notions equivalence 
immediate means distributive laws contradiction law default negation valid stronger form equivalence properties mentioned forms equivalence coincide 
relationship extended founded model vii interpretation theorem 
theorem 
extended founded model mp program construct vii interpretation follows arbitrary atom belong mp mp respectively respectively belong mp mp respectively mp df respectively dt 
interpretation vii model program relation patent 
valued logic natural logic 
believe valued better job wfs literal assigned logical values false undefined true 
means assign different combinations logical values pair literals correspond interpretations extended wellfounded semantics fg fnot ag fnot ag fnot ag fag ag fa ag fa ag ag combinations logical values grouping take place logic vii 
interpretations fag ag grouped respectively fa ag ag corresponding vii logical values true false 
undesirable lead odd behaviour shown example 
example 
consider extended logic programs ae oe assigned sakama extended founded semantics logical values false true respectively 
second program assigned truth value false oddly longer true default true 
semantically changed kept truth value 
paraconsistent founded semantics explicit negation semantics previous section see default negation explicit negation unrelated 
overcome situation new semantics extended logic programs proposed 
founded semantics explicit negation wfsx short embeds coherence principle providing natural missing link negations holds similarly 
example literal true entailed 
wfsx intuitive model bg obtained 
paraconsistent extension semantics wfsx proposed alternating fixpoint definition recapitulate 
recalling definition gelfond lifschitz gamma operator alternating fixpoint definition wfs wfsx wfsx definition 
extended program valued interpretation 
gl transformation program obtained removing rules containing default literal removing remaining default literals definition gamma mp impose coherence requirement alferes pereira resort version extended logic program 
definition 
semi normal version program obtained adding possibly empty body rule body default literal complement respect explicit negation 
semi normal version program introduces new anti monotonic operator gamma 
gamma denote gamma gamma denote gamma 
theorem 
operator gamma gamma monotonic arbitrary sets literals 
consequently program fixpoint gamma gamma defines semantics paraconsistent logic programs 
ensures semantics defined assigns meaning extended logic program 
definition 
extended logic program fixpoint gamma gamma hp gamma gamma paraconsistent partial stable model psm 
paraconsistent founded model wfm psm set inclusion order 
enforce consistency paraconsistent partial stable models alferes pereira need insist extra condition gamma verified guarantees objective literal simultaneously hold 
automatically rejects contradictory models true coherence entail corresponds simultaneous scheme scheme 
wfsx generalizes wfsx impose additional condition 
furthermore normal logic programs coincides wfs example 
extended logic program ae oe sequence determining fixpoint gamma gamma program fg gamma gamma fg gamma fa dg fa bg gamma gamma fa bg gamma fdg fa cg gamma gamma fa cg gamma fdg wfm fa dg 
distinguishing features wfsx enforce default consistency simultaneously true semantics 
example case literals due adoption coherence principle instance hold coherence hold 
return issue see usefulness detecting dependencies contradictory information 
consider useful program transformation wfsx normal programs wfs semantics preserves paraconsistent founded model psm achieved cost doubling program size computation 
main idea variant doubled program construction see doubles number rules program takes care computing gamma part gamma part definition :10.1.1.20.7217
extended logic program 
normal logic program gammat derived replacing rule new ones obtained 
atom replaced new rule default negated occurences objective literals subscripted tu objective literals second new rule default negated occurences objective literals subscripted objective literals tu furthermore head new rule added body 
difference doubled program construction extra default literal body rules second rule form 
note similarities second form semi normal program subscript distinct program parts computationally linked program divisions default negated literals 
example 
extended logic program resulting gamma tu transformed program tu tu tu tu tu tu tu tu tu rules literals subscripted tu derive literals obtained gamma steps ones subscripted ones obtained gamma gamma steps 
idea mind result straightforward theorem 
extended logic program 
equivalence holds arbitrary atom wfm iff wfm gammat wfm iff wfm gammat wfm iff tu wfm gammat wfm iff tu wfm gammat 
address main leveled original definition wellfounded semantics explicit negation regarding model theory 
definition logical implication operation truth functional literals viewed separate entities entails false follows truth values 
furthermore cases head rule assigned truth value body rule satisfied head rule explicitly false rule phenomenon known overriding see example 
due coherence principle considered awkward valued logic 
cases coherence intervene rule unsatisfiable showing non truth functional character model definition 
example 
consider extended logic program model program wfsx wfsx fnot bg undefinedness rule explicit falsity compare model obtained set simply fnot bg 
provided valued truth functional model theory wfsx ginsberg bilattices concept displayed 
df dt ii iii iv fig 

logic set truth values df dt ii iii 
consequence relation obtained definition letting designated truth values ii mean opinion undefinedness corresponds bottom element lattice knowledge ordering 
additional logical values correspond default falsity df default truth dt 
classical values degrees contradictory information 
truth value iv understood contradictory belief df dt 
higher truth values ii iii knowledge ordering understood truth plus contradictory belief falsity plus contradictory belief respectively 
contradictory truth value 
controversial say iv contradictory 
depends interpretation operator logic programming side 
works interpret belief falsity formally consequently respectively entail ba iv simultaneously believes falsity truth form inconsistency known paraconsistency literature epistemic contradiction raise problem conceptual point view 
works reading default negation operator simultaneous truth understood ba truth value iv believe truth falsity inconsistent insists logic programming side valued 
adhere interpretation operator accordance intuitive reading literals allows valued interpretations logic programs 
disjunction conjunction defined respectively meet join truth ordering left right bottom element top 
define negation operators truth table depicted table 
rationale finds degree table 
truth table negations logic df dt ii iii iv dt df iii ii iv knowledge conviction negation proposition exchanging roles counts counts respect 
axis 
operator determines negation proposition believed 
immediate negation operator weak negation operator sense definition 
rule implication valued defined iff designated truth values remarking feature set classical truths obeyed 
particular associative distributive commutative idempotent absorption zero de morgan laws hold logic double negation law explicit negation obeyed 
double negation law fails intuitionistic property theorem deduction theorem modus ponens hold 
interesting properties valid excluded middle principle contradiction law contraposition law classical definition implication terms fact properties desired paraconsistent logic 
furthermore modus disjunctive syllogism sound rules respect mention negation symbols interchangeable obviously coherence principle valid logics discussed coincide classical intuitionistic 
systems 
underlying model theory wfsx provided theorem theorem 
extended logic program partial paraconsistent stable model interpretation arbitrary atom language 
iff df iff dt iff iff iff iff ii iff iii iff iv iff model conclude proven 
appropriate extensions dix desirable strong weak properties semantics paraconsistent case obeyed wfsx strong principles exception cautious monotony verified wfsx natural new versions cautious monotony general logic programs set forth proven wfsx satisfies 
weak principles devised especially normal logic programming semantics natural extended language modified reflect general framework 
exception modularity equivalence weak model property mp extension properties adapted paraconsistent extended logic programming case 
wagner vivid knowledge bases liberal reasoning similarly done previous section definite extended logic programs wagner introduces alternatively non monotonic negation operator gamma names weak negation 
meaning weak negation operator defined extending model relations definition induced partial interpretation rules gammaf iff gamma iff notice rendering weak negation flavour negation failure gammaf true don partial interpretation stands problems immediately foreseeable 
partial interpretation gammaa weak negation valued 
furthermore impossible simultaneously gammaa true gamma gammaa 
definition vivid knowledge base 
vivid knowledge base set clauses form atom strong negation arbitrary formula constructed language defined logical operator symbols gamma 
possible transform arbitrary set rules form conjunction literals atoms strong negation atoms weakly negated literals 
vivid knowledge bases form wagner calls extended deductive databases 
loss generality restrict discussion 
valued normal logic programs single minimal model 
wagner tries define consequences 
set conjunction literals weakly negated literals literal gamma gamma gamma gamma gamma gammae gammae gammal gammal gammae form reasoning called liberal truth weak falsity strong negation complement affect truth weak falsity unfortunately syntactic restrictions enforced inference relation defined recursive manner assuming language function symbols 
example 
consider fa 
infinite derivations gammaa gamma gammad gammab gammac 
gammaa gamma gammaa 
avoid derivations guarantee unique preferred model obtained wagner imposes syntactic restrictions theories intended defined proof theoretically weak foundedness 
discards programs positive loops loops weak negation 
allows positive loops rejecting negative loops weak negation 
case weakly founded wagner defines concept perfect model immediate translation przymusinski perfect model notion setting 
notion wagner defines new inference system designate loop adequate respect perfect model mx mx iff loop inference system loop plus loop checking failing positive cycles 
furthermore founded loop iff translation weakly founded logic programs immediate usual isomorphism 
definition 
normal logic program constructed substituting occurrence gammaa gamma respectively true arbitrary atom 
immediately recognizable founded iff acyclic weakly founded iff locally stratified 
locally stratified unique perfect model equivalent founded model 
difficult see correspondence holds theorem 
weakly founded 
equivalences hold atom language mx iff wfm mx gammaa iff wfm mx iff wfm mx gamma iff wfm main wagner arrived semantics restricted case sakama extended founded semantics 
interesting wagner started paraconsistent constructive logics formally justifying ideas extended logic programming semantics 
unfortunately non weakly founded programs taken care find intuitions mathematical logic field justify valued extended logic programming semantics 
suggestion wagner consists extending partial interpretations sets df dt truth gammaa gamma checked testing respectively df dt condition required wagner default consistency df fg dt fg partial interpretation omega ff sense wagner equivalent place interpretation dt gamma df gamma set atoms underlying language 
coherence expressed condition dt df default consistency coherence entail fg form paraconsistency allowed 
liberal semantics coherence principle default consistency allow fg 
instance simultaneously belong weak negations gammaa gamma entailed 
general coherence principle obeyed pair literals true model 
sense wagner setting need override undefined literals mentioned earlier cf 
example construction undefined atoms 
valued wfsx semantics overriding desirable intuitive 
previous results coherence desired simple program transformation suffices impede transformation definition 
hand semantics interpretation weak negation pure negation failure assign semantics program obey coherence 
semantics assigns meaning extended logic program intuitive coherence principle disabled wanted 
opt second approach drop default consistency axiom think coherence fundamental default consistency allow form paraconsistency objective literals allow subjective ones extended logic programs semantics semantics mainstream extended logic programs originates answer sets semantics 
main feature holds 
wagner terminology weak negation interpretation default negation 
wagner liberal reasoning semantics overviewed section restricted class locally stratified programs 
discuss direct generalization answer sets semantics independently proposed authors stable environments weak answer sets paraconsistent stable models 
treat sakama inoue semi stable models assign meaning extended logic program coincide paraconsistent stable models exist 
shortly od semantics subrahmanian 
paraconsistent stable models start presenting generalization answer sets paraconsistent case proposed independently 
semantics defined disjunctive case restrict discussion disjunctive free programs 
purpose simplifying comparisons terminology term paraconsistent stable models follows interpretations sets objective literals 
prefer term paraconsistent answer sets 
definition 
extended logic program interpretation 
paraconsistent stable model shortly stable model iff gamma example 
consider program bg 
program single model fa ag coinciding paraconsistent founded model 
relationship wfs immediate established program transformation definition 
theorem 
extended logic program 
stable model iff fl ig partial stable model wfs semantics 
remarked paraconsistent stable models incomparable answer sets 
authors provide relationship semantics article 
uses program tr obtained adding extended logic program set axioms form arbitrary objective literals implementing rule answer set semantics 
stable models tr correspondence answer sets corresponds adoption scheme scheme described volume 
dropping scheme answer sets semantics gets paraconsistent stable models stable environments weak answer sets 
shown wfsx wfsx approximation answer sets semantics paraconsistent founded model contained intersection answer sets defined 
obviously paraconsistent founded model pair contradictory literals answer set exists set literals lit 
important notice paraconsistent founded model stable models general incomparable 
example 
consider extended logic program paraconsistent founded bg 
program exactly stable models fa ag bg 
stable model incomparable founded model 
notably coherence principle enforced sakama inoue disparate results 
example shows wfsx approximation stable models 
interesting property holds proposition 
extended logic program 
stable model paraconsistent partial stable model containing example 
consider program example 
psm interpretation fa bg 
notice stable model fa ag contained stable model coincides paraconsistent founded model program 
means simple arguments shown program wfs gives better limits intersection stable models original program wfsx semantics 
set literals answer set inclusions hold lfp gamma gamma stable models stable models gfp gamma gamma lfp gamma gamma answer sets answer sets gfp gamma gamma case lit answer set inclusion answer sets gfp gamma gamma longer valid 
interesting point inclusions pertaining stable models related fixpoints gamma gamma ones answer sets related fixpoints gamma gamma justification behaviour relies fact stable models obey coherence answer sets exceptional case programs having lit single answer set 
recall inner gamma step enforces coherence principle 
inclusions answer sets semantics destroyed case non coherent answer sets set literals 
programs stable models exist due semantics answer sets basis 
instance program stable models exist fa ag 
paraconsistent stable models inherits difficulties answer sets failure cumulativity rationality relevance 
bright side semantics important known relations constructive logics default theories autoepistemic logics stable models see 
mention paraconsistent stable models coincide wagner perfect model defined see section 
sakama inoue provide model theory extension incorporating default negation see 
logic iv connectives interpreted logic section 
truth table table 
clear default negation 
truth table default negation fined logic iv negation weak negation sense definition 
surprisingly analyse properties respect fig 

sakama inoue logic iv consequence relation induced designated truth values conclude behaves classical negation explain result consequences 
designation valued negation stable models answer sets fully justified 
agrees known result stable models normal logic program classical models corresponding propositional theory 
second simply classify unary operator negation looking truth table associated knowledge truth orderings 
set designated truth values primary influence set consequences derivable multi valued logic 
allows explain usual misunderstanding logic programming semantics underlying logic may monotonic resulting semantics 
fact point logic programming semantics single particular model models 
process involved may destroy monotonicity underlying model theory 
instance models completion normal logic program classical ones know resulting semantics negation failure non monotonic 
semi stable models overcome situations stable models exist sakama inoue define notion semi stable models 
main idea consists translating disjunctive extended logic programs positive disjunctive extended logic programs semantics restricted type programs 
comparability limit discussion case non disjunctive extended logic programs 
definition 
extended logic program 
epistemic transformation defined positive disjunctive extended logic program obtained replacing rule form lm lm ln free rules klm lm free rule included disjunctive rule different associated 
kl literals new atoms language reading believed meaning 
kl literals shared different rules program 
give semantics programs meaning disjunction heads integrity constraints defined 
sakama inoue split program construction achieve definition 
positive extended disjunctive program split program defined positive extended logic program obtained replacing disjunctive rule lm extended rules called split rules lm arbitrarily chosen non empty subset fl disjunctive rule 
possible model defined unique stable model split program different choices engender split programs 
example 
consider extended logic program example 
corresponding positive disjunctive program kb ka program split programs stable models 
corresponding possible models ka ag ka kb ag kb ag kb ag kb ka ag 
bunch possible models sakama inoue introduce preference criteria select define semi stable models extended logic program definition 
extended logic program ip minimal possible models interpretation ip said maximally canonical iff interpretation ip kl kl models maximally canonical interpretations ip literals removed 
corresponds set inclusion minimal models viewed positive disjunctive logic program 
example 
consider program example 
minimal possible models ka ag kb ag kb ag 
semi stable models fa ka ag fb kb ag corresponding respectively possible models case semi stable models isomorphic stable models program 
example 
program bg 
clearly stable models unique semi stable model 
minimization processes define semi stable models extended logic program 
usual disjunctive logic programming semantics selection minimal models 
second specific sakama inoue semantics 
authors show stable models canonical interpretations ip interpretations kl equivalently kl suppose simplicity single default negated literal body rule 
canonical condition guarantees false ka false body entailed head entailed true 
true integrity constraints literal true head rule entailed 
essentially conditions interpretation true canonical condition false integrity constraints literals 
clear second condition holding desirable 
stable models exist canonical condition satisfied 
idea accept models programs interpretations violate canonical condition defined semi stable models 
notice canonical interpretation maximally canonical smaller non canonical interpretation giving rise paraconsistent stable models case 
problem semi stable models non compliance coherence principle 
trivial example program fa ag having unique semi stable model ag contrast paraconsistent founded model fa ag 
treatment undefined literals semi stable models situations counter intuitive illustrated example example 
consider extended logic program fb cg 
unique semi stable model fb dg 
undefined true true 
semantics literals involved negative loop 
notice undefined value implying false strange normal logic program wfsx similar behaviour situations explicitly negated fact overriding undefined value 
occurs normal second assume add rule program 
semi stable models fnot dg fnot dg 
rule unrelated accept model undefined 
expect semi stable model single result behaved semantics 
treatment undefined literals semi stable models bit ad hoc program dependent 
semantics obey dix principles cumulativity rationality relevance 
expect paraconsistent semantics arbitrary extended logic programs answer sets defined terms maximal partial stable models preferred extensions program remarked valued logic exists ix provides model theory semi stable models 
logic ix isomorphic logic different interpretation default negation 
hasse diagram 
bf bt tcb fcb bt fig 

sakama inoue logic ix interpretation truth values follows bf bt denote believed false believed true accordance interpretation literals fcb tcb denote different degrees contradictory information means believed contradictory fcb tcb denote logic programs 
respectively true contradictory belief false contradictory belief remaining values correspond belnap ones undefined false true contradictory 
possible define truth tables negation operators implication sign 
truth tables isomorphic connectives logic supports naturalness approaches conjunction disjunction satisfaction 
essential difference operator 
natural way defining sakama operator appears table verifies double negation law de morgan laws respect consequence relation ix defined set designated ft tcb associative commutative idempotent 
truth table default negation logic ix bf bt 
fcb tcb tcb fcb 
bt bf absorption zero double negation de morgan laws hold logic ix 
forms negation interchangeable 
usual deduction theorem modus ponens hold 
excluded middle principle obeyed forms negation 
contradiction law obeyed default negation weaker form equivalence relation stronger ix invalid explicit negation 
modus invalid negations disjunction syllogism holds default explicit rendition 
referred coherence verified logic 
interesting consequence relation ix behaves valued negation operator 
definition implication operator different 
important fitting axioms cf 
definition negation operators interlaced bilattices obeyed ix negation operator reverse truth knowledge 
sakama negation operator reverses time 
instance bf tcb bf tcb tcb bf tcb bf notice due way defining truth table 
follows satisfaction double negation de morgan laws 
discussion stresses originality operator shown weak negation operator sense fitting 
sake completeness mapping semi stable models program corresponding ix interpretations 
theorem 
subset define ix interpretation follows atom language program lub bt ka bf semi stable model ix model theorem supports terminology particular interpretation literals semi stable models 
determined semantics 
semantics extended logic programs incorporating ideas stable models 
authors issues addressed extended logic programs reasoning inconsistency small inconsistency cause entire database rendered useless reasoning law excluded middle statement considered true 
reason implies implies 
able conclude reasoning cases know true know implies implies conclude conditions pacific accepted paraconsistent semantics enforcement law excluded middle explicit negation controversial 
semantics survey enforce axiom explicit negation 
motivating example example 
consider extended logic program masters credits thesis exam masters credits thesis exam masters credits thesis exam credits jim exam jim rules say student completed thesis passed comprehensive exam grade taken credits courses eligible masters degree 
third rule says students haven done thesis taken credits courses got comprehensive exam eligible masters degree 
jim taken credits course got exam 
clearly semantics section entail masters jim 
usual understand non ground program standing instantiated version 
handling situations tolerant inconsistency authors limit truth space logic upper truth values 
undetermined truth value discarded enforcing law excluded middle 
notion interpretation model formula program obvious restriction denoted od interpretation od model definite extended logic programs iff rule od definition 
definite extended logic program 
determined semantics set disjunction objective literals od model od obviously determined semantics obeys authors provisos stated section 
clear semantics section 
example 
program example masters jim od consequence 
od model program entail thesis jim thesis jim 
case entails masters jim program rule 
second case derives masters jim application third rule 
masters jim true od models od consequence program example 
extension semantics programs default negation means usual gelfond lifschitz program division construction 
definition 
extended logic program set objective literals 
define operator op follows op phi objective literal od psi set objective literals od answer set iff op example 
consider program obtained adding rule program example interview masters employed employed sue masters sue program exactly od answer set viz 
employed sue masters sue interview jim exam jim credits jim masters jim usual problems answer sets semantics carry od semantics od answer sets programs 
conjecture restriction sakama inoue logic iv upper logic values mapping provides appropriate model theory od answer sets semantics 
detecting support contradiction overviewed semantics reasoning presence contradiction different perspectives objectives 
humans tend overly cautious accepting presence contradiction 
require additional mechanisms support paraconsistent deductions give additional arguments validity 
obvious need capability detecting safe ones depend contradiction 
effort clarify mean support contradiction neglected literature 
definition declarative independent underlying semantics 
assume language extended logic programs 
definition 
extended logic program fc pg set contradictory facts say literal depends contradiction respect semantics sem iff sem flg sem gamma flg rationale clear cut 
say depends contradiction iff removing subset contradictory facts program truth value gets changed 
example 
suppose bus driver approaching railway crossing barriers lifted warning lights 
dilemma bus driver faces expressed extended logic program cross train train train semantics section model program cross train semantics advise driver cross 
semantics basing behaviour additional information provided 
making definition detect support cross contradictory pair train train removing set facts program cross longer entailed model resulting programs 
definition readily applicable semantics 
process described exponential useless practice 
semantics literature take care problem 
section extensions semantics previously surveyed provide additional information regarding support contradiction definition 
particular discuss sakama suspicious founded stable semantics wfsx extension described 
careful semantics dealing contradiction studied section 
sakama suspicious founded semantics sakama describes variant semantics see section return information support literal truth literal depends inconsistent information 
literals supported contradictory literals called suspicious called safe 
technically achieved keeping track literals involved proofs literal bottom computation founded model 
basic definitions order discuss approach 
details consult 
author requires new notion literal sigma objective literal language underlying program sigma set sets literals 
idea sigma keep track literals involved proofs see definition construction operational asymmetric definition 
extended logic program interpretation set literals set objective literals 
set literals set literals respectively 
mappings phi psi defined follows phi fa sigma rules lm ln li sigma li li lj li sigma ffb lm ln oe oe lm oe li sigma li psi fa rule bm cn sigma operator phi determine set objective literals true current interpretation keeps track literals involved proof objective literals 
fact enhanced version tp operator 
hand psi determine set default complete definition suspicious founded model similar constructive definition wfs terms theta operator 
literal sigma suspicious iff set sigma literal sigma sigma belong clearly seen definition treatment objective default literals different 
see shortly consequences commitment 
example 
program innocent guilty guilty charged guilty charged suspicious founded model charged guilty innocent ff guilty charged charged guilty innocent man mang literals contradictory suspicious 
hand charged man added truth value charged contradictory man true safe truth values literals remain 
new suspicious founded model charged charged man guilty innocent ff guilty charged innocent mang truth innocent guilty credible derived inconsistent literal charged checked suffixes 
innocent true guilty false 
author argues extra information support contradiction required objective literals truth default literal depend success pair contradictory literals proofs literal fail 
convincing failure may due pair contradictory literals shown example 
example 
consider extended logic program suspicious founded model program entails clearly truth depends contradictory pair literals removing longer true 
sakama suspicious founded model incapable detecting situation suffixes propagated default negated literals 
definition suspicious founded model lacks power detecting support contradiction default negated literals 
fact remove occurences default negated literals suffixes literals purpose checking dependency contradiction simplifying definition phi definition suspicious founded model need keep dependencies 
furthermore size suffixes exponential size program disadvantage practical implementation 
partial result theorem 
definite extended logic program suspicious wellfounded model literal depends contradiction iff true sakama inoue suspicious stable semantics sakama suspicious founded model continued extension stable model semantics 
semantics defined disjunctive extended logic programs integrity constraints 
usual sake comparisons restrict analysis definitions extended logic programming case 
idea introduce adorned literals form objective literal 
new literals form denote suspicious literals 
interpretations subsets fa atom language program simplicity presentation assume belongs interpretation adorned counterpart 
say literal safely true literal true iff new definition immediate consequence operator order cope extended interpretations 
usual operator defined definite extended logic programs 
definition 
definite extended logic program interpretation exists bn exists bn ig intuition straightforward 
literal safely entailed iff rule body safely entailed 
order check body depend contradiction test explicit complements body literals correspondent adorned literals entailed 
literal entailed rule body entailed 
definition guarantees case 
model program obtained finding fixpoint example 
consider program example cross train train train fg train train train train train train train train train contradictory cross true 
extension semantics arbitrary extended logic programs immediate lines definition stable models definition 
extended logic program interpretation 
reduct program obtained removing rules containing default literal removing remaining default literals suspicious stable models interpretations example 
consider program innocent guilty charged man guilty charged guilty charged single suspicious stable model man charged charged charged charged guilty innocent easily checked noting innocent guilty guilty charged charged charged man model identical conclude man true charged charged contradictory guilty innocent true 
expected results 
compare logical approach suspicious stable models previous semantics founded semantics 
easily shown positive definite extended founded programs semantics coincide 
definition semantics section declarative intuitive 
reformulation suspicious founded semantics terms nested application immediate 
leave details interested reader 
suspicious founded semantics propagation support contradiction default negated literals taken care 
example applies semantics 
partial completeness result lines theorem holds suspicious stable models obvious changes 
authors define logic vi provide model theory semantics 
usual values additional logical values sf st denote false true respectively 
logic bilattice see 
able define connectives respect provisos imposed authors 
tables 
consequence relation defined means set designated truth values fst implication table defined usual order satisfy iff sf st fig 

sakama inoue logic vi table 
truth table negations logic vi sf st st sf st sf table 
truth table conjunction logic vi sf st 
sf sf sf sf sf sf sf st sf st st sf st 
sf 
table 
truth table disjunction logic vi sf st 
st sf sf st sf st st st st st st sf st st equivalence relation lot properties classical logic obeyed 
default negation classical negation 
expected logic vi refinement logic iv authors discussed section 
usual explicit negation fails obey excluded middle contradiction law contraposition coherence modus disjunctive syllogism 
stronger equivalence worse behaved 
instance associativity distributivity laws satisfied 
mapping suspicious stable models interpretations 
theorem 
extended logic program suspicious model 
construct vi interpretation follows belong resp 
resp 
resp 
st resp 
sf 
interpretation vi model program suspicious wfsx main advantage wfsx respect paraconsistent semantics surpassing limited facility detecting support contradiction 
start stating main result regarding wfsx theorem 
extended logic program paraconsistent wellfounded model objective literal 
depends contradiction iff wfsx detects support contradiction total models simply testing presence model 
dependence operational concept related underlying proof procedures wfsx described 
theorem general belong model total depends contradictory information derivable inconsistent antecedents 
theorem justifies situations literal default negation belonging simultaneously program model 
contrarily expected conveys important information 
example 
consider situation example 
wfsx semantics states driver cross railroad careful depends contradictory information 
checked noticing cross cross simultaneously hold program model 
achieved result coherence principle train holds train holds body rule cross body falsified train conclude cross 
example 
program example paraconsistent wellfounded model charged guilty innocent mang charged guilty guilty innocent innocent mang program objective literal semantics coincide usual ones obtained suspicious founded stable models 
look default negated literals notice innocent guilty true 
innocent guilty true innocent guilty entailed know innocent guilty depend contradictory information contradictory 
seen previous semantics sections able propagate knowledge support contradiction negation default 
compare results obtained wfsx example 
returning program example obtain paraconsistent founded model set literals fa cg fa cg means contradictory depend contradictory information obtaining intended results 
mark apply wfsx detect support contradiction definite extended logic programs suspicious semantics previous sections 
objective literals results semantics coincide 
semantics able detect support contradictory information examples model total guaranteed theorem 
non total situations happen truth literal depends contradictory information wfsx able detect theorem 
occur undefined literals model 
theorem corrects situation wfsx cover cases 
see problem example 
consider extended logic program program truth depends contradictory fact entailed wfm model program undefined 
sakama suspicious founded semantics handles program properly 

equipped wfsx semantics additional mechanisms handle non total cases 
failure detect support contradiction theorem non total models hinges literal true model rule undefined body 
motivates definition definition 
extended logic program wfm program deltap obtained deleting rules true head undefined body 
rule undefined body iff literal body belong body literal default complement belong rules removed shrinking semantics 
normal logic program extended consistent wellfounded model wfm wfm deltap 
property hold contradictory extended logic programs example 
consider program example 
corresponding delta program obtained deleting rule founded model transformed program fa cg distinct original program 
easily show general deltap wfm wfm deltap program monotonically decreases corresponding model monotonically increases 
idea apply delta operator iteratively till fixpoint reached 
step undefined rules prevent propagation contradiction support removed 
obtains desired property contradiction support detection rules prevent application theorem removed 
definition 
extended logic program 
construct transfinite sequence programs fp ff ff deltap ff ffi fp ff ff ffig limit ordinal ffi exists smallest ordinal sequence fixpoint delta 
define suspicious paraconsistent founded model wfm wfm main result readily obtained theorem 
extended logic program wfm 
literal default complement iff depends contradiction 
example 
sequence originated program example wfm fa cg gamma fa bg wfm wfm fnot ag wfm wfm wfm important construction definition continuous 
result steps may necessary obtain fixpoint 
behaviour illustrated 
example 
extended logic program variables range natural numbers transfinite sequence programs associated models wfm anonymous variable fp rg gamma fp ug fnot gamma fp ug fnot 
gamma fp ug 
fp fc sg 
gamma fs ug 
fnot sg wfm fp fc sg 
mark literals simultaneously true default false 
theorem means literals depend contradictory literal 
single contradictory literal literals depend logic provides appropriate model theory suspicious version wfsx semantics see section 
blocking propagation contradiction semantics discussed allow conclude truth literals basis contradictory information 
situations desirable detect contradictions avoid propagation inconsistency 
instance medical example section faced contradiction surgery indication surgery indication physician opts 
consider situation bus driver wants cross railroad contradictory information coming train 
best strategy cross railroad 
criminal trying escape police risk cross railroad 
appropriate type reasoning situation dependent 
section discuss approaches block implicitly explicitly propagation contradiction 
start presenting wagner conservative credulous skeptical reasoning 
overview introspective framework language extended logic programs augmented new operators 
modalities provide means implementing reasoning forms kind depend contradiction contradictory 
discussion extension wfsx incorporating operators appeared 
wagner entailment relations introspective framework adopt potential contradictions view stick actual contradictions view providing new mechanisms explicitly blocking contradiction propagation 
sense semantic open new horizons extended logic programming paraconsistent semantics 
shall see suffer problems 
reader warned section presents exploratory definite solutions 
wagner credulous conservative skeptical reasoning handle careful reasoning discussed section wagner defines new reasoning forms defeasible inheritance systems 
idea contradictory pieces information 
essentially accepted supported 
selecting different notions doubt different forms reasoning obtained counts favour potential counts counterargument proposes credulous conservative skeptical reasoning liberal kind 
blocking contradiction propagation entailment relations 
explicit control user form blocking wants different behaviour select semantics 
credulous cr conservative skeptical reasoning defined proof theoretically entailment relations containing basic rules gamma gamma definition paraconsistent logics argumentation concepts see anthony hunter chapter volume 
gamma see section definitions language plus ones derivation literals strong negation complements cr iff cr gammae gammal cr gammal iff gammal cr iff gammaf gammal gammal iff gammae iff gamma gammal gammal iff gammae credulous reasoning accepted liberally credulously potentially credulously entailed strong negation complement conservative reasoning support doubt weight holds conservatively supported conservatively 
wagner proposes skeptical inference relation 
intuition liberally entailed literals cast doubt strong negation complements doubt order establish 
conservative skeptical reasoning inherently consistent 
example 
extended deductive database literals liberally entailed credulously entailed 
obvious credulously entailed liberally entailed rules form respectively bodies falsified 
applies credulously entailed liberally entailed gammap credulously entailed 
sort reasoning applies entailed 
conservatively conclude derivable 
important notice credulous reasoning sense supported body single rule entailed 
furthermore example shows set formulae inferred credulous reasoning model extended deductive base wagner notion liberal model true body false head instance 
problem occur conservative skeptical reasoning 
systems reasoning case dependency reasoning vice versa allowed restricted class strongly founded considered wagner positive negative loops explicit default negation permitted 
reduce entailment strongly founded reasoning forms entailment normal logic programs wfs form reasoning requires different program transformation definitions definition 
program cr constructed follows 
program see definition included cr atom language rules doubt gamma doubt gamma added cr doubt gamma doubt gamma new predicate symbols 
rule form atoms am gammac gammac gamma gamma add cr rule head doubt gamma head doubt body gamma gamma gamma gamma definition 
program constructed follows 
atom language rules gamma added gamma new predicate symbols 
rule form atoms am gammac gammac gamma gamma add rule head head body gamma gamma gamma gamma definition 
program constructed follows 
program included rule form atoms am gammac gammac gamma gamma add rule gamma gamma gamma gamma rule form atoms am gammac gammac gamma gamma add rule gamma gamma gamma gamma gamma rationale transformation inference rule captured logic program rules introduced second step transformation 
conjunction literals checks literal liberally entailed tests 
rules introduced step test literal implement test cr weak negation derivability inference rules captured negation failure 
conservative reasoning transformation described due uses compute approximations answer set semantics 
idea code rule type rules 
rule head test condition 
translation obvious equate negation default weak negation derivability 
skeptical reasoning intuition quite simple 
extra literal added rule performs test strong complement literal head liberally entailed 
equivalence theorem immediate theorem 
strongly founded 
equivalences hold atom cr iff wfm gammaa iff wfm iff gamma wfm gamma iff gamma wfm example 
consider example 
corresponding program cr doubt doubt gamma gamma doubt gamma doubt doubt doubt gamma doubt gamma doubt gamma doubt doubt gamma gamma doubt gamma doubt founded model cr consists true facts fp doubt doubt gamma doubt gamma gamma accordance credulous model example 
consider example 
program gamma gamma gamma founded model consists true facts fp gamma literals false model valued 
entailed literals weakly false conservative reasoning 
example 
consider example 
program gamma gamma gamma founded model consists true facts fp literals weakly false skeptical reasoning 
advantage normal logic program wfs semantics assign semantics non strongly founded combine different entailment relations single program 
furthermore detect mutual recursive problematic cases literals undefined founded model 
non undefined literals derive sound wagner inference systems 
course proof theoretical inference system extended order cope larger class wagner liberal reasoning system loop notice wagner named systems skeptical conservative credulous liberal motivation weak negation free relation holds atom strong negation atom cr weak negation destroys inclusions 
important example gammap conservatively credulously derivable 
replacing strongly negated literal new atom say liberal reasoning implemented resort credulous conservative skeptical reasoning concluding inference relations expressive power 
paraconsistent introspective programs valued framework paraconsistent logic programs proposed including form explicit negation default negation disjunction 
introspective modal operators provided employed detect respectively literal inconsistent alternatively entailed inconsistent premises 
start sketching language semantics 
show semantics ill defined class positive introspective logic programs modal operators occurrences default negation 
identify problem proceed discussing semantics default negation 
restrict discussion disjunction free programs 
definition 
programs obtained augmenting language extended logic programs introspective operators cl objective literal 
occurence introspective operators allowed body rules 
default negations operators permitted 
example 
federal regulation requires floor sausage plant kept clean 
way satisfy constantly washing floor 
state regulation requires floor sausage plant wet 
violations fined 
situation encoded extended logic program penalty watering penalty watering watering watering authors appropriate information regarding penalty penalty depends inconsistent premises may want investigate appeal penalty 
achieve rule appeal penalty introduced program 
course appeal hold 
mark watering watering penalty entailed 
clear example modalities check literal contradictory depends contradiction 
means contradiction regarded harmful turns difficult reading logic programs immediately see literal entailed 
furthermore authors discard coherence principle 
semantics positive introspective programs structures defined 
definition 
interpretation set objective literals 
structure tuple hi fi gi interpretation consistent subset authors current world possibly inconsistent possible consistent structures induce entailment relation described definition 
definition 
hi fi gi structure 
logical entailment relation structures formulas defined follows objective literal arbitrary formulas para iff para iff para para para iff para para cl iff para iff para intuition obvious 
objective literal entailed iff true consistent safely inferred 
satisfaction conjunction default negation operator obvious 
literal explicit complement belong current world contradictory 
literal depends contradiction iff belongs current world safely entailed consistent worlds 
notice similarities definition 
candidate models positive introspective programs obtained structures additional properties definition 
positive introspective program 
structure hi mi said pre model iff 
rule bm para 
supported literal rule bm para bm 
maximal sense consistent supported ae authors define ordering relations pre models choose ones intended properties minimal para models sake simplicity relations 
said positive paraconsistent programs single minimal para model 
example 
consider program example rule appeal added 
unique minimal para model penalty watering watering ae minimal para model implies appeal penalty penalty 
unfortunately realized positive introspective programs pre models example shows 
example 
consider program condition definition include candidate structures hfa bg hfa bg hfa bg ffa bg hfa bg fa hfa bg ffa bg fa obeys conditions pre model 
satisfy maximality condition 
structure supported entailed problem obvious false depends contradiction hold 
true proof depend contradiction false 
behaviour similar stable models programs odd loops negation default 
conjecture problems may addressed introducing notion stratification respect occurrences operator 
resume discussion computing minimal para model section 
extension semantics handling default negation straightforward 
notion reduct program structure provided obtained removing rules default literal para deleting default negated literals occuring remaining rules 
allows definition semantics terms fixpoint equalities lines normal logic programs 
definition 
introspective program fp operator returning minimal para model define relation structures letting iff ae 
structure stable structure iff fixpoint fp fp alternating fixpoint fp iff fp fp called normal fp founded structure iff normal alternating fixpoint fp example 
consider program tweety bird tweety ly tweety ly bird ab ab cf ly founded structure program bird bird entailed tweety bird ly illustrating blocking default assumption ab presence contradiction ly 
mark default negated literals evaluated fp bird ly ly abg bird ly abg bird ly ae para ly para ly 
means ab undefined ly ly ly simultaneously true 
behaviour realized intended proposers semantics 
stable structure program odd loop negation introduced rule ab 
mentioned problems stable founded structures cater propagation contradiction negation default suspicious founded stable models semantics 
example 
consider paraconsistent logic program program single stable structure coincides founded fb cg ffb cg fb cgg 
accordingly cc true structure 
interesting points semantics hold program contradictory 
suppose remove resulting programs associated founded structures unique stable structures true 
means original program depends contradictory literals definition 
approach followed capable detecting situation 
introspective founded model section identified conditions detection contradictory dependence contradiction 
recall test objective literal contradictory suffices check belong program model test supported contradiction check entailed 
simply equate cl hold hold 
meta condition difficult implement 
adopted ideas semantics including terminology show operators implemented wfsx means program transformation wfs recourse modalities 
extend language introspective programs allowing language application default negation modalities 
approach gammat program transformation section capture intended meaning introspective operators 
completely satisfactory solution attained total models 
discuss problems solution section 
definition 
introspective program 
normal logic program int derived replacing rule new ones obtained 
occurence introspective operator kept original program 
remaining translation rules identical gammat transformation 
additionally rules added int atom language program ca include ca include include tu include tu purposes literals form cl int regarded new atoms 
notice translation introspective operators tu rules 
introspective operator truth value rules tu rules int program 
situation occurs introspective operator default negation simultaneously hold 
accomplishes desired blocking propagation inconsistencies 
instance literal contradictory cl holds cl second bodies rules implement new operators capture conditions previously discussed 
semantics introspective programs obtained straightforwardly 
definition 
introspective program generating normal logic program int introspective founded model designated wfm obtained founded model int follows wfm iff wfm int wfm iff wfm int wfm iff tu wfm int wfm iff tu wfm int 
truth falsity introspective operator tested checking default negation belongs wfm int 
example 
consider program example 
associated transformed program obvious abbreviations tu tu tu tu tu tu tu tu cw founded model normal logic program phi tu cw psi fp tu tu tu tu tu obtain model original program fp ag fp ag notice differences resulting model example 
literals derived irrespectively depend contradiction 
information regarding problematic literals provided means introspective operators 
operators reprogramming detect contradiction block propagation desired 
example substituted rule entailed 
introducing introspective operator longer case retained 
introspective operators inherently valued semantics possible cases operators undefined introspective founded model 
behaviour occur original operators 
feature illustrated example 
example 
introspective program containing fact rule ca 
introspective founded model simply ag 
ca operator gets undefined int program value leads contradiction ca true body rule false support truth false ca false entailed ca true 
example 
consider program example introspective founded model program undefined 
true 
true case true 
recall minimal para model defined program 
semantics solves problem saying depend contradiction letting undefined 
intuitiveness result questionable 
combinations primitive introspective operators useful knowledge representation 
reading negations new operators immediate cl means contradictory depend contradiction simply means safe contradictory depends contradiction 
conjunction cl means contradictory depends contradictory premises 
disjunction cl means contradictory safe discarding case support contradiction 
programs needed construction definition determine dependencies contradiction results unexpected integration introspective operators language destroys monotonicity construction suspicious wfsx transfinite sequence programs definition monotonically decreases substitute wfm wfm delta operator 
corresponding inclusion wfm wfm deltap 
problems involved see example 
example 
consider introspective program sequence programs associated models wfm fa dg dg gamma fa ug fb dg fa dg true expected original program 
literal undefined 
better mechanism propagating consistency upwards required introspective programs 
introspective founded model total literals introspective operators undefined intended results obtained 
case default negations program loops introspective operators secured theorem 
programs conditions minimal para model exists conjecture relationship construction 
basically literals depend contradiction coincide approaches introspective operators 
remaining literals entail semantics minimal para model entailed 
conjecture immediate obtain minimal para model paraconsistent program corresponding introspective founded model 
integration techniques suspicious wfsx subject current research 
open problem need attention 
may proceed pointed defining appropriate notion stratification respect operators 
class stratified programs expect correct results 
paraconsistent semantics section briefly overview paraconsistent semantics generalizations logic programming direction different extended logic programs 
multi valued logics integrated fashion particular bilattice applications ai mainly due ginsberg 
logics discussed require existence truth value 
pointed adoption fundamental principle proposed logics apparently closed truth assignments gives rise collapse framework presence contradiction 
paraconsistency point view 
irrelevant purposes 
paraconsistent logic programming originated works blair 
extended order consider disjunctive rules arbitrary upper semilattices truth values 
generalized annotated logic programs gap allows variable annotations head body rule total computable function annotations head 
language permit default negation 
semantics provided programs ideal theoretic lines definition 
shown continuous monotonic continuous 
sound complete proof procedures discussed ideal theoretic semantics set truth values lattice 
framework gap theory applied obtain reformulations multivalued temporal formalisms 
application semantics problem amalgamation knowledge bases discussed 
annotated predicate calculus allows constant annotations atomic order formulae truth values upper semilattice belief semilattice bsl 
considers forms negation implication ontological epistemic 
behaviour similar classical negation generalization explicit negation 
ontological implication defined usual oe oe epistemic implication equivalence oe oe oe 
entailment relation minimizes inconsistency implication able draw inconsistent beliefs blocks 
proof theory usual entailment relation 
argued inconsistent beliefs apc represent causes inconsistency predicate calculus 
ideal theoretic semantics 

approach default logic provide semantics arbitrary propositional theories 
idea view separate entities incrementally restore relation pairs till inconsistency generated 
semantics discussed simple bright idea degrees skepticism 
semantics readily applicable definite extended logic programs 
different line followed fitting 
provides kripke kleene semantics logic programs richer range logics classical resorting bilattices 
illuminating discussion problems solutions 
main result extension fitting operator phi associated results broader class logic programs compound logic programs 
compound logic programs allow operators omega consensus phi accept representation distributed logic programs 
deep results concerning relationship greatest fixpoints phi respect knowledge truth orderings 
continued similar generalization founded semantics syntax limited normal logic programs 
main criticism leveled works syntax programs general underlying logic knowledge representation limitation exists 
general conditions models returned exact consistent 
underlying logic may paraconsistent models provided restricted consistent subset 
sense due absence explicit form negation 
criticism pertinent extensions wfs pradhan described 
truth functional valued paraconsistent logic dubbed subsume answer sets semantics extended logic programs 
idea supported models 
underlying semantics paraconsistent resulting entailment relation consistent 
authors define logics logic argumentation la meta logic argumentation mla 
logic la toulmin notions support confirmation arguments formalized 
supported arguments uncertain nature confirmed arguments certain ones 
formula logic assigned sign meaning respectively formula supported confirmed 
natural deduction scheme propositional minimal logic provided logic la remarkable rule weakening infer 
natural correspondence extended logic programming la logic correspond respectively 
interpretation mind easy see weakening rule coherence principle 
logic mla perform reasoning contradictory knowledge 
authors assume contradictory knowledge permissible supported distinct viewpoints assumptions 
define meta logic argumentation argument proposition labeled additional signs representing different degrees inconsistency 
distinct theories possible pairs contradictions described table 
table 
distinct contradictory pairs logic la contradictory pairs sign meaning strong claim argument rebuttal ii strong claim argument discount iii weak claim argument rebuttal iv weak claim argument discount signs correspond truth values logic similarities wfsx logics la mla mechanisms available wfsx semantics infer weak information default reasoning capabilities liberal allowing form contradiction appear extended logic programs 
disadvantage logic la contradiction negation proposition entailed minimal logic basis 
proof theoretical discussion logics la mla consult 
semantics minimal logic appeared 
interpretations ones od semantics 
assigning meaning normal logic programs subsuming stable models semantics 
purpose give compositional semantics stable models defined normal logic programs 
handle rule assigns interpretations fa program 
logical value required treat programs 
wellfounded semantics value undefined bry intended models 
modal logic proposed modal operators included represent respectively possibly inconsistent beliefs just consistent ones 
order language extended modal operators 
author concerned axiomatization operators applies knowledge representation problems 
relationships logic programming explored 
ideas operators similar ones 
discussion due extension near semantics treated organize section general features classify important 
hope convinced reader need paraconsistent semantics logic programming provide adequate tools knowledge representation applications require reasoning forms 
depending situation reader surely find interesting applications results reported 
semantical concepts study extended logic programming traced back works blair paraconsistent logic programs 
shown generalized horn programs equivalent wagner logic programs strong negation extended logic programs default negated literals 
common basis exception semantics discussed section extended logic programming semantics agree roots works paraconsistent constructive logics 
belnap logic 
provides underlying model theory semantics 
determined semantics 
extends introducing case analysis validity law excluded middle 
default negation box opens 
different approaches identifiable coherence view weak negation view 
adopts coherence principle relating forms negation basic provides localized explosion consequences faced contradiction wfsx extensions representative type semantics view sustain firmly total independence atom explicit negation semantics embrace blindly 
coherence principle appears logic la identifies strengths belief forms inconsistency 
wagner liberal reasoning basic inference relation weak view exception credulous conservative skeptical forms reasoning 
differences lie ordinary normal logic programming semantics treatment infinite negative recursions 
founded semantics assign logical value undefined literals involved recursions 
przymusinski semantics explosive behaviour face contradiction sakama extended founded semantics 
weak negation persuasion proposed non explosive semantics variants answer sets semantics 
weak answer sets paraconsistent stable models related nelson logic system gamma shown 
overcome problem non existing models extended logic programs sakama defined semi stable models semantics suffers problems treatment undefined literals 
extension determined semantics stable models 
interesting paraconsistent semantics proposals extended logic programs fairly standard techniques normal logic programming semantics 
semantics defined default negation free case 
behaviour default negation similar wfs alternating fixpoint definition pursued 
stable models corresponding fixpoint equation define semantics general case 
notable exception semi stable models rely semantics disjunctive logic programs 
referred semantics cater problem detecting support contradiction 
new features touched sakama inoue suspicious founded model suspicious stable models extending paraconsistent stable models 
shown notions support cope default negation 
purposes founded semantics suspicious wfsx 
adequate detection support contradiction guaranteed arbitrary extended logic programs 
detecting unsafe necessary block propagation contradiction 
argumentation approach problem adopted wagner credulous conservative skeptical inference relations 
inherently consistent 
semantics reflexive obey modus ponens 
introspective operators brings new fresh issues 
full fledged paraconsistent framework introspective programs allowing disjunction provided 
programs test rules literal contradictory depends contradiction 
ill defined classes programs handle detection support contradiction paraconsistent programs default negation 
means program transformation wfsx semantics extended treat new modalities 
advantages semantics adoption coherence principle liberal way propagating consequences contradictory literals relies 
introspective wellfounded model presence non stratified occurrences introspective operators produce intended results model contains undefined literals 
happens supports contradictions properly propagated 
family tree semantics surveyed chapter 
non obvious abbreviations follows 
psm se stand respectively paraconsistent stable models weak answer sets stable environments 
suspicious founded stable models shortened wfs psm respectively 
suspicious wfsx semantics represented wfsx introspective wfsx wfsx founded stable structures abridged ws ss 
designations remaining section 
ghp def 
elp psm se ssm wfsx wfs basis basis wfsx basis od psm wfs wfsx wfsx wfsx wfsx ws ss cr suspicious blocking fig 

paraconsistent logic programming semantics genealogy existence semantics introspective wfsx defined class introspective programs subsuming extended logic programs 
seen founded structures defined extended logic programming 
guaranteed existence arbitrary introspective programs 
suspect programs positive loops operator program assigned founded structure 
stable structures defined class extended logic program problems due infinite recursion negation default 
regarding intro programs problems advanced founded plus additional ones originated stable models basis carry stable structures 
semantics defined class extended logic programs semi stable models wfs wfsx wfsx comes wagner extended deductive bases liberal skeptical reasoning defined weakly founded find class strongly founded credulous conservative reasoning class generalized horn programs logic programs strong negation strictly smaller previous incomparable 
class programs defined answer sets paraconsistent stable models appear classes liberal reasoning semantics 
suspicious stable models defined psms 
od semantics defined definite extended logic program large class logic programs loops negation occur 
difficult identify class programs stable structures defined 
guaranteed exist locally stratified extended logic programs introspective operators 
embeddings complexity results main results equivalence preserving polynomial program transformations extended logic programming approaches normal logic programming 
transformations allow compare expressiveness various approaches complexity resorting results normal logic programming 
furthermore current implementations normal logic programming systems implementing new paraconsistent reasoning forms 
regarding expressive power semantics identified equivalence classes increasing order expressiveness generalized horn programs logic programs strong negation 
mapped positive definite logic programs means transformation liberal credulous conservative skeptical reasoning 
mapped locally stratified programs cr transformations wfsx wfsx sakama extended suspicious founded semantics 
semantics mapped wfs making gammat transformation extension introspective operators int respectively 
mapped wfs weak answer sets stable environments paraconsistent stable models suspicious stable models 
transformed normal logic programs transformation equivalence classes time identified 
semi stable models od semantics expressive weak answer sets class 
possible semantics coalesce class 
similarly suspicious wfsx expressive class wfsx know expressive class 
accordingly adapted known complexity results normal logic programs 
extended logic programs 
results table 
length program number atoms langauge extensional database 
easily shown propositional case suspicious wfsx worst case complexity 
complexity results stable founded structures known 
table 
complexity results semantics propositional datalog ghp inductive cr inductive wfs wfsx comp 
ind psm psm se np comp 
np comp 
mark translation extended logic programs normal ones achieved cases program transformation 
variant transformation liberal reasoning extended deductive bases captured logic programs 
approach followed definition disjunctive extended logic programming semantics 
coherent semantics wfsx wfsx rely gammat transformation translating normal logic programming 
completely clarifies different result properties obtained semantics 
forms explicit negation 
logical properties study described different valued logics 
surprisingly results converge noticeable 
logics defined terms designated truth values 
remarking property set obtained lying line connecting 
furthermore implication sign valued defined way properties plus modus ponens hold logic iff iff iff set classical truths obeyed logics table 
recall interested weaker equivalence relation explicit negation behaviour fairly standard logics theorems satisfied falsified ones seen table table 
mark od semantics single enforces excluded middle property explicit negation 
furthermore modus disjunctive syllogism unsound rules explicit negation logics addressed 
coherence satisfied table 
propositional theorems verified logics commutativity associativity distributivity idempotent laws absorption laws zero laws laws implication laws de morgan laws double neg 
law negations swap table 
explicit negation theorems falsified logics excluded middle contradiction law contraposition laws definition law coherence single exception logic obeys 
distinct features appear definition properties op erator 
logics iv vi treat classical negation 
de morgan laws default negation obeyed logics exception vii 
logics vii ix agree obey excluded middle contraposition definition laws modus 
strange logics allow undefined value default negation handling infinite recursion negation default 
distinguished features default negation evident fact contradiction double negation laws disjunctive syllogism valid 
implication satisfied stronger relation logics distinct 
results relevant models logic programs 
final words para lmp acknowledgments acknowledge support project contract number praxis tit portugal 
gerd wagner helpful discussions 

alferes dam asio pereira 
logic programming system non monotonic reasoning 
journal automated reasoning 

alferes pereira 
reasoning logic programming volume lnai vol 

springer verlag 
print 

nelson 
constructible falsity inexact predicates 
jsl 

apt bezem 
acyclic programs 
new generation computing 
appeared iclp 

apt bol 
logic programming negation survey 
journal logic programming 

baral gelfond 
logic programming knowledge representation 
journal logic programming 

belnap 
useful valued logic 
epstein dunn editors modern uses valued logic pages 
reidel 

blair subrahmanian 
paraconsistent logic programming 
theoretical computer science 

costa 
theory inconsistency formal system 
notre dame journal formal logic 

dam asio pereira 
model theory paraconsistent logic programming 
pinto ferreira editors proc 
pages 

dix 
classification theory semantics normal logic programs strong properties 
fundamenta informaticae 

dix 
classification theory semantics normal logic programs ii 
weak properties 
fundamenta informaticae 

martelli 
strict completion logic programs 
new generation computing 

emden kowalski 
semantics predicate logic programming language 
journal acm 

fitting 
kripke kleene semantics logic programs 
journal logic programming 

fitting 
bilattices semantics logic programming 
journal logic programming 

fitting 
founded semantics generalized 
journal logic programming 

fox krause ambler 
arguments contradictions practical reasoning 
neumann editor ecai pages 
john wiley sons 

gelder 
alternating fixpoint logic programs negation 
th symposium principles database systems 
acm sigact sigmod 

gelder ross schlipf 
founded semantics general logic programs 
journal acm 

gelfond lifschitz 
stable model semantics logic programming 
kowalski bowen editors iclp pages 
mit press 

gelfond lifschitz 
logic programs classical negation 
warren szeredi editors iclp pages 
mit press 

ginsberg 
multivalued logics 
proc 
aaai pages 

ginsberg 
multivalued logics uniform approach reasoning artificial intelligence 
computational intelligence 

jonker 
revision expansion 
lakemeyer nebel editors proceedings ecai workshop theoretical foundations knowledge representation pages 
ecai press 

kifer 
logic reasoning inconsistency 
journal automated reasoning 

kifer subrahmanian 
theory generalized annotated logic programming applications 
journal logic programming 

kowalski sadri 
logic programs exceptions 
warren szeredi editors th international conference logic programming 
mit press 

krause ambler fox 
logic argumentation reasoning uncertainty 
computational intelligence 

levesque 
making believers computers 
artificial intelligence 

levesque 
logic complexity reasoning 
journal philosophical logic 

marek truszczy nski 
nonmonotonic logic context dependent reasoning 
springer verlag 

meltzer 
theorem proving computers results resolution renaming 
automation reasoning 

minker ruiz 
semantics disjunctive logic programs explicit default 
fundamenta informaticae 

nelson 
constructible falsity 
journal symbolic logic 

pearce 
reasoning negative information ii hard negation strong negation logic programs 
pearce wansing editors nonclassical logic information processing lnai pages 
springer verlag 

pearce 
answer sets constructive logic ii extended logic programs related nonmonotonic formalisms 
pereira nerode editors lpnmr pages 
mit press 

pearce 
safety stability deductive bases 
technical report dfki 

pearce wagner 
reasoning negative information strong negation logic programs 
editors language knowledge intentionality pages 
acta philosophica 

pearce wagner 
logic programming strong negation 
schroeder heister editor elp pages 
lnai springer verlag 

pereira alferes 
founded semantics logic programs explicit negation 
neumann editor european conference artificial intelligence pages wien austria august 
john wiley sons 

pereira alferes apar icio 
contradiction removal founded semantics 
nerode marek subrahmanian editors logic programming nonmonotonic reasoning pages washington usa june 
mit press 


belief revision paraconsistency logic programming framework 
nerode marek subrahmanian editors lpnmr pages 
mit press 

priest norman 
paraconsistent logics 
philosophia verlag 

przymusinska przymusinski 
semantic issues deductive databases logic programs 
banerji editor formal techniques artificial intelligence pages 
north holland 

przymusinski 
declarative semantics stratified deductive databases 
minker editor foundations deductive databases logic programming pages 
morgan kaufmann 

przymusinski 
extended stable semantics normal disjunctive programs 
warren szeredi editors iclp pages 
mit press 

przymusinski 
stationary semantics disjunctive logic programs deductive databases 
debray hermenegildo editors north american conference logic programming pages 
mit press 

rescher 
logic inconsistency 
basil blackwell 

sakama 
extended founded semantics paraconsistent logic programs 
fifth generation computer systems pages 
icot 

sakama 
studies disjunctive logic programming 
phd thesis faculty engineering kyoto university july 

sakama inoue 
paraconsistent stable semantics extended disjunctive programs 
journal logic computation 

shepherdson 
negation logic programming general logic programs 
minker editor foundations deductive databases logic programming pages 
morgan kaufmann 

subrahmanian 
paraconsistent disjunctive deductive databases 
theoretical computer science 


proof procedure extended logic programs 
proc 
ilps 
mit press 

toulmin 
uses arguments 
cambridge university press 

wagner 
database needs kinds negation 
thalheim 
editors mathematical foundations database systems pages 
lncs springer verlag 

wagner 
logic programming strong negation inexact predicates 
journal logic computation 

wagner 
reasoning inconsistency extended deductive databases 
pereira nerode editors lpnmr pages 
mit press 

wagner 
vivid logic knowledge reasoning kinds negation 
lecture notes artificial intelligence 

wallace 
tight consistent computable completions unrestricted logic programs 
journal logic programming 


ghosh 
yuan goebel 
introspective framework paraconsistent logic programs 
technical report university alberta canada 
article processed macro package llncs style 
