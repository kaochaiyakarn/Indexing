efficient search association rules geoffrey webb school computing mathematics deakin university vic 
australia webb deakin edu au argues applications direct search association rules ecient stage process apriori algorithm rst nds large itemsets identify associations 
particular argued apriori impose large computational overheads number frequent itemsets large 
case association rule analysis performed domains basket analysis performed basket analysis basket information augmented customer information 
algorithm computationally ecient association rule analyses number rules constrained data maintained memory 
categories subject descriptors database management database applications data mining arti cial intelligence learning information storage retrieval information search retrieval general terms association rule search 
apriori algorithm derivatives de facto standard discovering association rules 
presents alternative approach association rule discovery may ecient data retained memory number candidate itemsets adequately constrained considering individual itemsets isolation 
current availability large memory machines potential applications new algorithm may satisfy rst constraint 
data miners consider time valuable cost extra gigabytes memory 
appear kdd boston ma august 
apriori algorithm relies constraining number itemsets considering features itemsets isolation commonly placing lower limit frequency itemset itemsets considered 
feasible simple basket analysis combinations products bought large quantities 
basket analysis numbers frequent itemsets may rapidly increase simple basket analysis augmented considering socio economic attributes customers 
augmenting simple basket analysis way add richness knowledge gained 
customer description attribute common customer base attribute occur frequently large number item combinations 
add number attributes analysis number frequent itemsets rapidly expand extent application apriori infeasible 
problem occurs association rule analysis applied domains basket analysis 
association rules valuable tool discovering interesting inter relationships variables di erent types domain lter machine learning bias rules user 
enables user identify interesting rules relying machine learning system determine rules interest 
describes search algorithm take advantage inter association rule constraints nd association rules eciently 

background early approaches identifying interesting rules data dominated attempts form small sets rules accurate classi cation previously data 
part borrowing elegant characterization mining optimized rules bayardo agrawal activity characterized follows training set nite set records record element apply boolean predicates called conditions 
rule consists conditions combinations conditions typically conjunctions frequently disjunctions called antecedent consequent rule antecedent consequent denoted search limited exploring rules consequent values distinguished attribute called class attribute 
search seeks set rules optimize function quality 
search usually incremental adding rule time 
quality function usually attempts indirectly trade complexity errors training set 
consequence rules selected tend antecedents select subsets training set strongly dominated single class variable 
nineties research program took divergent branches 
hand number researchers explored techniques identifying large numbers classi cation rules :10.1.1.15.6587
distinguished removal objective rules classi cation requirement small number rules identi ed 
rules satis ed criterion interestingness sought 
interestingness usually evaluated measure led identi cation rules antecedent identi ed subsets training set dominated single value class attribute intent predict occurrence value 
branch association rule discovery 
association rule discovery di ers intent rule discovery paradigms 
paradigms concentrated nding rules predictive single preselected class variable association rule discovery motivated nding rules predict increased frequency attribute value collection attribute values limitation values may appear consequent rule 
association rule discovery distinguished aims discovering rules satisfy set constraints emphasis processing large training sets allowing available condition appear antecedent consequent 
due emphasis analysis large datasets association rule discovery concentrated algorithms process data database access branches rule discovery tended concentrate algorithms retain data memory 
led development di erent forms algorithm 
association rule discovery algorithms sought minimize number passes data due high time overheads imply accessing database 
concern data retained memory 
research started bring divergent branches rule discovery research back 
bayardo agrawal variant opus search algorithm developed context classi cation rules research discover key rules type sought association rule discovery 
typical classi cation rules research technique considers search space single consequent time limiting applicability common association rule activity market basket analysis desirable consider product possible candidate rule consequent 
presents techniques employing opus search algorithm rule discovery search space encompasses rules antecedent contain conjunction available predicates consequent single predicate 
distinguished ability eciently nd prespeci ed number rules maximize arbitrary function measuring rule quality 
distinguishes approach typical association rule algorithms explore rules satisfy prespeci ed constraints 
distinction particularly signi cant 
dense search spaces typical rule constraints may result numbers itemsets apriori approach infeasible 
ability restrict search prede ned number target rules allow new algorithm eciently process search spaces 
major concern developing association rule algorithms minimizing number database accesses required 
contend need reduced database retained main memory 
contend doing feasible large range data mining tasks due increase availability large memory computers 
recognize remain tasks feasible retain sucient sample cases memory acceptable association rule discovery 
techniques explored address scenario 
apriori algorithm apriori algorithm discovers association rules steps utilizing concept itemset 
itemset conjunction conditions large itemset itemset occurs frequently prede ned minimum frequency 
apriori algorithm exploits observation common measures value association rule functions frequency lhs rhs lhs rhs lhs rhs represent respectively itemsets antecedent consequent association rule 
top level steps apriori algorithm 
find large itemsets 

generate association rules large itemsets 
rst stage plays roles 
limiting number rules need explored basket analysis relevant conditions predicates available items true corresponding item purchased customer name itemset 
union lhs rhs occur sucient frequency 
caching relevant information itemsets speci cally frequency search association rules need repeatedly access database compute 
strategy successful reducing number passes data base 
variants approach reduce database access passes 
numerous large itemsets overheads itemset maintenance manipulation severely impact computational feasibility approach 
dramatic illustration provided section 
example applying apriori standard settings cover type data set just items items occurring frequently results large item sets 
large itemsets management manipulation itemsets creates large computational burden 
opus search algorithm move search large numbers classi cation rules resulted development algorithms cient traversal search spaces involved 
initially relied assigning arbitrary order conditions structure search space combination conditions considered just 
search space conditions structured manner fig 

search space exponential size 
conditions gure commonly exceeded market basket analysis search space size clearly possible explore search space pruned 
xed structure search algorithms typically seek branches contain solution prune branches 
fig 
demonstrates ect pruning branch condition xed structure search space illustrated fig 

seen removes node search space 
identi cation branches pruned requires pruning rules 
identify regions search space contain solution 
rule discovery search pruning rules consider node search node space contains condition solution 
pruning illustrated fig 
may resulted pruning rule identifying node containing may contain solution 
case ideal outcome removal search space nodes containing illustrated fig 
seen approximately halves remaining search space constitutes solution depend search objective 
example association rule discovery solution set conditions frequent itemset 
exactly halve remaining search space root node visited depending search technique may node containing nodes counted part remaining search space 
elegant method achieving outcome reorder search space condition pruned node precedes conditions pruned 
opus strategy 
algorithm guarantees pruning action approximately halves remaining search space 
opus algorithm extends opus optimization search heuristic reorders search space maximize amount space associated promising search operator illustrated fig 

opus algorithms demonstrated support ecient complete search number standard rule discovery search tasks 
approach pruning provided inclusive pruning 
exclusive pruning actions illustrated involve excluding search space nodes containing particular condition inclusive pruning results exclusion nodes contain condition 
exclusive pruning inclusive pruning action approximately halves remaining search space 
efficient search association rules frequent itemsets relate association rules interest 
addressed placing additional constraints itemsets considered 
possible computationally expensive take account relationship antecedent consequent association rules derived itemset potential lift require duplicating rst stage second stage apriori algorithm 
importantly possible impose constraints rely relationships association rules nding itemsets participate association rules highest lift 
case users receive association rule reports interested considering limited number association rules 
selecting prespeci ed number maximize particular measure desirable user perspective constrain directed search association rules 
search association rules tackled search process starts general rules rules condition lhs searches successive specializations rules formed adding additional conditions lhs 
search unordered 
order successive specializations added lhs signi cant 
important component ecient search context minimizing number association rules need considered 
key technique eliminate potential association rules consideration optimistic pruning 
optimistic pruning operates forming optimistic evaluation highest rule value may occur region search space 
rule search condition considered search operator 
formally search operator inclusion condition set conditions associated node 
lift frequently utilized measure association rule utility 
lift association rule jxj number cases conditions total number cases data set 
xed structure search space pruning branch xed structure search space pruning nodes containing single operator xed structure search space pruning restructured search space optimistic evaluation lower actual maximum value 
optimistic value region lower lowest value interest region pruned 
search seeks top association rules maintain list top rules encountered far search 
optimistic evaluation lower lowest value rule top corresponding region search space may pruned 
pruning rules may identify regions pruned contain rules fail meet prespeci ed constraints minimum support frequency data rhs rhs lhs combination minimum lift de ned footnote top association rules speci ed criteria 
term credible rule denote association rules point search possible rule interest criteria interest apply search 
restrict association rules single condition rhs search strategies plausible 
potential rhs condition explore space possible lhs conditions 
potential lhs combination conditions explore space possible rhs conditions 
strategy leads straight forward implementation involves simple iteration straight forward search potential rhs condition 
implies accessing count number cases covered lhs times rhs condition lhs considered 
entails computational overheads caching information 
worst requires pass data time value utilized 
pass data lower overheads data stored memory disk time consuming operation avoided computation ecient 
considerations mitigate favor second strategy 
systematically explore space possible lhs condition combinations searching general speci process track set conditions appear rhs credible rule search current point 
organize search attempt minimize number lhs condition combinations explored 
single pass data performed lhs combination statistics collected lhs rhs conditions currently consideration 
prune search space regions potential lhss optimistic evaluation ascertain rhs result credible rule 
relative eciency approach apriori approach depend cost pass data lower favoring new direct search number frequent itemsets lower favoring apriori number lhs combinations explored lower favoring direct search 
table displays algorithm results applying opus search algorithm obtain ecient search search task 
algorithm recursive procedure arguments set conditions lhs rule currently considered 
set conditions may added lhs rules explored point set conditions may appear rhs rule search space point initial call procedure sets fg sets conditions considered lhs rhs association rules respectively 
step iia records credible association rule evaluated 
search seeks best rules metric rules added step new rules added rule lowest value metric removed table best rules 
rule credible fails constraints minimal strength table full lower value table opus search algorithm adjusted search association rules algorithm opus ar com set conditions lhs rule currently considered 
com set conditions may added lhs rules explored point com set conditions may appear rhs rule search space point 
sofar fg 
fpg pruning rules determine credible ii 
credible record pruning rules determine fg credible iii 
fg opus ar sofar iv 
sofar sofar fpg evaluation metric worst rule table best rules 
step prunes conditions space explored lhs rule 
exploring space possible lhs sets current optimistic techniques low computational overheads employed 
example fp gj minimum support rule relevant space possible rules achieve minimum support specializations fp gj higher support 
step iib prunes conditions space explored rhs rule 
optimistic rules low computational overheads employed 
example fp gj credible rule exist relevant space possible rules 
pruning steps exact pruning rules employed depend speci constraints search 
pruning algorithm systematically explore entire search space 
pruning step removes search space node rules containing identi ed condition 
follows algorithm complete nding target association rules long pruning rules employed correct 
algorithm opus opus ecient opus requires passes available lhs conditions node search tree select sort lhs conditions second recursive call lhs appropriate second third arguments 
overheads doing excessive search task evaluation rhs conditions retained lhs need performed loops 
large number potential rhs conditions calculating time caching information loops high overheads 
example conditions lhss potential rhs values need considered 
examining resulting possible combinations twice clearly undesirable caching large number values 
single pass approach employed sacri ces gained dynamic reordering optimistic value delivers far greater eciency processing search node possible 

example largest dataset uci machine learning repository subjected association rule analysis apriori algorithm opus search 
cover type data set selected largest uci machine learning repository datasets 
data set machine learning repository uci kdd repository due ease access researcher 
cover type data set format directly employed apriori opus search software data manipulation 
cover type data set collected purpose predicting forest cover type cartographic variables 
quite conceivable association rule analysis detect interesting inter relationships cartographic variables addition variable describing forest cover 
cases described attributes 
continuous valued attributes discretized sub ranges close possible equal numbers cases subrange 
remaining attributes binary 
consequence attribute values treated separate condition association rule analysis purposes 
note treatment results frequent items binary attribute value occur cases 
publicly available apriori system developed borgelt applied cover type dataset 
implementation apriori generates rules single rhs condition multiple lhs conditions exploring space rules opus algorithm 
generated itemsets employed default settings maximum itemset size minimum coverage data lhs rule minimum strength 
coverage set conditions proportion training set conditions true 
strength association coverage union lhs rhs divided coverage lhs 
minimum lhs coverage strength apriori determine itemsets coverage higher need generated 
required hours minutes cpu time mhz piii linux computer 
possible complete generation association rules le size limit exhausted rules generated 
opus ar algorithm applied data computer 
search space explored nd top associations lift 
pruning rules employed 
describe abbreviations 
cover coverage set conditions proportion training set conditions true 
strength lhs rhs strength association rule lhs rhs 
strength lhs rhs cover lhs rhs cover lhs 
rst pruning rule step prunes condition cover minimum allowed lhs coverage 
superset lhs exceed minimum lhs coverage coverage superset conditions larger coverage original set conditions 
second pruning rule step iib 
prunes rhs condition cover fqg min strength min strength minimum allowed value association strength 
minimum allowed coverage lhs rhs association 
justi cation rule mirrors previous 
pruning rule step iib 
rules utilizes optimistic assessment maximum value association strength rule consequent search space current node 
determine maximum number specialization operations may applied current node reach node search space current node 
max spec min max lhs size max lhs size maximum number conditions allowed lhs 
may specializations conditions available specialize 
may specializations allowed constraint number conditions permitted lhs 
determine upper limit maximum reduction coverage may result addition condition lhs association search space current node 
associations search space cover subsets items covered association current node 
condition may remove items cover association search space removes cover association current node 
max cover reduction max cover lhs cover lhs fcg sofar 
step determine minimum coverage lhs rule search space current node 
possible coverage reduced max spec max cover reduction 
possible reduced minimum allowed lhs coverage 
min cover max cover lhs max spec max cover reduction 
min cover cover lhs fqg optimistic assessment maximum strength opt strength association consequent may lie current node basis specializations may remove cover lhs cases covered opt strength cover lhs fqg min cover result obtained reduction coverage removed cases covered lhs rhs associations 
opt strength strength min strength constraint minimum allowed value strength rhs condition pruned 
nal pruning rule applies step iib 
rule determines optimistic value lift associations search space current node consequent 
lift maximized strength maximized 
opt lift opt strength cover fqg 
opt lift lift min lift minimum allowed lift rhs condition pruned 
note min lift global constraint associations may determined dynamically 
current application min lift initialized zero 
target number associations added table best association rules step iia min lift progressively updated equal minimum value lift rule table 
search progressed quality associations table improved stringent pruning occur 
pruning rules total association rules evaluated distinct antecedents considered 
took minutes seconds cpu time 
nd top associations lift required exploration association rules involving distinct antecedents took minutes seconds cpu time 

discussion example demonstrates opus search pruning search space basis inter relationships itemsets feasible perform ecient association rule analysis data sets apriori approach infeasible 
useful depends course inter itemset constraints applied association rule application 
plausible applications upper limit number association rules generated appropriate required enable ecient search 
search constraints sc optimality usefully employed deliver greater computational eciency opus ar framework 
opus ar wider application single dataset examined demonstrated commercial association rule discovery system opus system utilizes opus ar algorithm routinely employed commercial association rule discovery datasets containing millions cases described tens thousands variables 
association rule discovery rooted domain market basket analysis 
prior market basket analysis number machine learning researchers exploring techniques similarities association rule discovery 
researchers exploring complete extensive search form large rulesets belief rulesets provide insight utility obtained small rulesets normally generated machine learning systems 
current viewed direct descendent research ort extending utilizing ecient opus search algorithm utilizing metrics rule value developed eld basket analysis 

algorithm association rule analysis ecient opus search algorithm 
approach distinguished widely utilized apriori algorithm ability inter relationships itemsets constrain number itemsets considered 
distinguished number rule mining algo opus distributed pty www com 
rithms alternatives apriori exploring associations containing available conditions consequents 
approach potential disadvantage compared apriori requires passes data 
data maintained main memory need serious handicap 
availability large memory computers means quite sizeable data sets retained main memory 
data maintained main memory approach association rule discovery feasible 
simple example demonstrate potential advantage new approach applications 
analysis cover type data set requires generation analysis itemsets apriori algorithm utilized itemset size restricted 
contrast nding association rules highest values lift constraints required evaluation rules distinct antecedents 
implementations employed opus search completed rules identi ed cpu minutes took apriori cpu hours just generate itemsets 
illustrates potential advantages new approach 
am grateful christian borgelt making excellent implementation apriori algorithm publicly available 
am grateful jock uci machine learning repository librarians catherine blake chris providing access cover type data 

agrawal imielinski swami 
mining associations sets items massive databases 
proceedings acm sigmod international conference management data pages 
agrawal mannila srikant toivonen verkamo 
fast discovery association rules 
fayyad piatetsky shapiro smyth uthurusamy editors advances knowledge discovery data mining pages 
aaai press menlo park ca 
bayardo agrawal 
mining interesting rules 
proceedings fifth acm sigkdd international conference knowledge discovery data mining pages 
bayardo agrawal gunopulos 
constraint rule mining large dense databases 
data mining knowledge discovery 

comparison neural networks discriminant analysis predicting forest cover types 
phd thesis colorado state university department forest sciences fort collins colorado 
borgelt 
apriori 
computer software fuzzy cs uni magdeburg de borgelt february 
clark niblett 
cn induction algorithm 
machine learning 
clearwater provost 
rl tool knowledge induction 
proceedings second intl 
ieee conf 
tools ai pages los alamitos ca 
ieee computer society pres 
michalski 
theory methodology inductive learning 
michalski carbonell mitchell editors machine learning arti cial intelligence approach pages 
springer verlag berlin 
morishita 
parallel branch bound graph search correlated association rules 
proceedings acm sigkdd workshop large scale parallel kdd systems volume lnai pages 
springer berlin 
park 
chen philip 
ective hash algorithm mining rules 
proceedings acm sigmod international conference management data pages 
acm press 
provost aronis buchanan 
rule space search knowledge discovery 
working stern school business new york university ny ny 
quinlan 
generating production rules decision trees 
ijcai proceedings tenth international joint conference arti cial intelligence pages los altos 
morgan kaufmann 

search systematic set enumeration 
proceedings kr pages cambridge ma 
savasere omiecinski navathe 
ecient algorithm mining association rules large databases 
proceedings st international conference large data bases pages 
morgan kaufmann 
segal etzioni 
learning decision lists homogeneous rules 
aaai seattle wa 
aaai press 
toivonen 
sample large databases association rules 
proceedings nd international conference large data bases pages 
morgan kaufmann 
webb 
opus ecient admissible algorithm unordered search 
journal arti cial intelligence research 
webb 
inclusive pruning new class pruning rule unordered search application classi cation learning 
proceedings nineteenth australasian computer science conference pages melbourne january 
