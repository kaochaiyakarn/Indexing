information integration conceptual modeling reasoning support diego calvanese giuseppe de giacomo maurizio lenzerini daniele nardi riccardo rosati dipartimento di informatica sistemistica universita di roma la sapienza salaria roma italy lenzerini nardi dis uniroma information integration core problems cooperative information systems 
argue critical factors design maintenance applications requiring information integration conceptual modeling domain reasoning support conceptual representation 
particular general architecture information integration explicitly includes conceptual representation application 
illustrate architecture express integration settings existing systems 
provide various arguments favor conceptual level architecture automated reasoning conceptual representation 
specific proposal integration system realizes general architecture equipped decidable reasoning procedures 

information integration goal providing integrated coherent view data stored multiple possibly inhomogeneous information sources 
core problems distributed databases cooperative information systems data warehousing key areas software development industry 
early integration carried context database design focused socalled schema integration problem designing global unified schema database application starting produced independently 
efforts devoted information integration generalizes schema integration account actual data integration process 
input collection source data sets constituted schema actual data goal provide integrated reconciled view data residing sources 
integration system may principle access data update stored information 
performing updates integrated data requires changing data sources 
tight coordination sources integration system different sources needed 
form integration typically interest federated databases 
looser approach integration emerged autonomy sources basic requirement integration system seen client sources interfere operation 
performing updates integrated data concern reconciled view answering queries 
reason form integration called read integration 
approach organization responsible integration system typically different independent organizations managing single sources :10.1.1.127.3070
concentrate read integration 
information integration virtual materialized 
case integration system acts interface user sources typical multi databases distributed databases generally open systems 
virtual integration query answering generally costly requires accessing sources 
second case system maintains replicated view data sources typical example information systems reengineering data warehousing 
materialized information integration query answering generally efficient require access ing sources maintaining materialized views costly especially views upto date respect updates sources view refreshment 
deal problem view refreshment 
basic approaches information integration problem called procedural declarative 
procedural approach data integrated ad hoc manner respect set predefined information needs 
case basic issue design suitable software modules access sources order fulfill predefined information requirements 
information integration virtual materialized projects tsimmis squirrel follow idea 
require explicit notion integrated data schema rely kinds software components wrappers encapsulate sources converting underlying data objects common data model mediators obtain information wrappers mediators refine information integrating resolving conflicts pieces information different sources provide resulting information user mediators 
basic idea mediator query pattern required user generally constraint consistency results different mediators 
declarative approach goal model data sources means suitable language construct unified representation refer representation querying global information system derive query answers means suitable mechanisms accessing sources materialized views 
idea underlying systems carnot sims information manifold 
propose novel architecture declarative read information integration virtual materialized 
architecture allows explicitly model data information needs specification data system provides user various levels ffl conceptual level contains conceptual representation sources reconciled integrated data explicit declarative account relationships components 
additionally provides declarative representation information needs served integration system 
ffl logical level contains representation terms logical data model sources data materialized integration system 
addition contains logical schemas information needs 
ffl physical level contains store materialized data wrappers sources mediators information needs materialized data store 
ffl meta level repository meta information concerning integration system 
relationship conceptual logical logical physical level represented explicitly specifying mappings corresponding objects different levels 
main contributions ffl presentation general architecture outlined 
architecture express different integration settings existing systems 
section ffl discussion favor conceptual level architecture ability automated reasoning conceptual representation 
reasoning exploited tasks design phase integration system maintenance phase 
section ffl specific proposal integration system realizes general architecture supports modeling conceptual logical level equipped decidable reasoning procedures 
section 
architecture integration systems section describe architecture integration system resulting conceptual layer 
particular illustrate various components maintained system tasks system carry performing job 
proposed architecture serves general setting different approaches integration evaluated compared 
illustrate existing integration systems obtained specializations general architecture 
section approach information integration viewing specific instantiation architecture 

components data structures managed integration system shown levels sin metadata sources delta delta delta delta delta delta source model model source model query model query model domain model enterprise data schemas mediators conceptual logical mapping physical logical mapping conceptual link data flow logical link data store source source data store source schema source schema wrappers physical level view store materialized query schema view schema materialized query schema meta level integration system interface conceptual level logical level 
architecture data integration conceptual logical physical meta 
furthermore includes elements outside boundary integration system ffl interface module allows communication user interested retrieving information designer charge building functioning system 
ffl external sources represent independent systems managing actual data system supposed integrate 
conceptual level conceptual level contains formal description concepts relationships concepts information requirements integration application deal 
key feature level description independent system consideration oriented goal term logical database terminology denotes description data terms structures managed dbmss relational tables level respect physical organization data 
expressing semantics application 
particular distinguish elements conceptual level ffl enterprise model conceptual representation global concepts relationships interest application 
corresponds roughly notion integrated conceptual schema traditional approaches schema integration 
ffl information source source model conceptual representation data residing ffl term domain model denote union enterprise model various source models plus possible relationships relationships holding concepts belonging different models concept source concept enterprise model concept source concept source 
term model denote formal description representation language 
note difference usual meaning databases denotes formalism 
ffl term query model denote conceptual representation information need 
example query model data warehouse application conceptual specification multidimensional table requiring aggregations elementary data 
point domain model contains relationships specification interdependencies elements different source models source models enterprise model 
notion interdependency central architecture 
sources interest system integration simply mean producing enterprise model able establish correct relationships source models enterprise model various source models 
integration system including conceptual level adopt suitable languages expressing mentioned elements architecture 
term conceptual description language denoting formalism domain model expressed term conceptual query language denoting language query models expressed 
example conceptual description language entity relationship model 
example conceptual query language formalism expressing queries semantic data model 
logical level logical level contains description data queries interest system expressed terms typical logical structures managed dbmss 
particular source schema source describes logical content materialized view schema describes logical content materialized views maintained system 
collectively source schemas materialized view schema form call data schema 
obviously materialized view schema meaningful case integrated data portions thereof materialized meaningless case fully virtual integration 
query schemas express information needs logical level 
suitable languages expressing mentioned elements 
term logical data model denoting formalism source schemas materialized view schemas expressed 
similarly term logical query language refers language expressing query schemas 
obvious examples logical data model logical query language relational model sql respectively 
physical level architecture physical level refers actual data managed system 
physical level extensional information system taken account 
particular materialized view store contains data system maintains materialized 
shows wrappers mediators level 
wrapper software module able access source retrieve data form coherent logical specification source 
mediator software module takes input set data produced wrapper mediator produces output set data corresponding result query 
words mediator associated particular query logical level 
result mediator materialized transferred interface 
meta level meta level comprises meta model repository meta various system components user designer 
detailed discussion meta level outside scope example 
mappings shows mappings conceptual logical level logical physical level 
regarding aspect mapping source models source schemas represents fact correspondence logical representation data sources concepts source models explicit 
holds information needs expressed conceptual level queries expressed logical level 
correspondence elements domain model materialized view schema represents information concepts relationships materialized views maintained system 
assume integration system available conceptual logical mapping specification language correspondences formally defined 
regarding second aspect mapping mediators query schemas materialized views schema explicit fact mediator supposed compute extension logical object materialized 
wrapper associated element source schema data retrieved wrapper 
mapping source schemas represents exactly wrapper logical element extensional data extracted form source similarly case conceptual logical mapping postulate existence logical mapping specification language correspondences formally defined 

tasks section briefly discuss tasks carried integration system conforming architecture 
class tasks comprises activities regarding definition different elements architecture 
activities mainly pertain design integration system 
example specification various conceptual models links belongs phase 
note architecture prescribe build conceptual level shot supports incremental definition domain query models 
models subject changes additions analysis information sources proceeds 
observe partially materialized approach integration critical task decision materialize 
materialized virtual approach task wrapper mediator design extremely important 
designing wrapper means decide access source order retrieve data designing mediator means decide access sources order answer particular query materialize particular view 
note design mediator comprises resolution conflicts data residing different sources 
second kind tasks include design activities performed new information need arises 
case new query compared computed available mediators 
important problem query rewriting checking new query reformulated terms computed existing mediators 
virtual integration may lead new mediator simply call existing mediators 
materialized integration reformulating query terms materialized views means avoiding access sources 
conversely query part thereof answered simply relying existing materialized views new view new views materialized problem query rewriting presents different form new view materialize seen query formulated terms source schemas 
third class tasks concern activities routinely carried operational phase systems data extraction query computation view materialization 

comparison existing systems show architecture outlined instantiated different information integration settings 
schema integration schema integration setting integration starts providing conceptual representation sources source models proceed generating global database schema enterprise model 
schema design implemented database materialized view schema materialized view store 
database created sources discarded conceptual level anymore 
multidatabases setting multidatabases deals different sources considered internal components integration system 
logical representation sources mediators designed order satisfy information needs expressed logical level query schemas 
mediators materialize data system 
typically conceptual level taken account 
global information systems setting goal provide tools integrated access multiple diverse autonomous information sources repositories databases html documents unstructured files :10.1.1.127.3070
systems proposed framework information manifold uses representation conceptual level reconciled view called world view information sources data materialized 
tsimmis deals virtual scenario provide conceptual representation data 
difference systems data sources described views world view mediator computes view sources 
strategies disadvantages case relationships expressible second case general concepts characterized independently sources 
notably approach described section impose predefined direction expressing links sources enterprise model 
data warehouses setting views materialized system information represented conceptual level 
lack conceptual level shared squirrel system 
squirrel possible take account case virtual views 

advantages conceptual modeling reasoning distinguished features architecture described previous section related conceptual level 
role importance conceptual level traditional architectures information management systems understood tools conceptual modeling commonly drive system design 
conversely conceptual design addressed framework information integration focus attention logical physical levels 
believe conceptual modeling play fundamental role information integration long proper modeling issues proper modeling tools clearly identified 
particular information integration conceptual model able represent relationships data different sources 
section provide language representing relationships formally characterize discuss advantages derive ability provide conceptual representation reasoning support information integration 
discussion takes granted modeling issues understood tools support conceptual design developed 
list advantages conceptual modeling relevant design operation integration system 
declarative system independent approach general terms say conceptual level architecture information integration obvious mean pursuing declarative approach information integration 
consequence advantages deriving making various aspects system explicit obtained 
conceptual level provides system independent specification relationships sources sources enterprise model 
high level abstraction user interface tangible effects conceptual modeling break barrier user system providing higher level abstraction design 
conceptual models naturally expressed graphical form graphical tools adequately information scenario key factors user interfaces 
incremental approach criticism raised declarative approaches information integration requires reconciled view data costly obtain 
mentioned having conceptual level impose fully develop 
incrementally add new sources new elements available needed amortizing cost integration 
design regarded incremental process understanding representing relationships data sources 
documentation procedural approach information interrelationships sources hard wired mediators declarative approach explicit 
importance clearly emerges looking large organizations information data widespread separate pieces documentation difficult access non necessarily conforming common standards 
conceptual modeling information integration provide common ground documentation enterprise data stores seen formal specification mediator design 
making representation explicit gain re usability acquired knowledge achieved procedural approach information integration 
maintenance classical advantages conceptual level design phase advantages maintenance phase information integration system sources change design ends 
advantages outlined obtained simply having appropriate linguistic graphical tools expressing conceptual model mappings components architecture 
set features obtain conceptual level related ability reason conceptual representation 
possibility fully supported approach described section accomplishment activities concerning design operation system 
example reasoning check conceptual representation inconsistencies redundancies maintain system response changes information needs improve performance system 
particular pursuing goal characterizing quality data characterization improve quality services relying reasoning support conceptual representation 

approach section instantiate general integration architecture section specific proposal call conceptual data language repositories 
distinguishing features conceptual level representation information ability handling materialized virtual representation views 
equipped automated reasoning support conceptual logical level 
detailed description physical level outside scope 

representation conceptual level enterprise model source models expressed means logic conceptual description language called dlr general powerful express usual database models entity relationship model relational model object oriented data model static part 
specify knowledge conceptual interrelationships sources enterprise assertions expressed dlr :10.1.1.45.6987
assertions provide simple effective declarative mechanism express dependencies hold entities classes relationships different models 
dlr description logic formalisms includes concepts unary relations ary relations 
relations arity nmax concepts built starting set atomic relations atomic concepts syntax denote components relations integers nmax denotes arity relation integer nmax denotes nonnegative integer semantics dlr constructs specified notion interpretation 
interpretation delta delta constituted interpretation domain delta interpretation function delta assigns concept subset delta relation arity subset delta conditions satisfied 
enterprise model source model constituted finite set assertions express knowledge relations concepts form relations arity concepts 
interpretation satisfies assertion resp 
resp 
satisfies resp 
satisfy resp 

interpretation satisfies satisfies assertions assertions essentially form assertions relations concepts belong different conceptual models assertions extensional express relationships extensions relations concepts involved intensional express conceptual relationships necessarily reflected instance level 
interpretation extensional assertions analogous assertions 
intensional assertions interpreted intersection relations concepts ni nj 

example interpretation satisfies assertion int conceptual query language query models sql language alphabet domain model suitably extended aggregation constructs line 
concepts relations typed means relations arity combined form expressions type inherit arity ii denotes component relation arity delta delta delta delta dn fd delta dn dg fd delta jf dn kg 
semantic rules dlr arity expressiveness dlr required capturing meaningful properties conceptual level reasoning complex task 
devised sound complete algorithm decide satisfiability conceptual representation 

representation logical level logical data model relational model express data logical level terms set relation schemas describing relation source schema relation materialized view schema 
mapping data schemas domain model obtained characterizing relation schema terms nonrecursive datalog query elements domain model query form body delta delta delta body ym body conjunction atoms variables relations concepts domain model 
arity equal number variables means assertions relations concepts expressed domain model additional constraints directly query imposed logical query language embedded sql enables express query schema terms data schema possibly making query schemas 
automated reasoning logical level techniques query containment developed exploited performing query rewriting :10.1.1.127.3070

example shows domain model represents enterprise distinguishes approach respect ary relations appearing queries part conceptual model 
sources containing information contracts clients departments services registration clients departments 
symbols subscripted refer model assertions visualized entity relationship diagrams typical conceptual modeling databases fully compatible dlr 
source contains information clients registered public relations departments 
source contains information contracts complete information services 
enterprise model provides reconciled conceptual description sources 
note example reconciled description complete relation promotion modeled recall approach integration incremental 
various interdependencies relations concepts enterprise model sources models represented assertions right hand side part logical level representation suppose example actual data source described relational table table having columns client department client registered location department 
table mapped means query table reg location reasoning services associated dlr automatically derive logical consequences instance prove assertion promotion ext reg logical consequence observe contain relation promotion assertion relates promotion precise way 
consider instance queries posed client contract client contract reg contract client dept service reg client dept dept reg client dept promotion reg location dept string dept location 
contract client dept service dept ext reg ext reg client ext client reg client contract ext promotion 
client ext client contract 
dept ext dept service ext service client int client dept int dept 
domain model abbreviated service contract reg department client client promotion location string reg department client service department contract 
enterprise source models entity relationship diagrams obviously contained account assertions derive contained wrt 
main contribution novel architecture information integration generalizes proposals literature 
distinguishing feature proposed architecture emphasis conceptual modeling data allows automated reasoning support integration system design maintenance tasks 
proposed specific integration system description logics conforms general architecture allows decidable reasoning conceptual model 
currently context data warehouse design esprit project dwq foundations data warehouse quality 
tool implementing system currently construction project 
arens chee hsu knoblock 
retrieving integrating data multiple information sources 
intelligent cooperative information systems 
arens knoblock chen 
query reformulation dynamic information integration 
intelligent information systems 
batini lenzerini navathe 
comparative analysis methodologies database schema integration 
acm computing surveys 
borgida 
description logics data management 
ieee trans 
knowledge data engineering 
calvanese de giacomo lenzerini 
structured objects modeling reasoning 
proc 
dood number lncs pages 
springer verlag 
calvanese de giacomo lenzerini 
decidability query containment constraints 
proc 
pods 
calvanese de giacomo lenzerini nardi rosati 
source integration data warehousing 
technical report dwq uniroma dwq consortium oct 
calvanese de giacomo lenzerini nardi rosati 
description logic framework information integration 
proc 
kr 
calvanese lenzerini nardi 
unified framework class representation formalisms 
doyle sandewall torasso editors proc 
kr pages bonn 
morgan kaufmann los altos 
catarci lenzerini 
conceptual language statistical data modeling 
data knowledge engineering 
catarci lenzerini :10.1.1.45.6987
representing interschema knowledge cooperative information systems 
intelligent cooperative information systems 
chawathe garcia molina hammer ireland papakonstantinou ullman widom 
tsimmis project integration heterogeneous information sources 
proc 
ipsi conference tokyo japan 
huhns 
shen 
resource integration large knowledge base carnot 
ieee computer 
de giacomo lenzerini 
aggregate foundations description logics tuples sets 
proc 
ijcai pages 
de giacomo 
conceptual data model structured objects statistical databases 
proceedings th international conference scientific statistical data base management pages stockholm sweden june 
donini lenzerini nardi schaerf 
hybrid system integrating datalog concept languages 
proc 
ai ia number lnai 
springer verlag 
extended version appeared working notes aaai fall symposium principles hybrid reasoning 
donini lenzerini nardi schaerf 
reasoning description logics 
brewka editor principles knowledge representation studies logic language information pages 
csli publications 
castellanos 
semantic discriminated approach integration federated databases 
proc 
coopis pages 
gupta mumick 
maintenance materialized views problems techniques applications 
ieee bull 
data engineering 
hammer garcia molina widom zhuge 
stanford data warehousing project 
ieee bull 
data engineering 
huhns jacobs 
munindar singh 
integrating enterprise information models carnot 
proc 
coopis pages 
hull 
managing semantic heterogeneity databases theoretical perspective 
proc 
pods 
hull zhou 
framework supporting data integration materialized virtual approaches 
proc 
acm sigmod pages 
hurson bright editors 
multidatabase systems advanced solution global information sharing 
ieee computer society press 

building data warehouse 
john wiley sons second edition 
jarke jeusfeld vassiliadis 
architecture quality data warehouses 
proc 
caise 
kirk levy sagiv srivastava 
information manifold 
proceedings aaai spring symp 
information gathering heterogeneous distributed pages 
knoblock levy editors 
aaai symposium information gathering heterogeneous distributed environments number ss aaai spring symposium series 
aaai press mit press 
levy rajaraman ordille 
query answering algorithms information agents 
proc 
aaai pages 
levy 
rousset 
carin representation language combining horn rules description logics 
proc 
ecai pages 
levy srivastava kirk 
data model query evaluation global information systems 
intelligent information systems 
sheth larson 
federated database systems managing distributed heterogeneous autonomous databases 
acm computing surveys 
ullman :10.1.1.127.3070
information integration logical views 
proc 
icdt number lncs pages 
springer verlag 
widom 
special issue materialized views data warehousing 
ieee bulletin data engineering 
wiederhold 
mediators architecture information systems 
ieee computer 
wiederhold 
special issue intelligent integration information 
intelligent information systems 
wiener gupta zhuge garcia molina widom 
system prototype warehouse view maintenance 
technical report stanford university 
available stanford edu warehousing warehouse html 
zhou hull king 
generating data integration mediators materializations 
intelligent information systems 
zhou hull king 

data integration warehousing 
ieee bull 
data engineering 
zhou hull king 

object matching materialization integrate heterogeneous databases 
proc 
coopis pages 

