graph data mining diane cook lawrence holder department computer science engineering university texas arlington email cse uta edu cygnus uta edu subdue html increasing amount complexity today data urgent need accelerate data mining large databases 
furthermore data structural nature composed parts relations parts 
exists need develop scalable tools analyze discover concepts structural databases 
goal research provide system performs data mining databases represented graphs 
demonstrate subdue system perform key techniques data mining unsupervised pattern discovery supervised concept learning examples 
applications subdue system databases representing cad circuits protein molecules databases uc irvine repository demonstrate scalability ectiveness graph system 
large amount data collected today quickly overwhelming researchers abilities interpret data discover interesting patterns 
response problem number researchers developed techniques discovering concepts databases 
data collected today explicit implicit structural component spatial temporal discovery systems designed handle type data 
method discovering knowledge structural data identi cation common substructures concept represented graphs data 
motivation process merely nd substructures capable compressing data abstracting instances substructure identify conceptually interesting substructures enhance interpretation supported nsf iri 
data 
substructure discovery process identifying concepts describing interesting repetitive substructures structural data 
discovered substructure concept simplify data replacing instances substructure pointer newly discovered concept 
discovered substructure concepts allow abstraction detailed structure original data provide new relevant attributes interpreting data 
describe subdue system discovers interesting substructures structural data 
subdue discovers substructures compress original database represent interesting structural concepts data 
compressing previously discovered substructures data multiple passes subdue produce hierarchical description structural regularities data 
addition performing unsupervised discovery concepts structural databases subdue induce concept descriptions pre classi ed data 
concept learning version subdue accepts positive negative graph searches subgraph compresses positive graph negative graph 
provide overview supervised unsupervised learning capabilities subdue system demonstrate scalability ectiveness data mining techniques variety structural databases 
related variety approaches unsupervised discovery structural data proposed 
approaches knowledge base concepts classify structural data 
systems perform concept learning examples categorization observed data 
methods represent examples distinct objects process individual objects time method stores entire database embedded objects graph processes graph 
scienti discovery systems domain knowledge developed 
systems targeted single application domain 
example relies domain knowledge constrain discovery credible explanatory hypotheses speci domain chemistry 
contrast subdue devised general purpose automated discovery input graph substructure shape shape triangle square object object example substructure graph form 
domain knowledge 
method applied structural domains 
logic systems dominated area relational concept learning especially inductive logic programming ilp systems 
rst order logic represented graph fact rst order logic subset represented graphs 
learning systems graphical representations potential learn richer concepts handle larger hypothesis space 
example ilp system studied foil system 
foil executes topdown approach learning relational concepts theories represented ordered sequence function free de nite clauses 
extensional background knowledge including relations examples target concept relation foil begins general theory follows set covering approach repeatedly adds clause theory covers positive examples negative examples 
clause added theory foil removes positive examples covered clause iterates reduced set positive examples negative examples theory covers positive examples 
order avoid overly complex clauses foil ensures description length clause exceed description length examples covered clause 
addition domains discussed numerous recursive non recursive logical domains foil applied learning search control rules learning patterns hypertext domains 
unsupervised concept discovery subdue subdue discovers substructures compress original data represent structural concepts data 
substructure discovery system represents structural data labeled graph 
objects data map vertices small subgraphs graph relationships objects map directed undirected edges graph 
substructure connected subgraph graphical representation 
instance substructure input graph set vertices edges input graph match graph theoretically graphical representation substructure 
graphical representation serves input substructure discovery system 
shows geometric example database 
graph representation discovered substructure shown instances substructure highlighted picture 
substructure discovery algorithm subdue beam search 
subdue discovery algorithm shown gure 
rst step algorithm initialize containing substructures expanded containing substructures expanded containing highest valued substructures subdue far empty set number substructures expanded far 
lists linked list substructures sorted nonincreasing order substructure value 
unique vertex label substructure assembled de nition vertex label instances vertices label 
substructures inserted 
inner loop core algorithm 
substructure turn removed head instances extended possible ways 
done adding new edge vertex instance just adding new edge vertices vertices part instance 
rst instance unique expansion de nition new child substructure child instances expanded way adding new edge new edge new vertex old vertex instances child substructure 
addition child instances generated di erent expansions match child substructure de nition threshold see section instances child substructure 
child subdue graph beamwidth limit fg fg fg create substructure unique vertex label single vertex instances insert resulting substructures empty empty parent extend instance parent possible ways group extended instances child substructures foreach child sizeof child evaluate child insert child order value length beamwidth destroy substructure insert parent order value length destroy substructure switch return subdue discovery algorithm 
evaluated minimum description length heuristic see section inserted order heuristic value 
beam width search enforced controlling length inserting new child length exceeds beamwidth substructure list destroyed 
parent substructure inserted pruning mechanism limit length greater 
emptied switched holds generation substructures expanded 
subdue running time constrained polynomial beamwidth limit user de ned limit number substructures process parameters computational constraints inexact graph match algorithm see section 
subdue user speci ed parameters controls substructure discovery search space pruned discarding child substructure heuristic value greater parent heuristic value 
early discovery process number instances substructure large dominates value heuristic uses number instances parameter 
substructure grows number instances decreases quickly substructure speci means heuristic value usually decreases early discovery process 
decreases long child substructures discarded list substructures waiting expansion empty discovery halt 
disabling pruning discovery keeps child list full substructure values increase monotonically substructure de nition grows size 
list substructures waiting expansion empties method halting program needed 
user speci es maximum substructure size child substructures larger inserted 
cause eventually empty discovery algorithm halt 
substructure discovered substructure simplify data replacing instances substructure pointer newly discovered substructure 
discovered substructures allow abstraction detailed structures original data 
iteration substructure discovery replacement process constructs hierarchical description structural data terms discovered substructures 
hierarchy provides varying levels interpretation accessed speci goals data analysis 
mdl heuristic subdue heuristic evaluating substructures minimum description length mdl principle states best theory describe set data theory minimizes description length entire data set 
description length calculation model local computer encoder sending description concept remote computer decoder 
local computer encode concept string bits sent remote computer decodes bit string restore original concept 
concept description length number bits bit string 
mdl principle decision tree induction pattern discovery image processing concept learning relational data learning models non homogeneous engineering domains 
subdue implementation mdl principle context graph compression substructure 
best substructure graph minimizes dl dl gjs discovered substructure input graph dl number bits required encode discovered substructure dl gjs number bits required encode input graph compressed substructure cook holder describe exact computation graph description length subdue 
inexact graph match instances substructure appear di erent forms database inexact graph match identify substructure instances 
inexact match approach distortion graph assigned cost 
distortion described terms basic transformations deletion insertion substitution vertices edges 
distortion costs determined user bias match particular types distortions 
graphs vertices vertices complexity full inexact graph match 
routine heavily discovery process complexity algorithm signi cantly degrade performance system 
improve performance inexact graph match algorithm search possible partial mappings uniform cost search 
cost root tree node calculated cost distortions corresponding partial mapping node 
vertices matched graphs considered order heavily connected vertex connected 
uniform cost search guarantees optimal solution search ends soon rst complete mapping 
addition user limit number search nodes considered branch bound procedure de ned function input graph sizes 
number nodes expanded search tree reaches de ned limit search resorts hill climbing cost mapping far measure choosing best node level 
complete description polynomial inexact graph match subdue provided cook holder 
employing computational constraints bound number substructures considered number partial mappings considered inexact graph match subdue constrained run polynomial time 
worst case run time system product number generated substructures number instances substructure number partial mappings considered graph match 
expression equal represents number vertices input graph 
derivation expression provided literature 
applications unsupervised subdue subdue discovery system applied databases number domains 
new application area capabilities identi ed need added system 
successfully applied subdue domain knowledge databases domains including image analysis cad circuit analysis chinese character databases program source code chemical reaction chains 
shows substructures discovered cad circuit representing sixth order bandpass leapfrog ladder substructures inside boxes discovered previous iterations 
substructures evaluated compression obtained substructure time required process database human rating interestingness discovered concepts number substructure instances database 
domain experts rating substructure scale means discovered substructures represent useful information domain means discovered substructures useful 
domain knowledge graph match rules model knowledge graph match rules usage domain knowledge discovered substructures compression nodes expanded instances human rating std dev leapfrog circuit discovered substructures 
table shows subdue discovered substructures performed compressing database represented functional concepts cad domain 
background knowledge general improved functional rating concept mdl principal ective discovering operational ampli er substructure determined highly interesting functional domain 
applied subdue large databases contain data interpretation bene cial scientists reveal capabilities need added discovery system 
applied subdue july release protein data bank pdb 
goal identify structural patterns primary secondary tertiary structure categories proteins hemoglobin patterns act signatures protein category distinguishing proteins category types proteins providing mechanism classifying unknown proteins 
convert primary structure information records pdb le representing amino acid sequence graph vertex 
vertex numbers increase sequence order terminus terminus vertex label name amino acid 
edge labeled bond added adjacent amino acids sequence 
secondary structure extracted listing occurrences helices strands primary sequence 
helix represented graph vertex labeled followed helix type length 
strand represented graph vertex labeled followed orientation strand length strand 
edges consecutive vertices labeled sh belong pdb le 
dimensional features protein represented coordinates atom protein 
amino acid carbon represented graph vertex 
distance greater information discarded 
edges created labeled vs short distance short 
subdue pattern protein category 
primary structure information patterns identi ed unique class protein occurred hemoglobin cases cases cases 
summarizes ndings hemoglobin secondary structure presenting view protein portion protein subdue discovered pattern exists schematic views best pattern 
patterns discovered sample category covered majority proteins category analyzed hemoglobin proteins proteins proteins contained discovered patterns 
detailed analysis pattern indicates possible reasons 
structure protein ected factors 
accuracy structure ected quality protein sample experimental conditions human error 
discrepancies may due physiological biochemical reasons 
structure protein molecule may di er species 
protein may defective 
example cell classic example genetic hemoglobin disease 
defective protein right structure perform normal function 
secondary structural patterns proteins mapped back pdb les 
mapped back discovered hemoglobin pattern belong chains belonged chains hemoglobin molecule hemoglobin molecular contains chains 
discovered pattern appears majority proteins data set 
mapping back discovered patterns observed proteins patterns proteins 
consistent fact complex consisting fragments peptide protein proteins 
pattern comes protein fragment 
dr steve molecular biologist university texas southwestern medical center evaluated patterns discovered subdue system 
scientist asked review original database discovered substructures determine discovered concepts indicative data interesting discoveries 
dr indicated subdue nd interesting pattern data previously unknown suggests new information micro evolution proteins mammals 
secondary structure patterns discovered distinct protein category 
global data set searched identify possible existence discovered pattern category 
results indicate exact match best patterns category category proteins 
application unsupervised supervised learning algorithms subdue continuing hemoglobin structure discovered pattern schematic view 
domains biochemistry geology program source code aviation data 
subdue brings unique capabilities analysis data structural nature 
scalability subdue barriers integration scienti discovery methods practical data mining approaches lack scalability 
discovery systems motivated desire evaluate correctness discovery method regard method scalability 
factor scienti discovery systems deal richer data representations degrade scalability 
example subdue discovery relies computationally expensive procedures subgraph isomorphism 
algorithm polynomially constrained subdue system spends considerable amount computation performing task 
researching means scaling subdue distributed hardware 
approach partition data individual processors process partition parallel 
processor performs sequential subdue local graph partition broadcasts best substructures processors 
processors evaluate communicated substructures local partitions 
evaluations complete master processor gathers results determines global best discoveries 
run time sequential subdue nonlinear respect size graph 
result decreasing size input partitioning graph multiple processors result speedup greater number processors 
serial algorithm analyzes graph entirety overlook important relationships parts graph 
partitioning graph processors may remove essential information case edges boundary lines neighboring information longer processors cad cad cad cad cad cad cad cad seconds processors art art art art art distributed subdue run time cad art graphs 
discover concepts 
metis graph partitioning algorithm www users cs umn edu karypis metis divide input graph partitions way minimizes number edges shared partitions reduces information loss 
modify algorithm allow small amount overlap partitions recovers information lost partition boundaries 
graphs run time distributed subdue classes graphs number processors increases 
classes graphs graphs representing cad circuits graph labeled represents size factor cad contains vertices edges graphs generated arti cially graph labeled represents size factor art contains vertices edges 
predicted speedup usually close linear greater number processors 
increasing number partitions results improved speedup number partitions approaches number vertices graph 
processor portion database degradation quality discovered substructures result parallel version subdue 
practice nd initially number processors increases quality measured compression improves greater number substructures considered allotted time 
limit number partitions approaches number vertices graph quality discovered substructures degrades 
partitioning database ectively distributed subdue proves highly scalable system 
tested databases representing satellite image contains vertices edges ectively processed memory constraints machine distributed subdue processed database hours processors 
minimal amount required communication availability distributed subdue wide spread pvm communication allow system run variety heterogeneous distributed networks 
supervised concept learning subdue extended subdue act unsupervised discovery system perform supervised graph relational concept learning 
general purpose learning methods formal graph representation knowledge arbitrary expressiveness graph inherent np hardness typical learning routines covers general generalization require subgraph isomorphism tests general case 
learning methods pattern recognition chemical domains successful due natural graphical description chemical compounds domain independent concept learning systems graph representation 
added concept learning capability subdue graph discovery system 
main challenge adding concept learning capabilities subdue inclusion negative graph process 
substructures occur positive graph negative graph represent target concept 
subdue concept learner refer accepts positive negative graph evaluates substructures compression positive graph lack compression negative graph 
searches substructure minimizing cost describing substructure positive graph negative graph cost expressed value dl dl dl dl dl description length mdl encoding graph compressed substructure dl description length graph cost represents information needed represent positive graph substructure plus information needed represent portion negative graph compressed substructure prefers substructures compress positive graph negative graph 
challenge adding concept learning capabilities subdue discovery system bias nding substructure entire input graph 
ilp systems distinct advantage subdue typically theories composed rules subdue nds essentially rule 
iterative hierarchical capabilities subdue somewhat address problem substructures iterations typically de ned terms previously discovered substructures specializations earlier general rule 
avoid tendency discards substructure contains substructures discovered previous iterations 
iterates substructure compresses positive graph negative graph 
comparisons compare ilp system foil decision tree induction system 
compare relational learners foil simple arti cial domain house discuss qualitative di erences 
compare systems relational domains drawn uc irvine repository 
depicts datasets house domain house house target concept triangle square 
house contains examples left house contains additional examples shown right 
object shape related objects binary relation 
results running systems house follows 
foil house 
foil house shape triangle 
house house pos neg house domain 
object object shape triangle square object shape bracketed numbers concepts number false negatives false positives 
foil run twice dataset default individual clause accuracy minimum 
foil returned concept house misclassifying positive examples 
foil described houses example triangle top 
identi es triangle square order relate triangle square objects connected substructure include relation 
house dataset adds examples house help emphasize need relation 
results running systems house follows 
foil trouble identifying correct concept 
foil house shape triangle shape triangle 
foil house shape triangle 
house examples reveal advantage graph representation logic position wk bk wr eq pos wrr pos pos eq wrr eq graphical representation discovered substructures chess example 
relational invariant concepts 
concepts logic better suited 
example concept top bottom object shape easily represented house shape shape 
house shape shape 
graph representation alluded house domain need learn di erent substructures di erent shapes 
course concept foreseen graph representation changed include intermediate shape vertex connected vertex actual shape 
equal edges added shape vertices represent equivalent shapes independent actual shape 
furthermore systems handle numeric values vertex labels learning concepts involving general equalities inequalities numbers requires similar representational transformation shape equality 
relational domains tested include illegal chess endgames tic tac toe endgames bach chorales 
chess domain consists row column positions white king white rook black king black king positive negative check 
foil extensionally de nes adjacency relations chess board positions relations row column numbers 
provide information adding features relate row column values piece equal equal adjacent 
shows representation chess domain example 
piece represented vertices corresponding row column piece connected position relation stands white king column 
relations eq relations rows columns 
systems tested predictive accuracy domain fold cross validation signi cance values gathered paired student test 
accuracy results experiment foil subdue 
di erence accuracies foil subdue signi cant level probability di erence insigni cant di erence accuracies subdue signi cant level 
foil learned rules learned rules substructures learned rules 
rules discovered systems described case approximately positive examples rules described substructures shown 
remaining rules di ered system rules proved powerful foil ability learn numeric ranges 
tested systems complete set possible board con gurations tic tac toe games 
target concept win 
systems supplied blank values board positions 
systems subdue key individual position values uses relational information board positions learn concepts row column diagonal 
accuracy results subdue foil di erence signi cant level di erence signi cant level 
nal experiment set musical excerpts described sequence pitch values di erentiate beethoven works bach chorales 
beethoven examples musical theme piece music repeated examples varying pitch set surrounded random pitch values 
bach chorales drawn uc irvine repository 
systems tested absolute pitch values relative di erence pitch value 
systems performed better pitch di erence values 
foil subdue relational information successive notes learn embedded musical sequences positive examples 
accuracy values subdue foil di erence signi cant level di erence signi cant level 
increasing structural component today databases requires data mining algorithms capable handling structural information 
subdue system speci cally designed discovery concepts structural databases 
described subdue supervised unsupervised fashion eciently learn concepts variety structural databases 
subdue represents method integrating domain independent domain dependent substructure discovery minimum description length principle 
method generally applicable structural databases computer aided design cad circuit data molecular data computer programs subdue shown ectively discover substructures relevant domain study 
distributed implementation subdue yields scalability large databases terms memory utilization computational performance 
second introduced graph relational concept learner compared logic relational concept learner foil decision tree induction system 
accepts positive negative graph searches subgraph compresses positive graph negative graph 
experimental results indicate graph concept learner easily learn structural concepts pattern subsequence arguments relation independent relative position subsequence ordered list arguments 
concepts equality constraints arguments recursion easily learned logic concept learners 
quantitative results indicate graph relational concept learner competitive logic relational concept learners variety domains 
comparison identi ed number avenues enhancements types learners 
graph learner bene ability identify ranges numbers 
accomplished utilizing system existing capability nd similar exact matches substructure input graph 
numeric values instances generalized encompassing range 
graph learner needs ability represent recursion plays central part logic concepts 
research needed identify enhancements representation describe recursive structures graph grammars 
focus extending subdue system handle forms learning clustering 
continuing area biochemistry applying subdue data human genome project attempting nd patterns dna sequence indicate presence gene transcription factor site 
approaches nding patterns gene data example graph represent structural information sequence 
hope discovered patterns indicative genes areas dna sequence 
area chemistry applying subdue predictive toxicology challenge data 
data contains structural descriptions chemical compounds analyzed carcinogenicity 
compound held testing labeled cancer causing 
goal nd pattern compounds occur non compounds 
concept learning version subdue promising patterns distinguish compounds 
patterns currently evaluation faculty member uta department chemistry 
addition applying subdue number databases including aviation safety reporting system database geological survey earthquake data software call graphs 
subdue discovered interesting patterns database 
dr geology department uta evaluated subdue results geology data stated subdue correctly identi ed patterns dependent depth earthquakes depth distinguishing factor types earthquakes 
results successfully shown subdue discovers relevant knowledge structural data scales large databases 
ukkonen 
discovering patterns subfamilies 
proceedings fourth international conference intelligent systems molecular biology pages 
cameron jones quinlan 
ecient top induction logic programs 
sigart bulletin 
cheeseman stutz 
bayesian classi cation autoclass theory results 
fayyad piatetsky shapiro smyth uthurusamy editors advances knowledge discovery data mining chapter pages 
mit press 
conklin 
machine discovery protein motifs 
machine learning 
cook holder 
substructure discovery minimum description length background knowledge 
journal arti cial intelligence research 
cook holder 
scalable discovery informative structural concepts domain knowledge 
ieee expert 
craven shavlik 
machine learning approaches gene recognition 
ieee expert 

minimal encoding approach feature discovery 
proceedings national conference arti cial intelligence pages 
cook holder 
empirical study domain knowledge bene ts substructure discovery 
ieee transactions knowledge data engineering 
fayyad piatetsky shapiro smyth 
data mining knowledge discovery overview 
fayyad piatetsky shapiro smyth uthurusamy editors advances knowledge discovery data mining chapter pages 
mit press 
fisher 
knowledge acquisition incremental conceptual clustering 
machine learning 
cook holder 
improving scalability scienti discovery system exploiting parallelism 
proceedings international conference knowledge discovery data mining pages 
leclerc 
constructing simple stable descriptions image partitioning 
international journal computer vision 
pednault 
experiments applying inductive inference principles surface reconstruction 
proceedings international joint conference arti cial intelligence pages 
pentland 
part segmentation object recognition 
neural computation 
quinlan 
programs machine learning 
morgan kaufmann 
quinlan rivest 
inferring decision trees minimum description length principle 
information computation 
rao lu 
learning engineering models minimum description length principle 
proceedings national conference arti cial intelligence pages 
rissanen 
stochastic complexity statistical inquiry 
world scienti publishing 

personal communication 
thompson langley 
concept formation structured domains 
fisher pazzani editors concept formation knowledge experience unsupervised learning chapter 
morgan kaufmann publishers 
valdes perez 
hidden entities means simplicity conservation laws machine discovery chemistry 
arti cial intelligence 

