visualization interface document searching browsing matthew carey frank stefan ger text document search engine new visualization front ends aid navigation set documents returned query hit documents 
methods identifying selecting keywords fly 
choice keywords depends frequency occurrence hit documents specificity occurrence just hit documents 
keywords subsequently obtain sparse document representation compute document clusters variant buckshot algorithm 
visualization front ends uses sparse document representation obtain keyword clusters 
clustering group documents returned search visually label groups salient keywords 
different front ends cater different user needs 
employed browse cluster information drill clusters refine search suggested keywords 
cr categories information storage retrieval information search retrieval clustering information filtering query formulation relevance feedback selection process information interfaces presentation user interfaces graphical user interfaces interaction styles keywords information visualization document clustering feature reduction sammon map tree map radial visualization broad word searches conventional search engines plagued low precision returning thousands hit documents output 
common problem users may sift irrelevant material finding pertinent documents 
suggest standard full text search engine addition computing keywords set hit document 
keywords assist user variety ways informing issues related query narrowing query additional query term suggestions clustering displaying labelling hit document subsets 
multimedia knowledge management km doc ic ac uk department computing imperial college london sw bz england section review method generating keywords 
order computationally efficient generate list candidate keywords document index time 
list available query time having access original documents 
criteria applied keyword selection general potential interest specific hit document set discriminative power set 
document set documents query computer produce keywords software unix ibm users 
clustering documents hit document set sparse document representation keyword histogram vectors 
alleviate curse dimensionality comes popular word histogram representations reduces computing time significantly 
section describes technical components interaction search engine information navigator front section details graphical interfaces keyword document matrix 
interfaces alternative views traditional ranked list representation see fig 
thesis graphical cluster representations shift user mental load slower thought intensive processes reading faster perceptual processes pattern recognition visual display 
opinion dimensional ranked list metaphor restrictive hit documents set large 
furthermore conventional search engines documents ultimately ranked aim ordering relevance user 
appears overly ambitious advanced ranking algorithms know user prefers documents hardware software query simply computer 
graphical cluster interface help users find want 
keywords clustering curse dimensionality dynamically computed keywords natural features text documents words phrases document collection contain millions distinct features 
word histogram representation documents consequently leads high dimensional vectors 
intrinsic problem kind representations randomly picked vectors high dimensional hypercube tend constant distance matter measure consequence clustering algorithms document distances unreliable 
give numeric example effect high dimensionality drawn independently uniform distribution 
expected value sum norm distance standard deviation 
corresponding joint vocabulary just words word histogram representation means typical distance 
increasing ratio standard deviation vector size gets smaller scales generic statistical property high dimensional spaces standard distance measure traced law large numbers 
detailed discussion curse dimensionality see 
word histogram document representations means random vectors additional dimension tends spread size cluster dilute distance previously separated clusters 
prohibitive involving semantic features words document collection document clustering 
applying standard feature reduction techniques number features remains large 
clustering experiments mainly documents candidate keyword appear documents documents 
resulted vocabulary candidate keywords 
system store set candidate keywords document meta data document index time 
set documents returned query may candidate keyword vocabulary different words 
example sets top documents returned queries mafia clinton cancer computer vocabulary different candidate keywords 
document clustering attracted interest decades known importance feature reduction general particular clustering 
little done far facilitate feature reduction document clustering query results notable exception 
contrast uses tf idf weighting scheme suggest ranking importance candidate keyword weight wj hj dj hj log hj total number hit documents hj number documents containing word dj number documents document collection containing second factor prefers words medium valued matched document frequencies factor prefers words specifically occur matched documents 
highest ranked words meant related query 
software ibm unix top ranked words querying computer 
powerful approach restrict features matched documents top ranked words call keywords 
important aspect features computed query time 
query refined computer hardware completely new set keywords emerges automatically 
document representation feature reduction matched document create dimensional vector vi th component vij function number occurrences tij th ranked keyword document vij log tij log dj variation tf idf weight gives stress term frequency tij 
project vector vi unit sphere obtaining normalized vector ui represents document deem scalar product ua ub trec cds vol vol see trec nist gov articles los angeles times financial times federal register congress records foreign broadcast information service 
cosine angle vectors va vb sensible semantic similarity measure documents document subset returned query respect complete document collection may viewed document representation matrix row vector ui dimensional representation document uij viewed importance keyword document particular uij document contain keyword number features controlled experimenter experiments trec data human relevance judgements shown yields superior clustering results 
note top keywords clustering document representation display keywords screen assist user search 
document clustering post retrieval document clustering studied years 
deploy variant buckshot algorithm phase process cluster document representations ui euclidean dim space 
cluster contains certain number document vectors represented normalized arithmetic mean called centroid vector 
phase hierarchical clustering complete linkage operates best ranked documents contrast original buckshot method random document sample 
done fraction second cpu time 
hierarchical clustering advantage prescribe number clusters number clusters determined demanding certain minimum similarity cluster 
way clusters top ranked documents identified centroids computed seed standard iterative clustering remaining documents 
algorithm consumes amount time linear number documents number clusters 
experience cycle iterative clustering adequate preserves cluster structure top ranked documents thought important 
documents clustered second standard mhz pc 
system overview architecture system divided major subsystems far components index data process return results searches networking components transport data display components data allow user interact 
fig shows subsystems detail 
rest section explain various parts architecture 
far search engine major parts application indexing program feeds search engine search engine result processing program adds interesting word data clusters sammon maps set 
networking consists parts java threaded socket server executes search engine captures results secondly enterprise java beans communicate socket server return results java servlet communicates display applet 
display applet consists general query interface visualizations addition ranked list display different tabbed panels serviced data manager module 
module piece code responsible storing data supplying individual visualization modules 
display module display module display module web browser data manager browser vm applet fetch servlet search servlet ee web server fetch session bean search session bean fetch server threaded socket server search server interesting words sparse doc term matrix clustering sammon map managing gigabytes search engine document collection trec data system architecture search engine powered slightly modified version mg search engine accompanies managing gigabytes book 
engine source code freely downloadable non commercial run number modes 
chose ranked query searches engine generates document brief section text pipe results processing program 
queries run data set entered search engine 
mg engine expects run application shell script delivers series documents standard output delimiting document 
basic sample script provided user devise suitable script program carry task 
indexing program fulfils task script 
descending various data directories indicated environmental variable documents listing contents mg engine keeps record word documents counts documents word occurred 
having complete pass documents indexing program data file contains document frequency word document data set 
file create ordered file candidate keywords index file index file document frequencies 
candidate keywords fall inside statistical boundary document frequencies see section 
indexing program second pass document data files recording document number occurrences candidate keyword document 
stores data variable length record file time creates index file 
documents indexed mg search engine able respond query computing efficiently ranked list documents contain query words 
note point standard full text inverted document file processing query 
order obtain keywords candidate keyword document data encapsulated auxiliary index files processing program calculate weight candidate keyword statistical formula 
highest weighted candidate keywords result set kept keywords 
sparse matrix incidents keywords document created 
matrix turn clustered sammon map generated cluster centroids 
document numbers document snippets keywords sparse matrix keyword document incidents clusters document numbers sammon map clusters piped calling program 
threaded socket server kept continually running listening requests coming ports 
request thread created instance appropriate class handle request created 
case search query search server runs shell script calls instances mg search engine result processing program 
result piped back search server uses result data create serialized data object 
transmitted back network search session bean thread 
instance stateless session bean continually running ee server 
bean passes query servlet socket server waits result passed back caller 
servlet runs ee server 
gets query request applet running browser sends query stateless session bean 
applet issues query waits result 
uses serialized data returned set contents data manager visualizations 
set visualizations notified recalculate display 
applet issues request document query request follows different path 
applet requests browser open page url fetch servlet request document number appended url 
fetch servlet calls fetch stateless session bean issues fetch request fetch server 
fetch server socket server runs search engine customized request document 
document content piped back server transmits serialized vector lines fetch bean 
fetch bean passes vector lines back fetch servlet displays document separate browser window 
system stands thick client model 
minimizes network putting applet 
applet installed client browser limited demand network resources query time document retrieval 
new paradigms information visualization decade witnessed explosion interest field information visualization 
add new techniques information visualization pool existing visualization paradigms design study published earlier year 
sammon cluster view paradigm uses sammon map generate dimensional location dimensional vector cluster centroids 
map computed iterative gradient search 
aim algorithm represent dimensional points lower usually dimensional space attempting preserve pairwise distances objects 
visualization sammon map attempts arrange clusters spatial arrangement display rectangle indicative relationship dimensional space 
idea create visual landscape navigation 
display panels scrolling table panel left graphic panel right scrolling text panel see traditional ranked list metaphor fig 
graphic panel cluster represented circle labelled frequent keyword 
larger circles darker represent larger clusters smaller circles represent smaller clusters brighter red colour 
distance circles graphic panel indication similarity respective clusters nearer clusters documents contained similar 
mouse passes cluster circle tool tip box form pop menu appears 
operations select drill executed particular cluster selection clusters 
item cluster popup menu shows count documents cluster 
choosing item displays scrolled table cluster keywords pane left hand side visualization scrolled list cluster document hot links snippets appear scrolling text window bottom display 
table keywords includes box field selected 
bottom table filter button scrolling text window display hot links snippets documents contain selected keywords 
select item pop menu marks cluster selected signals flag 
menu items serve label cluster significant keywords selectable 
drill item pop menu performs redisplay documents current cluster selected clusters 
drill sense pushes current data manager stack creates new data manager consists documents current selected clusters 
new instance data manager re clusters subset original hit document set creates new sammon map turn leads new display visualization 
level indication top display incremented back button enabled 
back button pops data manager stack climbs hierarchy drill 
clustering algorithm reclustering drill operation essentially described sammon mapping clustering search 
time implemented java applet opposed server processing code 
long documents selected set documents drill operation enabled 
tree map visualization tree map visualization represents clusters documents rectangles see fig 
representation idea 
rectangles arranged fit larger rectangle 
size rectangle proportionate size cluster represents 
similar clusters grouped super clusters 
super clusters separated black lines sub clusters white lines 
cluster rectangles different colours labelled frequent keywords 
algorithm arrange size rectangles described 
moving mouse cluster rectangle brings bubble box illustrating numerous keywords cluster 
clicking left mouse button rectangle displays list keywords occur cluster scrolling table right display 
keywords listed descending order cluster document frequency 
bar indicates frequency keyword accompanied percentage amount 
keywords selected sammon map view 
show documents button table lists snippet hot linked document number document cluster scrolling box bottom frame 
clicking hot link displays document separate document window 
filter button clicked displays just documents contain keywords selected table pane box bottom frame 
right clicking mouse cluster rectangle causes drill occur 
drill implemented visualization new search archive document set populous keywords search terms 
visualization pushes record data tree map visualization manager stack 
creates new data manager executes query request returns results visualization 
result returned little animation illustrates drill new display created slightly smaller rectangle 
back button enabled 
clicked display moves back previous visualization 
note different interpretation drill sammon map visualization 
radial interactive visualization radial visualization similar vibe 
places keyword nodes round circle dimensional anchors document nodes occur middle suspended springs connecting keyword nodes 
greater content stronger springs affect document location 
fig illustrates paradigm 
direct representation matrix explicit clustering 
radial adds level user interaction metaphor introduced vibe 
building vibe takes similar idea dimensions 
vector addition position documents nodes relevance sphere 
document keyword content creates vector centre axis sphere position keyword sphere surface 
radius sphere defined range possible vector lengths 
relevance sphere manipulated rotated computer display give clue location document node relative keyword nodes 
relative attractiveness keyword nodes enhanced pull related documents 
radial staying dimensions dispenses perceptual complexity implicit rendering dimensional model dimensional screen 
radial visualizations uses statistically collected keywords differentiate documents 
initially twelve highest ranking keywords displayed circle 
radial visualization documents search set contain keywords placed similar vector sum circle 
mouse passes document nodes bubble displays descriptive piece text document 
dimensions circle arbitrary display simply flat sum vectors possible document nodes outside circle 
constrained positions projecting radial locations arc tangent function 
harder harder document moved edge circle 
radial vibe attempts great dimensions 
locations document nodes ambiguous possible reason node particular point 
mitigate radial user click document node keyword nodes affect location document highlighted 
believe novel useful feature 
clues effects different dimensions keyword node selected mouse document nodes contain keyword highlighted 
similarly vector effect particular keyword node document set enhanced 
radial achieved grabbing keyword node mouse moving away edge circle 
sort manual clustering effected placing keyword nodes cosa keywords fig 
alternatively button allows displayed keyword arrangement automatically clustered columns matrix note document clustering done rows matrix 
choice keywords display enhanced reduced clicking visible lists words 
zoom buttons allow degree projection increased reduced distinguish document nodes edges display centre 
double clicking document node mouse retrieves full document separate browser window 
shortcoming radial visualization say documents result set contain particular limited set keywords displayed 
keywords displayed display difficult interpret 
cluster visualizations witnessed tree map visualization sammon map visualization show strength 
hand radial visualization appears interactive tool structure document set preferences shifting keywords display 
unified approach unified approach brings possibility different visualizations plugged different visualizations compared evaluated 
application offers possibility browsing result set different ways simultaneously flipping visualization 
cluster visualizations give broader picture result radial visualization allows user focus subsets keywords 
clusters implication approximations bring fore particular keywords may useful return radial visualization examine effect keywords document set 
sammon map attempts say relative relationship clusters tree map tree map explicit cluster size shows level hierarchical cluster structure 
radial visualization fruitful initial keywords match users area interest 
tree map visualization allow user focus keywords inhabit sort documents user interested allowing user formulate productive search 
sammon map user dissect search set re cluster subset gradually move closer sort documents contain items user interested 
user may recourse radial visualization apply keywords result set 
need read documents negotiating ranked list 
user wishing browse structured system documents library system sense clustered 
documents obviously arranged close 
cluster visualizations give visual analogy structure implicit library classification scheme 
radial visualization throws effects keywords cause cross documents allows user skim subject areas 
likewise drill implemented tree map visualization reformulates search terms user different classification areas 
evaluation literature information visualization mainly construction evaluation exceptions rule see 
evaluation level approach 
level performed experiments assess quality clustering process human expert data ability separate relevant documents irrelevant documents 
subcollection trec data documents queries corresponding relevance assessments 
question posed clustering algorithms produce clusters concentration relevant documents high low 
results showed compelling evidence validity clustering hypothesis post retrieval document sets low dimensional document representations keyword computation discussed section 
study gave green light developing designs cluster visualizations 
level process developing software able get feedback acquaintances students questionnaires 
useful 
placing executable applet web letting people know meant shortcomings known quickly 
application posted web 
asked group users complete pre questionnaire 
employ specific visualization interfaces execute collection preset queries sufficiently obscure answers known data set 
asked users apply system queries choice 
point definite views visualization interfaces 
asked complete post questionnaire contained set narrow fixed questions application open areas user comment 
second level evaluation served refine design development visualization interfaces 
third level evaluation proper formal user study scheduled carried november collaboration ben gurion university 
contributed visualization browsing set document returned search engine number ways 
identify relevant features document set keywords 
dimensionality reduction improved clustering cluster labelling query refinement visualization 
sammon algorithm able create setting holistic view giving primarily information order cluster structure inter cluster relations 
main purpose quickly weed irrelevant clusters drill relevant clusters 
tree map algorithm able display second order cluster structure glance 
applications include learning fine structure nature queried object coded actual keywords document repository ideal user knowing little subject 
keyword clustering radial visualization gives rise novel document clustering approach user control building groups interactively moving keywords 
feel interface particularly useful experimental user driven approach form clusters get suitable ranking interactively moving keywords screen 
allen littman 
interface navigating clustered document sets returned queries 
proc acm conf organizational computing systems pages 
ankerst keim kriegel 
circle segments technique visually exploring large multidimensional data sets 
ieee visualization 
cohen milo 
displaying data multidimensional relevance space visualization maps 
ieee visualization 
au carey guo ger 
new paradigms information visualisation 
proc rd international acm sigir conference 

visible threads smart vr interface digital libraries 
proc ist spie th annual international symposium electronic imaging visual data exploration analysis spie 
card 
visualizing retrieved information survey 
ieee computer graphics applications 
chalmers 
bead explorations information visualisation 
proc th intl acm sigir conf 
croft 
organizing searching large files documents 
phd thesis university cambridge october 
cutting karger pedersen tukey 
scatter gather cluster approach browsing large document collections 
proc th intl acm sigir conf pages 
hearst pedersen 
reexamining cluster hypothesis scatter gather retrieval results 
proceedings th international acm sigir conference 
willet 
visualization user interface supporting fulltext retrieval 
proc th intl acm sigir conf 
hoffman grinstein 
dimensional anchors graphic primitive multidimensional multivariate information visualizations 
proc pages 
korfhage 
see see query 
proc th intl acm sigir conf 
krishnaiah kanal editors 
handbook statistics classification pattern recognition reduction dimensionality volume 
north holland publishing 
croft 
evaluation techniques clustering search results 
technical report ir department computer science university massachusetts amherst 
nowell france hix heath fox 
visualizing search results alternatives query document similarity 
proc th annual international acm conference research development information retrieval sigir 
rasmussen 
clustering algorithms 
frakes baeza yates editors information retrieval data structures algorithms pages 
prentice hall 
desjardins 
visualizing high dimensional predictive model quality 
proc ieee visualization 
ger gauch 
feature reduction document clustering classification 
technical report computing department imperial college london uk 
gerard salton 
automatic information organization retrieval 
mcgraw hill new york 
sammon 
nonlinear mapping data structure analysis 
ieee transactions computers 
sch tze silverstein 
projections efficient document clustering 
proceedings th international acm sigir conference 
miller 
visualization search results comparative evaluation text interfaces 
proc nd international acm conference research development information retrieval sigir 
shaw ebert nicholas miller roberts 
interactive volumetric information visualization document corpus management 
international journal digital libraries 
shneiderman 
tree visualization tree maps space filling approach 
acm transactions graphics 
shneiderman feldman rose grau 
visualizing digital library search results categorical hierarchical axes 
proc acm digital libraries 

infocrystal visual tool information retrieval management 
proc information knowledge management 
van rijsbergen 
information retrieval 
butterworth london nd edition 

effectiveness graphical display retrieval results 
proc th annual international acm conference research development information retrieval sigir pages 
voorhees 
cluster hypothesis revisited 
proc acm sigir pages 
ian witten alistair moffat timothy bell 
managing gigabytes 
morgan kaufmann publishers 
zamir etzioni 
web document clustering feasibility demonstration 
proc th intl acm sigir conf pages 
zamir etzioni 
grouper dynamic clustering interface web search results 
proc eighth international world wide web conference www 
zhou feiner 
visual task characterization automated visual discourse synthesis 
proc conference human factors computing systems chi pages 
partially supported epsrc uk 
