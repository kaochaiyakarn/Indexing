integrated model latency steady state throughput tcp connections department electrical computer systems engineering rensselaer polytechnic institute troy ny usa email networks rpi edu phone tcp connections today internet transfer data order kbytes 
tcp transfers short spend time slow start phase 
underlying assumptions steady state models cease hold making unsuitable modeling finite flows 
propose accurate model estimating transfer times tcp flows arbitrary size 
model gives accurate estimation transfer times predicted extends steady state analysis padhye model finite flows 
main features modeling timeouts slow start phases occur transfer accurate model evolution cwnd slow start phase 
additionally proposed model model steady state throughput tcp connections 
model verified web measurements real life tcp connections 
introduce empirical model allows better feel tcp latency nature dependence loss probabilities window limitation 
investigates effect window limitation packet size tcp latency 
supported part darpa contract number muri contract afosr 
corresponding author dominance tcp transport protocol choice internet majority today networking applications led efforts develop models characterize behavior 
complex nature congestion control mechanism dependence feedback form acknowledgments development accurate models difficult 
existing models confine attention steady state throughput long tcp connections 
model performance analysis tcp assuming loss 
contrast infinite flow assumptions steady state models tcp transfers short high loss rates uncommon 
short flows spend time slow start phase cwnd relatively large 
loss flow suffers leads timeouts fast retransmits congestion avoidance 
underlying assumptions steady state models cease hold short transfers consequently unsuitable modeling shorter flows 
studies shown tcp connections today carry traffic 
web browsers non persistent connections lead tcp connections median size kbytes average size kbytes vast majority connections transferring files kbytes 
persistent tcp connections average size file transfer larger indicated average size kbytes 
general tcp transfers quite small steady state analysis point view 
example typical mss bytes kbyte transfer segments long 
motivates development analytical models take short size tcp transfers account 
propose single model model latency tcp connection size loss probability give steady state throughput infinite flows 
authors propose model extends results finite flows accounting connection establishment phase approximate analysis initial slow start 
authors model portion flow loss steady state analysis 
model captures slow start effects subsequently transfer arise due timeouts 
accurate expression modeling cwnd increase pattern tcp flows factors lead accurate model results 
main contributions summarized ffl single accurate model accurately predicts short steady state tcp transfers 
model valid loss probability accounts effects window limitation 
ffl empirical model tcp transfer times particularly useful giving feel tcp latency developing design guidelines 
ffl sensitivity analysis effect packet sizes window limitation tcp latency 
explore effects window limitation maximum segment size tcp latencies 
sensitivity analysis shows transfer time reduces maximum window size increases improvements tends saturate point dependent loss probability significant improvement 
rest organized follows 
section give description assumptions network tcp transfer 
section introduces model finite tcp transfers section extends model steady state throughput infinite flows 
section presents validation results section introduces empirical model section deals sensitivity analysis tcp transfer times 
section presents discussion results concluding remarks 
assumptions follow network tcp transfer scenario similar 
assume hosts congestion control algorithm tcp reno family 
model considers latency arising tcp performance account delays arising points factors buffer limitations 
assume sender sends full sized segments fast congestion window allows receiver advertises consistent flow control window 
assume receiver uses delayed acknowledgment scheme specified rfc 
account effects nagle algorithm silly window avoidance 
model tcp latency considering rounds 
round begins transmission window packets receiver ends sender receives acknowledgment packets 
assume losses round independent losses rounds 
assume losses round independent 
assumption better suited model losses occurring networks red queues correlated error model better suited fifo drop tail queueing 
short transfers cwnd values expected small flows usually significant portion path bandwidth 
binomial model suited modeling total number losses suffered flow 
assume time transmit packets round smaller duration round duration round independent window size 
amount data transferred assumed arbitrary allowing hand extremely short transfers suffer extremely losses hand large transfers latencies modeled steady state throughput 
modeling latency tcp connections section propose model estimate transfer time tcp connections function rtt loss probability path 
propose single model arbitrary data transfer sizes give steady state throughput infinite tcp connections 
approach estimating transfer time flow suffers specified number losses 
combined probability flow suffers number losses gives expected transfer time tcp flow 
model addition accounting slow start connection accounts events flow may arise due timeouts 
derive transfer time tcp connection suffer losses derive expressions tcp flows single loss 
model extended multiple losses 
derive transfer times function total number unique packets transferred data size mss connection establishment tcp connection begins way handshake initiating host sending syn segment 
receiver responds ack initiating host syn sends syn packet 
initiating host receives syn ack packet assumes connection established confirms sending ack 
process host receive ack expecting timeout period retransmits syn waits twice long ack 
arguments derivation 
proposed model delayed ack timer expiration delayed ack timer expiration window increase patterns tcp flows slow start phase 
shown loss rates low connections successfully established tcp gives expected duration connection setup phase setup approximated setup rtt gamma gamma gamma window increase pattern tcp starts transmission slow start phase increases window acknowledgment gets 
receiver delayed acknowledgments sends acknowledgment packets gets delayed acknowledgment timer expires 
factor increase fl 
unix systems timer set ms leads expected delay ms packet flow sent assuming initial window 
windows windows nt systems delay uniformly distributed ms ms 
examples increase pattern cwnd tcp flow starting cwnd shown receiver sending acknowledgment packets receives 
consider round cwnd round packet numbers sent 
receiver sends acknowledgment packets delays sending acknowledgment packet number 
new packet arrives ack timer expires packet number acknowledged new packet subsequent cwnd increase pattern shown 
ack timer expires new packet arrives acknowledgment sent results cwnd shown 
account complex behavior cwnd develop accurate model tries model increase pattern expected value cwnd round 
results accurate representation number packets transmitted round compared fl th round 
number packets transmitted th round model packets gamma gamma predicted window increase pattern model shown 
note model predicts number packets transmitted fourth round average packets transmitted examples 
number packets transmitted rounds slow start phase packets gamma gamma gamma gamma gamma note packet flow sent receiver waits vain second packet arrive 
eventually acknowledgment timer expires acknowledgment sent increases cwnd 
denote delay due delayed acknowledgment ms unix systems ms windows 
flows losses flow experience losses congestion window increases exponentially reaches max stays transfer complete 
number rounds required reach cwnd max computed equation log wmax number packets transmitted cwnd reaches max exp exp gamma gamma gamma wmax time transfer packets exp obtained solving packets transfer time packets loss log rtt exp gamman exp wmax mi rtt flows single loss consider case flow experiences single loss 
consider flow packets th packet lost 
window increases exponentially till packets transmitted 
time transmit packets loss equation 
cwnd round packet lost loss lead timeout 
cwnd reduces exponential slow start phase timeout lasts till cwnd 
flow gets congestion avoidance mode increases cwnd rtts till remaining packets transmitted cwnd reaches max average duration timeout period calculated fi gamma flow reaches congestion avoidance phase cwnd increases linearly increasing rtts 
number rounds required transmit packets congestion avoidance mode initial value cwnd obtained solving gamma solution equation accounting effect window limitation linear gammax gamma gamma gamma max max gamma gamma gammaw max wmax gamma wmax wmax gamma gamma gamma gamma note part equation case cwnd reach wmax second part case 
find time transmit packets need find number packets need transmitted congestion avoidance mode timeout 
address introduce expressions cwnd round th packet transmitted sequence number packet round 
find cwnd round th packet transmitted find number rounds takes transmit packets loss assuming effect window limitation 
greater equal number rounds takes cwnd reach max know cwnd wmax cases cwnd max equation 
cwnd cwnd round th packet transmitted expressed cwnd wmax gamma gamma log equation 
sequence number packet transmitted round max obtained equation nmax exp max gamman exp wmax max gamma gamma gamma log equation 
proceed find number packets remain transmitted congestion avoidance phase 
round th packet transmitted gamma nmax cwnd gamma packets transmitted th packet 
expect gamman max cwnd gamma acknowledgments packets 
cwnd th packet lost increases cwnd cwnd gamman max cwnd gamma total number packets sent till flow experiences timeout cwnd gamman max cwnd gamma gamma 
packet gets sent exponential phase cwnd timeout 
number packets sent congestion avoidance mode gamma gamma time required transmit linear gamma gamma equation 
total time required transfer packets delta delta delta loss loss fi linear gamma gamma gamma rtt observe term equation corresponds time transmit packets fi gives duration timeout period terms corresponds time spent congestion avoidance phase transmit gamma gamma remaining packets 
rounds cwnd greater equal single error packet lead congestion avoidance timeout 
duplicate acknowledgments received sender infers loss retransmits 
time transmit packets loss equation 
find total transfer time find number packets transmitted window cuts cwnd 
note cases depending lost packet packets round 
lost packet packets round new round packets transmitted tcp gets duplicate acknowledgments 
third duplicate acknowledgment received round lost packet retransmitted round 
illustrates concept 
consider case lost packet packets round 
loss rd dup 
ack loss linear increase rd dup 
ack 
linear increase lost packet packets window dup 
ack round rd lost packet packets window dup 
ack round rd 
retransmission retransmission window increase patterns tcp flows different positions lost packet window 
round th packet transmitted gamma max cwnd gamma packets transmitted th packet expect gamman max cwnd gamma acknowledgments packets 
cwnd th packet lost cwnd gamman max cwnd gamma receiving third duplicate acknowledgment window halves added cwnd lost packet retransmitted window increased duplicate acknowledgment received 
lost packet acknowledged flow goes congestion avoidance mode 
hand case lost packet packets round additional window cwnd gamman max cwnd gamma packets sent third duplicate acknowledgment received 
receipt third duplicate acknowledgment window reduces half lost packet retransmitted window increased 
additional duplicate acknowledgment window increased lost packet acknowledged flow goes congestion avoidance mode 
number packets remain transmitted congestion avoidance mode min max cwnd cwnd gamma gamma max gamma min wmax cwnd nmax gamma gamma cwnd max gamman max cwnd gamma cwnd congestion avoidance mode cwnd half value third duplicate acknowledgment received cwnd time transmit remaining gammak packets congestion avoidance mode calculated linear gamma cwnd equation 
time required loss mult loss modeling flow breaking section loss remaining section rest losses 
transfer packets delta delta delta loss loss rtt linear gamma gamma rtt max gamma linear gamma gamma rtt cwnd note term fi appear equation timeout 
flows multiple losses consider case loss 
flow packets experiences losses assume second loss occurs th packet find time taken transmit gamma packets loss equations section 
please refer illustration 
second loss gamma packets remain transmitted gamma losses packets 
assuming uniform distribution losses average distance number packets consecutive losses ave ave gamma gamma take ave look substructure 
compute average time transmit ave packets multiplied gamma gives time required transfer remainder flow gamma packets 
loss approximate possible range values cwnd subsequent losses occur delta delta delta dc gamma dave 
account effect window limitation possible values cwnd limit range max dc gamma dave 
factor rtt gammap empirically derived simulations curve fitting 
keep analysis tractable assume possible values cwnd position lost packet cwnd equally loss occurs 
tcp transfer congestion avoidance mode loss subsequent loss leads timeout cwnd value round 
tractability ave parameters relation ave neglect cases subsequent losses occur connection slow start mode timeout 
duration timeout consider flow cwnd th packet round lost see 
want find time transmit ave packets lost packet 
note lost packet packet round packets round get valid acknowledgments window slides forward 
allows transmission additional packets round flow experiences timeout 
number packets successfully transmitted th packet timeout shown gamma 
slow start phase timeout lasts effectively round cwnd exponential increase lasts till cwnd 
ave gamma packets remain transmitted congestion avoidance mode time linear ave gamma equation 
total time transmit ave packets timeout fi linear ave gamma gamma rtt indicator function takes value condition satisfied 
hand losses occur cwnd lead fast retransmissions 
explained previous section lost packet packets round additional round packets transmitted third duplicate acknowledgment received 
receiving third duplicate acknowledgment cwnd cuts lost packet retransmitted added cwnd 
cwnd increases duplicate acknowledgment received 
retransmitted packet acknowledged cwnd set congestion avoidance takes 
number packets successfully transmitted lost packet congestion avoidance takes calculated gamma max gamma gamma gamma wmax gamma time transmit remaining ave gamma packets congestion avoidance mode linear gamma congestion avoidance mode starts cwnd 
time taken transmit ave packets loss th packet window size lost fast gamma linear ave gamma rtt gamma gamma linear ave gamma rtt note equations form similar equations 
equations calculate average time losses transfer time remaining gamma packets 
find expected time transmit ave packets multiply gamma get time required transmit packets second loss 
combined time transmit gamma packets equations gives expected transfer time flow 
expected transfer time flow packets multiple losses mult loss mult loss eft loss gamma ef gamma timeout ave ef gamma fast ave sequence number second packet lost expectation operation carried possible values number losses expected transfer time combining results previous sections expected transfer time flow packets transfer setup gamma loss gamma gamma eft loss mult loss setup loss mult loss defined equations respectively loss defined equations 
program calculate expected transfer time available online downloaded networks rpi edu time tcp modeling infinite flows section extend analysis previous section model infinite tcp flows steady state throughput 
assume source unlimited amount data send 
loss model assumed section independent loss model introduced section contrast burst loss model 
extend model section infinite flow note infinite flow probability flow experiences single loss 
flows multiple losses equations find average transmission time successive errors 
packet loss probability average number packets transmitted successive losses average transmission time successive losses calculate steady state throughput flow 
possible values cwnd case approximated vary uniformly cw max cw max cw max min gamma max rtt gammap expected time transfer packets written ss cw max cw max timeout fast retransmit timeout fast retransmit defined equations 
steady state throughput bytes second tcp connection ss mss ss note expression steady state throughput closed form derived padhye numerical values 
numerical results comparison measurements tcp connections section 
model verification results models proposed previous sections verified section measurements real world tcp connections internet 
verify extension model calculate steady state throughput tcp connections comparing results 
verify accuracy proposed model real world tcp connections conducted number measurements tcp connections local machine machines various domains united states abroad 
show results tcp file transfers midwest usa west measured proposed data transfered bytes rtt wmax measured proposed data transfered bytes rtt wmax transfer times measured modeled tcp transfer local machine university pisa italy 
proposed measured data transfered bytes transfer time sec rtt wmax proposed measured data transfered bytes transfer time sec rtt wmax transfer times measured modeled tcp transfer local machine ohio state university 
coast usa europe machine east coast usa 
local machine running solaris running hp ux freebsd freebsd respectively 
figures show transfer times various files sizes destinations compare model 
measurement results generated conducting ftp transfers randomly generated file sizes uniform distribution sender local machine receiver remote domain 
sets results correspond cases file sizes generated bytes bytes 
results model match closely measurements 
note results significant improvement model proposed particularly proposed measured data transfered bytes transfer time sec rtt wmax proposed measured data transfered bytes rtt wmax transfer times measured modeled tcp transfer local machine university california los angeles 
transfers bytes 
larger transfers appreciable difference results 
improvement primarily due fact model able capture effects timeouts accurately follows realistic model cwnd increase pattern 
measured proposed frequency loss indications rtt wmax sec measured proposed frequency loss indications number packets sent rtt wmax sec steady state throughput tcp connections proposed model compared model measurements fig 

figures show results model extended calculate steady state throughput tcp connections 
compare results padhye traces reported 
plot graphs sec transfers fig 
see results match closely measurements model proposed 
note little deviation models loss probability increases due difference loss models 
affect accuracy measured proposed frequency loss indications number packets sent rtt wmax sec measured proposed frequency loss indications rtt wmax sec steady state throughput tcp connections proposed model compared model measurements fig 

validity results results close measured values 
empirical model get feel tcp behavior lead design guidelines propose empirical model tcp latency 
model gives rough idea dependence tcp latency loss probability window limitation 
empirically time transfer packets tcp approximated emp log ff rtt log pg rtt gamma max max rtt rtt rtt rtt expression model corresponds case flow experience losses 
second term accounts increase transfer times dues losses neglecting window limitation effects 
third term accounts effects window limitation 
model indicates transfer time increases exponentially increase loss rate 
larger rtts rate increase decreases 
third term shows transfer time inversely proportional max significant improvement latency max increased threshold 
transfer times predicted empirical model compared obtained equation seen empirical model close approximation wide range rtts loss rates max file sizes 
empirical model get rough rtt empirical model ms transfer time sec number packets model ms rtt empirical number packets transfer times empirical model analytic model equation 
corresponds rtt ms second rtt ms 
indication dependence tcp latency various parameters 
sensitivity analysis previous sections concentrated effect loss probability rtt tcp transfer times 
factor influence transfer time packet lengths maximum window size max investigate sensitivity tcp latency variation packet sizes effect window limitation 
plot transfer time tcp connections function packet size wmax parameters kept constant 
expected graphs indicate transfer time increases packet sizes get smaller max decreases 
note reduction transfer time increase max linear tends saturate 
smaller data transfers effect max transfer time transfer cwnd reaches max decrease transfer time large values max small justify increasing limit determined loss probability 
explain note packet loss probability average see loss packets 
cwnd flow generally lower max cwnd wmax flow significant increase transfer time due window limitation 
increase max point reduces effect window limitation see transfer time saturates value predicted equation max 
note transfer time decreases packet size increases reduction transfer time bytes bytes bytes data transferred bytes transfer time sec rtt wmax wmax wmax data transferred bytes transfer time sec rtt effect packet sizes max transfer time tcp connections 
scale linearly increase packet size 
discussions model tcp transfer times capable modeling tcp latencies arbitrary file sizes 
model applied obtain steady state throughput tcp connections assuming infinite flows 
contrast earlier models assume loss infinite flows model slow start tcp connections transfer model accounts arbitrary file sizes slow start phases possible points flow arbitrary loss probabilities 
model accurate finite tcp flows 
attributed better modeling timeouts experienced tcp flow accurate model evolution cwnd 
model accounts possibility window limitation 
model verified real life web measurements 
validate steady state throughput model traces show results agreement 
empirical model estimating latency tcp transfers 
model gives indication dependence latency various parameters helpful formulating design guidelines 
carried sensitivity studies tcp respect packet sizes effect window limitations 
show transfer time decreases increasing max improvement tends saturate max increases 
due fact loss probability expect see loss packets window value flow generally exceed consequently max effect window limitation low increases max affect transfer time 
interest investigate effects different buffer management schemes loss probability consequently tcp transfer times 
avenue explore relationship loss probabilities link tcp slow start congestion avoidance schemes 
applications model designing qos sensitive admission control algorithms developing tcp friendly flows online modeling simulations 
acknowledgments prof balakrishnan mit prof zhang ucla prof rizzo university pisa italy gmd fokus berlin germany prof manjunath indian institute technology bombay india providing accounts machines padhye university massachusetts amherst providing traces steady state analysis 
cardwell savage anderson modeling performance short tcp connections university washington seattle oct 
cardwell savage anderson modeling tcp latency appear proceedings ieee infocom tel aviv israel march 
meo new approach model stationary behavior tcp connections appear proceedings ieee infocom tel aviv israel march 
cunha bestavros crovella characteristics www client traces technical report bu cs boston university jul 
heidemann obraczka touch modeling performance transfer protocols ieee acm transactions networking vol 
oct 
kumar comparative performance analysis versions tcp local network lossy link ieee acm transactions networking vol 
aug 
lakshman madhow performance tcp ip networks high products random loss ieee acm transactions networking vol 
pp jun 
mah empirical model network traffic proceedings ieee infocom kobe apr 
mathis semke mahdavi ott macroscopic behavior tcp congestion avoidance algorithm acm computer communications review vol 
pp jul 
ott mathis stationary behavior ideal tcp congestion avoidance ftp ftp bellcore com pub ps unpublished manuscript aug 
padhye firoiu towsley kurose simple model empirical validation proceedings acm sigcomm vancouver bc canada pp sep 
partridge shepard tcp ip performance satellite links ieee network pp sep oct 
thompson miller wilder wide area internet traffic patters characteristics ieee network vol 
pp nov 

