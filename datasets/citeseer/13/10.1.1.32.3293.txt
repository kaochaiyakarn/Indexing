proceedings ieee international conference robotics automation san francisco ca april pp 

vfh local obstacle avoidance look ahead verification presents enhancement earlier developed vector field histogram vfh method mobile robot obstacle avoidance 
enhanced method called vfh successfully deals situations problematic purely local obstacle avoidance algorithms 
vfh method verifies particular candidate direction guides robot obstacle 
verification performed search algorithm appropriate cost heuristic functions 

mobile robot systems combine global module local obstacle avoidance module perform navigation 
global path planner determines suitable path map environment obstacle avoidance algorithm determines suitable direction motion sensor data 
obstacle avoidance performed locally order ensure real time constraints satisfied 
fast update rate obstacle avoidance algorithm required allow robot safely travel high speeds 
khatib concept artificial potential fields real time obstacle avoidance algorithm mobile robots manipulators 
time moravec elfes pioneered concept certainty grids widely popular map representation suited sensor data accumulation sensor fusion 
integrating concept potential fields concept certainty grids borenstein koren developed virtual force field method 
experiments discovered analyzed substantial shortcomings inherent concept potential fields 
order overcome shortcomings developed vector field histogram vfh method looks gaps locally constructed polar histograms 
vfh get trapped local minima allowed robots travel faster speeds unstable 
due advantages vfh popular obstacle avoidance method 
wide resulted discovery shortcomings 
researchers ulrich johann borenstein university michigan dept mechanical engineering applied mechanics ri cmu edu umich edu inspired experiments vfh developed algorithms novel concept steer angle field approach 
experienced similar problems original vfh method implemented special type mobile robot guidance blind 
changing underlying concept vfh overcame problems incremental improvements led vfh 
vfh takes account width mobile robot implicit configuration space approach explicitly building space 
second vfh takes account robot trajectory 
improvement particularly useful high speed minimum steering radius longer neglected 
third vfh results trajectory oscillatory due threshold hysteresis 
fourth vfh able commit direction due improved direction selection cost function 
satisfied performance vfh general algorithm undesirable choices 
situations occurred rarely underlying problem discovered extensive testing 
section give detailed description situation problematic purely local obstacle avoidance algorithm vfh 
section outlines vfh algorithm overcomes problem look ahead verification 
section explains purpose search parameters section describes vfh algorithm detail 
section presents experimental results ends section 
purely local obstacle avoidance vfh fails choose appropriate direction purely local nature 
inherent problem purely local obstacle avoidance algorithms best explained example 
shows situation mobile robot travels corridor encounters obstacles path 
obstacles shown black configuration space shown gray 
vfh uses concept configuration space implicitly configuration space drawn explicitly better visualization 
large circle drawn dashed line shows approximate distance obstacle triggers avoidance maneuver 
position shown example vfh detects openings 
opening left results undesirable trajectory opening right results trajectory point eventually turns desirable trajectory unfortunately trajectories appear equally appropriate vfh 
problematic situations vfh select appropriate direction average time 
important note expect problem occur purely local obstacle avoidance algorithms steer angle field approach 
underlying problem purely local systems consider immediate effects selected trajectory verifying consequence 
important note larger trigger distance eliminate problem 
problem simply occur earlier process 
circle extremely large mobile robot choices encounters obstacle 
large trigger distance practical obstacle avoidance maneuvers start unnecessarily early 
large trigger distance lead system longer detect existing openings falsely report trap situation 
vfh algorithm described overcomes problematic situations time combining vfh search algorithm 
vfh projecting trajectory robot steps ahead evaluating consequences 
vfh longer purely local local algorithm performs real time 

vfh algorithm vfh method builds polar histogram robot current position looks openings histogram determines suitable directions opening 
vfh assigns cost value primary candidate directions 
vfh selects primary candidate direction lowest cost new direction motion 
contrast vfh analyzes consequences heading primary candidate direction making final choice new direction motion 
primary candidate direction vfh computes new position orientation robot moving projected step distance ds 
projected position vfh construct new polar histogram map information 
histogram analyzed candidate directions called problematic situation purely local obstacle avoidance algorithms projected candidate directions 
repeating process ng times build search tree depth ng nodes goals correspond total projected distance dt ng ds 
goal search process find suitable projected trajectory distance dt 
nodes search tree represent projected positions orientations mobile robot 
arcs represent candidate directions leading position 
candidate direction cost calculated similar cost function vfh 
cost associated node simply sum costs branches leading back start node 
primary candidate direction leads node smallest total cost selected new direction heading easier understanding concept described vfh breadth search bfs algorithm 
vfh employs search method uses heuristic function similar cost function vfh 
priority value node defined 
takes time compute heuristic function expand node faster bfs application 
bfs optimal complete heuristic function overestimates cost reach goal state 

search parameters key parameters vfh total projected distance dt projected step distance ds goal depth ng 
parameters related dt ng ds 
goal depth proportional total projected distance dt 
higher dt selected larger total look ahead better results vfh 
parameter selected high obstacle avoidance algorithm slowed substantially 
recommended choose value total projected distance exceeds range robot sensors robot accurate map mainly static environment 
selection dt trade speed quality algorithm 
possible parameter set close range robot sensors 
goal depth inversely proportional projected step distance ds 
ds selected large new position incorrectly projected right obstacle 
ds selected small effect single projection small resulting high value ng 
result unnecessary deep search tree substantially slow obstacle avoidance algorithm 
selection ds trade speed validity algorithm 
experiments recommend setting parameter equal diameter robot 
important note vfh method special case vfh method ng set equal dt equal ds 

expansion step expansion node ni consists building polar histogram node projected position xi yi determining corresponding candidate directions calculating projected position orientation nodes determining cost reaching nodes determining heuristic values 
steps building polar histogram determining corresponding candidate directions performed way vfh algorithm 
remaining steps described detail sections 
projection position orientation computation projected position xi yi orientation candidate direction done ways 
approach projected robot trajectory approximated arcs circle straight lines 
model vfh take account robot trajectory 
approximation suitable trade algorithm accuracy speed 
example trajectories shown trajectory approximation 
parameters trajectory model projected step distance ds minimum steering radii rr rl right left turns respectively 
candidate direction algorithm determines robot reach orientation projected step distance 
projected trajectory simply approximated curve constant curvature 
necessary distinguish candidate directions right left robot 
sets equations 
maximum directions right left defined cost function cost function primary candidate direction leading root node depth zero successor node identical vfh method min angular resolution histogram current orientation kt target direction divided kd previously selected direction motion terms cost function retain purpose vfh method 
term responsible goal oriented behavior terms robot commit direction 
robot condition condition projected candidate direction ci node depth larger zero propose slightly modified cost function follows ci max ci ci yi arctan xi yi xi term represents cost associated deviation target direction resulting goal oriented behavior 
term slightly different projected candidate direction primary candidate direction 
case projected candidate direction term considers effective direction motion ke words forward progress trajectory 
important difference candidate direction ci corresponding effective direction motion ke 
ideally want direction target direction 
depending robot current orientation situation possible equal target direction largely deviates 
consider effective direction motion part projected trajectory low cost forward progress 
shows example cost associated term zero 
including effective direction motion term cost trajectory high provides forward progress 
important note primary candidate direction term cost function include effective direction motion 
robot control current orientation reason associate cost effective direction motion primary candidate direction 
contrast robot control projected trajectory 
sense associate cost effective direction motion projected candidate direction 
trajectory part zero target direction cost high effective direction cost 
second third term different meaning projected candidate direction primary candidate direction 
case primary candidate direction terms represent short term memory effect robot commit direction 
case projected candidate direction second third term represent cost associated smoothness projected trajectory 
higher goal oriented robot behavior higher robot tries find smooth path 
relative values parameters important absolute values 
goal oriented robot condition satisfied condition emphasize importance primary candidate direction projected candidate direction condition satisfied condition experiments simulations shown set parameters mobile robot important parameter discount factor set experiments 
giving equal weight candidate directions independent depth weighted factor reasons factor 
decreases problem fixed goal depth ng sharp cut 
branches weight obstacle avoidance algorithm behave desired 
example case ng set shown goal direction indicated kt 
total cost trajectory cheaper trajectory result robot keeps moving right making forward progress goal direction 
obstacle avoidance algorithm undesired tendency find trajectories shortly influenced obstacle 
ng increased trajectory costly 
trajectory costly trajectory obstacle avoidance algorithm pick trajectory cheapest trajectory trying shortly influenced obstacle 
introducing cut branch sharp weight branch relatively small 
consequently trajectory example cheaper trajectory second discount factor compensates somewhat uncertainty map information 
due sensors stochastic map building process mobile robot certain immediate surroundings 
projected position away current position uncertain content map position 
discount factor identical discount factor value equal 
control weights branches different depths gain control search algorithm behavior 
situation requires discount factor 
heuristic function heuristic function estimated cost cheapest path node ni goal state 
function admissible heuristic overestimates cost reach goal 
condition satisfied cost minimal robot head target direction kt node 
get simple admissible heuristic replacing ci cost function kt ni heuristic considers cost associated branch 
consider cost associated effective direction motion 
heuristic optimal underestimates minimum cost reach goal node 
heuristic admissible computationally efficient 
better admissible heuristic considers cost associated effective direction motion ni kt kt kt yi arctan xi yi xi ci kt heuristic better computationally expensive previous 
optimal considers minimum cost associated branch 
compute optimal heuristic value simply expand building polar histogram determining corresponding candidate directions current node reaching goal depth target direction kt candidate direction node 
summing corresponding costs get optimal heuristic value 
heuristic requires computational power 
difference heuristics trade quality speed heuristic function 
heuristic influence resulting direction heading 
heuristic currently implemented 
branching factor reducing branching factor search tree search algorithm faster requires memory 
branching factor reduced eliminating redundant nodes 
node number successor nodes equal number candidate directions 
projected step distance ds usually small projected positions orientations successor nodes identical 
candidate directions exceed projected position orientation 
similarly candidate directions exceed common values projected position orientation 
reduce branching factor cheapest candidate direction side eliminated 
explanation validity approach simple 
consider node candidate directions exceed projected positions orientations identical polar histograms identical 
remaining search trees identical candidate directions 
third term cost function associated branches different 
long condition satisfied costs associated nodes search tree starts candidate direction lowest cost lower corresponding nodes candidate directions 
due node elimination method branching factor rarely larger 
speed improvement achieved expanding search tree primary candidate direction 
primary candidate direction need expand search tree robot choice anyway 

experimental results advantage vfh vfh depends mainly goal depth ng proportional distance look ahead verification 
tested vfh prefer show results simulated obstacle course better comparison 
tests vfh method performed equally long obstacles detected robot ultrasonic sensors 
shows trajectories vfh different goal depth values 
shows search trees critical interesting positions 
experiments heuristic 
shows trajectory vfh 
explained previously vfh goal depth identical vfh 
shortly avoiding obstacles vfh encounters problematic situation similar described section 
horizontal wall triggers obstacle avoidance maneuver vfh unfortunate choice heads left 
position shown vfh slows stops robot minimum turning radius large avoiding corner side 
case holonomic differential drive configuration robot needs substantially slow reducing minimum turning radius 
case car configuration non zero minimum turning radius robot needs back proceed right 
configuration better turn right earlier 
shows trajectory vfh goal depth 
due look ahead verification vfh correct decision turns right 
shows search tree time critical decision happens 
driving horizontal wall vfh guides robot shallow dead 
position shown vfh detects robot entered dead 
robot needs back turn minimum turning radius permits 
shows trajectory goal depth 
case goal depth large avoid dead 
shows search tree position vfh detects dead decides avoid turning left 
depth dead ends avoided vfh proportional value goal depth 
clear dead ends avoided range robot sensors farther depth dead dead represented map 
shows trajectory goal depth 
case vfh detects better turn right left 
addition dead avoidance maneuver initiated earlier 
search trees critical positions illustrated 
shows higher ng selected better vfh performs 
improvement expense computational time 
table shows execution time comparison embedded computer pc running mhz 
second vfh trajectory ng ng ng ng 
vfh search trees ng ng ng 
black curve indicates projected trajectory selected primary candidate direction 
gray lines show expanded tree branches trajectories higher total costs trajectory black 
column averages computation time densely cluttered obstacle course excluding times primary candidate direction 
third column shows maximum observed required computation time ranging ms summary vfh method fast long goal depth ng kept small 
average execution time short goal depth high 
critical value maximum execution time limits goal depth application 
maximum required time decreased applying additional branching factor reduction techniques optimizing software 
ng ms ms ms ms ms ms ms ms ms ms ms ms table vfh execution time 
tests simulated real shown goal depth just sufficient deal problematic situations 
board computer clocked mhz selected value goal depth current implementation 
range sonars goal depth optimal 
corresponding worst case execution time slow current board computer allow safe travel high speed 
similar vfh vfh method sensitive parameter values little time usually required parameter tuning 
long conditions satisfied parameter values selected reasonably vfh method performs 

vfh local obstacle avoidance algorithm uses look ahead verification consider robot immediate surroundings 
vfh obstacle avoidance performance vfh regular obstacles vfh capable dealing problematic situations require robot substantially slow 
experimental tests real simulations proved successful 
acknowledgment research funded whitaker foundation 
borenstein koren real time obstacle avoidance fast mobile robots ieee transactions systems man cybernetics vol 
sept oct pp 

borenstein koren vector field histogram fast obstacle avoidance mobile robots ieee journal robotics automation vol 
june pp 

borenstein ulrich computerized travel aid active guidance blind pedestrians ieee int 
conf 
robotics automation april pp 

bauer robust obstacle avoidance unknown environments ieee int 
conf 
robotics automation may pp 

fox burgard thrun dynamic window approach collision avoidance ieee robotics automation magazine vol 
march pp 

khatib real time obstacle avoidance manipulators mobile robots ieee int 
conf 
robotics automation march pp 

koren borenstein potential field methods inherent limitations mobile robot navigation ieee int 
conf 
robotics automation april pp 

lozano rez spatial planning configuration space approach ieee transactions computers vol 
pp 

green comparison realtime obstacle avoidance methods mobile robots experimental robotics toulouse france june 
moravec elfes high resolution maps wide angle sonar ieee int 
conf 
robotics automation march pp 

simmons curvature velocity method local obstacle avoidance ieee int 
conf 
robotics automation april pp 

ulrich borenstein vfh reliable obstacle avoidance fast mobile robots ieee int 
conf 
robotics automation may pp 

