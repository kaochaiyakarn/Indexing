brief guide linear logic andre scedrov department mathematics university pennsylvania philadelphia pa usa overview linear logic including extensive bibliography simple example close relationship linear logic computation 
overview linear logic introduced girard refinement classical logic 
linear logic described resource sensitive provides intrinsic natural accounting resources 
indicated fact linear logic assumptions formula distinguished single assumption informally level basic intuition say classical logic truth intuitionistic logic construction proofs linear logic process states events resources carefully accounted 
convenient way syntax linear logic modifying traditional gentzen style sequent calculus axiomatization classical logic andre cis upenn edu 
research partially supported nsf ccr onr 
author american mathematical society research fellow 
updated version article originally appeared bulletin european association theoretical computer science vol 
june pp 
column logic computer science edited gurevich 
updated version appeared current trends theoretical computer science ed 
rozenberg salomaa world scientific publishing 
may girard gallier 
modification may briefly described steps bearing mind assumptions viewed resources requirements met spending resources 
reading formula implies instance means resource spent meet requirement axiom linear logic 
step presenting linear logic modification classical logic remove structural rules contraction weakening manipulate assumptions logical deductions 
expository purposes concentrate treatment assumptions 
contraction rule states property follows assumptions formula property derived just single assumption formula 
effect means assumption stated may reused desired 
instance formula implies derivable contraction 
weakening rule possible form deductions dummy assumptions weakening allows carry deduction assumptions 
instance formula implies derivable weakening 
contraction weakening possible assumption little desired rules responsible may see hindsight loss control resources classical intuitionistic logic 
realization starting point linear logic 
removing rules contraction weakening produces linear system assumption spent exactly 
resulting linear logic formulas indicate finite resources necessarily discarded duplicated effort 
second step deriving linear logic involves propositional connectives 
briefly removal structural rules just mentioned leads naturally forms conjunction called multiplicative additive similarly forms disjunction 
proof multiplicative conjunction forbids sharing resources establish conjunct additive conjunction requires sharing resources 
mention distinction forms conjunction disjunction quantifier rules remain classical logic 
third step presentation linear logic involves adding kind modality storage reuse operator 
intuitively assumption provides unlimited resource computational metaphor describes meaning quite datum stored memory may referenced unlimited number times 
dual modal operator definable negation 
intuitively provides unlimited creation formula allows unlimited consumption basic framework remains linear unbounded consumption reuse allowed locally formulas specifically marked respectively 
effect structural rules contraction weakening replaced explicit logical rules modalities 
resulting logical system remarkably natural structured brings logical form content closer 
linear logic indicates relationship classical logic intuitionistic logic subtle standard negative interpretation see girard 
detailed descriptions linear logic rules may :10.1.1.1.8163
mention fragment linear logic anticipated calculus proposed lambek motivated linguistic considerations syntax natural languages 
remarkable result lincoln winkler shows simple minded truth table characterization provability multiplicative fragment linear logic np see 
sense semantics linear logic necessarily involved 
basic linear algebra constructions finite dimensional vector spaces provide naive interpretation linear logic connectives basic operations sets provide interpretation usual logical connectives 
instance multiplicative conjunction may interpreted tensor product vector spaces linear negation may interpreted dual vector space 
subtle aspects linear logic originate called coherence domains maintain notion finite basis isomorphism double dual imposing isomorphism dual 
important turning point discovery linear logic girard insight coherence domains function type decomposed gammaffib reuse operator mentioned gammaffi linear implication provides type functions argument exactly 
similar phenomena previously observed blass certain natural set theoretic operations infinite games barr called autonomous categories 
settings addition coherent domains understood yield mathematical models linear logic proofs precisely relation linear logic proof formula 
versions game semantics abramsky jagadeesan lafont streicher 
event spaces come pratt semantics concurrency provide models certain linear logic proofs 
models investigated de paiva motivated important proof theoretic transformations 
mathematical model linear logic provability relation phase spaces discussed girard avron 
kripke style models investigated allwein dunn 
mathematical structure underlying linear logic proof reduction normalization provided proof nets introduced girard studied danos regnier blute 
significant insight dynamic operational semantics linear logic proof reduction cut elimination provided geometry interaction proposed girard exposition danos 
geometry interaction investigated danos regnier malacaria regnier abramsky jagadeesan gonthier see 
linear logic continues active field research 
date developments discussed electronic forum linear 
subscribes sending email message linear request cs stanford edu 
introductory description linear logic lincoln 
book linear logic troelstra published 
provides valuable interested studying subject 
computational aspects computer science ramifications linear logic may generally divided kinds 
may broadly called functional programming ramifications involving certain aspects concurrency computation seen term reduction corresponding proof reduction cut elimination 
hand may broadly called logic programming ramifications involving concurrency computation expressed cut free proof search certain linear logic theories 
perspective cut elimination property simply allow concentrate cut free proofs loss generality 
certain permutability properties yield optimized presentations cut free proofs play central role proof search paradigm see lincoln andreoli 
proof reduction paradigm earliest direction lafont investigation functional programming language implementation garbage collection replaced explicit duplication operations linear logic 
possible application functional programming optimization copying lazy functional programming language implementation studied guzm hudak 
topics involve linear lambda calculus memory allocation investigated lincoln mitchell chirimar wadler mackie benton 
strong relationship multiplicative fragment linear logic petri nets demonstrated gunter asperti engberg winskel marti oliet meseguer brown gurr 
interpretations linear logic proofs concurrent paradigms chemical machine milner calculus abramsky scott 
regard concurrency note remarkable similarity programming paradigm proof nets developed lafont connection graphs designed bawden model massively parallel connection machine computations 
modular setting polynomial time computations bounded linear logic studied girard 
system unlimited reuse allowed 
bounded linear logic contains bounded limited reuse operators 
bounded reuse operator order indicates datum stored memory may referenced times variable bound 
proof rules sequent calculus naturally generate polynomial bounds 
bounded linear logic polynomial time cut elimination 
system serve basis modular calculus efficient algorithms 
topics include geometry interaction gonthier correctness proof lamping graph reduction 
com asperti 
lamping discovered optimal implementation lambda calculus independently girard geometry interaction see 
gonthier show geometry interaction provides suitable semantic basis explaining improving lamping system 
hand gonthier show graphs similar lamping related lafont nets see provide concrete representation geometry interaction 
proof search paradigm linear logic related computation way computation may expressed cut free proof search certain linear logic theories 
remarkable expressiveness computational paradigm brought light body research accumulated past years 
number papers andreoli pareschi develop declarative treatment object communication concurrent object oriented computation 
treatment linear logic programming hodas miller 
role linear logic declarative semantics sldnf resolution considered 
approach spans proof reduction proof search paradigms proposed girard 
topics include treatment concurrent constraint programming saraswat lincoln closely related treatment milner calculus communicating processes miller 
miller agent expressions calculus translated theory linear logic way calculus reductions identified step step cut free proof search linear logic theory 
nonlogical axioms theory resemble horn clauses may multiple 
particular heads may multiplicative disjunction atomic formulas 
multiple clauses axiomatize communications agents 
striking expressiveness cut free linear logic proof search computational paradigm indicated complexity undecidability provability natural fragments linear logic 
comes consequence direct lockstep simulations computations generic machines cut free proof search fragments linear logic see section 
simulations reveal structural relationship nat ural fragments linear logic hand standard computational complexity classes 
lincoln show full propositional quantifier free linear logic undecidable 
fragment propositional linear logic allow modalities unexpectedly expressive 
shows multiplicative fragment np complete 
furthermore marked contrast standard np completeness satisfiability propositional formulas classical logic linear logic decision problem constant multiplicative propositional formulas np complete 
result obtained lincoln winkler shows simple minded efficient truth table style characterization provability multiplicative fragment linear logic imply np 
multiplicatives lincoln show pspace completeness propositional fragment multiplicative additive propositional fragment 
lincoln exhibit structural embedding cut free proof system implicational propositional intuitionistic logic propositional linear logic 
lincoln scedrov obtain nexptime hardness linear logic order quantifiers function symbols 
example section describes example ability linear logic express computational features 
simple computation ordinary counter machine zero test instruction simulated step step cut free proof search propositional linear logic 
key insight searching certain kind proof linear logic formula finitely nonlogical axioms involve multiplicative conjuction omega additive disjunction phi corresponds directly searching accepting computation 
product successful search accepting computation 
example taken lincoln :10.1.1.1.8163
suppose transition relation ffi standard counter machine zero test consists ffi increment ffi decrement ffi zero test machine may perform transitions instantaneous description counter machine triple consisting current state values counters hq ffi gamma 
hq ffi gamma 
hq ffi gamma 
hq computation starts state increments counter steps state tests counter zero moves decrements counter moves accepts 
transition relation ffi may transformed transition relation ffi equivalent branching counter machine zero test briefly acm 
modified relation ffi shown left may encoded linear logic theory shown right transitions ffi increment ffi decrement ffi fork zb ffi zb decrement zb ffi zb fork theory axioms omega phi phi notice transitions ffi ffi standard counter machine preserved translation ffi ffi zero test instruction ffi encoded acm transitions ffi ffi ffi transition ffi fork special state zb state extra transitions ffi ffi force computation branch starting state zb verify counter zero 
transitions branching machine zero test may perform moves ig ffi gamma 
ig ffi gamma 
hq ig ffi gamma 
hq ig ffi gamma 
hq hq ig ffi gamma 
hq hq ig note instantaneous description branching machine list triples machine accepts able reach hq branches computation 
particular computation starts state increments counter steps state forks separate computations verifies counter zero proceeds state counter zero proof branch proceeds decrementing counter zero jumping final state branch state simply decrements moves branches computation terminate final state counters zero resulting accepting computation 
linear logic proof corresponding computation displayed figures explained paragraphs 
proofs application theory axiom corresponds step acm computation 
represent values acm counters unary copies formulas example counter zero occurrences proof shown linear logic theory corresponds acm verifying counter zero 
reading proof bottom begins directed cut 
sequent left intermediate step 
step directed cut application phi rule sequents left prove correspond acm triple hq accepting triple provable identity rule 
attempted prove sequent occurrences unable complete proof 
ffi phi ffi phil phi cut cut zero test proof proof shown theory demonstrates remainder acm machinery 
lowermost theory axiom cut omega correspond application increment instruction ffi traded application directed cut phi correspond fork instruction ffi requires branches proof successful way branching machines require branches reach accepting configuration 
indicated proof appears omega ffi phi ffi 
ffi cut phil phi cut omega omega cut proof corresponding computation corresponds verification counter zero 
application cut theory axiom identity correspond final decrement instruction computation complete proof 
abramsky 
computational interpretations linear logic 
theoretical computer science 
abramsky jagadeesan 
games full completeness multiplicative linear logic 
manuscript 
draft available anonymous ftp host theory doc ic ac uk file theory papers abramsky dvi 
abramsky jagadeesan 
new foundations geometry interaction 
proc 
th annual ieee symposium logic computer science santa cruz california pages 
ieee computer society press los alamitos california june 
abramsky vickers 
quantales observational logic process semantics 
mathematical structures computer science 

noncommutative intuitionistic linear propositional logic 

math 
logik grundlagen math 

phase semantics sequent calculus pure noncommutative classical linear propositional logic 
journal symbolic logic 
allwein dunn 
kripke models linear logic 
manuscript january 

andreoli pareschi 
logic programming sequent systems linear logic approach 
proc 
workshop extensions logic programming tuebingen 
lecture notes artificial intelligence springer verlag berlin 

andreoli pareschi 
linear objects logical processes built inheritance 
new generation computing 

andreoli pareschi 
associative communication optimization interpretation 
manuscript august 
jean marc andreoli 
logic programming focusing proofs linear logic 
journal logic computation 
asperti 
logic concurrency 
technical report dipartimento di informatica universit di pisa 
asperti 
linear logic comonads optimal reductions 
manuscript december 
asperti 
ferrari gorrieri 
formulae proofs computations analogy 
proc 
th acm symp 
principles programming languages san francisco pages january 
avron 
semantics proof theory linear logic 
theoretical computer science 
avron 
properties linear logic proved semantic methods 
manuscript december 
barr 
autonomous categories volume lecture notes mathematics 
springer verlag berlin 
barr 
accessible categories models linear logic 
journal pure applied algebra 
barr 
autonomous categories linear logic 
mathematical structures computer science 
bawden 
connection graphs 
proc 
acm symp 
lisp functional programming pages 

mechanizing proof theory resource aware logics extract implicit information 
phd thesis stanford university 

decision procedure revisited notes direct logic linear logic implementation 
theoretical computer science 
scott 
remarks calculus linear logic 
manuscript 
benton bierman de paiva hyland 
linear lambdacalculus categorical models revisited 
manuscript september 
appear computer science logic selected papers ed 
springer lncs 
blass 
degrees indeterminacy games 
fundamenta mathematicae 
blass 
game semantics linear logic 
annals pure applied logic 
special volume dedicated memory john myhill 
blute 
linear logic coherence dinaturality 
dissertation university pennsylvania september 
blute 
proof nets coherence theorems 
pitt editor category theory computer science proceedings 
springer lncs 
blute 
linear logic coherence dinaturality 
theoretical computer science 
brown gurr 
categorical linear framework petri nets 
proc 
th ieee symp 
logic computer science philadelphia june 
brown gurr 
relations noncommutative linear logic 
manuscript december 

linear semantics allowed logic programs 
proc 
th ieee symp 
logic computer science philadelphia june 
chirimar gunter riecke 
linear ml 
proc 
acm symposium lisp functional programming san francisco 
acm press june 
chirimar gunter riecke 
counting computational interpretation linear logic 
manuscript 
available anonymous ftp machine research att com file dist riecke linear logic journal ps 
chirimar lipton 
provability decision procedure 
computer science logic proceedings pages 
springer lncs 
danos 
logique lin 
une repr esentation alg du calcul 
des math soc 
math 
de france 
danos 
la logique lin appliqu ee etude de processus de normalisation du lambda calcul 
th ese de doctorat universit de paris vii 
danos regnier 
structure multiplicatives 
archive mathematical logic 
de paiva 
dialectica model linear logic 
category theory computer science pages 
springer lncs september 
dosen 
classical linear predicate logic fragment intuitionistic linear logic 
theoretical computer science 
engberg winskel 
petri nets models linear logic 
arnold editor proceedings caap 
lecture notes computer science vol 
springer verlag 
gallier 
logic computer science 
harper row publishers new york 

proof theoretic approach semantics concurrency 
dissertation university pennsylvania 
gunter 
normal process representatives 
proc 
th ieee symp 
logic computer science philadelphia june 

girard 
linear logic 
theoretical computer science 

girard 
multiplicatives 
del dell universit politecnico torino special issue logic computer science pages 

girard 
geometry interaction interpretation system logic colloquium amsterdam 
north holland 

girard 
geometry interaction ii deadlock free algorithms 
springer lncs 

girard 
new constructive logic classical logic 
mathematical structures computer science 

girard 
quantifiers linear logic ii 
pr paris logique january 

girard 
fixpoint theorem linear logic 
announcement linear electronic forum february 

girard 
unity logic 
annals pure applied logic 

girard lafont taylor 
proofs types 
cambridge tracts theoretical computer science cambridge university press 

girard scedrov scott 
bounded linear logic modular approach polynomial time computability 
theoretical computer science 
gonthier abadi 
levy 
geometry optimal lambda reduction 
proc 
th annual acm symposium principles programming languages albuquerque new mexico 
acm press new york ny january 
gonthier abadi 
levy 
linear logic boxes 
proc 
th annual ieee symposium logic computer science santa cruz california pages 
ieee computer society press los alamitos california june 
gunter 
nets tensor theories 
de michelis editor proc 
th international conference application theory petri nets bonn pages 
guzman hudak 
single threaded polymorphic lambda calculus 
proc 
th ieee symp 
logic computer science philadelphia june 
hodas miller 
logic programming fragment intuitionistic linear logic 
proc 
th annual ieee symposium logic computer science amsterdam pages 
ieee computer society press los alamitos california july 
draft available anonymous ftp host ftp cis upenn edu file pub papers miller ic dvi jacobs 
semantics weakening contraction 
manuscript may 

horn programming linear logic np complete 
proc 
th annual ieee symposium logic computer science santa cruz california pages 
ieee computer society press los alamitos california june 
weyhrauch 
decidable fragment predicate calculus 
theoretical computer science 
lafont 
linear machine 
theoretical computer science 
lafont 
interaction nets 
proc 
th acm symp 
principles programming languages san francisco pages january 
lafont streicher 
game semantics linear logic 
proc 
th annual ieee symposium logic computer science amsterdam pages 
ieee computer society press los alamitos california july 
lambek 
mathematics sentence structure 
amer 
math 
monthly 
lambek 
multicategories revisited 
categories computer science logic pages 
contemporary math vol 
american math 
soc providence ri 
lamping 
algorithm optimal lambda calculus reduction 
proc 
th annual acm symposium principles programming languages san francisco pages 
acm press new york ny january 
lincoln 
linear logic 
acm sigact notices spring 
lincoln mitchell 
operational aspects linear lambda calculus 
proc 
th annual ieee symposium logic computer science santa cruz california pages 
ieee computer society press los alamitos california june 
lincoln mitchell scedrov shankar 
decision problems propositional linear logic 
proc 
st ieee symp 
foundations computer science pages 
lincoln mitchell scedrov shankar 
decision problems propositional linear logic 
annals pure applied logic 
special volume dedicated memory john myhill 
lincoln scedrov 
order linear logic modalities nexptime hard 
manuscript september 
available anonymous ftp host ftp cis upenn edu file pub papers scedrov mall dvi 
lincoln scedrov shankar 
linearizing intuitionistic implication 
annals pure applied logic 
lincoln winkler 
constant multiplicative linear logic np complete 
manuscript september 
available anonymous ftp host ftp csl sri com file pub lincoln npc dvi 
lincoln 
computational aspects linear logic 
phd thesis stanford university 
mackie 
functional programming language linear logic 
master thesis imperial college london 
malacaria regnier 
results interpretation calculus operator algebras 
proc 
th annual ieee symposium logic computer science amsterdam pages 
ieee computer society press los alamitos california july 
marti oliet meseguer 
petri nets linear logic 
springer lncs ed 
pitt 

miller 
calculus theory linear logic preliminary results 
lamma mello editors proceedings workshop extensions logic programming number lecture notes computer science 
springer verlag 
available anonymous ftp host ftp cis upenn edu file pub papers miller pic dvi technical report computer science department university pennsylvania ms cis 
ono 
phase structures quantales semantical study logics structural rules 
manuscript 
pratt 
event spaces linear logic 
amast algebraic methodology software technology iowa city workshops computing pages 
springer verlag 
regnier 
calcul 
th ese de doctorat universit de paris vii 

resource logics proof theoretical investigations 
dissertation university amsterdam september 
rosenthal 
girard 
mathematical structures computer science 
saraswat lincoln 
higher order linear concurrent constraint programming 
draft january 
schellinx 
syntactical observations linear logic 
journal logic computation 
seely 
linear logic autonomous categories cofree coalgebras 
categories computer science logic pages 
contemporary math vol 
american math 
soc providence ri 
troelstra 
lectures linear logic 
csli lecture notes 
center study language information stanford university 
wadler 
substitute linear logic 
manuscript december 
yetter 
quantales noncommutative linear logic 
journal symbolic logic 

