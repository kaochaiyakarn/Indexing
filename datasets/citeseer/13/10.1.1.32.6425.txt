auction protocols decentralized scheduling michael wellman william walsh peter wurman jeffrey mackie mason university michigan ann arbor mi usa mail wellman umich edu decentralized scheduling problem allocating resources alternative possible uses time competing uses represented autonomous agents 
market mechanisms prices derived distributed bidding protocols determine schedules 
investigate existence equilibrium prices general classes scheduling problems quality equilibrium solutions behavior ascending auction mechanism bidding protocol 
remedy potential nonexistence price equilibria due complementarities preference introduce additional markets combinations basic goods 
consider direct revelation mechanisms compare market approach 
journal economic literature classification numbers 

allocating resources distributed computing systems presents particular challenges attributable decentralized nature computation 
consider instance problem scheduling network access programs representing various users internet 
environment system modules user programs represent independent entities users conflicting competing scheduling requirements may possess localized information relevant needs value place particular schedule 
recognize independence treat modules agents ascribing autonomy decide deploy resources control service interests 
assume agents communicate messages may convey private information 
challenges decentralized solution scheduling problem include manage message passing reach closure determine final schedule 
value alternatives depends information appear games economic behavior 
revised extended version economics market distributed scheduling eighteenth international conference distributed computing systems amsterdam may 
wellman walsh wurman mackie mason held privately agents elicit messages contain information needed formulate desirable schedule 
problem fundamental distributed computing systems due asynchrony communication 
imagine bob currently knows announces want conference room am 
bob boss alice announces want hold manager meeting discuss merit raises am conference room 
bob permitted send message announce time pm acceptable 
new message change ted wants announce forth 
distributed system solve scheduling problem message passing needs specify messages admissible formed syntax may sent closure reached schedule formulated 
second problem subject theory mechanism design 
agents private information resources preferences social welfare schedules considered desirable 
problem design mechanism choose rules formulating schedule received messages possibly exchanging resources money induce agents reveal private information needed determine socially desirable schedules 
setting decentralized scheduling method analyzed exhibits properties self interested agents effective decisions local private information knowing private information strategies agents 
method requires minimal communication overhead 
method reaches closure reasonable time reasonable computational expense 
solutions waste resources 
way agent better harming done 
solution improved way called pareto optimal 
suggested appropriate adopt stronger optimality criteria judgment social value various agents 
criteria bring central concerns distributed computation mechanism design 
straightforward distributed scheduling policies come served shortest job priority combinations thereof generally possess properties 
example queue position schemes insensitive relative value substance task performed 
hand priority schemes beg question set priorities desirable results follow 
self interested agents free set priorities incentive contrary specify maximum priority interested 
auction protocols decentralized scheduling citing limitations proposed distributed resource allocation problems solved market mechanisms approach called market oriented programming mop 
mop define agent activities terms resources required produced reducing agent decision problem evaluating tradeoffs acquiring different resources 
tradeoffs represented terms market prices define common scale value various resources 
problem designers computational markets specify configuration resources traded formally designated goods market mechanism agent interactions determine prices 
assuming scheduling problem decentralized markets provide advantages markets naturally decentralized 
agents decisions bid prices relative valuations goods 
communication limited exchange bids prices agents market mechanism 
particular settings shown price systems minimize dimensionality messages required determine pareto optimal allocations 
agents back representations exchange offers mechanisms elicit information necessary achieve pareto global optima come tolerance optimal characterized situations 
course benefits automatically accrue result setting market environment 
second welfare theorems guarantee strong performance market mechanisms results formally restricted special environments 
scheduling problems exhibit complementarities violate ideal conditions welfare theorems particular market protocols 
prior applying market inspired mechanisms scheduling distributed resource allocation problems produced promising empirical results :10.1.1.135.2031:10.1.1.129.159
understanding scope methods developing general design methodology computational markets requires analytical characterization properties 
mop adopted framework general equilibrium theory computational markets behave predictably conditions theory met 
applied approach discrete optimization problems conditions guaranteeing desirable outcomes satisfied surprisingly methods times break 
scheduling problems involve discrete indivisible resource units undertaken analyze directly behavior computational market mechanisms problems 
start defining general class discrete allocation problems characterizing distinctions particularly meaningful wellman walsh wurman mackie mason scheduling domain 
show results economic theory apply scheduling problem report extensions analysis 
section motivate concrete example simple factory scheduling problem 
section provide formal economic model general version problem section relate equilibrium optimality properties associated problem 
section briefly describe general framework auction protocols describe analyze protocol section 
address limitations basic market formulation extended combinatorial market section direct revelation mechanism section 
consider section 
factory scheduling economy consider factory unscheduled day shift 
hour time slots labeled respective times 
slots allocated production customer orders 
factory reserve price time slot representing minimum price factory willing accept exchange time slot 
assume customer agent job wants completed 
agent job defined duration length deadline value expressed dollars agent places job 
agent willing spend value complete job 
agent acquire number slots length necessarily contiguous deadline 
agent gets value job completed deadline 
global value solution sum values agents holding goods sum reserve price time slot sold plus value associated customer agent meets job deadline 
example 
agents shown 
sum lengths exceeds available factory time possible agents produce orders 
allocation depicted represents global optimum 
assignment prices goods define agent optimal choice set slots complete job minimum cost empty set job completed value 
reader verify prices shown agent locally optimal choice globally optimal allocation 

formal model scheduling economy interactive online demonstration ascending auction section applied example athttp auction eecs umich edu demos factory html 
auction protocols decentralized scheduling agent value length hr deadline agent value length hr deadline factory time span day reserve price hr agent value length hr deadline agent value length hr deadline fig 

factory scheduling economy 
lines connecting agents time slots represent feasible allocation 
define general discrete resource allocation problem terms elements discrete goods agents representing seller null agent prices hp pni 
assume agents quasilinear utility functions meaning valuations measured terms common convenience taken money 
directly compare utility different agents meaningfully treat sum measure global value 
agent gets utility vj holding set goods units money 
hj denote maximum surplus value achievable agent prices thatis hj max vj note prices agent may maximize surplus empty set 
solution mapping indicating agent gets 
fj set goods allocated agent 
set unallocated goods seller utility equal reserve value qi unallocated money receives allocated 
intuitively reserve value denotes value owner system allocating agent 
different time slots potentially different reserve values instance factory may higher reserve price evening hours cover overtime expenses 
pi wellman walsh wurman mackie mason global value solution sum agent values achieved reserve value goods agents 
qi mx vj fj measure system value solution ex post conditional knowing agents valuations 
solution optimal solution higher value 
remainder article market schemes auction protocols general resource allocation problem 
theoretical results examples focus particular subclasses scheduling problems agent job complete 
problems associate agent job length kj deadlines value levels set goods dk earliest deadline includes time slots convenience represent time slots integers starting 
note domain vj comprises possible time slot bundles scheduling problem value function encoded compactly terms kj deadlines values 
call scheduling problem single unit 
problems violating constraint multiple unit 
agent single deadline kj call problem fixed deadline 
kj accrues greater value finishing job sooner call problem variable deadline 

price equilibria definition 
price equilibrium solution equilibrium prices iff 
agents vj fj fj pi hj 

pi qi 

pi qi 
intuitively definition states equilibrium agent including seller gets allocation maximizes utility current prices 
equilibria exist generally unique 
consider example 
solution shown agent receiving goods equilibrium agents utility linear money total value obtained money constant ignored 
auction protocols decentralized scheduling set prices suggested slots having price slots having price 
solution equilibrium respective prices combinations 
equilibrium solution value optimal 
demonstrated result 
theorem 
general discrete resource allocation problem exists equilibrium optimal solution 
proof 
gul provide proofs exchange economy reserve prices 
slight extension accounts reserve prices 
equilibrium prices alternative solution 
definition solution value mx vj fj 
equilibrium price unallocated goods equal reserve value mx mx vj fj vj fj 
pi qi pi 
goods equilibrium prices high reserve values 
mx mx vj vj pi pi pi 
rearranging expressions mx mx vj fj fj vj pi pi pia pia wellman walsh wurman mackie mason table 
problem equilibrium 
adapted demonstration price equilibria may exist fcc market radio spectrum 
name job length deadline value agent agent definition equilibrium fj maximizes term inside parentheses agent 
result confirms usual consequence competitive equilibrium gains trade possible result pareto optimal 
assume agent values expressible price units pareto optimality corresponds global optimality 
example 
agents described table reserve price zero 
optimal solution equilibrium prices equilibrium exists case 
equilibrium agent demand goods 
inequalities hold agent demand time slots requires 
example nonexistence equilibrium prices due complementarities agent preferences 
agent considers time slots complementary values iff 
complementarities arise single unit scheduling problem 
lemma 
instances single unit scheduling problem exists unique price equilibrium price equilibrium pi pi proof 
exchange economy characterized quasilinear utilities single goods unique minimum equilibrium price vector sense described 
single unit scheduling problem special case 
theorem 
optimal solution single unit scheduling problem fixed variable deadline supported price equilibrium 
proof 
lemma single unit scheduling problem price equilibrium theorem supports optimal solution 
auction protocols decentralized scheduling supports optimal solution shown optimal solutions supported 
theorems establish solution single unit scheduling problem optimal iff supported price equilibrium 
example demonstrates relaxing single unit restriction immediately leads possibility equilibrium exist 
general setting milgrom shows single complementarity sufficient prevent price equilibrium 
scheduling case easy show agent valuation deadline exceeding corresponding reserve prices construct example equilibrium additional agents single unit jobs 
addition single unit restriction theorem identify conditions guarantee existence equilibrium 
agents additive preferences goods equilibrium exists 
additivity preference sufficient condition gross substitutability price goes demand go turn guarantees existence equilibrium 
technical conditions existence equilibrium immediately expressible scheduling terms 
note equilibrium scheduling economy prices differently allocated time slots nonincreasing time indices 
theorem 
solution scheduling economy equilibrium prices ifi fj pi fj 
ifi fj pi price vector pi pi pi pi equilibrium 
proof 
pi pi agent obtain greater surplus replacing second swapping prices clearly affect surplus 
open opportunities improvement agents cost obtaining number slots deadline interval increased 

auction protocols term protocol refer mechanism agent bidding policies 
mechanisms consider generically called auctions 
mcafee mcmillan provide definition note preferences additive multiple unit scheduling problem 
equilibrium exist agents additive preferences completing multiple single unit jobs 
wellman walsh wurman mackie mason auction market institution explicit set rules determining resource allocation prices basis bids market participants 
definition includes known english open price sealed bid auctions commonly sell art award procurement contracts respectively broad range mechanisms including fixed pricing dutch auctions vickrey auctions commodities markets ascending combinatorial generalized vickrey auction schemes described sections 
order place structure space possibilities provide common interface agents define somewhat restricted general auction mechanism 

agents send bids mechanism indicate willingness exchange goods 

auction may post price quotes provide summarized information status price determination process 
steps may iterated 

auction determines allocation notifies agents purchases price 
sequence may performed repeated number times 
auctions differentiated parameters including limited concerning matching algorithm price determination algorithm event timing bid restrictions intermediate price revelation 
important distinctions individual auction allocates single resource 
type called combinatorial auctions section accept bids referring combinations basic goods 
implemented michigan internet auctionbot configurable auction server implements broad class mechanisms defined parametric characterization auction design space 
auctionbot provides interfaces human software agents create participate auctions 
currently auctionbot supports major classical single resource auction types including mechanism ascending auction protocol described section 
order predict auction outcomes consider agents presumed bidding policies turn base model beliefs preferences 
auction contexts able determine analytically particular bidding policy part bayesian nash equilibrium dominant strategy 
settings rely experimentation rules thumb economic principles determine reasonable bidding policies 
auction eecs umich edu analysis standard noncooperative perspective assumes agents directly coordinate bidding 
collusion issue fcc spectrum auctions measures considered context example milgrom 
auction protocols decentralized scheduling auction mechanisms discuss decentralized sense agent calculates bidding strategy local information 
auctions ascending auction protocol distributed allocations computed separately 

ascending auction define ascending auction protocol general discrete resource allocation problem 
separate auctions determine prices goods 
agents submit successively higher bids auctions auctions immediately report price quotes interested agents receiving bid 
allow agents auctions operate asynchronously impose bound relative times agents take compute send bids auctions compute send price quotes 
assume ordering bid actions explicitly stated 
consequence asynchrony flexible ordering protocol nondeterministic 
bidding stops protocol reaches quiescence auction allocates respective highest bidder price agent bid retained seller bids 

bidding rules point time bid price auction denoted highest bid auction far 
auction received bids undefined 
auction ask price denoted defined 
ask price qi 
ascending auction rejects bid ask price 
agents allowed withdraw bids 
agent may replace bid new bid current ask price 
rules guarantee prices decrease bidding process terminates 

agent bidding policies agent enters market bids ask prices set goods maximizes surplus hj current ask prices breaking ties arbitrarily 
agents continue bid agent may lose bids 
occurs bids ask price set goods maximizes surplus assuming obtain goods currently winning bid prices 
single unit scheduling problem agent winning bid simply bids ask price single maximizes surplus ask prices 
provide positive surplus agent drops auction 
general multi unit variable deadline problem surplus maximizing bids computed algorithm log kj time 
bidding strategy quite simple involving anticipation agents strategies 
single unit problem anticipation unnecessary wellman walsh wurman mackie mason table 
multiple unit problem example 
name job length deadline value agent agent agent agent wish change bid observing agents 
called regret property means agent perspective bidding policy better response agents bids 
regret property hold ascending auction multiple unit scheduling problem regardless bidding strategy 
general agent perform better example accurate prediction agents behavior 
absence basis prediction simple strategy proposed may reasonable 

analysis ascending auction pi denote price ascending auction rules protocol reaches quiescence pi defined pi qi 
possible ascending auction determine prices differ equilibrium multiple unit scheduling economy arbitrarily large amounts 
example 
bid increment reserve prices zero 
agents described table 
equilibrium price sets andp ascending auction may find equilibrium 
agent bid agent bid prices 
reader verify equilibrium agent winning price greater 
multiple unit scheduling problem ascending auction produce allocations arbitrarily far optimal 
example 
agents shown table 
reserve prices bid increment 
agent places bids bid 
agent bid 
bidding allocated agent allocated agent 
solution value optimal solution unallocated value 
easy see increasing auction protocols decentralized scheduling table 
multiple unit problem example 
name job length deadline value agent agent table 
single unit problem example 
name job length deadline value agent agent amount ascending auction produce solution arbitrarily far optimal 
restrict agent requirement single time slice theorem equilibrium exists 
ascending auction protocol guaranteed reach equilibrium restriction 
example 
bid increment 
reserve prices andq 
agents described table 
possible agent may bid 

agent bid 
bids bidding agent win agent win 
agent maximize surplus demanding final prices 
bidding rules prohibit equilibrium 
auction allow agent withdraw bid final allocation violates condition definition equilibrium 
hard see potential failure reach equilibrium demonstrated positive value matter small 
multiple unit problem bound distance equilibrium price vector min 
theorem 
variable deadline single unit scheduling problem final price determined ascending auction protocol differ unique minimum equilibrium prices wellman walsh wurman mackie mason proof 
prove result ascending auction protocol exchange economy buyers want single item set available goods 
case single unit scheduling problem 
consider example 
solution shown value 
agent received agent received value solution optimal 
solution suboptimal bounded amount 
theorem 
ascending auction protocol produces solution variable deadline single unit scheduling problem suboptimal 
proof 
allocation reached ascending auction optimal allocation 
pi price ascending auction unique minimum equilibrium price recall lemma theorem established unique minimum price vector exists supports 
ei pi 
theorem know ei set goods allocated respectively 
degree suboptimality nf 
qi mx qi vj fj nf qi mx 
qi vj mx mx vj fj vj fj single unit problem agent bids maximizes surplus 
solution allocation surplus surplus get ask price agent bid 
particular get ask price 
ascending auction stops aggregating agents mx vj fj pi mx mx vj vj pi auction protocols decentralized scheduling pi rearranging facts 

wehave mx vj mx vj fj nf nf 
pi pi nf pi pi nf 
pi pi goods unallocated prices equal reserve prices nf pi nf qi goods unallocated minimum equilibrium prices equal reserve prices nf 
nf 
substituting gives nf 
nf 
pi ei pi ei nf ei pi nf 
nf nf 
pi pi qi total error maximized ei 
goods nf 
yields upper bound total error 
computing clearing price quotes trivial ascending auction 
communication costs dominate run time measured terms bids required 
bids increase fixed increment number iterations inversely proportional choosing value trade solution value communication efficiency 
wellman walsh wurman mackie mason shown simple bidding policy reasonable individual agents produces allocations desirable system properties problem 
results provide strong support simple policy multiple unit problem 
strategies jump bidding agent bids large increments sets goods signal willingness aggressively pursue set may provide potential advantages individuals system 
open question exists policy ascending auction complete protocol finds tolerance equilibrium exists 

incremental auction closing basic version ascending auction mechanism close auctions simultaneously bidding process reaches quiescence 
variant close time bidding process close 
auction closes commitment winning bidder buy finalized price paid constitutes sunk cost 
may cause bidder decisions goods bid auctions previously dropped 
example 
reconsider example agents described table 
pointed ascending auction may reach solution allocated agent allocated agent 
solution value 
close auction agent treats payment sunk values 
bidding clearly agent 
close reopen bidding changes 
example resulting allocation value suboptimal improvement original allocation 
shown incrementally bidding improve solution value 
left agents value marginal contribution value situation single english auction 
easy see incremental auction closing effect cases 
single unit problems sunk costs irrelevant agents bid auctions 

allocation represents price equilibrium agent change bids auctions closed 
situations ascending protocol known expect incremental closing degrade quality 
general bidding auctions close positive negative effects 
auction protocols decentralized scheduling table 
bidding auction closes degrade solution quality example 
name job length deadline value agent agent example 
consider agents described table 
reserve prices bid increment 
initial bidding process ascending auction may reach result agent obtains slot agent obtains slot prices 
point agent drops minimum cost complete job exceed value 
value solution 
close auction agent treats cost sunk compares incremental cost favorably job valuation 
may enter bids goods respectively 
agent offering 
result point solution value 
final result close auction 
close auction agent reopen bidding light sunk cost time ultimately winning solution value 
clear examples changes solution quality depend critically order auctions close 
unfortunately general tell order advantageous knowing agents private information 
consider example 
result identical prices goods prices agent winning 
closing auction agent winning lead improvement sunk costs discounted 
way tell solely quiescent state 

combinatorial markets ascending auction performs single unit allocation problems 
section note single unit restriction sufficient condition existence price equilibrium 
equilibria exist multiple unit problem ascending auction may find shown example 
example demonstrates scheduling problems support allocations price equilibrium 
light limitations proposed combinatorial auction mechanisms agents submit bids combinations goods :10.1.1.56.9425
wellman walsh wurman mackie mason mechanisms operate variety ways typically calculating allocations prices function bids combinations 
prices may refer individual goods entire bundles 
drawbacks combinatorial auctions potential computational complexity 
goods combinations entail complex calculations agents mechanism 
typical formulations mechanism computational problem np complete may admit heuristic search procedures effective practice certain environments :10.1.1.19.2028
rothkopf point restricting set allowed combinations preserve computational tractability :10.1.1.56.9425
pursue strategy similar spirit restriction approach presenting reformulation problem extends price system controlled way admitting exponential number markets 
reformulation expands class problems solved price equilibria suggests corresponding auction protocols determining prices 

problem formulation original formulation posit discrete basic goods agents representing seller null agent 
impose price system basic goods revised combinatorial formulation introduce expanded set market goods market pair denoting bundle time slots time specifically bundle contains time slot basic indexed indeterminate set slots strictly configuration consists pairs price system formulation assigns prices pl ln market goods denote price 
generally require prices monotone number time slots solution defined original formulation mapping basic goods agents 
market allocation assignment market goods agents 
jg denote set market goods allocated agent say market allocation consistent solution gives agent promised thatis gk jgk fjj set basic goods index equal auction protocols decentralized scheduling note scheduling agent obtaining market sure exactly time slots receive utility completely determined obtains time slots finish job deadline 
specifically value achieves market zg denote number slots guaranteed deadline set market goods andy number slots guaranteed 
maximum surplus ensure purchasing market goods prices max max definition 
temporally consistent prices monotone price function temporally consistent 



lemma 
temporally consistent price function maximum surplus achieved allocation containing market max max proof 
deadline set market goods respectively maximizing surplus term 
applicable prices zero 
case lemma satisfied trivially 
suppose value goods received 
temporally consistent prices 
ensuring value cost 
equilibrium efficiency definition 
combinatorial price equilibrium market allocation equilibrium prices iff note agents chance doing better worse purchasing goods higher values 
cf 
related notion temporal consistency observe equilibria original formulation theorem 
wellman walsh wurman mackie mason 
agents maxd 

gz jbj yg qi 
exists solution consistent fj qi ii gz jbj yg qi call solution serving role definition implementing solution central requirement equilibrium agents maximize surplus prices 
dictate allocations agents get maximize surplus market prices 
conditions relating market prices reserve prices complicated indeterminate relationship market basic goods 
require price market minimum consistent reserve price sellers part constituent basic goods 
market goods allocated require price exceed basic goods comprising consistent solution 
market satisfied basic goods unallocated solution reserves goods define upper bound price 
example 
reconsider example parameters illustrated table zero reserve prices 
price equilibrium exists original formulation support optimal solution combinatorial price equilibrium 
consider prices 
allocation implemented solution giving agent basic goods satisfies combinatorial equilibrium conditions prices 
note combinatorial equilibrium support allocation 
basic configuration combinatorial price equilibria necessarily efficient 
example 
consider extension previous example described table zero reserve prices 
problem basic equilibrium agents getting slots 
optimal solution supported combinatorial equilibrium prices 
nonoptimal solution agent gets slots equilibrium prices andp 
degree suboptimality usefully bounded reserve prices 
extend example obtain agent problems equilibrium solutions factor worse optimal 
positive auction protocols decentralized scheduling table 
problem optimal suboptimal combinatorial equilibria 
name job length deadline value agent agent agent side optimal solutions supported price equilibria original formulation retained albeit uniquely combinatorial formulation 
theorem 
original formulation equilibrium prices combinatorial formulation allocation equilibrium prices pz 
proof 
implementing solution case surplus maximization criterion conditions comparing prices reserve prices identical original formulation definition 
lemma 
equilibrium temporally consistent prices market allocation defined minfd jg equilibrium prices 
implementing solution solution defined fj value arg maxf fj fj jf qi proof 
lemma agent maximize surplus single market form specified surplus obtained equilibrium surplus exactly 
implementing solution obtained deleting minimum reserve price extraneous goods agent allocation 
construction goods extend result allow setting prices combinations maximum allowable temporal consistency 
wellman walsh wurman mackie mason really extraneous zero reserve prices temporal price consistency third condition equilibrium definition hold token deallocating goods zero reserve prices effect solution value 
definition 
monotone reserve prices scheduling problem exhibits monotone reserve prices iff qi qi lemma 
equilibrium monotone prices scheduling problem monotone reserve prices equilibrium temporally consistent prices defined min min proof 
transform described lowers prices alternative way achieving task value exists provides agents opportunity improve surplus 
monotone reserve prices anchoring reduction single unit prices violate restriction goods priced minimum reserve 
lemmas monotone reserve prices restrict attention allocations market agent temporally consistent prices 
theorem 
market configuration scheduling problem monotone reserve prices maxj exists equilibrium allocation optimal proof 
optimal allocation unallocated slots early possible extraneous slots allocated 
solution obtained removing allocation optimal solution obtained swapping define market allocation maxi fj fj 
construct version assignment problem follows 
set source entities assigned consists agents seller dummy seller unallocated iji auction protocols decentralized scheduling entities matched target set consisting goods assigned optimal allocation including nulls seller agent unallocated slots jjj ag agents elements value functions value market goods single unallocated slots market zero value null goods 
sellers value elements reserve prices qi unallocated slot fj qi market optimal allocation zero null goods 
maps agent slot clearly optimal solution problem superior assignment correspond immediately improved allocation original problem 
koopmans beckmann subsequently shown follows assignment supported set prices source entity gets surplus target element assigned 
leonard shows construct lowest prices supporting allocation 
obtain combinatorial price equilibrium start lowest prices supporting optimal assignment 
note prices satisfy temporal consistency definition violation provide way source entity improve assignment 
assign prices remaining allocated market goods great possible preserving temporal consistency 
defined set price arbitrarily large value exceeding agent valuations 
starting market 
continuing set min miny 
addition ensuring temporal consistency pricing procedure ensures unallocated market obtained cheaply purchasing target elements assignment problem 
elements priced assignment equilibrium know agents prefer choose alternative 
condition combinatorial price equilibrium definition established 
conditions prices compared reserves ensured including seller agents assignment problem 
market assigned agent priced higher sum reserve prices condition 
prices supporting assignment unallocated slots dummy sellers lowest possible seller assigned zero surplus prices unallocated slots equal reserves 
temporal consistency market achievable unallocated slots priced ths sum reserves condition 
cap values ensure priced necessarily comprising superset time slots changing argument 
wellman walsh wurman mackie mason second condition ensured method pricing unallocated slots market goods maximizing prices subject temporal consistency 

combinatorial auction protocols intend define analyze combinatorial protocols analogous ascending auction 
straightforward implementation protocol defined combinatorial case basic goods may assigned various market goods 
accordingly define allocation price quote policies function combinations bids alternative goods just individual market goods 
protocols proposed case general combinatorial bidding parkes wurman 
plan investigate adaptations scheduling problem mechanisms proposed combinatorial settings 
combinatorial auctions support suboptimal equilibrium solutions disadvantageous open combinatorial markets equilibria exist basic goods 
natural approach start markets basic goods open combinatorial auctions protocol reach equilibrium 
apply incrementally progressively increasing equilibrium reached 
course presumes way detect equilibrium states indication opening additional combination markets beneficial 

generalized vickrey auction preceding analysis characterizes performance multiple ascending single auctions scheduling problem prospects combinatorial auctions 
guaranteed produce optimal solutions scheduling problems 
mechanism generalized vickrey auction gva find efficient schedules problems 
main results new briefly gva takes important place spectrum mechanisms scheduling 
provide new result stronger properties gva particular class scheduling problems observation computational complexity decentralization 
gva direct revelation mechanism drm price system 
computes payments agents allocations translate meaningful prices individual goods 
agents play bayesian nash dominant strategies desirable choice function implemented mechanism implemented drm appeal type mechanism quite powerful 
gva implement optimal solutions multi unit scheduling problems extended versions specifically gva drm relying dominant strategies class groves clarke mechanisms 
green shown general conditions auction protocols decentralized scheduling problem involving example multiple jobs externalities values agent depend allocations obtained agents 

bidding rules recall vj agent actual utility function 
agent announces vj alleged utility function 
indicate agent constrained truthful may vj vj 
auction knows reserve values qi 
receiving bids gva returns allocation vector positive negative payments agents 

allocation rules optimality recall solution mapping value solution 
auction mechanism 
computes solution arg max 
computes payments agents 
qi mx vj fj vj pj pj max qi 
qi vs vs fs component represents total reported value agents solution residual payment pj function agents reported valuations 
restrict attention formula 
allocation rule truthful bidding utility function vj vj isa dominant strategy 
gva computes optimal allocation bids bids truthful allocation globally optimal 
example 
consider setup example table 
agents truthfully report value functions auction mechanism finds optimal agents quasi linear preferences efficient social choice functions implementable dominant strategies implementable groves clarke mechanisms 
wellman walsh wurman mackie mason solution 
calculates 
agent receives total value agent receives agent receives 
agents willing participate vj fj vj long pj 
agent pays agents pay mechanism net revenue 
recall example single ascending auction protocol guarantee convergence combinatorial scheme admits inefficient equilibria 

limitations gva mechanism individually rational agent worse participating auction declined participate 
mechanism budget balanced net payment agents nonnegative 
generally optimality properties desire agents play equilibrium strategies mechanism 
groves clarke mechanisms guaranteed budget balanced may require outside injection resources subsidy 
social choice function implemented budget balanced groves clarke mechanism guarantee rational agents agree ex post participate allocation 
scheduling problem show possible obtain desirable properties mechanism designer knows reserve values qi time slot 
payment function vj pj transfers agent net value increment agents results participation auction 
agent effect may get time slices desire participation agents weakly worse 
vj nonpositive auction mechanism runs surplus 
situation gva essentially ideal mechanism scheduling problem computational cost high see section 
theorem 
gva uses payment function pj individual rationality constraint satisfied net monetary payments auction mechanism nonnegative 
qi private information seller agents mechanism needs elicit information satisfy desirable properties 
myerson satterthwaite proved mechanism obtain desired properties bilateral exchange problems 
individual rationality defined different ways depending information revealed agent commit participation decision 
limit discussion strongest form ex post rationality implies voluntary participation agents know proposed allocation 
auction protocols decentralized scheduling example 
bilateral exchange suppose buyer single unit job deadline value seller agent reserve value 
suppose 
gva induce truthful reporting give buyer require buyer pay pay seller 
mechanism individually rational produce optimal allocation auction run deficit 
case easy show scheduling problems class possible achieve desirable properties 

gva computation general problem heart gva allocation mechanism requires auction solve possibly complex nonlinear nonconvex optimization problem multiple times 
baseline computational efficiency note neapolitan show simple centralized greedy algorithm solves single unit fixed deadline scheduling problem optimally time lg 
gva mechanism solve multiple optimization problems process bids determine optimal allocation agent bid removed determine pj 
single unit fixed deadline problem centralized algorithm optimization total runtime lg 
inducing preference revelation obtaining full optimality straightforward implementation gva raises computational cost factor remove single unit restriction centralized algorithm solve scheduling problem optimally solve integer knapsack problem 
multiple unit scheduling problem np complete 
preceding argument distributing multiple unit problem gva contributes factor computation 

discussion auction mechanisms ascending single markets gva compute optimal near optimal solutions distributed scheduling problem computationally efficient manner 
multiple unit problem significantly difficult entails sharper tradeoff solution quality computational efficiency degree mechanism decentralized 
computation performed ascending auction trivial distributed goods 
guarantee solving optimally strongly believed take time polynomial size description 
problem pseudo polynomial dynamic programming solves time polynomial sum agent values exponential encoding values 
wellman walsh wurman mackie mason quality solutions produced mechanism multiple unit problem 
combinatorial auctions support equilibria cases single markets may admit suboptimal solutions 
remains seen design mechanisms combinatorial auctions produce desirable outcomes plausible agent behavior 
gva finds optimal solution implements dominant strategies general solve multiple combinatorial problems may require subsidy seller reserves known 
categories mechanisms investigated viewed spectrum single combinatorial direct revelation mechanism scope concern increases move right 
left mechanism decomposes sub mechanisms sub mechanism limited scope subsets resources ultimately singletons 
large scale systems suspect decomposition essential single designer aware resources interest agents 
imagine concerns covered direct mechanisms monetary payments suggests exist concerns included money assumed separable 
suspect mechanisms operating points spectrum play role computational markets complex allocation problems 
view important step developing broad framework markets solve distributed scheduling problems 
order move forward identify broader classes scheduling problems design associated mechanisms effectively predict agent behavior analyze resultant protocols 
expect find single mechanism reaches optimal equilibrium situations equilibria exist 
aim produce suite mechanisms collectively cover broad range problems 
ideally able choose mechanism problem know reach optimal solution perform acceptably respect possible 
acknowledgment wolfram fredrik ygge david pennock terence kelly anonymous reviewers constructive comments 
supported darpa information survivability program 

albert baker 
metaphor reality case study agents bid actual costs schedule factory 
clearwater 
auction protocols decentralized scheduling 
jeffrey banks john ledyard david porter 
allocating uncertain unresponsive resources experimental approach 
rand journal economics 

sushil john 
competitive equilibrium exchange economy 
journal economic theory 

paul brewer charles 
binary conflict ascending price mechanism decentralized allocation right railroad tracks 
international journal industrial organization 

clarke 
multipart pricing public goods 
public choice 

scott clearwater editor 
market control paradigm distributed resource allocation 
world scientific 

david gale 
multi item auctions 
journal political economy 

kevin leyton brown yoav shoham 
taming computational complexity combinatorial auctions 
sixteenth international joint conference artificial intelligence pages stockholm 

green 

incentives public decision making 
north holland 

theodore groves 
incentives teams 
econometrica 

gul 
walrasian equilibrium gross substitutes 
journal economic theory 

patrick lyle ungar 
market approach workflow automation 
nsf workshop workflow process automation information systems athens ga may 
available athttp www cis upenn edu ungar nsf html 

jordan 
competitive allocation process informationally efficient uniquely 
journal economic theory 

alexander kelso vincent crawford 
job matching coalition formation gross substitutes 
econometrica 

koopmans martin beckmann 
assignment problems location economic activities 
econometrica 

james kurose rahul simha 
microeconomic approach optimal resource allocation distributed computer systems 
ieee transactions computers 

david wu 
combinatorial auction lagrangean relaxation distributed resource scheduling 
iie transactions 

herman leonard 
elicitation honest preferences assignment individuals positions 
journal political economy 

malone fikes howard 
enterprise market task scheduler distributed computing environments 
huberman editor ecology computation pages 
north holland 

mas colell michael whinston jerry green 
microeconomic theory 
oxford university press new york 

preston mcafee john mcmillan 
auctions bidding 
journal economic literature 

preston mcafee john mcmillan 
analyzing auction 
journal economic perspectives 

paul milgrom 
putting auction theory simultaneous ascending auction 
journal political economy 
wellman walsh wurman mackie mason 
tracy mullen michael wellman 
simple computational market network information services 
international conference multiagent systems pages san francisco ca 

tracy mullen michael wellman 
market negotiation digital library services 
second usenix workshop electronic commerce pages oakland ca 

roger myerson mark satterthwaite 
efficient mechanisms bilateral trading 
journal economic theory 

richard neapolitan 
foundations algorithms 
lexington ma 

david parkes 
efficient ascending price bundle auction 
acm conference electronic commerce pages denver 

smith 
combinatorial auction mechanism airport time slot allocation 
bell journal economics 

juan rodr guez aguilar francisco mart pablo noriega garcia sierra 
competitive scenarios heterogeneous trading agents 
second international conference autonomous agents pages minneapolis 

michael rothkopf aleksander ronald 
computationally manageable combinatorial auctions 
management science 

tuomas sandholm 
algorithm optimal winner determination combinatorial auctions 
sixteenth international joint conference artificial intelligence pages stockholm 

lloyd shapley martin 
assignment game core 
international journal game theory 

michael stonebraker paul aoki witold litwin avi pfeffer adam sah jeff carl staelin andrew yu 
mariposa wide area distributed database system 
vldb journal 

hal varian jeffrey mackie mason 
generalized vickrey auctions 
technical report department economics university michigan june 

carl waldspurger tad hogg bernardo huberman jeffrey kephart scott stornetta 
spawn distributed computational economy 
ieee transactions software engineering 

carl waldspurger william weihl 
lottery scheduling flexible proportional share resource management 
proceedings symposium operating system design implementation osdi pages 

william walsh michael wellman 
efficiency equilibrium task allocation economies hierarchical dependencies 
sixteenth international joint conference artificial intelligence pages stockholm 

michael wellman 
market oriented programming environment application distributed multicommodity flow problems 
journal artificial intelligence research 

michael wellman 
computational market model distributed configuration design 
ai 

michael wellman 
market oriented programming early lessons 
clearwater 

michael wellman william walsh 
distributed quiescence detection multiagent negotiation 
aaai workshop negotiation settling conflicts identifying opportunities july 

peter wurman 
market structure multidimensional auction design computational economies 
phd thesis university michigan 
auction protocols decentralized scheduling 
peter wurman michael wellman william walsh 
michigan internet auctionbot configurable auction server human software agents 
second international conference autonomous agents pages minneapolis 

peter wurman michael wellman william walsh 
parametrization auction design space 
games economic behavior volume 

fredrik ygge 
market oriented programming application power load management 
phd thesis lund university 
