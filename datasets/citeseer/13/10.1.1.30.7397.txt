engineering mind james albus intelligent systems division national institute standards technology gaithersburg md albus cme nist gov mind remains mysterious inaccessible phenomenon components mind perception behavior generation knowledge representation value judgment reason intention emotion memory imagination recognition learning attention intelligence defined amenable analysis 
progress rapid cognitive neurosciences artificial intelligence control theory fields related engineering mind 
model architecture intelligent systems suggested tie concepts separate fields unified framework includes biological machine embodiments components mind 
argued model architecture facilitate development scientific models mind 

mind 
relationship mind brain 
thought 
mechanisms give rise imagination 
perception related object perceived 
emotions 
choose intend 
convert intention action 
plan know expect 
questions addressed indirectly subjective introspection psychological experiments majority critical variables measured controlled 
past half century invention electronic computer possible approach issues directly building machines programs exhibit mind essential qualities ability recognize patterns relationships store knowledge reason plan learn experience evaluate happening 
crucial step study mind possible build mathematical models conduct experiments principle variables measured 
research neural nets brain modeling fuzzy systems genetic algorithms providing insight learning similarities differences neuronal electronic computing 
artificial intelligence linguistics probing nature language 
image understanding developed field 
significant progress rule reasoning planning problem solving 
game theory operations research developed methods decision making face uncertainty 
autonomous vehicle research produced advances real time sensory processing world modeling navigation locomotion 
research robotics automated manufacturing produced intelligent hierarchical controls distributed databases representations object geometry process plans material properties 
control theory developed precise understanding stability adaptability controllability various conditions feedback noise 
powerful mechanisms developed parallel processing recursive estimation focusing attention 
engineering solutions exist fusing sensory input multiple sources assessing believability noisy data 
wide variety robotic systems designed built experimental laboratory vehicles wander follow walls pick items precision assembly systems vision acquire parts computer aided design cad models plan motions 
approaches explored various architectures designed subsumption neural nets soar rosenbloom rcs albus 
entire factories automated products complex boeing aircraft containing parts designed engineered entirely software physical 
progress rapid cognitive neurosciences 
producing maps interconnecting pathways brain 
neurophysiology determining neurons compute functions communicate information 
discovering transmitter substances modify value judgments compute reward punishment motivate behavior produce learning 
psychophysics provides clues humans animals perceive objects events time space reason relationships 
behavioral psychology creating models mental emotional development behavior 
mind remains mysterious inaccessible phenomena components mind perception behavior generation knowledge representation value judgment reason intention emotion memory imagination recognition learning intelligence defined amenable analysis 
progress rapid exists enormous rapidly growing literature fields 
lacking general theoretical model ties separate areas unified framework includes biological machine embodiments components mind 
published outline general theory intelligence albus 
theory expressed notation real time control system rcs developed nist design intelligent control systems albus 
illustrate concepts developed intelligent machines apply biological intelligence suggest engineering principles developed design analysis practical intelligent systems 

fundamental elements scientific endeavor necessary precisely define concepts clearly state assumptions 
axioms definitions 
axiom functional elements intelligent system behavior generation sensory perception world modeling value judgment 
df behavior generation bg planning control action designed achieve behavioral goals 
behavior generation organizes response collection agents task commands 
behavior generation accepts task commands goals objects priorities 
decomposes tasks jobs assigns jobs resources agents 
formulates selects plans develops schedules possibly coordinated actions agents 
executes plans reacts feedback follow plans spite local perturbations unexpected events 
behavior generation produces output commands decomposed act directly environment 
df planning process 
assigns responsibility agents jobs allocates resources agents performing assigned jobs 
hypothesizes strings actions plans agents vocabulary possible actions accomplish jobs 
simulates predicts results executing hypothesized plans 
evaluates predicted results hypothesized plans 
selects hypothesized plan favorable results execution 
planning process may heuristic exhaustive search strategy synthesizing hypothesized plans 
heuristic strategies may include selection previously generated plans library 
df agent set computational elements plan control execution jobs correcting errors perturbations way 
agent may servo output follow planned trajectory may sequence discrete actions branch conditions 
agent assigns jobs resources subordinates 
computational elements agent may include sensory perception world modeling value judgment functions knowledge database 
df sensory perception sp transformation data sensors meaningful useful representations world 
sensory perception accepts input data sensors measure states external world internal states system 
sensory perception scales filters data computes observed features attributes compares observations expectations generated internal models 
correlations sensed observations internally generated expectations detect events recognize entities situations 
differences sensed observations internally generated expectations sent world modeling update internal models 
sensory perception classifies generalizes clusters groups recognized entities detected events higher order entities events computes attributes entities events 
df value judgment vj computation cost risk benefit actions plans estimation importance value objects events situations assessment reliability information calculation reward punishment resulting perceived states events 
value judgment evaluates perceived planned situations enabling behavior generation select advantageous goals set priorities competing behavioral possibilities 
computes important attention rewarding punishing learning 
value judgment performed brain limbic system 
df world modeling wm process performs principal functions 
uses sensory input construct update maintain knowledge database including iconic images symbolic lists entity event frames semantic pragmatic relationships entities links symbolic iconic representations 
biological systems function short term long term memory 

answers queries behavior generation regarding state world 
provides knowledge state world behavior generation feedback servo behavior follow desired plans provide latest status information base planning operations 
function recall 

simulates results possible plans 
simulated results evaluated value judgment system order select best plan execution 
simulation performed brain call thinking 
ability plan depends fidelity internal model world works 

generates sensory expectations knowledge knowledge database 
expectations sensory perception configure filters masks windows templates correlation model matching recursive estimation clustering 
corresponds tendency biological brains see hear expect see hear 
axiom functional elements intelligent system supported knowledge database stores priori dynamic information world form state variables symbolic entities symbolic events rules equations structural dynamic models task knowledge signals images maps 
df knowledge database kd set data structures filled static dynamic information provide best estimate state world processes relationships effect events world 
knowledge database state variables represent current estimated state world 
entity frames list data structures store symbolic representations features objects groups exist world imagination 
entity frame consists list head name address plus set attribute value pairs set relations entities events 
relationships represent semantic meaning 
event frames list data structures store symbolic representations state transitions situations occur particular times places sequences states situations intervals time space world 
event frame consists name set attribute value pairs set relationships events entities 
rules equations rules predicate calculus differential equations express physical laws describe way world works mathematical logical formulae describe way things relate 
images dimensional functions attribute values may sampled arrays sensors pixels 
images may generated number ways 
example image may formed optical projection light scene world lens array photoreceptors pixels retina ccd tv camera 
image may formed pressure array tactile sensors skin 
image consists attributes brightness pressure spatial temporal gradients stereo disparity computed values range flow derived images 
image may generated internal mechanisms computer graphics engine information stored symbolic entity frames 
biological systems image generation corresponds imagination kosslyn 
maps dimensional arrays pixels icons symbolic names addition attributes attached pixels 
task knowledge knowledge things 
task knowledge includes information goal agents task objects parameters enabling disabling conditions tools resources required plans scripts procedures generating refining plans 
control laws plant models represented task knowledge 
knowledge database parts long term short term memory 
long term static slowly varying memory contains symbolic representations entities events rules known intelligent system 
long term memory consists entirely symbolic entity event frames plus rules equations 
attributes long term frame representations may transferred short term memory vice versa 
short term dynamic memory contains symbolic iconic representations entities attention 
df entities attention entities specified current task particularly noteworthy entities observed current sensory input 
short term symbolic entity frames include attributes pointers iconic images pointers entities stored long term memory 
short term iconic representations consist attribute images generated directly sensory observations filtered recursive estimation 
short term iconic images generated internal mechanisms short term symbolic entity frames 
machine systems done simulation animation 
biological systems corresponds imagination 
short term iconic images mask window incoming data compare fuse incoming sensory observations internally generated images 
short term iconic images persist memory long refreshed incoming sensory data internally generated images 
axiom functional elements knowledge database implemented set computational modules interconnected form nodes control system architecture 
df node part control system processes sensory information maintains world model computes values generates behavior 
node corresponds set neurons brain close loop afferent efferent neural pathways 
doing node typically performs functions behavior generation sensory perception world modeling value judgment 
typical node rcs model architecture albus shown 
node interconnections behavior generation world modeling value judgment modules enable task decomposition planning reasoning actions 
interconnections sensory perception world modeling value judgment modules enable knowledge acquisition situation evaluation learning 
interactions sensory perception world modeling modules enable recursive estimation optimal filtering prediction 
interconnections sensory perception world modeling behavior generation modules close reactive feedback control loop observed input commanded action 
input commands convey task goals priorities higher level nodes 
output commands convey subtask goals lower level nodes directly actuators 
downward flow commands corresponds efferent pathways brain 
upward flow information sensory perception modules correspond afferent pathways 
connections operator interface biological analog 
enable human operator insert commands override modify system behavior observe values state variables entity attributes 
operator interface system maintenance programming debugging 
axiom complexity inherent intelligent systems managed hierarchical layering 
intelligent systems inherently complex 
hierarchical layering common method organizing complex systems different types organizations history effectiveness efficiency command control 
hierarchical control system higher level nodes broader scope longer time horizons concern detail 
lower level nodes narrower scope shorter time horizons focus detail 
rcs architecture behavior generating modules nodes upper levels hierarchy long range strategic plans consisting major milestones lower level behavior generating modules successively refine long range plans short term tactical plans detailed activity goals 
sensory perception modules lower levels process data local neighborhoods short time intervals higher levels integrate data longer time intervals larger spatial regions 
knowledge database sensory perception behavior generation plans predicted input updates states plan results plan situation evaluation observed input commanded actions perceived objects events commanded task goal operator interface evaluations value judgment world modeling 
node rcs model architecture 
functional elements intelligent system behavior generation planning control sensory perception filtering detection recognition interpretation world modeling storing retrieving knowledge predicting states value judgment computing cost benefit importance uncertainty 
supported knowledge database system architecture interconnects functional modules knowledge database 
collection modules interconnections generic node rcs model architecture 
module node may operator interface 
world model knowledge low levels short term fine grained higher levels broad scope generalized 
level feedback loops closed provide reactive behavior high bandwidth fast response loops lower levels slower deliberative reactions higher levels 
rcs provides brooks calls coherent behavior adaptive processes brooks 
level state variables entities events maps maintained resolution space time appropriate level 
successively lower level hierarchy detail geometrically increased range computation geometrically decreased 
temporal resolution increased span interest decreases 
plans detailed planning horizon shrinks 
produces ratio remains relatively constant hierarchy 
design goal behavior generating functions level generate plans roughly number steps sensory perception functions compute entities containing roughly number 
higher levels plans perceived entities world modeling simulations complex time available replanning intervals processes run 
hierarchical layering keeps amount computing resources needed node manageable limits 
top hierarchy strategic objectives priorities influence selection goals prioritization tasks entire hierarchy 
details execution left subordinates 
intermediate levels tasks goals priorities received level subtasks subgoals shorter range attention priorities output level 
details execution left subordinates 
level global goals higher level refined focused narrow finer resolution subgoals 
level attention focused narrow finer resolution view world 
effect hierarchical level geometrically refine detail task view world keeping computational load levels limits handled intelligent agents modest capacity 

rcs model architecture set generic nodes illustrated interconnected hierarchical control architecture intelligent machine system 
diagram shown consists hierarchy control nodes nodes contain set modules interconnections illustrated 
nodes intelligent controller capable planning control knowledge representation value judgment sensory perception 
nodes closes feedback loop afferent efferent pathways 
operator interface may access modules node level 
example model architecture designed military vehicle system subsystems locomotion mission package communication attention 
subsystems mechanisms actuators sensors 
example locomotion subsystem may consist navigation driving controller controllers steering braking throttle gear shift plus ignition lights horn turn signals actuators sensors 
mission package may loading aiming firing subsystems numerous sensors actuators 
communication subsystem consist message encoding subsystem protocol syntax generator communications bus interface plus antenna pointing band selection actuators 
attention subsystem may contain cameras laser range infrared cameras radar acoustic sensors 
sensory perception algorithms may detect track objects surfaces edges points compute trajectories pan tilt focus actuators point cameras range finders antennae 
functions need coordinated order successfully achieve behavioral goals 
horizontal curved lines wm modules represent sharing state information nodes subtrees order synchronize related tasks 
operator interface provides capability operator interact system time number different levels adjust parameters change speed select verify targets authorize weapons 
operator interface provides means insert commands change missions halt system alter priorities perform identification friend foe monitor system functions 
operator interface send display information communications subsystem display state variables world model rate latency dictated communications bandwidth 
operator interface human operator view situational maps topographic features overlays indicate position movement friendly enemy forces 
operator interface may display graphic images motion paths print control programs plans advance executed 
operator interface enables operator run diagnostics case system malfunctions 
levels control shown node representing individual vehicle 
additional levels represent virtual chain command exists individual vehicle 
vehicle semi autonomous carries copy control nodes contain superiors command chain 
virtual chain command serves functions 
provides vehicle estimate superiors command direct communication 
second enables vehicle assume duties sp wm bg sp wm bg sp wm bg sp wm bg points lines surfaces sp wm bg sp wm bg sp wm bg second plan steering velocity second plans subtask object surface obstacle free paths sp wm bg sp wm bg sp wm bg sp wm bg sp wm bg servo primitive move virtual platoon virtual sensors actuators plans hour plans day second plans actuator output sp wm bg sp wm bg sp wm bg sp wm bg sp wm bg sp wm bg sp wm bg sp wm bg objects attention locomotion communication mission package vehicle virtual squad plans seconds task done objects attention plans minutes tasks relative nearby objects platoon formation formation squad formation attention 
rcs model architecture individual vehicle 
processing nodes organized behavior generation bg modules form command tree 
information knowledge database kd shared world modeling wm modules nodes subtree 
kd modules shown 
right examples functional characteristics behavior generation bg modules level 
left examples type entities recognized sensory perception sp modules stored wm kd knowledge database level 
sensory data paths flowing hierarchy typically form graph tree 
value judgment vj modules hidden wm modules 
control loop closed node 
operator interface may provide input output modules node 
superiors event necessary 
third enables vehicle dedicate separate node handle higher level tasks 
example virtual chain command consists levels different planning horizons minutes hour day 
levels deal external objects maps different scales ranges 
fourth provides natural interface human commanders squad platoon level interface vehicle level relevant task addressed 
course may levels vehicle virtual chain command 
layer rcs hierarchy deliberative reflexive elements 
node level sensory data processed entities recognized world model representations maintained tasks decomposed parallel sequential subtasks performed cooperating sets subordinate agents 
node feedback sensors closes control loop allowing agent respond react unexpected events 
result system combines distributes deliberative reflexive features entire hierarchical architecture planned reactive capabilities tightly integrated levels time frames 
illustrates internal structure behavior generation bg module 
bg module represents operational unit typically comprised intelligent agents 
important distinguish clearly agents bg organizational unit belong 
agent typically part bg modules different levels 
level agent member team subordinate supervisor team 
lower level agent supervisor team agents bg module lower level 
job submodule part supervisor agent bg unit level job assigns jobs agents bg unit works develop set schedules subordinate agents level bg unit 
set schedules represents plan bg unit 
subordinate agents level bg unit contains scheduler executor level supervisor ja sc sc sc ex ex ex ja sc sc sc ex ex ex job agent scheduler executor agent behavior generation module level task command input job assignments agent scheduler scheduler executor executor knowledge kd planning plan evaluations vj plans wm simulation feedback sp kd execution subtask command output subtask command output bg ja sc sc sc ex ex ex bg bg subtask command output plan selector coordinated agents plan 
internal structure behavior generation bg module 
bg module organizational unit consisting job set schedulers plan selector plan holding register contains coordinated agents plan set executors 
schedulers executors job comprise agents bg units 
agent part bg units different levels 
level agent team member peer 
level agent supervisor 
job level 
agent peer bg module level supervisor bg module lower level 
illustrates details interactions take place bg wm sp vj modules single node 
task command node form task name goal enters bg module task decomposed jobs agents 
agent scheduler generates schedule coordinates schedulers agents 
produces tentative plan path current estimated state goal state 
tentative plan submitted plan simulator wm predicts results 
results evaluated plan evaluator vj returns cost benefit analysis plan selector 
evaluation satisfactory tentative plan selected execution 
replanning called tentative plan generated job scheduler submodules 
object specified task command sent world model knowledge database looks corresponding entity long term memory database 
entity entered short term memory list entities attention 
attributes entities attention generate predicted image compared observed image 
predicted image defines windows correlation comparison recognition clustering 
differences predicted observed task command level ja job assign jobs resources agents transform task coordinates sc schedulers generate schedules agents coordinate schedules wm world modeling tentative plan path predicted image trajectory error plan simulator vj value judgment evaluate results selected plan path trajectory ps plan selector replan plan ok predict results entity frame long term symbolic memory name attributes pointers related entities short term symbolic memory name state attributes pointers related entities entity attention action object achieve plan evaluator bg behavior generator sp sensory perception observed image estimate detect filter kd knowledge database pl planner compute action null error current state ex executors error estimator graphics engine perceived sensory input level entity value perceived sensory input level task commands level entity evaluator cluster recognize compare 
relationships single node rcs architecture 
behavior generating bg modules contain job ja scheduler sc plan selector ps executor ex submodules 
world modeling wm module contains plan simulator mechanisms updating knowledge database kd contains long term short term symbolic representations short term iconic images 
sensory perception sp module contains filtering detecting estimating algorithms plus mechanisms comparing predictions generated wm module perceived input sensors 
algorithms recognizing entities clustering entities higher level entities 
value judgment vj module evaluates plans places values entities recognized observed sensory input 
images update estimated state including estimated attributes entity attention 
looping process recursive estimation implement tracking filter predictor loop 
estimated state executor servo output follow selected plan 
job scheduler submodules planning wm plan simulator predicting results tentative plans 
recognized clustered entities evaluated vj transmitted higher level sensory perception modules global processing 
recursive estimation procedure implemented modest computing hardware vision lane highway vehicles 
dickmanns implemented model world coordinates 
schneiderman implemented model image coordinates 
speeds kilometers hour highways kilometers hour winding test track achieved system 
system achieved speeds kilometers hour normal highway traffic automatic lane changing simultaneously tracking vehicles 
dickmanns axiom complexity real world environment managed focusing attention 
intelligent systems operate real world environment infinitely rich detail 
real world environment contains unlimited variety objects ground rocks grass sand mud trees bushes buildings posts rivers roads vehicles weapons people enemy friendly positions 
environment contains elements nature wind rain snow sunlight darkness 
objects elements infinite regression detail world extends infinitely far direction 
computational resources available intelligent system finite 
matter fast powerful computers amount computational resources embedded practical system limited 
imperative intelligent system able focus available computing resources important ignore irrelevant 
top important defined behavioral goals 
top goals high level perceptions generate expectations encountered evolution task 
bottom important unexpected unexplained unusual dangerous 
lower level sensory perception functions detect variations expected observed 
lower levels compute attributes signals images may indicate problems emergency conditions limits exceeded position velocity acceleration vibration pressure force current voltage thermal sensor signals 
focusing attention accomplished sampling environment high resolution important points low resolution 
example visual field concentrated foveal region lower resolution periphery 
similarly tactile attention accomplished high resolution spatial distribution tactile sensors finger tips lips tongue lower resolution regions skin 
intelligent control points fovea points visual field important guides fingers touch objects points important task goal 
hierarchical layering focuses computing resources near exponentially lower resolution longer time horizons planning analyzing past 

discussion rcs node module submodule node implemented augmented finite state machine runs asynchronously cyclically executing process 
execution cycle typically triggered clock fixed repetition rate order magnitude faster time constant process controlled may triggered events 
finite state machine surrounded set input output data buffers 
cycle submodule reads input buffers processes inputs form suitable state table encodes set state dependent rules form common expert systems 
processed input compared rules state table 
rule matches causes process go state possibly execute procedure compute appropriate output 
submodule computes set diagnostic functions time required process complete maximum time process taken average time taken 
submodule interface operator provides operator ability halt single step display value variable state process time execution 
process may halted parameters examined programmer variables changed execution resumed 
communications processes rcs system designed processes cycle independently run completely asynchronously protection messages getting overwritten 
respect rcs similar brooks pb machine 
brooks agree brooks design principles computational structures constrain system design force solutions maintain biological relevance 
allows divergence approaches draw contribute concepts cognitive neurosciences 
differences brooks include insistence systematic design topology computing structure 
admit random design choices coupled natural selection may eventually lead optimum topology believe systematic design principles reach goal far fewer iterations 
rcs programming tools software templates built provide system developer easy way configure rcs system 
templates automatically generate required utilities diagnostic features provides slots menu inputs outputs system parameters 
software templates implemented 
graphical design tool enables programmer define rcs submodule click mouse interconnect submodules click draw techniques 
programming tools enabled rcs systems hundreds submodules designed built months 
rcs implemented variety platforms including sun workstations pentium class pc computers vme systems macintosh machines number different operating systems including forth psos dos vxworks lynx os overhead rcs template running class machine microseconds 
cycle time typical low level rcs submodule milliseconds 
high performance machine tool applications servo loops may closed microseconds 

deep theoretical issues regarding nature mind remain known progress rapid 
intelligent machines research yield engineering approaches 
intelligent systems exhibit impressive performance capabilities practical applications manufacturing systems highway vehicles 
promising lines research appear combining goal driven planning reflexive behavior focusing attention active control sensing hierarchical decomposition tasks goals recursive estimation sensory perception development model architecture intelligent system design 
model architecture paves way design principles software engineering tools facilitate building intelligent machine systems 
open system architectures intelligent controllers leading specification canonical functional modules standards application programming interfaces apis functional modules open architecture machine controllers 
team api standards promise facilitate system integration enable incremental upgrades capability 
soon may possible add new layers subsystems modifying system software 
eventually systems developed different laboratories integrated large experimental systems consisting thousands computing platforms hundreds different laboratories 
point intelligent machine systems approach complexity computing power human brain 
circumstances prospect bright building scientifically valid experimental models mind 
noted closing models advance scientific inquiry nature mind lead practical improvements intelligent machine systems technology manufacturing construction transportation communication health care environmental restoration waste management security military systems 
developments significant economic social political benefits 
subject 
publication prepared united states government employee part official duties government subject copyright 
albus 

outline theory intelligence 
ieee transactions systems man cybernetics albus 

nist real time control system rcs approach intelligent systems research 
journal experimental theoretical artificial intelligence press brooks 

coherent behavior adaptive processes 
proceedings third international conference simulation adaptive behavior 
dickmanns 

general dynamic vision architecture ugv uav 
journal applied intelligence dickmanns 

parallel differential integral representations realizing efficient mobile robots 
th international symposium robotics research october munich rosenbloom laird newell eds 
soar papers 
vol 
mit press cambridge mass kosslyn 

image brain resolution imagery debate 
mit press cambridge mass schneiderman 
visual tracking autonomous driving ieee transactions robotics automation team 
technologies enabling agile manufacturing team application programming interfaces location isd cme nist gov info team certain commercial equipment instruments materials identified report order facilitate understanding 
identification imply recommendation endorsement national institute standards technology imply materials equipment identified necessarily best available purpose 
