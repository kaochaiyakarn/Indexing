guided team selection gil tidhar australian artificial intelligence institute street melbourne australia phone fax gil oz au anand rao australian artificial intelligence institute street melbourne australia phone fax anand oz au elizabeth sonenberg department computer science university melbourne melbourne australia phone eas cs mu edu au september team selection process selecting group agents complimentary skills achieve goal important aspect collaborative activity multi agent systems 
traditionally team selection done agents exchanging skills goals plans current beliefs run time forming team 
method impractical time critical domains 
provide alternative mechanism users specify expertise agents teams specifications prune number potential teams runtime 
addition introduce notion allocations allow user specify run time constraints need met team formed 
provide definitions concepts illustrate algorithms team selection process 
conclude analysing algorithms discussing related 
keywords team selection organization collaborative planning 
partially supported cooperative research centre intelligent decision systems melbourne australia 
ii guided team selection team selection process selecting group agents complimentary skills achieve goal important aspect collaborative activity multi agent systems 
traditionally team selection done agents exchanging skills goals plans current beliefs run time forming team 
method impractical time critical domains 
provide alternative mechanism users specify expertise agents teams specifications prune number potential teams run time 
addition introduce notion allocations allow user specify run time constraints need met team formed 
provide definitions concepts illustrate algorithms team selection process 
conclude analysing algorithms discussing related 
multi agent system agent autonomous entity interacting environment agents solve problems 
possible design autonomous agents general purpose agents capable performing tasks solving problems situations appropriate regard specialised having certain skills agents 
setting successful collaboration involves careful choice agents interact 
team selection process selecting group agents complementary skills achieve goal important aspect collaborative activity multi agent systems determining achieve goal viewed means analysis distinct steps selecting group agents attempt achieve goal second selecting combination actions taken agents order achieve goal 
combination actions typically referred plan 
focus step 
spirit georgeff lansky plans recipes combinations sub goals actions provided user compile time 
plans multi agent joint plans described :10.1.1.54.437
plans provided user compile time process planning classical sense unnecessary lead significantly better run time performance 
team selection done agents exchanging run time full information skills goals plans current beliefs 
probably best known selection method distributed artificial intelligence contract net protocol 
protocol uses bidding mechanism select agent attempt achieve goal 
similar algorithms extended case teams agents selection team goal referred task allocation 
described previously :10.1.1.36.8108
unguided team selection involves exponential number possible team combinations blow number interactions required select members team 
approach introduced provides way system designer provide additional knowledge system number substantially reduced 
address team selection problem adopt similar philosophy plans recipes approach 
introduce notion typed agents teams types referred agent experts team experts respectively introduce notion allocation specification teams considered goal defined terms team types terms requirements run time state teams 
expert specification actions agent team execute goals expert agent team achieve 
example project manager viewed expert respond changes project specifications achieve milestones executing appropriate plans knows resources required complete project 
similarly finance department viewed team experts consisting teams experts expert agents specialized carry respective roles 
expert specifications reasoned compile time 
allocation captures requirements reasoned run time example dealing agent task loads current context 
expert specifications allocation specifications show information guide team selection process lead improved run time performance 
furthermore approach flexible allows designer determine amount guidance provided system allowing incrementally optimize system performance needed 
section formally define notions experts allocations section describe specifications team selection 
section provide analysis approach section concludes short discussion pointers 
experts allocations describe form user provided knowledge expertise achieving goals run time constraints need satisfied selected teams 
knowledge referred expertise specification allocation specification 
expertise specification plan specifies means goal achieved agent team moment safely assume group agents certain preconditions satisfied 
means specified labelled directed graph 
labels plan expressions specify primitive action performed agent term expert refer general agent expert team expert 
achievement sub goal agent team 
agent set plans referred plan library agent 
expert agent agent specific goals actions characteristic defined expertise 
example characterized skill achieve specific goals restore power disconnect power 
specification viewed specification agent 
agent viewed specific instance expert agent 
definition set goals set actions 
define expert agent tuple normal set operations experts define experts 
normal set operations experts doing tuple wise set operations 
expert agents say expert agent expert agent provided definitions define hierarchy expertise 
top hierarchy expert agents achieve goal bottom hierarchy expert agents specializing narrow domains achieve limited number goals 
define expert team unordered set expert agents expert teams specific goals characteristic defined expertise team 
require definition expert team hierarchically decomposable allow recursive definitions 
example manufacturing organisation viewed expert team ceo expert agent marketing production finance departments expert teams 
expert teams decomposed smaller expert teams expert agents 
manufacturing organisation certain beliefs products goals target production plans meet targets team viewed specific instance expert team 
definition define expert team unordered set expert agents expert teams specific goals achieve 
formally fv expert agent expert team 
refer sub team define expert team set goals team variable set sub teams 
furthermore team sub teams expert team expert team 
main differences expert agent expert team expert teams include actions expert teams assign responsibilities expert sub teams introducing notion structure 
note expert agents define hierarchy expert teams 
furthermore team created designer specify expertise team 
typing agent team appropriate expert depends skills agents teams turn depend plans available 
number possible teams formed exponential function number agents system potentially large number 
assume agents typed assume designer system types possible teams 
alternatively allow designer specify expert particular teams type 
information automatic selection team goal 
allocation specification specification expertise agents teams static reasoned compile time 
having necessary expertise guarantee forming team executing plans may run time constraints prevent formation team 
run time constraints specified part allocation specification 
goal allocation specification specifies beliefs need satisfied run time expertise required achieving goal 
designer allocations specify run time constraints state agents teams state world 
definition set beliefs define allocation tuple expert agent expert team expert team 
refer goal belief specifies compile time constraints expert agent team allocation relevance team context potential team respectively 
note particular goal may relevance multiple allocations 
similarly expert agent team may potential team multiple allocations 
particular goal designer specify different expert agents teams considered different conditions 
note experts may explicitly defined outside definition allocation 
alternatively implicitly defined allocation 
example specifying agent types significantly reduce number potential combinations agents teams need tried run time 
example assume designer specified types agents customer service representative csr agent team leader tl agent 
plans csr agent type requires get authorization sum customer account 
tl agent authorize amount csr agent 
absence agent type specifications agent instances potential participants collaborative activity 
allocation csr agent specify type agent expert agent team multiple allocations course wise explicitly define 
solve goal credit authorization performed agent type team leader number possible alternatives reduced agent instances agent instances team leader type 
tl agent expert required csr additional abilities 
particular tl approve larger amount customer 
csr credit tl limit 
designer system options 
define separate goal types corresponding respectively create appropriate agent experts relevant skills 
create goal type corresponding customer define allocations relevant goal different team contexts team context amount potential team csr team context potential team tl 
adopt second option define csr agent experts csr 
service report fault credit define tl agent expert tl 
review produce csr note tl csr additional goals achieve 
operate exchange hour shift achieve goal operate shift designer create allocation csa css potential csa 
operate shift css team expert css includes tl css 
note tl csr definition css agent type tl potentially play roles css 
case designer add additional constraints 
case designer enforce csr agents different team context csa 
similarly define allocation cst operating exchange answer calls hours day 
define cst allocation cst 
operate exchange 
team leaders probably believe operate exchange 
designer ensure distinct shifts adding constraint team context allocation 
team selection section describe typing agents teams guide process team selection 
basic selection process starts goal achieve 
goal identify set allocations relevant 
allocation describes team type set run time constraints team 
particular relevant allocation identify set teams specified type 
team referred relevant team goal 
processes determining relevant teams done compile time 
due fact information regarding types teams types agents sub teams composed known compile time 
step selection process done run time 
step set constraints specified relevant allocation considered 
view constraint defining specialization team verify specific types teams relevant set 
achieved checking state teams set constraints 
team specific type referred applicable team goal 
team assigned goal chosen set applicable teams 
formation team depends availability applicability team formation plan 
applicable team formation plans applicable teams goal fail 
relevant teams formalize description relevant teams say particular goal team relevant goal allocation ff relevant allocation team type specified ff 
designer system specify types agents teams system set experts agent team play system automatically classify agent team compute set experts play 
algorithms classification similar algorithms goal plan achieving teams previous 
determining team particular type play particular expert depend team ability achieve goals specified expert 
depends availability allocations relevant particular goal ability sub teams play experts specified allocation 
team type ffl algorithm expert playing teams computes set teams type ffl denoted ep ffl 
algorithm set ar ff denotes set teams relevant allocation ff 
action fl define function fl returns set agents perform fl 
expert ffl define function ffl returns set constraints ffl goals actions function teams ffl returns set designer defined teams play expert 
goal fl function allocations fl returns set allocations relevance unifies fl 
expert playing teams ffl ffl expert team ep ffl possible teams teams ffl return teams ffl ep ffl theta subteams ffl expert playing teams oe ffl oe action ep ffl ep ffl oe oe goal ep ffl ep ffl ff allocations oe allocation relevant teams ff return ep ffl algorithm set ff cross product sets teams types specified potential team allocation denoted potential ff 
computed algorithm allocation relevant teams 
teams considered required achieve goal require team possesses plan achieving goal 
algorithm set ar ff subset teams ff possess plan achieving relevant goal allocation ff denoted relevance ff 
team function plans returns set plans possesses 
plan function purpose returns relevant goal allocation relevant teams ff ff expert playing team potential ff ar ff ff plans unify purpose relevance ff return ar ff note requirement relevant team possess plan matching purpose additional constraint number relevant teams viewed optimization part base computation 
applicable teams team context allocation specifies state world state potential team sub teams hold 
allows designer guide system regarding dynamic aspects choice teams restrict choice 
formally say team applicable achieve particular goal relevant respect allocation ff team context ff true 
team context allocation specifies state world state potential team sub teams hold 
allows designer guide system regarding dynamic aspects choice teams restrict choice requiring specialization relevant teams 
formally say team applicable goal relevant respect allocation ff state team satisfies team context specified ff 
choice team system set applicable teams 
specification set experts team play set allocations guides system choice teams potentially achieve goal 
information plans skills individual agents teams reason compile time potential team successfully execute plan 
compute set teams succeed achieving goal information guide processes team formation plan selection run time 
availability information regarding state team depends way information disseminated agents 
idea dissemination state team teams agent required reason state agents information available 
basic idea information available agent model world 
way predicate maintained information stored depend implementation predicate 
default may retrieve information local knowledge base holds model world 
option query agent knowledge bases maintain distributed knowledge base 
component model world actual method retrieving information defined 
similar consideration changes state team adopting new goal 
designer specify behavior system state changes 
default behavior alternatively system contact agents inform change state 
actual choice depend state dissemination algorithm adopted 
similar problems disseminating state information distributed environment appear area distributed systems 
solutions problem include fully distributed methods information transmitted request bidding algorithms methods local information diffused agents agents cf 
alon barak manber 
alternatively adopt centralized method sub set agents play role state servers responsible maintaining state agents cf 
tidhar rosenschein 
example recall previous example described agent experts csr tl team expert css allocations csa cst ways designing multiagent system allocations 
assume designer adopted option csa tl play role 
assume system agents type tl tl tl agents type csr csr csr specific information teams play team expert css 
describe specifications selecting team goal operate exchange 
goal system find allocations relevant goal algorithm allocation relevant teams 
example relevant allocation cst 
assume agents plans operating exchange set relevant teams set teams play expert defined potential team cst 
set computed algorithm expert playing teams 
algorithm expert playing teams create cross product teams play css roles potential team cst 
done recursively calling algorithm expert playing teams 
easy see relevant teams combination teams sub teams composed tl csr 
alternatively assume designer specifies team expert css played teams teams css ftl csr csr csr csr ftl csr csr csr csr ftl csr csr csr csr ftl csr csr csr csr number possible teams operate exchange cross product teams time compute set reduced substantially 
analysis objective typing agents teams reduce part means tree directed selection teams achieve goal 
section provide analysis processes described 
furthermore analyse effects typing agents teams breadth depth means tree 
start analysis providing formulation processes continue analysis formulation 
formulation processes particular goal choice team achieve depends relevant applicable teams 
sets teams relevant applicable goal depend set relevant allocations goal 
relevant allocation defines type team required order achieve goal 
addition defines constraints dynamic state relevant team 
analysis set relevant teams goal 
goal number relevant teams function number relevant allocations number sub teams allocation number teams play expert required allocation 
teams play expert provided designer computed expert algorithm 
computation depends number indirect recursive calls number teams perform action primitive skills 
number recursive calls depends information provided designer teams play particular expert occurrence actions definition experts 
designer provides information average number calls reduced 
designer provides information call algorithm 
assume simplicity allocation sub team potential team required achieve goal domain dependent parameters defined 
average number relevant allocations goal 
average number sub teams potential team allocation required play expert 
average number calls expert playing teams algorithm 
average number teams execute particular action 
average proportion number teams relevant allocation possess plan goal appears number teams relevant allocation 
expert playing teams allocation relevant teams algorithms get goal oe average number relevant teams oe denoted oe represented follows 
assumption get ff relevant allocation average number relevant teams goal oe average oe relevant teams ff algorithm allocation relevant teams calls algorithm expert playing teams potential team ff 
get assumption oe goal assigned sub team potential team ff average number relevant teams goal oe average oe playing teams assumption get average number relevant teams goal oe average oe jr oe average number jr oe equal average oe get average number relevant teams goal oe average oe jr oe jr oe assumptions get average number relevant teams situation oe average oe gamma detailed analysis algorithms longer version 
equation hold continuous case get equation average oe gamma di di number reduce substantially sub teams required achieve goal allocation 
set relevant teams created constructive way need add complexity determining set relevant allocations goal parsing allocation determine experts sub team required play 
done 
allocations defined parsing allocation complexity goals referred system complexity unification function unify complexity get average total complexity calculating relevant teams goal gamma di di complexity set applicable teams depends complexity run time constraints specified allocation complexity state dissemination algorithms 
analysis algorithms scope 
effects means tree particular goal part means tree related process team selection leaves set applicable teams 
computation involved exploring tree depend typing agents teams done designer 
dependency reflected number recursive calls teams algorithm 
number dependent specialization agents teams reflected number teams execute particular action 
describe examples demonstrate effects reducing depth breadth means tree number relevant teams 
example experts defined terms actions algorithm called depth tree hand expert designer provides set teams play expert algorithm called 
case get number relevant teams average oe assume average number relevant allocations relevant team matching plan average number teams execute particular action average number sub teams allocation get average number relevant teams goal function amount typing done designer average number agents play expert 
formulation see dashed line average oe gamma di examine effect changing specialization teams number recursive calls fixed 
assume number calls average number relevant allocations relevant average number relevant teams goal 
team matching plan average number sub teams allocation get average number relevant teams goal function number teams execute particular action 
formulation see filled line average oe di process selecting means achieving goal multi agent system decomposed main steps selection team attempt achieve goal second selection joint plan action 
choice teams potentially achieve goal depends skills teams 
totally unrestricted system number teams may large approach unsuitable time critical domains 
described mechanism team selection allows designer system guide automatic process 
guidance provided designer takes form typing agents teams specification experts goal specification types agents teams selected appropriate run time constraints specification allocations 
selecting team may require form team 
issues associated team formation particular synchronization mind set team members 
issues explored 
similarly selecting plan team execute plan 
executing joint plans area received attention 
includes durfee lesser grosz kraus sonenberg 
goals adopted agent team typically lead adoption sub goals 
optimization selection process achieved allowing designer specify possible types teams considered achieving sub goals 
information allocations selection process 
leave 
allow designer specify types teams considered sub goals enforce sub goals achieved sub teams team achieving goal provide mechanisms checking plans different teams 
left 
alon barak manber 
disseminating information reliably broadcasting 
proceedings seventh international conference distributed computing pages berlin september 
barak wheeler 
mosix distributed operating system load balancing unix volume lecture notes computer science 
springerverlag berlin 
barak 
asynchronous algorithm scattering information active nodes multicomputer 
parallel distributed computing september 
durfee lesser 
partial global planning coordination framework distributed hypothesis formation 
ieee transactions systems man cybernetics september october 
georgeff lansky 
reactive reasoning planning 
proceedings sixth national conference artificial intelligence volume pages seattle wa 
grosz kraus 
collaborative plans group activities 
proceedings ijcai pages france 
zhao 
distributed scheduling tasks deadlines resource requirements 
ieee transactions computers 
smith 
contract net protocol high level communication control distributed problem solver 
ieee transactions computers 
sonenberg tidhar werner kinny ljungberg rao 
planned team activity 
technical report australian artificial intelligence institute melbourne australia 

adaptive bidding algorithm processes clusters distributed groups 
proceedings fourth international conference distributed computing systems pages 
tidhar 
team oriented programming choosing teams 
technical report australian artificial intelligence institute melbourne australia june 
tidhar rao ljungberg kinny sonenberg 
skills capabilities real time team formation 
technical report australian artificial intelligence institute melbourne australia 
tidhar rosenschein 
contract net consultants alternative architecture experimental results 
proceedings tenth ecai pages vienna austria 
