tiger shark file system roger frank schmuck ibm almaden research center harry road san jose ca 
tiger shark parallel file system ibm aix operating system 
designed support interactive multimedia particularly large scale systems interactive television itv 
tiger shark scales entire rs product line small desktop machines sp parallel supercomputer 
tiger shark primary features support continuoustime data scalability high availability manageability crucial role large scale video servers 
interestingly features tiger shark video server important largescale applications technical computing data mining digital library scalable network file servers 
briefly describes tiger shark environment important key technology embodies efforts build products 
past years radical changes occurred underlying technology computing communication systems 
cost computer hardware storage increasing capacity wide area communications particularly advances data compression technology enabled variety exciting new applications 
application interactive multimedia promises radical shift way entertainment instruction news advertising forms information delivered public 
literally multimedia mixing multiple data types text graphics 
practice multimedia come imply presentation continuous time data primarily audio video animation 
network multimedia interactive multimedia applications increasingly important pc market years 
date multimedia applications run stand pcs digitized video audio coming local hard disks cd roms 
increasingly demand file servers support multimedia data 
reasons identical ones motivate file servers conventional data sharing security centralized administration initial interest multimedia servers lan environment explosion worldwide web increasing interest presenting multimedia wan 
interactive television multimedia technology allows moving television away size fits broadcast paradigm information consumer interactive control 
hype surrounded itv considerable debate rate technology introduced form take 
heart itv system server sending digitized video large scale distribution network thousands simultaneous users 
video servers conventional file servers managing multimedia data 
conventional file server overloaded users see lower throughput higher response time 
multimedia results annoying jitter presentation 
circumvented conventional file server handling multimedia cost effective manner requires true video server special support continuous time data 
itv providing continuous time access exacerbated sheer magnitude system 
potential customers itv calling servers support tens thousands simultaneous viewers 
single video stream requires mbits sec bandwidth 
stream video server mb sec video streams typical required high itv throughput megabytes second 
compare conventional network file servers run mb sec 
sp stream server requires nodes mb sec throughput accessing video data making need scalability itv server obvious 
itv line business application making need high availability manageability obvious 
stream itv system presenting hour movies generates hour 
routine component failures take server unduly interrupt viewers possible repair reconfigure server remains operational 
tiger shark file system broadly speaking video server consists components control component responds client requests communication component moves data network connection client server file system component manages storage retrieval data disk 
native file system aix file system jfs meets stated requirements video server 
enable rs sp platforms video servers developed tiger shark file system designed specifically meet requirements video server 
limit imposed existing sp nodes 
tiger shark contains designed support continuous time data admission control prevent overload disk scheduling assure data read time 
tiger shark supports effectively unlimited scalability amount data store data throughput bandwidth supports 
tiger shark designed high availability remains operational face single disk node failure 
tiger shark largely self managing automatic load balancing example inherent design 
operator initiated management functions performed system remains operational 
addition supporting video tiger shark contains number features suitable general purpose parallel file system tiger shark implemented standard aix virtual file system presents posix compliant programming interface applications require little porting 
tiger shark supports high speed access file single application number applications running parallel 
tiger shark fully cache coherent nodes sp 
designed support byte range locking allowing parallel access non overlapping regions file communication overhead 
summary tiger shark enables rs sp efficiently support data access demands multimedia parallel computing 
tiger shark overview tiger shark file system runs cluster processors file system nodes share pool disks 
file system node assumed able access disks 
single rs considered degenerate case cluster 
sp software component called vsd virtual shared disk allows file system nodes highspeed switch access disks physically attached 
true tiger shark properly configured running multi node machine sp underlying hardware single failure point dual power 
tiger shark configured survive multiple failures long successive failures occur far apart time allow recovery 
storage nodes 
illustrated 
addition supporting single rs sp cluster consist multiple rs ssa disks 
current generation ssa disks rs limits ssa cluster ssa loops rs nodes 
node connected loops node directly access disks 
ssa cluster allows cost effective server scaling limits 
tiger shark files available applications including network services nfs network file system daemon aix vfs virtual file system interface 
vfs interface tiger shark compatible native jfs file system programs don modified tiger shark want take advantage special support multimedia 
tiger shark presents single system image clients operations file file system node see globally consistent view file 
primary role video server cluster connected external network atm switched ethernet 
single node serve file system storage node keep discussion simple treat storage file system nodes separate 

serial storage architecture 
network interfaces attached file system nodes 
tiger shark point view programs files accessible external clients nfs daemon simply applications running file system nodes 
application tape archive manager retrieves frequently files tape library attached file system nodes 
tiger shark architecture tiger shark number architectural elements allow meet design goals 
brief discussion major ones support continuous time file access 
aspects support continuous time resource reservation disk scheduling 
resource reservation ensures sufficient disk throughput satisfy existing clients new requests rejected 
real time scheduling executes disk os proper order achieve uninterrupted flow data clients 
tiger shark resource reservation uses benchmarking process measures system synthetic workload designed approximate multimedia access 
automatically detects compensates bottlenecks disk adapters busses tiger shark uses deadline scheduling opposed conventional scan elevator algorithms 
tiger 
tiger shark sp shark deadline scheduling achieve maximum disk throughput multimedia traffic maintaining full quality service 
large disk blocks 
efficiently supporting multimedia supercomputing requires file system maximize disk throughput 
conventional file systems optimize disk space small kbyte disk block size 
disk throughput strongly related disk block size tiger shark uses larger kbyte block size 
multimedia supercomputing usually large files impact large blocks disk storage utilization typically negligible 
wide striping 
supercomputing multimedia file system activity directed single file 
throughput individual disk mb sec achieving higher throughput file requires spreading multiple disks 
tiger shark file system reside disks allowing effectively unlimited throughput 
file striped evenly disks file system load disks inherently balanced regardless file access patterns 
replication 
number disks nodes system scales probability individual component failures increases 
form data redundancy required system continue operate face component failures 
raid partial solution 
commercially available raid subsystems twice expensive conventional disk raid controllers performance bottlenecks large video server commonly tb disk storage probability entire raid subsystem fail significant 
alternative raid tiger shark supports block level replication file system data bookkeeping information metadata keeps track location files disk 
line system management 
tiger shark responds signals generated aix operating system automatically recover reconfigure response failure repair hardware components 
reconfiguration occurs system remains operational 
system administrator initiated functions creating deleting file systems adding removing disks file systems executed system remains operational 
files 
example itv system night terminator goes line clients may viewing movie 
stream server mbytes sec 
file containing terminator 
reorganized newly added disks line reorganization place background 
disk data structures tiger shark supports multiple separately file systems stored dedicated group disks called stripe group 
file file system evenly distributed striped disks stripe group 
tiger shark file system data structures similar conventional file system 
file fixed size inode contains information file size time modification 
inodes point indirect blocks point file data blocks 
efficiently disk space data blocks split fragments fractional blocks efficiently store small files piece large files 
traditional unix file system object inode indirect block data block replicated 
table map disk numbers physical disk names contains information allows tiger shark allocate replicas disks common failure point 
degree replication controlled object basis example replicating metadata popular movies 
allows trade offs fault tolerance system cost 
software structure illustrates tiger shark software structure 
tiger shark implemented user level daemon process labeled tiger shark file system daemon running real time priority aix 
vfs interface implemented dynamically loaded kernel extension 
client application accesses tiger shark files standard aix file system interface open close read write 
vfs kernel extension interacts tiger shark daemon perform requested file system operation 
vfs kernel extension uses aix message queues communicate tiger shark daemon 
file data transferred memory segment shared tiger shark daemon vfs layer 
data block read buffer shared memory vfs layer satisfy read requests directly buffer sending message daemon 
example client program issues sequential reads tiger shark file vfs layer sends message daemon block read calls 
continuous time applications tiger shark provides extensions normal file system interface allow client specify quality service requirements video playback data rate 
tiger shark uses call reserve resources disk bandwidth switch capacity buffer space 
tiger shark accessed standard aix nfs daemon allow pc workstation clients play multimedia audio video files lan application nfs client code aix nfs server code unmodified aware tiger shark api extensions quality service 
support multimedia playback nfs tiger shark contains streaming heuristic code allows default playback rate assigned file 
tiger shark detects nfs client performing sequential reads file default playback rate tiger shark assumes client streaming reserves bandwidth client uses deadline scheduling read file default rate tiger shark applications multimedia tiger shark date ibm itv trials customer betas joint studies 
short overview activities 
bell atlantic field trial pl wn video demand vod trials video server earlier trials banks vcrs simulate video server 
featured shark predecessor tiger shark supporting simultaneous streams single rs model 
video sent set top boxes located homes approximately 
lan adequate bandwidth low response time support video switched ethernet atm lan emulation 

noted default playback rate maximum rate tiger shark read ahead streaming 
client attempts read higher rate blocked 
client reads lower rate read ahead limited client maximum number buffers 
subscribers adsl modems subscriber loop 
system truly vod featured movies sent individual households demand interactive movies requested automated telephone order entry system direct talk 
bell atlantic field trial operational april continued september 
hong kong telecom vod trial pat supported simultaneous mbit sec 
streams rs model servers running tiger shark 
video distribution adsl boxes featured back channel sending interactive control input server 
user interface featured interactive menus image overlays video fly ins 
came tiger shark channel requiring server support true interactive response time 
trial ran successfully march september 
tokyo metropolitan government itv trial tmg scheduled early 
feature mbit sec 
streams tiger shark running sp 
video delivery hybrid fiber 
argonne labs national supercomputing centers ibm collaborated develop experimental wan video server employing tiger shark node sp 
system uses implementation rtp real time protocol transmit video bone multicast backbone network interconnecting supercomputing centers 
system demonstrated supercomputing conference san diego dec video running ibm location new york ibm 
technical commercial applications tiger shark attributes scalability availability manageability standard programming interface important technical commercial applications 
resulted considerable interest tiger shark general purpose parallel file system 
better support general purpose parallel computing extensions tiger shark underway 
significant support fine grained write sharing individual files 
video serving primarily read large simulation involve nodes simultaneously making updates small pieces file individually working 
summary multimedia applications place demands file system ability support quality service 
tiger shark supports real time access required multimedia provides scalable robust platform adequate large itv systems 
tiger shark proven number real world customer trials extended support general purpose parallel computing 
shark continuous media file server proceedings ieee spring compcon san francisco ca feb pp 

stein system deliver interactive television programming proceedings ieee spring compcon san francisco ca mar pp 

ibm argonne national lab video server ibm com pps show super demos video html pat alan patterson hong kong telecom ibm map video effort electronic engineering times aug 
pl larry plumb bell atlantic demonstrates video demand existing telephone network bell atlantic press release jun 
tmg basic plan multimedia experiments tokyo metropolitan multimedia experiments www tokyo teleport jp english atms htm wn bell atlantic ibm announce agreement video demand server world news today jan 

software architecture overview 
