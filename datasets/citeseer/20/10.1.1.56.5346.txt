uniform closures order theoretically reconstructing logic program semantics domain refinements roberto giacobazzi dipartimento di informatica universit di pisa corso italia pisa italy di unipi francesco ranzato dipartimento di matematica ed universit di padova padova italy franz math notion uniform closure operator introduced shown concept surfaces different areas application interpretation notably semantics design logic programs theory domain refinements 
logic programming uniform closures permit generalize order theoretic perspective standard hierarchy declarative semantics 
particular show reconstruct modeltheoretic characterization known semantics pure order theoretic concepts 
far systematic refinement operators domains concerned show uniform closures capture precisely property refinement invertible admitting related operator simplifies possible domain input refinement 
exploiting argument reconstruct logic programming yield precise relationship refinements inverse operators demonstrate form adjunction respect conveniently modified complete order domains 
keywords interpretation uniform closure logic program semantics domain refinement 
interpretation cousot cousot established theory program analysis specification gradually gaining ground formal basis comparative study design programming language semantics different levels abstraction cousot cousot cousot giacobazzi giacobazzi ranzato 
interpretation theory provides right mathematical tools relate precise way semantic definitions systematically design new semantics approximation refinement existing ones 
popl patrick radhia cousot put basis new range applications studying interpretation generic inductive definitions relating trace relational denotational semantics 
shows relevant constructions results known semantics logic programming languages generalized order theoretic perspective applied interpretation theory providing new unexpected results areas 
research starts attempt reconstruct standard hierarchy declarative semantics logic programs falaschi purely order theoretic fashion independently properties peculiar objects manipulated logic programs atoms clauses substitutions 
surprisingly generalization relies strongly typical interpretation tools closure operators galois connections providing possibility extend standard results known field logic programming semantics programming languages semantics surfaces completely different applications ffl ffl ffl ffl ffl ffl ffl gamma gamma zz sign phi phi phi gamma gamma gamma gamma gamma gamma ffl ffl ffl ffl ffl zz gamma sigma gamma gamma gamma gamma ffl ffl ffl ffl zz gamma sigma gamma gamma gamma gamma domain sign abstractions sigma sigma interpretation theory systematic design domains 
sense example traditional theories programming language semantics interpretation may benefit cross fertilization 
standard cousot cousot framework upper closure operators capture essence process abstraction play role approximating operators 
concrete domain complete lattice underlying ordering encodes relation approximation objects top element represents information meaning order dual standard classical domain theory closure operator ae monotone idempotent extensive ae 
intuition quite simple 
monotonicity ensures abstraction monotonically approximates domain objects idempotency means process approximation performed captures precisely intended meaning approximation approximation ae contains information source approach complete lattice uco closure operators identified called lattice interpretations cousot cousot complete lattice possible domains modulo isomorphic representation objects concrete domain bottom straightforward abstraction 
order theoretic reconstruction hierarchy logic program semantics leads naturally concept uniform closure specialized duality meet join uniformity main novel lattice theoretic notion 
closure operator ae complete lattice meet uniform nonempty subset elements mapped ae infimum mapped ae give simple example 
consider classical domain sign depicted typically sign analysis integer variables 
domains sigma sigma depicted proper abstractions sign sigma turn abstraction sigma 
domains correspond closure operators ae sigma ae sigma defined sign ae sigma ae zz zz gamma ae sigma ae zz zz gamma 
turns ae sigma meet uniform fx sign ae sigma contain infimum immediate check ae sigma meet uniform case fx sign ae sigma contains infimum 
closure operators general additive additive preserve meet uniformity general weaker additivity 
instance example meet uniform ae sigma additive ae sigma gamma ae sigma ae sigma gamma gamma 
prove meet uniform closure ae meet uniformity provides systematic way lifting complete order maintaining complete lattice structure achieving additivity ae relatively lifted complete order 
definition lifted partial order obtained generalizing construction falaschi proposed relate semantic interpretations logic programs 
definition obtained lifting hoare powerdomain preorder nonground interpretations sets atoms relation instantiation atoms partial order ffl ffl ffl ffl ffl ffl ffl gamma gamma zz gamma gamma gamma gamma gamma gamma gamma gamma sign equipped lifted order ae sigma complete order 
relevant point construction allows keep track degree instantiation set inclusion interpretations 
generalization idea quite simple 
complete lattice operator ae smaller lifted order ae ae smaller ae original order lead general preorder relation ae injective 
elements mapped ae value original partial order considered ae ae smaller original order smaller lifted order 
link notion meet uniformity relevant consequences definition ae meet uniform closure operator 
approach falaschi reformulated means closure instantiation interpretations results meet uniform 
simple example lifted order sign respect meet uniform closure ae sigma gives rise lattice depicted smaller gamma 
easily seen lifted order closure ae sigma additive 
illustrate detail general theory uniform closure operators applied fields logic program semantics domain design 
order theoretic reconstruction semantics logic programs 
declarative semantics proposed falaschi survey see semantics modeling adequately canonical herbrand model semantics van emden kowalski operational behavior logic program defined sld resolution 
particular stronger soundness completeness results hold semantics allows characterize precisely key observable operational property computed answer substitutions 
due features semantics widely successfully applied area semantics program transformation analysis see codish 
key points approach denotations interpretations logic program equivalence classes renaming variables sets possibly nonground atoms 
original model theoretic view semantics unsatisfactory ad hoc notions truth model falaschi section 
problems solved falaschi nonground interpretation defined model corresponding herbrand interpretation closure ground instances model standard sense 
observed falaschi model intersection property allows associate logic program canonical model hold general models 
basically due fact plain set inclusion adequately reflect intended meaning nonground interpretations models instantiation atoms taken account 
show construction proposed falaschi overcome problems fully independent notion peculiar logic programming 
prove results falaschi obtained instance general framework completely reconstructs approach pure order theoretic concepts 
key observations led construction semantics involved falaschi related interpretation ii semantics computed answers related correct answers meet uniform closure instance generic downward closure discussed sections iii lifted order induced downward closure generalizes exactly new ordering relation introduced falaschi 
order theoretic approach downward closure additive respect lifted order consequence ensures existence canonical model 
independent specific semantic objects results applicable semantics logic programming style semantics general programming language semantics specified inductive definitions 
instance far logic programming concerned hard generalize results model theoretic compositional semantics section lines approach 
worth remarking logic programming probably programming paradigm interpretation ideas successful study semantics growing literature topic shows see amato levi levi fages gori giacobazzi giacobazzi ranzato results fit trend 
order theoretic foundations domain refinements 
idea domain refinement recurrent interpretation 
relevant examples include disjunctive completion cousot cousot fil ranzato giacobazzi ranzato jensen reduced product cousot cousot cite known ones 
basic idea expressive domains obtained combining simpler ones lifting systematically adding new information 
systematic treatment domain refinements fil giacobazzi ranzato generic refinement defined lower closure operator replaced dual lattice interpretations concrete domain 
intuition natural 
monotonicity refinement preserves relative precision domains idempotency ensures refinement performed captures action refinement 
kind operators domains provide high level facilities tune program analysis accuracy cost included tools design aid modern systems program analysis instance system yi harrison codish gaia 
attention devoted invert domain refinements 
refinement uco corresponds define operator simplifies domain input returning domain contains amount information required get expressiveness obtainable inverse operator exists class ik uco domains ik exists common abstraction domains 
intuitively resembles operation compression files 
problem inverting sense refinement quite hard solve satisfactory way 
fil observed refinements inverted significant class domains 
problem inverting reduced product disjunctive completion solved introducing respectively notions complementation disjunctive basis giacobazzi ranzato 
observe problem inverting domain refinement closely bound concept uniformity 
fact common abstraction lattice interpretations coincides upper bound operation turns refinement invertible join uniform 
straightforward extension notion uniformity stated precisely invertible class ik domains join uniform ik 
situation dual logic program semantics join uniformity replaces meet uniformity possible lift complete order domains respect invertible refinement 
argue novel order reflects adequately standard relation precision domains relatively invertible refinement 
demonstrate invertible refinement inverse operator give rise adjunction respect lifted order justifies term inversion context 
structure 
section recall basic notations notions lattice theory logic programming succinct overview interpretation 
section motivated approach falaschi introduce main notion uniformity section study meet uniformity closure operators complete lattices 
section define lifting complete order meet uniform closure operator prove process preserves complete lattice structure allows closure additivity 
previous results section define order theoretic generalized semantics generalizes results falaschi 
particular order theoretic generalizations notions model model logic program respectively sections 
section presents application theory domain refinements 
section concludes sketching research directions 
preliminaries section briefly introduce notation summarize definitions known properties concerning closure operators details see birkhoff ward interpretation see cousot cousot logic programming see apt 
basic notation sets 
powerset denoted cardinality jc set difference denoted function defined ff dg 
functions denoted church lambda notation 
ffi denote composition functions ffi 
set equipped partial order denoted hc simply poset usually denote corresponding partial order 
complete lattice partial order upper bound lub greatest lower bound glb top element bottom element denoted hc lattice denote corresponding basic operators elements 
slightly abuse notation denoting lattices poset notation 
denote ordered structures isomorphic 
function complete lattices additive 
additivity dually defined 
closure operators upper closure operator simply closure poset operator ae monotone idempotent extensive ae 
denote uco set closure operators poset complete lattice closure operator ae uco uniquely determined set fixpoints image ae 
subset set fixpoints closure operator iff moore family fx 
case ae fy yg corresponding closure set ae fixpoints ae uco complete lattice respect order precisely complete meet glb ae coincide 
general ae complete sublattice lub ae different fact ae complete sublattice iff ae additive 
view equivalence find particularly convenient identify closure operators sets fixpoints notation capital latin letters viewing closures functions greek letters denote 
keep soft ambiguity notations leave reader distinguish functions sets context 
denote complete lattice closure operators complete lattice ae uco fae uco ae iff ae equivalently ae iff ae ae ae ae ae 
top element uco bottom element 
uco uco ca denote respectively subsets uco consisting additive additive closures closure operator ae uco properties hold ae ae ae ii ae ae ae 
known complete lattice uco dual atomic closure different top 
glb set dual atoms dual atom element covered top 
lower closure operators dually defined replaced ae set lower closure operators denoted 
properties lower closure operators derived duality upper closures particular uco dually isomorphic 
upper lower closures called simply closures leave reader distinguish context 
galois connections interpretation basics posets ff fl monotone functions fl ff ff fl quadruple ff fl galois connection short addition ff fl ff fl galois insertion short 
ff fl ff fl 
recall definition galois connection equivalent adjunction ff fl ff fl iff ff fl 
map ff fl called left adjoint right adjoint fl ff 
terminology justified known fact mapping uniquely determines 
particular complete lattices ff additive fl additive determines galois connection fl fc ff ag ii ff fa fl function denote corresponding right adjoint left adjoint function exists 
standard cousot cousot interpretation framework nonstandard program semantics obtained standard substituting domain computation called concrete basic operations domain corresponding operations 
concrete domains complete lattices ordering relations describe relative precision denotations top elements representing information 
concrete domain domain related galois connection ff fl ff fl called abstraction concretization maps respectively 
called abstraction intuition concretization map gives concrete value corresponding denotation semantics concrete value abstraction map gives best respect ordering approximation 
value approximates concrete value fl equivalently adjunction ff ff fl value domain useful representation concrete domain elements represent distinct members fl 
known may lifted identifying equivalence class values domain concrete meaning 
process known reduction domain 
known cousot cousot domains equivalently specified galois insertions sets fixpoints upper closures concrete domain 
approaches completely equivalent ae uco ae ae gamma ae isomorphism ffi ae gamma ff fl ae fl ffi ff uco closure associated ae domain specified 
ff fl just computer representation logical meaning image concrete domain essence lies corresponding closure operator ae equivalence restrictive convenient closure operator approach reason domain properties independently representation objects 
introduce closure operators complete lattice doing step interpretation consequently identify uco called lattice interpretations cf 
cousot cousot section cousot cousot section complete lattice possible domains modulo isomorphic representation objects concrete domain ordering uco corresponds precisely standard order compare domains regard precision precise abstraction iff uco 
lub glb uco meaning operators domains 
fa uco concrete domains abstractions common abstraction ii isomorphic wellknown reduced product basically cartesian product plus reduction equivalently domains abstracting concrete logic programming notation atom denote set atoms built order language var denotes set variables 
syntactic object termed ground contain occurrences variables 
set substitutions built denoted sub 
application substitution oe syntactic object denoted soe 
variable renaming substitution bijection var syntactic object instantiated denoted iff exists oe sub oe 
relation pre order atom 
syntactic objects equivalent renaming denoted iff sake simplicity syntactic object denote equivalence class renaming 
quotient atom partially ordered respect 
abuse notation denoted atom atom called nonground herbrand base 
subset atom ground atoms denoted atom called ground standard herbrand base 
domains interpretations meet uniformity section introduce concept meet uniform function defined complete lattices provides key notion order theoretically reconstructing model theoretic semantics logic programs studying domain refinements 
atom atom atom atom atom atom deltae uco atom additive gr atom 
atom additive additive hierarchy domains interpretations 
motivations logic programming 
recall notions involved construction proposed falaschi 
obtained presenting different logic program semantics related interpretation similarly approaches levi giacobazzi 
assume fixed order language subsequent notions respect falaschi interpretation defined subset nonground herbrand base atom 
domain interpretations fixed powerset atom nonground herbrand base ordered subset inclusion 
syntactic operators interpretations defined follows 
suppose atom 
closure instantiation di fa atom bg ii ground elements bi fa iii ground instances gr bdi ec di atom operators build hierarchy various domains interpretations introduced falaschi 
operator deltae defines subset atom atom interpretations closed instantiation atom fi atom di 
set ground herbrand interpretations atom turn defined subset atom image operator gr deltac atom fi atom gr bi immediate verify deltae atom 
atom additive closure operator 
set fixpoints equipped subset ordering complete sublattice atom atom complete lattice lub glb respectively union intersection 
interpretation viewpoint means domain interpretations closed instantiation abstraction basic domain nonground interpretations 
observation explicit framework interpretation intuition considering domain interpretations atom atom disregarding information atom able represent 
hand clear gr atom 
atom additive 
image atom equipped subset ordering complete sublattice atom lub glb union intersection respectively 
worth noting gr additive left adjoint galois insertion gr atom atom gr right adjoint gr atom 
atom defined gr fj atom gr galois insertion induces closure operator cgr gr ffi gr uco atom image atom complete lattice isomorphic atom right adjoints additive composition additive functions additive additivity gr induces additivity corresponding closure cgr remarks say atom turn abstraction atom 
perspective interpretation deal hierarchy domains depicted 
order theoretic generalization 
order theoretic point view assume basic domain interpretations merely complete lattice hc order generalize syntactic operators defined order theoretic perspective necessary assume domain interpretations powerset poset ordered subset inclusion hc hq poset remarked hypothesis necessary generalized order theoretic construction see 
generalization immediate involves standard known operators basic lattice theory 
fixed stands ground herbrand base 
di fx yg ii bi iii gr bdi ec immediate note uco furthermore additive 
closure operator generally known downward closure 
worthwhile observe additive fact lattice depicted fag fbg fag fbg ffl ffl ffl ffl gamma gamma gamma gamma far deltac 
concerned immediate note deltac additive additive 
propose generalization hierarchy domains interpretations recalled takes consideration order theoretic properties functions involved construction 
order mimic closure instantiation relating atom atom assume closure operator ae uco defined generalized domain complete lattice hc closure ae formalizes step abstraction domain contrast deltae immediate generalization require additivity ae 
focus peculiar hidden order theoretic property downward closure uco call meet uniformity best knowledge property functions previously considered literature 
complete lattice set 
definition function meet uniform terms thought lattice mapping enjoys property meet uniformity additive family elements constant 
note condition vacuously satisfied singleton proofs meet uniformity assume jy 
notice trivially meet uniform 
worth noting definition complete lattice easily generalized algebra equipped finitary infinitary operation replaces role played glb generality contribute significantly account similar property closure operators 
authors introduced definition notion equational closure complete lattice strict upper closure operator ae addition closed elements distribute ae join generated dual compact elements lattice theoretic structure equational closures studied section 
meet uniformity general weaker results applicable study properties generic meet uniform closure operators complete lattices 
aims 
far closures concerned denote uco fae uco ae meet set meet uniform closure operators complete lattice announced additive downward closure meet uniform poset satisfies ascending chain condition acc short contain infinite strictly increasing chains 
theorem satisfies acc meet uniform 
order demonstrate result need notation preliminary lemma 
operator max 
giving maximal elements subset defined follows max fx yg 
lemma poset 
max max 
ii satisfies acc max 
iii satisfies acc max max 
proof 
max consider exists max 
max 
max exists contradiction 
ii max get max 
exists max max 
exists max max pick iterating constructive process get infinite strictly increasing chain contradiction 
exists max max 
iii max max max max 
ii max max ii proof theorem 
consider family fs ji prove 
monotonicity 
lemma ii max exists max lemma iii max max max max 
worth remarking satisfy acc theorem general hold example shows 
example consider poset natural numbers equipped standard ordering satisfy acc subsets respectively odd numbers 
whilst meet uniform 
atom equipped partial order instantiation evidently poset satisfying ascending chain condition consequence theorem get closure instantiation deltae atom 
atom meet uniform 
see meet uniformity key order theoretic property allows generalize results falaschi 
generalized hierarchy assume step abstraction hc hae ae ae 
hg ae ae ae 
ae uco ae ae additive generalized order theoretic hierarchy domains 
meet uniform closure operator ae uco 
step consists generalizing grounding operator defined atom 
observed gr deltac coincide atom gr atom 
atom additive additive 
generalization simply considers additive map defined image hae ae ae 
clearly additive monotone 
case key order theoretic property grounding operator relating domain interpretations closed instantiation domain ground interpretations additivity 
noted interpretation step 
purposes need consider additive map 
notice image additive function hg ae complete lattice induced order glb coincides ae turn coincides hg ae moore family hc hae order theoretic generalized hierarchy summarized 
meet uniform closure operators section mainly concentrate studying properties meet uniform closure operators complete lattices 
assume hc complete lattice 
noted injective function meet uniform 
far closures concerned obviously injective closure identity 
injectivity relevant characterize meet uniformity closure operators 
shows closure operator dual property join uniformity satisfied 
ae uco join uniform 
proof 
ae ae 
point ii section idempotency ae ae ae ae ae ae 
clearly bottom element uco identity operator belongs uco 
furthermore result holds 
theorem uco moore family uco 
proof 
clearly 
uco 
consider fae uco ji 
show ae uco 
consider ae ae 
prove ae ae thesis follows ae ae ae ae 
consider ae ae ae analogously ae 
ae ae ae ae easily follows 
ae ae 
consequence uco complete lattice respect order inherited uco 
example shows general uco complete sublattice uco 
ffl ffl ffl ffl ffl ffl ffl ae ae ae ae ae ae ae ffl ffl ffl ffl ffl ffl ae ae ae ae ae ae lattices uco left uco right 
example consider finite lattice depicted section point rhombus lattice closure operators follows ae ae ag ae ae bg ae ae ae uco lattice depicted 
simple verify uco lattice depicted 
fact closure meet uniform ae ae ae whilst ae ae 
observe uco sublattice uco 
example allows draw additional consequences 
property dual atomicity uco hold anymore complete lattice uco 
ii functional composition meet uniform closure operators closure general meet uniform 
fact meet uniform closures ae ae ae ffi ae ae ffi ae ae meet uniform 
set consider corresponding equivalence relation induced 
definition assigns canonical representative equivalence class defined definition define fy 
meet uniform immediate observe definition worth noticing ae uco ae ae ae 
remarks proofs 
observation provides alternative characterization meet uniformity 
ha poset 
proposition monotone 
meet uniform iff proof 
obvious 
consider jy obviously 
hand hypothesis 

observation allows give slight generalization notion 
monotone define meet uniform meet uniform proposition iff meet uniform particular complete lattice denote uco set closures meet uniform simple verify theorem admits straightforward generalization notion meet uniformity uco moore family uco 
see usefulness general concept meet uniformity section 
downward closure section simple characterization canonical representative definition follows 
satisfies acc max 
proof 
lemma iii fj fj max max max max max max 
hand max max max max 
close section observing meet uniformity induced closure operators means galois connections 
slight abuse terminology 
ff fl defined meet uniform map ff meet uniform 
result shows meet uniform induce meet uniform closures 
proposition 
ff fl meet uniform iff fl ffi ff uco 
proof 
prove part direction similar 
consider fl ff fl ff 
ff fl ff ff fl ff ff ffi fl ffi ff ff get ff ff 
ff ff fl ff fl ff 
lifting complete orders meet uniform closures key definition obtained obvious generalization partial order introduced falaschi definition see section 
hc ha posets consider function definition lifting ordering relation defined follows iff study consequences notion 
firstly straightforward note definition correct 
lemma partial order assume function monotone 
observe bounded top bottom elements bounded lifted order top bottom focus closure operators generalized hierarchy semantics play role abstraction map uniquely determined closure operator 
result assume hc mere poset 
proposition ae uco ae uco ae 
proof 
idempotency clearly preserved 
ae easily follows fact ae prove monotonicity ae ae 
ae ae ffi ffi ae ae 
hypothesis ae ae get ae ae ae ae 
hand assume ae ae 
ae ae hypothesis implies monotonicity get concludes proof 
immediate consequence result get ae uco ae uco ae 
give simple example lifting partial order closure operator 
example consider lattice hl example closures ae ag ae defined easy verify lifting ae changes structure ae lifting ae gives chain 
ae ae ae hc complete lattice 
key property lifting complete order meet uniform closure operator step preserves complete lattice structure 
theorem hc complete lattice ae uco hc ae complete lattice 
proof theorem consists giving explicit characterizations lub glb lifted order 
meet uniform closure ae uco recall definition ae fy ae ae subset give definitions fy ae yg fr ae ae fy ae ae ae ae ae 
order prove lub glb lifted order need preliminary lemma 
lemma ae ae 
proof 
equalities prove claim ae ae fy ae yg fr ae point ii section ae fae ae yg fae ae meet uniformity ae ae fae ae yg fae point ii section ae fy ae yg fy ae theorem lub glb hc ae proof 
prove lub 
consider 
show ae 
ae ae immediate lemma 
ae ae hypothesis lemma get ae ae ae ae ae ae ae ae ae implies 
assume exists ae prove ae 
ae ae hypothesis follows ae ae 
lemma ae ae ae ae ae ae ae 
ae ae hypothesis lemma ae ae 
verify ae fact ae ae ae ae ae ae second ae ae ae ae ae ae ae ae 
hypothesis ae ae get desired prove glb 
consider distinguish mutually exclusive branches definition 
exists ae ae fy ae ae ae meet uniform ae ae ae 
observation proof 
ae ae ae ae holds 
second ae ae holds premise equivalent ae ae 
exists ae ae ae ae ae ae hypothesis ae ae ae 
second implication ae ae holds premise implies ae ae ae ae ae ae 
exploiting hypothesis ae implies turn implies ffl ffl ffl ffl ffl ffl gamma gamma gamma gamma ffl ffl ffl ffl ffl ffl gamma gamma phi phi phi phi gamma gamma lattice hc right poset hc ae left 
assume branch ae ae 
case ae 
ae ae ae ae ae ae 
second implication ae ae ae ae trivially holds hypothesis premise satisfied 
exists ae ae ae ae ae hypothesis ae ae 
second ae ae holds equivalent ae ae ae true ae 
note singleton fr ae added definition fy ae yg results empty ae taken lub 
observed generality note remain unchanged lifting ordering fact 
consequence theorem get fact useful sections 
corollary ae ae 
important meet uniformity crucial property closure ae allows prove theorem 
fact example shows closure meet uniform general lifted order give rise complete lattice 
example consider finite lattice hc depicted consider closure ae uco defined ae immediate verify ae meet uniform fact ae ae ae ae 
case lack meet uniformity ae implies lifted poset hc ae depicted lattice anymore definition ae ae ae remarkable consequence lifting complete order meet uniform closure operator ae 
fact process upgrade properties enjoyed ae considered lifted complete order ae ae additive closure operator 
theorem ae uco ae uco ca ae 
proof 
proposition ae closure operator hc ae show 
corollary show ae ae 
distinguish branches characterization 
fy ae ae suitable ae ae ae ae ae ae meet uniform 
ii ae ae ae ae ae 
generalized order theoretic semantics section show exploit general order theoretic results previous sections order define order theoretic semantics generalizing model theoretic logic program semantics proposed falaschi 
interpretations models semantics logic programs defined falaschi aim providing declarative semantic counterpart operational observable property computed answer substitutions possible means standard ground success set semantics van emden kowalski 
introduce notation pi denotes set predicate symbols underlying order language denotes sequence distinct variables program goal write gamma 
iff exists sld refutation computed answer substitution 
semantics atom program defined fp pi sub gamma 
turns semantics fully respect notion computed answer substitution cf 
falaschi 
programs define equivalent computed answer substitutions observable goal gamma 
iff oe gamma 
goe 
full abstraction theorem states equivalent sense 
details properties consequences semantics reader referred falaschi recalled definition illustrative purposes 
semantics program defined subset nonground herbrand base interpretation 
falaschi gave model theoretic interpretation sets nonground atoms obvious goal making semantics model standard ground herbrand model 
recall notion 
standard ground herbrand interpretation atom definite clause notion truth standard logical hand nonground interpretation atom model theoretic viewpoint idea denotation set ground instances gr 
accordingly falaschi proposed approach interpretation atom model program clauses true standard logical sense gr 
definition standard herbrand model model sense implies program model 
turns program semantics model ground herbrand interpretation atom new notion model equivalent standard old 
known van emden kowalski program set mp standard herbrand models closed set intersection herbrand model exists 
ground herbrand base atom model atom mp implies mp moore family atom mp thought closure atom atom herbrand model iff fixpoint mp observation firstly reported lassez maher 
side observation note general closure operator meet uniform 
fact consider fp pg fpg fqg atom clear mp mp fp qg whilst mp order theoretic generalization 
order theoretic approach notion model formalized naturally follows 
recall generalized hierarchy section set ground herbrand interpretations corresponds complete lattice hg ae generalized interpretation grounded ae 
program set ground herbrand models generalized closure operator mp uco ae 
interpretation generalized model ae fixpoint mp ae generalized herbrand model set gp generalized models defined gp fx mp ae ae worth noting order theoretic reconstruction need refer real logic programs 
think set programs mere set objects acting indices 
generalizing model theoretic semantics contrast standard herbrand models falaschi observe simple counterexample model intersection property hold longer notion nonground model recalled section 
implies model program respect set inclusion general exist 
course order theoretic construction counterexample shows general set generalized models gp closed glb 
falaschi point phenomenon easily explained noting set inclusion adequately reflect property nonground atoms representatives ground instances 
propose new partial order atom definition allows restore desired model intersection property 
definition falaschi definition atom 
ii 
falaschi note clearly iff di dj di dj dj di formulation definition gets clearer meaning 
fact says order compare interpretations look respective abstractions atom smaller di ae dj di dj original subset ordering considered 
falaschi number important consequences definition 
show atom complete lattice provide explicit characterization corresponding lub 
prove program glb set nonground models model obtaining nonground model shown coincide standard herbrand model 
important order prove results specific logic programming concepts tools heavily clauses substitutions instances herbrand models contrast generalized approach involves pure order theoretic notions specific logic programming concept 
order theoretic generalization 
characterization immediate observe ordering definition instance definition lifted partial order induced meet uniform closure deltae domain nonground interpretations atom 
results section generalized hierarchy hypothesis step abstraction meet uniform closure ae just allows lift complete order ae obtaining lifted complete lattice hc ae precisely order theoretic generalization corresponding result falaschi theorem 
noted general glb set models subset gp fx mp ae ae model theorem shows meet uniformity closure ae crucial property permits recover generalized model intersection property lifted complete order ae theorem ae uco gp moore family hc ae hc hae ae ae 
hg ae ae ae 
gp fx mp ae ae general uco hc hc ae delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta uco hc ae lifting ae ae uco hc ae ae additive uco hg ae generalized order theoretic approach 
proof 
fx gp equalities hold mp ae theorem mp ae corollary mp ae additivity mp ae gp mp mp ae mp uco ae section mp ae gp ae additivity ae corollary ae theorem ae shows gp closes proof 
consequence program gp complete lattice ae generalizes falaschi corollary ae generalized model gp scenario summarized 
assuming hypotheses able give generalization framework fact proved falaschi theorem model coincides herbrand model 
recall generalized approach ae stands subset ground herbrand interpretations program mp uco hg ae closure representing herbrand models set hp generalized herbrand models program just hp fz ae mp zg 
hp order theoretic counterpart herbrand model gp hp states equality generalized models 
analogously logic programming side straightforward note program grounding set generalized models gets set generalized herbrand models hp fg ae ae gp hypotheses required theorem correspond logic programming side observations grounding operator gr atom 
atom additive lower closure operator atom atom ground gr ground 
theorem ae ae implies ae program gp hp proof 
note hp ae 
equalities hold hp hp ae ae additivity ae corollary ae theorem ae gp theorem mp ae gp equality ae ae ae gp ae ae idempotency ae get ae ae gp hp gp ae hp equalities show hp gp mp ae mp ae ae gp ae ae idempotency ae mp ae gp hp ae hp ae gp show gp hp ae 
gp get gp ae ae gp ae turn ae gp ae 
equality hp ae gp ae hp hp get ae hp ae ae desired 
ii show ae ae hp hp ae ae hp hp get ae hp lower closure hp ae 
ae ae hypotheses theorem obtain ae ae ae ae ae hp worth noting possible slightly generalize hierarchy particular theorem 
fact step abstraction meet uniform closure ae uco consider arbitrary finite number abstractions additive functions 
possible composition additive functions clearly additive 
note considering mapping identity deal unique abstraction ae 
uniform closures domain refinements section show novel order theoretic notion uniformity finds relevant applications interpretation theory specifically area refinement operators domains far precision concerned 
domain refinements interpretation domain refinement intended operator takes input domain closure returns output enhanced domain precise domain systematically adding new information 
formal treatment domain refinements put forward fil successively sharpened giacobazzi ranzato generalizing known domain refinements reduced product disjunctive completion cousot cousot 
assume hc complete lattice plays role concrete domain 
recalled section lattice interpretations concrete domain isomorphic complete lattice uco upper closure operators recalled ffl ffl ffl gamma gamma zz gamma ffl ffl ffl zz domains gamma domain refinement defined operator uco uco lattice uco abstractions monotone reductive 
idempotency additional reasonable requirement ensuring refinement domain performed 
refinement lower closure operator complete lattice uco mapping uco properties domain refinements derived duality domains upper closure operators 
image coincides set refined domains uco fa uco ag ii set uco vi refinements complete lattice slight abuse notation symbol order closures iff uco uco iff set domains refined contained set refined analogously case domains complete ordering refinements interpreted relation precision precise iff details properties domain refinements refer giacobazzi ranzato 
example reduced product simplest probably familiar example domain refinement 
successfully applied works program analysis instance codish granger hermenegildo 
recalled section reduced product corresponds glb complete lattice upper closure operators 
terminology reduced product domains stems fact represented means standard cartesian product equivalent tuples objects identified reduced details cousot cousot 
example consider domains gamma abstractions complete lattice zz obvious meaning elements typically sign analysis integer variables 
easily seen isomorphic representation domain objects reduced product gamma domain sign 
observe sign new elements respect gamma obtained combining set intersection zz corresponding sets integers respectively gamma gamma 
reduction necessary identifying distinct pairs elements denoting empty set integers pairs gamma gamma gamma denote 
fixing arguments reduced product obviously gets refinement 
concrete domain uco fixed domain 
reduced product refinement respect lower closure operator ua uco 
inverting refinements fil motivated introduced notion inverse domain refinement 
refinement uco domain uco optimal basis exists domain uco uco implies clearly optimal basis exists domain unique 
refer existence optimal basis 
terms optimal basis exists domain having refinement simplicity notation consider reduced product binary operator 
gamma gamma zz sign ffl ffl ffl ffl ffl ffl ffl ffl ffl ffl ffl ffl ffl zz gamma gamma gamma gamma gamma gamma ffl ffl ffl ffl ffl zz gamma gamma gamma gamma domains sign class ik uco domains ik admits optimal basis mapping gamma ik uco providing optimal basis called inverse ik 
inverse gamma exist ik iff exists optimal basis domain ik 
intuition refined domain systematically reconstructed applying refinement simpler domain gamma 
roughly speaking gamma operator providing simplest domains input refinement 
notion domain refinement slightly generalized allowing possibility having domain definition refinement subset uco see giacobazzi ranzato details 
case inverse refinement uco exist subset ik take values gamma ik example kind partial refinement provided negative completion refinement cf 
fil giacobazzi ranzato 
concrete domain complete boolean algebra 
negative completion defined sublattice uco uco additive closures called disjunctive domains upgrades domain adding denotations lattice theoretic complements elements 
easy verify uco ag uco 
lifts disjunctive domain domain containing uco uco maps reduced product uco general belong uco cf 
giacobazzi ranzato turns monotone reductive idempotent refinement generalized framework giacobazzi ranzato 
general optimal bases exist negative completion provides meaningful example refinement invertible really significant class domains noted fil 
consider disjunctive domains sign depicted sign analysis integer variables obvious meanings additive closures zz obviously complete boolean algebra 
turns optimal basis sign exist 
fact sign sign common abstraction implies sign admit optimal basis example concrete domain complete boolean algebra sign enjoys important lattice theoretic properties means invertible significant class domains 
invertibility join uniformity attentive reader guessed turns join uniformity captures exactly concept invertible domain refinement 
recalling duality section notion join uniformity state immediate result prime importance stems striking connection notions came different questions 
theorem ik uco refinement uco uco invertible ik iff join uniform ik 
refinement uco uco invertible ik canonical representative definition domain ik 
uco exactly optimal basis 
gamma 
words canonical representative operator inverse 
notation section ik uco denotes set domain refinements invertible ik uco 
duality observations results section derive properties invertible refinements invertible refinements ik give rise complete lattice ik uco vi particular complete join dual moore family uco top bottom elements identity refinement full refinement respectively ii lattice invertible refinements dual atomic iii invertibility preserved composition 
property space refinements invertible fixed ik set fixpoints lower closure operator uco defined follows uco 
tf uco invertible 
operator transforms possibly noninvertible ik refinement uco weakest refinement respect order refinements explained section invertible ik precise 
see important example invertible domain refinement 
example disjunctive completion originally introduced cousot cousot prove merge paths data flow analyses expressed fixpoint form 
considered nielson approach interpretation domain theory applied program analysis cousot cousot analysis deutsch alias analysis jensen disjunctive strictness logic analysis logic program groundness dependencies fil ranzato 
disjunctive completion enhances domain little possible disjunctive additive closure 
evident domains practically useful lub precise possible 
general approach giacobazzi ranzato concrete domain disjunctive completion uco uco defined 
uco ag uco 
immediate observe lower closure correctly defines domain refinement 
concrete domain completely distributive disjunctive completion domain characterized various equivalent powerset constructions cousot cousot fil ranzato 
simple example sign abstraction zz disjunctive completion sign domain sign considered depicted contains concrete lub set union subset sign particular contains new object gamma denoting nonzero integers 
inverse disjunctive completion operation returns possible domain disjunctive completion disjunctive domain 
giacobazzi ranzato introduced notion disjunctive basis domain turns instance concept optimal basis allows define inverse disjunctive completion refinement 
giacobazzi ranzato theorems give results existence disjunctive basis read terminology follows dual algebraic completely distributive lattice invertible uco ii distributive invertible fa uco jaj hard verify optimal basis gamma sign sign domain sigma 
discussed natural think inverse domain refinement formalized operator simplification dual refinement 
intuitively domain simplification operator domain input returns domain extensive operator lattice interpretations 
refinements simplification operator monotonically transform domains perform simplifications 
sense refinements lower closures inverses generally upper closures 
see refinement uco possibly hypotheses invertible uco inverse operator gamma necessarily upper closure 
general invertible ik uco inverse gamma ik uco necessarily monotone 
fact prove general result join uniform functions just dual canonical representative operator definition 
proposition complete lattice monotone join uniform defined fy extensive idempotent 
proof 
obvious definition 
join uniformity fy fy proving idempotency 
general monotonicity inverse operator may fail 
case disjunctive completion shown example taken giacobazzi ranzato example 
example consider domains sign sigma introduced 
observe gamma gamma sign sigma shows inverse operator disjunctive completion refinement monotone antimonotone sigma incomparable abstractions zz 
proposition lower closure join uniform associated generalized inverse pair constitute general galois connection due lack monotonicity clearly monotone right adjoint sense notion inverting refinement correspond inversion right adjoint refinement 
hand known pervasive notion adjunction theoretical computer science existence adjunction considered weak form inversion see paradigmatic case weak inverse hoare logic cf 
hoare 
focus inversion refinement sense adjunctions 
proposition complete lattice monotone join uniform operator generalized inverse 
statements equivalent additive ii monotone iii proof 
prove implications 
ii monotonicity 
additivity 
fz fu 
ii iii monotone constitute galois connection right adjoint 
iii adjunction right adjoint function exists function additive 
result shows lower closure admits right adjoint upper closure domain refinement admits right adjoint simplification operator 
conversely duality left adjoint simplification operator exists refinement 
proposition complete lattice 
ae admits right adjoint ae ae uco 
ii ae uco admits left adjoint ae ae 
proof 
prove ii follows duality 
recalled section adjunction complete lattice left adjoint additive right adjoint additive 
ae additive lower closure forms adjunction ae prove ae upper closure 
monotonicity follows adjunction 
follows ae get ae turn idempotency 
section get ae ae ae 
prove ae ae ae 
definition ae ae fy ae ae fy ae ae monotonicity idempotency additivity ae obtain ae ae fy ae xg fae ae xg ae get ae ae ae ae obtain idempotency 
result domain refinement uco requiring admits inverse uco addition simplification equivalent requiring additive 
additivity quite stronger requirement join uniformity corresponds invertibility space uco 
instance reduced product disjunctive completion relevant examples refinements additive join uniform invertible certain hypotheses concrete domain 
reduced product refinement paradigmatic case 
easy observe reduced product additive uco completely meet distributive complete heyting algebra 
condition equivalent weaker finite distributivity uco cf 
holds concrete domain complete chain cf 

obviously complete chain concrete domain reasonable hypothesis semantics program analysis 
hand general disjunctive completion refinement follows example proposition 
reordering domains seen invertible domain refinement inverse constitute general adjunction 
asymmetry overcome considering lifted complete order induced lattice abstractions invertible join uniform refinement 
fact dually seen logic program semantics join uniformity additivity respect lifted complete order 
way refinement possibly conditions concrete domain invertible uco proposition gamma particular inverse gamma simplification operator lifted order 
stated consequence theorem proposition proposition 
ffl ffl ffl ffl ffl ffl gamma zz gamma gamma gamma gamma gamma gamma domain corollary complete lattice uco refinement invertible uco 
uco uco gamma adjunction 
additive reduced product refinement example disjunctive completion refinement example join uniform certain weak hypotheses 
examples show meaning lifted order domains cases 
recall meet semilattice bottom exists unique element 
complete lattice exists fy called details see birkhoff 
example giacobazzi proved meet continuous lattice continuous closure uco fy uco uco lattice 
particular uco coincides 
equivalence closure operators domains result provided basis defining operation domain complementation interpretation 
complementation operation starting domains uco gives result domain reduced product 
exists denoted called complement see details 
complement uco defined meet continuous lattice continuous closure arbitrary order get complementation inverse reduced product refinement space uco assume restrictive hypothesis concrete domain satisfies acc 
condition fact ensures exists pair uco closure respectively continuous 
notice may thought meaningful abstraction actual concrete domain case acc severe requirement domain program analysis 
easy observe complementation inverse reduced product refinement 
fact uco refinement ua uco join uniform uco uco aux satisfies acc 
turns inverse ua gamma ua uco uco just complement corollary reduced product complementation form adjunction relatively lifted complete order domains gamma ua simplification operator upper closure reordered complete lattice domains 
ua lifted order domains induced ua allows give correct interpretation inverse gamma ua consider instance domains considered domain 
turns gamma ua monotone respect standard ordering relates domains terms relative precision 
fact whilst gamma ua gamma complete lattice meet continuous chain cf 
gierz 
comparable gamma ua respect gamma ua monotone respect lifted order ua optimal bases gamma ua gamma ua comparable gamma ua ua gamma ua 
relationship reflects relative power domain gamma ua gamma respect gamma ua composed resulting precise domain 
observed example lifted complete order domains reflects precisely relative precision domains respect invertible refinement operator precise lifted order invertible refinement precise standard sense precise standard sense 
example analogously example reduced product complementation disjunctive completion refinement inverse disjunctive basis cf 
example form adjunction respect lifted order 
dual algebraic completely distributive lattice invertible uco cf 
example get adjunction 
uco uco gamma 
inverse gamma interpreted simplification operator respect domains sign considered example turns gamma sign gamma fact gamma sign refined disjunctive completion provides concrete domain gamma 
introduced order theoretic notion uniform closure operator complete lattices shown right key property generalizing standard hierarchy declarative semantics logic programming develop general theory domain refinement simplification interpretation 
results shown unexpected relationship apparently different fields application interpretation 
hand meet uniformity interpretation provide right framework reordering semantic interpretations logic programs keeping account relative precision models program specified different levels abstraction hierarchy semantics 
hand dual property join uniformity applied domain refinements yields precise characterization concept invertibility refinement proved refinements inverses constitute adjunction relatively reordered space domains 
reordered spaces lifted partial order induced uniformity involved closures 
notion uniformity fruitfully exploited areas application interpretation hierarchies inductive definitions specifying non necessarily logic program semantics type systems 
inductive definitions fundamental mathematical logic theoretical computer science provide rule presentations inductively defined sets equivalently definition sets generated closure conditions 
semantics case set execution traces transition system general rulebased specification methods semantics plotkin structural operational semantics sos 
shown cousot cousot cousot hierarchies semantics type systems specified inductive definitions related interpretation 
believe order theoretic reconstruction model theoretic semantics logic programming generalized considering logic programs generic inductive definitions 
relationship logic programs inductive definitions known logic programs finite sets untyped horn clauses inductive definitions may possibly infinite sets possibly typed clauses rules 
account analogy bol groote 
observed section put constraint structure programs 
particular possibly infinite sets possibly typed clauses arbitrary sets rules 
essential point construction space models program closure mp just case models inductive definitions cf 
aczel 
view approach model theoretic reconstruction semantics logic programs falaschi fully generalized hierarchies inductive definitions applied general rule presentations semantics type systems related interpretation 
acknowledgments begun authors visiting lix laboratoire informatique ecole polytechnique paris 
lix particular radhia cousot kind hospitality 
roberto giacobazzi partly supported eec human capital mobility individual semantic definitions interpretation constraint reasoning 

aczel 
inductive definitions 
handbook mathematical logic barwise ed 
north holland amsterdam 

equational closure operator forbidden lattices 
math 

amato levi 
properties lattice observables logic programming 
proceedings italian portuguese spanish joint conference declarative programming 

apt 
logic programming 
handbook theoretical computer science van leeuwen ed 
vol 
formal models semantics 
elsevier amsterdam mit press cambridge mass 
giacobazzi levi 
general framework semantics bottom interpretation logic programs 
acm trans 
program 
lang 
syst 

birkhoff 
lattice theory 
ams colloquium publication rd edition 
ams providence bol groote 
meaning negative premises transition system specification 
acm 

basic transformation operations logic programs preserve computed answer substitutions 
logic program 

levi martelli 
semantics approach theory applications 
logic program 

levi meo 
compositional semantics logic programs 
theor 
comput 
sci 

codish dams 
bottom interpretation logic programs 
theor 
comput 
sci 

codish bruynooghe garc ia de la banda hermenegildo 
improving interpretations combining domains 
acm trans 
program 
lang 
syst 

levi 
algebraic theory observables 
proceedings international logic programming symposium ilps bruynooghe ed 
mit press cambridge mass 
levi meo 
compositionality sld derivations abstractions 
proceedings international symposium logic programming ilps lloyd ed 
mit press cambridge mass fil giacobazzi palamidessi ranzato 
complementation interpretation 
acm trans 
program 
lang 
syst 

le charlier van hentenryck 
combinations domains logic programming 
conference record st acm symposium principles programming languages popl 
acm press new york 
cousot 
interpretation 
acm comp 
surv 

cousot 
constructive design hierarchy semantics transition system interpretation 
proceedings th international symposium mathematical foundations programming semantics mfps brookes mislove eds 
electronic notes theoretical computer science vol 

elsevier amsterdam 
cousot 
types interpretations 
conference record th acm symposium principles programming languages popl 
acm press new york 
cousot cousot 
interpretation unified lattice model static analysis programs construction approximation fixpoints 
conference record th acm symposium principles programming languages popl 
acm press new york 
cousot cousot 
systematic design program analysis frameworks 
conference record th acm symposium principles programming languages popl 
acm press new york 
cousot cousot 
interpretation application logic programs 
logic program 

cousot cousot 
inductive definitions semantics interpretation 
conference record th acm symposium principles programming languages popl 
acm press new york 
cousot cousot 
higher order interpretation application analysis generalizing strictness termination projection analysis functional languages 
proceedings ieee international conference computer languages iccl 
ieee computer society press los alamitos calif 
cousot cousot 
compositional inductive semantic definitions fixpoint equational constraint closure condition rule game theoretic form 
proceedings th international conference computer aided verification cav wolper ed 
lecture notes computer science vol 

springer verlag berlin 
deutsch 
operational models programming languages representations relations regular languages application static determination dynamic aliasing properties data 
ph thesis university paris vi paris france 

closure operators complete lattice 

math 

van emden kowalski 
semantics predicate logic programming language 
acm 
fages gori 
hierarchy semantics normal constraint logic programs 
proceedings th international conference algebraic logic programming alp hanus rodr iguez artalejo eds 
lecture notes computer science 
springer verlag berlin 
falaschi levi martelli palamidessi 
declarative modeling operational behavior logic languages 
theor 
comput 
sci 

falaschi levi martelli palamidessi 
model theoretic reconstruction operational semantics logic programs 
inf 
comput 

fil giacobazzi ranzato 
unifying view domain design 
acm comput 
surv 

fil ranzato 
powerset operator interpretations 
appear theor 
comput 
sci giacobazzi 
optimal collecting semantics analysis hierarchy logic program semantics 
proceedings th international symposium theoretical aspects computer science stacs puech ed 
lecture notes computer science vol 

springer verlag berlin 
giacobazzi palamidessi ranzato 
weak relative pseudo complements closure operators 
algebra universalis 
giacobazzi ranzato 
functional dependencies moore set completions interpretations semantics 
proceedings international symposium logic programming ilps lloyd ed 
mit press cambridge mass 
giacobazzi ranzato 
complementing logic program semantics 
proceedings th international conference algebraic logic programming alp hanus rodr iguez artalejo eds 
lecture notes computer science 
springer verlag berlin 
giacobazzi ranzato 
refining compressing domains 
proceedings th international colloquium automata languages programming icalp degano gorrieri marchetti spaccamela eds 
lecture notes computer science vol 

springer verlag berlin 
giacobazzi ranzato 
optimal domains disjunctive interpretation 
appear sci 
comput 
program 
gierz hofmann keimel lawson mislove scott 
compendium continuous lattices 
springer verlag berlin 
granger 
combinations semantic analyses 
proceedings nd french soviet workshop methods compilation program construction ed 
inria rocquencourt france 
hoare hayes jifeng morgan roscoe sanders sorensen spivey 
laws programming 
comm 
acm 
jensen 
disjunctive program analysis algebraic data types 
acm trans 
program 
lang 
syst 

lassez maher 
closures fairness semantics programming logic 
theor 
comput 
sci 


results closure operators partially ordered sets 
portugal 
math 


complete congruences complete lattices 
portugal 
math 

hermenegildo 
combined determination sharing freeness program variables interpretation 
proceedings th international conference logic programming iclp furukawa ed 
mit press cambridge mass 
nielson 
interpretation domain theory 
ph thesis cst university edinburgh edinburgh scotland 
plotkin 
structural approach operational semantics 
tech 
rep daimi fn computer science dept aarhus university aarhus denmark 

interpretation scheme groundness freeness sharing analysis logic programs 
proceedings th conference foundations software technology theoretical computer science fst tcs ed 
lecture notes computer science vol 

springer verlag berlin 
ward 
closure operators lattice 
ann 
math 

yi harrison 
automatic generation management interprocedural program analyses 
conference record th acm symposium principles programming languages popl 
acm press new york 
