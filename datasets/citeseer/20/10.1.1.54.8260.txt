logic approach description languages mira balaban dept mathematics computer science ben gurion university beer israel mira technical report fc frame logic logic approach suggested underlying framework description languages :10.1.1.115.3586
logic shown provide full account description languages losing direct semantics descriptive nature 
support desirable features high order role fillers collective entities intensions roles class objects ary relationships 
semantics order 
logic description language description constructs built concepts roles terminological operators definable 
discussion desirable features descriptions possible single uniform framework coherently integrates logic programming deductive object oriented database technology 
typical descriptive operators defined language yielding flexible description language operators built 
keywords object oriented representation logic description languages 
description languages dls collective name knowledge representation formalisms concentrate management essential descriptive vocabulary 
rests observation natural ontology providing information domain requires ability define organize intensional entities stand concepts roles domain 
dls concentrate providing means ffl definition concepts roles 
ffl organizing concepts roles structures called taxonomies analytical inter relationships 
ffl creating analytic descriptions concepts roles 
ffl answering queries analyzing analytic definitions concepts roles regardless temporary population knowledge base 
main thrust description languages logics dls name concentrate descriptional issues constructs faithfully reflect intended ontologies processes 
dls support built terminological operators building complex descriptions meanings operators directly defined terms intended entities 
various dls vary terminological operators vocabulary amount separation terminological contingent components strict commitment inference algorithms defined direct semantics 
dls insist terminological operators direct semantics 
status descriptions emphasis direct semantics major distinction dls logics ai 
dls unique provisions complex descriptions 
claimed possible embeddings dls classical logic lose direct semantics complex descriptions bare bone dls 
dls embedded classical logic resulting classical language dl descriptions translated collections independent assertions 
main trends dls today 
small languages supported sound complete tractable inference algorithms 

rich languages supported possibly incomplete inferences 
general growing agreement dls strengthened meet faithfully users requirements 
suggest complete basic assumptions 
requirements expectations see ffl wider representational inferential mechanisms non taxonomic relations connectivity ary relations part relations higher order constructs collective entities default assumptions subsumption intensions views cyclic terminological definitions self 
ffl flexible definitions 
ffl uniform proof theory 
ffl integration logic programming object oriented systems functional programming database technology 
ffl incremental development implementations 
logic logic designed reasoning object oriented domains 
assumes ontology objects form hierarchy inter related membership relation 
information objects methods attributes attached objects types methods 
logic provides means typing type checking supports reasoning inheritance types methods 
syntax allows high order constructs quantification methods semantics carefully kept order quantification restricted methods 
sound complete proof theory :10.1.1.115.3586
suggest logic approach basis rich description language termed dfl description logic language 
advantage full fledged logic integrates notions description reasoning object orientation logic programming serve unifying formalism current description languages extend expressivity listed directions 
particular dfl term constructors directly built descriptive intensional semantics uniform proof theory able coherently integrate logic programming object oriented deductive databases 
term forming operators dls built semantics axiomatized language yielding flexible dl 
specialized dls inference algorithms algorithms normalization descriptions subsumption classification integrated general deductive machinery processing dfl knowledge bases 
dls algorithms viewed special purpose inference component built general 
axiomatization term forming operators description logic language markedly different embedding predicate calculus dfl typical dl ontology 
operators components language direct natural intended meaning apart possible minor syntactical differences translation algorithm 
view amounts building high level conceptualizations top lower level provides certain primitives building blocks 
main point low high level representations semantics 
theme logic description language management analytic definitions concepts roles major focus potential general description language core ontology objects hierarchy associated methods descriptive capabilities include object constructors support complex descriptions 
rest shortly introduce dls section logic section 
section discuss potential logic basis description logic dfl argue standard dls form subset logic 
section discusses way logic account desirable extensions dls section concentrates issues integration terminology logic knowledge base 
section proofs postponed appendix 
description languages description languages form kl school concentrates languages provide constructs management analytic domain terminology 
dls emphasize importance direct defined semantics limited tractable inferential service 
dls assume typical domain terminology built concepts roles stand subsets binary relations domain individuals respectively 
concepts assumed form taxonomy partially ordered structure derived lattice subsets 
accordingly alphabet dl includes unlimited supply symbols concepts roles individuals small set term forming operator symbols 
descriptive terms formed applying term forming operators concept role symbols 
example concept frozen dinner ready evening meal courses frozen described concept term ready meal eating time evening course food form frozen form frozen compose course taste term ready meal concept symbol intended represent concept ready meal eating time role symbol intended represent role binary relation eating time eating time evening concept term represents concept elements related eating time element evening concept form frozen concept term represents concept elements related form role elements frozen concept compose course taste role term represents composition course taste roles 
terminology formed associating concept role symbols definitions descriptive terms 
example concept term define defined concept symbol frozen dinner 
defined role symbol course taste defined composition course taste roles frozen dinner course taste compose course taste dls concentrate defined concepts include limited capabilities forming non atomic role terms 
currently standard semantics dls set theoretic concept terms interpreted denoting sets domain elements role terms denote binary relations interpretation domain definitions interpreted set equality 
typical dl knowledge base addition terminological component component describes knowledge individual objects 
example dinner frozen dinner asserts individual belongs frozen dinner concept 
individuals component usually referred assertional kb box manages knowledge individual concrete objects 
terminological component concept role definitions usually referred terminological kb box 
addition various systems allow formulae restricted rules 
example frozen dinner 
meal rule implies individuals belong frozen dinner concept belong meal concept 
central management service provided description kr system automatic classification concepts roles proper position taxonomy descriptions 
taxonomy answering queries inter relationships concepts descriptions properties concepts individuals membership individuals concepts 
conventional method classify find proper position taxonomy description appears query 
answer query results observing possible subsumption relationships concepts descriptions appear query relative position taxonomy 
inferencing dls essentially different standard inference ai logic databases 
main point diversion dl systems consider definitions vocabulary temporary population base 
example query children doctors 
understood essential query query understood query subsumed child doctor query known children members doctor concept 
query demonstrates typical database ai approaches operate closed world assumption cwa 
contrast dls understood operating open world assumption owa momentary population knowledge base provide sufficient evidence essential definitions terminology 
dls unique developing knowledge bases essential domain vocabularies 
determination subsumption concepts roles descriptions main inferential task inferential operations reduced subsumption 
major efforts devoted study subsumption problem context different terminologies study subsumption classification algorithms existing systems development subsumption algorithms 
intensive study subsumption keeping subsumption sound complete tractable feasible criteria relaxed 
order keep subsumption problem tractable set term forming operators severely limited 
lists known complexity results subsumption subsumption algorithms different systems 
classic formal defined system limited expressivity tractable complete inference machinery 
growing experience existing systems shows idea small tractable complete dl component integrated larger knowledge base system suggested realistic mainly users restricted dl knowledge base ad hoc methods jeopardize soundness system 
loom system takes contrary approach classic emphasizes strong expressivity language expense completeness 
back system formal defined system expressive classic incomplete subsumption algorithm 
reports experiments approximating completeness expressive dl 
presentations emphasize need extending expressive power inferential capabilities dl systems 
important point integration dl systems existing systems conventional data bases 
main point experience shows conventional approach operates cwa definitional approach operates owa needed may ideally complement 
ongoing effort standardize description languages reported 
formal definition description languages recall terminology set definitions form defined concept role symbol concept role description formal definition dls distinguishes concept role symbols defined appear left side definition terminology 
defined symbols called concept role name symbols rest primitive concept role symbols 
concept role symbols consist primitive name concept role symbols 
formulae dls kinds 
definitions parent person child parent person child 
rules individual student eats junk food student eat junk food 
isa assertions john mary child mary john child example typical dl adopt dl set concept role forming operators vary 
syntax symbols language primitive concept symbols concept name symbols primitive role symbols role name symbols object symbols special concept symbols top bottom finite set concept role forming operators 
terms terms concept terms role terms 
concept role terms concept role symbols syntactically legal applications concept role forming operator terms respectively 
concept term kind denoted role term kind denoted formulae description languages set formulae differ just sets allowed operators 
denote typical dl operators set lp semantics meaning formulae set theoretic semantics 
interpretation pair domain interpretation function concept symbols assigned subsets role symbols assigned binary relations object symbols assigned elements top bottom empty set 
interpretation function augmented concept role terms building fixed meaning operator example role inverse meaning concept terms defined follows role inverse satisfaction formulae interpretation defined interpreting set equality set inclusion membership interpretation model set formulae satisfies formulae 
formula fl logically implied terminology fl satisfied model terminology 
different notations dls literature 
primitive definitions denoted 
membership denoted denoting subsumption 
formulation follows notation 
role symbols assigned total functions 
interpretation role symbols somewhat closer logic view methods 
view relations set valued functions simplifies presentation 
definitions meaning operators role symbol domain element denote set domain elements related set concept term coherent respect terminology exists model 
main relationship terms subsumption relation term subsumed term terminology model 
equivalence terms defined way subsumption 
central role subsumption relationship concept terms plays management dl bases discussed 
proposition iff proof immediate definition subsumption semantics 
logic logic domain consists objects methods 
addition object constructors functions defined objects partial ordering objects stands subset relationship binary relation objects stands membership relationship 
condition set guarantees membership object extended super class object 
underlying intensional approach assumes essence object lies behavior 
objects just wish talk mary mary car cars ben gurion university employees role mother 
particular priori distinction individual class objects object depending behavior relationship objects 
understood subset understood member subscript omitted simplicity 
approach particularly powerful collective entity viewed class objects individual object member class viewed object 
advantage singleton identified member 
example chains relations mary student course distinction individuals classes concepts distinctions enforced imposing sorts 
methods partial functions objects 
single valued scalar set valued methods 
methods describe behavior objects provide information objects 
example spouse children information bank account captured methods 
children method example method takes additional arguments children object object application method extra argument context 
method spouse take additional arguments function argument called attribute 
name age address attributes 
methods describe actions buy meet treat typically take additional arguments parameters actions 
ary functions 
methods classified inheritable non inheritable 
example color inheritable attribute bear non inheritable attribute faculty children non inheritable set valued method mary various specializations mary need inherit value children mary 
inference machinery uses distinction inheritable non inheritable methods propagating values inheritable methods hierarchy long overwriting caused 
inheritance extends relationship blocked step 
way mary student inherits registered college attributevalue pair specialization inherit property inherit committee size property inheritance extend mary 
secret logic high methods methods types reified object names quantification carried just object names 
section shortly summarizes main ideas semantics logic 
observation logic ontology description language ontology 
argumentation ontology description language consists concepts roles individuals 
logic ontology objects methods 
objects capture concepts individuals 
difference appears logic descriptions formed methods traditional dls descriptions formed roles 
table summarizes correspondence dls roles logic methods dls logic ary feature single valued method ary role set valued method binary feature single valued attribute binary role set valued attribute argue replacing methods roles provides flexibility expressivity losing descriptive character 
methods finer distinctions different kinds attribute features non attribute features attribute roles non attribute roles clearly ontology easy capture syntactical representation see 
methods ontology naturally integrated conventional representational constructs plain functions relations 
rest dl terminology attribute feature unary single valued method attribute role unary set valued method non attribute feature ary method non attribute role ary set valued method feature single valued method arity role set valued method arity 
term method refers features roles 
logic syntax terms logic expressions denote objects domain 
example mary polygon sides polygon angles cars employees bgu id terms denoting objects 
id terms polygon sides polygon angles may denote distinct intensional objects extension set triangles 
id terms employees cars object constructors denote total functions domain map objects objects 
variables appear id terms classical order logic capital letters denote variables 
atomic formulae logic called molecules kinds molecules data molecules signature molecules 

molecules map partial ordering membership relation example molecules meaning mary woman object denoted mary related denoted woman 
woman person object denoted woman related denoted person 
polygon sides polygon subset relationship denotations id terms 

data molecules assertions values methods features roles get objects 
example data molecules meaning explanation mary husband fred fred mary husband 
husband attribute feature 
bear color ffl 
grey bears grey 
color inheritable attribute feature 
mary teach 
graph mary teaches aut 
graph 
teach attribute role 
bear color north ffl 
white northern bears white 
color inheritable non attribute feature 
son children 
pat child son children non attribute role 

signature molecules assertions types features roles 
example husband male children person assumed universally quantified assert values husband feature males values children role type person 
rule female married husband assumed universally quantified asserts feature husband applies object denoted member female married class married female logic includes regular atomic formulae order language 
formulae constructed connectives quantifiers usual order manner 
examples taken syntax somewhat relaxed simplified :10.1.1.115.3586
faculty boss faculty manager age highestdegree degree papers article highestdegree ffl 
phd statement declares typing information signatures attribute features boss age highestdegree faculty attribute role papers faculty 
value inheritable attribute feature highestdegree faculty specified phd value non inheritable attribute feature faculty specified 

car ear car car diesel ear statement defines family classes parameterized ear 
class contains diesel cars 
rule implication molecule 

polymorphic typing list rest list length int append list list 
knowledge base browsing attributes 
faculty person attributes 
faculty 
person rules define member faculty object new object set valued attribute attributes value object set attributes person value 

concepts similarity analogy pig person similar pig nose legs smell example borrowed mary smell mary pig nose smell pig smell 
rule states mary similar pig nose smell pig smell value mary smell prolog lists notation 
rule generalized similarity follows attr attr member attr 

methods dependency tall person height subsection summarizes semantics logic 
essential rest 
logic semantics methods reified objects domain semantic structure 
reification accomplished associating object feature infinity features arity role infinity inheritable feature infinity inheritable role infinity type feature infinity type role infinity 
think object association array features array roles array inheritable features array inheritable roles array feature types array types features roles types referenced indirectly object names specified arity 
secret high logic features roles types reified object names quantification carried just object names 
association functions 
ffl 
ffl 
assign object mentioned arrays features roles inheritable features inheritable roles types features types roles respectively 
denotes element superscript corresponds number additional arguments feature role takes 
semantic structure logic language tuple hu 
ffl 
ffl 
partially ordered domain membership relation described previous section 
interpretation mapping object constructors standard function mapping 
mappings associations domain objects features roles types explained 
molecules assertions subset relationships membership relationships objects denoted id terms molecule 
data molecules assertions value feature role object 
data molecule non inheritable feature arg argn val arg argn val id terms 
semantic structure variable assignment id terms arg argn val mapped objects partially ordered domain 
id term mapped non inheritable feature arguments associated object symbol mapped 

term true 
defined arg arg equals val example mary husband fred means non inheritable feature attribute ary method associated husband value fred mary meaning data molecules non inheritable roles assertions role values similar arg argn 
fval val holds 
defined arg arg set value includes set val val meaning inheritable data molecules defined similarly ffl 
ffl 
mappings 
inheritable data molecules select preferred canonical model logic program 
rational preference criterion inheritable features roles preferably propagate hierarchy interpretation objects values undefined 
propagation blocked relation single step inheritance apply 
signature molecules assign types features roles 
signature molecule feature arg argn val val serves typing expression kinds applications application non inheritable feature objects members applications inheritable feature objects subclasses molecule provides typing feature data molecules 
arg arg val arg arg hold 
arg arg ffl 
val arg arg hold molecules correctly typed signature val val signature molecules roles account typing non inheritable inheritable data molecules roles similar 
type correctness conditions enforced logic programs requires feature role data molecule correctly typed signature molecules serve typing expressions 
example son children person male note typing expression typed typing expression see gender enforces typing 
signature expression restricts values non inheritable role associated children take 
says objects members son values members related person male formal expression restriction 
children person 
children male semantic structure variable assignment 
non inheritable feature associated correctly typed signature molecule people group integer son people group integer semantic structure variable assignment 
value inheritable feature associated objects subclasses members gender potential logic general description language dfl section observed logic ontology typical dl ontology 
section observe logic languages show standard dl natural subsets languages 
observation implies potential dfl provide uniform roof specialized dls 
consider standard constructs description languages observe constructs analogous constructs logic constructs missing logic constructs different analogous constructs logic 
explore logic account terminological operators 
particular show expected subsumption relationships result intended meaning operators preserved 
formally compare standard set theoretic semantics dls object oriented semantics logic 
show dl property lost consider dl expressions formulae logic id terms 
section logic natural dl ontology dl constructs exist added logic dl constructs directly built logic semantics alternatively axiomatized lost switch dl set theoretic semantics conventional object oriented semantics 
logic provide basis development general dl termed dfl 
description oriented view logic objects logic ontology counterpart concepts dl ontology 
partial ordering stands concept subsumption binary relation stands membership object concept 
objects split disjoint sets concepts classes objects individuals separation enforced sorted version logic language 
advantage overloading object notion object serve depending context individual concept 
objects related interpreted concepts objects related interpreted object element second taken concept 
uniformity enables account collective entities higher order role fillers 
methods logic ontology counterpart roles dl ontology 
argued replacing methods functions roles binary relations advantageous leads finer characterization different kinds methods naturally account ary roles action roles take additional arguments supports distinction roles plain relations 
turning consider expressions logic vs expressions dls see major differences 
meaning object constructors built semantics logic 
order standard terminological operators axiomatized built logic semantics 

methods functions binary relations roles specifications take form asserting value object possibly additional arguments specifying membership pair role 

relationships methods equality implication built logic semantics 
specification relationships unfolded relationships values methods take objects 
difference points essential dl construct missing logic 
description logic dfl equality implication roles features built semantics objects equality 
second point difference just cosmetic advantage methods roles discussed 
semantics standard terminological operators taken care dfl 
decision favor implementing terminological operators logic semantics done operator direct meaning logic ontology 
example ffl terminological operator greatest lower bound glb operator 
ffl operator type restriction method 
ffl operators cardinality restrictions methods decision direct embedding terminological operators logic semantics carefully considered available pool terminological operators current dls standard quite large 
preferable implement just small number primary operators take definable 
way logic kept stable need changed little change set terminological operators 
approach significantly different current dl convention dl terminological operators built semantics 
particular approach lead uniform representation dls provide basis comparing different dls redefining dls prospect dfl 
subsection show logic account typical terminological operators observe operators axiomatized alternatively implemented dl description logic object specification 
note logic general framework dls markedly different embedding dls order logic fol dl construct direct meaning fol 
logic deliberately decide constructs directly embedded semantics specified axiomatization 
terminological operators logic consider standard terminological operators set theoretic meaning 
operator described terms logic semantics axiomatized 
note operators built directly semantics desirable direct meaning logic ontology 
variables capitalized specified assumed universally quantified 
object constructor denotes glb operator 
axiomatized follows cn note object constructor changing arity regular conjunction connective 
alternative axiomatization rules cn cn changing arity supported hilog enhancement logic 
extension cn objects related characterized intersection extensions follows cn exists concept forming operator exists selects objects set valued role defined 
built meaning exists dl semantic structure exists logic enables fine distinctions possible meanings exists select objects role defined alternatively select objects role applicable 
axiomatization defined meaning exists rffl 
fg rules exists rffl 
fg exists rffl 
fg note axiomatization exists explicitly require existence value object defined value empty set 
definition exactly accounts conventional meaning exists require existence value object follows exists rffl 
fdg prefer definition definition see 
axiomatization applicable meaning exists rules exists exists operator selects objects values set valued role restricted class 
logic terms selects objects satisfy typing restriction note definition finer set theoretic meaning holds 
example table child doctor get intended meaning terminology table child doctor holds logic definition contrary requires role applicable subclass restricts values members unreasonable typing table child doctor table child doctor holds model 
axiomatization rules equivalence results mandatory inheritance types logic 
operator axiomatized signature molecules follows rffl 
fc 
subsumption relationships terminological terms result fixed meaning operators temporary population knowledge base extend logic formulation 
example dl exists exists hold role term terminology 
logic cardinality restriction values role rffl 
fc rffl 
fc assuming defined meaning exists alternatively applicable meaning typing exists exists hold model 
course meaning operators built semantics dfl formulae tautologies dfl 
assuming applicable meaning exists exists holds model inheritance signatures mandatory holds model subsumption dfl section 
inheritance dls result fixed meaning operators extend logic formulation 
example dls holds semantic structure exists element individuals inherit properties concepts belong 
analogous situation logic translation arises holds semantic structure satisfies axiom 
rffl 
fcg holds semantics non monotonic inheritance suggested :10.1.1.115.3586
fcg holds holds rffl 
fcg holds 
role forming operators role inverse identity compose object constructors 
example role method oriented approach logic rn method defined applicable gets values common 
axiomatization defined view rn 
fc 
fc rn ffl 
fc ffl 
fc note object constructor changing arity concept constructor role constructor 
line logic view roles methods objects 
methods equality implication built dfl methods implication forms partial ordering language includes methods analogue 
case operator role constructor denotes glb operation ordering axiomatization similar operator replaced methods ordering operator 
inverse inverse 
fc 
fc inverse ffl 
fc rffl 
fc having embedded concept role forming operators logic role concept description written dl 
example classic definition student drives sports cars italian makers drives cars introduced terminology driver exists erson person maker italian student erson assume hierarchy component includes car car vehicle typing component includes applicable meaning exists subsumption relationships captured operator hold terminology driver driver person replacing standard set theoretic semantics oo semantics logic section show set theoretic semantics dls replaced oo semantics logic lost logical implication preserved 
considering terminological operators 
define dls notational variants sublanguages logic show concept role forming operators allowed dl logic view preserves logical implication including subsumption 
characterize correspondence relationship logic theories dls 
demonstrate axiomatizations provided section operators correspond dls operators 
simplicity ignore type component logic 
achieved assuming formulae hold semantic structures consider ind top top top assumption guarantees methods applications arise logic variant dl typed 
example typical dl adopt dl set concept role forming operators vary 
syntax semantics dl 
recall typical dl operators set denoted lp logic language corresponds dl lp denoted fl sorted logic language sorts primitive concepts concept names concepts primitive roles role names roles individuals 
sort top bottom primitive concept 
set id symbols includes concept role object symbols lp appropriately sorted 
set object constructors appropriately sorted 
variables sorted 
formulae fl notational variants lp formulae denoted fl superscript 
syntactical translation needed methods equality built semantics logic membership role replaced assertion method value 
differences taken care lp subset logic 
formulae fl correspondence formulae lp defined table 
fl lp fl fl fl ind rn 
fy 
fy ind 
fy 

fy 
fo subscribed quantifier ind quantifies sort individuals 
start considering languages dl concept role forming operators fl simpler intuitive translation obtained formula replaced fl formula definition top bottom 
sort individual sort concept ind concept interpretation fl interpretation say correspond formula fl fl iff fl fl corresponding interpretations denote fl denote dl interpretations correspondence symmetric relation denoted fl dl lemma interpretation exists corresponding fl fl interpretation vice versa 
proof result somewhat unexpected semantical assumptions dls stronger logic 
result relies limited assertional power dls 
obtained proving auxiliary lemma provides sufficient conditions interpretations correspondence showing interpretations satisfy conditions exist 
auxiliary lemma proof appear appendix 
theorem fl preserve logical implication 
set formulae formula fl fl iff fl fl fl proof assume 
fl fl implies fl fl fl implies fl corresponds fl direction proved similarly 
definition theory fl corresponds lp set formulae formula fl lp fl iff fl fl fl corollary corresponds corollary concept terms lp fl theory corresponds lp holds terminology iff fl fl fl theorem fand role tp 
cn cn 
fo 

fo rn 
fo 
fo specified variables start upper case letter universally quantified 
tp corresponds lp proof proof similar proof theorem 
lemma analogous lemma lemma lp interpretation exists fl fl interpretation lp formula fl fl iff fl fl tp proof lemma auxiliary lemma analogous lemma proved induction number operators terms starting increasing steps operators 
proof tedious repeated 
logic vehicle extending expressivity description languages section investigate object oriented intensional higher ordered nature logic extend expressive power standard description languages provide common ground integration description languages general knowledge representation systems 
particular show logic description language account desired features dls problematic standard account dls 
high order roles operator forming operators high order roles hold concepts 
set theoretic semantics means binary relations set subsets domain 
standard dls allow high order roles 
need roles frequently pointed 
example suggests high order roles parameterized regular roles 
roles ae sr ae abbreviation exists sr abbreviation subject restriction denote binary relations concepts 
capture relationships person lives place person place ae lives lives apartment person person apartment sr lives note ae sr act role forming operators high order roles 
logic high order roles form extension exception rest language require special treatment 
ae sr defined non inheritable roles follows ae 
fc 
fy sr 
fc 
fy examples asserted follows person ae live 
person sr live 
roles discussed subsection collective entities high order 
operator forming operators trend parameterization constructs constructs 
example woods suggests capture concepts student takes math course associating role take course tag ma student ma take course math course denotes intended subconcept student 
essentially amounts concept forming operator ma take course ma take course student math course set theoretic meaning student math course take course sense build operators ae sr semantics similar operators status 
ma operator forming operator ma family concept forming operators parameterized role 
standard set theoretic approach dls set operators small fixed operator meaning built semantics parameterized family operators allowed 
logic high provided hilog enhancement ma captured family object constructors parameterized ma selects greatest subconcept related member ma defined follows ma rffl 
fy definition object denoted id term ma take course student math course stands intended concept 
similarly cardinality operators upgraded family concept forming constructors definition collective entities collective entities sets entities 
need entities arise sets properties usually properties members 
properties average salary min rice typical certainly properties collective entities 
semantical approach logic bears desirable characteristics handling collective entities listed ffl individuals identified singletons ffl collective entities identified members sub concepts 
property captured proper subsets relations denoted ae oe ae ae oe oe quasi ordering derived define ae oe iff fd oe ag fd oe bg ae define ae iff fd ag fd bg superfluous status distinction knowledge representation noted 
ae oe ae oe similarly ae 
note oe implies ae oe vice versa 
logic account different objects members subconcepts 
example account different objects beatles stand ae oe relation example taken 
ffl relationships involve collective entities easy express 
examples relationships expression logic follows 
john leads beatles john lead 


member beatles sang collective entity beatles collectively sang implies member beatles sang 
relationship captured role forming operator distributive parameterized sing beatles distributive sing 
axiomatization distributive 
fc 
fc 
member beatles met brian sub collection beatles member beatles sub beatles member met brian 
relationship expressed role forming operator cumulative parameterized meet beatles cumulative meet 
cumulative 
fc 
rffl 
fc 
throw throws part group cumulative throw 
note relationships expressed non inheritable roles 
consequently inherited sub concepts members collective entities 
ary relationships description languages concepts defined properties binary roles ary relations usually secondary status 
conventional handling turn reify ary relationship object roles relating arguments 
logic ary relationships captured ways ary methods entities related roles arguments plain relations 
ways highlight different aspects relationships 
ary method ary relationship describes relationship objects dependency objects patient place time doctor patient certain place time doctor 
formulation ary relationships reified entities treated ary roles 
entities ary relations captured medical treatment patient person doctor location hospital time time plain relations example medical treatment john dr hospital 
roles class objects importance roles special kind objects emphasized 
idea roles described structured classified particular distinguished relations 
logic roles objects handling roles objects natural feature 
ffl role typing apple color ffl cardinality restrictions brute force way impose cardinality restrictions roles explicitly assert existence required number role values 
fy zg concise way exists change view family operators class roles defined exists cardinality parent imposed parent parent ffl excluded role fillers exc 
rffl 
rffl 
turning view exc family operators class roles define exc exc ffl kinds roles roles classified nature intrinsic color wine extrinsic price wine part courses meal essential color white wine derived color wine examples taken 
classification roles kinds particularly helpful knowledge engineering stage 
ffl justify existence concept role justify existence concept notion qua concept father father 
fg allows father concept objects father role defined 
cycles self terminological cycles definitions concepts defined concept directly pose problem dls semantics computation controversial 
particular standard normalize compare algorithms computing subsumption apply 
nebel discusses candidates semantics cycles suggests alternative approaches computing subsumption 
dl logic reason cyclic terminological definitions smooth integration rest logic knowledge base 
example definition human mammal parent human exactly parent 
hierarchy information mammal animate teacher person person human 
contingent information fred mammal fred parent teacher fred parent 

axiom appropriate axiomatization members exactly objects support positive answers queries human animate human subsumed animate 
fred parent animate fred member parent animate 
fred human 
fred member human 
query considered incorrect terminological reasoners true closed world assumption 
approach line direction layered systems described concepts status handled unique reasoning tool 
self problematic issue dls 
requires conjunction composition roles source computational descriptive problems 
consider example person son daughter visit school daughter older son 
terminological representation part person rvm son school daughter school combining second qualification hard impossible 
logic concept defined logic mechanism standard way 
description concept requires special form object constructors impose conditions descriptive term style woods suggestion general structural link form roles specifications part conditions part 
required constructor syntax role 
var role 
varn conditions 
var varn 
specification example operator person son 
son daughter 
dtr son school schl age dtr school schl age called dot expressions specify role chains greatly simplify constructor person son 
son daughter 
dtr son school dtr school son age dtr age definition logic 
rn 
yn conditions yn 
fy rn 
conditions yn special form part logic hilog enhancement 
course general forms possible form allows arguments roles person spouse son daughter visit school daughter older son 
example formulated follows man son woman 
son daughter woman 
dtr son school dtr school son age dtr age intensions representing intensions logic straightforward semantical objects stand just classical logic objects associated 
dealt intensional objects subsection 
member extension semantical object objects related 
concept extension semantical object objects related 
intensional imaginary objects round square objects member extensions intensional descriptions object morning star evening star cfg language npda language member extension 
views individuals mary teacher mary woman understood specifications 
integrating terminologies logic knowledge bases dl researchers believe terminological reasoners complex applications 
main approaches strengthen terminological reasoner integrate terminological reasoners general kr systems 
loom approach adopts option classic approach follows second 
augmented terminological reasoners probably need combined forms reasoning 
agreement desired expressivity dls integration reasoners unavoidable 
major issue designing integration schemes avoid usual problems mismatch 
logic approach promising underlying integration framework reasons ffl true terminological definitions possible 
ffl standard dl algorithms correct logic see 
ffl logic support typical deductive object oriented databases reasoning 
ffl logic expressive computable 
ffl description logic dfl reasoner accommodate separate terminological component independent processing methods clarifying semantics combined dl logic system subject investigation see 
round square captured concept term round square denotation members 
note round square holds semantic structure denotation round square need necessarily bottom 
example due woods 
interestingly framework dual classic viewpoint classic capabilities part black box test 
approach outlined powerful integrative scheme dfl dominant scheme limited terminological reasoner incorporated possibly black box 
dl subsumption algorithms correct logic inference algorithms shortly consider approaches checking subsumption coherence constraints approach normalize compare algorithms classic 
show approaches simulated similar logic inference algorithms apply descriptions written dfl properties algorithms preserved 
purpose section show computationally lost considering description language subset logic standard computation methods apply meaningful changes 
methods constitute natural part logic saving need resort different specialized formalism developed particularly solving subsumption coherence problems concept descriptions 
constraints approach schmidt smolka language considered concentrates concept descriptions 
alphabet includes symbols concept denoted roles denoted special top concept symbol concept forming operators 
concept terms denoted syntax td meaning terms defined standard way set theoretic semantics interpreting intersection union complement 
language called alb peculiar including main boolean operators 
complement operator hardly explicit way dls 
authors show deciding coherence language includes boolean operators np hard deciding subsumption language np hard 
main thrust linear time translation concept descriptions constraints systems way preserves coherence 
concept description coherent constraints system translated satisfiable 
authors characterize complete constraints systems satisfiability checked linear time show constraints systems obtained concept description complemented 
rest includes coherence checking algorithms various methods complementing constraints systems investigation complexity coherence language sublanguages 
alb fl logic language corresponds alb 
define logic theory respect define coherence alb fl show concept descriptions alb fl preserve properties alb 
show description alb fl mimic transformations defined get similar algorithms 
particular get transformations 
concept description gets transformed alb fl formula fl coherent fl satisfiable linear time 

formula fl ied formula fl satisfiability preserved linear time 

formula fl complemented formula fl sc satisfiability preserved 
satisfiability fl sc checked linear time 
step non deterministic 
rest algorithms simulated way 
described applies natural part logic terminological component dfl knowledge base 
language alb fl concept forming operators exists meaning defined theory follows definition rffl 
fc 
exists rffl 
fc top top top top top top top 

ground id term consists operators called concept description 
definition concept description incoherent top 
concept description coherent incoherent 
concept description subsumed concept description denoted proposition concept description coherent satisfiable simple alb fl alb fl operator applied variables constants 
proposition deciding coherence simple alb np hard 
proof reduction satisfiability problem propositional formulas cnf lines proof 
operators assumed distribute model boolean lattice laws hold respect 
case concept description alb fl simplified linear time proposition holds alb fl 
distributive proposition subsumption equivalent incoherence incoherent deciding subsumption alb fl distributive np hard 
show sequence transformations 
conjunctive formula alb fl written set conjuncts 

concept description transformed formula fl form occur proposition coherent fl satisfiable 

fl transformed fl repeatedly applying transformations replace rffl 
fzg 
new fl replace exists rffl 
fy new fl replace replace new fl replace top rue proposition fl satisfiable fl 
fl transformed complemented fl sc repeatedly applying transformations initially fl sc fl ffl rffl 
fzg 
rffl 
fwg fl sc add ffl fl sc fl sc add proposition fl satisfiable fl sc definition clash fl sc subset formulas form top proposition fl sc satisfiable includes clash 
theorem concept description simple alb fl coherent fl sc includes clash 
normalize compare approach deciding subsumption normalize compare approach popular standard method checking subsumption concept role descriptions 
step method normalize step concept descriptions transformed normal form compare step subsumption decided comparing normalized descriptions 
dfl normalize step viewed preprocessing step optimizing simplifying concept descriptions 
compare step specialized inference algorithm checking hierarchical relationship normalized descriptions 
support claim consider example rules normalization comparison 
normalization rules borrowed comparison rules taken 
normalization rules ffl 

ffl 

ffl 
ffl top 
top 
ffl 
clearly dfl meaning operators appropriately defined built transformations replace concept role descriptions equal concept role descriptions 
normalization perceived correct optimization step 
comparison rules compare algorithm takes normalized concept role descriptions inputs compare true respect empty terminology assumption defined concepts roles replaced definitions terminological definitions contain cycles 
comparison rules follow ffl top return true 
ffl test compare ffl test compare ffl dm test compare dfl role comparison implication built rules correct sense positive answer implies subsumption descriptions 
description logic logic knowledge base consists components including hierarchy component equalities component type declaration component rules component 
dfl knowledge base additional terminological component 
main issue coherently integrate terminological component rest knowledge base 
straightforward standard approach semantics knowledge bases artificial intelligence databases justified closed world assumption description languages operate open world assumption 
example consider definition operator rffl 
fc 
closed world assumption ground instances right hand side hold canonical model knowledge base hold 
contradiction dls approach derives instantaneous assertions objects essential terminological properties 
semantics dfl knowledge base just special case logic need defined way combine different assumptions 
tentatively done associating terminological operator terminological predicate turn associated operator definition 
example definition pred pred pred pred pred definition canonical model dfl knowledge base terminological predicates enjoy special treatment meanings 
pred example need special consideration pred need 
formal definition combined semantics subject research 
main message description languages form natural subset logic language provides common ground development description languages integration description languages systems extensions description languages 
main distinction standard description languages school logic involves lack built terminological operators replacement roles methods lack built methods relationships 
shown terminological operators direct meaning logic ontology built semantics 
approach harmony standard dl approach descriptive operators built semantics 
logic unreasonable undesirable semantics sensitive little change language 
seen ability define new descriptive operators terms existing ones powerful machinery provides flexibility durability 
reasonable way extremes agree small stable set constructors built semantics dfl 
dl oriented necessity pointed build roles methods relationships semantics dfl 
modification turn dls syntactically subsets logic 
appendix proof easily obtained auxiliary lemma lemma interpretation jf 

ffl 
ffl 
fl interpretation 
conditions guarantee correspondence relation 
object symbol jf 
condition implies jf individual sort symbol fl 
object symbol concept symbol iff jf jf 

object symbols jf jf concept symbols jf jf object symbol concept symbol jf jf object symbol concept symbol jf jf 
condition guarantees satisfies third forth axioms see definition 

concept symbols iff jf jf 
elements interpret symbols sort concept behave elements power set particular condition guarantees satisfies axioms see definition 

role symbol elements iff 
defined includes proof show satisfy conditions fl formula fl iff fl fl fl results fl fl follow immediately conditions 
fl fl fl ind rn 
fy 
fy iff iff iff 
assume holds 
fl fl iff variable assignment fl 
fy 
fy arbitrary variable assignment fl extend individual variable symbols taken object symbols extend defined new symbols way satisfies conditions substituted jf symbol variable 

fy iff 
defined includes iff conditions iff assumption iff 
defined includes condition iff 
fy 
direction proved similarly 
fl proof similar 
show fl case fl fl 
fo 
iff iff jf condition iff 
jf defined includes jf condition iff 
fo 
lemma interpretation exists corresponding fl fl interpretation vice versa 
proof interpretation domain corresponding fl interpretation fl domain includes addition element subset mimic subset membership relation respectively assignments fl symbols follow conditions 
fl interpretation satisfies domain 
specification dl corresponding interpretation somewhat tricky domain need lattice need isomorphic power set structure 
suggest take domain assignments symbols object symbols jf 
concept symbols fd jf fd jf role symbols 
defined includes hard see satisfy conditions corresponding respect special michael kifer encouragement valuable discussions detailed comments earlier draft 
robert mac gregor peter patel schneider joachim quantz helpful comments 
baader hollunder 
embedding defaults terminological knowledge representation formalisms 
kr pages 
baader hollunder nebel franconi 
empirical analysis optimization techniques terminological representation systems 
kr pages 
bergamaschi 
representational extensions dls 
working notes aaai fall symposium issues description logics pages 
borgida 
systematic development description logic reasoners clasp reconstructed 
kr pages 
borgida brachman mcguinness resnick 
classic structural data model objects 
acm sigmod portland 
brachman mcguinness patel schneider resnick borgida 
living classic kl language 
sowa editor principles semantic networks explorations representation knowledge pages 
morgan kaufmann 
brachman levesque 
competence knowledge representation 
aaai pages pittsburgh pa 
brachman levesque 
tractability subsumption frame description languages 
aaai pages austin texas 
brachman schmolze 
overview kl knowledge representation system 
cognitive science 
chen kifer warren 
hilog foundation higher order logic programming 
logic programming february 
doyle patil 
theses knowledge representation language restrictions taxonomic classification utility representation services 
artificial intelligence 
franconi 
collective entities relations concept languages 
working notes aaai fall symposium issues description logics pages 
freeman 
qua link 
schmolze brachman editors proceedings kl workshop pages jackson nh 
bolt beranek newman gehrke 
particles part relation 
working notes aaai fall symposium issues description logics pages 
hanschke 
benefit terminological logics 
working notes aaai fall symposium issues description logics pages 
hayes 
logic frames 
editor frame conceptions text understanding pages berlin 
walter de gruyter hollunder nutt schmidt schau 
subsumption algorithms concept description languages 
ecai pages 
kifer kim sagiv 
querying object oriented databases 
acm sigmod pages 
kifer lausen 
logic higher order language reasoning objects inheritance scheme 
sigmod 
kifer lausen wu :10.1.1.115.3586
logical foundations object oriented frame languages 
technical report dept computer suny stony brook april 
appear jacm 
levesque brachman 
fundamental tradeoff knowledge representation reasoning 
brachman levesque editors readings knowledge representation pages calif 
morgan kaufman publishers levesque brachman 
expressiveness tractability knowledge representation reasoning 
computational intelligence 
luck nebel 
back system 
technical report kit report department computer science technische universitat berlin berlin frg 
luck nebel 
anatomy back system 
technical report kit report department computer science technische universitat berlin berlin frg 
macgregor 
evolving technology classification knowledge representation systems 
sowa editor principles semantic networks explorations representation knowledge pages 
morgan kaufmann 
macgregor 
inside loom description classifier 
sigart bulletin 
macgregor 
needed description logic kr citizen 
working notes aaai fall symposium issues description logics pages 
macgregor mcguinness russ editors 
working notes aaai fall symposium issues description logics 
aaai 
mark 
years don mean 
working notes aaai fall symposium issues description logics pages 
napoli 
subsumption classification reasoning object representations 
ecai pages 
nebel 
computational complexity terminological reasoning back 
artificial intelligence 
nebel 
reasoning revision hybrid representation systems 
dissertation university saarbrucken 
nebel 
terminological reasoning inherently intractable 
artificial intelligence 
nebel 
terminological cycles semantics computational properties 
sowa editor principles semantic networks explorations representation knowledge pages 
morgan kaufmann 
padgham nebel 
combining classification nonmonotonic inheritance reasoning step 
working notes aaai fall symposium issues description logics pages 
patel schneider 
small beautiful knowledge representation 
proceedings kl workshop denver colorado 
patel schneider 
undecidability subsumption 
artificial intelligence 
patel schneider 
defaults descriptions 
working notes aaai fall symposium issues description logics pages 
patel schneider 
partial reasoning knowledge representation systems description logics 
working notes aaai fall symposium issues description logics pages 
patel schneider swartout 
description logic specification krss effort 
technical report bell labs june 
pfahringer 
logical way build dl kr system 
working notes aaai fall symposium issues description logics pages 
quantz 
step second order 
working notes aaai fall symposium issues description logics pages 
quantz royer 
preference defaults terminological logics 
kr pages 
resnick borgida brachman mcguinness patel schneider 
classic description manual common lisp implementation 
technical report version bell labs 
royer quantz 
deriving inference rules terminological logics 
pearce wagner editors logics ai jelia pages berlin springer lnai 
schmidt schau 
subsumption kl undecidable 
proceedings conference principles knowledge representation reasoning pages toronto ontario canada 
schmidt smolka 
attributive concept descriptions complements 
artificial intelligence 

expressive query language 
working notes aaai fall symposium issues description logics pages 
schmolze 
terminological knowledge representation systems supporting ary terms 
conference principles knowledge representation reasoning pages toronto ontario canada 
sowa 
expressive power natural language 
sowa editor principles semantic networks explorations representation knowledge pages 
morgan kaufmann 
woods 
understanding subsumption taxonomy framework progress 
sowa editor principles semantic networks explorations representation knowledge pages 
morgan kaufmann 
woods schmolze 
kl family 
computers mathematics applications special issue semantic networks artificial intelligence 
