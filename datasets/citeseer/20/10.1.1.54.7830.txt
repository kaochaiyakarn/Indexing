minimum width grid drawings plane graphs marek chrobak shin ichi nakano plane graph wish draw plane way vertices represented grid points edges represented straight line segments endpoints 
additional objective minimize size resulting grid 
known plane graph drawn way gamma theta gamma grid grid smaller gamma theta gamma purpose multiple 
fact dimension resulting grid needs gamma allowed unbounded 
show bound tight presenting grid drawing algorithm produces drawings width gamma 
height produced drawings bounded gamma gamma 
algorithm runs linear time easy implement 
problem automatic graph drawing attracted lot attention due numerous practical applications challenging mathematical algorithmic questions arise area 
generally graph task produce aesthetic drawing accurately reflects topological structure graphical form 
versions problem considered variety techniques algorithms software packages currently available 
see survey information 
planar graphs problem especially interesting 
case typically require vertices represented points plane edges drawn non intersecting segments endpoints 
additionally plane graph planar graph planar embedding represented combinatorially cyclic orderings edges incident vertices choice external face 
connected graphs choice external face uniquely determines embedding 
drawing needs department computer science university california riverside ca 
research partially supported nsf ccr ccr 
department system information sciences university sendai japan 
consistent planar embedding sense vertex cyclic ordering edges incident needs clockwise ordering drawing 
deal problem plane graph want map vertices integer grid points way edges drawn straight non intersecting line segments 
resulting drawing consistent planar embedding call mappings grid drawings 
restricting vertex coordinates integer values motivated fact arbitrary real values leads problems rounding errors 
integer vertex coordinates facilitate display drawing raster graphics devices 
proven plane graph straight line drawing fa wa st 
algorithms computing drawings proposed con 
methods real valued coordinates 
course approximate real vertex coordinates rational numbers appropriate scaling grids obtained method unfortunately exponential size 
question smaller polynomial size grids purpose open de pach pollack fpp fpp proved plane graph vertices embedded gamma theta gamma grid 
assume 
refer method shift method 
initiated intensive research area led new results implementations 
chrobak payne cp gave simple linear time implementation shift method 
sc different technique barycentric representations led smaller grid drawings size gamma theta gamma 
pointed personal communication close relationship shift method barycentric representations grid size cp reduced gamma theta gamma affecting time complexity 
shown jon shift method produces high quality drawings compares favorably techniques 
mentioned usually assumed plane graph triangulated 
triangulate graph remove added edges constructing drawing 
approach leads poor quality drawings question raised aesthetic drawings constructed efficiently prior triangulation 
plane graph criterion faces represented convex polygons 
achieved graph connected tu 
kant ka working direction proved connected plane graph convex drawing gamma theta gamma grid grid size improved gamma theta gamma trotter st chrobak kant ck independently 
algorithms implemented linear time 
obvious question minimum size grid drawings 
fpp proved worst case grid smaller gamma theta gamma possible vertex plane graphs multiple 
simple argument easily modified show dimension grid needs gamma unbounded 
important note distinction planar plane graphs essential 
planar graph input allowed choose planar embedding known gamma lower bound proof apply 
discuss issue section 
show bound tight presenting algorithm embeds vertex plane graph grid width gamma 
height resulting drawings gamma gamma gamma 
algorithm runs linear time easy implement 
correctness proof grid size estimate quite difficult 
degree method continuation fpp cp sc ck 
reduction grid width novel technique lemma describing combinatorial structure domino chains planar graphs 
number domino chains show closely related width graph 
technique interest believe useful algorithms drawing planar graphs 
fact investigated class connected planar graphs external face triangle domino chain method base algorithm drawing graphs small grids 
grid drawings plane graphs area requirements studied classes graphs various criteria 
rectilinear drawings considered edges restricted horizontal vertical line segments bends see example dlt 
lot attention tree drawing 
example crescenzi di battista cdp garg goodrich tamassia investigate problem upward drawings trees 
planar upward drawings studied dtt 
see survey 
section introduce notation terminology 
section generic shift method grid drawings algorithms fpp cp restriction ck triangulated plane graphs special instances 
algorithm shift method 
section sake presentation introduce simplified version algorithm called algorithm illustrates main idea reducing grid width 
algorithm produces drawings width gamma height quadratic bounded 
section algorithm uses width reduces height gamma gamma 
preliminaries canonical orderings 
arbitrary triangulated plane graph vertices ordering external face counter clockwise order 
define subgraph induced external face 
say canonical ordering conditions satisfied connected internally triangulated internal faces triangles 
contains 
exterior face canonical ordering graph easy see conditions imply neighbors belong fact consecutive existence canonical orderings proven de pach pollack fpp see ka 
canonical orderings extensions connected graphs fpp cp ka ck graph drawing algorithms 
example canonical ordering 
lemma fpp triangulated plane graph external face counter clockwise order 
exists canonical ordering constructed linear time 
ordered triangulated plane graph mean triangulated plane graph canonical ordering external face counter clockwise order 
symbol oe denote linear order canonical ordering write oe contour mean external face written wm note wm ordered clockwise neighbors degree denoted deg gamma number neighbors deg gamma gamma 
denote ind gamma call index respect deg gamma ind undefined 
obviously deg gamma gamma deg gamma 
example consider ordered graph 
identify vertices ranks canonical ordering 
deg gamma deg gamma deg gamma deg gamma ind ind ind 
grid drawings 
denote set non negative integers plane graph vertex set 
recall plane graph planar graph embedded plane 
theta function maps integer grid represent coordinates vertex think straight line drawing mapping edge straight line segment 
mapping correct planar embedding topologically equivalent say grid drawing understood context identify vertex embedding similarly edge line segment 
example frequently refer slope edge meaning slope line segment corresponding edge 
width drawing defined difference coordinates leftmost rightmost vertices max jx gamma height defined similarly max jy gamma minor modification construction fpp obtain theorem 
construction graph theorem 
theorem vertex plane graph width height grid drawing gamma 
proof sufficient consider width 
construct recursively 
triangle obtained adding vertex outer face gamma connecting gamma gamma gamma way outer face gamma gamma 
notice requires width respectively equals gamma 
theorem follows induction adding forces coordinates 
shift method grid drawings assume input plane graph triangulated 
planar graph easily triangulated linear time see example ka grid drawing added edges removed 
ordered triangulated plane graph 
general strategy similar methods fpp cp add vertices time canonical order 
time step contour satisfies certain invariant involves restrictions slopes contour edges 
adding vertex determine location grid necessary shift parts right order preserve invariant 
difficult part determine internal vertices shifted right violating planarity 
describe method section 
sets 
maintain set vertex set contain vertices located need shifted shifted 
initially fv 
suppose gamma add contour wm neighbors set fv gamma note sets wm form partition vertices sets subgraph graph 
shift operation 
shifting contour vertex achieved operation shift increases coordinate 
original shift method fpp slopes contour 
preserving invariant requires shifting step resulting drawing width gamma gamma height gamma 
improved slopes arbitrary nonnegative numbers see ck 
method step involves shift 
leads drawings width gamma gamma height gamma improved gamma theta gamma handling vertex special manner 
method fact avoid making shifts approximately steps 
generic shift algorithm 
initially mapped different grid points located point satisfying inequality strict 
inductively suppose gamma embedded add wm contour neighbors apply shift wm possibly point inside external face satisfying conditions gsm gsm max fy gamma gsm vertices visible 
pick arbitrary point set 
gsm term visible means edges intersect edges lemma choices shift operations vertex coordinates long gsm gsm gsm satisfied generic shift algorithm produces correct grid drawing 
proof vertices mapped grid points need show edges cross 
lemma follows claim prove induction wm 
correctly embedded ii wm iii executing arbitrary number operations shift introduce edge crossings 
note satisfies iii 
inductive step need show adding preserves conditions iii 
install may execute number operations shift 
inductive assumption iii correctness drawing preserved follows gsm 
new contour wm 
property ii invariant shifting inductive assumption ii choice gsm imply ii preserved 
remains show iii holds adding definition sets shift equivalent shift sets shifted vertex edges incident affected 
executing shift equivalent shift stretches edge 
edge crossings introduced induction 
triangle gamma gamma gamma moving right introduce edge intersections 
executing shift equivalent shift increasing 
note moves rigidly neighbors shift equivalent rigid shift graph shifting vertices left case symmetric previous case 
similarly case symmetric completes proof 
minimum width grid drawings ordered triangulated plane graph gamma neighbors add leftmost rightmost edges contour edges 
call forward edge backward edge 
vertices edges disappear contour add said covered vertex degree called forward oriented backward oriented covers forward backward edge 
assume 
vertex classified stable unstable 
associate sequence vertices called domino chain denoted dc 
define dominator denoted dom vertex undefined symbol 
concepts defined follows define dc dom stable 
suppose gamma denote usual leftmost neighbor ind assume 
vertex covers edge 
exist dc ind dc dom unstable 
dc ind dc dom stable 
dc ind dc dc dom dom 
stable iff stable 
unstable vertex degree called room shift vertex 
note dc contains vertex dominator vertex covers edge ind 
dominator play role width estimate 
intuition follows algorithms try shifts possible preserving invariant consecutive contour vertices satisfy equality may hold 
stable vertex placed leftmost neighbor saving coordinate unstable may need placed coordinate right 
particular room shift vertex result putting directly right neighbor violating mentioned invariant 
case need shift right neighbor right order room domino chains dominators determine vertices stable 
suppose vertex covers edge 
consider case ind 
place leftmost neighbor embedding satisfy 
case call unstable 
ind independently vertex stable placed left put stable 
final case ind 
know stable put leftmost neighbor located left put stable located put right stable depends stable 
naturally leads definition domino chains 
note vertices dc behave dominoes stable stable 
unstable unstable 
example consider ordered graph fig 
dc dom dc dom dc dom dc dom 
ind vertex unstable 
ind vertices stable 
vertices room shift vertices 
vertices degree stable 
note domino chains example disjoint prefix 
room shift vertices share dominator 
prove lemma properties hold general 
lemma assume dc dc prefix dc 
dc dc dc dc 
unstable dom dom dom dom 
proof part follows directly definition domino chains predecessor vertex domino chain uniquely defined 
prove part 
way violate dc dc common prefix 
vertex prefix successors dc dc respectively 
definition domino chains oe ind ind reaching contradiction 
holds 
prove 
suppose unstable 
dom dom obvious stable 
vertices dc dc respectively 
suppose dom dom 
dom dom 
oe unstable vertices dc including unstable 
similarly unstable 
conclude ind ind reaching contradiction 
algorithm ordered triangulated plane graph denote numbers degree vertices respectively forward oriented backward oriented 
suppose proceed follows define algorithm terminates 
assume 
embed follows 
initialization add vertices order suppose gamma add usual wm neighbors stable 
additionally deg gamma shift 
cases chosen smallest integer satisfies requirements gsm gsm 
remains deal case consider mirror copy ordering edges vertex reversed ordering reversed 
vertex forward oriented backward oriented iff backward oriented forward oriented apply previous case algorithm 
computing embedding modify left right reflection set gamma way resulting embedding topologically equivalent completes description algorithm algorithm contour edge belongs types vertical horizontal upward downward 
reader keep mind definition terms differs slightly common english 
example execution algorithm graph 
drawings shown 
algorithm vertical edges forward horizontal upward downward edges forward backward 
note deg gamma algorithm determine follows upward 
horizontal 
downward depending stable 
vertices slope segment defined standard fashion slope gamma gamma assume slope sigma depending sign gamma 
edge say slope edge slope grid drawing functions understood context 
algorithm changes slopes certain edges computation 
edges belonged contour slopes remain constant slope defined unambiguously 
contour edge slope change long contour write slope meaning slope time contour 
ambiguity arises notation slope denote slope embedding theorem triangulated plane graph vertices algorithm produces grid drawing width gamma height 
proof theorem holds obviously assume 
prove correctness width estimate height estimate separately 
correctness show invariant holds step wm current contour 
gamma iff oe stable 
implies 
neighbors adding external face max fy gamma visible implies choices algorithm satisfy conditions gsm gsm correctness follows directly lemma 
sufficient show holds step 
invariant true trivially 
assume holds inductive step show implies preserved adding claim 
oe inductive assumption 
suppose oe ind dom unstable 
claim follows inductive assumption 
claim unstable deg gamma 
oe claim follows inductive assumption 
suppose oe covers edge ind fact unstable implies unstable claim follows inductive assumption 
suppose stable 
claim set choose large satisfy gsm gsm 
completing proof 
new contour wm inequalities inductive assumption imply preserved 
second case unstable deg gamma 
claims imply 
setting choosing large satisfy gsm gsm 
follows 
inequalities inductive assumption imply preserved 
consider case unstable deg gamma room shift vertex 
claim executing shift operation 
setting choosing algorithm gsm gsm true 
follows 
inequalities inductive assumption imply preserved 
width estimate denote number vertices degree degree respectively counting 
algorithm denote numbers degree vertices respectively forward oriented backward oriented 
loss generality assume width drawing constructed algorithm denote rs number room shift vertices 
rs 
observe dominator backward oriented vertex degree 
lemma dominators room shift vertices distinct distinct dominator rs get rs gamma gamma gamma hand 
min gamma gamma gamma required 
height estimate fl smallest slope edges invariant gamma fl 
claim rs number room shift vertices fl rs gamma show claim implies height estimate 
fl rs gamma gamma height drawing gamma 
proof claim induction rs fl gamma claim holds 
assume lemma holds add need consider new contour edges downward 
case room shift vertex 
rs rs sufficient show slopes new contour edges fl case edge upward horizontal 
suppose downward 
horizontal slope gamma 
downward slope slope shift 
second case room shift vertex rs rs want show slopes new contour edges fl gamma 
consider edge suppose downward 
slope slope cause problem 
consider case downward 
deg gamma slope slope gamma fl gamma 
deg gamma minimality exists downward edge gamma slope slope slope gamma 
slope slope get slope slope gamma fl gamma 
reducing height section show reduce grid height gamma gamma 
new algorithm called algorithm follows general approach algorithm reduces height ensuring downward edges contours steep 
ordered triangulated plane graph grid embedding define slack slack gamma gamma deltax deltay deltax gamma deltay gamma 
note contour edge horizontal upward slack 
slack nonpositive downward 
relationship slack slope slope gamma slack deltax simplicity specify notation slack slope understood context 
fact path slack gamma slack suppose slack gamma 
slack slack 
additionally slack slack 
proof part proven simple summation 
part follows directly 
algorithm vertical edges forward horizontal upward downward edges forward backward 
algorithm satisfy property 
order reduce height drawing simple fruitful idea fpp control grid height ensuring slopes contour edges bounded constant 
slopes gammac quite obviously height drawing bounded times width 
fpp cp ck edges contour slope gamma 
algorithm slopes greater gamma 
preserving invariant require cases making shifts algorithm show width grid drawing produced algorithm bounded gamma 
distinguish types shifts 
vertex installed 
algorithm room shift occurs room shift vertex 
slope shift occurs shift rightmost neighbor order reduce absolute value slope edge 
call slope shift vertices 
shifts occur simultaneously 
shift vertex room shift slope shift vertex 
main intuition method explained follows suppose install vertex deg gamma rightmost neighbor assume edge gamma downward 
order visible slope smaller gamma 
recall values negative 
repeatedly adding vertices slope decrease gamma 

understand better think terms slacks slopes 
note slope edge greater gamma iff slack positive 
deg gamma install gamma similarly algorithm 
setting deltax gamma slack gamma slack slack gamma 
slope gamma slope slope gamma 
property vertices called slack preserving 
formal definition 
vertices approach 
called slack reducing 
suppose instance deg gamma stable downward 
installed case slack slack gamma gamma 
particular slack gamma slack zero case shift maintain slope invariant 
vertex neighbors vertex called pivotal smallest index vertex stable gamma oe definition stable vertices obtain fact 
fact pivotal vertex defined deg gamma 
unstable deg gamma 
algorithm choice canonical ordering satisfying initialization exactly algorithm assume add gamma 
usual denote wm neighbors pivotal neighbor stable deg gamma stable max fy unstable shift upward max fy deg gamma deltax gamma slack gamma unstable max gamma slack shift completes description algorithm shows example execution algorithm example execution algorithm graph 
drawing shown 
rest section adopt convention edge slack denotes slack time added graph 
contour edge slack change 
contour edge slack change long belongs contour may change covered vertex shifts 
lemma algorithm produces correct grid drawing height drawing times width 
proof lemma trivial 
assume 
prove invariant wm 
drawing produced algorithm satisfies conditions gamma iff oe stable 
slack 
additionally vertex unstable oe slack 
denote neighbors denote slack slack line executed 

max fy gamma outer face visible 
deg gamma 
upward horizontal slack 
downward stable slack slack gamma unstable slack slack 
deg gamma 
gamma upward 
gamma property unstable slack slack gamma gamma gamma 
slack slack gamma gamma observe lemma follows invariant 
correctness drawing follows directly lemma 
invariant implies slope gamma required 
prove invariant induction 
holds inspection 
suppose satisfies 
inductive step show implies preserved adding proof implies 
proof theorem claim 
claim 
unstable deg gamma 
stable claim 
unstable deg gamma claim 
room shift vertex shift 
cases 
deg gamma follows directly algorithm lines 
assume deg gamma 
define point 
algorithm lines important property stable unstable slack gamma slack gamma slack gamma 
slack gamma gamma 
denote open half plane left hand side edge traversed vertical 
note slack implies claim max gamma show claim implies 
max gamma get max 
gamma embedded vertically 
pi implies outer region vertices visible installed directly satisfies condition 
prove claim 
assume stable 
claim obvious 
induction claim fact obtain slack slack gamma gamma slack slack gamma 
gamma deltax gamma slack gamma deltax gamma slack gamma slack slack gamma gamma slack gamma slack gamma implies second case unstable 
deltax gamma slack deltax gamma slack slack slack gamma implies slack slack gamma slack gamma slack obtain argument similar case stable sketch 
induction claim fact obtain slack slack gamma gamma slack slack gamma 
gamma 
gamma slack implies 
upward horizontal slack 
horizontal implying slack 
suppose downward 
stable slack deltay deltax deltay gamma deltax slack gamma unstable denoting coordinate room shift slack deltay theta gamma deltay deltax slack deg gamma 
suppose gamma gamma 
gamma done 
proof gamma visible gamma gamma upward 
suppose gamma gamma edges vertical slack slack 
slack slack gamma follows slack slack gamma gamma stable unstable slack slack gamma 
proof implies preserved 
inductive assumption need consider new edges 
stable claim 
room shift vertex shift 
new coordinate deg gamma unstable claim 
completes proof 
show edge 
case stable obvious 
obvious room shift vertex inspection 
assume deg gamma unstable 
case 
slack slack gamma slack gamma gamma slack slack gamma slack slack gamma 
slack gamma slack slack gamma gamma 
cases get slack 
edge just need show slack 
suppose deg gamma 
upward horizontal slack slack done 
missing case downward stable 
slack slack gamma 
slack done 
slack shift occur line resulting slack 
suppose deg gamma 
assume upward 
slack gamma implies slack slack possible means deg gamma unstable 
shift line result slack 
mates shift vertices 
vertex neighbors say slack preserving deg gamma stable deg gamma 
call slack reducing unstable deg gamma stable deg gamma 
say slack critical slack reducing edge gamma downward 
basic observations slope shift vertices slack critical 
pivotal vertex fact 
note sets room shift vertices slack preserving vertices slack reducing vertices form partition set fv backward oriented room shift vertex assign mate oe belongs categories forward oriented stable slack critical vertex degree unstable slack critical vertex degree slack preserving vertex 
term oe mates describe vertices oe 
goal define oe oe mates different 
lemma shows possible 
general idea proof pick mate oe certain vertex responsible unstable 
necessarily vertex dom 
lemma exists assignment oe mates backward oriented room shift vertices oe mate satisfies conditions oe mates distinct vertices oe mates 
proof backward oriented room shift vertex left neighbor ind 
note algorithm horizontal upward 
vertex ordering oe ind 
stable set oe note case deg gamma forward oriented slack critical satisfying 
deg gamma satisfies 
suppose unstable 
case may happen covers 
unstable choice ind deg gamma ind 
set oe note unstable precedes dc 
deg gamma satisfies 
deg gamma satisfies downward edge downward 
prove note oe obvious 
stable ind ind vn unstable unstable construction oe mates 
example stable second example unstable 
stable 
remains prove oe mates different 
pick different backward oriented room shift vertices denote respectively left neighbors construction 
note loss generality oe couldn backward oriented 
suppose oe oe construction mates oe furthermore ind stable ind unstable 
satisfies condition ind ind reach contradiction 
oe oe completing proof 
slope shift vertex assign mates satisfies condition ms slack critical slope shift vertex 
definition slack critical vertices degree 
vertices referred mates mates specified 
mates vertices responsible slope shift installing shift slack slack gamma 
consider vertices oe oe neighbor contour time install 
intuition respectively slack reducing vertices cause decrease slack 
certain situations construction complicated presence edges oe lemma exist assignments mates slope shift vertices mate satisfies condition ms mates distinct vertices mates 
proof vertex fl denote th neighbor ind fl deg gamma gamma 
call slack vertex slack fl start useful claims 
claim suppose contour edge slack 
oe slack vertex 
ii oe stable vertical 
part follows definition slack vertices 
part ii follows directly invariant algorithm 
claim suppose contour edge slack 
oe slack vertex 
ii oe unstable slack vertex 
iii oe stable vertical 
part follows definition slack vertices 
part iii follows algorithm 
prove part ii 
edge covered algorithm 
slack slack slack 
downward claim implies slack vertex 
slope shift vertex 
associate sequence vertices 
mates step construction fb fl fl 
slope shift vertex slack downward 
claim slack vertex 
suppose defined slack vertex slack reducing completing construction room shift vertex slack preserving define vertex fl fl 
case room shift vertex 
downward slack slack 
claim slack vertex 
set case slack preserving 
case pivotal oe 
oe definition slack preserving vertices stable couldn pivotal 
slack claim slack vertex 
set case pivotal vertex fl 
slack implies pivotal vertex slack 
happen deg gamma stable deg gamma unstable 
similarly previous case get oe impossible claim slack vertex 
set step ii construction fc fl fl 
slack reducing slack downward 
slack slack vertex 
suppose defined slack slack vertex 
slack slack reducing set construction sequence complete 
slack set completing construction go step iii 
fl fl construct follows 
case room shift 
downward slack 
claim slope slope vertex 
set case slack preserving 
fl 
case pivotal downward slack 
claim slope slope vertex 
set case pivotal definition pivotal vertices oe oe unstable 
slack 
claim claim slope slope vertex 
set case pivotal fl 
case possible pivotal slack 
claim slope vertex 
set step iii construction fd execute step slack 
slack vertices constructed exactly fashion sequence vertex slope reducing vertex sequence 
claim mates different satisfy property ms 
follows directly construction oe 
construction successor vertex gamma uniquely defined 
furthermore vertex gamma fvg covered predecessor 
sequences disjoint 
examples construction mates 
example slack vertex second example slack vertex 
width estimate 
lemmas estimate grid width 
show simple intuitive proof gamma upper bound 
refer reader illustrates argument 
arrows correspond mate assignments 
arrows backward oriented room shift vertices go oe mates 
arrows slope shift vertices go mates 
degree forward oriented vertex assign different degree backward oriented vertex 
illustrated arrows forward oriented room shift vertices 
reason follows suppose shift vertex receives initially charge non shift vertices get charge 
show charges distributed vertices way vertex ends charge 
distribution charges indicated numbers arrows 
example slope shift vertices transfer charge mates 
reader difficulty verifying vertex receives charge 
useful observation invariant proof lemma non vertical forward edges slack degree forward oriented vertices slope shift 
width graph number shifts gamma 
degree forward oriented unstable vertices slope shift vertices degree backward oriented unstable vertices shift vertices mates mates non mates mates non shift vertices proving gamma width estimate charges 
mates receive charges gamma gamma gamma 
rigorous proof width estimate 
theorem triangulated vertex plane graph algorithm constructs grid drawing theta 
gamma grid gamma 
proof lemma sufficient estimate width drawing 
assume mate assignments oe satisfy lemmas 
conditions contradict ms mates distinct 
show implies gamma upper bound grid width 
number vertices degree number vertices degree 
refer vertices vertices short 
denote numbers forward backward oriented vertices degree 
rs ss ns denote number vertices room shift slope shift shift respectively 
similarly ms denote number vertices satisfy conditions condition ms respectively 
usual quantities defined take account vertices ignore combine subscripts superscripts obvious interpretation 
example ns number shift forward oriented vertices degree 
combinations void example definition room shift vertices rs 
invariant proof lemma downward forward edges slack implying ss ss ss width grid drawing produced algorithm equations rs ss ss rs ss ss ns ns ns ns ss rs ns rs ss ns existence oe mates rs gamma ss ss ms ms ms subtract inequality satisfies condition oe mate lemma 
multiply inequality add 
yields rs ss ss ms ms ms gamma ns ns ns gamma second inequality follows fact mate shift vertex 
add getting rs rs ss ss ns ns ns gamma ns ns gamma obtain rs ss ss rs rs ss ss ns ns inequalities imply gamma required 
theorem algorithm implemented linear time 
proof implementation similar cp sketch briefly 
canonical orderings computed linear time described fpp ka 
determine final canonical ordering determine edges forward backward compute number forward oriented backward oriented vertices indegree 
necessary replace 
done easily linear time 
straightforward implementation construction drawing runs omega gamma time shift operations cost omega gamma time 
order speed need install time deg gamma adds 
achieved postponing shift operations computing relative distances vertices necessary 
represent structure sets directed tree time step contains contour edges covers contain edge vertex root vertex store 
coordinates change algorithm 
edge store offset value deltax 
store coordinates 
contour edge shift operation shift affects offset value deltax 
deltax contour edges determine deg gamma time shape path exact location plane information sufficient determine deltax deltax final comments shown plane graphs grid drawings width gamma optimal height gamma gamma 
height analysis algorithm nearly tight examples graphs uses grids height gamma gamma 
improving height 
intriguing question grid height improved 
possibility improving height restrictive invariant slope replacing bound gamma say gamma 
hard see obtains correct grid drawings change 
unfortunately example showing modified algorithm example showing replacing slope bound increase width 
uses width start triangle 
identify add vertices connected gamma gamma add component ft edges 
add symmetrically vertices components ft side add vertex connect vertices outer face 
see fig 
easy see independently choose canonical ordering gamma component room shifts slope shift group vertices shifts 
convex drawings 
chrobak kant ck independently trotter st proved connected planar graphs convex drawings gamma theta gamma grid 
possible modify algorithm produce convex drawings connected graphs increasing grid size 
conjecture answer positive 
drawing planar graphs 
pointed purpose grid drawings important distinguish planar graphs plane graphs 
wish draw planar graph algorithm allowed choose embedding additional flexibility reduce grid size 
proof gamma lower bound theorem apply planar graphs 
embedding graph proof fixed prove omega gamma lower bound width 
fact drawn grid width suitable external face chosen 
leave proofs facts exercise 
little known width area requirements grid drawings planar graphs allowed choose face external 
believe interesting problem requires study 
drawing window 
graph visualization applications may want draw graph prescribed rectangular region window computer screen 
techniques fpp cp sc ck window proportions 
windows tall thin algorithm may applicable 
goals area research extend determine optimal width height trade grid drawings 
feasible pair apply method gives best drawings grids size theta minimizing width area 
general reduce grid width gamma plane graphs drawn grids smaller width 
possible determine polynomial time plane graph drawn grid width 
number related problems proven np complete ell dlt br see 
proofs carry case grid drawings restrictions edge slopes 
ask similar question prescribed window area 
related problem upward tree drawings studied 

john noga anonymous referees insightful comments useful suggestions pointing mistakes earlier version 
br brandenburg nice drawings graphs trees computationally hard technical report mip fakultat fur mathematik und informatik universitat passau 
cdp crescenzi di battista note optimal area algorithms upward drawings binary trees computational geometry theory applications 
ck chrobak kant convex grid drawings connected planar graphs technical report ruu cs department computer science utrecht university 
con chiba drawing planar graphs nicely acta informatica 
cp chrobak payne linear time algorithm drawing planar graph grid information processing letters 
chiba linear algorithms convex drawings planar graphs progress graph theory bondy murty eds academic press pp 

di battista eades tamassia tollis automatic graph drawing annotated bibliography computational geometry theory applications 
dlt dolev leighton trickey planar embeddings planar graphs advances computing research 
dtt di battista tamassia tollis area requirements symmetry display planar upward drawings discrete computational geometry 
ell eades lin lin tree drawing conventions international journal computational geometry applications 
fa ary straight lines representation plane graphs acta 
sci 
math 

fpp de pach pollack small sets supporting straight line embeddings planar graphs proc 
th annual symposium theory computing pp 

fpp de pach pollack draw planar graph grid combinatorica 
garg goodrich tamassia area efficient upward tree drawings proc 
th annual acm symposium computational geometry pp 

grid embedding connected plane graphs proc 
graph drawing sep passau germany 
appear discrete computational geometry 
jon jones eades moran ward tamassia note planar graph drawing algorithms technical report dept computer science univ queensland 
ka kant drawing planar graphs lmc ordering proc 
rd symposium foundations computer science pittsburgh pp 

ka kant algorithms drawing planar graphs ph dissertation department computer science university utrecht 
sc embedding planar graphs grid proc 
st annual acm siam symp 
discrete algorithms san francisco pp 

st trotter convex drawings planar graphs abstracts ams 
st stein convex maps proc 
amer 
math 
soc 
tu tutte draw graph proc 
london math 
soc 

wa wagner zum der deutschen 
