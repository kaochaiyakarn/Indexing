computational geometry ii lee department electrical computer engineering northwestern university evanston il mail ece nwu edu follow previous chapter dealing geometric problems efficient solutions 
classes problems address chapter include proximity optimization intersection searching point location discussions geometric software development 
proximity geometric problems pertaining questions close geometric entities collection objects similar geometric patterns match abound 
example pattern classification clustering features similar metric clustered group 
closest time instant air space largest likelihood collision 
cases may interested far apart dissimilar objects 
proximity related problems addressed section 
closest pair consider set points closest pair problem find pair points distance minimum find min fd points sg denotes euclidean distance 
result holds distance metric minkowski norm 
enumerating pairs distances find pair minimum distance take delta time 
known dimension solve problem efficiently closest pair points occur consecutively real line sort points scan order solve closest pair problem log time 
time complexity turns best possible problem lower bound omega gamma log linear time transformation element uniqueness problem 
unfortunately total ordering points sorting applicable 
show divide conquer approach solve problem log optimal time 
consider case 
compute minimum distance closest pair actual identity closest pair realizes minimum distance easily straightforward bookkeeping operations 
consider vertical separating line divides divide conquer scheme closest pair problem 
js js 
ffi denote minimum distance defined closest pair points 
observe minimum distance defined closest pair points ffi ffi case done 
points lie vertical strip width ffi ffi side separating line 
fig 
problem reduces finding closest pair points lie inside strip width ffi 
subset points possesses special property known sparsity square box length ffi number points bounded constant delta gamma set exists point lies interior ffi ball centered point 
fig 

sparsity property enables solve bi chromatic closest pair problem time 
bi chromatic closest pair problem defined follows 
sets red blue points denoted find closest pair minimum possible distances denote set points lie vertical strip 
dimensions sparsity property ensures point number candidate points closest pair fig 

scan points order separating line compute distance point resp 
scanned candidate points resp 

pair gives minimum distance ffi bi chromatic closest pair 
minimum distance pairs points equal ffi ffi ffi merge step takes linear time entire algorithm takes log time 
idea generalizes higher dimensions ensure sparsity property set separating hyperplane appropriately chosen obtain log time algorithm asymptotically optimal 
note bi chromatic closest pair problem general difficult closest pair problem 
edelsbrunner sharir showed dimensions box hypercube higher dimensions 
maximum points box width box width ffi separating line points point needs examine points find closest neighbor 
number possible closest pairs jrj delta jbj jrj jbj 
agarwal gave gamma dk ffl time algorithm randomized algorithm expected running time log constant jrj jbj 
sets possess sparsity property defined problem solved log time jrj jbj 
general problem known fixed radius nearest neighbor problem sparse set set points satisfies sparsity condition find pairs points distance parameter ffi solved jm log jm time 
closest pair vertices simple polygon lies totally linear time known diagonal voronoi diagrams voronoi diagram set points called sites fp partition voronoi cells cell contains points closer site site fx jd dimensions planar graph size linear jsj 
dimensions total number faces dimensions gamma dd 
shows voronoi diagram point sites dimensions 
shows straight line dual graph voronoi diagram called delaunay triangulation cf 
section previous chapter 
triangulation vertices sites vertices connected edge voronoi cells adjacent 
voronoi diagram set points plane 
construction voronoi diagrams dimensions voronoi diagram possesses proximity properties 
instance site closest site voronoi cells adjacent 
closest pair problem solved linear time voronoi diagram computed 
pair points adjacent delaunay triangulation examine adjacent pairs points report pair smallest distance 
divide conquer algorithm compute voronoi diagram set points metric known 
rich body literature concerning voronoi diagram 
interested reader referred surveys 
give brief description plane sweep algorithm known wavefront approach due dehne klein 
fp set point sites sorted ascending coordinate value 
consider sweep vertical line left right sweep compute voronoi diagram fp sjx tg fl denotes vertical line coordinate equals known contain straight line segments portions perpendicular point sites parabolic curve segments portions point site wavefront consisting sequence called waves boundary voronoi cell respect figs 
illustrate instances 
voronoi cells contribute wavefront final change moves right 
possible events wavefront needs update 
called site event site hit new wave appears 
called spike event old wave disappears 
sites associated waves adjacent bisector defines edge left extension cell voronoi diagrams called spike 
spikes viewed tracks neighboring waves travel 
wave disappears reached point neighboring spikes intersect 
fig 
dashed lines spikes potential spike event point 
wave disappear wave site event occurred new point created defines earlier spike event spike event point wave disappears waves adjacent 
note spike event corresponding occur 
occurs 
site event wave disappear 
difficult see site events spikes events processed time identical wavefront removed 
waves stored height balanced binary search tree site events spike events maintained priority queue time space needed log respectively 
omega gamma log lower bound computing voronoi diagram arbitrary set sites lower bound apply special cases sites vertices convex polygon 
fact voronoi diagram convex polygon computed linear time 
demonstrates additional properties input help reduce complexity problem 
construction voronoi diagrams higher dimensions voronoi diagrams related convex hulls geometric duality transformation 
consider set sites hyperplane paraboloid represented delta delta delta site transformed hyperplane denoted gamma 
tangent paraboloid point paraboloid transformation site dimension line tangent parabola 
delta delta delta just vertical projection site paraboloid see fig 
illustration transformation dimension 
half space defined containing paraboloid denoted 
intersection half spaces convex body boundary convex body denoted ch 
point lies voronoi cell vertical projection ch contained 
distance point closest site shown equal square root vertical distance vertical projection paraboloid ch 
face ch vertical projection hyperplane equal face voronoi diagram obtain result follows theorem convex hull previous chapter 
theorem voronoi diagram set points computed log time log nh gamma log time number faces shown voronoi diagram computed log gamma time 
farthest neighbor voronoi diagram voronoi diagram defined section known nearest neighbor voronoi diagram 
nearest neighbor voronoi diagram partitions space cells site cell contains points closer site site 
variation partitioning concept partition space cells associated site contains points farther site farthest neighbor voronoi diagram set sites plane 
site 
diagram called farthest neighbor voronoi diagram 
nearest neighbor voronoi diagram farthest neighbor voronoi diagram subset sites voronoi cell associated 
sites non empty voronoi cell lie convex hull similar partitioning space known order nearest neighbor voronoi diagram voronoi cell associated subset sites fixed integer sites closest sites 
nearest neighbor voronoi diagram gamma farthest neighbor voronoi diagram 
construction order nearest neighbor voronoi diagram plane 
order voronoi diagrams related levels hyperplane arrangements paraboloid transformation discussed section 
see details 
discussion farthest neighbor voronoi diagram dimensions 
set sites neighbor voronoi cell site locus points farther site fp jd union neighbor voronoi cells called farthest neighbor voronoi diagram fig 
shows farthest neighbor voronoi diagram set sites 
note sites convex hull ch non empty neighbor voronoi cell neighbor voronoi cells unbounded 
farthest neighbor voronoi diagram plane related convex hull set sites divide marriage conquest paradigm compute farthest neighbor voronoi diagram dimensions time log number sites convex hull 
convex hull available linear time algorithm computing voronoi diagram convex polygon applied 
power diagram dimensions 
ffi ffi length weighted voronoi diagrams sites weights distance point sites weighted structure voronoi diagram drastically different unweighted case 
consider examples 
example power diagrams suppose site associated non negative weight arbitrary point weighted distance defined ffi gamma positive ffi length tangent ball radius centered ffi called power respect ball 
locus points equidistant sites equal weight hyperplane called see fig 

point equidistant sites distance length tangent line power diagram dimensions compute contour union disks connected components disks log time higher dimensions compute union intersection axis parallel cones common hyperplane time ch multiplicative weighted nearest neighbor voronoi diagram defined points time ch voronoi diagrams spheres time ch ch denotes time constructing convex hull points 
best time bound ch consult section previous chapter 
results union spheres volumes see 
example multiplicative weighted voronoi diagrams suppose site associated positive weight distance point defined ffi multi gammaw dimensions locus points equidistant sites disk perpendicular bisector line segment cell associated site consists points closer site may disconnected 
worst case multiplicative weighted nearest neighbor voronoi diagram set points dimensions regions computed time 
dimension diagram computed optimally log time 
hand multiplicative weighted farthest neighbor voronoi diagram different characteristic 
voronoi cell associated site remains connected size diagram linear number sites 
log time algorithm constructing diagram 
see applications diagram 
example additive weighted voronoi diagrams suppose site associated positive weight distance point site defined ffi add gammaw gamma dimensions locus points equidistant sites branch perpendicular bisector line segment voronoi diagram properties similar ordinary unweighted diagram 
example cell connected size diagram linear 
weights positive diagram voronoi diagram set spheres centered site radius dimensions diagram disks computed log time notion power diagram cf 
example compute diagram 
generalizations voronoi diagrams consider variations voronoi diagrams interest applications 
example geodesic voronoi diagrams nearest neighbor geodesic voronoi diagram voronoi diagram sites presence obstacles 
distance point site called geodesic distance length shortest path avoiding obstacles cf 
section 
locus points equidistant sites general collection hyperbolic segments 
cell associated site locus points geodesic distance site shorter site 
farthest neighbor geodesic voronoi diagram similarly defined 
efficient algorithms computing kind geodesic voronoi diagram point sites sided simple polygon log time 
fig 
illustrates geodesic voronoi diagram set point sites simple polygon shaded region 
example skew voronoi diagrams geodesic voronoi diagram simple polygon 
directional distance function points plane introduced models realistic distance measure 
distance called skew distance point point defined delta gamma parameter 
distance function asymmetric satisfies triangle inequality 
imagine tilted plane obtained rotating xy plane angle ff axis 
height point related coordinate delta sin ff 
distance function defined reflects cost proportional difference heights distance smaller going downhill going uphill 
distance defined delta gamma serves purpose 
smaller 
distance directional define kinds voronoi diagrams defined set sites 
skew voronoi cell site defined set points closest site 
fxj similarly define skew voronoi cell site follows 
fxj collection voronoi cells sites called skew directional voronoi diagram 
site define disk centered denoted set points skew distance fxj rg 
symmetrically define disk centered denoted set points skew distance fxj rg 
subscript omitted 
shown just mirror reflection horizontal line passing shall consider skew voronoi diagram collection cells lemma unit disk conic focus horizontal line distance eccentricity ellipse parabola 
disk center regarded ellipse eccentricity zero 
note equals skew voronoi diagram reduces ordinary nearest neighbor voronoi diagram 
leads known structures lemma skew distance convex distance function voronoi diagrams convex distance functions studied see 
consist edges vertices constructed time log divide conquer 
unit disks longer bounded skew voronoi diagrams different behavior ordinary ones 
turns sites nonempty skew voronoi cells case 
regard looks ordinary farthest neighbor voronoi diagram discussed earlier 
denote locus points 
shown vertical line emanating downwards consists rays emanating extending slopes gamma gamma gamma respectively 
denote area 
envelope upper boundary union upper envelope graphs seen functions coordinate 
point lying point lying 
see example envelope shown dashed polygonal line corresponding skew voronoi diagram 
note skew voronoi cells associated sites empty 
results obtained 
lemma envelope set sites computed log time space number edges 
lemma 

unbounded lies upper hull 
unbounded theorem skew voronoi diagram sites computed log time space number non empty skew voronoi cells resulting voronoi diagram 
sites mentioned far point sites 
different shapes 
instance line segments polygonal objects 
voronoi diagram edges simple polygon divides interior voronoi cells known medial axis skeleton 
distance function convex distance function norms 
envelope skew voronoi diagram optimization geometric optimization problems arise operations research vlsi layout engineering disciplines 
give brief description problems category studied past 
minimum cost spanning tree minimum cost spanning tree mst undirected weighted graph edge nonnegative weight studied problem graph theory solved jej log jv time 
cast euclidean metric plane input consists set points complexity problem different 
constructing complete graph edge weight distance endpoints extract mst sparse graph known delaunay triangulation point set computed 
delaunay triangulation planar graph straight line dual voronoi diagram points connected edge voronoi cells sites share edge 
cf 
section previous chapter shown mst subgraph delaunay triangulation 
mst planar graph linear time problem solved log time 
fact asymptotically optimal closest pair set points define edge mst closest pair problem known omega gamma log lower bound mentioned section 
problem dimensions higher solved subquadratic time dimensions log time sufficient dimensions gamma dk ffl time suffices 
interesting want find mst spans nodes planar graph euclidean plane parameter problem called mst problem np hard 
approximation algorithms mst problem 
steiner minimum tree steiner minimum tree smt set vertices undirected weighted graph spanning tree total weight spanning tree minimum 
problem differs mst need identify set called steiner vertices total cost spanning tree minimized 
course smt mst 
identification steiner vertices problem intractable 
plane set points find shortest tree interconnecting points additional steiner points allowed 
euclidean rectilinear metric smt problems known np hard 
geometric setting rectilinear smt problem arises vlsi net routing number terminals need interconnected horizontal vertical wire segments shortest wire length 
problem intractable heuristics proposed 
information reader referred special issue algorithmica steiner trees edited hwang 
heuristics smt problem classical theorem known hanan grid theorem states steiner points smt grid defined drawing horizontal vertical lines points 
number orientations permitted routing greater hanan grid theorem longer holds true 
lee shen established multi level grid theorem states steiner points smt points grid defined drawing lines feasible orientation recursively gamma levels denotes number orientations wires allowed routing 
points assumed th level 
level lines feasible orientations drawn new grid points created previous level 
geometry plane feasible orientations assumed angle positive axis 
rectilinear case 
fig shows hanan grid insufficient determining steiner smt 
steiner point lie hanan grid 

definition performance ratio approximation metric space defined ae inf la la denote respectively lengths steiner minimum tree approximation space mst approximation performance ratio known steiner ratio denoted simply ae 
known steiner ratios euclidean rectilinear respectively 
steiner ratio geometry cos interesting result regarding steiner ratio reported shows steiner ratio increasing function varies 
steiner ratio defined greatest lower bound length smt length mst geometry plane 
hanan grid theorem fails 
steiner point lie hanan grid 
theorem steiner ratio multiple cos multiple multiple 
minimum diameter spanning tree minimum diameter spanning tree undirected weighted graph spanning tree diameter total weight longest path tree minimum 
arises applications communication network tree sought maximum delay total cost minimized 
graphtheoretic approach solve problem log jv time 
triangle inequality show exists longest path tree consists segments 
time algorithm obtained 
theorem set points minimum diameter spanning tree time space 
problem finding spanning tree total cost diameter bounded np complete 
problem finding minimum diameter cost spanning tree studied 
problem pair vertices weighting function diameter cost spanning tree defined maximum denotes distance vertices find spanning tree minimum diameter cost defined shown np hard 
similar problem arises vlsi clock tree routing find tree source multiple sinks source sink path shortest rectilinear path total wire length minimized 
problem known rectilinear steiner arborescence problem see 
known solvable polynomial time 
problem widely believed np hard 
shown problem finding minimum spanning tree longest source sink path bounded parameter np complete 
minimum enclosing circle set points problem find smallest disk enclosing set 
problem known unweighted center problem 
find center maximum distance center points minimized 
formally need find center max minimized 
weighted center problem distance function multiplied weight wellknown min max problem referred emergency center problem operations research 
dimensions center problem solved time 
minimum enclosing ball problem higher dimensions solved linear programming technique 
general center problem finding circles union contains maximum radius minimized known np hard 
special case eppstein gave log randomized algorithm parametric search technique 
problem finding minimum enclosing ellipsoid point set types geometric location problem see 
largest empty circle problem contrast minimum enclosing circle problem find circle centered interior convex hull set points contain point radius circle maximized 
mathematically formalized max min problem minimum distance center set maximized 
weighted version known center problem facility location 
unweighted version center vertex voronoi diagram convex hull intersection voronoi edge boundary convex hull 
log time sufficient problem 
strategy solve largest empty square problem log time voronoi diagram metric 
time complexity algorithm asymptotically optimal maximum gap problem finding maximum gap consecutive numbers real line requires omega gamma log time reducible problem 
contrast minimum enclosing ellipsoid problem largest empty ellipsoid problem studied 
largest empty rectangle section previous chapter mentioned smallest enclosing rectangle problem 
look problem finding largest rectangle empty 
rectangle containing set points find largest area sub rectangle sides parallel original rectangle interior contains points 
problem arises document analysis printed page layout white space black white image form maximal empty rectangle recognized 
related problem called largest empty corner rectangle problem subsets separated vertical line find largest rectangle containing points lower left corner upper right corner rectangle respectively 
problem solved log time jsj fast matrix searching technique cf 
section previous chapter 
subroutine solve largest empty rectangle problem log time 
points define rectilinear polygon orthogonally convex largest empty rectangle fit inside polygon nff time ff slowly growing inverse ackermann function result kleitman 
polygon arbitrary may contain holes daniels gave log algorithm finding largest empty rectangle matches best known result rectilinear polygon 
minimum width annulus set points find annulus defined concentric circles center lies internal convex hull width annulus minimized 
problem arises dimensional metrology deals specification measurement error tolerances geometric shapes 
measure manufactured circular part round ansi standard width annulus covering set points obtained number measurements 
known roundness problem 
shown center annulus located intersection nearest neighbor farthest neighbor voronoi diagrams discussed section 
center computed log time 
input defined simple polygon vertices problem find minimum width annulus contains boundary center smallest annulus located medial axis 
particular problem solved log denotes number intersection points medial axis simple polygon farthest neighbor voronoi diagram vertices shown 
polygon convex solve problem linear time 
note minimum width annulus problem equivalent best circle approximation problem circle approximating shape set points sought error minimized 
error approximating circle defined maximum distances points set approximating circle 
precise error equal half width smallest annulus 
see fig 

center smallest annulus point set arbitrarily placed center may lie infinity annulus degenerates pair parallel lines enclosing set points 
center located infinity problem known minimum width problem find pair parallel lines enclosing set distance minimized 
width set points computed log time optimal 
dimensions width set measure flatness plate called flatness problem computational metrology 
chazelle gave ffl time algorithm problem improving previously known algorithm runs time 
annulus width annulus area minimized problem solved linear time reduction fixed dimensional linear programming 
yap introduced notion relative roundness wants minimize ratio annulus width radius inner circle 
algorithm 
duncan define notion roundness called referenced roundness equivalent flatness problem radius circle minimum width annulus best circle approximation 
set infinity 
specifically radius ae annulus contains ae mean concentric circles defining annulus find annulus minimum width radius ae containing ffl find annulus containing width upper bounded ffl 
log algorithm dimensions near quadratic time algorithm dimensions 
geometric matching matching general graphs classical subjects combinatorial optimization applications operations research pattern recognition vlsi design 
geometric versions matching problem discussed 
graph theoretic matching problems see 
weighted undirected complete graph set vertices complete matching set edges vertex exactly edge incident 
weight matching sum weights edges matching 
metric space vertices points plane weight edge points distance 
euclidean minimum weight matching problem points find matching pairs points minimized 
known geometric properties exploited obtain algorithm faster algorithm general graphs see 
vaidya settled question affirmative 
algorithm studied primal dual algorithm weighted matching 
making additive weighted voronoi diagram discussed section range search tree structure see section vaidya solved problem log time 
algorithm generalizes complexity increased log factor 
bipartite minimum weight matching problem defined similarly set red points fr set blue points fb plane look matching pairs points theta minimum cost 
vaidya gave log time algorithm euclidean metric log algorithm metric 
points vertices polygon problems minimum weight matching bipartite matching solved log time polygon convex log time polygon simple 
case weight matching pair vertices defined geodesic distance 
maximum weight matching sought log factor 
triangle inequality easily show minimum weight matching line segments defined matched pairs points intersect 
generalizing non intersecting property geodesic minimum matching problem presence obstacles formulated 
points polygonal obstacles plane find matching points sum geodesic distances matched pairs minimized 
paths cross may portions paths overlapping 
efficient algorithm known date obvious method reducing minimum matching complete graph weight edge connecting points geodesic distance 
note finding geodesic matching optimization trivial paths 
geodesic minimum matching problem general polygonal domain nontrivial 
constraint optimization objective function minimizing total weight problem hard 
matching points priori finding paths minimizing total weight difficult 
resembles global routing problem vlsi terminal nets routing sought optimizes certain objective function including total wire length subject capacity constraints 
requirement needed single layer routing planar routing model 
global routing problems general np hard 
paths defined matching pairs optimal routing cross paths obtained earlier matched pairs obstacles subsequently matched pairs 
sequence pairs points matched crucial 
fact path defined matched pair points need shortest 
route matched pairs greedy manner sequentially give optimal routing 
consider configuration shown fig 
points matched 
note optimal routing matched pairs realized shortest path straight line 
problem referred shortest pair path problem 
matching pairs points boundary simple polygon path confined interior polygon gave algorithm finding optimal set paths solution exists number vertices polygon 
atallah chen consider bipartite matching problem red blue disjoint isothetic rectangles plane find matching red blue pairs rectangles rectilinear paths connecting matched pairs monotone 
surprisingly show matching satisfying constraints exists give asymptotically optimal log algorithm finding matching 
conclude section min max versions general matching bipartite matching problems open 
red blue matching sets allowed translate rotate scale different matching problem 
setting look best match min max criterion maximum error matching minimized 
dual problem defined maximum instance pair matching problem 
error bound determine matching exists kind motions needed 
imai called problem geometric fitting 
planar point location planar point location fundamental problem computational geometry 
planar subdivision query point want find region contains query point 
fig 
shows example planar subdivision 
problem arises geographic information systems interested locating example certain facility map 
consider skew voronoi diagram discussed earlier section set emergency dispatchers 
suppose emergency situation arises location nearest dispatcher called distance smallest distances equivalent locating voronoi cell skew voronoi diagram contains situations vital nearest dispatcher located quickly 
address point location problem assumption underlying planar map fixed main objective fast response time query 
preprocess planar map suitable structure facilitate point location task 
earlier preprocessing scheme slab method parallel lines drawn vertex partitioning plane parallel slabs 
parallel slab divided subregions edges subdivision linearly ordered 
query point located binary searches locate horizontal slabs slab containing followed locate region defined pair consecutive edges ordered left right 
tuple preprocessing time space requirement query time denote performance search strategy 
slab method gives chain decomposition method planar subdivision 
log algorithm 
preprocessing time performed time requirement critical space requirement permanently engaged 
primary goal search strategy minimize query time space required 
lee preparata proposed chain decomposition method decompose monotone planar subdivision points collection monotone chains organized complete binary tree 
node binary tree associated monotone chain edges ordered coordinate 
set monotone chains forms totally ordered set partitioning plane collections regions 
particular adjacent chains number disjoint regions 
point location process begins root node complete binary tree 
visiting node query point compared node associated chain decide side chain query point lies 
chain comparison takes log time total number nodes visited log 
search binary tree lead adjacent chains identify region contains point 
query time log log log 
slab method edge may stored times resulting space shown appropriate chain assignment scheme edge planar subdivision stored 
space requirement 
example fig 
edges shared root chain descendant chains assigned root chain general edge shared nodes root leaf path assigned node ancestor node 
chain decomposition scheme gives rise log log algorithm 
binary search chains efficient 
recall chain comparison move binary search tree perform chain comparison start binary search coordinate query point find edge chain comparison decide point lies left right chain 
efficient scheme able perform binary search coordinate root node spend time node go chain tree shaving log factor query time 
scheme similar ones adopted chazelle guibas fractional cascading search paradigm willard range tree search method 
linear time algorithm triangulating simple polygon cf 
section previous chapter conclude optimal search structure planar point location 
theorem planar subdivision vertices preprocess subdivision linear time space point location query answered log time 
point location problem arrangements hyperplanes significant interest 
see 
dynamic versions point location problem underlying planar subdivision subject changes insertions deletions vertices edges investigated 
see survey dynamic computational geometry 
path planning class problems cast setting 
set obstacles object called robot initial final position called source destination respectively 
wish find path robot move source destination avoiding obstacles 
problem arises contexts 
instance robotics referred piano problem collision avoidance problem vlsi design routing problem terminal nets 
applications searching collision avoidance path shortest length distance measure euclidean metric 
information regarding motion planning see 
shortest paths dimensions dimensions euclidean shortest path problem robot point obstacles simple polygons studied 
fundamental approach notion visibility graph 
shortest path turns polygonal vertices sufficient construct graph vertices include vertices polygonal obstacles source destination edges determined vertices mutually visible segment connecting vertices intersect interior obstacle 
visibility graph constructed edge weight equal euclidean distance vertices apply dijkstra shortest path algorithms find shortest path source destination 
euclidean shortest path points referred geodesic path distance geodesic distance 
visibility graph set polygonal obstacles total vertices computed trivially time 
computation visibility graph dominating factor complexity visibility graph shortest path algorithm 
research results aiming efficient algorithms computing visibility graph computing geodesic path time proportional size graph obtained 
example ghosh mount gave output sensitive algorithm runs log time computing visibility graph denotes number edges graph 
mitchell called continuous dijkstra wavefront approach problem general polygonal domain obstacle vertices obtained ffl time algorithm 
constructed shortest path map partitions plane regions points lie region vertex sequence shortest path source shortest path map takes space enables perform shortest path queries find shortest path source query points log time 
hershberger suri hand plane subdivision approach log time log space algorithm compute shortest path map source point 
improved time bound log 
source destination path confined simple polygon vertices shortest path time 
context vlsi routing interested rectilinear paths metric edges horizontal vertical 
paths restricted rectilinear shortest path problem solved easily 
lee gave survey topic 
layer routing model number segments rectilinear path reflects number wire segments change layers factor governs fabrication cost 
robotics straight line motion costly making turns 
number segments turns objective function 
motivates study problem finding path number segments called minimum link path problem 
cost measures length number links conflict 
shortest path may far links minimum link path may arbitrarily long compared shortest path 
path optimal criteria called smallest path 
fact easily shown general polygonal domain smallest path exist 
smallest rectilinear path simple rectilinear polygon exists linear time 
optimizing measures simultaneously seek path optimizes linear function length number links known combined metric optimizes lexicographical order 
example optimize length number links paths shortest length find number links smallest vice versa 
rectilinear case see 
algorithms computing shortest norm link path polygon approximating shortest link paths polygons holes 
generalization collision avoidance problem allow collision cost 
suppose obstacle weight represents cost obstacle penetrated 
lee 
see studied problem rectilinear case 
showed shortest rectilinear path points presence weighted rectilinear polygons log time space 
chen showed data structure constructed log time log space enables find shortest path source query point log time number links path 
generalization include set obstacles subset ae obstacles vertices forbidden solution path turns 
course weight obstacles set forbidden set generalizations reduce ordinary collision avoidance problem 
shortest paths dimensions euclidean shortest path problem points dimensional polyhedral environment turns harder dimensional counterpart 
consider convex polyhedron vertices dimensions points surface shortest path surface cross sequence edges denoted 
called shortest path edge sequence induced consists distinct edges 
shortest path unique 
unique 
known shortest path computed planar unfolding procedure faces crossed path lie common plane path straight line segment 
shortest paths surface convex polyhedron possess topological properties 
pass vertices cross edge ii intersect simple iii case shortest paths sharing common subpath intersect point cross 
shortest paths grouped equivalent classes sequences edges cross number equivalent classes denoted number vertices equivalent classes computed jn log time 
chen han gave algorithm finding shortest path fixed source destination number vertices edges polyhedron may may convex 
lie surface different polyhedra algorithm suffices computing shortest path amidst set polyhedra denotes total number vertices obstacles 
crux problem lies fact number possible edge sequences may possible shortest path edge sequence points exponential number obstacles lie surface different polyhedra 
established problem determining shortest path edge sequence np hard 
fig 
shows example possible shortest path edge sequence induced presence convex polyhedra 
approximation algorithms problem choi 
searching class problems cast form query answering 
collection objects preprocessing allowed find objects satisfy queries 
problem static dynamic depending database searched allowed change course query answering sessions studied modes count mode report mode 
case number objects satisfying query answered actual identity objects reported 
report mode query time algorithm consists components search time retrieval time expressed qa denotes size database function size output 
may need perform semigroup operations objects satisfy query 
instance may weights assigned object want compute 
referred semigroup range searching 
semigroup range searching problem general form semigroup operation set union get report mode range searching problem semigroup operation just addition uniform weight count mode range searching problem 
discuss semigroup range searching 
obvious algorithms handle report mode queries handle count mode queries answer 
natural expect algorithms count mode queries efficient terms order magnitude space required query time need search objects 
argued report mode range searching take advantage fact reporting takes time report search 
example know ratio sequential search linear list 
notion known filtering search 
essence objects necessary identified search mechanism followed filtering process leaving unwanted objects 
indicated count mode range searching problem harder report mode counterpart 
range searching fundamental problem database applications 
ll discuss problem algorithm dimensional space 
generalization higher dimensions straightforward known technique called multidimensional divide conquer 
set points plane ranges specified product theta 
find points intuitively want find points lie inside query rectangle specified range 
called orthogonal range searching opposed kinds range searching problems discussed half space range searching simplex range searching specified range refers orthogonal range 
discuss static case belongs class decomposable searching problems transformation techniques applied 
note range tree structure mentioned dynamic weight balanced tree called bb ff tree 
count mode queries solved locus method follows 
divide plane cells drawing horizontal vertical line point 
answer query find number points dominated points coordinates greater locating cell containing denoted dom 
answer count mode obtained simple arithmetic operations dom corners query rectangle 
northeast corner southwest corner 
answer dom gamma dom gamma dom dom 
log 
reduce space requirement expense query time goal research topic 
bentley introduced data structure called range trees structure results obtained log gamma log gamma see 
report mode queries filtering search technique space requirement reduced log log factor 
range satisfies additional conditions grounded coordinates say aspect ratio intervals specifying range fixed space needed 
instance dimensions space required linear saving log log log factor cases 
called functional approach data structures chazelle developed compression scheme reduce space requirement 
dimensions count mode range queries log gamma log gamma range queries log gamma log gamma ffl ffl 
regards lower bound range searching terms space time tradeoffs chazelle showed dimensions query time log constant space required omega gamma log log log gamma pointer machine models bound tight gamma ffl ffl 
see lower bound results related orthogonal range searching problems 
range searching problems range searching problems called simplex range searching problem half space range searching problems studied 
simplex range range boundary specified hyperplanes 
dimensions triangle 
problem lower bound query time simplex range queries denote space required omega gamma log omega gamma 
report mode half space range searching problem plane solved optimally log time space geometric duality transform 
method generalize higher dimensions 
agarwal matousek obtained general result problem bk ffl space preprocessing bk log 
half space range searching problem decomposable standard techniques applied 
general method simplex range searching notion partition tree 
search space partitioned hierarchical manner cutting hyperplanes search structure built tree structure 
cutting theorem hyperplanes matousek showed dimensions linear space search structure simplex range searching problem query time gamma optimal dimensions log factor optimal 
detailed information regarding geometric range searching see 
discussion restricted case database collection points 
may consider kinds objects line segments rectangles triangles applications may take 
inverse orthogonal range searching problem point enclosure searching problem 
consider collection isothetic rectangles 
point enclosure searching find rectangles contain query point cast problems intersection searching problem set objects query object find subset 
rectangle enclosure searching problem rectangle containment problem segment intersection searching problem lopez generalized intersection searching manner 
database collection groups objects problem find groups objects intersecting query object 
group considered intersecting query object object group intersects query object 
group object reduces ordinary searching problems 
intersection class problems arises example architectural design computer graphics architectural design objects share common region 
computer graphics known hidden line hidden surface elimination problems examples intersection problems 
class encompasses types problems intersection detection intersection computation 
intersection detection intersection detection problem form set objects intersect 
instance line segments plane intersect 
intersection detection problem lower bound omega gamma log 
dimensions problem detecting polygons vertices intersect easily solved log time red blue segment intersection algorithm 
problem reduced linear time problem detecting self intersection polygonal curve 
problem known simplicity test solved optimally linear time chazelle linear time triangulation algorithm cf 
section previous chapter 
polygons convex log suffices detecting intersect 
note detecting convex polygons intersect done logarithmic time detecting boundary convex polygons intersect requires omega gamma time 
mount investigated intersection detection simple polygons computed separator links log time don intersect 
dimensions detecting convex polyhedra intersect solved linear time hierarchical representation convex polyhedron formulating linear programming problem variables 
intersection reporting counting simplest intersecting reporting problems reporting pairwise intersection intersecting pairs line segments plane 
earlier result due bentley ottmann plane sweep technique takes log time output size 
observation line segments intersected vertical sweep line ordered coordinates intersection sweep line sweep line status maintained logarithmic time event point endpoint line segment intersection line segments 
difficult see lower bound problem omega gamma log algorithm log factor optimal 
segment intersection reporting problem solved optimally chazelle edelsbrunner important algorithm design data structuring techniques crucial combinatorial analysis 
contrast asymptotically time optimal deterministic algorithm simpler randomized algorithm obtained problem time space optimal 
requires space reported 
balaban reported deterministic algorithm solves problem optimally time space 
separate front problem finding intersecting pairs segments different sets considered 
called bi chromatic line segment intersection problem 
chazelle hereditary segment trees structure fractional cascading solved segment intersection reporting counting problems optimally log time space 
term included case reporting 
sets line segments form connected subdivisions merging overlay subdivisions computed 
see applications bichromatic intersection problem 
rectangle intersection reporting problem arises design vlsi circuitry rectangle model certain circuitry component 
rectangles isothetic sides parallel coordinate axes 
studied classical problem optimal algorithms log time reported see 
dimensional hyperrectangle intersection reporting respectively counting problem solved gamma log time space respectively time gamma log space gamma log 
gupta gave log log log log log time linear space algorithm rectangle enclosure reporting problem calls finding enclosing pairs rectangles 
intersection computation computing actual intersection basic problem efficient solutions lead better algorithms problems 
consider problem computing common intersection half planes conquer 
efficient computation intersection convex polygons required merge step 
intersection convex polygons solved efficiently plane sweep linear time advantage fact edges input polygons ordered 
observe vertical strip defined consecutive sweep lines need compute intersection trapezoids derived polygon 
problem intersecting convex polyhedra studied muller preparata gave log algorithm reducing problem problems intersection detection convex hull computation 
result easily derive log algorithm computing common intersection halfspaces dimensions divide conquer 
geometric duality concept separating plane preparata muller obtained log algorithm computing common intersection half spaces asymptotically optimal 
appears difference approach solving common intersection problem half spaces dimensions 
resorted geometric duality divide conquer 
inconsistency resolved 
chazelle combined hierarchical representation convex polyhedra geometric duality ingenious techniques obtain linear time algorithm computing intersection convex polyhedra 
result problems solved optimally common intersection half spaces dimensions solved divide conquer optimally merging voronoi diagrams plane done linear time observing relationship voronoi diagram dimensions convex hull dimensions cf 
section previous chapter medial axis simple polygon voronoi diagram vertices convex polygon solved linear time 
research issues summary covered chapter number topics computational geometry including proximity optimization planar point location geometric matching path planning searching intersection 
topics discussed previous chapter meant exhaustive 
new topics arise field continues 
section discussed problems smallest enclosing circle largest empty circle 
extremes circle empty contains points 
problem finding smallest resp 
largest circle containing resp 
points integer problem interest 
shape object limited circles 
number open problems remain 
complexity rectilinear steiner arborescence problem 
points simple polygon np complete decide exists path links length 
complexity shortest pair path problem discussed section 
fast solve geodesic minimum matching problem points presence polygonal obstacles 
solve largest empty rectangle problem rectilinear polygon log time 
best known algorithm date runs log time 
omega gamma log lower bound annulus problem 
technique applied polygonal case yield log time algorithm minimum width annulus problem 
researchers computational geometry address issues concerning actual running times algorithms robustness computations implementations exact 
understood real ram computation model implicit infinite precision arithmetic unrealistic practice 
addition robustness issue concerning accuracy output algorithm needs find new cost measure evaluate efficiency algorithm 
infinite precision model asymptotic time complexity accepted adequate cost measure 
input data finite precision representation computation time varies precision required alternative cost measure warranted 
notion degree geometric algorithm important cost measure comparing efficiency algorithms implemented 
play similar role asymptotic time complexity past real ram computation model 
applied side new efforts put development geometric software 
library geometric software including visualization tools application programs development 
website containing geometric software maintained geometry center university minnesota www geom umn edu software 
project known cgal project way researchers europe organize system library containing primitive geometric data types useful geometric algorithm developers 
concurrent leda project max planck institut fur informatik saarbrucken germany 
projects related efforts building geometric software problem solving environment include xyz see information 
defining terms ansi american national standards institute 
bisector bisector elements defined locus points equidistant instance points euclidean plane bisector perpendicular bisector line segment cutting theorem theorem states set hyperplanes parameter exists cutting size 
dimensions cutting size partition plane disjoint triangles unbounded triangle partition intersects lines triangles replaced simplices 
cutting computed nr gamma time 
decomposable searching problems searching problem query able exists efficiently computable associative commutative binary operator satisfying condition words decompose searched domain subsets find answers query subsets combine answers form solution original problem 
degree algorithm problem assume input variable arithmetic degree arithmetic degree polynomial common arithmetic degree monomials degree defined sum arithmetic degrees variables 
algorithm degree test computation involves evaluation multivariate polynomials arithmetic degree problem degree algorithm solves degree 
diameter graph distance vertices graph sum weights edges shortest path 
unweighted graph number edges shortest path 
diameter graph maximum distances possible pairs vertices 
dynamic versus static refers cases underlying problem domain subject updates 
insertions deletions 
updates permitted problem data structure said static said dynamic 
transformation data structuring technique transform static data structure dynamic 
doing performance dynamic structure exhibit certain space time tradeoffs 
see 
geometric duality transform point hyperplane preserves incidence order relation 
point dual hyperplane denoted gamma gamma hyperplane gamma dual point denoted gamma 
duality transformations 
described text called paraboloid transform 
see information 
height balanced binary search tree data structure support membership insert delete operations time logarithmic size tree 
typical example avl tree red black tree 
orthogonally convex rectilinear polygon rectilinear polygon orthogonally convex horizontal vertical segment connecting points lies totally priority queue data structure support insert delete operations time logarithmic size queue 
elements queue arranged element minimum priority queue readily available delete operation 
deletions take place queue 
delete operation done constant time 
restoring property deletion takes logarithmic time say delete operation takes logarithmic time 
heap known priority queue 
agarwal de berg matousek schwarzkopf constructing levels arrangements higher order voronoi diagrams proc 
th annual acm symp 
comput 
geometry 
agarwal edelsbrunner schwarzkopf welzl euclidean minimum spanning trees bichromatic closest pairs discrete comput 
geometry 
agarwal matousek dynamic half space range reporting applications algorithmica april 
agarwal sharir toledo applications parametric searching geometric optimization algorithms 
agarwal sharir red blue intersection detection algorithms applications motion planning collision detection siam comput 
aggarwal guibas saxe shor linear time algorithm computing voronoi diagram convex polygon discrete comput 
geometry 
aggarwal suri fast algorithms computing largest empty rectangle proc 
rd annu 
acm sympos 
comput 
geom 
aurenhammer chen lee mukhopadhyay voronoi diagrams direction sensitive distances proc 
th annu 
acm sympos 
comput 
geom 
alt schwarzkopf voronoi diagram curved objects proc 
th annual acm symp 
comput 
geometry 
alt yap algorithmic aspect motion planning tutorial part algorithms review 
amato ramos computing voronoi diagrams divide prune andconquer proc 
th annual acm symp 
comput 
geometry 
imai imai maximin location convex objects polygon related dynamic voronoi diagrams proc 
th annual acm symp 
comput 
geometry 
atallah parallel techniques computational geometry proceedings ieee sept 
atallah chen applications numbering scheme polygonal obstacles plane proc 
th int symp 
algorithms computation dec 
aurenhammer relationship gale transforms voronoi diagrams discrete appl 
math 
baird jones fortune image segmentation shape directed covers proc 
th int conf 
pattern recognition 
balaban optimal algorithm finding segments intersections proc 
th annual symp 
comput 
geometry june 
optimal algorithm closest pair maintenance proc 
th annual symp 
comput 
geometry june 
blum ravi vempala constant factor approximation algorithm mst problem proc 
th symp 
theory comput may 

boissonnat sharir voronoi diagrams higher dimensions certain polyhedra distance functions proc 
th annual acm symp 
comput 
geometry 
callahan kosaraju algorithms dynamic closest pair body potential fields proc 
th acm siam symp 
discrete algorithms 
chazelle functional approach data structures multidimensional searching siam computing june 
chazelle lower bounds orthogonal range searching reporting case acm april 
chazelle lower bounds orthogonal range searching ii arithmetic model acm july 
chazelle cutting hyperplanes divide conquer discrete comput 
geometry 
chazelle optimal algorithm intersecting dimensional convex polyhedra siam comput 
chazelle dobkin intersection convex objects dimensions acm 
chazelle edelsbrunner optimal algorithm intersecting line segments plane acm 
chazelle edelsbrunner guibas sharir diameter width closest line pair parametric searching discrete computational geometry 
chazelle edelsbrunner guibas sharir algorithms bichromatic line segment problems polyhedral terrains algorithmica feb 
chazelle friedman point location hyperplanes unidirectional comput 
geom 
theory appl 
chen 
tu shortest path queries weighted obstacles rectilinear plane proc 
th annual acm symp 
comput 
geometry june 
chen han shortest paths polyhedron part computing shortest paths int comput 
geometry applications 

chiang tamassia dynamic algorithms computational geometry proceedings ieee sept 
choi sellen yap approximate euclidean shortest path space proc 
th symp 
computational geometry 
clarkson shor applications random sampling computational geometry ii discrete computational geometry 
daniels milenkovic roth finding largest area axis parallel rectangle polygon computational geometry theory appl jan 
de berg van kreveld overmars schwarzkopf computational geometry algorithms applications springer verlag 
dehne klein big sweep power wavefront approach voronoi diagrams algorithmica jan 
dorward object space hidden surface removal int computational geometry applications sept 
du hwang computing euclidean geometry eds world scientific publishing singapore 
duncan goodrich ramos efficient approximation optimization algorithms computational metrology proc 
th acm siam symp 
discrete algorithms 
dwyer eddy maximal empty ellipsoids proc 
th acm siam symp 
discrete algorithms 
edelsbrunner algorithms combinatorial geometry springer verlag 
edelsbrunner union balls dual shape proc 
th annual acm symp 
comput 
geometry 
edelsbrunner sharir hyperplane incidence problem applications counting distances applied geometry discrete mathematics 
victor klee festschrift ed sturmfels dimacs series discrete mathematics theoretical computer science 
efrat sharir near linear algorithm planar segment center problem proc 
th acm siam symp 
discrete algorithms 
eppstein fast construction planar centers proc 
th annu 
acm siam symp 
discrete alg 
fabri giezeman kettner schirra cgal kernel basis geometric computation applied computational geometry lin manocha eds 
springer verlag 
andk 
hinrichs overlaying simply connected planar subdivision linear time proc 
th annu 
acm sympos 
comput 
geom 
garcia lopez ramos fitting set points circle proc 
th annu 
acm sympos 
comput 
geom 
garg hochbaum log approximation algorithm minimum spanning tree problem plane proc 
th symp 
theory comput may 
ghosh mount output sensitive algorithm computing visibility graphs siam comput 
oct 
goodman rourke eds 
handbook discrete computational geometry crc press llc boca raton fl 
gupta smid dasgupta rectangle enclosure problems revisited proc 
th annu 
acm sympos 
comput 
geom 

hershberger suri efficient computation euclidean shortest paths plane th symp 
foundations computer science 
hershberger suri finding shortest diagonal simple polygon linear time computational geometry theory applications feb 
ho chang lee wong minimum spanning tree related problems siam comput october 
hwang foreword algorithmica 
imai imai minimax geometric fitting corresponding sets points proc 
th annual acm symp 
comput 
geometry 
lopez generalized intersection searching problems int comput 
geom 
appl march 
kapoor smid new techniques exact approximate dynamic problems siam computing aug 
kleitman linear time algorithm generalized matrix searching siam discrete math feb 
lee dimensional voronoi diagrams metric acm 
lee computational geometry computer science engineering handbook ed 
tucker crc press 
lee geometric algorithm visualization current status applied computational geometry lin manocha eds 
springer verlag 
lee preparata computational geometry survey ieee trans 
comput 
dec 
lee shen steiner minimal tree problem geometry plane proc 
th int symposium algorithms computation osaka japan dec 
lee wu multiplicative weighted farthest neighbor voronoi diagrams plane proc 
int workshop discrete mathematics algorithms hong kong dec 
lee yang wong rectilinear paths rectilinear obstacles perspectives discrete applied math ed 
lengauer combinatorial algorithms integrated circuit layout john wiley sons 
preparata tamassia robust proximity queries illustration degree driven algorithm design proc 
th annual acm symp 
comput 
geometry 
marcotte suri fast matching algorithms points polygon siam comput june 
matousek geometric range searching acm computing survey 
mitchell shortest paths obstacles plane int computational geometry applications sept 
mitchell papadimitriou weighted region problem finding shortest paths weighted planar subdivision acm jan 
mitchell arkin computing shortest link path polygon proc 
rd annual symp 
foundations comput 
sci oct 
mitchell rote minimum link path obstacles planes algorithmica 
mount intersection detection separators simple polygons proc 
th annual acm symp 
comput 
geometry leda library efficient data types algorithms max fur informatik www mpi sb mpg de leda leda html 
okabe boots sugihara spatial tessellations concepts applications voronoi diagrams john wiley sons chichester england 
papadimitriou steiglitz combinatorial optimization algorithms complexity prentice hall cliffs nj 
pairs non crossing shortest paths simple polygon proc 
th int symp 
algorithms computation dec 
lee efficient computation geodesic voronoi diagram points simple polygon algorithmica appear 
preparata shamos computational geometry springerverlag 
ravi sundaram marathe rosenkrantz ravi spanning trees short small siam discrete math may order voronoi diagrams sites additive weights plane algorithmica 
sack urrutia handbook computational geometry elsevier sci 
publishers amsterdam 
multiplicatively weighted crystal growth voronoi diagrams proc 
th annual acm symp 
comput 
geometry 
higher dimensional voronoi diagrams convex distance functions proc 
th canad 
conf 
comput 
geometry 
schwartz smid snoeyink optimal algorithm line problem algorithmica july 
yap probing near centers estimating relative roundness proc 
asme workshop metrology 
suri link distance problems simple polygon ieee trans 
robotics automation 
swanson lee wu optimal algorithm roundness determination convex polygons comput 
geometry theory appl nov 
vaidya space time tradeoffs orthogonal range queries siam computing august 
vaidya geometry helps matching siam computing dec 
welzl smallest enclosing disks balls ellipsoids new results new trends computer science maurer ed lncs vol 
springer verlag 
yang lee wong rectilinear path problems rectilinear obstacles revisited siam computing june 
yao computational geometry handbook theoretical computer science vol 
algorithms complexity van leeuwen ed 
yap exact computational geometry snapshots computational discrete geometry avis bose eds school comput 
sci mcgill university 
information additional various variations closest pair problems 
additional results concerning voronoi diagrams higher dimensions duality transformation see 
information voronoi diagrams sites points various distance functions norms see 
textbook de berg contains nice treatment computational geometry general 
information reader interested parallel computational geometry referred 
current research activities results reader may consult proceedings annual acm symposium computational geometry journals discrete computational geometry international journal computational geometry applications computational geometry theory applications 
ftp site pub geometry tar gz ftp cs ca contains close entries bibliography field 
interested implementations information available software consult www geom umn edu software 
www page geometry action maintained david eppstein www ics uci edu eppstein geom html computational geometry page erickson www cs duke edu give comprehensive description research activities computational geometry 
