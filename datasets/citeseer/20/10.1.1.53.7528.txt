meta case game worth candle ter hofstede verhoef department information systems id research university nijmegen toernooiveld nl nl ed nijmegen netherlands netherlands mail nl mail arthur cs kun nl published ter hofstede verhoef 
meta case game worth candle 
information systems journal 
current generation case tools inflexible provide adequate modelling support 
proposed solutions problem development called case shells 
case shell method independent case tool may instantiated specific method case tool supporting method 
case shell provides complete flexibility 
address benefits case shells completely clear focuses feasibility concept theoretical practical point view 
keywords computer aided software engineering case meta modelling early phases case shell nowadays case tools indispensable part systems engineer toolkit common practice 
believed case tools important contributors continuing development information systems development methods see fitzgerald bubenko martin engineering methods introduced characterised coherent integrated set techniques covering complete development process 
methods depend availability automated tools manual verification required consistency various specifications difficult 
butler cox yourdon techniques entity relationship diagrams dataflow diagrams structured english described tedious time consuming impractical supported automated tools 
nowadays commonly accepted early phases systems development determine success resulting system large extent 
early phases considered bottleneck systems development acquisition requirements notoriously difficult 
furthermore known fact development process error detected expensive correct see dunn davis 
adequate support phases imperative 
case tools supporting early phases systems development referred upper case tools 
upper case tools tend strongly product oriented confirmed study studies dutch users case tools concluded tools mainly documentation verification purposes 
model constructed specified automated tool verified 
suspect limited usage largely due design tools paying appropriate attention information engineer modelling needs 
undoubtedly automated tools support consistency development process bubenko floyd identify danger unsuitable methods bubenko floyd 
guidelines perform various tasks perform modelling process determine specification quality part automated tools 
naturally range required facilities thoroughly understood automated tools see benyon environment automated proposed supporting information engineer suitable techniques depending current situation 
case tools problem view information systems development life cycle supported hard coded tools changed customised include knowledge information engineers practical experience 
consequence information engineers left problem finding way applying rigid inflexible tools information engineering practice 
term flexibility refers extent information engineers able adapt tool working style 
vessey philosophies method support distinguished restrictive guided flexible 
meaning philosophies introduced informal way analogous terms enforcement encouragement complete freedom 
approach vessey corresponds strict categorisation levels flexibility 
flexibility corresponds view continuous spectrum levels adaptability focus particular values flexibility 
mid onwards research focused problem developing flexible case tools 
claimed automated tools preferably built case shell architecture 
architecture allows modification extension tool behaviour tool includes explicit adaptable method knowledge 
consequence information engineers able adapt support tools working styles way 
crucial development case shell availability suitable formally defined technique representation method knowledge 
technique referred meta modelling technique 
method knowledge represented case shell technique called meta model concept case shell new 
commercial products software virtual software factory meta software academic products sorenson chen nunamaker jr claim generate case tools tailored specific methods organisations 
tool supports modification meta models exists metaedit 
shells focus support modelling techniques hardly pay attention modelling process importance stressed knuth potts mayr 
furthermore degree support modelling techniques offer limited due low expressive power meta modelling techniques 
focus feasibility flexible support information modelling early phases feasibility case shells 
flexible support course considered feasible benefits outweigh realisation effort 
benefits clear feasibility study focuses effort needed realise adequate flexible support 
acquire insight effort needed necessary know complexity information engineers modelling knowledge early phases 
fundamental research questions need addressed dimensions exist modelling knowledge 
complex modelling dimensions 
diversity needed modelling dimensions support individual information engineers 
section focus various aspects information modelling relations essential flexible support 
section addresses research question 
respect second research question remarked early phases systems development poorly understood cf 
guindon curtis 
activities stages characterised incompleteness vagueness belady terminology fuzzy standardised 
prerequisite dealing research question language information modelling concepts adequately expressed adequate meta modelling technique 
state art meta modelling techniques described araujo ca fully suited purpose 
sufficient expressive power capture information modelling concepts relations concepts tend neglect modelling process 
addition rarely formal semantics tend add current confusion respect information modelling see hofstede weide 
section techniques described capable formally describing aspects described section 
focus section techniques inherent complexity adequate meta modelling technique 
respect third research question remarked relatively little known diversity information modelling processes practice corresponding degree flexibility needed adequate support 
empirical studies reported literature guindon guindon dker show information modelling knowledge applied experienced information engineers turns deviate modelling knowledge described textbooks regarding modelling concepts way models concepts constructed 
studies served starting point experiments described section focused closely precise behaviour information modelling experts degree flexibility needed adequate support 
section findings previous sections summarised feasibility adequate flexible support information modelling processes early phases addressed 
question arises concept case shell realistic goal inherent complexity adequate meta modelling technique desired degree flexibility 
words game worth candle 
view information modelling information modelling processes looked different perspectives depending underlying goal 
management point view resources deadlines quality requirements important 
collaboration perspective focus communication individuals groups 
goal investigation feasibility flexible support knowledge information modelling processes supported important 
knowledge reflected flexible information modelling support environments 
section addresses view information modelling exploring structure repository case shell 
essentially orthogonal dimensions recognised repository 
elementary form structure repository case shell represented theta theta cube see 
dimensions discussed subsequently 
dichotomy method level versus application level referred types versus instances method level concerned knowledge may information engineers 
method level controls ways information modelling processes may performed defines products may result information modelling processes 
product process method application conceptual graphic information modelling dimensions application level concerned information results projects specific organisations applications specific group information engineers 
application level instantiation method level 
example data flow diagramming technique part method level development specific data flow diagram specific project setting part application level 
second dimension process versus product order provide information modelling support necessary knowledge intermediary products relationships hand underlying modelling process hand 
words questions produced produced answered 
process side referred way working product side referred way modelling knowledge information modelling processes structured key concepts 
necessary know tasks may performed part information modelling process 
tasks large tasks perform business area analysis information engineering method minor tasks add total role constraint information structure diagram niam method nijssen halpin halpin orlowska 
examples show decomposition key concept tasks may decomposed subtasks 
knowledge information modelling processes concerns flow control tasks may performed 
knowledge information modelling products shows structure relationships information modelling products 
examples information modelling products list requirements create read delete matrix cardinality constraint organisation hierarchy 
examples structure relationships attribute types belong entity types organisation hierarchies consist organisation units 
clear dichotomy product versus process dichotomy strict separation 
contrary knowledge information modelling processes knowledge information modelling products strongly interwoven 
example product entity relationship diagram satisfy constraints information modelling process proceeds 
earlier stages draft version erd suffices containing entity types relationship types 
stages strong syntactic rules apply 
example entity types related attribute types added 
illustrate relationship product oriented knowledge process oriented knowledge task part modelling process lead change modelling product 
completes discussion second dimension 
clear dimen sions discussed far orthogonal knowledge information modelling processes knowledge information modelling products exist method level application level 
clarify may specified method level tasks performed select manager interview session ii interview manager result iii refine organisation model 
tasks may succeeded decision iv organisation model desired level detail triggers task outcome negative leads continuation outcome positive 
correspondingly execution tasks specific project application level may lead dozens specific interviews specific model refinements 
analogously notion entity type method level may lead instances application level customer article 
third dichotomy concerns difference conceptual graphical knowledge 
evidently models represented way diagrams matrices tables lists program specifications examples 
clear distinction modelling concepts external notation 
sutcliffe argued methods allow alternative equivalent notations modelling concept hand similar graphical textual topologies represent different types modelling concepts 
similar argumentation valid process oriented view information modelling 
looks commercially available case tools observes different ways model manipulation example entities created entity relationship diagrams 
iew action erd window suffices create entity 
menu selection performed point location preferred 
third distinction particularly important case shells 
way specified models appear screen actions performed represented models 
furthermore specification graphical knowledge allows information engineers change user interface tools preferences 
clear third axis orthogonal relation previous ones 
knowledge information modelling processes information modelling products graphical counterparts 
modelling concepts data flows organisation units related graphical notions arrows boxes 
tasks additions model components lead graphical interaction patterns menu selections object clicking dragging 
complexity meta modelling meta modelling technique technique modelling knowledge expressed 
meta modelling technique capable capturing various perspectives information modelling described previous section 
implies meta modelling technique sufficient expressive power requirements meta modelling techniques fulfil 
meta model ambiguous meta modelling technique formally defined syntax semantics see hofstede weide 
implementation details meta models need validated modelling experts modelling knowledge going captured meta models meta modelling technique support construction comprehensible meta models offer graphical representations decomposition mechanisms 
case shell needs instantiated particular meta model concrete case tool meta models executable 
section partial meta modelling techniques various perspectives information modelling outlined 
stated goal section stress inherent complexity meta modelling provide depth treatment various techniques 
section reflects view information modelling previous section 
section concerns representation product oriented knowledge section concerns representation process oriented knowledge 
sections restricted conceptual knowledge 
section deals graphical knowledge 
representing way modelling modelling techniques general contain concepts complex structures models usually satisfy quite complex rules 
capture structures rules powerful data modelling technique required powerful constraint modelling technique 
section data modelling technique psm constraint modelling language highlighted 
predicator set modelling technique psm specifically defined representation complex structures needed meta modelling mind 
psm defined hofstede weide lisa hofstede elementary notions object type relationship role addressed 
subsequently necessity complex objects object inheritance illustrated meta modelling problems 
attention paid constraints represent complex rules product knowledge 
object types relationship types roles entity type attribute identified identifies identification niam relationship type key concepts data modelling concept relationship type 
er niam relationship type considered association object types graphical representation binary relationship type identification object types entity type attribute shown niam style corresponding er diagram depicted 
relationship type consists number roles denote way object types participate relationship type 
example identification role names identifies identified 
entity type attribute identified identifies identification er relationship type psm relationship type considered set roles 
relationship type may treated object type play role relationship types 
object composition knowledge information modelling products characterised structured complex way 
example information modelling product entity relationship diagram consists large variety information model components 
describe composition relationships modelling concepts psm offers representation mechanisms object composition set types sequence types schema types 
instance set type set instances element type 
simple example set types context meta modelling consider total role constraint niam 
example constraint depicted 
sample total role constraint niam total role constraint represented circle black dot requires instance entity type participate roles syntactically total role constraint set roles 
total role constraints identification roles 
meta model niam total role constraint modelled set type having object type role element type see 
role total example set type context meta model niam sequence types compared set types 
differences case sequence types ordering elements important elements may occur 
instance sequence type sequence tuple instances element type 
example sequence type context meta modelling consider jsd entity structure diagrams see 
diagrams allow representation action iterations graphically represented asterisk choices actions graphically represented tiny circle sequences actions 
represent jsd product knowledge meta model concept sequence type necessary 
represents part meta model jsd entity structure diagrams 
meta model captures fact action decomposed customer invest customer body terminate movement pay withdraw example jsd entity structure diagram action name action sequence may choose example sequence type context meta model jsd sequence actions repetition action choice number actions 
third complex representation mechanism psm schema 
schema allows define part schema object type referred schema type 
schema seen decomposition mechanism 
instance schema type instantiation associated schema part 
example schema type consider meta model activity graphs shown 
activity graphs bipartite directed graphs consisting activities states 
states input output activities compared flows 
states activities decomposed activity graphs 
shows concept schema type represent meta model activity graphs 
activity graph schema type decomposition relation reflected binary relationships activity state 
schema types particularly important meta modelling allow natural representation decomposition constructs modelling techniques 
importance schema types stressed term window type 
activity graph activity name state name input output input output example schema type context meta model activity graphs object inheritance psm offers representation mechanisms representation inheritance properties modelling concepts specialisation generalisation 
specialisation referred subtyping mechanism representing possibly overlapping subtypes object type 
intuitively specialisation relation subtype supertype implies instances subtype instances supertype 
specialisation relations organised called specialisation hierarchies 
top specialisation hierarchy referred identification subtypes derived supertypes object types inherit properties ancestors specialisation hierarchy 
objective automation objective competition improvement financial control objective product change example specialisation hierarchy shows specialisation hierarchy 
specialisation relation represented arrow 
consequence object type product change objective 
specialisation useful context meta modelling allows definition specific subsets instances certain object types specific relations important 
terms previous example possible financial control objectives specific relationships relevant irrelevant types objectives 
generalisation mechanism allows creation new object types uniting existing object types 
generalisation typically required generalised object type covered constituent object types specifiers 
furthermore properties inherited upward generalisation hierarchy downward case specialisation 
implies identification generalised object type depends identification specifiers 
formula variable example generalisation example generalisation shown 
dashed arrows indicate object type formula generalisation object type variable relationship type 
formula may single variable constructed function say simpler formulas 
generalisation essential meta modelling provides way construct recursive types formula previous example 
recursive types frequently occur modelling documents reports context meta modelling 
constraints psm offers number graphical constraint types representation rules hold modelling products 
examples meta model yourdon 
meta model demonstrates need type construction mechanisms psm 
dfd concepts appear meta model clarified 
yourdon dfd pictures system network functional processes 
main components dfd processes flows data stores terminators 
process transforms input output 
processes process specification decomposed dfd 
process number 
control processes special kind process 
control process process data coordinates processes 
operation control process modelled means state transition diagram 
terminators represent external processes communicating system consideration 
data stores model collections data rest 
data stores may external means communication outside world 
flows represent data motion 
types flows exist 
simple flow source destination 
processes data stores terminators source destination simple flows 
complex flow consists set flows converging flow flow diverging set flows 
control flows represent triggers signals interrupts 
produces output consumes datastore ation process number terminator name dfd dataflow controlflow higherlevel group diagram triggers lowerlevel flow meta model yourdon graphical constraints meta model deserve explanation 
explain graphical constraints 
total role constraint role named attached object type dfd element represented black dot expresses instance object type name 
exclusion constraints attached binary relationship types represented encircled crosses express source destination data flow different source destination control flow different 
uniqueness constraints relationship types represented encircled express data flows name dfd object destination data flows name dfd object source 
occurrence frequency constraint role role name relates lower level represented encircled text expresses data flow related data flows lower decomposition level 
exclusion constraint attached set type flow group states data flow occur flow group 
course constraints fulfilled 
constraints complex expressed graphical constraint types offered psm 
noticed strive expressing complex constraints graphically decrease comprehensibility meta model consideration 
provides example meta model grasped spite fact minority constraints applicable represented graphically 
language lisa introduced representation constraints graphically expressed psm 
fact data flow terminator source destination formulated lisa follows produces data flow input terminator lisa expressions exploit natural language basis psm improve comprehensibility 
names defined associated psm schema number predefined keywords description meaningful connections 
example shows predefined keyword connection object names role names 
meta models complex constraints occur 
dfd meta model example recursive decomposition processes allowed 
lisa offers powerful constructions expression complex constraints 
recursive decomposition requirement formulated follows object type repetition supertype object type representing way working section addresses constructs representation way working 
stated section way modelling way working closely related 
attention paid representation relationships way modelling way working 
represent knowledge information modelling processes adequately constructs needed allow description moments choice sequence parallelism synchronisation iteration 
task structures formally defined hofstede contain constructs expressing task dependencies 
main concepts task structures graphically represented 
discussed subsequently 
central notion task structures notion task task defined performed order achieve certain goal realisation part information modelling product 
task defined terms tasks referred subtasks decomposition may performed repeatedly desired level detail reached 
tasks name decomposition tasks named 
performing task may involve choices subtasks decisions represent moments choice 
decisions coordinate execution tasks 
kinds decisions distinguished terminating non terminating decisions 
decision terminating may lead termination execution path decision 
execution path active execution path supertask supertask terminates 
triggers graphically represented arrows model sequential order 
task name start termination top task named initial items tasks decisions performed part execution task decomposition 
due iterative structures may clear task objects initial 
indicated explicitly 
deal explicit synchronisation 
task named start tasks names terminated 
concrete example task structure consider 
task structure models way working yourdon method yourdon structure self explanatory 
decomposition task perform database conversion necessary shown 
decomposition follows database conversion performed current database exists 
decomposition initial item trigger synchroniser task non terminating decision terminating decision graphical representation task structure concepts remarked section knowledge information modelling processes knowledge information modelling products highly interwoven 
tasks example may change products pass intermediate results 
decisions hand may influenced intermediate results product changes 
techniques way modelling considered data modelling techniques techniques way working process modelling techniques integration poses identical problems integration data process modelling techniques 
context meta modelling constructs elementary model changes passing intermediate results specification pre postconditions decision rules needed 
example elementary model product change addition process dfd amount creation instance entity type process dfd meta model 
example information passing context meta modelling shown 
task select control process decomposed selects control process passed task decompose control process 
buffer name control process decomposed contains control processes order produced selection task 
buffer contains ordered sequence values necessary meta model tasks depicted performed concurrently 
local variable contain value time known task associated decomposition tasks performed sequentially 
constraints specified lisa pre postcondition decision rule 
remarked section information modelling products satisfy different requirements different stages modelling process 
formally specified pre postconditions 
decision rules applied support decisions formal nature survey perform database conversion necessary analysis procedure description acceptance test generation design implementation quality assurance installation example task structure database conversion current database exist 
perform database conversion necessary decomposition task perform database conversion necessary control processes decomposed 
decision current database exist shown obviously formally supported 
control process decomposed create dfd select control process decomposed decompose control process passing intermediate results representing graphical knowledge far focus solely conceptual aspect meta modelling 
modelling notions important interrelated circumstances may changed 
support information modelling processes adequately knowledge suffice see view information modelling section 
necessary able capture representations modelling concepts 
consider example meta model 
meta model capture fact process represented circle terminator rectangle 
mapping conceptual notions corresponding graphical representations required see 
mapping conceptual notions graphical representations partial conceptual notion graphical counterpart 
furthermore instances conceptual notion different graphical representation depending specific conditions 
data flow example represented line outgoing flow formally plays role output represented arrow incoming flow formally plays role input see 
time graphical representation may representation conceptual object types 
systems development method sadt arrow illustrative example may represent input flows output flows control flows called resource flows 
addition aforementioned mapping necessary able impose additional constraints graphical representations 
example number process appears circle representing process 
hofstede hofstede technique described kinds constraints formally expressed 
technique uses lisa information descriptors relate instances specific requirements imposed 
number constraint types subsequently applied information descriptors 
aforementioned requirement example formulated inside process number terminator process data store control flow data flow name number string decimal string 
mapping conceptual notions corresponding graphical representations representation diverging converging flows definition graphical constraints complex matter 
example specifies constraint hold specific cases example terms theta theta cube method level 
enforce constraint knowledge needed precise positions graphical object instances represent instances conceptual object types process number 
example shows necessary knowledge large number graphical properties graphical object instances size position angle 
dive river complexity definition graphical constraints requires called handles identify certain specific parts graphical object 
sadt example may serve illustration 
sadt meaning arrow head depends connected top bottom box 
case arrow head represents control flow case represents called mechanism 
connect control flow box top box may 
top box considered different handle bottom box 
context consider representation diverging converging flows see 
able connect various parts flows properly handle names necessary 
handle names flows depicted 
constraint enforces incoming flows diverging flow start flow handle flow handle handle names concerning flows enforcing proper representation handles outgoing flow see 
handle vector data flow output connected group flow group containing data flow flow handle flow handle intuitively constraint states vector distance proper handles incoming flows handle related outgoing flow equal vector 
area knowledge addressed context meta modelling dynamic side representation graphical knowledge 
representation graphical actions completely ignored 
issue quite complex requires adequate integration static representation aspects modelling concepts underlying conceptual process oriented view 
example consider sequence graphical actions selection menu option delete ii selection process collect payments 
actions lead removal graphical representation specific process lead conceptual removal process lead removal connected data flows graphical representations depending constraints specified 
remarked graphical action consequences conceptual view 
consider example action process representations enlarged reduced action changes position process representation action selects menu option 
time deliberately term flavour 
offer coherent toolkit adequate representation modelling knowledge representation mechanisms required see hofstede offers complete formal definitions representation mechanisms conceptual part cube 
formal definitions representation mechanisms graphical product oriented part cube hofstede hofstede diversity information modelling section focuses second research question dealt 
deals flexible support information modelling processes course necessary know flexibility needed words know manner extent information modelling processes deviate 
stated little attention paid literature differences similarities information modelling processes 
section discusses approach getting insight information modelling processes practice discusses insight gained 
detailed discussion approach results see verhoef approach achieve insight individual information modelling processes observed behaviour information engineers practice 
structure observation process developed approach acquisition information modelling knowledge starting points 
starting points arise observation situational factors may influence course information modelling processes 
main factors target domain including nature complexity users participating information modelling processes information engineers including educational background cognitive style level expertise methods techniques information engineers 
approach determined need find balance conflicting requirements control situational factors possible insight gained generic nature observe information modelling processes performed natural laboratory environment insight gained realistic nature 
approach furthermore determined need point 
henceforth information modelling knowledge represented applied practice applied underlying development method 
third decision determining approach observe experienced information engineers 
decision influenced fact experienced information engineers may deviate modelling knowledge prescribed underlying development method larger extent novice information engineers 
involvement experienced information engineers provide clues nature deviations involvement novice information engineers 
known fact stems field expert systems 
starting points discuss choice development method setting observatory experiments practice 
choice development method criteria apply method support early stages development life cycle ii literature method available represent prescribed modelling knowledge book iii method applied widely represent applied modelling knowledge 
criteria supported choice yourdon method yourdon modelling knowledge acquisition approach aims acquiring detailed understanding particular applied modelling knowledge 
approach consists tasks preparation elicitation conceptualisation interpretation see 
task concerns technical organisational preparations preparation experienced practitioners involved modelling task perform 
elicitation modelling knowledge takes places expert information engineer performing modelling task context real life case 
elicitation session expert encouraged think aloud 
communication processes expert users restricted personal computers verbal communication video exchanging diagrams see 
elicitation task results protocol transcript contains verbal data diagrams 
specific textual fragments protocol transcript marked interpretation task decision modelling concept modelling preparation elicitation interpretation conceptualisation information needed 
detailed insight achieved 
approach acquisition modelling knowledge task 
resulting text model transformed meta model conceptualisation task 
approach developed general purpose see refined purpose verhoef observation study involved expert information engineers 
selection experts taken place number requirements 
experts years professional experience field information modelling proficient yourdon approach 
managers consider experienced competent experienced variety application domains 
performed modelling tasks duration days involving different real life cases 
cases selected criteria 
case representative sense specifications informal ambiguous incomplete 
realistic case organisation involved departments organisation involved non trivial problem requires solving 
problem owners able available whilst information modelling task dealt 
particulars real life cases verhoef modelling knowledge sessions taken place experimental setting 
modelling knowledge acquisition approach applied times resulting protocol transcripts 
interpretation task led text models transformed meta models 
additionally modelling knowledge prescribed yourdon method handbook yourdon represented order compare individual experts stick 
results detail verhoef verhoef yourdon meta model applied typist typist user information engineer knowledge engineer technical support video video tv tv pc pc connection video connection whiteboard expert room user room protocol setting meta models applied respectively 
section summarises main observations 
results section discusses insights gained prescribed applied modelling knowledge meta models 
focus early stages emphasis dataflow diagrams entity relationship diagrams product oriented view modelling knowledge yourdon constructing essential model viewing yourdon modelling knowledge process oriented perspective 
product oriented perspective focusing way modelling yourdon main modelling concepts similar model type variants 
example erd consists entity types relationships 
consist processes data stores flows 
main modelling concepts similar observed time model type variant modelling concepts 
comparing prescribed model type variants applied ones observed prescribed modelling concepts complex data flow associative object type applied 
time experienced information engineers refined modelling concepts examples customer supplier external party planning control preparation transformation termination processes just processes 
applied model type variants contain concepts serve communication purposes sample value provide quantitative information frequency volume 
addition modelling concepts experts particular create mental model organisational aspects problem analysis stage 
non diagramming concepts applied ways modelling 
typical examples problem cause organisation unit information need requirement 
observed different graphical notations denote modelling concept 
external notations modelling concept relationship seen 
information engineers different graphical notations knowledge acquisition session 
clearly choice fixed set graphical notations considered matter relevance problem analysis stage 
process oriented perspective consecutive modelling tasks gradually lead structured models prescribed way working applied ways working 
course modelling processes refined modelling concepts intermediate models satisfy growing number verification rules 
nature modelling tasks changes free structured 
applied ways working differ book large extent regard order modelling tasks performed 
prescribed way working characterised strictly linear order modelling tasks 
actual application shows opportunistic order determined characteristics problem domain problem hand expert preferences 
information engineers reformulated approach times course knowledge acquisition sessions 
cases scheduled number tasks performed advance 
cases stated preferred pay attention specific part problem domain usually fill clear insights problem domain 
momentary needs strongly influenced order modelling techniques 
modelling techniques means increase insight communicate insights problem domain specific solution scenario 
experts showed individual ways working 
clearly demonstrated relative dominance data modelling process modelling 
applied ways working characterised data driven process driven third shows equilibrium 
various process modelling strategies applied input driven process modelling output driven process modelling data driven process modelling 
input driven point view processes handle events lead processes 
output driven point view processes result fulfilling information needs processes necessary deliver input processes 
data driven point view processes manipulate data create read delete instances entity types relationships attributes 
various data modelling strategies applied noun driven data modelling object driven data modelling process driven data modelling 
noun driven strategy noun description considered candidate entity 
object driven strategy objects real world related 
object questioned necessity storing information 
process driven strategy investigates operating process entity types integrates resulting partial data models 
final observation experts incorporated user participation essential ingredient ways working 
validated results respect correctness completeness 
focussed comprehensibility intermediate information models adding sample values quantitative data 
epilogue stressed feasibility flexible information modelling support dependent number modelling dimensions complexity information modelling early phases extent flexibility needed phases 
modelling dimensions exist complex information modelling diverse information modelling processes practice effort needed realise flexible information modelling support feasible goal section dealt research question 
orthogonal modelling dimensions identified capturing information engineers modelling knowledge early stages method versus application product versus process graphical versus conceptual 
section dealt second research question demonstrated inherent complexity meta modelling technique capable describing relevant aspects defined section information modelling methods 
information modelling products general quite complex due decomposition mechanisms complex structures complex rules 
addition rules information modelling products syntax satisfy formal meaning semantics described 
case data model means meta model capture instantiations satisfy constraints specified case process model means possible process executions defined meta level 
information modelling processes may quite complex modelling tasks may performed parallel 
furthermore formal complete description precise effect information modelling processes may various products vice versa turns difficult 
information modelling processes products approached conceptual point view representational point view 
information modelling products may complex associated representations information modelling processes may complex associated graphical interactions 
relation conceptual part meta model representational part essential flexible support hardly investigated 
section dealt third research question demonstrated inherent diversity information modelling early phases 
ways modelling ways working applied observed experienced information engineers differ large extent 
information engineer uses rules heuristics graphical representations 
means adequate flexible support meta models constructed individual information engineer 
clearly feasible especially capturing method followed experienced information engineer turns time consuming difficult task 
elicitation sessions led voluminous text protocols including pages text diagrams went stages 
due bulky text protocols interpretation task conceptualisation task time intensive knowledge engineer 
observation reinforced fact information engineers way working represented low level granularity 
sake diminishing specification effort knowledge engineer decided represent level manipulating individual objects 
representations capture level diagrams going stages 
specification effort problems may partially solved ambitious 
achieve flexible support necessary find adequate way decrease level ambition whilst approaching area 
precise necessary diminish specification effort effectively 
easiest satisfactory approach neglect aspects information modelling knowledge words modelling dimensions trade parameters 
example paying attention modelling process paying attention representational aspects 
approach development state art meta modelling techniques mentioned section 
techniques address modelling process 
verhoef modelling process addressed 
neglects representational aspects information modelling 
examples modelling dimensions trade parameters ambitious regard level consistency modelling products allow small number graphical representations describe modelling process levels decomposition 
promising approach exchange complete freedom controlled flexibility 
specifying knowledge base provided pre specified generic meta model may adapted needs application number pre defined meta model transformations 
promising approach reduce large specification effort triggered observation detailed way working information engineers difficult acquire requires lot effort describe 
best try support level details 
alternative support achieved offering number predefined operations 
consider building block approach interesting issue research 
summarising clear unrestricted adequate flexible support information modelling practically speaking impossible achieve 
restrictions complete graphical support needed may perfectly acceptable 
balance benefits efforts flexible information modelling support research agenda centered level ambition realised 
game worth candle depends choice ambition level 
authors anonymous referees suggestions improved 
araujo ca araujo ca 
issues case 
sutcliffe editors proceedings third workshop generation case tools pages manchester united kingdom 
fitzgerald fitzgerald 
information systems development methodologies techniques tools 
blackwell scientific publications oxford united kingdom 

experimental view design process 
rouse editors system design behavioral perspectives designers tools organizations pages amsterdam netherlands 
north holland 
dker dker 
structured analysis design organizational context 
acm transactions information systems 
belady belady 
mcc planning revolution software 
ieee software 
benyon benyon 
tool kit systems analyst 
computer journal 
bubenko dahl gustafsson johansson 
case shell implementation specific case tools 
technical report stockholm sweden 
draft contribution section report 

formalisation information systems modelling 
phd thesis university nijmegen nijmegen netherlands 
bubenko bubenko 
information system methodologies research view 
olle sol stuart editors information systems design methodologies improving practice pages 
north holland amsterdam netherlands 
bubenko bubenko 
selecting strategy computer aided software engineering case 
technical report university stockholm stockholm sweden 
butler cox butler cox 
system development knowledge 
technical report butler cox foundation london united kingdom 
chen nunamaker jr chen nunamaker jr integrated environment organization information systems development 
henderson editors proceedings tenth international conference information systems pages boston massachusetts december 
davis davis 
software requirements analysis specification 
prentice hall englewood cliffs new jersey 
dunn dunn 
software defect removal 
mcgraw hill new york new york 
floyd floyd 
comparative evaluation system development methods 
olle sol stuart editors information systems design methodologies improving practice pages 
north holland amsterdam netherlands 
guindon curtis guindon curtis 
control cognitive processes software design tools needed 
proceedings conference human factors computing systems chi pages 
guindon guindon 
designing design process exploiting opportunistic thoughts 
human computer interaction 
guindon guindon 
knowledge exploited experts software system design 
international journal man machine studies 
halpin orlowska halpin orlowska 
fact oriented modelling data analysis 
journal information systems april 

model information systems development 
lyytinen editors proceedings ifip wg working conference impact computer supported technologies information systems development pages minneapolis 
hofstede ter hofstede 
task structure semantics process algebra 
software engineering journal january 
hofstede weide ter hofstede th van der weide 
formalisation techniques chopping methodology jungle 
information software technology january 
hofstede weide ter hofstede th van der weide 
expressiveness conceptual data modelling 
data knowledge engineering february 
hofstede ter hofstede verhoef 
integrated specification method graphic knowledge 
proceedings fourth international conference software engineering knowledge engineering pages capri italy june 
ieee computer society press 
hofstede ter hofstede verhoef 
specification graphic conventions methods 
sutcliffe editors proceedings third workshop generation case tools pages manchester united kingdom may 
hofstede ter hofstede proper th van der weide 
formal definition conceptual language description manipulation information models 
information systems 
hofstede ter hofstede 
information modelling data intensive domains 
phd thesis university nijmegen nijmegen netherlands 
knuth knuth 
information system design conceptual foundations 
editor information processing pages amsterdam netherlands 
north holland 

het van case tools 
kluwer netherlands 
dutch 
mayr mayr 
information system design techniques software support 
editor information processing amsterdam netherlands 
north holland 
martin martin 
information engineering volume information engineering 
research studies united kingdom 
nijssen halpin nijssen halpin 
conceptual schema relational database design fact oriented approach 
prentice hall sydney australia 
potts potts 
generic model representing design methods 
proceedings th international conference software engineering pages pittsburgh pennsylvania 
lyytinen 

metaedit flexible graphical environment methodology modelling 
andersen bubenko lvberg editors proceedings third international conference caise advanced information systems engineering volume lecture notes computer science pages trondheim norway may 
springer verlag 
sorenson sorenson 
tremblay mcallister 
system specification environments 
ieee software pages march 
sutcliffe sutcliffe black loucopoulos 
system specification semantics defining knowledge captured structured system development methods conceptual models 
editors information systems concepts depth analysis pages amsterdam netherlands 
north holland 
verhoef verhoef ter hofstede 
structuring modelling knowledge case shells 
andersen bubenko lvberg editors proceedings third international conference caise advanced information systems engineering volume lecture notes computer science pages trondheim norway may 
springer verlag 
verhoef verhoef 
structuring yourdon modern structured analysis 

lyytinen editors proceedings second workshop generation case tools pages trondheim norway may 
verhoef verhoef 
effective information modelling support 
phd thesis delft university technology delft netherlands 
vessey vessey jarvenpaa 
evaluation vendor products case tools methodology companions 
communications acm april 

case repository database application 
proceedings symposium systems analysis design research strategy atlanta georgia 
van 
experiences netherlands 
lvberg bergman editors proceedings second nordic conference caise advanced information systems engineering volume lecture notes computer science pages stockholm sweden may 
springer verlag 

automated support modelling process view experiments expert information engineers 
lvberg bergman editors proceedings second nordic conference caise advanced information systems engineering volume lecture notes computer science pages stockholm sweden 
springer verlag 

modelling support information systems development 
phd thesis delft university technology delft netherlands 
yourdon yourdon 
happened structured analysis 
datamation pages june 
yourdon yourdon 
modern structured analysis 
prentice hall englewood cliffs new jersey 
