uppaal tool suite automatic verification real time systems johan bengtsson kim larsen fredrik larsson paul pettersson wang yi brics aalborg university denmark department computer systems uppsala university sweden 
uppaal tool suite automatic verification safety bounded liveness properties real time systems modeled networks timed automata 
includes graphical interface supports graphical textual representations networks timed automata automatic transformation graphical representations textual format compiler transforms certain class linear hybrid systems networks timed automata model checker implemented constraint solving techniques 
uppaal supports diagnostic model checking providing diagnostic information case verification particular real time systems fails 
current version uppaal available world wide web uppaal home page www docs uu se docs uppaal 
uppaal new tool suite automatic verification safety bounded liveness properties networks timed automata 
tool developed spring result intense research collaboration brics aalborg university department computing systems uppsala university 
main design uppaal efficiency ease usage 
current version uppaal extensions implemented 
model checking hampered various state explosion problems 
uppaal thes problems dealt combination fly verification new coarser symbolic technique reducing verification problem solving simple linear constraint systems 
features tools uppaal includes supported european concur react swedish board technical development tfr swedish technical research council author chinese nsf hong kong wang foundation supporting visit institute software chinese academy sciences 
basic research computer science centre danish national research foundation 
atg atg ta ta hs ta uppaal diagnostic trace fig 

overview uppaal graphical interface 
automatic compilation graphical definition textual format 
analysis certain types hybrid automata compilation ordinary timed automata 
particular uppaal allows automata varying drifting time speed clocks 
number simple practice extremely useful syntactical checks verification commence 
generation diagnostic traces case verification particular real time system fails 
various features uppaal review provide pointers theoretical foundation applications various case studies 
overview uppaal uppaal consists suite tools verifying safety properties real time system 
overview system shown 
section briefly describe main features uppaal 
graphical description networks timed automata possible draw networks timed automata certain syntactical rules followed different automata network enclosed boxes name process structural label textual box describing system configuration declaration clocks channels auxiliary integer variables 
able id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id aaaaa cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs aaaaa config config config config config config config config config config config config johan bengtsson johan bengtsson johan bengtsson johan bengtsson johan bengtsson johan bengtsson johan bengtsson johan bengtsson johan bengtsson johan bengtsson johan bengtsson johan bengtsson johan bengtsson johan bengtsson johan bengtsson johan bengtsson johan bengtsson simplified version protocol simplified version protocol simplified version protocol simplified version protocol simplified version protocol simplified version protocol simplified version protocol simplified version protocol simplified version protocol simplified version protocol simplified version protocol simplified version protocol simplified version protocol simplified version protocol simplified version protocol simplified version protocol simplified version protocol mutual exclusion 
mutual exclusion 
mutual exclusion 
mutual exclusion 
mutual exclusion 
mutual exclusion 
mutual exclusion 
mutual exclusion 
mutual exclusion 
mutual exclusion 
mutual exclusion 
mutual exclusion 
mutual exclusion 
mutual exclusion 
mutual exclusion 
mutual exclusion 
mutual exclusion 
clock clock clock clock clock clock clock clock clock clock clock clock clock clock clock clock clock int id int id int id int id int id int id int id int id int id int id int id int id int id int id int id int id int id system system system system system system system system system system system system system system system system system fig 

graphical description mutual exclusion protocol import system descriptions drawn help uppaal system saved atg format 
version protocol shown 
textual description networks timed automata addition uppaal allows networks timed automata described textual format called ta providing basic programming language timed automata 
certain cases textual format convenient faster graphical interface 
compiler atg ta automatically transforms system description graphical atg format textual ta format supporting important principle shows resulting ta format protocol 
linear hybrid systems certain conditions model timed automata may generalized allow clocks rates varying lower upper bound allow clock rates change different control nodes vertices 
extension timed automata useful modelling hybrid systems behaviour system variables described approximated lower upper bounds rates 
abstraction techniques class linear hybrid system transformed timed automata verified techniques available timed automata implemented uppaal 
uppaal allows linear hybrid automata speed clocks interval 
hybrid automata form may transformed ordinary timed automata translator hs ta 
philips audio control protocol linear hybrid system version shown 
see verify 
declarations clock int id processes process state cs init trans 
guard id assign 
guard assign id 
cs guard id system configuration system process state cs init trans 
cs guard id 
guard assign id 
guard id assign fig 

textual description mutual exclusion protocol syntactical checks textual description timed automata ta format program performs number syntactical checks 
particular clocks auxiliary integer variables channels accordance declaration attempted synchronization undeclared channel captured 
model checking current version uppaal able check reachability properties particular certain combinations control nodes constraints clocks integer variables reachable initial configuration 
desired mutual exclusion property protocol falls class 
bounded liveness properties obtained reasoning system context testing automata 
model checking performed module takes input network timed automata ta format formula 
interactively 
case verification particular real time system fails happens diagnostic trace automatically reported 
trace may considered diagnostic information error useful subsequent debugging system 
principle called uppaal model section syntax semantics model uppaal model real time systems 
emphasis put precise semantics model 
convenience shall slightly different syntax compared uppaal user interface 
assume typical real time system network non deterministic sequential processes communicating channels 
uppaal finite state automata extended clock data variables describe processes networks automata describe real time systems 
syntax alur dill developed theory timed automata extension classical finite state automata clock variables 
expressive model ease modelling task extend timed automata general types data variables boolean integer variables 
final goal develop modelling design language close possible high level real time programming language 
clearly create problems decidability 
require value domains data variables finite order guarantee termination verification procedure 
current implementation uppaal allows integer variables addition clock variables 
finite state automaton transition takes form ff gamma 
meaning process modelled automaton perform ff transition state reach state doing 
note condition transition 
alur dill extend untimed transition timed version oe gamma gamma gamma 
simple linear constraint clock variables oe set clocks reset zero 
intuitively oe gamma gamma gamma 
means process control node may perform ff transition instantaneously true current clock values reach control node clocks oe reset 
constraint called guard 
uppaal allow general form guard constraint data variables extend reset operation clocks timed automata data variables 
assume finite set clock variables ranged finite set data variables ranged guard clock data variables stand set formulas ranged generated syntax don verify explained 
constraint form natural number 
shall call guards 
note guard divided parts conjunction constraints form clock variables conjunction constraints form data variables 
shall tt stand guard true clock variable clocks non negative values 
uppaal representation automata guard tt omitted 
reset operations manipulate clock data variables reset set form set assignment operations form clock data variable expression 
denote set possible reset operations 
current version uppaal distinguishes clock variables data variables reset operation clock variable form natural number reset operation integer variable form integer constants 
note negative 
channel urgent channel assume processes synchronize channels 
set channel names subset urgent channels processes synchronize possible 
fff jff ag fff jff ag denote set actions processes perform synchronize 
name denote channel name defined name ff 
name ff 
ff 
automata clock data variables extended version timed automata data variables reset operations 
definition 
automaton actions clock variables data variables tuple hn ei finite set nodes control nodes initial node theta theta theta theta corresponds set edges 
model urgency require guard edge urgent action tt name hl tt 
case hl shall write gamma gamma gamma 
represents transition node node guard called enabling condition edge action performed set reset operations update variables 
concurrency synchronization model networks processes introduce ccs parallel composition operator automata 
assume automata clocks data variables 
denote parallel composition 
intuitive meaning similar ccs parallel composition actions restricted ja na synchronization components possible 
shall call network automata 
simply view vector denote ith component 
semantics informally process modelled automaton starts node clocks initialized 
values clocks increase synchronously time node time process change node edge gamma gamma gamma 
provided current values clocks satisfy enabling condition transition variables updated variable assignment introduce notion variable assignment 
variable assignment mapping maps clock variables nonnegative reals data variables integers 
variable assignment delay phi denotes variable phi clock variable integer variable definition phi reflects clocks operate speed data variables time insensitive 
reset operation set assignment operations denote variable assignment val val denotes value guard variable assignment boolean value describing satisfied 
control vector configuration control vector network vector nodes node shall write denote vector ith element replaced state network configuration hl vi control vector variable assignment 
initial state hl initial control vector elements initial nodes initial variables assignment maps variables 
maximal delay model progress properties need notion maximal delay 
hl vi configuration automaton note location may number outgoing transitions guards 
process modelled state hl vi may wait guards true enables transitions 
want process stay forever control node words discrete transition taken certain time bound 
require bound maximal delay guards completely closed true 
formalized follows definition 
maximal delay automata md gamma gamma gamma 
phi note 
case guards outgoing transitions closed state hl vi words process reaches time process means physically unrealizable 
extend notion maximal delay networks automata insures synchronization urgent channels happens immediately 
definition 
maximal delay networks automata md ff ff gamma gamma gamma 
ff gamma gamma gamma 
lg transition rules semantics network automata terms transition system set states set configurations transition relation defined follows definition 
transition rules networks automata hl vi hl exist ff ff gamma gamma gamma 
ff gamma gamma gamma 

hl vi hl phi di md uppaal model checker current version uppaal able check reachability properties particular certain combinations control nodes constraints clock data variables reachable initial configuration 
logic properties analysed forms fi fi fi fi fi fi atomic formula atomic clock data constraint component location 
atomic clock data constraints integer bounds individual clock data variables integer bounds differences clock data variables gamma 
intuitively fi satisfied reachable states satisfy fi 
dually fi satisfied reachable state satisfy fi 
formally denote transitive closure delay action transition relations network configurations 
satisfaction relation network configurations formulas defined follows hl vi fi hl hl vi hl hl fi hl vi fi hl hl vi hl hl fi satisfaction respect boolean combination fi atomic formulas defined inductively structure fi behaving usual respect boolean connectives 
satisfaction respect atomic formula definitions hl vi hl vi simple efficient model checking technique extends logic allows bounded liveness properties specified 
currently bounded liveness properties obtained reachability analysis system context testing time sensitive automata 
conjecture bounded liveness properties logic translated reachability problems manner 
model checking model checking procedure implemented uppaal interpretation finite state symbolic semantics networks 
precisely interpret logic respect symbolic network configurations form constraint system conjunction atomic clock data constraints control vector 
rules defining symbolic interpretation table 
fi fi theta fi fi ff gamma 
ff gamma 
fi fi table 
symbolic interpretation reachability logic read rules table notation needs explained 
constraint system set variables reset denotes set variable assignments fr dg 
denotes set variable assignments fw md phi dg important observation constraint system conjunction atomic clock data constraints due richard bellman representing constraint systems weighted directed graphs clock data variables nodes operations testing inclusion constraint systems may effectively implemented shortest path algorithms 
applying proof rules table goal directed manner obtain algorithm see deciding symbolic network configuration satisfies property fi 
ensure termination efficiency maintain past list symbolic network configurations encountered 
goal directed application proof rules table symbolic network configuration generated covered configuration goal directed search fails backtracking needed 
covers configuration replaces applications performance uppaal verify various benchmark examples applications including versions fischer protocol philips audio control protocol train gate controller manufacturing plant steam generator mine pump controller water tank 
experiment performed existing real time verification tools uppaal hytech cornell kronos grenoble epsilon aalborg experiment verified called fischer mutual exclusion protocol shown satisfies mutual exclusion property cs cs 
tools installed machine standard unix command time measure execution time 
resulting time performance diagram shown indicate uppaal performs time space wise favorably compared tools experiment 
volume philips audio control protocol verified uppaal 
version protocol shown 
verification protocol diagnostic model checking feature uppaal useful detecting correcting errors description protocol 
uppaal verifies received bit stream guaranteed identical sent bit stream seconds main features uppaal review pointers theoretical foundation application case studies 
tools installed sparc station running sunos mb primary memory mb swap memory 
uppaal version installed sparc station running sunos mb primary memory mb swap memory 
processes hytech verification hytech total hytech epsilon kronos verification kronos total uppaal fig 

execution times fischer protocol 
versions uppaal extend current model checker safety bounded liveness logic 
versions uppaal integrate newly developed compositional model checking technique judged experimental results caml prototype implementation powerful technique going fight explosion problems 

martin abadi leslie lamport 
old fashioned recipe real time 
lecture notes computer science 

alur dill 
automata modelling real time systems 
proc 
icalp volume 

polak vaandrager 
verification audio control protocol 
proc 
volume lecture notes computer science 

pei hsin ho howard wong toi 
automated analysis audio control protocol 
proc 
cav volume lecture notes computer science 
springer verlag 

larsen 
compositional model checking real time systems 
proc 
concur lecture notes computer science 
springer verlag 
list 
list 
list 
list 
list list list list list 
list 
list 
list 
list 
list 
list 
list 
list 
list 
list 
list 
list 
list list list list list 
list 
list 
list 
list 
list 
list 
list 
list 
leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng output output output output output output output output output output output output output output output output output list 
list 
list 
list 
list list list list list 
list 
list 
list 
list 
list 
list 
list 
list 
list 
list 
list 
list 
list list list list list 
list 
list 
list 
list 
list 
list 
list 
list 
leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng 












input 
input 
input 
input 
input input input input input 
input 
input 
input 
input 
input 
input 
input 
input 
head 
head 
head 
head 
head head head head head 
head 
head 
head 
head 
head 
head 
head 
head 
input 
input 
input 
input 
input input input input input 
input 
input 
input 
input 
input 
input 
input 
input 
head 
head 
head 
head 
head head head head head 
head 
head 
head 
head 
head 
head 
head 
head 
leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng output neq 
output neq 
output neq 
output neq 
output neq output neq output neq output neq output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng output neq 
output neq 
output neq 
output neq 
output neq output neq output neq output neq output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
leng output 
output 
output 
output 
output output output output output 
output 
output 
output 
output 
output 
output 
output 
output 
leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng output neq 
output neq 
output neq 
output neq 
output neq output neq output neq output neq output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng output neq 
output neq 
output neq 
output neq 
output neq output neq output neq output neq output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng output 
output 
output 
output 
output output output output output 
output 
output 
output 
output 
output 
output 
output 
output 
leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng output 
output 
output 
output 
output output output output output 
output 
output 
output 
output 
output 
output 
output 
output 
leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng output neq 
output neq 
output neq 
output neq 
output neq output neq output neq output neq output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng output neq 
output neq 
output neq 
output neq 
output neq output neq output neq output neq output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng output neq 
output neq 
output neq 
output neq 
output neq output neq output neq output neq output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng output neq 
output neq 
output neq 
output neq 
output neq output neq output neq output neq output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng output neq 
output neq 
output neq 
output neq 
output neq output neq output neq output neq output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng output neq 
output neq 
output neq 
output neq 
output neq output neq output neq output neq output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng output 
output 
output 
output 
output output output output output 
output 
output 
output 
output 
output 
output 
output 
output 
leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng output 
output 
output 
output 
output output output output output 
output 
output 
output 
output 
output 
output 
output 
output 
leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng output 
output 
output 
output 
output output output output output 
output 
output 
output 
output 
output 
output 
output 
output 
leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng output output output output output output output output output output output output output output output output output output neq 
output neq 
output neq 
output neq 
output neq output neq output neq output neq output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 













output neq 
output neq 
output neq 
output neq 
output neq output neq output neq output neq output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output 
output 
output 
output 
output output output output output 
output 
output 
output 
output 
output 
output 
output 
output 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output 
output 
output 
output 
output output output output output 
output 
output 
output 
output 
output 
output 
output 
output 
output 
output 
output 
output 
output output output output output 
output 
output 
output 
output 
output 
output 
output 
output 














































































head 
head 
head 
head 
head head head head head 
head 
head 
head 
head 
head 
head 
head 
head 
head 
head 
head 
head 
head head head head head 
head 
head 
head 
head 
head 
head 
head 
head 













head 
head 
head 
head 
head head head head head 
head 
head 
head 
head 
head 
head 
head 
head 
head 
head 
head 
head 
head head head head head 
head 
head 
head 
head 
head 
head 
head 
head 
input 
input 
input 
input 
input input input input input 
input 
input 
input 
input 
input 
input 
input 
input 
head 
head 
head 
head 
head head head head head 
head 
head 
head 
head 
head 
head 
head 
head 
input 
input 
input 
input 
input input input input input 
input 
input 
input 
input 
input 
input 
input 
input 
head 
head 
head 
head 
head head head head head 
head 
head 
head 
head 
head 
head 
head 
head 
head 
head 
head 
head 
head head head head head 
head 
head 
head 
head 
head 
head 
head 
head 
input 
input 
input 
input 
input input input input input 
input 
input 
input 
input 
input 
input 
input 
input 
input 
input 
input 
input 
input input input input input 
input 
input 
input 
input 
input 
input 
input 
input 
leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng input 
input 
input 
input 
input input input input input 
input 
input 
input 
input 
input 
input 
input 
input 
leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng head 
head 
head 
head 
head head head head head 
head 
head 
head 
head 
head 
head 
head 
head 
head 
head 
head 
head 
head head head head head 
head 
head 
head 
head 
head 
head 
head 
head 
head 
head 
head 
head 
head head head head head 
head 
head 
head 
head 
head 
head 
head 
head 
input 
input 
input 
input 
input input input input input 
input 
input 
input 
input 
input 
input 
input 
input 
leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng head 
head 
head 
head 
head head head head head 
head 
head 
head 
head 
head 
head 
head 
head 
input 
input 
input 
input 
input input input input input 
input 
input 
input 
input 
input 
input 
input 
input 
leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng input 
input 
input 
input 
input input input input input 
input 
input 
input 
input 
input 
input 
input 
input 
input 
input 
input 
input 
input input input input input 
input 
input 
input 
input 
input 
input 
input 
input 
input 
input 
input 
input 
input input input input input 
input 
input 
input 
input 
input 
input 
input 
input 
leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng leng input 
input 
input 
input 
input input input input input 
input 
input 
input 
input 
input 
input 
input 
input 
output neq 
output neq 
output neq 
output neq 
output neq output neq output neq output neq output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq output neq output neq output neq output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
output neq 
start start start start start start start start start start start start start translow translow translow translow translow translow translow translow translow translow translow translow translow ack ack ack ack ack ack ack ack ack ack ack ack error error error error error error error error error error error error start start start start start start start start start start start start translow translow translow translow translow translow translow translow translow translow translow translow translow head head head head head head head head head head head head head head head head head idle idle idle idle idle idle idle idle idle idle idle idle head head head head head head head head head head head head head head head head head start start start start start start start start start start start start start transhigh transhigh transhigh transhigh transhigh transhigh transhigh transhigh transhigh transhigh transhigh transhigh transhigh transhigh transhigh transhigh transhigh transhigh transhigh transhigh transhigh transhigh transhigh transhigh transhigh transhigh transhigh transhigh transhigh transhigh rise rise rise rise rise rise rise rise rise rise rise rise rise rise rise rise rise translow translow translow translow translow translow translow translow translow translow translow translow translow translow translow translow translow rise rise rise rise rise rise rise rise rise rise rise rise rise rise rise rise rise transhigh transhigh transhigh transhigh transhigh transhigh transhigh transhigh transhigh transhigh transhigh transhigh transhigh transhigh transhigh transhigh transhigh translow translow translow translow translow translow translow translow translow translow translow translow translow translow translow translow translow idle idle idle idle idle idle idle idle idle idle idle idle sender sender sender sender sender sender sender sender sender sender sender sender output ack output ack output ack output ack output ack output ack output ack output ack output ack output ack output ack output ack output ack receiver receiver receiver receiver receiver receiver receiver receiver receiver receiver receiver receiver config config config config config config config config config config config config paul pettersson johan bengtsson paul pettersson johan bengtsson paul pettersson johan bengtsson paul pettersson johan bengtsson paul pettersson johan bengtsson paul pettersson johan bengtsson paul pettersson johan bengtsson paul pettersson johan bengtsson paul pettersson johan bengtsson paul pettersson johan bengtsson paul pettersson johan bengtsson paul pettersson johan bengtsson paul pettersson johan bengtsson paul pettersson johan bengtsson paul pettersson johan bengtsson paul pettersson johan bengtsson paul pettersson johan bengtsson paul pettersson paul pettersson paul pettersson paul pettersson paul pettersson paul pettersson paul pettersson paul pettersson paul pettersson paul pettersson paul pettersson paul pettersson paul pettersson paul pettersson paul pettersson paul pettersson paul pettersson clock rate clock rate clock rate clock rate clock rate clock rate clock rate clock rate clock rate clock rate clock rate clock rate clock rate clock rate clock rate clock rate clock rate rate rate rate rate rate rate rate rate rate rate rate rate rate rate rate rate rate int leng int leng int leng int leng int leng int leng int leng int leng int leng int leng int leng int leng int leng int leng int leng int leng int leng chan input input list list chan input input list list chan input input list list chan input input list list chan input input list list chan input input list list chan input input list list chan input input list list chan input input list list chan input input list list chan input input list list chan input input list list chan input input list list chan input input list list chan input input list list chan input input list list chan input input list list head head head head head head head head head head head head head head head head head head head head head head head head head head head head head head head head head head head head head head head head head head head head head head head head head head head output output output neq output neq output output output neq output neq output output output neq output neq output output output neq output neq output output output neq output neq output output output neq output neq output output output neq output neq output output output neq output neq output output output neq output neq output output output neq output neq output output output neq output neq output output output neq output neq output output output neq output neq output output output neq output neq output output output neq output neq output output output neq output neq output output output neq output neq system input sender receiver output ack system input sender receiver output ack system input sender receiver output ack system input sender receiver output ack system input sender receiver output ack system input sender receiver output ack system input sender receiver output ack system input sender receiver output ack system input sender receiver output ack system input sender receiver output ack system input sender receiver output ack system input sender receiver output ack system input sender receiver output ack system input sender receiver output ack system input sender receiver output ack system input sender receiver output ack system input sender receiver output ack input input input input input input input input input input input input fig 

philips audio control protocol 

larsen pettersson yi 
compositional symbolic modelchecking real time systems 
appear proc 
th ieee real time systems symposium december 

kim larsen paul pettersson wang yi 
diagnostic model checking real time systems 
proc 
th dimacs workshop verification control hybrid systems lecture notes computer science october 

kim larsen paul pettersson wang yi 
model checking real time systems 
proc 
fundamentals computation theory 

olivero sifakis yovine 
abstractions verification linear hybrids systems 
proc 
cav volume lecture notes computer science 

shankar 
verification real time systems pvs 
proc 
cav volume 

leiserson cormen rives 
algorithms 
mit press mcgraw hil 

yannakakis david lee 
efficient algorithm minimizing real time transition systems 
proceedings cav volume lecture notes computer science pages 

wang yi paul pettersson mats daniels 
verification real time communicating systems constraint solving 
proc 
th international conference formal description techniques 
article processed macro package llncs style 
