empowering users task approach design stephanie wilson peter johnson hci laboratory department computer science queen mary westfield college mile road london ns uk tel mail dcs qmw ac uk presents approach interactive system design known task design 
approach advocates design process centred descriptions tasks users currently perform perform 
encompasses design method design representations design support tools 
discuss motivations examine relation design paradigms model scenario design 
concludes discussion current research involving application participatory design techniques task design paradigm 
seen natural extension original users participate formulating descriptions contexts deriving artifact designs consequences contexts 
keywords task design design methods user interface design environments participatory design developing interactive computer systems varied contexts human activity focus design complement extend human action paying attention benefits costs associated design 
benefits costs considered perspective users perspective design development 
presents approach user interface design known task design intended focus designers attention human activity benefits costs associated new technology 
task design emphasises importance designers developing understanding users existing tasks requirements changing tasks consequences new designs may tasks 
places people tasks starting point design process solely phenomena artifacts evaluated 
section examines motivations underlying describes minimal task design process 
sections exemplify approach discussion summarising major features task method discuss relation approaches interactive system design 
believe task approach design empower users engage decisions impact practices 
theme developed current research discussed investigating techniques increasing user participation task design process 
task design implicit interactive system model domain users termed system model generally originates system designer view domain performed 
usability problems arise mismatch user understanding task performing implicit system model 
apart obvious user dissatisfaction usability problems serious catastrophic consequences domains safety critical systems 
aspect enhancing involves improving match system users intended support 
major motivation underlying task design enable designers produce interactive system designs fit purpose sense implicit system model compatible intended support 
order achieve designer position design decisions informed understanding users assumptions ill informed misconceptions 
tasks people individuals groups carry important aspect 
task design involves approaching design interactive systems perspective focusing user task requirements traditional domain system requirements 
aim research integrate disparate approaches interactive system design particular human factors approaches involve cognitive modelling techniques common approach rapid prototyping user interface toolkits 
techniques consider tasks context hci reported period years 
techniques directed analysing designs form evaluation contributing construction 
task design way contrast representations users tasks form basis design interactive systems 
distinction approach research chosen define tasks context low level user interaction goms tag context 
view tasks substance constitutes task defined context place 
perspective task simple deleting word document selecting menu option print document 
user task write submit journal activities deleting word low level actions involved accomplishing task 
tasks context occasions hours days involve people 
furthermore tasks rarely occur discrete isolated activities interrupted tasks carried parallel interleaved tasks aborted favour demanding tasks 
gives overview minimal task design process 
process simplified show topdown design activity believe topdown bottom activities contribute design view reinforced design studies 
design process starts task analysis carried foremost context users workplace 
task analysis procedure known knowledge analysis tasks kat involves variety complementary data collection techniques including surveys observations video interviews concurrent retrospective protocols data collected analysed expressed task model giving rise called existing task descriptions 
users participate varying extents data collection techniques active passive participants help clarify data task models constructed validate resulting task descriptions 
aspects task information endeavours express complex nature users tasks goals actions objects sequencing workflow information 
course systems generally designed support replicate currently exists designed satisfy specific requirements changes response failings highlighted existing systems introduce new technology 
starting point design process requirements gathering exercise focus identifying requirements relation current practice objectives improving performance system placed 
influence requirements development new tasks new artifacts indicated broken lines 
assessing benefits costs design relative tasks requires way analysing detailing tasks 
assessment consider currently performed proposed envisaged changes sufficient carry assessment post hoc evaluation exercise 
approach suggests designers consider proposed changes form proposed task descriptions prior exploring detailed designs systems support new 
description proposed tasks developed description existing tasks light requirements 
explicitly modelling new tasks facilitates evaluation users early design process example scenario techniques 
design proposed task descriptions context users organisations existing artifacts consequences context artifact designs existing task descriptions task analysis requirements gathering requirements design overview task design design task analysis design designed task model interaction model prototype interface users organisations existing artefacts requirements analysis requirements extant task model design rules consequences user tasks generation automatic adept design process earlier section stated goal improve match users implicit system model 
context design supports users practice practice may readily adapted 
crucial point identify constitutes match task system 
far focused main aspects task information taken forward existing task proposed task system design order improve task system compatibility details sequencing task activities system violate task sequencing constraints knowledge actions users perform course accomplishing tasks system provide support appropriate user actions relevant times task performance details information task objects users need order perform task actions system offer information necessary support enhance users actions details task structure decomposition goals subgoals system support structure groupings related task activities design process proceeds description proposed tasks proposed system designs light information transfer 
system design commences level relationships components task components system apparent gradually progresses refinements increasingly detailed design 
evaluation involving user designer participation required design stages leading highly iterative approach design 
design defined top activity approach acknowledges bottom activities vital 
development design detailing concrete models may result re expression models 
example detailing design implementation level may consequences task intended support 
inadequacy model analysis technique realisation design top bottom activity software design support environments allow iteration stages design 
concern evolutionary nature design 
explicit recognition users tasks organisations strong determinants design artifact artifact bring changes needs people organisations give rise new tasks 
represented connections artifacts various stages design consequences design users context 
task design environment earlier reporting research task design described innovative software known adept toolset developed support approach 
toolset took form preliminary prototype demonstrating ideas concerning task design form representations tools offered designer support design process 
adept toolset undergone process continuous refinement view task design matures 
design tools design representations adept described detail section offers brief summary exemplify previous discussion 
adept software combines task modelling component rapid prototyping user interface design tools provide task design environment 
environment supports design task analysis task design generation run time system number modelling stages 
provides editors browsers interpreters generators support models transitions models 
design adept framework models inter relationships 
overview design process simplified show top design activities 
statements previous section concerning iterative evolutionary bottomup nature design equally valid 
design process closely related described previous section additional detail added level artifact design 
design process begins analysis extant task situation resulting description extant task 
analysis modelling task description may entered toolset graphical task model editor allows designer construct browse animate models 
editor supports modified version task knowledge structures tks approach task modelling describing users goals actions perform course achieving goals task objects involved actions sequencing task activities 
specific generic task models may described relate individual users scenarios performing particular subtasks generalisation scenarios tasks users 
results requirements gathering exercise may documented toolset requirements editor browser tool desired links may established requirements aspects tasks relate 
adept task model editor design modifications existing task context requirements result development designed task 
proposal activities new system allow particular groups known organisations able carry activities prior commitment form technology detailed design 
leads proposal design system enable designed task performed expressed initially interface model aim 
designed task describes human activities interface model provides high level description system support activities commitment concrete implementation detail design 
value introducing model design process expresses system concepts level abstraction enables related directly aspects task intended support 
designer edit elaborate animate interface model graphical editor tool 
interface model refined executable prototype design implementable form 
rapid prototyping facilitated generator tool creates executable prototype aim description 
behaviour generator influenced set modifiable design rules allowing alternative prototypes produced satisfies aim specification 
different interaction styles accommodated writing additional design rules prototype user interface may tweaked conventional interface builder type tool 
adept requirements browser related number design approaches information users tasks reported literature 
lim describe design method known muse starts task analysis procedure involves explicit models users tasks 
method intended integrate human factors approach user interface design conventional system design methodology jackson system development method jsd 
encompasses task descriptions extant target systems uses jackson structured diagram notation express task models 
complex method involving design stages relations jsd defined various points 
tool support provided modelling notations specifically designed purpose 
reports task design method updated version etag approach task modelling report approaches employ task modelling notations akin tks place greater emphasis tool support designer 
methods complex approach example require greater number modelling stages adopt rigid top view design process 
model design solution interface interface model design solution task interface 
model interface design rules interface model design task design model design versus task design different perspective task design paradigm viewed extension model design techniques receiving attention example 
research model design attempting offer practical solutions problems developing interactive component systems 
designers create high level largely declarative representation interactive system software tools automate transition model executable system 
terminology model model approach represents design solution 
describes interactive system albeit higher level abstraction conventional programming approaches intended support user activity 
explicit rationale motivating creation model relies solely designer intuition design method may employed point model construction commenced 
model design primarily implementation technique 
task design hand offers systematic approach creating implementing design solutions 
provides simple overview task model design comparison purposes indicates part task method addressed model approach transition model interaction executable system 
task approach originated different background task analysis cognitive psychology aims appear common contextual inquiry described 
technique designers develop understanding current practice forms basis developing system design support users 
name suggests contextual inquiry advocates developing understanding people talking environment 
task design contextual inquiry recognises importance user involvement design process shifting focus jones term tool 
contextual inquiry focuses primarily early stages design authors advocate lifecycle involving going user participation suggest may facilitated stages design techniques prototypes 
advantage contextual inquiry takes account entire context hand task design offers detailed examination users tasks advocates application range data collection techniques 
significant distinction lies proposal users designers explore changes tasks prior considering details system designs 
design task analysis design designed task model interaction model prototype interface users organisations existing artefacts requirements analysis requirements extant task model design rules consequences user tasks generation automatic model design adept comparisons scenario design methods reported 
design method task interaction scenarios 
task scenarios play role understanding users existing tasks exploring proposed new tasks 
likewise interaction scenarios level interface model facilitate exploration proposed design solutions 
prototype adept tools offer limited support task scenarios animation task models designers users interactively walk task examining goals activities objects involved stage 
user participation design adept innovative task models basis design generation 
task models provided medium designers users come understanding existing proposed practice 
fact argued users active participants task design process involvement subjects task requirements analyses evaluators various design representations task model system prototypes 
adept primarily adopts traditional approach interactive system design main concern supporting designer user role design process 
designers users participate creation designs 
adept tools developed support user interface designer intended outset support direct user participation design 
experience suggested tools task model editor prove valuable way obtaining user feedback getting users actively involved modifying design representations 
called scandinavian school participatory design users act fully empowered participants design process 
opportunity affect decisions impact lives 
current research interactive system design influenced approach 
task design method focuses modelling users proposed changes developing designs support natural step investigate involvement users modelling process simply subjects evaluators 
investigating task design process users current tasks proposed changes tasks explicitly represented 
difference users members design team empowered participate design activities 
traditional approach problems designers understanding representing current context problems users assessing consequences technical solutions 
hope address issues facilitating communication understanding designers users active user participation direct engagement designers users 
phase research concerned investigating techniques increase user designer communication task design process 
start task modelling process ceases process analysis subsequent modelling human factors expert limited input users equally limited validation resulting model users complete 
process users designers participate develop shared understanding existing task context design problem space requirements changes 
likewise investigating possibilities greater user participation derivation design requirements modelling proposed new task situations actual design artifacts 
stage design user designer reflect adequacy design relation usage task contexts terms scope dialogue objects style form interaction 
approach design evaluation longer separate activity carried discrete points time 
central feature iterative process occurs time user designer reflects model set models 
approach places great emphasis evaluating models directly users evaluation design decisions terms effects usage system context tasks 
initially propose assess suitability existing design techniques application different stages participatory approach task design 
include graphical diagrams adept express task interaction models role playing protocol analysis ethnomethodology techniques hypertext recording design objects contextual inquiry 
approach exploring greater task scenarios user interaction scenarios designers users participate technologies prototypes described support scenarios 
addition recognise software tools may obstacle solution question increase user participation task modelling notations adept proved useful comprehensible designers users 
presently investigating looking see improved implementations task modelling tools employed user community 
aim research engaged ultimately develop methods tools bring changes design process importantly systems developed people human activity better served technology computer systems 
task design offers coherent approach interactive system design users practice primary issue concern 
focus research understand knowledge user tasks derived incorporated design process design centered tasks activities users fitting users tasks design 
motivated discussed task design paradigm reviewed relationship design approaches 
adept project indicated designer role task design process supported attention turning examining ways user participation may increased 
design studies carried near help assess appropriateness various techniques mentioned promoting user participation task design process 
date focused entirely task user related aspects context 
clearly factors importance second aspect design studies acquire additional information existing design practice view broadening scope approach encompass aspects context user tasks 
move increased user participation improved user designer communication motivated desire enhance usability interactive systems user 
believe participatory task approach design offers means achieving goal 
reported supported uk engineering physical sciences research council epsrc 

computers democracy scandinavian challenge vt gower 

card moran newell psychology human computer interaction 
erlbaum hillsdale nj 

carroll 
ed scenario design john wiley sons 

de bruin van den bos task oriented methodology development interactive systems 
proceedings th interdisciplinary workshop informatics psychology interdisciplinary approaches system analysis design austria 

de haan etag approach design user interfaces 
proceedings th interdisciplinary workshop informatics psychology interdisciplinary approaches system analysis design austria 

guindon designing design process exploiting opportunistic thoughts 
human computer interaction pp 


jones contextual inquiry participatory technique system design 
schuler eds participatory design principles practices lawrence erlbaum pp 


johnson johnson task knowledge structures psychological basis integration system design 
acta psychologica pp 


johnson johnson knowledge analysis tasks task analysis specification humancomputer systems 
engineering humancomputer interface ed mcgraw hill london 

johnson johnson wilson rapid prototyping user interfaces driven task models 
carroll ed scenario design john wiley sons 

johnson wilson markopoulos adept advanced design environment prototyping task models demonstration 
proceedings interchi acm press april 

lim long integrating human factors jackson system development method illustrated overview 
barber laws 
eds ergonomics special issue cognitive ergonomics iii 

muller dynamics design session 
schuler eds participatory design principles practices lawrence erlbaum 

payne green task action grammars model mental representation task languages human computer interaction pp 


sukaviriya foley griffith second generation user interface design environment model runtime architecture 
proceedings human factors computing systems interchi pp 
april 

szekely luo neches interface builders model interface tools 
proceedings human factors computing systems interchi pp 
april 

vanderdonckt bodart encapsulating knowledge intelligent automatic interaction objects selection proceedings human factors computer systems interchi pp 
april 

wilson johnson kelly cunningham markopoulos hacking model approach user interface design 
proceedings hci diaper guest eds cambridge university press pp 

