operating populations different evolution behaviours petridis dept electrical computer engineering dept electrical computer engineering aristotle university thessaloniki aristotle university thessaloniki thessaloniki greece thessaloniki greece ee auth gr petridis eng auth gr parallel genetic algorithms pga offer natural productive way solve problem better single population 
different pga paradigms evolution behaviour population 
proposes method called operating populations different evolution behaviours populations allowed exhibit different evolution behaviours 
achieved variety selection mechanisms operators communication methods parameters explained sequel 
method tested problem training recurrent artificial neural network 
evolutionary optimization methods genetic algorithms maintain population individuals evolve set rules regarding selection recombination crossover mutation 
population evolved optimum concentrating search areas higher fitness exploitation 
recombination mutation perturb individuals providing general heuristics exploration 
lot variations basic operators selection schemes proposed heuristic extensions leading clear statement ga general parameterized configured 
selection appropriate operators rates depends demands problem user experience aesthetic preferences 
method proposed tries overcome problem variety selection mechanisms operators communication methods parameters 
pga paradigms evolution behaviours population method propose uses different evolution behaviours overcome problem operator selection 
tries improve exploration exploitation search space 
coarsegrained pga number populations evolve different processors running ga different evolution behaviour 
proposed method called 
method train fully connected pattern generator 
ii 
operating different evolution behaviours genetic evolution takes place set rules regarding selection recombination mutation 
different evolution behaviour depends selection mechanisms proportionate selection tournament selection ranking selection steady state selection 
operators crossover mutation variations inversion hill climbing problem specific devised operators 
selection mechanisms parameters selection probabilities tournament size binary tournament probability number reproductive trials operator parameters mutation rates crossover probabilities crossover points frequency probability adaptation general mechanisms elitism replacement method generational steady state fitness scaling fitness windowing fitness ranking evolving operators 
general parameters population size string size main idea maintain number populations exhibiting different evolution behaviours 
difference evolution behaviour results varying characteristics regarding population 
exchange information populations allows operate exploit promising areas search space populations reintroduce population previously lost genetic material 
apart characteristics defined previously define communication methods parameters 
completely specified defining apart characteristics population communication characteristics communication methods techniques processor ction topology allocation populations migration strategy ii 
communication parameters number individuals migrate number generations exchange individuals epoch 
point term epoch apart characterizing updating process literature different meaning literature neural networks 
algorithm run population follows initialization repeat repeat elitism best survives reproduction offsprings epoch completed send best individual populations receive best individuals populations criterion specific implementation chose roulette wheel parent selection adaptive multi point crossover standard adaptive mutation uniform crossover 
addition operator called phenotype mutation tries find better point neighborhood best genotype 
operator increases great extent convergence speed ga 
introduce operators handle weights genes strings 
point crossover gene separating parts 
creates offspring significant part better parent significant part worse 
technique gives new weights small perturbations values proximity weight value better parent 
msp lsp operator 
operator reverse previous 
creates offspring significant part best parent significant part worse allowing small perturbations weight values proximity weight value worse parent 
lsp msp operator 
different populations different operators roulette wheel parent selection different operator parameters different populations discussed section 
elitism generational replacement adaptive fitness scaling individuals population weight encoded bit string 
total number trainable weights weight matrix encoded nx bit string 
essence different evolution behaviour result different operators operator parameters population 
epoch populations allowed communicate exchange best individual 
population receives best individual populations 
new individuals accepted local population replacing random individuals 
iii 
neural network training problem model fully connected 
topology shown 
network error time number units exists desired target value time step output th unit time 
target adjust weight values 
total network error predefined quantity 
largest period desired output signals period desired output signal presentation time temporal sequence train fully connected generate limit cycles form sinusoidal functions different amplitudes frequencies 
neurons trainable weights output units 
different input levels lead output units different oscillations 
desired outputs sin sin respectively trained total network error reached negligible error 
pattern generators 
iv 
implementation experimental results training algorithm tries find optimum weight vector problem 
order test performance chosen characteristics influence performance pga 
populations different evolution behaviours 
convenience populations numbered 
populations characteristics 
different characteristics described population adaptive crossover probability mutation rate 
number crossover points cp equal number trainable weights 
population adaptive mutation rate probability msp lsp operator 
population adaptive mutation rate probability lsp msp operator 
population adaptive crossover probability mutation rate 
point crossover 
population adaptive crossover probability mutation rate 
cp equal half number trainable weights 
population adaptive mutation rate probability uniform crossover 
population population adaptive parameter probabilities favour mutation 
population constant smaller crossover larger mutation rates 
populations mainly order increase exploration search space mitigate problem premature convergence 
epoch completed population sends best individual populations receives best 
implemented transputer board 
population assigned available transputers 
results method compared results pga populations evolved identical evolution behaviours training problem 
identical population evolved characteristics population 
communication populations took place time epoch completed 
performed sets experiments comparison purposes 
set concerns second concerns pga evolution behaviour 
set comprises experiments experiments different epoch values 
epoch values generations 
experiments showed improved performance experiments performed evolution scheme populations 
success rate worst case doubled fig 
epoch value equal success percentage means number successful experiments pga evolution behaviour means number successful experiments 
apart improvement success rate observed percentage experiments stuck local optima decreased decreasing epoch value increasing 
experiments failed generation limit generations reached 
case pga evolution behaviours failures due getting stuck local optima 
figures 
assume improves exploration search space 
number generations required trained case smaller fig 

results initial shown capable improving performance pga model achieving speedup providing better exploration exploitation search space 
features investigated different selection mechanisms migration strategy parameters population size review parallel genetic algorithms bibliography internal tech 
report nov automation robotics lab dept electrical computer eng aristotle university thessaloniki greece 
davis adapting operator probabilities genetic algorithms schaffer ed proceedings rd int conf 
genetic algorithms george mason univ june pp morgan kaufmann pub california davis 
ed 
handbook genetic algorithms van york 
petridis genetic algorithm training recurrent neural networks proc ijcnn oct nagoya japan petridis recurrent neural networks pattern generators proc 
ieee conf 
computational intelligence june orlando usa schaffer david caruana das study control parameters affecting online performance genetic algorithms function optimization schaffer ed procs rd icga june pp morgan kaufmann pub 
srinivas adaptive ties crossover mutation genetic algorithms ieee trans systems man cybernetics april epoch fig 
successful experiments epoch fig 
experiments stuck local optima epoch fig 
experiments stopped generation limit epoch fig 
average number generations successful experiments 
