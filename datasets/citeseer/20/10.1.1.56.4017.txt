shifted block lanczos algorithm solving sparse symmetric generalized eigenproblems roger grimes john lewis horst simon siam matrix anal 
appl 
fl society industrial applied mathematics vol 
pp 
january 
industrial strength algorithm solving sparse symmetric generalized eigenproblems described 
algorithm foundations known techniques solving sparse symmetric eigenproblems notably spectral transformation ericsson ruhe block lanczos algorithm 
combination techniques trivial pitfalls awaiting implementor 
focus identifying pitfalls avoiding leading bomb proof algorithm live black box inside large applications code 
code results comprises robust shift selection strategy block lanczos algorithm novel combination new techniques extensions old techniques 
key words 
lanczos algorithm sparse eigenvalue problems structural analysis symmetric generalized eigenvalue problem orthogonalization methods ams subject classifications 


lanczos algorithm widely appreciated numerical analysis community powerful tool extracting extreme eigenvalues real symmetric matrix find largest smallest eigenvalues vectors symmetric eigenvalue problem hx believed algorithm directly find eigenvalues ends spectrum largest smallest value 
fact applications result eigenvalue distributions allow effectively extracting eigenvalues spectrum 
typical eigenvalue distributions structural engineering vibration problems small eigenvalues order unity separations order unity apparently separated 
physical reasons largest eigenvalues problems large say 
convergence rates eigenvalues determined relative separation jn smallest eigenvalues 
expect find slow convergence small eigenvalues eigenvalues interest 
dependence convergence relative separation eigenvalues ignored 
believed lanczos algorithm applied generalized symmetric problem hx mx naive reduction standard form factor cholesky decomposition ll solve ordinary eigenproblem hl received editors may accepted publication revised form march 
mathematics engineering analysis research technology division boeing computer services mail box seattle washington espresso rt cs boeing com espresso rt cs boeing com 
numerical aerodynamic simulation nas systems division national aeronautics space administration ames research center mail moffett field california simon nas nasa gov 
author employee computer sciences 
funded part national aeronautics space administration contract nas 
grimes lewis simon suppose applied algorithm vibration problem structural engineering kx mx stiffness matrix mass matrix 
fail separate reasons ffl semidefinite may admit cholesky factorization 
ffl factored eigenvalues desired badly separated 
ffl eigenvectors computed back transformation exists usually poorly conditioned lead considerable numerical error back transformation 
positive definite vibration problem addressed applying usual reduction reciprocal problem kx mx mx kx ml cholesky factor sufficient cure problems reciprocals eigenvalues separated 
eigenanalysis codes structural engineering packages built transformation 
transformation inadequate ffl model rigid body modes positive semidefinite cholesky decomposition 
ffl considerable number eigenvalues desired 
ffl eigenvalues wanted smallest eigenvalues 
applications characteristics arise 
stiffness matrix aerospace applications dimensional nullspace rigid body modes 
detailed analyses structures may require just eigenvalues vectors 
test problems analysis nuclear reactor containment floor eigenpairs needed adequately model response structure simulated earthquake 
problem analyzed model large industrial fan mounted large concrete platform needed approximations eigenvalues near fan rotational rate eigenvalues interior spectrum 
elaborate transformation problem spectral transformation ericsson ruhe treats difficulties 
spectral transformation discussed detail discuss extension standard algorithm buckling vibration problems 
general idea spectral transformation comes considering shifted problem oem oe mx 
invert oem transform eigenvalues nearest shift oe largest separated eigenvalues reciprocal problem 
normally need choose shift oe near eigenvalues want 
number eigenvalues large reduced convergence rate eigenvalues farthest oe worthwhile choose additional shifts factorizations order search spectrum 
formally shift eigenvalue problem shifted operator singular 
fact avoiding near singularity issue choice shifts particularly shift shifts close eigenvalues useful computing isolated clusters eigenvalues 
shifted block lanczos algorithm general chosen shift allows compute tens eigenvalues single lanczos run 
complicated tradeoff cost lanczos run increases nonlinearly increasing numbers steps cost computing new shift concomitant factorization 
example consider oceanography model matrix plat boeing sparse matrix collection different paradigms choosing shifts ffl heuristic described ffl conservative modification heuristic ffl aggressive modification heuristic ffl fixed shift compute eigenvalues single factorization 
analyses lanczos run factors find eigenvalues table contains salient results choices demonstrating complexity tradeoffs dramatically value shifting 
table computing lowest eigenvalues plat 
choice shift number total number execution lanczos runs lanczos steps cost normal conservative aggressive fixed shift results obtained sun workstation 
code blocksize 
execution cost sum central processor cpu input output processor seconds 
shifting provide reliability efficiency 
factorization provides eigenvalue location information form matrix see 
collected series chosen shifts provide independent guarantee success eigenvalue computation drive choice shifts lanczos runs ensure desired eigenvalues computed 
heuristic strategy choosing shifts discussed 
goal code serve black box routine large applications codes 
eigenvalues assumed simple shifting strategy prepared continue looking small piece spectrum determined full multiplicity eigenvalues 
shifting scheme lanczos algorithm interact ensure find orthogonal basis invariant subspace cluster see 
importantly block version lanczos algorithm 
lanczos algorithm usually compute full multiplicities cluster intervention shifting strategy provided able choose blocksize large largest multiplicity cluster encounter 
block lanczos algorithm confronts problem applications codes general representations data particular machine architectures allow favor alternatives 
common general applications codes represent matrices core 
block lanczos code substitutes basis matrix block multiplies block solves matrix vector products simple solves 
decreases cost essentially blocksize 
grimes lewis simon production code synthesis ideas spectral transformation block lanczos algorithm 
address effects generalized problem recurrence 
explain modifications lanczos recurrence result shifted inverted operators 
exception development spectral transformation buckling problems presentation quite standard provided reader familiar results 
heuristic shifting strategy 
subsections discussion trust intervals matrix basic tools robustness heuristic choosing shift generic case idea tool ensuring orthogonality invariant subspaces heuristics choosing initial shift heuristics determining expand primary trust interval analysis specified finite interval treatment various special pathological cases modifications needed buckling problem 
special characteristics block lanczos algorithm discussed 
considers effects due spectral transformation 
major problem vectors respect inner product defined positive definite matrix discuss issues associated implementing vectors basic block lanczos algorithm including precautions needed allow cases induces 
block lanczos recurrence produces block tridiagonal matrix describe compute eigenvalue vector approximations error bounds approximations lanczos vectors 
section contains approach dealing loss orthogonality lanczos vectors novel combination various reorthogonalization schemes effectively unusual distributions eigenvalues result spectral transformation 
section concludes discussions start recurrence 
integration techniques block lanczos recurrence effectively find limited number eigenvalues corresponding eigenvectors spectrally transformed operator 
close numerical experiments solving small set eigenproblems obtained applications codes 

spectral transformation block lanczos algorithm 
eigenvalue problem vibration analysis kx mx symmetric matrices positive semidefinite 
usually smallest eigenvalues wanted typically poor relative separation rarely better 
priori estimates rate convergence predict slow convergence desired spectrum 
obtain rapid convergence desired eigenvalues spectral transformation 

spectral transformation vibration problems 
consider problem oem mx mx oe shift real parameter 
assume moment positive definite 
easy verify eigenpair oe shifted block lanczos algorithm eigenpair 
transformation eigenvalue problem change eigenvectors eigenvalues related oe form spectral transformation dictated need able apply lanczos algorithm semidefinite 
advantages form documented 
main advantage applying lanczos algorithm clear effect spectral transformation spectrum considered 
results table demonstrate detail 
values obtained initial shift described generalized eigenproblem model nuclear reactor containment floor stiffness mass matrices bcsstk respectively boeing sparse matrix collection 
denote generalized eigenproblem 
relative separation affected dramatically spectral transformation 
smallest eigenvalues transformed eigenvalues relative separation absolute separation decreased 
addition eigenvalues far shift transformed poorly separated values near zero 
spread eigenvalues ensures rapid convergence eigenvalues near oe 
example clearly demonstrates shift close absolute sense 
table vibration spectral transformation oe 
original transformed gap relative gap gap relative gap 
primary price rapid convergence cost factorization oem transformation oem realized implicitly sequence operations compute mq block vectors solve linear systems oem operations usually realized independent subroutines allow tuning matrix factorization multiplication routines class problem consideration 
generalize lanczos algorithm solve transformed generalized symmetric eigenproblem 
generalization steps 
consider ordinary block lanczos algorithm symmetric matrix consider direct generalization lanczos algorithm arbitrary generalized symmetric eigenproblem hx mx assume temporarily positive definite 
steps issue shifting disappears moment 
third step consider effective form results spectral transformation operator 
grimes lewis simon 
basic block lanczos algorithm 
consider ordinary eigenvalue problem hx real symmetric linear operator 
important characteristic lanczos algorithm required explicitly 
required subroutine computes hy vector block lanczos iteration blocksize matrix fig 

initialization set set choose columns obtain lanczos loop set hq set set residual compute orthogonal factorization upper triangular orthogonal loop fig 

basic block lanczos algorithm 
matrices symmetric 
formulation lanczos loop susceptible roundoff errors form computation 
exact arithmetic eliminated lanczos loop recurrence hq term recurrence simplifies theoretical discussion 
shown combined column vectors matrices called lanczos vectors form orthonormal set 
computational efficiency lanczos algorithm rests fact vectors computed simply fixed amount iteration step 
blocks lanczos vectors collectively form jp matrix algorithm defines jp jp block tridiagonal matrix 
shifted block lanczos algorithm matrices upper triangular band matrix half bandwidth full 
instances formula combined single formula hq matrix block identity matrix zero 
premultiplying orthogonality lanczos vectors see hq orthogonal projection subspace span spanned columns shown induction span span hq 
different perspective block lanczos algorithm method constructing orthonormal basis block krylov subspace determined orthogonal projection block krylov subspace eigenvalues rayleigh ritz approximations span eigenvalues addition eigenvector vector approximate eigenvector viewed form lanczos algorithm replaces large difficult eigenvalue problem involving small easy eigenvalue problem involving block tridiagonal matrix approximations obtained solving block tridiagonal eigenvalue problem involving matrix posteriori bound residual underwood eigenpair kb components eigenvector quantity kb computed computing approximate eigenvector modifications described provides inexpensive posteriori error bound 
formula guarantee approximations eigenpairs appear quickly 
priori estimates provided paige saad theory 
parlett gives detailed discussion single vector case 
generalizations block case originally derived underwood 
extensions presentations 

spectral transformation block lanczos algorithm 
step consider generalized symmetric eigenproblem hx mx 
reduce problem standard form factoring term recurrence hm transformation variables matrices orthogonal implies property eigenvectors generalized eigenproblem 
approximate eigenvectors eventually computed subspace span regardless grimes lewis simon set set mu set solve compute orthogonal factorization loop fig 

inner loop generalized symmetric block lanczos algorithm 
form lanczos recurrence 
inner loop lanczos recurrence subspace fig 

matrix appears instances assure orthogonality lanczos vectors 
particular step requires computing orthogonal factorization standard derivations orthogonality lanczos vectors easily generalize show vectors orthonormal 
appears disappeared standard recurrence reappear penultimate step disguise solution operation 
applied original problem kx mx merely implicit form explicit reduction standard form 
case taken operator spectral transformation 
substituting oem gives oem appears terms recurrence 
formally obtain recurrence oem appear 
allows apply recurrence semidefinite 
justification doing appears 
point shall longer put hats matrices 
actual lanczos recurrence solving fig 

assuming matrix mq stored temporarily algorithm written requires multiplication step factorization required 
step lanczos loop orthogonalization set vectors discussed 
goal generalize standard eigenvalue approximation results spectral transformation block lanczos algorithm 
combining instances equation yields oem mq defined 
premultiplying orthogonality lanczos vectors follows oem mq orthogonal projection oem block krylov subspace spanned columns eigenvalues approximate shifted block lanczos algorithm initialization set set choose columns obtain mq lanczos loop set oem mq set mq set compute mq mq loop fig 

block lanczos algorithm vibration problem 
eigenvalues 
eigenpair oe approximate eigenpair 
generalization posteriori residual bound oem follows oem quantity right computable explicitly computing eigenvector cost multiplication oem desirable 
better way obtain residual bound 
note corresponds infinite eigenvalue appear discussed 
small correspond eigenvalues far shift 
converge slowly division residual bounds reflects relative inaccuracy 

matrix discussion assumed positive definite matrix 
formulation block lanczos algorithm vibration problem require factorization spectral transformation lanczos algorithm applied formally semidefinite modifications 
eigenproblem infinite eigenvalues 
fortunately need obvious block modification analysis remove infinite eigenpairs recurrence 
starting block lanczos algorithm computed fig 

eigenvectors kx mx corresponding finite eigenvalues consist component orthogonal null vectors component nullspace ericsson shows second nullspace component determined algebraic constraint non nullspace component 
constraint expresses grimes lewis simon choose compute oem orthogonalize fig 

computation starting block 
fact eigenvectors lie range oem shown lanczos vectors lie subspace starting vectors chosen subspace 
choice starting block infinite eigenvalues influence block lanczos algorithm exact arithmetic 
add final postprocessing step purge approximate eigenvectors components satisfying constraint finite precision arithmetic 

spectral transformation buckling problems 
final point section spectral transformation buckling problem kx ffi symmetric positive semidefinite stiffness matrix ffi symmetric differential geometric stiffness matrix 
typically eigenvalues closest zero wanted 
simple approach interchange roles ffi compute largest eigenvalues problem ffi kx applying simple lanczos algorithm shifts 
reciprocal approach drawbacks 
effective positive definite number eigenvalues sought rarely large 
shifting particularly semidefinite case require alternative form spectral transformation 
shifted inverted problem oek ffi kx kx solved original problem 
lanczos recurrence carried orthogonality lanczos vectors 
multiplication mass matrix vibration case replaced multiplication stiffness matrix buckling case rest recurrence remains 
buckling spectral transformation eigenpair oe eigenpair 
buckling spectral transformation change eigenvectors eigenvalues related oe results obtained directly applying vibration spectral transformation reciprocated shifts reciprocal problem 
advantages buckling spectral transformation essentially vibration spectral transformation 
large eigenvalues buckling problem transformed cluster eigenvalues near unity 
eigenvalues near shift oe transformed separated eigenvalues easily computed lanczos algorithm 
major difference shift oe allowed eigenvalues transformed 
singularity transformation affects shifts close zero small shifts taken form transformation 
table gives details eigenproblem treated buckling problem 
initial shift negative ordinarily shifted block lanczos algorithm expect negative eigenvalue eigenvalue interest buckling problems see 
just case vibration spectral transformation see shift need close desired eigenvalues absolute sense 
case shift wrong side origin desired effect relative separation 
table buckling spectral transformation oe 
original transformed gap relative gap gap relative gap 
different role stiffness matrix implementation details vibration buckling analysis 
issues involving orthogonality lanczos vectors apply equally orthogonal lanczos vectors buckling case 
stiffness matrix initialization phase way vibration case sequence lanczos vectors orthogonal space spanned eigenvectors corresponding zero eigenvalues contain approximations exactly zero eigenvalues zero eigenvalues desirable 
eigenvalues approximate eigenvalues 
eigenpair oe approximate eigenpair 
approximate eigenvectors form orthonormal set 
bounds residuals approximate eigenpairs derived 
strategy choosing shifts 
try find eigenvalues eigenvectors kx mx kx ffi 
emphasize fact want eigenvalues eigenvector matrix dense 
problem written general form ffl find eigenvalues smallest magnitude eigenvectors ffl find eigenvalues largest magnitude eigenvectors ffl find eigenvalues closest eigenvectors ffl find eigenvalues eigenvectors 
computational interval finite finite semi infinite finite infinite restrictions 
note problem finding algebraically eigenvalues interval transformed finding eigenvalues smallest magnitude suitable shift origin 
purpose spectral transformation transform original problem dominant eigenvalues represent desired eigenvalues 
dominant eigenvalues transformed problem correspond eigenvalues original problem nearest oe 
major goals drive strategy choosing shifts 
efficiency choose sequence shifts oe oe oe total cost including cost factorizations grimes lewis simon costs individual lanczos runs minimized 
heuristic approach measuring reducing cost described xx 
second goal shift selection robustness 
paramount objective design code able compute desired eigenpairs accurately extreme pathological conditions 
furthermore wanted code diagnose report failures 
tools create robustness trust intervals matrix appropriate place detailed discussion choices shifts 

trust intervals matrix factorizations 
suppose course eigenanalysis computed set eigenvalues lying shifts oe oe confirm fact eigenvalues interval 
suppose real symmetric matrix decomposed ldl diagonal 
inertia triple integers number positive eigenvalues number negative eigenvalues number zero eigenvalues 
sylvester inertia theorem states inertia cf sylvester theorem implies number negative entries number negative eigenvalues number negative terms ldl decomposition oei gives number eigenvalues smaller oe 
frequently oei called sturm sequence number engineering 
easy see oe oe number eigenvalues interval oe oe assuming oe oe factorizations nonsingular 
number eigenvalues expected interval agree number computed say interval oe oe trust interval 
want shifting strategy establish trust interval desired eigenvalues 
applying sturm sequence results generalized eigenproblems requires transformation ordinary eigenvalue problem cx generalized problem kx mx 
order guarantee generalized eigenvalue problems real solutions assume pencils definite positive definite linear combination exist 
code assume positive semidefinite 
compute oem ldl oek ffi ldl want draw ldl 
interpretation ldl table proofs appendix major surprise table appearance null space dimension dim matrix norm 
term corresponds assignment signs infinite eigenvalues vibration case zero eigenvalues buckling case 
note common vibration cases term dim appear positive semidefinite 
appear infinite eigenvalues negative signs adds serious complication problem finding algebraically smallest eigenvalues infinite eigenvalues algebraically smallest computed recurrence written 
problem finding eigenvalues smallest magnitude slightly difficult case 
buckling analysis significant usual problem find eigenvalues smallest magnitude zero eigenvalues computed directly 
problem solved dim known partial eigenanalysis problem finding eigenvalues smallest magnitude interval bounded away zero shifted block lanczos algorithm table interpretation oem oek ffi 
vibration analysis positive definite eigenvalues oe positive semidefinite eigenvalues oe fl fl cases dim cases buckling analysis positive definite eigenvalues oe oe positive semidefinite eigenvalues oe oe fl fl oe sign dim oe sign posed 
result successful trust interval containing desired eigenvalues 
goal drives selection shifts 
create soon possible trust interval containing desired modes extend trust interval contain eventually desired modes 
process begins initial shift point oe factorization followed lanczos run shifted operator oe counterpart buckling analysis 
compute second factorization provide inertia close trust interval 
desired eigenvalues computed lanczos run factorization oe serve basis inertia computation factorization new lanczos run 
ideally choose oe close oe second lanczos run finds remaining eigenvalues interval time oe far away oe second lanczos run stops efficiency reasons exactly computed missing eigenvalues 
simple description shift selection choose new shift maximally extend existing trust interval 

shifting extend trust interval 
selecting new shift try information including computed eigenvalues knowledge existing trust interval additional information previous lanczos runs 
general lanczos run creates set approximations eigenvalues provide general picture spectrum 
fig 
gives illustration general situation lanczos run shift oe forms right endpoint trust interval 
tall thin lines denote approximations accept eigenvalues 
lines medium height width approximations acceptable eigenvalues accuracy estimates know significant digit correct 
call ritz values 
lanczos approximations ritz values abuse mathematical term describe approximations accepted bad meaningless 
short broad lines denote approximations accuracy estimates larger values ignore 
shift selection assumes inverted spectrum viewed oe similar inverted spectrum viewed oe view similarity inverted spectra lanczos run oe computed eigenvalues right oe efficiently expect efficient run oe compute grimes lewis simon eigenvalues left 
ritz values estimate missing eigenvalues place new shift oe kth st ritz values 
choice bisector intended avoid choice extremely close eigenvalue 
furthermore relaxed tolerance detect clusters eigenvalues bisect clusters ritz values 
eigenvalues ritz values trust interval oe oe ffi fig 

trust intervals 
fewer ritz values available right oe second view inverted spectra assumption radius convergence shift 
define ffi maximum previous value distance right endpoint trust interval rightmost computed eigenvalue see fig 

initially ffi set problem scale see 
second choice shift oe oe ffi take aggressive choice maximum possibilities case need compute eigenvalues knowledge ritz values 
ritz values available eigenvalues left compute choose shift solely ritz values ignoring shift ffi table shows results normal conservative aggressive fixed shifting 
table ffi rule conservative shifting ffi rule aggressive shifting 
described general rule choosing oe oe taken right oe course obtain similar views spectra left oe give alternative shift 
general know direction shift taken 
finding eigenvalues nearest interior point move direction oe direction 
completion lanczos run attempted extend trust interval compute save shift extend new trust interval direction 
shift finite endpoint computational interval treated extending null trust interval left right 
ritz values discarded 
views inverted spectra albeit simplistic proven effective 
model convergence rates eigenvalues far pessimistic 


aspects eigenanalysis code shift selection mechanism implementation lanczos algorithm closely tied 
example want recompute shifts eigenpairs computed earlier shifts 
computation spent recomputing known eigenpairs wasted 
allowing accidental recomputation creates difficult situation determine correct multiplicity computed eigenvalue shifted block lanczos algorithm eigenvectors computed 
choose allow situation arise 
theory simple fix 
starting block lanczos recurrence chosen orthogonal previously computed eigenvectors recurrence remain orthogonal previously computed eigenvectors 
sufficient practice rounding errors introduce components excluded eigenvectors 
recurrence specific eigenvectors necessary external selective orthogonalization see 
mechanism dramatically reduces cost preventing excluded eigenvectors 
second mechanism reducing cost purview shifting code 
common situation depicted fig 

new shift oe chosen nearest previous shift oe forms trust interval 
fig 
depicts initial case trust interval including oe trivial 
shifts lie set eigenvalues ritz values computed run oe convergence rate eigenvalues lanczos algorithm decreases distance shift increases usual pattern accepted eigenvalues closest oe ritz values farther little interlacing sets 
accepted eigenvalues ritz values ritz values oe oe fig 


consider direction eigenvalue farthest oe oe ritz values 
eigenvalue right shift similarly left eigenvalue ritz value 
call eigenvalues normal circumstances assume eigenvalues missing oe define right sentinel left endpoint interval uncertainty required accuracy tolerance 
true value lies right sentinel left sentinel defined similarly 
assume oe oe eigenvectors corresponding eigenvalues oe prevented external selective orthogonalization 
allow recurrence recompute eigenvalues lie left discarded immediately 
technique allows trust eigenpairs computed region expect new eigenpairs appear incurring cost extensive reorthogonalization 
reorthogonalization respect eigenvector removes doubt exist exact location eigenvalue shifted inverted spectrum new shift 
time eigenvector reappear suppressed 
generalize notion slightly handle clusters eigenvalues 
sentinel lie left move sentinel back endpoint grimes lewis simon uncertainty interval continue process sentinel lies intervals uncertainty eigenvalues shift sentinel 

initial shift 
difficult task usually getting started 
selection shift information spectrum specification desired eigenvalues 
location information specification initial choice shift oe oe jaj jbj jaj jbj oe lowest modes modes wanted min jaj jbj jaj jbj jaj jbj oe highest modes wanted finite modes nearest wanted 
choice oe gives point spectrum eigenvalues important user 
cases specified user define oe defined 
note natural choice location information common case want eigenvalues magnitude closest 
unfortunately choice oe fraught difficulties 
shift zero allowed buckling transformation yields singular operator vibration analysis semidefinite 
shift zero taken case singularity operator detected 
zero eigenvalues computed useful information extracted run 
near singularity operator cause lanczos recurrence break computing invariant subspace zero eigenvalues 
leave little better began information nonzero eigenvalues located 
better initial shift shift vicinity nonzero eigenvalues 
shift allow computing zero rigid body modes number nonzero modes 
difficulty getting idea scale nonzero eigenvalues 
adopted heuristic strategy recommended louis 
heuristic computes geometric mean centers circles excluding centers smaller heuristic usually computes reasonable problem scale 
specifically jm ii jk ii summation taken terms ii jm ii jk ii number entries included sum 
table gives idea reliability heuristic 
correct initial selection oe joe 
vibration problem ordinary eigenvalue problem adjust oe oe max jaj jbj 
shifted block lanczos algorithm adjust initial shift similar fashion buckling problem 
try oe oe second common buckling analysis structural analysis computation smallest negative eigenvalue 
table comparison problem scale lowest eigenvalues 
matrix lowest closest eigenvalue eigenvalue lund plat 
choosing direction expand trust interval 
majority vibration analyses result simple monotonic expansion trust interval lowest higher values 
cases know additional eigenvalues interest left trust interval extending interval right reasonable action 
cases need choose direction arise shift taken interior spectrum accident design 
example reasonable initial shift want find eigenvalues nearest 
general finding eigenvalues smallest magnitude ordinary eigenproblem buckling analysis case 
value set problem description initial shift see determine direction move shift 
multiple trust intervals exist trust interval including closest primary describes multiple trust intervals exist logic determining new shift case 
typical case single trust interval attempt extend 
distinguish subcases trust interval includes endpoint computational interval 
case trust interval extended direction moving outside computational interval choice direction trivial 
trust interval includes endpoint distinguish cases trust interval 
trust interval include shift direction eigenvalues importance user lie 
remaining case single trust interval contains endpoint computational interval 
case compute interval includes entire trust interval computed eigenvalues outside trust interval 
define min radius symmetric umbrella degree confidence computed eigenvalues umbrella 
note confidence may confirmed inertia values 
try enlarge umbrella include eigenvalues user requested umbrella endpoint computational interval 
move whichever direction increases ties broken shifting left 
grimes lewis simon 
analysis finite interval 
frequently user sparse specify computational interval finite endpoints 
number eigenvalues interval usually valuable information user eigenanalysis code eigenvalues computed 
obtain information analysis computing factorization endpoint 
factorizations eigenanalysis cost gaining information nominal 
note factorizations required case eigenvalues interval requested 
save factorizations line appears appropriate 
discussed previous section choose initial shift endpoints 
factorizations immediately 
modify shift strategy slightly order take advantage second factorization 
natural choice shift near unselected finite endpoint shift finite endpoint cause large number extra eigenvalues computed choose endpoint shift 
may result additional lanczos iteration save cost factorization 
cases extend trust interval finite endpoint making lanczos run endpoint 
occur analysis shift results computation eigenvalues shift endpoint 

special cases 
robustness goals 
naive expect heuristics described problems 
describe number special cases arise practice approaches handling smoothly 

filling gaps 
shift selection designed extend trust interval obtained previous lanczos runs 
strange asymmetric distributions eigenvalues high multiplicities may create situations shift oe extend trust interval taken far oe allow computation eigenvalues oe oe single run 
oe oe indicate eigenvalues shifts computed 
goal maintain trust interval find missing eigenvalues attempt extend knowledge oe attempt fill gap active shifts oe oe proceeding 
assume missing eigenvalues lie right sentinel shift oe left left sentinel shift oe right 
sentinel values overlap oe oe 
case interval want chose shift 
choose oe oe cd cd 
gap trust intervals filled attempt 
shifting strategy continue recursively computing missing eigenvalues primary trust interval grown large contain requested eigenvalues trust intervals merged 

restart shift 
number factorizations goal 
cases single lanczos run find desired eigenvalues near shift 
occur eigenvalues multiplicity greater shifted block lanczos algorithm blocksize exist shift taken close eigenvalue 
suspect case additional lanczos run shift 
run perform external selective reorthogonalization newly computed eigenvectors eigenvectors interval shift neighboring shifts 
discard assumption probably broken 

hole spectrum 
particularly difficult spectrum selection shifts large disparity magnitudes desired eigenvalues 
cases notion reasonable distance may faulty may ritz value information help choose new shift 
code treats special situation new information obtained consecutive shifts 
compute meaningful ritz values shifts oe oe identical 
suspect hole spectrum remaining eigenvalues farther away notion reasonable distance 
expand notion reasonable distance attempt cross hole 
computational interval finite endpoint previously shift see shift strategy select new shift endpoint 
assuming expanding trust interval right take new shift oe oe ffi see description ffi 
lanczos run provides new information take oe oe ffi 
obtain new information final attempt cross gap shift oe oe ffi 
run provides new information terminate assumption remaining eigenvalues infinite 
return eigenvalues computed appropriate warning 

treatment ffi ritz value cases 
setting reasonable distance value ffi carefully cases lanczos algorithm terminates abnormally 
value updated new information available shift 

overly aggressive shifts 
unusual distributions eigenvalues unusual convergence patterns may cause situations shift selected farther required desired eigenvalues 
determine shift far current trust interval run shift compute eigenvalues computing eigenvalues interest 
number heuristic estimate number eigenvalues profitably find single run 
case record current shift keep shift going far direction select new shift 
choose new shift linear interpolation trust interval oe shift reject oe new shift oe oe oe oe oe oe 
modifications buckling problems 
spectral transformation buckling problem lanczos iteration ill posed shifts near zero 
shift strategy buckling problem similar vibration strategy shifts zero allowed 
shift zero replaced half minimum problem scale absolute value shift nearest zero absolute value computed eigenvalue nearest zero 
grimes lewis simon 
implementation block lanczos algorithm 
underpinning eigenanalysis code block lanczos algorithm specialized spectral transformations xx 
block lanczos algorithm context spectral transformation applications code necessitates careful attention series details implications orthogonality blocks block generalizations single vector orthogonalization schemes effect spectral transformation orthogonality loss interactions lanczos algorithm shifting strategy 
success algorithm hinges issues 

orthogonal qr factorization 
step block lanczos recurrence generates matrix column vectors orthogonalized respect inner product defined positive definite matrix call compute orthogonal decomposition qb ffl qb ffl mq ffl ffl upper triangular 
identity number choices computing orthogonal factorization appear limited 
addition want avoid repeated multiplications expect sparse stored main memory multiplication may require accessing secondary storage 
developed generalization modified gram schmidt process requires matrix block products matrix vector products 
save set auxiliary vectors represent product mq process 
matrix initialized matrix hold initialized updates vectors shadowed identical updates mq 
result explicitly initialization 
way enforcing orthogonality certainly suggests questions numerical stability 
repeat orthogonalization process times repetition required norm vectors times norm iteration 
repetition required recompute matrix mq explicit multiplication choice guarantees final set vectors orthonormal 
algorithm computing orthogonal factorization fig 
vectors auxiliary vectors represent vectors mq matrix triangular matrix computed iteration algorithm orthogonal triangular factor product individual triangular matrices noted algorithm may encounter rank deficient set vectors identically zero vectors possible 
details discussion terminate lanczos run 
assumed discussion positive definite 
case positive semidefinite recurrence properly started generates sequence blocks columns lie range oem subspace eigenvectors corresponding finite eigenvalues drawn 
clearly orthogonalization algorithm preserves subspace 
subspace trivial intersection nullspace 
appearance nontrivial column zero norm represents breakdown equivalent rank deficiency vector lie range oem shifted block lanczos algorithm initialization factorization repeat mq ii ii ii ij ij ij bb convergence iteration limit exceeded fig 

orthogonal modified gram schmidt orthogonalization 

analysis block tridiagonal matrix original eigenvalue problem reduced block lanczos algorithm eigenvalue problem form block tridiagonal matrix 
noted standard result bounds accuracy computed eigenvalues computed explicit computation eigenvectors 
bounds determine terminate lanczos recurrence evaluate eigenpairs accurate considered converged 
results generalize provide bound accuracy approximate eigenvalues spectrally transformed problem 
real interest accuracy approximations original untransformed problem 
need determine eigenpairs original problem converged need accuracy estimates ritz values shift selection process 
get estimates need unravel effects spectral transformation 
account possibly multiple eigenvalues 
recall relation holds vibration analysis oem orthogonal km oem km sk kb sk fi grimes lewis simon eigenvector corresponding fi euclidean norm product upper triangular matrix components apply theorem error eigenvalue approximations generalized eigenproblem obtain fi fi fi fi oe fi fi fi fi km oem km fi ordinary eigenproblem fi bound eigenvalue approximates eigenvalue operator lanczos algorithm applied 
extend find bound error ericsson ruhe show fi shows accuracy requirements modified spectral transformation 
close shift oe need moderately small fi guarantee approximate eigenvalue large 
conversely eigenvalues far shift transformed small values requiring smaller values fi expected 
bound improved separated eigenvalues 
define gap fl fl min fi fi fi fi oe oe fi fi fi fi gap bound theorem results fi fl bounds valid 
general smaller second clustered eigenvalues larger separated eigenvalues 
implementation whichever bound smaller min fi fi fl definition fl modified account clusters eigenvalues gap sets multiple eigenvalues 
practice approximation fl derive shifted inverted eigenvalues similar error bounds derived buckling analysis 
computed eigenpair ffi 
oe oe fi fact oe follows oe oe oe oe oe oe oe oe shifted block lanczos algorithm lanczos algorithm approximates projection subspace 
inversion operator taken account computed eigenvalues transformed problem closer true eigenvalues transformed problem 
fi fi fi fi oe oe fi fi fi fi oe resulting simple error bound buckling analyses joej fi analogous refined gap error bound fl fl defined fl min fi fi fi fi oe oe fi fi fi fi vibration case lesser bounds min joej fi fl chosen definition fl modified presence multiple eigenvalues 
spectral transformation preserves eigenvectors need account transformation vis vis approximate eigenvectors 
ericsson ruhe introduced correction term results improved eigenvector approximations untransformed problem 
discovered additional benefit ensuring computed eigenvectors lie proper subspace cases metric matrix semidefinite 
oe computed eigenvalue 
correction step formally step inverse iteration computed eigenvector computed satisfy oem 
oem vector obtained cheaply adding linear combination vectors block lanczos vectors gives better approximation eigenvector vibration problem ensures approximate eigenvectors effects semidefinite corresponding correction semidefinite buckling analysis grimes lewis simon course lanczos algorithm need estimate residual bounds 
bounds require eigenvalues corresponding entries bottom block row matrix eigenvectors 
parlett efficient algorithm single vector lanczos algorithm 
block generalizations straightforward approach 
eigenvalue problem solved reducing band matrix tridiagonal form applying tridiagonal ql algorithm 
subroutines slight modifications obtain bottom entries eigenvectors modifications reduce considerably computation storage requirements lanczos step 
words needed opposed pj full eigenvector matrix 
corresponding unmodified routines obtain full eigenvectors lanczos run time temporary space recurrence available store entirety eigenvector matrix 
global loss orthogonality reorthogonalization 
point discussion block lanczos algorithm assumed exact arithmetic various error bounds hold finite precision 
known global loss orthogonality computed lanczos vectors inexact arithmetic 
reasonable correction perform limited reorthogonalization keep sufficiently close orthogonal 
approach twofold identify mechanisms orthogonality lost apply model loss orthogonality determine correct situation 
context block shifted lanczos recurrence orthogonality lost different ways 
loss orthogonality adjacent blocks blocks recurrence orthogonal 
corrected local reorthogonalization 
second recurrence suffers global loss orthogonality respect blocks explicitly involved reorthogonalization 
correct block version partial reorthogonalization 
lastly important lanczos run shift recompute eigenvectors computed result previous lanczos run 
new reorthogonalization scheme external selective reorthogonalization ensure occur 
process goal apply minimal amount extra particularly requires accessing entirety maintain ffl orthogonality fundamental approach model lanczos recurrence finite precision 
recurrence model really happens oem mq represents roundoff error introduced step mq oem mq mq mq mf convenience define mq previous equation oem mq mf equation nearly sufficient computational purposes 
easily find norms blocks recurrence compute bounds terms term right side 
shifted block lanczos algorithm eliminate oem mq obtaining expression transpose premultiplying occurrence oem mq mf obvious substitution results mf mq represents local roundoff error 
formula explains global loss orthogonality 
model estimate bound loss orthogonality lanczos vectors determine correct loss orthogonality 

monitoring loss orthogonality 
development modeling procedure parts bounds available norms kw kb kb kw kb kw kb kw ka ka kw kg equation compute bound kw step 
part development addresses bounds blocks explicitly involved orthogonalization lanczos vectors recurrence 
blocks loss orthogonalization depends loss incurred previous steps 
bounds loss orthogonality available previous steps simulation fig 

initialize ffl ffl roundoff unit blocksize number degrees freedom ffl loop ffl fi fi ffl ff ff ffl fi fi fi fi fi ff ff 
fig 

simulation loss orthogonality recurrence 
quantities lanczos recurrence required simulation ff ka grimes lewis simon fi kb fi oe oe smallest singular value addition follow making standard assumption bound error term kg ffl left unstated origin initializing terms examining uncover particular artifact block lanczos algorithm 
reason care compute qr factorization assume mq identity matrix kek ffl reasons discussed assume kw ffl follows kw fi fi ffl ff ff ffl fi notice fi fi ffl step term appear fi fi step contributions fi fi fi fi appear product 
growth bound occurs fast fi fi condition number analysis ordinary lanczos algorithm unity corresponding term condition number nonzero matrix 
loss orthogonality occurs rapidly block lanczos algorithm particularly significantly larger general 
different related analysis show term appears bound observed growth observed lanczos recurrence 
inexpensive correction needed recurrence useful step local reorthogonalization performed 
lanczos recurrence just special form gram schmidt orthogonalization local reorthogonalization seen simple generalization reorthogonalization required computing orthogonal factorization single block 
local reorthogonalization ensures ffl orthogonality holds successive blocks lanczos vectors 
note local orthogonalization step performed completion partial reorthogonalization 
storage issue local reorthogonalization performed obvious modification algorithm computing recurrence 

partial reorthogonalization 
global loss orthogonality modeled recurrence corrected different schemes 
selective orthogonalization scheme parlett scott partial reorthogonalization scheme simon 
selective orthogonalization takes advantage fact orthogonality lost exactly direction eigenvectors represented selective orthogonalization implemented steps 
lanczos recurrence interrupted eigenvector converges 
shifted block lanczos algorithm eigenvector computed requires access previous blocks second step occurs model indicates orthogonality lost direction eigenvector 
second step requires latest lanczos blocks computed eigenvector require access preceding blocks partial reorthogonalization interrupts recurrence preceding blocks simulation indicates great loss orthogonality 
reorthogonalization step requires access reason partial reorthogonalization previously recommended situations eigenvectors interest solving sparse linear equations 
extra cost application partial reorthogonalization extra payoff orthogonality restored converged nearly converged eigenvectors simultaneously 
table comparison partial selective reorthogonalization 
matrix eigen block partial selective values steps 

steps steps plat blocksize lowest modes 
blocksize modes 
shifting block recurrence accelerate convergence eigenpairs cause eigenpairs converge rapidly 
frequently eigenpairs converge block step recurrence established 
circumstance selective orthogonalization possibly greater requirements accessing partial reorthogonalization 
selective orthogonalization require eigenvector computation step partial reorthogonalization occur steps typical problems 
possible combine schemes carry partial reorthogonalization computation eigenvector selective orthogonalization clear combination effective partial reorthogonalization 
see discussion issues ordinary lanczos recurrence 
table summarizes reorthogonalization requirements extensive 
number selective orthogonalization steps table number block steps eigenvalues converge number partial reorthogonalization steps number block steps partial reorthogonalization performed 
implementation lanczos recurrence uses block generalization partial reorthogonalization block recurrence 
single vector version simulation shown previously provide order magnitude estimate growth loss orthogonality bound 
block version estimate loss orthogonality determine reorthogonalization necessary 
previous indicates reorthogonalization needed max ffl reorthogonalization carried block grimes lewis simon vectors order block generated recurrence strictly orthogonal predecessors 
leads partial reorthogonalization algorithm fig 
maintaining orthogonality lanczos step computing update recurrence max max max ffl orthogonalize orthogonalize orthogonalize reinitialize recurrence ffl fig 

partial reorthogonalization 
note orthogonalization involves inner products 
requires storage lanczos vectors product secondary storage alternatively reapplying lanczos vectors 
appropriate form depends cost 

external selective orthogonalization 
different type loss orthogonality occurs context shifted inverted lanczos algorithm 
possible computing eigenvalues shift oe eigenvalues vectors computed shift oe external selective orthogonalization efficient way keeping current sequence lanczos vectors orthogonal previously computed eigenvectors avoiding recomputation eigenvalues known 
external selective orthogonalization motivated classical selective orthogonalization algorithm development entirely new 
theory sufficient orthogonalize starting block known eigenvectors subsequent lanczos vectors orthogonal 
course hold practice 
global loss orthogonality occurs similar lanczos vectors addition computed eigenvector exact 
contribution sources error recomputation eigenvalues vectors analyzed 
approximate eigenpair 
clarity denote current shift oe new relationship eigenvector lanczos vectors obtained shift oe new premultiplying finite precision recurrence obtain mq oe new mq mq mq mf assume nonsingular 
obtain bound loss shifted block lanczos algorithm orthogonality norms sides ky mq kb ky oe new mq mq ky mq kb ky mf partial reorthogonalization define recurrence relation quantity bound loss orthogonality lanczos vectors 
assuming ky mq obtain kb ky oe new mq mq kb ky mf bound right hand side st step 
terms righthand side equation second easily computed standard assumption bound third kf need bound term ky oe new mq mq spectral transformations preserve eigenvectors approximate eigenvector spectrally transformed problem 
define transformed residual vector new oe new oe new new oe new mq oe new mq new mq follows ky oe new mq mq fl fl fl fl oe new fl fl fl fl kz new mq kz new mq new kz new km kz new km kq km kz new km simple recurrence gives bound loss orthogonality observed kb fl fl fl fl oe new fl fl fl fl kb kz new km analysis applies buckling spectral transformation eigenvector orthogonality error kq oe new ffi kq kq kq kf transformed residual vector new oe new ffi ky oe new new grimes lewis simon analysis recurrence buckling context kb fl fl fl fl oe new fl fl fl fl kb kz new kk recurrences provide mechanism estimating loss orthogonality externally computed eigenvectors regardless source 
requires computing transformed residual vector new norm recurrence applies situations eigenvectors known 
example vibration analysis structures singular called rigid body modes zero eigenvalues vectors computed cost factorization 
typically cost computing residual norms vectors involved external selective orthogonalization cost additional step lanczos recurrence 
context lanczos code larger shifting strategy attractive information lanczos recurrence bound errors computed eigenvectors avoid having compute kz new km provide analysis case approximate eigenpair computed lanczos code previous shift oe old general form exclusively code 
partial reorthogonalization define recurrence relation quantity estimates loss orthogonality lanczos vectors respect recurrence defined fi ff oej fi kz new km initialize terms fi fi defined recurrence 
term ff oej oe external selective orthogonalization performed ffl 
relatively large residual computed eigenvector cause frequent reorthogonalization noted usually small number vectors involved 
external selective orthogonalization implemented fig 

lanczos iteration determine set vectors eigenvectors selective orthogonalization orthogonalize vectors 
orthogonalize vectors 
lanczos step update recurrence vector greater ffl ffl orthogonalize set ffl fig 

external selective orthogonalization 
unnecessary perform external selective orthogonalization previously computed eigenvectors 
evident main shifted block lanczos algorithm driving forces loss orthogonality oe appear loss orthogonality occur direction eigenvectors corresponding eigenvalues close new shift 
furthermore discussed eigenvectors usually close new shift need considered order avoid confusing new eigenvectors old 
implementation reduce cost maintaining orthogonality 
set eigenvectors external selective orthogonalization usually eigenvectors corresponding known eigenvalues closer shift 
eigenvalues discarded analysis block tridiagonal system 
effect required external selective orthogonalization dramatic suggested analysis 
proximity shift driving force growth recurrence begins ffl 
term kz new km usually near ffl 
eigenvalues convergence tolerance usually ffl code 
furthermore spectral transformations preserve eigenvectors preserve property best minimizers approximate eigenvalues see discussion need modify approximate eigenvectors 
result external selective orthogonalization happens expect step eigenpairs nearest frequently simultaneously accurate nearest new shift 
experimental results shown examples table 
results shown refers selection described results shown uses vectors eigenvectors intervals current shift neighboring trust intervals 
cpu cost includes cpu time processor time 
difference costs variations gives rough idea added cost complete selective orthogonalization difference cost affects termination decision run changes choice shifts 
table external selective orthogonalization 
average total average total matrix number number cpu number number cpu vectors steps cost vectors steps cost plat blocksize lowest modes 
blocksize modes 
involve 
order avoid repeated computation selective orthogonalization vectors result stored random access file eigenvectors computation performed actual lanczos run begins 

summary reorthogonalization schemes 
summary form block lanczos algorithm production code 
scheme consists applying turn external selective partial local reorthogonalization result single block lanczos step 
schemes applied respective model signals need applied grimes lewis simon orthogonality lost badly repeated needed 
local reorthogonalization applied step 
may applied repeatedly normally occurs recurrence broken cause termination 
integration indicated fig 

initialization set set choose columns obtain mq lanczos loop set oem mq set mq set compute mq mq evaluate fl recurrence vector perform selective orthogonalization necessary evaluate recurrence perform partial reorthogonalization necessary repeat times recompute orthogonal factor orthogonal factorization occurs step loop fig 

spectral transformation block lanczos algorithm preserving semi orthogonality 

cost analysis termination lanczos run 
block lanczos algorithm exists part larger code lanczos run solves subproblem 
environment ways lanczos run terminate 
eigenvalues required subproblem converged 

block ill conditioned singular 
case continuation lanczos run numerically difficult impossible 
singular ill conditioned blocks encountered reasons ffl shift close eigenvalue 
ffl effective space lanczos vectors exhausted compute orthogonal vectors problem finite eigenvalues 
shifted block lanczos algorithm ffl dependencies starting block cause singular stage 

eigenvalues farther shift appear converging slowly 
estimated cost computing current lanczos run great new shift chosen 
easy detect cases 
minor complication want eigenvalues closest specified value know advance eigenvalues required side 
shift conservative code looks eigenvalues required complete total may represent needed side 
result may terminate early hindsight 
breakdown recurrence expected 
causes try avoid shift selection process second occurs primarily user evaluation code uncommon faced problems finding eigenvalues matrices blocksize 
third seen 
breakdown detected mechanisms norm residual block small compared norm diagonal block diagonal block ill conditioned presumed rank deficient 
relative norm ffl case 
second compute step extreme singular values diagonal block terminate condition number ffl really want condition number cost singular value decomposition matrix trivial compared cost sparse block solve 
common reason termination computing eigenvalues current run inefficient 
normally eigenvalues far shift converge slowly require large number steps 
usually fastest convergence occurs early number eigenvalues converging step tapering length run increases 
initially cost eigenvalue decreases rapidly cost factorization amortized eigenvalues 
convergence rate slows costs increase average cost increases 
goal minimum average cost 
cost lanczos run depends number parameters function number steps taken 
factorization typically represents largest single cost occurs 
large constant cost step comprising matrix block solve multiplication operations recurrence 
cost eigenanalysis increases quadratically number block steps 
inasmuch eigenvalue nearest shift usually converge dominates subspaces frequency partial reorthogonalization needed generally independent number eigenvalues converged represents quadratic term 
terminating run computing converged eigenvectors lanczos vectors cubic term 
determine terminate lanczos run modeling cost continuing recurrence current step 
residual bounds estimating accuracy eigenvalues monitored step step observed changes estimate convergence 
attempt locate point individual run average cost eigenvalue minimized 
heuristic attempt minimize average cost eigenvalues 
effectiveness heuristic demonstrated particular example table 
grimes lewis simon table comparison variations termination model 
standard strategy termination early termination late matrix shifts block cpu shifts block cpu shifts block cpu steps cost steps cost steps cost plat blocksize lowest modes 
blocksize modes 
assume measure real user cost including available 
cubic model cost obtain squares fit real cost preceding steps 
model predict real cost steps 
cost final step computing eigenvectors estimated measurements components computation appear recurrence 
start process require certain minimum number steps taken 
number required function blocksize type problem indicated table 
values table heuristic values derived extensive empirical testing 
rate convergence eigenvalues estimated weighted geometric average change accuracy ritz value previous steps 
extrapolate estimate accuracy eigenvalues small number additional steps 
number extrapolated steps function blocksize type problem actual values table 
continue lanczos run estimated average cost eigenvalue decreases steps extrapolate convergence 
addition predict eigenvalues remaining computed converge steps corresponding twice number steps table continue recurrence avoid computing factorization 
table steps initialize cost model convergence extrapolated 
vibration buckling modes modes initial extrapolation initial initial extrapolation blocksize steps steps steps steps steps experience scheme cost curve relatively flat near minimum making choice appear flexible 
misleading global minimum quite sensitive local choice 
demonstrate value tuned dynamic scheme evaluating cost include simple experiments 
modified standard scheme terminate early force run steps normally 
results table show sensitivity small changes stopping procedure 

choice blocksize starting block 
largest benefits block algorithm cost reduction treating multiple eigenvalues 
shifted block lanczos algorithm costs obtaining orthogonal factorization eigenanalysis increase quadratically blocksize general best choose blocksize large largest expected multiplicity eigenvalues moderate multiplicities expected 
particularly important clusters eigenvalues expected table 
blocksize works problems rigid body modes 
rarely find cost effective 
effect input output cost considerable 
product runs variety commercial systems extensive testing resulted default blocksize systems 
input output particularly expensive 
environment input output cost costly blocksize effective 
provide results small number experiments optimal blocksize change systems 
start lanczos algorithm guess solution 
lanczos run randomly generated starting block 
approximate eigenvectors ritz vectors ritz values available estimates eigenvectors 
time eigenvectors available know shift taken 
take starting block built ritz vectors 
vectors available column starting block taken sum ritz vectors 
fill block randomly adopted approach extensive experiments comparing various choices starting blocks including mixtures ritz vectors random components 
find significant change cost approaches 

experimental results 
algorithm described developed general purpose structural engineering package 
goals software design independent form sparse matrix operations representing matrices involved matrix block products triangular block solves sparse factorizations 
msc different approaches sparse linear equations involved profile sparse factorization 
cases factorization solve modules standard operations msc directly 
code incorporated structural engineering packages mathematics libraries supplied boeing computer services ext convex computer 
implementations sparse linear equations solved vectorized codes 
code computes stable symmetric indefinite factorization described 
section report experiments standard ext 
experiments performed sun workstation megabytes main memory 
codes written fortran run optimization option sun fortran compiler quite effective inner loops numerical operations 
note code block code run blocksize 
results greater costs analysis tridiagonal system results parlett available 
cost tridiagonal analysis ext available cost cray research computers 
grimes lewis simon general 
test problems drawn symmetric eigenproblems boeing test collection 
code solve eigenproblems degrees freedom largest problem current test collection order problems smaller 
result order independent costs lanczos algorithm primarily analysis block tridiagonal systems important large production problems 
examples report costs required eigenanalysis function blocksize 
largest problem report breakdown cost terms functional operations code 

empirical examples 
problems boeing test collection demonstrate particular aspects algorithms 
close small subset illustrate global behavior code particularly concerns aspects user exercises control 
chose test problems listed table collected actual industrial research applications 
table test problems 
nonzeros matrix order description television station story skyscraper nuclear reactor containment floor plat atlantic indian oceans ordinary eigenvalue problem 
problems primary examples 
model nuclear reactor containment floor seismic analysis plat finite difference model currents 
models included test collection large number eigenpairs required 
cases number modes large analysis depended knowing modes specified intervals 
details eigenanalysis nuclear reactor containment floor problem function blocksize table 
results exhibit pattern common problems number factorizations lanczos runs decrease rapidly blocksize increases cost eigenanalysis initially decreases increases 
reflects fact blocksize increases length lanczos runs increase terms dimension longer runs involve greater costs particularly maintaining semi orthogonality back transformation eigenvectors 
relatively small matrices costs longer runs early dominate costs factoring applying matrix operators 
analysis single lanczos run blocksize cost problem nearly times cost analysis shifting 
desired eigenvalues oceanography problem interior spectrum 
eigenvalues eigenvalues values want 
problem analyzed spectral transformation 
shifting barely possible compute eigenvalues interval eigenvalues interest shifted block lanczos algorithm table computation eigenvalues shift statistics 
block cpu factor runs block size cost steps solves impossible compute 
secondly eigenvalues singleton zero positive occur pairs 
multiple eigenvalues play havoc ordinary point lanczos algorithm 
blocksize difficult code sure exhibited full multiplicities eigenvalues shifting strategy prepared assist 
shifting single vector code ericsson ruhe unable cope multiplicities eigenvalues 
table shows difficulty arises rank determination blocksize multiplicity eigenvalues 
blocksize distinguish truly larger number copies multiple eigenvalue 
result code large number ensure full multiplicities eigenvalues 
shown discrepancy number factorizations number runs 
incur new cost factorizations require extensive external selective orthogonalization ordinary run 
surprisingly point version code able cope problem 
expected blocksize larger multiplicity difficulties 
table computation eigenvalues plat shift statistics 
block cpu factor runs block size cost steps solves model building housing television studio 
claim fame presence isolated double near triple eigenvalues 
lowest eigenvalues table 
close eigenvalues cause relatively slow convergence causes code runs expect 
problem solved easily single run increased cost 
note multiple eigenvalues provide challenges 
details table 
incomplete seismic model columbia center story skyscraper seattle washington 
spectrum model difficult lowest eigenvalues listed table 
largest eigenvalue structure grimes lewis simon table lowest eigenvalues 
table computation lowest eigenvalues shift statistics 
block cpu factor runs block size cost steps solves table lowest eigenvalues 

smallest eigenvalues nearly negligible compared largest eigenvalue close 
code determines clusters eigenvalues accuracy tolerance defaults ieee arithmetic 
apply tolerance transformed eigenvalues close treated cluster clusters isolated values 
note applied tolerance untransformed eigenvalues values cluster appropriate 
result problem counters usual shifting strategy case take shift close eigenvalues order overcome poor separation slow convergence 
distribution eigenvalues quite cluster represents worst case 
table documents performance code problem 
see problem costs larger offset additional power provide attacking close large clusters eigenvalues 
table breakdown cost function algorithm largest test problems 
breakdown typical larger problems cost analyzing choosing shifts significant 
atypical startup cost high result large number vectors involved external selective orthogonalization 

summary 
results previous section illustrate characteristics shifted block lanczos algorithm 
large demonstrate behavior algorithm large problems 
larger shifted block lanczos algorithm table computation eigenvalues shift statistics 
block cpu factor runs block size cost steps solves table computation lowest eigenvalues cost breakdown 
percent cost block recur factor re block eigen start shift size rence ization 
tridiag 
vector select 
problems expect see cost factorization linear equation solutions increase faster linearly 
assuming eigenvalue distributions change cost reorthogonalization generating starting block eigenvector computation increase linearly change problem size 
block tridiagonal eigenanalysis shift selection remain constant contributions cost smaller 
note cost necessary important fraction cost strong argument preserving semi orthogonality complete orthogonality 
remind reader cost measures include factor traffic essential ingredient preserving semi orthogonality 
reader see difficulty making priori choice blocksize 
advantages disadvantages block algorithm clearly demonstrated see optimal choice blocksize 
choice problems sun workstation optimal vibration problem rigid body modes 
systems impose higher costs higher effective particularly problems large factored matrices reside secondary storage 
issues kept perspective power spectral transformation 
problems described solvable practical sense naive reduction standard form 
example oceanography problem plat analyzed transformation desired eigenvalues close appearing steps 
experiments steps resulted little improvement 
possible solve simpler problems inverting problem clearly sufficient problems 
oceanography problem plat singular nontrivial shift required 
shift lower endpoint single lanczos run compute lowest eigenvalues point cost blocksize 
contrast standard shifted code blocksize grimes lewis simon cost computing desired eigenvalues 
columbia center model characteristics 
naive reduction result problem separations separated eigenvalues simple reciprocal transformation clearly inadequate solve problem 
combined power block lanczos algorithm spectral transformation solve problems reasonable amount time 
matrix 
need interpret number negative eigenvalues oem oek ffi terms eigenvalues original vibration buckling problems 
result want prove follows table 
result conclude oe oe number eigenvalues oe oe assume oe oe case buckling analyses assume oe oe sign 
table interpretation oem oek ffi 
vibration analysis positive definite eigenvalues oe positive semidefinite eigenvalues oe fl fl cases dim cases buckling analysis positive definite eigenvalues oe oe positive semidefinite eigenvalues oe oe fl fl oe sign dim oe sign cases considered pairs 
cases assume problem definite generalized symmetric eigenproblem exists linear combination ffk fim positive definite 

kx mx positive definite 
apply obvious reduction standard form 
eigenvalues kx mx eigenvalues kl lm cholesky factor follows number eigenvalues oe number eigenvalues kx mx oe 
oei congruent lm oei simply oem decomposition oem gives number eigenvalues oe 
obviously interpretation inertia meaning ordinary eigenvalue problem 

kx mx positive semidefinite 
signs assigned infinite eigenvalues singular 
assume positive semidefinite zero eigenvalues 
exists nonsingular matrix wmw block partitioned matrix wmw identity matrix 
partition conformally shifted block lanczos algorithm linear combination ffk fim positive definite follows ff fi wmw positive definite 
positive definite matrix positive definite principal minors implies ffc positive definite 
satisfy wmw partition conformally equation implies substituting obtain finite eigenvalues kx mx eigenvalues schur complement sylvester theorem inertia oem inertia partitioned form ldl decomposition block decomposition block decomposition oei 
inertia entire matrix offset inertia block 
offset constant describes sign infinite eigenvalues 
infinite eigenvalues sign due fact positive definite linear combination exists problem definite generalized symmetric eigenproblem 
difference oe oe number eigenvalues oe oe constant term cancels 
furthermore vibration analysis know positive semidefinite 
follows ff fi positive semidefinite 
positive implies positive definite matrix 
inertia factored matrix retains exactly meaning positive semidefinite vibration case positive definite case 

kx ffi positive definite 
buckling analysis definiteness properties 
invert problem positive definite 
kx ffi implies ffi kx kx eigenvalues second equation finite 
transformed problem standard ffi form right hand side matrix positive definite 
determine number eigenvalues ffi lie image interval interest original problem 
determine number eigenvalues kx ffi oe find number eigenvalues grimes lewis simon inverted problem ffi interval variable corresponds interval oe variable subcases considered 
case oe 
interval mapped interval number negative eigenvalues kx ffi number eigenvalues ffi 
simply number negative eigenvalues ffi ffi 
second case case oe 
transformation transforms oe oe number eigenvalues oe number eigenvalues ffi interval oe 
ffi ffi oe oe negative ffi oek ffi note number eigenvalues oe simply oek ffi 
third case oe 
case interval oe treated union interval interval oe 
ffi eigenvalues subinterval 
second subinterval transformed oe 
union ffi ffi oe ffi oek ffi eigenvalues 
case oek ffi number eigenvalues oe 
buckling problem infinite eigenvalues ffi singular 
signs eigenvalues irrelevant interpretation interpretation considers finite subintervals 

kx ffi positive semidefinite 
general case consider buckling analysis positive semidefinite 
combine analysis semidefinite vibration case positive definite buckling case assign signs zero eigenvalues 
assume semidefinite zero eigenvalues 
exists nonsingular matrix partition wk ffi conformally eigenvalues kx ffi wk ffi 
eigenvector partitioned conformally shifted block lanczos algorithm block transformed linear combination fie positive definite matrix 
equation implies finite nonzero eigenvalues kx ffi reciprocals nonzero eigenvalues schur complement partitioned form ldl decomposition oe wk ffi block decomposition oee block decomposition oe 
schur complement block form xa identity matrix inertia full matrix inertia oe offset inertia block 
notice offset depends sign shift describes signs eigenvalues oee definite eigenvalues oee positive negative 
offset zero shifts sign nonzero shifts sign 
difference oe ffi oe ffi number eigenvalues oe oe long shifts sign 
dimension nullspace known estimated factoring aei ae chosen smaller nonzero eigenvalue large factorization stable 
acknowledgments 
authors david scott participation initial design code thomas ericsson enlightening discussions preparation code 
particularly parlett interest intellectual support led important changes thought done 
grateful louis support 
linda kaufman provided fine example careful thorough editing 
boeing extended mathematical subprogram library boeing computer services box seattle wa 
vector implementation method large sparse symmetric positive linear systems tech 
report eta tr boeing computer services box seattle wa 
grimes influence relaxed supernode partitions method acm trans 
math 
software pp 

grimes lewis peyton simon progress sparse matrix methods large linear systems vector supercomputers internat 

appl pp 

cline golub calculations normal modes oceans lanczos method sparse matrix computations bunch rose eds academic press new york pp 

cullum donath block lanczos algorithm computing algebraically largest eigenvalues corresponding eigenspace large sparse real symmetric matrices proc 
ieee conference decision control pp 
ieee computer society 
grimes lewis simon cullum lanczos algorithms large symmetric eigenvalue computations vol 
theory birkhauser boston 
lanczos algorithms large symmetric eigenvalue computations vol 
users guide birkhauser boston 
computing eigenvalues large matrices lanczos algorithms shift invert strategy advances numerical partial differential equations optimization proc 
th mexico united states workshop gomez tapia eds proc 
applied mathematics vol 
society industrial applied mathematics philadelphia pa 
daniel kaufman stewart stable algorithms updating gram schmidt qr factorization math 
comp pp 

duff grimes lewis sparse matrix test problems acm trans 
math 
software pp 

ericsson user guide tech 
report university sweden 
generalized eigenvalue problem lanczos algorithm large scale eigenvalue problems cullum eds north holland amsterdam 
ericsson ruhe spectral transformation lanczos method math 
comp pp 

software package spectral transformation lanczos algorithm tech 
report university sweden 
boyle dongarra moler matrix eigensystem routines guide extension vol 
lecture notes computer sciences springer verlag berlin 
golub underwood block lanczos method computing eigenvalues mathematical software iii rice ed academic press new york 
grimes lewis scott simon shifted block lanczos algorithm msc proc 
msc user conference los angeles 
grimes lewis simon eigenvalue problems algorithms structural engineering large scale eigenvalue problems cullum eds north holland amsterdam 
shifted block lanczos algorithm solving sparse symmetric generalized eigenproblems tech 
report ams tr boeing computer services box seattle wa 
jones patrick software solving large sparse symmetric generalized eigenproblem tech 
report nas icase nasa langley research center hampton va august 
lanczos iteration method solution eigenvalue problem linear differential integral operators res 
nat 
bur 
stand 
lewis algorithms sparse matrix eigenvalue problems ph thesis dept computer science stanford university stanford ca 
lewis grimes practical lanczos algorithms solving structural engineering eigenvalue problems sparse matrices uses duff ed academic press london 
lewis simon numerical experience spectral transformation lanczos method tech 
report eta tr boeing computer services box seattle wa 

liu partial pivoting strategy sparse symmetric matrix decomposition acm trans 
math 
software pp 

newman flanagan eigenvalue extraction tridiagonal reduction method real eigenvalue analysis nasa contractor report cr nasa 
lanczos algorithm solution large generalized eigenproblems finite element method hughes ed prentice hall englewood cliffs nj 
parlett ericsson jensen implement spectral transformation math 
comp pp 

paige computation eigenvalues eigenvectors large sparse matrices ph thesis university london london uk 
error analysis lanczos algorithm symmetric matrix inst 
math 
appl pp 

parlett symmetric eigenvalue problem prentice hall englewood cliffs nj 
shifted block lanczos algorithm parlett refined error bounds updating eigenvalues growing symmetric tridiagonal matrix linear algebra appl pp 

parlett liu maintain semi orthogonality lanczos vectors tech 
report pam center pure applied mathematics university california berkeley ca 
parlett scott lanczos algorithm selective orthogonalization math 
comp pp 

saad rates convergence lanczos block lanczos methods siam numer 
anal pp 

scott block lanczos software symmetric eigenvalue problems tech 
report ornl csd oak ridge national laboratory oak ridge tn 
advantages inverted operators rayleigh ritz approximations siam sci 
statist 
comput pp 

simon analysis symmetric lanczos algorithm reorthogonalization methods linear algebra appl pp 

lanczos algorithm partial reorthogonalization math 
comp pp 

smith boyle dongarra moler matrix eigensystem routines guide lecture notes computer sciences vol 
springer verlag berlin 
