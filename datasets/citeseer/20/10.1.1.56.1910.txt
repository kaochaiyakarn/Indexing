compositional semantics description knowledge bases rules mira balaban information systems department industrial engineering management ben gurion university beer israel mira cs bgu ac il descriptions rules different complementary essential forms knowledge 
descriptions analytic closed rules contingent open 
forms integrated compiling form constructing hybrid framework 
hybrid solution keeps modular independent status approach needs underlying integration framework coherent compositional semantics defined 
introduce architecture hybrid knowledge base integrates descriptions expressive object oriented rules 
knowledge base manages database explicit descriptions facts consulting separate reasoners dl description languages reasoner rules reasoner 
architecture generalizes existing hybrids descriptions rules 
declarative semantics relies logic underlying semantics consistent operational semantics existing hybrids 
contribution building compositional semantics collection syntactic objects hybrid description knowledge bases 
compositional semantics role description knowledge base computational task computing descriptions predications rules 
respects modularity components allows operate different semantical policies variants enjoy different degrees description orientedness openness 
keywords knowledge representation description languages rules hybrid knowledge bases compositional semantics object oriented representation logic 
descriptions rules different complementary essential forms knowledge 
descriptions analytic closed rules contingent open 
historically descriptions rules developed separate lines different communities 
forms integrated compiling form constructing hybrid framework 
solution yields coherent framework requires reconstruction approach approach subordinate 
hybrid solution keeps modular independent status approach needs underlying integration framework coherent compositional semantics defined 
description languages dls collective name knowledge representation formalisms concentrate management essential descriptive vocabulary 
rests observation natural ontology providing information domain requires ability define organize intensional entities stand concepts roles domain 
main construct dls description complex term built top fixed set description terminological operators denotes concepts roles 
status descriptions emphasis direct semantics major distinction dls logics ai 
rules added description systems procedural operational basis means extending expressivity 
agreement integration framework standard formal treatment restricted descriptions 
approaches try compile rules dl approach extend rules framework classification mechanism introduce compositional semantics hybrid description knowledge bases description systems extended rules component 
respects principles ffl modularity knowledge components assumes dl semantics dl rules semantics ffl compositional semantics semantics composed separate semantics knowledge components 
ffl description oriented 
ffl preserve intrinsic properties knowledge components openness rules 
rules language logic expressive object oriented language 
compositional semantics defined collection syntactic objects description formulae predications 
object oriented nature logic key feature descriptions rules interpreted subsets logic 
rules component notions concepts roles instances membership inclusion built semantics 
result symmetric construction dl depends description operators depends rules constructed description formulae predications 
compositional semantics suggests architecture hybrid described 
includes independent reasoners dl behavior dictated description language semantics dl behavior dictated rules semantics particular reasoners operate different semantical policies open world assumption owa dl closed world assumption cwa problems mismatch different components avoided due common underlying semantics logic 
query mode manager dispatches queries reasoners 
reasoners try answer 
succeed return answer manager 
intermediate results obtained reasoner 
manager 
database facts dl consults consults rules descriptions description operators architecture hybrid descriptions kb rest introduce description knowledge bases including management descriptions rules section 
section declarative semantics hybrid introduced including short presentation logic dls sorted logic languages 
section presents different compositional semantics possible hybrid framework compares advantages weaknesses respect stated principles hybrid integration 
section discussion research 
knowledge bases integrate descriptions rules descriptions formulae specify inclusion relations concepts roles membership relations individuals concepts pairs individuals roles 
concepts roles specified small set description constructors meaning built specification language 
descriptions knowledge base reasons descriptions terminology concepts roles consulting collection rules 
form integration descriptions rules appears rule base strengthened terminology 
case rules enable inference new descriptions case descriptions enable inference new facts 
section introduce description languages describe forms integration rules 
description languages description languages form spin kl school concentrates languages provide constructs management analytic domain terminology 
dls emphasize importance direct defined semantics limited tractable inferential service 
typical terminology consists concepts roles stand subsets binary relations domain individuals respectively 
concepts assumed form taxonomy partially ordered structure derived lattice subsets 
accordingly alphabet dl includes unlimited supply symbols concepts roles individuals small set term forming operator symbols description constructors 
descriptive terms formed applying term forming operators concept role symbols 
example concept mechanical plant plant produces mechanical products described concept term plant produces mechanical product description constructors plant mechanical plant concept symbols produces role symbol 
typical dl knowledge base distinguished components intensional component called tbox terminology defined primitive concepts roles introduced extensional component called abox describes individual members concepts role relationships hold individuals 
terminological definitions provide necessary sufficient conditions tbox abox defs primitives members members structure typical dl kb 
membership concept role primitive specifications provide necessary conditions 
structure typical dl knowledge base 
table presents particular descriptions kb 
tbox includes primitive concepts primitive roles defined concepts 
plant concept introduced primitive concept members located places 
produces role introduced primitive role hold plants products 
mechanical plant concept defined plant produces mechanical products risky place concept defined place toxic waste buried 
description languages vary sets description constructors 
henceforth denote dl set constructors formal definition description language syntax symbols language primitive concept symbols concept name symbols primitive role symbols role name symbols object symbols special concept symbols top bottom finite set concept role forming operators 
terms terms concept terms role terms 
concept role terms concept role symbols syntactically legal applications concept role forming operator terms respectively 
concept term kind denoted role term kind denoted formulae primitive introductions formulae allowed terminology component usually restricted primitive symbols left side primitive symbol 
semantics meaning formulae set theoretic semantics 
interpretation pair upsilon domain interpretation function upsilon concept symbols assigned subsets role symbols assigned binary relations object symbols assigned elements upsilon top upsilon bottom empty set 
interpretation function upsilon augmented concept role terms building fixed meaning operator example role inverse meaning concept terms defined follows different notations dl literature 
primitive definitions denoted 
membership denoted denoting subsumption 
formulation follows notation 
role symbols assigned total functions 
interpretation role symbols somewhat closer logic view methods 
view relations set valued functions simplifies presentation 
role symbol domain element upsilon denotes set domain elements related upsilon set upsilon kind 
description words description tbox primitive product top product top concepts place top place top waste product waste product radioactive material product radioactive material product plant top located plant top located top dangerous plant plant dangerous plant plant radioactive material radioactive material waste waste toxic waste toxic waste primitive produces relation produces range product roles objects products product may buried place buried domain product range place located relation located range place objects places defined mechanical plant plant mechanical plant plant concepts produces mechanical products produces mechanical product risky place risky place toxic waste buried inv buried toxic waste abox concept pl mechanical plant pl mechanical plant members radioactive waste waste radioactive material role pl produces product pr pl pr produces members buried dp dump dp buried pl located dp pl dp located table descriptions data base intensional descriptions extensional assertions upsilon upsilon upsilon upsilon upsilon upsilon upsilon upsilon upsilon upsilon role upsilon upsilon upsilon inverse theta upsilon satisfaction formulae interpretation defined interpreting set equality set inclusion membership interpretation model set formulae satisfies formulae 
formula fl logically implied terminology fl satisfied model terminology 
concept term coherent respect terminology exists model upsilon upsilon phi 
main relationship terms subsumption relation term subsumed term terminology model upsilon upsilon upsilon 
equivalence terms defined way subsumption 
proposition iff description knowledge bases answer queries inter relationships concepts descriptions properties concepts individuals membership individuals concepts 
subsumption relationship plays major role query answering queries phrased subsumption queries 
example query plant necessarily located place 
rephrased subsumption query plant located place answer true range role located place plant located 
similarly descriptions data base table implies subsumption risky place place domain role inv buried place 
implies pr mechanical product dp risky place 
results pl instance mechanical plant producing pr 
holds toxic waste buried dp 
normalize compare approach classic back knowledge base kept classified taxonomy normalized concept descriptions 
query answered augmenting taxonomy concepts query checking relative positions taxonomy 
different constraints approach kris crack reduces subsumption problem coherency 
major efforts devoted study subsumption problem context different terminologies study subsumption classification algorithms existing systems development subsumption algorithms 
research efforts show subsumption tractable set term constructors severely limited 
inferencing dls essentially different standard inference ai logic databases operate closed world assumption cwa 
main point diversion dl systems consider definitions vocabulary temporary population knowledge base 
example query typical ai database context formulated query individual members plant objects plant related role located members place concept 
dls understood operating open world assumption owa momentary population knowledge base provide sufficient evidence essential definitions terminology 
dls unique developing knowledge bases essential domain vocabularies 
kind 
description words rule rules mechanics constructed mechanical plant gamma plants 
constructed mechanics plant located risky dangerous plant gamma place dangerous plant 
plant located risky place fact pl constructed mechanics 
constructed pl mechanics table rules component rules rule formula form gamma description formula order logic atom predicate symbol terms literal description formula negation atom negation 
rules called facts hybrid integration rules descriptions reasonable consider part extensional abox 
integration rules descriptions expected extend separate inferential capabilities 
example consider integration descriptions data base table assertion 
rules table 
consider query find mechanical product produced dangerous plant mechanical product inv produces dangerous plant answer pr holds integrated knowledge base 
rules component henceforth implies pl mechanical plant descriptions component henceforth dl implies pl plant pr mechanical product 
dl infers toxic waste dp risky place dp inv buried 
infer pl dangerous plant 
eventually dl infers pr inv produces dangerous plant 
description formulae restricted rules interpreted logic programming see concept role symbols interpreted ary ary predicate symbols respectively 
section suggest uniform declarative semantics hybrid integration descriptions rules logic underlying semantics 
framework rules simply logic rules interpreted semantic structures logic 
rules existing systems subsection shortly describe specific rule sets studied literature implemented description systems 

back classic back classic systems allow rules form gamma classic antecedent classified concept description 
rules systems apply terminology part subsumption reasoning 
forward chaining manner propagate membership information individuals 
rule propagation lead contradictions 
case systems reject membership assertion triggered rules 

log carin works descriptions added datalog function free rules constraints logic programming style 
rule heads description formulae atoms rule body description formulae restricted type 
log rule body include membership concept formula carin description formula rule body membership role formula works complexity limits combination rules descriptions studied inference algorithms introduced 
declarative semantics semantics integrated descriptions rules knowledge base defined partially ordered domain entities related subset membership relationships 
relationships entities captured methods entities standard relations 
intended meaning description operators built semantics needs axiomatized oracle dl component see 
main advantage semantics supporting truly hybrid modular architecture component directly interpreted independently 
rules component logically implies descriptions facts known descriptions facts set rules built meaning subset membership methods 
descriptions component logically implies descriptions known descriptions description oracle built meaning subset membership methods 
semantics suggest chapter logic 
components appear natural subsets logic interpreted semantic structures 
shortly describe logic define dls sorted logic languages 
define declarative semantics hybrid architecture 
logic logic domain consists objects methods 
addition object constructors functions defined objects partial ordering objects stands subset relationship binary relation objects stands membership relationship 
condition set guarantees membership object extended super class object 
underlying intensional approach assumes essence object lies behavior 
objects just wish talk mary mary car cars ben gurion university employees role mother 
particular priori distinction individual class objects object depending behavior relationship objects 
understood subset understood member subscript omitted simplicity 
approach particularly powerful collective entity viewed class objects individual object member class viewed object 
advantage singleton identified member 
example chains relations mary student course distinction individuals classes concepts distinctions enforced imposing sorts 
methods partial functions objects 
single valued scalar set valued methods 
methods describe behavior objects provide information objects 
example spouse children information bank account captured methods 
children method example method takes additional arguments children object object application method extra argument context 
method spouse take additional arguments function argument called attribute 
name age address attributes 
methods describe actions buy meet treat typically take additional arguments parameters actions 
ary functions 
methods classified inheritable non inheritable 
example color inheritable attribute bear non inheritable attribute faculty children non inheritable set valued method mary various specializations mary need inherit value children mary 
inference machinery uses distinction inheritable non inheritable methods propagating values inheritable methods hierarchy long overwriting caused 
inheritance extends relationship blocked step 
way mary student inherits registered college attribute value pair specialization inherit property inherit property inheritance extend mary 
table summarizes correspondence dl roles logic methods dls logic ary feature single valued method ary role set valued method binary feature single valued attribute binary role set valued attribute logic syntax terms logic expressions denote objects domain 
example mary polygon sides polygon angles cars employees bgu id terms denoting objects 
id terms polygon sides polygon angles may denote distinct intensional objects extension set triangles 
id terms employees cars object constructors denote total functions domain map objects objects 
variables appear id terms classical order logic capital letters denote variables 
atomic formulae logic called molecules kinds molecules data signature molecules 

molecules map partial ordering membership relation example dl symbols logic symbols respectively 
molecules meaning mary woman object denoted mary related denoted woman 
woman person object denoted woman related denoted person 
polygon sides subset relationship denotations id terms 
polygon 
data molecules assertions values methods features roles get objects 
example data molecules meaning explanation mary husband fred fred mary husband 
husband attribute 
feature bear color ffl 
grey bears grey 
color inheritable attribute 
feature mary teach 
graph mary teaches aut 
graph 
teach attribute role 
bear color north ffl 
white northern bears white 
color inheritable non 
attribute feature son children 
pat child son children non attribute role 

signature molecules assertions types features roles 
example husband male children person assumed universally quantified assert values husband feature males values children role type person 
rule female married gamma husband assumed universally quantified asserts feature husband applies object denoted member female married class married female 
logic includes regular predication formulae order language 
formulae constructed connectives quantifiers usual order manner 
semantics methods reified objects domain semantic structure 
reification accomplished associating object feature infinity features arity role infinity inheritable feature infinity inheritable role infinity type feature infinity type role infinity 
think object association array features array roles array inheritable features array inheritable roles array array role types features roles types referenced indirectly object names specified arity 
secret high logic features roles types reified object names quantification carried just object names 
association functions 
ffl 
ffl 
assign object mentioned arrays features roles inheritable features inheritable roles types features types roles respectively 
denotes element superscript corresponds number additional arguments feature role takes 
semantic structure logic language tuple hu 
ffl 
ffl 
partially ordered domain membership relation described previous section 
interpretation mapping object constructors standard function mapping 
mappings associations domain objects features roles types explained 
molecules assertions subset relationships membership relationships objects denoted id terms molecule 
data molecules assertions value feature role object 
data molecule non inheritable feature arg arg val arg arg val id terms 
semantic structure variable assignment id terms arg arg val mapped objects partially ordered domain 
id term mapped non inheritable feature arguments associated object symbol mapped 

term true 
defined arg arg equals val example mary husband fred means non inheritable feature attribute ary method associated husband value fred mary meaning data molecules non inheritable roles assertions role values similar arg arg 
fval val holds 
defined arg arg set value includes set val val meaning inheritable data molecules defined similarly ffl 
ffl 
mappings 
inheritable data molecules select preferred canonical model logic program 
rational preference criterion inheritable features roles preferably propagate hierarchy interpretation objects values undefined 
propagation blocked relation single step inheritance apply 
signature molecules assign types features roles 
signature molecule feature arg arg val val serves typing expression kinds applications application non inheritable feature objects members applications inheritable feature objects subclasses signature molecules roles account typing non inheritable inheritable data molecules roles similar fashion 
type correctness conditions enforced logic programs requires feature role data molecule correctly typed signature molecules serve typing expressions 
herbrand models concepts needed compositional semantics herbrand universe logic language set ground id terms 
herbrand base language set ground molecules 
herbrand structure structure subset herbrand base closed logical implication 
requirement needed ground molecules may imply molecules built meaning language symbols 
satisfaction formulae structures herbrand models models defined usual 
dls sorted logic languages finite set description operators 
define description language description operators sorted restricted logic language 
definition independent syntax 
symbols finite set description operators 
set concept symbols 
ftop set primitive concept symbols set defined concept symbols 
set role symbols 
set primitive role symbols set defined role symbols 
set individual symbols called object symbols 
set sort symbols role 
psi sort assignment 
psi psi psi nary operator assigned sort form tuple example psi role concept concept 

sorted terms concept role object symbols terms sorts psi 
complex terms formed sorted applications description operators terms 
complex term op psi op sorted sort sort term denote concept role individual object terms respectively 
defined concept role symbols denoted respectively 

formulae ffl ffl ind 
fy 
fy syntactic shortcut ffl ind 
fy gamma 

fy syntactic shortcut ffl 
fo syntactic shortcut semantics semantics logic language defined partially ordered domain greatest elements terms mapped elements symbols top bottom assigned greatest elements respectively 
formulae interpreted interpreting concept terms equality partial ordering respectively object term usually symbol concept term interpreted membership binary relation role terms interpreted methods equality implication respectively pair object terms symbols role term interpreted method value assertion 
subscribed quantifier ind quantifies sort individuals 
intended meaning description operators logic theory fl called corresponding theory fl part main property provides equivalence standard set theoretic semantics description languages 
set formulae gamma formula fl gamma dl fl iff fl gamma fl fl dl denotes logical implication set theoretic semantics description languages fl denotes logical implication logic 
details consult corresponding theory fand role 
major result corresponding theory fl semantics logic provides full account correctly simulates logical implication subsumption relations preserving direct semantics 
corollary terms fl logic theory corresponds terminology gamma iff fl gamma fl declarative semantics hybrid architecture hybrid knowledge base described 
language descriptions fl corresponding logic theory rules set rules consults 
models hybrid knowledge base defined logic models rules fl formula true hybrid knowledge base logically implied rules fl declarative semantics provides criteria inference tools soundness completeness 
provide hint nature computational tools behavior kind expected queries 
important semantics carries closer relationship inference mechanism enables finer design 
section introduce alternative compositional semantics sound respect declarative semantics 
compositional semantics gets closer computational tools respect properties 
modularity dl reasoners keep independent status 
knowledge base able provide separate services dl reasoners 
dl reasoners operate different policies cwa owa dl 

compositional behavior knowledge base able compose separate dl services possibly reasoning services form compositional behavior 
semantics composed separate semantics dl 
description oriented account description major kind query knowledge base expected provide answers 
different query behaviors reflected semantics 

preserve component properties intrinsic property rules component frequent modifications accounts non analytic expert knowledge 
tolerance modifications additions desirable 
semantics dl dl semantics dl structure compositional semantics compositional semantics description knowledge base section introduce compositional semantics description knowledge bases knowledge bases rules component added dl component order enrich description inferential capabilities infer new facts 
compositional semantics defined set syntactic objects model theoretic terms 
find approach directly related computational tasks knowledge base 
compositional semantics constructed iteration separate semantics dl dl reasoners respectively 
dl sets syntactic objects 
way principles modularity compositionality kept 
compositional semantics visualized 
general structure compositional semantics follows define kb def dl kb kb semantics dependent initial version kb 
kb kb kb kb dfl kb def kb restriction compositional semantics defined hybrid architecture restricted rules component description formulae rule role descriptions reason wish set rules rules set logic rules role formulae shortcuts logic rules logic atoms 
note terms logic definite positive logic program 
exact nature syntactic objects major decision design compositional semantics 
theorem proving logic programming tradition natural take syntactic objects ground atoms underlying logic formalism 
yields compositional semantics 
semantics description oriented account role descriptions atoms logic 
removing limitations herbrand style semantics leads compositional semantics ground descriptions 
singlef semantics 
expressive power openness respect rules component obtained semantics compositional semantics descriptions necessarily ground 
expressivity relationships semantics singlef reservations singlef holds reasoner consults set definite positive rules negation semantics defined reasoner consults set definite positive rules 
semantics singlef share common semantics dl reasoner maps set ground descriptions larger set ground descriptions 
semantics reasoners singlef terms underlying logic formalism 
defined repeated applications possibly infinite operator depend set rules rules database realistic assumption satisfied conventional semantics logic programs 
particular characterization satisfied ground fixpoint semantics unf semantics definite positive logic programs iterated fixpoint semantics stratified definite logic programs negation 
back classic systems dl component provided declarative formal semantics 
combination descriptions rules operationally described 
singlef compositional semantics correctly account rule propagation back classic 
systems sound respect suspect classic complete due completeness declarative component 
herbrand model semantics atomic descriptions semantics constructed logic herbrand models gradually increasing database atomic descriptions facts 

dlh semantics dl set logic ground molecules 
dlh fh herbrand model fl 
rh semantics semantics assumes rules reasoner provided intended herbrand model semantics 
set logic ground molecules 
rh intended herbrand model rules 
compositional semantics define th def dlh rh th atom concept descriptions formulae def th example rules gamma henceforth shortened notation stands times 
th dlh rh th dlh rh th 
th fb kg fa kg claim sequence th th ascending chain herbrand structures 
proof th dlh th dlh th claim herbrand model rules necessarily fl proof appendix note necessarily herbrand model fl fl may include wild formulae depending intended meaning operators ground fixpoint semantics descriptions 
dlf semantics dl dlf fq fl qg note dlf abbreviates rules logic 

rf semantics rf considers database set logic rules 
definition depends syntactic structure rules 
rules definite positive logic program operator definition rf standard immediate consequences operator td rules rf td rules td rules 
rules definite logic program negation rules stratified rf defined operators od rules stratum example iterated fixpoint approach 
case rf mapping logic structures 
note database increase successive applications rf application uses different operator 
set rules fixed iterative process 

compositional semantics define tf def dlf rf tf def tf operator powers defined regular way 
examples example rf defined equation standard immediate consequences operator iterations obtained tf th 
example fand role role compose rules compose compose compose gamma compose rule written non ground description compose compose compose compose part database includes variables 
assume rf defined equation immediate consequences operator 
tf dlf compose compose role compose rf tf 
compose compose compose compose compose compose compose role fr role note cycle reasoner active waits dl reasoner description meaning role operator 
include descriptions form compose compose logically implied rules fl reasoner maps structures 
limitation removed semantics see example 
semantics example weaker compose role claim sequence ascending chain 
proof tf dlf tf tf dlf tf tf definition rf called monotonic implies rf rf 
clearly monotonicity rf depends logic structures mapping definition rf 
rf defined equation rf monotonic 
structure implying 
claim rf monotonic tf monotonic 
proof tf tf tf dlf rf tf dlf rf dlf dlf rf rf 
theorem establishes relation semantics assumption rh rf 
theorem rf monotonic 
proof appendix corollary minimal structure denoted includes 
proof atom 
direction theorem 
conjecture reasoner uses definite positive logic program set rules 
direction inclusion may hold corresponding steps construction construction set role formulae fixed construction may grow dl reasoner 
individual steps construction may richer 
singlef iteration semantics descriptions singlef semantics simplification semantics defined semantics reasoner semantics infinite iteration operator od rules example case immediate consequences operator definite positive logic programs equation 
rf od rules od rules restriction necessary singlef semantics reasoner applies operator just single step iteration 
way singlef semantics avoids iteration iteration construction definition singlef identical definition rf 
dlf 

od rules 

tsglf tsglf singlef tsglf 
example input example example iterations reasoner obtain description iteration infinity 
semantics reasoner obtains infinity descriptions second stage rf compose role singlef semantics compose role compose role 
singlef 
theorems establish relationships singlef semantics 
theorems hold od rules standard immediate consequences operator definite positive logic programs operator monotonic continuous 
claim sequence ascending chain 
proof tsglf tsglf tsglf tsglf claim od rules monotonic tsglf monotonic 
proof semantics 
theorem shows operator rf semantics behaves reasonably singlef semantics included semantics 
theorem od rules monotonic application included infinite iteration od rules od rules singlef 
proof appendix theorem claims operator rf semantics behaves continuously chains description sets singlef semantics includes semantics 
altogether theorems state necessary sufficient conditions equality semantics 
theorem od rules monotonic ascending chains sets descriptions od rules od rules singlef 
proof appendix non ground fixpoint semantics descriptions open rules set semantical approaches described far assume knowledge base provided dl reasoners fixed behavior semantics 
assumption realistic rules set typical source knowledge expert systems incomplete faulty 
fixed rules set assumption changing environment presents major problems 
semantics rules set rules rules independent semantics rules sets rules rules natural expectation rules derived 
reasoner infer descriptions ground atoms example assume rules set includes rules gamma gamma includes resolvent rules gamma derived rule description added descriptions database dl reasoner round 
semantics augments semantics direction open set rules 
semantics approach semantics logic program set necessarily ground rules resolvents program 
approach rof set rules contribute descriptions database rules set rules 
successive applications tof operator database descriptions set rules change grow 
reasoner truly modular open dl reasoners homogeneous type meanings 
semantics applies rules sets positive definite rules 
semantics dl reasoners manipulate moment current set rules current set descriptions 
certain point time reasoner consults rules descriptions database dl operate dr rules 
dl yields new descriptions yields new descriptions rules 
results dl combined generate new set descriptions rules 
differs singlef semantics reasoners 

semantics dl dl reasoner applies regular dlf operator descriptions dr order extract set descriptions dr define non ground version ar ar ar ar set variable symbols symbols appropriately sorted 
name set sorted symbol names assume name ar 
ar dl set symbol names name ar set operators clearly ar substitution set bindings binding pair variable term sort different bindings substitution different variables 
ar substitution variables replaced corresponding terms 
descriptions dr selected steps operator selects rules stand descriptions ar instantiated ground descriptions 
set rules ar kd ft substitution dr dlf kd dr 
semantics reasoner computes resolvents dr define sequence sets descriptions rules unfolding operator dr dr dr gamma dr rof dr dr 
compositional semantics tof dr dr rof dr tof rules examples examples role relations obtained reasoner allow dl reasoner obtain new descriptions obtained 
example atleast rules gamma gamma denote dr rules 
tof dr dr dr rof dr dr dr dr dr unf dr dr dr unf dr dr tof dr dr dr dr dlf atleast atleast atleast atleast atleast rof dr dr dr dr dr unf dr dr dr unf dr dr tof dr dr dr dr rof dr dr tof dr dr example fand role compose atleast role compose atleast rules compose compose compose gamma compose denote dr rules 
tof dr dr dr compose atleast compose rof dr dr tof dr dr dr dr rof dr dr compose gamma dr compose tof dr dr compose dr dr fr compose fa atleast compose rof dr dr tof dr dr fa atleast compose example demonstrates extra power semantics semantics descriptions fr compose fa atleast compose obtained example 
proposition operator tof monotonic 
proof straightforward result monotonicity rof proposition tof proof tof rof theorem compares semantics semantics reasoner consults definite positive logic program set rules defined standard immediate consequences operator td rules equation 
theorem shows case semantics powerful semantics 
theorem rf defined equation semantics powerful semantics 
kd proof appendix opposite direction theorem hold 
example counter example ffl dr dr ffl semantics get example tf dlf rf td rules tf ffl ae kd semantics truly open sense semantics rules set rules rules obtained semantics separate rules sets rules rules openness feature obtained generalizing rof assumption rules set incomplete done omega gamma pen semantics 
possible variation semantics analogy singlef semantics 
definition omega gamma straightforward 
research inference inheritance complexity implementation introduce architecture hybrid knowledge base integrates descriptions expressive object oriented rules 
framework strengthens rules analytically defined hierarchy strengthens descriptions non analytical implications 
rules language allows concept inclusion concept membership role membership formulae rule 
includes kind rules back classic datalog rules 
declarative semantics hybrid architecture relies logic underlying semantics consistent operational semantics back classic mentioned datalog dl hybrids 
particular complexity undecidability results hold 
contribution building compositional semantics hybrid description knowledge bases investigation different variants semantics 
compositional semantics respects modularity components variants enjoy different degrees description orientedness openness 
variants sound respect declarative semantics principles modularity compositionality impose various restrictions interaction components 
objectoriented nature rules language key point compositional semantics components knowledge base recognize notions concepts roles instances membership inclusion 
components differ having description operators built semantics dl component having rules built semantics component 
compositional semantics role descriptions knowledge base computational task computing descriptions predications rules case semantics 
description oriented semantics open semantics natural outcome 
inference compositional semantics sets soundness completeness criteria management description knowledge bases rules 
modularity compositional semantics principles point reasoning services obtained independent dl reasoners 
order approach completeness respect compositional semantics need reasoners operate memoization policy partial results leave database drive operation reasoner 
reasoner top tabulation method bottom magic set method appropriate 
note naive bottom evaluation fully computes semantics compositional semantics may infinite 
dl reasoner imposing memoization policy structural subsumption algorithm doable expressive dl languages algorithm incomplete 
imposing memoization constraints subsumption algorithm involved algorithms operate construction alternative completions 
inference reasoner deserves study 
set rules may split disjoint sets rules head description formula description rules rules head predication predication rules 
components semantics open description rules may include predications bodies predication rules may include descriptions bodies semantics reasoner composed separate semantics description rules predication rules components 
inference reasoner combined separate inference algorithms rules components 
complexity hybrid framework introduced generalizes frameworks back classic 
complexity results hold knowledge bases empty description rules component predication datalog rules bodies include membership description formulae predications description terms 
analogy works interesting investigate complexity logical implication empty predication rules component various subsets description rules component 
fact logical implication defined declarative semantics restricted compositional semantics 
inheritance logic object oriented logic programming language built non monotonic inheritance mechanism definite positive sets rules 
semantics reasoner changed include non monotonic inheritance 
impact compositional semantics needs studied 
inter relationships mechanism non monotonic extensions dls subject research 
implementation initial implementation started adi eyal 
current experiments involve cooperation memoized subsumption rule inference algorithms 
looking shelf kbms database descriptions facts 
main problem dl systems management tools tightly integrated subsumption algorithm query language 
florid system logic reasoning databases help need experiment various memoization logic rule reasoners solve problem descriptions management 
case hybrid implementation probably obtained tying shelf dl system shelf logic reasoner 
acknowledgments am grateful royer michael kifer provided detailed comments earlier draft 
mike codish introducing nonground semantics approach endless fruitful discussions 
go adi eyal currently involved implementation hybrid framework 
apt blair walker 
theory declarative knowledge 
minker editor foundations deductive databases logic programming pages 
morgan kaufmann 
baader hollunder 
terminological knowledge representation system complete inference algorithm 
proceedings workshop processing declarative knowledge lecture notes ai pages 
springer verlag 
baader hollunder 
embedding defaults terminological knowledge representation formalisms 
kr pages 
baader hollunder 
prefer specific defaults terminological default logic 
ijcai pages 
baader hollunder nebel franconi 
empirical analysis optimization techniques terminological representation systems 
kr pages 
balaban 
logic approach description languages 
annals mathematics artificial intelligence 
borgida brachman mcguinness resnick 
classic structural data model objects 
acm sigmod portland 
levi martelli 
semantics approach theory applications 
logic programming 
levi meo 
contributions semantics open logic programs 
international conference fifth generation computer systems pages 
brachman levesque 
competence knowledge representation 
aaai pages pittsburgh pa 
brachman levesque 
tractability subsumption frame description languages 
aaai pages austin texas 
brachman schmolze 
overview kl knowledge representation system 
cognitive science 
franconi tessaris 
implementing testing expressive description logics preliminary report 
international workshop description logics pages roma italy 
donini lenzerini nardi schaerf 
hybrid system datalog concept languages 
trends ai volume lnai 
springer verlag 
donini lenzerini nardi schaerf nutt 
adding epistemic operators concept languages 
kr pages 
emden kowalski 
semantics predicate logic programming language 
acm 
levi martelli palamidessi 
declarative modeling operational behavior logic languages 
theoretical computer science 
hanschke hinkelmann 
combining terminological rule reasoning abstraction processes 
german conference ai springer lncs 

florid version user manual 
technical report institut fur informatik universitat freiburg freiburg germany july 
hollunder nutt schmidt schau 
subsumption algorithms concept description languages 
ecai pages 
hoppe kindermann quantz fischer 
back manual 
technical report kit report technische universitat berlin march 
kifer lausen 
logic higher order language reasoning objects inheritance scheme 
sigmod 
kifer lausen wu 
logical foundations object oriented frame languages 
jacm 
levesque brachman 
expressiveness tractability knowledge representation reasoning 
computational intelligence 
levy 
rousset 
carin representation language combining horn rules description logics 
kr pages 
levy 
rousset 
limits combining recursive horn rules description logics 
aaai 
lloyd 
foundations logic programming 
springer verlag new york 
luck nebel 
back system 
technical report kit report department computer science technische universitat berlin berlin frg 
luck nebel 
anatomy back system 
technical report kit report department computer science technische universitat berlin berlin frg 
macgregor 
evolving technology classification knowledge representation systems 
sowa editor principles semantic networks explorations representation knowledge pages 
morgan kaufmann 
nebel 
computational complexity terminological reasoning back 
artificial intelligence 
nebel 
reasoning revision hybrid representation systems 
dissertation university saarbrucken 
nebel 
terminological reasoning inherently intractable 
artificial intelligence 
patel schneider 
undecidability subsumption 
artificial intelligence 
quantz royer 
preference defaults terminological logics 
kr pages 
resnick borgida brachman mcguinness patel schneider 
classic description manual common lisp implementation 
technical report version bell labs 
royer quantz 
deriving inference rules terminological logics 
pearce wagner editors logics ai jelia pages berlin springer lnai 
schmidt schau 
subsumption kl undecidable 
proceedings conference principles knowledge representation reasoning pages toronto ontario canada 
schmidt schau smolka 
attributive concept descriptions complements 
artificial intelligence 
tamaki sato 
old resolution tabulation 
rd international conference logic programming pages 
ullman 
principles database knowledge base systems 
computer science press 
woods 
understanding subsumption taxonomy framework progress 
sowa editor principles semantic networks explorations representation knowledge pages 
morgan kaufmann 
woods schmolze 
kl family 
computers mathematics applications special issue semantic networks artificial intelligence 

memoing evaluation source source transformation 

proofs theorems proofs theorems subsection claim herbrand model rules necessarily fl proof prove proposition proposition 
th model th 
th th set logic formulae minimal herbrand model exists 
proof proposition 
th dlh gamma rh th gamma 
show dlh th gamma rh th gamma dlh th gamma holds ground instance rule assumption dlh th gamma herbrand models th gamma fl consequence models intersection 
rh th gamma holds herbrand model th gamma rules 
th holds ground instance rule assumption th dlh th gamma rh gamma assumption consists single atom 
consequence dlh th gamma rh gamma 
note facts included dlh th gamma rh th gamma 

th herbrand model th ground instance rule assumption th consequence th 
note analogous claims hold fl rules 
proof claim 
herbrand model property herbrand model inclusive property chain herbrand structures set horn clauses property holds holds true assumption ground instance rule assumption herbrand model result follows claim proposition 
herbrand model rules 
take ground instance rule rules 
assumption holds assumption holds th th form chain 
th herbrand model th rules 
consequence ground instance th 
necessarily herbrand model fl fl may include wild formulae depending intended meaning operators proofs theorems subsection claim necessary proof theorem 
claim ascending chain sets descriptions hd dlf dlf 
proof recall dlf fq fl qg 
assume dlf 
fl compactness logic sequence hd ascending chain fl implies dlf 
dlf 
assume dlf 
dlf 
fl monotonicity get fl implies dlf 
theorem rh rf rf monotonic 
proof tf tf th 
show tf th 
prove induction ffl basis tf atom th ffl inductive hypothesis 
ffl inductive step 
dlh th fh herbrand model th fl rh th intended herbrand model th rules rf th theorem assumption 
th dlh th rh th tf tf dlf rf tf dlf tf fq tf fl qg tf inductive hypothesis monotonicity fq th fl qg fq atom th fl qg fh herbrand model th fl dlh th rf tf inductive hypothesis monotonicity rf rf th theorem assumption intended model th rules rh th tf dlf tf rf dlh th rh th th 
tf th tf upper bound sequence hth includes lub sequence tf th proofs theorems subsection theorem od rules monotonic application included infinite iteration od rules od rules singlef 
proof tf singlef tsglf 
show tf tsglf 
prove induction ffl basis tf tsglf 
ffl inductive hypothesis 
ffl inductive step inductive hypothesis tf tsglf 
monotonicity dl reasoner dlf tf 
monotonicity reasoner results assumption theorem claim rf tf rf tsglf rules theorem assumption rules tsglf tsglf tf dlf tf rf tf tsglf tsglf 

tsglf 
singlef 
auxiliary lemma proof theorem 
characterizes continuous behavior operator tsglf chains description sets 
lemma ascending chains sets descriptions od rules od rules tsglf tsglf 
proof tsglf dlf od rules dlf od rules dlf od rules assumption claim tsglf 
theorem od rules monotonic ascending chains sets descriptions od rules od rules singlef 
proof 
show tf tsglf singlef prove induction tf tsglf 
ffl basis tf tsglf 
claim holds 
ffl inductive hypothesis 
ffl inductive step tf 
dlf tf rf 
assume dlf tf 
tf fl inductive hypothesis tf tsglf 
tsglf fl compactness logic sequence ascending chain tsglf fl implies tsglf singlef 
assume rf tf 
inductive hypothesis rf monotonic rf tsglf rf singlef singlef rules show induction singlef rules tsglf singlef 
basis singlef rules 
inductive hypothesis 
inductive step singlef rules singlef rules singlef rules inductive hypothesis monotonicity od rules singlef rules singlef definition tsglf tsglf singlef tsglf tsglf tsglf lemma chain tsglf singlef singlef rules singlef conclude singlef rules singlef 
singlef 
sum received tf singlef 

tf singlef tf singlef proofs subsection proof theorem uses theorem adapt theorem dr set descriptions rules hdr sequence sets defined computation rof dr 
define dr fa atom dr success set dr set ground instances dr 
theorem rf defined equation semantics powerful semantics 
kd proof tf tof rules 
prove induction tf kd tof rules ffl basis tf kd rules kd tof rules ffl inductive hypothesis 
ffl inductive step tf tf tf inductive hypothesis tf kd tof monotonicity tof tf kd tof rules denote dr tof rules dlf kd dr rf kd dr dr rf kd dr show rf kd dr kd rof dr rf kd dr kd dr rules dr rules dr tof rules rules proposition dr dr definite positive logic program dr success set dr theorem set ground instances dr dr ar atom set ground instances dr kd dr dr dr kd dr kd rof dr received tf dr rf kd dr dr kd rof dr dr kd dr kd rof dr kd dr rof dr kd tof dr kd tof rules 
tf kd tof rules kd tof rules kd tf kd 
