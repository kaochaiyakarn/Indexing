proceedings fifth international conference machine learning ann arbor mi morgan kaufmann 

role forgetting learning shaul markovitch shaul markovitch um cc umich edu eecs department university michigan ann arbor mi usa paul scott paul david scott um cc umich edu center machine intelligence commonwealth boulevard ann arbor mi usa discussion relationship learning forgetting 
analysis economics learning carried argued knowledge negative value 
series experiments involving program learns traverse state spaces described 
shown knowledge acquired negative value correct acquired solving similar problems 
shown value knowledge depends known random forgetting lead substantial improvements performance 
concluded research knowledge acquisition take seriously possibility knowledge may harmful 
view taken learning forgetting complementary processes construct maintain useful representations experience 

research machine learning concerned problem system may acquire knowledge possess 
surprising relatively little attention paid converse problem may system dispose knowledge possess 
phenomenon termed forgetting occurs humans usually regarded unfortunate failure memory system 
contention negative view forgetting misplaced far shortcoming useful process facilitates effective knowledge acquisition 
learning process organized representation experience constructed scott 
forgetting process parts organized representation rearranged 
processes complementary resulting representation joint product 
mechanisms forgetting merit study alongside acquisition constitute learning 
notion forgetting fairly broad 
addition obvious mechanism deletion items knowledge includes changes knowledge structure render particular items relatively completely inaccessible 
includes processes weaken memory traces isolate fragments knowledge base 
changes viewed partial removals deletion limiting case produces complete removal 
attempt explore role forgetting machine learning systems 
discussing circumstances better dispose item knowledge retain 
describe experimental done order demonstrate correct knowledge acquired course solving similar problems disadvantage system 

economics learning circumstances system advantage able forget previously acquired knowledge best understood viewing learning problem solving economic perspective 
form learning essentially form investment 
system learns invests certain amount resources acquiring maintaining knowledge 
system advantage learn return investment positive 
cost acquiring retaining knowledge exceed value resource saving provided knowledge 
introduce notion value knowledge 

value knowledge assume common currency values various costs benefits associated operation problem solver may expressed 
value item knowledge may defined follows suppose problem solver called solve problem determines executes solution twice current knowledge forgetting learning item knowledge removed 
suppose run cost solving problem quality solution determined 
benefit achieved problem solver solve particular problem may defined qp 
difference benefits may positive negative payoff particular item knowledge solution particular problem 
note payoff particular item knowledge depend knowledge system disposal 
majority problem solvers capable solving range problems 
range problems may occur frequently 
view domain problems problem solver intended solve set problems associated probability distribution 
call domain system problem space 
system attempts solve number problems chosen problem space payoffs item knowledge differ problem 
define value item knowledge expectation value payoff achieved attempting solve randomly chosen problem problem space 
definition value incorporates potential benefits item knowledge may bring system 
particular reflects contribution knowledge may produce frequency contribution 
incorporates costs associated retaining knowledge 
clearly system advantage cease making piece knowledge negative value 
far concerned value single item knowledge 
total value knowledge system considerable interest substantially positive 
system incurred costs acquisition knowledge 
total value systems retained knowledge exceed cost acquiring system better learned 
just positive total value depends cost acquisition number problem solutions cost amortized 
important note total value system knowledge obtained simply summing values individual items knowledge 
value piece knowledge function knowledge 
value set items knowledge defined way defined value individual item considers benefits produced cost incurred solving problem entire set 
value knowledge base derived considering extreme case solving problems knowledge 

factors affecting value knowledge consider attributes items knowledge may influence value 

relevance knowledge relevance problem solving contribute benefits typically negative value 

correctness reasonable conjecture relevant knowledge correct knowledge constitutes accurate representation aspect world purports represent worth retaining knowledge incorrect 
rationale conjecture correct knowledge lead successful performance incorrect knowledge lead performance errors 
propositions true 
practice incorrect knowledge contribute successful performance 
approximate model world necessarily incorrect may better model 
furthermore different types performance error misses false alarms detection task typically different associated costs erroneous piece knowledge biases system cheaper type error may beneficial 
commonest type beneficial erroneous knowledge inaccurate generalization 
example incorrect generalized belief bears man circumstances certainly better knowledge possibility bears dangerous 
frequently correct knowledge source unsuccessful performance 
wilkins describes situation additional correct knowledge reduce frequency medical diagnostic system produces correct diagnoses 
forgetting learning describe system acquisition correct relevant knowledge leads slower problem solving 
conclude correctness item knowledge reliable indicator value correct incorrect knowledge may positive negative value 

memory requirements obvious cost associated retaining knowledge cost memory space store 
significant depends cost memory locations turn depends scarce 
contemporary computer systems memory typically significantly limited resource 
hand storage capacity human brain appears vast clear shortage space origin limitation human learning 
storage costs proportional time storage 

influence search time additional knowledge may increase reduce time needed solve problem 
increase arises search decrease may arise circumstances additional knowledge may eliminate part search 
increase occur distinct ways term direct indirect search time costs 
searching item comparing item turn template specifying item sought takes time proportional total number items stored 
reason large memory structures usually organized ordering indexing items 
effect indexing reduce search time best proportional logarithm number items stored 
addition item knowledge base organized manner increases search times amount proportional log number items 
term direct search time cost small large organized knowledge base component cost retaining knowledge significant large number new items added 
occur systems selective knowledge acquire 
net effect increased time cost problem solving depends amount searching involved solving problem 
purposes concerned expectation value total direct search cost searching involved solving problem problem space 
logarithmic cost model direct search cost covers situations search consists matching item kind template 
large proportion programs perform sophisticated kind search item leads possibilities 
common examples graph searches backward chaining inference systems 
systems type inclusion item knowledge produce larger increases search time search cost due item cost items item question brings space searched 
increase may exponential 
common cause phenomenon redundancy causes system explore number equivalent solutions problem 
call costs accrue expanding search space include items considered indirect search time cost 
learning systems acquire additional knowledge incorporates results previous searches saving need repeat search reducing expectation value search costs 
show section systems nature hard determine net effect new item knowledge increase decrease search time 

learning search graphs far discussion 
order demonstrate existence phenomenon negative valued knowledge developed simple program funes attempts improve ability search graphs learning 
name chosen recognition positive view forgetting taken jorge luis borges short story funes 
forgetting learning 
learning program funes performs best searches arbitrary graphs 
state funes list operators may applied state 
initially list contains basic operators permitted transitions immediately neighboring states 
searching proceeds program discover states accessible sequences transitions 
funes add additional operators corresponding transition sequences operator lists 
called macro operators 
macro operators length funes acquire macros longer combining macros 
subsequent searches program uses macro operators associated node way basic operators process node expansion 
intent additional knowledge state space reduce search time 
experiment concerned quality solution fact close optimal 
funes learns correct amount additional knowledge acquired way large 
state space contains states average number immediately accessible states funes learn macro operators 
order provide bias acquiring knowledge positive value program acquired macro operators formed part solution 
funes selective rote learner 

experimental procedure purpose experiments investigate distribution value set paths learned 
experiment comprised phases learning phase knowledge evaluation phase test phase 
learning phase program solved problems randomly generated problem space acquired macro operators 
involved solution problems 
number macro operators learned number problems solved measure learning experience easier compare effects forgetting different runs amount learned 
knowledge evaluation phase program solved set problems randomly generated problem space 
phase maintained statistics various macro operators learned 
result evaluation piece acquired knowledge associated value estimate 
test phase batches randomly generated problems solved varying percentages macro operators removed 
conditions 
macro operators removed chosen randomly 
second condition macro operators lowest value estimates removed 
number nodes visited performance measure 
experiments reported done term manhattan spaces 
nodes state space form rectangular array 
nodes connected immediate neighbors array 
node immediate neighbor node probability direct transition existence transition computed independently manner 
value type problem space purposes possible generate large numbers distinct problem spaces belonging general class 
furthermore varying possible vary difficulty problem space 
results reported array nodes state space 
value 
results reported best search manhattan distance sum horizontal row displacements heuristic evaluation function 
regions problem space designated origin destination zones 
individual problems generated randomly selecting node origin zone node destination zone 
origin zone region side state space 
destination zone similar region opposite side problem space contained possible problems 
number macro operators acquired varied experimental parameters 

experiment experiment designed demonstrate somewhat paradoxical result 
learning proceeded macros acquired various percentages forgotten random selection 
shows results obtained testing phase 
point mean trials 
number features graph worthy note 
clear learning effective 
number nodes visited forgotten half number visited learning began equivalent forgetting learning forgotten 
second improvement factor obtained learned forgotten 
system performed best learned retained 
remaining detrimental effect 
clearly strong evidence existence knowledge negative value 
remembered macros learned correct part solutions earlier problems 
really striking property results fact obtained strategy random forgetting 
attempt selectively retain valuable knowledge 
consequently say system performance improved forgetting knowledge knowledge clearly useful improves performance factor 
forgotten 
random forgetting acquiring macros paradoxical results explained 
answer lies redundancy 
training problems system learned numerous alternative ways traversing space 
solutions comprise steps mean number nodes expanded forgetting 
alternative routes branching factor node large 
begins forget branching factor steadily reduced impairing system ability solve problems steps 
branching factor decreases number nodes visited declines performance correspondingly improves 
curve fitting showed improvement linear region forgotten 
phase macro deleted value nodes visited 
point eventually reached macros removed redundant system forced engage searching remedy loss 
happens example macros forgotten 
point performance declines rapidly 
curve fitting showed decline exponential region phase macro average value nodes visited 
striking demonstration fact value piece knowledge function knowledge system possesses 

experiment results raise obvious conjecture 
random items acquired harmful redundancy system benefit learning items place avoiding need forget 
second experiment designed test idea results shown 
upper curve shows results obtained procedure identical experiment training phase terminated items acquired 
expected graph show phase steady improvement redundant items discarded 
important difference curve shown portion 
best average performance achieved occurs items retained nodes visited 
half best performance achieved experiment nodes visited items retained 
forced conclude conjecture system just avoiding learning items wrong 
better learn items forget random simply learn items 
explanation effect lies fact populations macros acquired different 
mean length macros acquired items forgetting learning learned 
contrast mean length learned 
forgetting random means maintained items deleted 
difference arises system necessarily acquire short macros start putting build longer macros 
longer macros useful eliminate far nodes search process 
system benefits engaging learning discarding acquired 
random forgotten 
forgetting acquiring macros 
experiment process forgetting experiment discarding useful longer macros shorter possible forget selectively achieve performance similar achieved random forgetting larger number items acquired experiment 
order test conjecture repeated procedure second experiment results knowledge evaluation phase discard apparently useful items testing phase 
heuristic estimate value macro product length macro number times solutions evaluation phase 
heuristic identify macros save significant node visits 
lower curve shows results obtained 
results show improvement random forgetting 
best performance achieved nodes visited achieved number macros retained better optimal value achieved random forgetting worse results obtained random forgetting items 
explanation acquiring items system learned include macros needed perform entire space 
mode forgetting ensure harmful redundant macros discarded residual set complete 

graph searching experiments demonstrated number features regarding value knowledge somewhat surprising 
knowledge harmful 
true knowledge correct acquired course solving problems drawn sample space testing performance 
result artefact particular type learning chosen demonstration 
minton shown improved performance obtained selectively discarding knowledge system strips 
minton explore effects random forgetting extent training prior forgetting show forgetting heuristics frequency value lead improved performance 
heuristic combines single evaluation 
second shown value piece knowledge highly dependent knowledge system possesses 
dramatically demonstrated experiment showed value piece knowledge range positive negative function known 
shown surprisingly simple forgetting strategies lead better performance 
particular random deletion bulk knowledge base led substantial improvement performance 
showed certain circumstances selective forgetting learning forgetting appeared useful items lead slightly better performances random forgetting 
implications results research machine learning general 
fact knowledge negative value acquired system learns correct pertinent items implies problem potentially harmful knowledge taken seriously constructing knowledge acquisition systems 
basic strategies dealing negative valued knowledge ignoring problem avoiding problem ensuring positive valued knowledge acquired forgetting 
little machine learning directly addressed issues harmful knowledge forgetting 
exceptions include samuel checker player holland genetic algorithm anderson act connectionist systems rumelhart mcclelland 
systems ignored problem attempted ensure acquired positive value 
unfortunately hard determine value knowledge time acquired 
correctness reliable indicator knowledge value cautious approach acquisition mitchell version space algorithm obviate need forget 
experiments show domains correct knowledge negative value 
alternatively system attempt assess value proposed new piece knowledge time created quinlan evaluations harder devise systems performance involves elaborate type search involved inference problem solving 
discussion inherent difficulty identifying knowledge negative value markovitch scott 
anderson 

architecture cognition harvard university press 
holland 

adaptation natural artificial systems ann arbor mi university michigan press 
markovitch scott 

knowledge considered harmful research ann arbor michigan usa center machine intelligence 
minton 

selectively generalizing plans problem solving proceedings ninth international joint conference artificial intelligence pp 
los angeles ca morgan kaufmann 
mitchell 

version spaces candidate elimination approach rule learning 
proceedings fifth international joint conference artificial intelligence pp 
cambridge ma morgan kaufmann 
quinlan 

effect noise concept learning application michalski carbonell mitchell 
rumelhart mcclelland 

parallel distributed processing 
cambridge ma mit press 
samuel 

studies machine learning game checkers feigenbaum feldman eds computers thought new york mcgraw hill 
scott 

learning construction posteriori knowledge structures 
proceedings third national conference artificial intelligence 
washington dc morgan kaufmann 
wilkins 

apprenticeship learning techniques knowledge systems 
doctoral dissertation eecs department university michigan ann arbor mi 
