genetic algorithm software testing timo department information technology industrial economics university po box fin finland mail firstname lastname fi studying possibilities test software genetic algorithm search 
idea produce test cases order find problematic situations processing time extremes 
proposed test method comes heading automated dynamic stress testing 
keywords genetic algorithms software engineering dynamic stress testing real time software increasingly applied products failure may severe consequences requirements correctness reliability getting higher 
reliable sequential programs rate errors errors lines code avoid functional failure 
achieving level amount program testing grows exponentially code size 
testing software manually slow expensive demands 
automated testing reduce time costs needed performing tests 
exhaustive test data generation possible 
common way generating test data random considered weak 
reason efforts optimize test data sets various methods example heuristic methods 
study trying identify situations software slowest reaction time 
slowest reaction time identified having software tested difficult input generated ga step tested approach small sequential program consisting set delay loops 
step forthcoming going test complicated real time software 
related automatic generation test data genetic algorithms studied watkins jones 
studies white box testing methodology 
black box technique 
growing interest ga methods test vlsi circuits 
see 
software testing dynamic testing techniques execute program input data contrast static analysis uses program requirements design documents visual review 
dynamic testing subdivided categories testing techniques functional structural 
functional testing known black box test aims test code measuring output performance viewing statements code activated traversed 
contrast structural tests considered white box glass box actual code program viewed 
combination approaches testing effective 
automation testing software testing quite expensive timeconsuming task 
done efficiently automatic generation test data 
benefits automatic testing testing prepared test runs considerably faster test runs done night shift amount routine reduced done remotely 
disadvantages include preparing tests quite hard knowledge needed non automatic testing 
disadvantages profitability automatic testing achieved repeating test newer version software different configuration 
normally large number test cases problem automatic testing done 
problem solved completely automatic testing reason trying genetic algorithms generating better test data sets 
stress testing purpose stress testing identify peak load conditions system fails 
system subjected peak loads key operational parameters transaction volume user load file activity error rates combinations 
testing environment test automation environment embedded software development 
uses workstation testing embedded software written programming language 
software compiled compiler linked environment library 
user describes input output system application specific hardware 
simulates system operating system application allowing user monitor happening 
ga tested program run separately tasks communicate simulated hardware ports 
ga sends inputs tested black box program measures response time 
response time time takes black box program perform operations caused input parameters received 
black box program completed sends response signal 
response time fitness value ga test case test case program consisting randomly generated slowing loops 
see ftp fi cs report generating program 
result bell shaped response time distribution shown fig 

ga feeds tested program bit string select slowing loops 
population size items selected generation 
results fig 
shows worst case develops generations testing simple program 
fig 

shows execution times distribution 
possible solutions th tested order obtain 
maximum response time ms response time somewhat non deterministic inputs result response time 
fig 

shows response times differ input parameters worst case 
inputs fed times average deviation ms time quartiles 
ga suitable software testing certain limitations 
white box testing problem complexity cause problems 
black box testing problem find characteristic fitness functions 
possible alternative number warnings operating system fitness function 
software rate memory useful fitness function 
maximum response time fitness development generations curve response times curve showing non determinism worst case time response step project evaluate real embedded software complex task 
concurrency continuous operation state behaviour software may introduce non determinism system increases difficulty software testing 
function embedded software depends scheduling parallel processes 
thousands different scheduling combinations 
inputs different response times obtained 
interfere search ga stochastic behaviour ga test runs needed case non determinism problem 
simple test case non determinism caused operating system 
means results verified real environment means ga solve problem spite non determinism strong 
hardware dependencies common solution validating embedded software test simulated target environment 
software tested target environment simulation program needed 
simulating software functioning program traced 
tracing repeatability may easier find errors program black box tested genetic algorithm 
simulated environment results execution time precise 
case results verified real environment 
test called system test tests functionality program 
information anonymous ftp server ftp fi directory cs report 
supported finnish technology development center abb corporate research 
authors gratefully acknowledge assistance abb transmit elizabeth heap lilian kind proofreading manuscript 
proceedings rd computer science forum baden germany 
abb 

indexed bibliography genetic algorithms electronics vlsi design testing 
report vlsi university department information technology production economics 
available anonymous ftp cite ftp fi directory cs report file ps 
auer korhonen 
state testing embedded software 
london uk 
cohoon johnson 
compacting randomly generated test sets 
proceedings ieee international conference computer design vlsi computers processors pages cambridge ma 
sept 
ieee computer society press los alamitos ca 

genetic algorithm automatic test pattern generation large synchronous sequential circuits 
ieee transaction computer aided design integrated circuits aug 

automatic testing embedded software 
editors realtime embedded systems espoo finland 
finnish 
hayashi kita 
genetic approach test generation logic circuits 
proceedings third asian test symposium pages nara japan 
nov 
ieee computer society press los alamitos ca 
hsiao rudnick patel 
automatic test generation genetically engineered distinguishing sequences 
proceedings th ieee vlsi test symposium pages princeton nj 
apr 
may 
ieee computer society press los alamitos ca 
jones yamada 
thermal tomographic methods 
jan 
lee 
test generation current testing bridging faults cmos vlsi circuits 
proceedings ieee th midwest symposium circuits systems pages rio de janeiro brazil 

aug 
ieee new york 
meyers 
art software testing 
john wiley sons new york 
dare 
transitional gate delay detection combinational circuits genetic algorithm 
electronics letters 
sept 
reddy 
logic simulation test generation procedure 
proceedings th international symposium faulttolerant computing pages pasadena ca 
june 
ieee piscataway nj 

testing environment embedded software user guide version windows nt 
oulu finland 
rudnick patel 
combining deterministic genetic approaches sequential circuit test generation 
proceedings nd design automation conference pages san francisco ca 
june 
ieee new york 
rudnick patel greenstein 
sequential circuit test generation genetic algorithm framework 
proceedings st design automation conference pages san diego ca 
june 
ieee new york 
saab saab abraham 
cris test program sequential vlsi circuits 
proceedings international conference computer aided design pages 
sommerville 
software engineering 
addisonwesley new york 

rtl level test generation genetic algorithm simulated annealing 
proceedings nd workshop hierarchical test generation duisburg germany 
sept 
watkins 
automatic generation test data genetic algorithms 
marshall samson edgar nevill editors proceedings th software quality conference volume pages dundee uk 
july 
university dundee scotland 
ellis gall 
application genetic algorithms software testing application des algorithmes en au test des 
proceedings th international conference software engineering pages toulouse france 
dec 
