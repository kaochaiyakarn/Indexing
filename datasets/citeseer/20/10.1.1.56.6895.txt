metacrawler architecture resource aggregation web erik selberg oren etzioni department computer science engineering university washington seattle wa cs washington edu www cs washington edu homes www cs washington edu research metacrawler november metacrawler softbot parallel web search service available university washington june 
provides users single interface query popular general purpose web search services lycos altavista sophisticated features allow obtain results higher quality simply output search service 
article briefly outline motivation metacrawler highlight previous discuss architecture metacrawler enables metacrawler perform scale adapt dynamic internet 
motivation inception world wide web grown staggering rate 
result finding information web difficult 
address problem search services webcrawler lycos created robots collect information index place directory services yahoo created human editors organize categorize web pages 
types services easier users find information need 
services popular people going place discovering information want 
services emerged altavista hotbot attempting form date complete index web 
common belief majority web search services roughly 
index content reasonable information retrieval ir techniques map query potentially relevant urls 
experiments suggest 
previous findings service returns different documents query 
inherent time lag services results service may index document day old may index month old 
know returned fresh stale appropriate 
final complication service uses different ranking algorithm 
service rank pages highly relevant query top positions may 
practice ranking algorithm tends certain classes queries performs poorly 
taken service extremely disparate set documents index terms documents indexed terms document indexed 
previously demonstrated relying exclusively single search engine metacrawler users find relevant 
observed interface search service optimal 
features users desire phrase searching filtering location absent require syntax difficult average users 
furthermore returned existing services unavailable 
earlier experiments demonstrated examining pages ensure exist quality content providing user added expressive power returned user automatically determined irrelevant subsequently removed 
metacrawler softbot metacrawler softbot created address problems outlined 
metacrawler software robot aggregates web search services users 
metacrawler presents users single unified interface 
users enter queries metacrawler forwards queries parallel search services 
metacrawler results ranks single list returning user sum knowledge best web search services 
key idea metacrawler allows user express search frees user having remember metacrawler features enable user obtain high quality results 
users instruct metacrawler find pages words query words query words query phrase 
users specify word appear returned comes particular geographic logical location france boeing com 
metacrawler additional features discussed explained detail metacrawler www site 
order accomplish goal metacrawler adept tasks 
needs take user queries format appropriately search service 
able correctly parse results aggregate results services 
able analyze results eliminate duplicates perform checks ensure quality 
details metacrawler control flow 
important note accomplishing tasks sufficient get metacrawler 
additional requirements order usable turn strongly impact metacrawler designed 
foremost metacrawler needs user interface average person 
second metacrawler able perform tasks user quickly possible 
metacrawler able adapt rapidly changing environment 
metacrawler control flow understanding query output formats metacrawler understand query format feature set supported service 
understanding query format difficult details involved 
example alta vista prefers searching phrases enclosing phrase double quotes erik selberg hotbot uses menu option selects phrase searching 
translating user query proper format search service half equation 
metacrawler parse results query collate results different services single coherent list 
task difficult service uses different ranking criterion services don report information ranking order 
furthermore service robot slightly different urls recorded identical pages different example robot may find www cs washington edu homes speed home html may find www cs washington edu homes selberg point document 
post processing supporting rich feature set problematic 
services features metacrawler uses lacking particular areas phrase searching weighing words differently 
metacrawler implements features available service downloading pages referred service analyzing directly 
time required download pages parallel reasonable usually adding couple minutes search time 
addition metacrawler able process results arrived waiting 
minimal computation time required retrieved 
important note improve quality substantially user enabled option users prefer results displayed quickly 
downloading analyzing locally proven powerful tool 
implement features services 
example lycos currently handle phrase searching 
metacrawler simulates phrase searching sending lycos query documents containing query words downloads resulting pages extracts pages contain appropriate phrase 
similar methods able handle features commonly search services requiring words absent pages 
addition simulating features particular search service able implement new features 
obvious downloading real time verified exists 
proven popular feature 
able analyze pages sophisticated ranking clustering algorithms able extract words documents may useful refining query 
duplicate elimination detecting duplicates difficult full contents particular page due host name aliases symbolic links redirections forms obfuscation 
eliminate duplicates metacrawler uses sophisticated comparison algorithm 
comparing urls checks domains www cs washington edu really bauhaus cs washington edu 
checks paths standard aliases url form www dom foo refers post processing option currently disabled pending additional coding ensure metacrawler cause undue load remote sites downloading pages 
www dom foo index html 
domains paths aren looks titles pages 
assumes aliases deleting puts link beneath original 
metacrawler able concrete determination download page compare full text 
issues need resolved mirrored pages algorithm worked practice 
metacrawler uses confidence score determine close matches query 
higher confidence score indicates relevant document 
calculate confidence score metacrawler distributes confidence scores returned service range 
top pick service confidence score 
metacrawler eliminates duplicates adds duplicated score sum removed confidence scores 
essence allows services vote best returned services higher total returned 
addition provide option seeing results sorted location relevance 
user interface metacrawler reasonable user interface average web user interact 
visually single text entry box set radio buttons describe logic query words phrase various options describing results desirable results user country edu sites performance metrics long wait 
preserves metaphor people prefer understand single interface find information web 
important assume user skilled boolean logic large portion feedback received users suggested confused boolean expressions meant believing meant exclusive 
performance order metacrawler practical mass fast 
naive implementation wait search services returned results wait downloaded 
creates barrier 
problem compounds peak rates slowest services take order minute longer return results faster services 
addressed performance issues methods 
installed user modifiable timeouts 
way services overly slow metacrawler time relatively quickly 
default time seconds 
second download needed user activates particular option phrase searching 
search services sophisticated implement features downloading 
experimented explicit switch allow users control metacrawler download initial user feedback indicated users prefer implicit control versus dealing option 
putting substantial effort showing user quickly possible 
improve speed metacrawler showing quickly gives perception increased speed gives feedback long query take 
metacrawler displays service returns results returned 
new java interface prototype lets users see explore partial results 
allows user examine come quickly possibly 
desired user quickly move 
time lost query running probably completed time user finished initial metacrawler architecture results 
early feedback users feature positive 
architectural design metacrawler designed modular fashion depicted 
main components user interface aggregation engine parallel web interface harness 
user interface simply layer translates user queries options appropriate parameters 
sent aggregation engine responsible obtaining initial service postprocessing eliminating duplicates collating outputting results back user interface proper display 
sophisticated features metacrawler reside component 
parallel web interface responsible downloading html pages web including sending queries obtaining results search service 
harness crux design service specific information kept 
harness receives control information detailing obtain formats request properly sends parallel web interface returns page aggregation engine 
sends status information back aggregation engine measure progress 
harness implemented collection modules module represents particular service 
designed modules added modified removed impacting rest metacrawler 
metacrawler architecture provides advantages 
provides layer abstraction traditional search services allows greater adaptability scalability portability web grows changes 
adaptability search services extremely volatile today internet 
new search services launched continually 
frequently rate search services upgrade systems means searching interface changes 
search services emerging number services removed moved new sites leaving dangling web 
metacrawler modular design allows new services added modified removed quickly allowing easily adapt changing internet 
portability metacrawler softbot intelligent interface powerful remote services 
require large databases large amounts memory 
provides great flexibility location 
currently metacrawler exists universally accessible service university washington 
created prototype implementations reside user machine 
great success compiling metacrawler different architectures including dec osf linux windows 
metacrawler softbot run machines currently available minimal effort means users metacrawler locally remotely needing invest expensive hardware 
metacrawler rooted platform specific technology machines improve metacrawler able adapt operate new machines 
scalability internet grows user base 
important metacrawler scale handle users 
load servers handling metacrawler service scales linearly number requests day 
unfortunately expected usage projections web linear scaling may require daunting investment hardware 
implementations resident users machines able scale need add machines 
user responsible network computational requirements need contact server periodically obtain updated service lists new information 
promising areas metacrawler softbot 
metacrawler scale number search services currently accesses service query 
acceptable limited number search services broadcast protocol won large number small special purpose search services 
possibility learning approach similar savvysearch metacrawler learns services prior experience 
method take approach similar gloss content router information obtained directly search services route queries appropriately 
areas research involve improving metacrawler output method currently support ranking relevance location 
options explored clustering methods 
metacrawler presents users single intelligent interface controls powerful information sources formats user queries service uses collects obtained services optionally downloads ensure availability quality 
removes duplicate rest single list user 
user need know looking metacrawler softbot takes care 
paid special attention performance making practical tool web searching 
metacrawler architecture modular harness able plug modify remove services easily 
enables combine different resources difficulty 
adaptable new modified services 
minimal resource requirements portable able exist server enterprise scale unix servers user application windows box 
exhibits reasonable scaling properties especially viewed client application 
research service available public year current query rate day 
acknowledgments metacrawler exist help great people 
greg invaluable development particular development java interface numerous internal architecture improvements 
nancy johnson burr rick white art dong steve tom profit terry gray erik instrumental keeping metacrawler service running 
ed lazowska insight support 
mary kaye rodgers patience long nights impending deadlines 
authors erik selberg selberg cs washington edu www cs washington edu homes selberg department computer science engineering box university washington seattle wa erik selberg earned bachelor degree carnegie mellon university double major computer science logic receiving allen newell award excellence undergraduate research 
earned master degree university washington continuing study ph created metacrawler parallel web search service 
metacrawler received numerous awards mentions including chosen awards best internet search engine reviews forbes business week ieee computer 
primarily interested artificial intelligence information retrieval especially pertains world wide web 
interests regarding system performance security multi agent coordination planning 
enjoys skiing star thai cuisine 
oren etzioni etzioni cs washington edu www cs washington edu homes etzioni department computer science engineering box university washington seattle wa oren etzioni associate professor received bachelor degree computer science harvard university june ph carnegie mellon university january 
joined university washington assistant professor computer science engineering february promoted associate professor 
fall launched internet softbot project 
etzioni received nsf young investigator award 
internet softbot chosen national discover awards technological innovation computer software 
metacrawler chosen awards best internet search engine 
group software agents featured economist business week discover magazine forbes magazine new scientist 
research interests include software agents web navigation search technology humancomputer interaction 
hobbies proud father 
digital equipment 
altavista home page 
url www altavista digital com 
douglas cutting jan 
pedersen david karger john tukey 
scatter gather approach browsing large document collections 
proceedings acm sigir conference copenhagen denmark june 
url excite com people cutting papers sigir ps 
daniel dreilinger 
integrating heterogeneous www search engines 
master thesis colorado state university may 
luis gravano hector garcia molina anthony tomasic 
effectiveness gloss text database discovery problem 
proceedings acm sigmod conference minneapolis mn may 
url ftp db stanford edu pub gravano stan cs tn sigmod ps 
inktomi hotbot home page 
url www hotbot com 
michael mauldin 
lycos home page 
url lycos cs cmu edu 
michael mauldin john 
web agent related research center machine translation 
proceedings mclean virginia august 
brian pinkerton 
finding people want experiences webcrawler 
proc 
nd world wide web conference chicago il usa october 
erik selberg oren etzioni 
metacrawler home page 
url www cs washington edu research metacrawler 
erik selberg oren etzioni 
multi service search comparison metacrawler 
proc 
th world wide web conference boston ma usa december 
url metacrawler cs washington edu papers www html overview html 
mark sheldon andrzej duda ron weiss david gifford 
discover resource discovery system content routing 
proc 
rd world wide web conference elsevier north holland april 
url www lcs mit edu papers www ps 
