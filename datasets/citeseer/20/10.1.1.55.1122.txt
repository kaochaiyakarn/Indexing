harnessing chaos editor elsevier science amsterdam 
santa fe institute working critical computation phase transitions hierarchical learning james crutchfield physics department university california berkeley california chaos berkeley edu study various routes chaos dynamical systems reveals significant computation occurs onset chaos 
blush surprising statistical mechanics views phase transitions infinite temporal correlations 
computational terms processes critical state onset chaos considered infinite memory 
storage capacity part information processing 
set available nonlinear operations just memory organized important determinants class computation supported 
leads directly studies architecture information processing quantitative measures complexity 
universal theory example indicates complexity trades rate information produced 
result suggests new view learning control systems break inadequate internal models discover genuinely new representations 
proceedings th toyota conference lake japan crutchfield 
dynamics computation physical device compute 
early history analog digital computer design replete diverse physical phenomena implement elements formal computation objects operators differential calculus automata theory 
light wide ranging success dynamical systems theory modeling nonlinear physical processes review asks contemporary version question dynamical system compute 
answer begins interpreting computational devices nonlinear dynamical systems explores types information processing embedded 
ultimate goal help build new better computers shed new light structure dynamical systems 
start words dynamical systems computation order 
mechanical description physical system terms set equations govern change system configuration time 
dynamical systems reformulation considers set configurations state space mapping takes states states dynamic 
initial state action dynamic leads sequence states orbit dynamical system 
theory dynamical systems contributes mechanistic view emphasis dynamic induces global geometric structures system state space structures constrain system possible behavior 
provides methods analyzing behavioral stability instability constraints behavior change parameters equations motion varied 
computation context physics dynamical systems theory possible meanings 
unfortunately technical senses word directly comparable contemporary highly colored dominance sequential digital computers 
preparation understanding dynamical systems embody information processing section defines types computation usable universal intrinsic computation 
subsequent sections review types intrinsic computation embedded nonlinear dynamical systems 
turns close relationship system onset chaos capacity exhibit high levels computational structure 
examples period doubling systems analyzed intrinsic computation 
appropriate phase transition view systems behavior renormalization group suggests novel hierarchical learning method observer discover finite representation infinite memory structures systems exhibit 
sections consider larger issue state space physical computing devices structured support significant computation 

embodiments computation list computation types endless discrete versus continuous temporal versus spatial probabilistic versus deterministic classical versus quantum computation 
theory discrete computation highly developed 
roughly distinguishes number computational classes capable finitely representing range formal languages instantiated class automata 
finite automata recognize regular languages finite amount memory critical computation phase transitions hierachical learning powerful pushdown automata recognize context free languages akin modern programming languages stack memory arbitrary size turing machines powerful discrete computation devices recognize recursive languages infinite storage tape unrestricted access 
decades research comparing variously structured automata led extensive discrete computation road map hierarchy distinct classes spanning range finite memory devices turing machines 
assessing relative capabilities single broad type discrete computation sections compare continuous discrete computation 
results give concrete examples discrete computation embedded dynamical systems 
prepare notion computation explored depth 
kinds computation usable universal intrinsic considered 

usable computation common meaning performing computation dynamical system carries useful information processing task 
equations motion interpreted program initial state interpreted input 
system runs specified time reaches goal state detects task completion 
final condition relatively easy detect 
example fixed point state 
case portion configuration interpreted output 
correspondence computation orbit system state space 
examples dynamical systems performing tasks way include integrating differential equation analog computer compute cellular automaton generate th row pascal triangle performing image edge enhancement video feedback oscillating chemical reaction petri dish running recurrent neural network recover picture initially corrupted version considering notion dynamical system broadly pinhole lens estimate fourier transform image 
discussion discrete computation cellular automata ref 

requiring arbitrary programmability device strict interested devices computationally useful 
dynamical system starting evolves 
programmable requires specific initial conditions generation useful result sense domain analog computation allowing explicit representation information obtained similar algebraic dynamical system subprocess 
transcendental number produced algebraic operations computational gain require computational resources algebraic numbers 
capability leads gain referred usable computation 
usable avoids sense implied useful available information processing demonstrated utility 
crutchfield 
universal computation second meaning computation dynamical system specially crafted initial conditions capable universal computation 
arguably general notion programmability computational task implemented universal device 
instance task initial condition system simulates resource bounds system computational type 
sense universality appropriate comparison discrete continuous computation 
continuous state dynamical system mimic programmable discrete state computer complete information storage logical gates control mechanisms 
case initial condition considered parts emulation program universal device implement desired task input data specifies task instance 
distinction underlying device program input data probably clearest universal computation 
game life cellular automaton ca infinite dimensional lattice universal dynamical system 
construction universal computation game life extremely complicated taken entirety impractical 
simpler constructions dimensional ca simplest note universal turing machine dimensional ca infinite tape spatial lattice bit added site uniquely locate read write head 
ca viewed dynamical systems main requirement universality construct set equations motion allows portion ca initial pattern specify emulation device remainder pattern specifying device input 
domain continuous state computation standard analog computers widely universal devices 
patching resistors capacitors operational amplifiers multiplier function modules constitutes analog computer program 
versatility possible patches allows analog computers solve wide range integral differential equations 
fact devices included voltage controlled patching enable self modification program solution 
ambiguity program input data holds discrete computation obtains analog domain 
shown universal discrete computation embedded systems 
constructions establishing symbolic dynamics equivalence possible turing machine configuration internal control state infinite storage tape continuous state 
equations motion operating continuous states designed implement universal turing machine finite state control 
ref 
noted universal dimensional map plane constructed 
similar construction extensive analysis ref 

obvious advantage universal computers type device needs built 
program portion input reconfigures device particular task interest 
disadvantage compared specialized device reduction computation speed due emulation 
reduction volume system state space available information processing lowers density computation 
conventional serial digital computers examples universal ca examples just mentioned vanishingly small critical computation phase transitions hierachical learning computational density 
loci information processing concentrated control unit memory large portions control mechanism sit idle 
worth noting contrast discrete continuous constructions just low dimensional dynamical systems degrees freedom implement universality 
point kept mind closing discussion 

intrinsic computation third meaning computation dynamical system involves interpreting behavior properly orbits generate type intrinsic computation 
computation transformation input produce useful output 
measured terms elementary information processing structures memory information production information transfer logical operations 
words intrinsic computation dynamical system intrinsic property behavior measured observer just say dimension system attractor estimated 
intrinsic computation detected quantified specific useful computation performed dynamical system question 
measuring looks typical information processing state space large subsets 
equations motion view thought computational device sense determine constraints guide flow information state space 
notion intrinsic computation developed refs 

note intrinsic computation human intelligent manipulation input interpreting output 
contrast properly define usable computation needs theory semantic aspects choosing inputs interpreting outputs 
result intrinsic computation simpler implementable notion systems process information 
relates directly example architectures information processing spontaneously emerge evolutionary developmental systems rely outside engineer computational elements prepare special initial configurations programs built interpret result 

intrinsic versus usable computation key difference computation theory dynamical systems theory complicates comparison synthesis 
difference responsible introducing distinction intrinsic computation 
hand computation theory information processing devices operation produce information 
information preserved transformed lost 
hand interesting dynamical systems exhibiting chaotic attractors robustly generate information idealized devices computation theory deterministic 
considerations lead central question concerning relationship dynamics computation structures dynamical system support various embodiments computation 
question answered universal computation requirements constructions noted 
universal computation addressed 
crutchfield focuses contrast views physical computing device 
dynamical systems view interest intrinsic computation indicates computing device behavior 
computer science engineering view concern know degree usable computation physical device capable 
concern device contrasting views naturally suggest question intrinsic usable computation related 
addressing problem section give answer main question applies intrinsic computation families dynamical systems 
simply stated intrinsic computation places upper bound computations dynamical system support 
dynamical system observed controlled instrument intrinsic computational capacity useful computation capacity somewhat reminiscent universal computation indicates possible capacity 
system implements say universal turing machine perform discrete computation required emulation task extremely difficult construct set initial conditions employed vanishing fraction total available states 
contrast upper bound set indicates probable computational capacity may small set initial conditions interpreted leading higher levels computation typically capacity available example dynamical system intrinsic computational capacity equivalent state machine calculate binary expansion requires amount memory grows successive digits 
similarly finite memory device check balanced parentheses arithmetic expressions 
device capacity specified entire class finite automata task required capacity class pushdown stack automata strictly powerful violates bound 

intrinsic computation period doubling cascade sections review intrinsic discrete computation embedded known continuous state dynamical systems 
connection discrete computation continuous states symbolic dynamics 
approach continuous state orbit observed instrument produces coarse fact binary measurements 
detect intrinsic computation resulting binary data stream fed modeling algorithm ffl machine reconstruction produce minimal computational model data stream 
resulting model referred ffl machine describes intrinsic computational capability observed process dynamical system plus instrument 
due choice particular type instrument ffl machine describes computational capability hidden dynamical system 
dynamical system analyzed computational structure logistic map particular period doubling route chaos 
data stream reconstructing model derived trajectory logistic map started initial condition critical computation phase transitions hierachical learning attractor 
observed process stationary 
trajectory generated iterating map logistic function rx nonlinearity parameter initial condition 
note map maximum occurs orbit 
converted discrete sequence observing binary partition fx partition generating means sufficiently long binary sequences come arbitrarily small intervals initial conditions 
due information processing logistic map studied coarse measuring instrument investigations logistic map concentrate time asymptotic behavior attractor changes nonlinearity parameter interest information processing capabilities related 
basic measures directly taken reconstructed ffl machines 
statistical complexity size reconstructed ffl machine 
units bits roughly speaking measured logarithm base number ffl machine states 
short statistical complexity amount memory process produced data stream 
second measure information processing entropy rate rate bits time step information produced 
net result just complexity entropy rate original equations motion nonlinearity parameter simply forgotten 
interest complexity data stream depends rate information production 
complexity entropy plot summarizes relationship showing results reconstructing ffl machines data streams produced different parameter values 
data set produced ffl machine reconstructed statistical complexity entropy rate estimated 
estimated shannon information length sequences 
simply scatter plot complexity entropy pairs 
number important features exhibited complexity entropy diagram 
details refs 

extreme values entropy lead zero complexity 
simplest periodic process random statistically simple 
zero complexity described ffl machines single state 
extremes processes noticeably complex apparent peak critical entropy value denoted entropy turns data streams come parameters logistic map periodic including parameters periodic windows map chaotic regime 
data sets produced chaotic parameter values 
theory developed explain emergence high computational capability ordered disordered regimes 
processes entropy complexity equivalent crutchfield statistical complexity versus specific entropy period doubling route chaos 
triangles denote estimated values logistic map nonlinearity parameter 
ffl machines reconstructed subsequence length 
heavy solid lines overlaying empirical data analytical curves derived versus 

critical parameter values period doubling cascade logistic map number jvj inferred states grows bound 
rc 
sequence length ranges jvj states 
shown inferred symbol density states jv limiting value 

shown solid straight line left portion 
processes dependence complexity entropy interesting 
fact solution terms dependence entropy complexity 
result log curved solid line shows relevant portion eq 

comparing periodic chaotic analyses eqs 
provides detailed picture complexity entropy phase transition 
critical entropy sequence length log log log log complexity high entropy side solution log constant 
eq 
follows immediately complexity low entropy side transition difference finite constant latent complexity transition bits 
latent complexity independent sequence length 
analysis interdependence complexity entropy sense applies sequence length done length fixed critical computation phase transitions hierachical learning preceding results predict transition location 
critical entropy example 
behavior universal 
behaviors specific entropies periodic 
behaviors higher entropies chaotic 
functional forms eqs 
general lower bounds 
statistical complexity maximized border predictable unpredictable thermodynamic phases 
important emphasize complexity entropy diagram explicit system nonlinearity parameter 
diagram defined way order show properties depend intrinsic information production intrinsic computational structure 

approximation critical ffl machine period doubling onset chaos 

version machine 
deterministic state chains replaced equivalent strings 

point interplay complexity entropy period doubling cascade reviewed 
happens phase transition critical entropy density parameter value possible corresponding period doubling onset chaos 
shows state ffl machine reconstructed window size parameter setting 
improved approximation attempted increasing window length take account structure longer subsequences 
shows result doing just onset period doubling chaos number jvj states reconstructed ffl machines grows bound 
consequence data stream produced onset chaos leads infinite machine 
consonant view introduced feigenbaum onset chaos viewed phase transition correlation length diverges computational analog process intrinsically infinite memory capacity 
computational analysis yields 
shown example infinite memory organized particular way logistic map equivalent universal turing machine powerful stack automaton 
explicit state representation directly indicate type information processing occurring phase transition 
unbounded growth crutchfield machine size shown give help 
simple transformation state machine goes distance uncovering happening 
replacing chains machine corresponding sequences produces critical machine 
representation evident branching states quite regularly organized 
discovery higher order regularity additional element consists manipulating intervening strings branching states 
stack bottom top tg tf ba bb ba finite version infinite critical ffl machine 
string production machine making transition square states updates string registers productions bb ba 
contents bit flipped 
finite representation period doubling critical ffl machine way nondeterministic nested stack automaton produces symbols sequentially 

increasing accuracy modeling experiment shown detail ask machines series successively improved models grow size 
result disclosed machine branching states string productions needed describe regularity growth machines 
turn leads discovery shown finite machine kinds states new type denoted squares registers hold binary strings 
simple inspection machine shows string manipulations described appending copy contents replacing contents copies contents 
string productions denoted bb ba 
outset register contains contains 
problem string production machine length strings registers grows exponentially fast contrasts sharply sequential production symbols logistic map 
gives alternative equivalent serial machine produces single symbol time 
called way nondeterministic nested stack automaton 
memory machine organized string registers pushdown stack 
type memory accessible element top 
fact automaton shown slightly sophisticated stack allows finite control new nested stack existing 
restriction automaton move higher levels outer stack finished created stack 
critical computation phase transitions hierachical learning net effect constructions finite representation discovered infinite 
main benefits aside producing manageable description type information processing critical state logistic map transparent 

intrinsic computation onset chaos second route chaos interest received extensive study 
simplest terms route chaos models exhibit describe coupling oscillators periods ratio rational 
ratio number periods oscillator order complete full cycle called winding number 
key parameter controls entire system behavior rational oscillators phase locked 
behavior common nature underlies disparate phenomena cardiac arrhythmia stability solar system puzzling synchronization mechanical clocks located close proximity 
simplest model competing oscillators discrete time circle map oe oe mod oe oe sin oe map name derives fact mod operation keeps state oe unit circle 
thinks oe phase properly relative phase original oscillators 
control parameters directly sets phase advance degree nonlinearity roughly interpreted coupling strength oscillators 
function nonlinearity parameter behavior transition chaos 
logistic map signature path chaotic behavior approached periodic behavior 
furthermore circle map signature basic character phase transition investigate arc space exhibits just phase transition chaos 
path includes golden mean circle map called winding number golden mean easiest way implement set 
varying gives wide sample behavior types route chaos 
threshold nonlinear behavior map larger values necessary sufficient condition chaos 
measuring instrument uses types partition depending parameter range 
generally instrument binary partition labels oe oe oe oe oe oe 
oe oe oe oe oe larger oe smaller value cos interval 
iterating map times initial condition time series oe oe oe oe 
produced 
observed instrument time series converted binary string 
coarse measurements 
shows complexities entropies estimated route chaos settings chosen parameter arc period doubling crutchfield statistical complexity versus specific entropy route chaos 
triangles denote estimated values circle map nonlinearity parameter different ranges values values values 
ranges behavior simple periodic 
ffl machine reconstruction tree depth morph depth range second ranges typically higher entropy rates 
entropy density estimated subsequence length 
refer details annotations 
golden mean critical winding number route chaos number jvj inferred states grows bound 
sequence length ranges jvj states 
behavior entropies periodic 
higher entropies unpredictable 
statistical complexity maximized border ordered chaotic thermodynamic phases 
lower bounds eqs 
shown solid lines phases 
circle map clearly obeys logistic map scatter differs 
example cluster points just high complexity 
due irrational behavior predictable 
complexity derives fact map essentially reads digits irrational winding number 
leads data streams require large machines model 
scatter high entropy low complexity 
due highly intermittent behavior results subsequences observed underlying probability distribution far uniform 
result ffl machine reconstruction approximates behavior biased coin zero complexity single state entropy unity 
happens onset 
metric entropy zero number length subwords increases strictly linearly 
single symbol entropy high bits frequency isolated zeros lim fl fl th fibonacci number 
ffl machine reconstruction applied critical data stream lead finite state machine 
fact just logistic map onset chaos machine size critical computation phase transitions hierachical learning keeps diverging 
see 
finite approximation presumably infinite critical machine shown 
notably intrinsic computation finitely represented higher level 
average winding number golden mean finds fibonacci machine shown 
state finite control automaton shown top portion determines copying operations registers contain binary strings 
finite control started left double circled state begins 
finite control machine edges labelled actions taken state state transition 
symbol edge label zero read input data stream recognized 
symbol read determines edge taken state 
backward slash indicates string production performed registers consists copying previous contents appending previous contents string productions denoted ab applied simultaneously 
backward slashes fibonacci productions performed 
input string match contents register register read reverse 
denoted left going arrow edge label 

hierarchical reconstruction portion infinite critical machine route chaos golden mean winding number 
note machine shown intervening states deterministic chains suppressed 
fibonacci machine finite representation infinite machine 
basic computation step describing critical dynamics employs pair string productions 
computational class quite similar period doubling behavior nested stack automata 
higher level finite description golden mean critical behavior 
demonstrated period doubling noting productions context free deterministic lindenmayer productions mapped indexed context free grammar nested stack automaton fibonacci machine represented stack automaton analogous shown period doubling onset chaos 
required length fibonacci machine registers grows function number applications production exponential rate golden mean string length grows fibonacci numbers observation directly productions 
transitions machine input strings substantial length recognized 
interpretation recognition performed fibonacci machine phase locks data stream 
fibonacci machine jump point critical string necessarily special starting time symbol determine subword reading language fibonacci subwords 
crutchfield close section summarize section approach intrinsic computation 
sections demonstrated intrinsic discrete computation detected continuous state dynamical system 
showed get simple model captures system true computational capability determined observations necessary jump powerful computational class 
onsets chaos computational analysis identified structures higher finite memory devices 
onset chaos led infinite memory just importantly memory organized particular way facilitate types computation 
logistic circle maps respective onsets chaos far turing machines especially ones universal 
onset information processing embedded jumps finitary level level stack automata 
practical consequence failing change powerful representation critical systems observer conclude random predictable complex 
generally infinite complexity arise onset chaos leads expect highly nonlinear systems perform significant amounts particular forms information processing 

theory hierarchical learning high complexity computation elements detected 
figures suggest significant difficulties arise tries model critical process representation adapted finite memory infinite models appear 
critical critical cases resolution machines inferring productions governing successively longer strings 
interpretation situation initial representation selected appropriate 
cases clear higher level finite representation type information processing dynamical systems implementing 
way automatically discover better model classes detect emergence high levels complexity new types computational capability 
modeling technique hierarchical ffl machine reconstruction introduced begins answer question 
turns basic method changing representation general logistic circle map examples suggest 
process classes hidden markov processes spatio temporal dynamics generalization provided essential insights discovering finite models demonstrably complex data 
hierarchical machine reconstruction gives way break weak model classes learn powerful ones clear step note common aspects hierarchy computational models 
level number elements 
models class consisting states transitions 
observed indirectly measurement function 

languages ensembles finitely representable behaviors 
critical computation phase transitions hierachical learning 
symmetries reflecting observer assumptions process structure 
determine semantic content model class defined equivalence relations corresponding symmetry 

reconstruction procedure producing estimated models 
factors symmetry data stream formally reconstruction model denoted 

complexity process size reconstructed model respect class sjm kmk 

predictability estimated states distinguished important reconstructed models minimal 
contains structure additional properties underlying dynamics 
simplest explication note multiple state representations ideal random binary string 
size representation meaning amount memory single state process allowed model computed 
view individual levels hierarchy model classes hierarchical machine reconstruction search ffl machine minimal model computationally powerful level yielding finite description 
definition builds adaptive notion observer initially correct model class 
observer find better representation 
moving inductive hierarchy innovation new notions state 
large part new model class simply machine reconstruction introduced ref 

central method discovering structure group lower level states equivalence classes lead range behavior 
equivalence classes notion state new level 
series increasingly accurate lower level models sense data stream ffl ffl ffl ffl 
reconstruction higher level 
regularity models higher level representation 
example onset chaos hierarchical machine reconstruction involves levels data stream trees finite automata stack automata finding finite representation 
additional step grouping states level transition structure 
step seen deterministic modeling recurrent hidden markov models innovation counter onsets chaos reviewed innovation string productions discrete spatial processes innovation local state machines break away cellular automata look tables case quite straightforward find additional computational element governing lower level information processing 
exhaustive partially ordered spectrum basic computational elements available innovation contain component albeit small undetermined discovery 

mechanism computes 
eye technological age improvements microscopic engineering consider engineering experiment 
cast notion crutchfield intrinsic computation higher relief hopefully giving false impression feasibility 
time integrated circuit designer effect employs millions degrees freedom physical device order implement basic computational element storage transmission logical manipulation single bit information 
vast amount available microscopic information processing forced bed boolean logic relatively macroscopic methods materials science 
appealing view th century logic computational paradigm direct look nonlinear physics governs molecular solid state interactions yield new efficiencies new elementary components information processing 
gained intrinsic computational capability microscopic physics 
shown certainly high levels computational structure simple nonlinear dynamical systems 
holding available physical resources constant information processing approaches compared 
conventional digital computer designed time 
second possibility architecting molecular structures detail consistent solid state physics 
mole silicon molecules high density computation produced 
dynamical systems contribute understanding limitations possibilities 
preceding discussion contrasted perspectives state space geometry view dynamical systems theory computation theoretic view process symbolic dynamics terms automata 
attempts integrate views provide base comparing intrinsic usable computation physical device 
submanifolds grouping stable unstable manifolds state space 
vertical submanifold states entropy cascade 
organized low entropy energy enters top cascades heat bath thermal fluctuations strict second law thermodynamics 
horizontal submanifold states vastly smaller dimension critical submanifold supports computation 
ways 
allow arbitrarily long space time correlations basic requirement reliable computation 
second evolution nonlinear elements order nontrivial information processing storage transmission logical operations 
third borrow energy return energy entropy cascade way computation corrupted 
effect organized energy introduced critical submanifold drive computation forward destroying infinite spatio temporal correlations 
coupling submanifolds nonlinear order effect transfer 
extent essentially unidirectional coupling organized energy achieved information processing critical submanifold robust 
note total thermodynamic entropy density quite high digital analog computers presence substantial intrinsic usable computation 
support computation requirement device zero thermodynamic entropy density vanishingly small dynamical entropy rate system near onset chaos 
required properties just delineated critical submanifold 
critical computation phase transitions hierachical learning organized degrees freedom heat bath degrees freedom critical subspace supporting computation entropy cascade manifolds computation highly schematic view state space physical computing device 
state space split entropy cascade submanifolds brings energy low thermodynamic entropy 
typically small fraction drive computation forward critical submanifold 
preceding sections suggest possible avenues increasing density computation 
higher level computational processing available nonlinear dynamical systems 
second improve energy transfer isolation critical submanifold highly nonlinear coupling 
linear coupling contrast effective meeting goals unidirectional energy transfer isolation 
lieu nonlinearity designs employ large number degrees freedom relying law large numbers reduce net fluctuation critical submanifold 
case possibilities increasing computation density necessarily take advantage nonlinear microscopic physics 

concluding remarks amusing difficulty discussing computation time 
term evokes strong sense discreteness mathematical logic 
impression think computation refers discrete symbol manipulation 
perception knowledge physics human neurophysiology history computing machinery 
digital electronic technology hijacked scientific language 
credit resolution bias lay turing phrase computer refer human performing calculations pencil 
argued markings discrete symbols finite set process leading put place initiated supported apparently continuous process quantum mechanics 
discreteness justified 
relationship written symbols originating thought process strikes akin symbolic dynamics stood relation continuous state logistic circle maps considered 
discrete computation appeared embedded dynamical systems meaning written language 
clear questions raised synthesis computation dynamics fruitful 
particular theories information transformation need rectified crutchfield theories information creation 
synthesis go distance harnessing dynamical nonlinear aspects microscopic nature perform wider range information processing 
reveal new regimes information processing help push computation closer limits physical devices forget equally important limitation notion computation acknowledgments due jim hanson melanie mitchell helpful discussions 
supported afosr 

hopcroft ullman 
automata theory languages computation 
addison wesley reading 

blum shub smale 
theory computation real numbers 
bull 
ams 

moore 
real valued continuous time computers model analog computation part technical report santa fe institute 

smith 
simple computation universal cellular spaces 
acm 

deutsch jozsa 
rapid solution problems quantum computation 
proc 
roy 
soc 
ser 


crutchfield 
spatio temporal complexity nonlinear image processing 
ieee trans 
circ 
sys 


principles parallel image processing 
physica 

mitchell crutchfield 
dynamics computation edge chaos re examination 
cowan pines editors integrative themes volume xix santa fe institute studies sciences complexity page press reading ma 
addison wesley 
santa fe institute technical report 

berlekamp conway guy 
winning ways mathematical plays volume 
academic press new york 

lindgren 
universal computation simple dimensional cellular automaton 
complex systems 

crutchfield young 
computation onset chaos 
zurek editor entropy complexity physics information volume viii sfi studies sciences complexity page reading massachusetts 
addison wesley 

moore 
unpredictability undecidability dynamical systems 
phys 
rev lett 

crutchfield young 
inferring statistical complexity 
phys 
rev 

crutchfield hanson 
turbulent pattern bases cellular automata 
physica press december 
santa fe institute report sfi 

feigenbaum 
universal behavior nonlinear systems 
physica 
critical computation phase transitions hierachical learning 
feigenbaum shenker 
dissipative systems renormalization group analysis 
physica 

crutchfield 
reconstructing language hierarchies 
editors information dynamics page new york 
plenum 

crutchfield 
observing complexity complexity observation 
editor inside versus outside pages berlin february 
springerverlag 
santa fe institute technical report 

crutchfield 
radius 
phys 
lett 

