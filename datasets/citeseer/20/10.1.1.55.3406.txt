problem formulation multidisciplinary optimization cramer dennis jr paul frank robert michael lewis gregory tr august center research parallel computation rice university south main street ms houston tx aiaa symposium multidisciplinary design optimization september 
problem formulation multidisciplinary optimization cramer dennis jr paul frank robert michael lewis gregory august concerned optimization systems coupled simulations 
computational engineering frequently called multidisciplinary design optimization mdo 
expository mdo optimization researchers 
believe optimization community contribute important class computational engineering problems 
addition presents new abstraction multidisciplinary analysis design problems new decomposition formulations problems 
furthermore individual discipline feasible idf approaches suggested existing specialized simulation analysis codes introduce significant opportunities coarse grained computational parallelism particularly suited heterogeneous computing environments 
key issue fundamental approaches mdo formulation discussed kind feasibility maintained optimization iteration 
familiar multidisciplinary feasible mdf approach multidisciplinary analysis problem solved multiple times optimization iteration problem function constraint derivative evaluated 
spectrum aao approach feasibility guaranteed optimization convergence 
extremes lie new idf formulations amount maintaining feasibility individual analysis disciplines optimization iteration allowing optimizer drive computation multidisciplinary feasibility convergence approached 
considerations choosing formulation sensitivities required optimization done 
discussion issues related mdo problem formulation highlights trade offs reuse existing software computational requirements probability success 
keywords constrained optimization multidisciplinary design optimization optimal design computational engineering 
boeing box mail seattle wa department computational applied mathematics rice university box houston tx 
supported state texas contract air force office scientific research department energy de fg er army research office daal national science foundation cooperative agreement ccr 
fundamental challenge emerging field computational engineering design analysis systems products described coupled simulations 
field called multidisciplinary design optimization multidisciplinary optimization commonly mdo 
tremendous economic significance developing capability order facilitate rapid prototyping new designs reduce time market new products 
mathematical programmers contribute problem optimizing complex coupled systems single discipline simulations especially modern algorithms nonlinear integer programming field mdo 
mathematical programming motivated put effort nonlinear mixed integer programming mip problems arise commonly mdo 
nonlinear mip difficult area hold hope historically great advances discrete optimization come studying particular classes problems 
due extreme complexity mdo problems believe necessary focus problem formulation methods interdependence nonlinear programming algorithms 
new abstraction mdo problem examine alternative ways formulate mdo problems 
concentrate application mathematical programming algorithms mdo 
question formulating mdo problems major topic engineering literature mdo 
part genesis ideas find ways exploit parallel computation nonlinear programming 
turned reformulating problems design parallel algorithms general nonlinear programming successful 
new idf formulations suggest advantage coarse grained parallelism naturally suited heterogeneous computing environment 
hasten point parallelism motivation formulation parallelism expect idf efficient approach solving mdo problems 
section optimization example provide intuition concepts rest 
section notation definitions describing model multidisciplinary analysis optimization problem 
model section discuss multidisciplinary analysis attainment feasibility mdo 
section discussion main formulations mdo including hinted stated explicitly 
section discusses derivative requirements mdo 
section discusses issues related choosing formulation 
section 
contents represent abstraction generalization specific material 
natural ask generalization worthwhile limited goal introducing optimizers interesting important challenging problem mdo 
abstraction essential exposition retrospect surprise necessary extend research order fill gaps exposition 
worked write intended expository forced refine earlier formalization communicate essential features structure mdo problems 
come regard abstraction mdo emerged useful contribution find having absorbed see mdo structure represents look 
example optimization specific problem useful thinking mdo 
model problem optimization 
example define terms text refer example illustrate model various problem formulations 
model formulations discussed meant apply general mdo problems 
static consider flexible wing aircraft steady flight 
air rushing wing causes pressures imposed wing causes wing change shape 
change wing shape turn causes aerodynamic pressures change 
static assume physical processes reach equilibrium 
system equilibrium shown 
analysis disciplines involved aerodynamics da structures 
computational problems disciplines generally solved individual analysis codes say finite difference computational fluid dynamics cfd code aerodynamics aa finite element code structures 
important reader understand significance diagrams appear convey convey 
diagrams intended show components related insofar information transmitted 
regard capture purely static feature problem 
diagrams intended flowcharts express sequence actual calculations operations 
diagrams represent sources sinks function flowcharts describing sequence computation 
shall see utility diagrams ability capture structure coupling communication components problem 
suppose structures code description wing structure aerodynamics structures code description wing shape 
aerodynamics code takes additional input wing mas produces output pressures velocities 
ua wing surface 
structures code takes additional input load wing sa produces output stresses 
wing 
say single discipline feasibility aerodynamics cfd code aa successfully solved pressures input shape 
similarly single discipline feasibility structures structures code successfully solved structural analysis equations produce input forces 
feasibility single discipline means equations discipline code intended solve satisfied 
continuing example note analysis codes solve problems different grids interact specific interface 
accommodate analysis map aa map sa represents da oe eas ma aa ua sa sa xi xi xi xi xi xi xi xi xi xi xi xi xi xi xi xi xi xi xi xi xi xi xi xi esa oe system spline fit grid values generated preceding analysis code map sa represents spline evaluation generate values points needed analysis code 

clearly provision converting values pressures aerodynamics values forces integral pressure structures converting structures changes aerodynamic shape 
assume conversion done fit evaluate routine require choice sides analysis code 
example assume pressures converted loads sa sa independently assume converted shape changes fas eas convenient view discipline analysis code codes get input provide output disciplines notion depicted dashed boxes 
call maps ffif interdisciplinary mappings 
represent coupling disciplines play key role mdo 
tacitly assume instance takes inputs single discipline sends outputs single discipline 
way handle instances complex communication treat subject mapping new discipline 
note data passed disciplines may considered compressed sa smaller vectors ua respectively 
happen example vectors represented coefficients fitting functions vectors data 
call reducing interdisciplinary bandwidth 
note approximation fitting operation 
shown data compression reduce dimension optimization problem certain formulations 
interdisciplinary mappings provide common interface codes 
multidisciplinary analysis achieved 
single discipline feasibility aerodynamics structures 
input corresponds output interdisciplinary mappings 
call situation multidisciplinary feasibility corresponds simulations equilibrium 
discuss obtaining multidisciplinary feasibility section 
possible single discipline feasibility aerodynamics structures call individual discipline feasibility multidisciplinary feasibility 
occurs equations code satisfied input discipline correspond output 
key observation plays important role individual discipline feasible idf formulations mdo 
add optimization example 
aerodynamic optimization combines single analysis discipline aerodynamics optimization 
design variables typically parameters say spline coefficients defining wing shape 
objective function minimize drag come close possible specified pressure distribution 
may design constraints prohibit undesirable wing shapes bad aerodynamic flows 
similarly structural optimization combines structures optimization minimize structural weight changing size structural components subject stress constraints 
optimization combination aerodynamics structures optimization generally aerodynamic design variables shapes structural design variables sizes shapes 
model lump design variables single variable xd objective function measure performance generally accepted single measure available aeronautical literature 
logical choices optimization problem minimize weight subject constraint drag acceptably small minimize drag subject weight acceptably small 
alternatively minimizing combination drag weight appropriate 
ultimately behavior aircraft needs tied aircraft performance measure direct operating cost 
situation set conflicting objectives expected mdo engineers discipline probably formulated objectives design 
consider matter reader note goal programming approach nonconvex multiobjective optimization comments 
order appreciate trade offs various formulations mdo problems necessary know size difficulty underlying analysis disciplines 
obviously depend problem assume problem sufficiently complex simply overwhelmed computing power 
example practical optimization dimensional configuration involve computational fluid dynamics code takes hours supercomputing time execute single analysis 
structural analysis code typically costly may take significant fraction hour 
code amount computing time acceptable engineering analysis 
formulations mdo require tens hundreds executions impetus mdo formulations requiring computational need employ parallel computing cheaper methods 
discussion considerations choosing formulation postponed section 
framework describing mdo problems section generalize discipline mdo example abstraction reasoning general mdo problems 
important right development mdo research area necessary specific various optimization formulations 
rigorous summary notation conventions useful somewhat tedious delicate 
reader may want sure understanding refer back definitions required 
shows data flow single discipline discipline version 
notational convention denotes vector variables controlled optimizer nonbasic variables 
original design variables xd components formulations includes variables 
constraints optimization problem denoted 
original design system constraints cd components include constraints 
notation represents jacobian matrix respect rs rth row transpose gradient vector constraint important convention way subscripts 
quantity double subscripts order indicates information flow 
example denote generic ith single discipline information meant pass subscripted ij 
useful think discipline grouping communication analysis codes 
terms example structural analysis code evaluator code provide loads needed structural analysis 
fitter code compress output communication disciplines 
avoid complexity allow routines pass variables xd directly 
convention arguments left semicolon inputs function vector variable right dependent variables determined equation involving function 
assume xd available computations discipline 
assume constants needed analysis mentioned notation reynolds number flow reside needed 
xd pq ffl ffl ffl ae oe ae oe ae ae ae ae ae ffl ffl ffl ni ni pq disciplines analysis inputs equations outputs inputs analysis code discipline block components ij inputs analysis code needed discipline vector block vector comprised block vectors 
mnemonic multidisciplinary data 
executed design parameters xd inputs 
nm total number interdisciplinary inputs length vector analysis code solver mapping form xd 
effort talent gone developing codes serious advantages formulations preserve integrity 
quantities solves internally executed include pressures velocities stresses denotes vector analysis discipline variables basic variables computed formulations solving complete set analysis discipline equations 
nu total number unknown analysis quantities pressure stresses associated discipline example analysis code solves nu equations nu analysis unknowns 
residual function equations solved compute analysis variables equations take form xd 
remind reader variables left semicolon represent inputs system right outputs variables solves 
nu residuals 
interdisciplinary mappings ij mapping inputs required analysis code output example ij mapping pressures aerodynamic grid loads structures grid 
functional form mapping ij ij xd ij composition mappings ij ffi ij 
input convention set ij 
ij mapping analysis variables outputs needed produce input ij role transforming discipline transformation involve data compression reduce communication bandwidth disciplines 
example ij ij xd map pressures computed aerodynamic analysis coefficients spline surface approximation pressures coefficients fit load induced wing pressures 
mnemonic fit ij vector functions 
may identity mappings may zero mappings 
inputs disciplines 
block components ij sent fitter evaluator discipline convention ij may just compression ij transformed ij ij alternatively ij may product complicated 
symbol mnemonic 
intended reflect nature surrogate depending particular pair ij ij vector block vector block vectors total number inputs ij ij ij mapping inputs required compressed ij example ij ij xd ij evaluator spline approximating structural loads coefficients ij ij vector coefficients spline fit pressure convention ij performs integration obtain loads 
mnemonic evaluate assume ij corresponding ij ij may identity mappings may zero maps 
reader see separation evaluators flow information direction evaluators analysis code simplifications true relationships components 
instance code involving adaptive grid course performing analysis may need return evaluators obtain information adaptively updated grid 
complication problem reader bears mind purpose represent flow information disciplines 
preceding denote block vector functions comprised corresponding subscripted functions order compact notation necessary keep mind ordering components different consistent 
example suppose aerodynamics structures 
order order order order convenience writing xd xd express equilibrium system 
optimization variables xd original problem design variables 
include wing shape parameters beam thicknesses nd original problem design variables 
xu xm optimizer supplied values respectively formulations 
formulations optimizer explicitly control xd subset surrogates look just design variables vector block variables xd xu xm explicitly controlled optimizer 
convenience surrogate arguments function defined terms original system variables 
example specified particular mdo formulation components xd may write 
optimization objective constraints design objective function minimized 
deviation desired pressure distribution drag weight general depends explicitly design variables xd outputs analysis disciplines 
cd original problem design constraints 
include required lift maximum allowable stresses maximum wing length constraints original problem depend explicitly design variables xd outputs analysis disciplines 
aux coupling constraints disciplines needed formulations optimizer explicitly controls parameters xd constraints ensure feasibility reformulated mdo problem achieved optimization convergence 
example optimizer controls surrogate xu auxiliary constraint aux xd xu needed mdo problem 
vector function residuals constraints cd aux satisfied optimizer 
feasibility described section multidisciplinary analysis mda achieved coupled system equilibrium 
say mda completed values variables change execution mappings shown regard order 
mda costly expense incurred mda algorithm repeatedly executing analysis codes 
way avoid cost require feasibility convergence optimality 
approaches require partial feasibility reasons 
point section express notions feasibility needed framework provided previous section 
say single discipline analysis carried particular xd solved yield inputs xd probably done executing input 
xd single discipline feasibility discipline note semicolon separate arguments input output point view 
design variables xd fixed multidisciplinary analysis course vary multidisciplinary optimization 
likewise residual form say individual discipline feasibility xd computed explicit form xd 
equation states individual discipline feasibility implies discipline single discipline feasibility 
multidisciplinary feasibility mdf addition individual discipline feasibility interdisciplinary variables match 
residual form xd xd form xd xd combine residual forms equivalent equation xd xd xd xd example residual form wa xd mas ua xd sa interdisciplinary constraints mas gas xd sa sa xd ua residual form mdf simultaneously satisfy 
complete form ua aa xd mas xd sa mas gas xd sa sa xd ua residual form combined equation expresses multidisciplinary feasibility terms just variables xd wa xd gas xd ua xd sa xd ua reiterate difference individual discipline feasibility multidisciplinary feasibility matching interdisciplinary input output variables reflect equilibrium 
traditional single discipline optimization just optimization constraint discipline point xd constraint distinguishes mda mdo single discipline counterparts 
applications may expedient enforce equilibrium certain pairs disciplines model case coalescing pair single composite discipline 
term tight coupling engineers describe coalescence disciplines conjoined produce single analysis code simultaneously solves xd xd ij ij xd ji ji xd mdo formulations point framework mdo discuss various kinds feasibility coupled mda system 
purpose section widen discussion include optimization 
key issue alternative formulations kind discipline feasibility maintained function constraint sensitivity needed optimization iteration 
multidisciplinary feasible mdf approach complete multidisciplinary analysis problem feasibility maintained optimization iteration 
individual discipline feasible idf approach individual discipline feasibility single discipline feasibility disciplines maintained 
interdisciplinary equilibrium constraints added optimization constraints order ensure full mda optimization convergence 
aao approach analysis variables optimization variables analysis discipline equations optimization constraints 
feasibility aao idf guaranteed optimization convergence 
refer discipline feasible feel better describes formulation 
formulations set optimization variables includes design variables 
formulations include additional optimization variables part definitions 
subsections give general mathematical specification mdo problem formulations give specialized formulations 
formulations general mdo problems multidisciplinary feasible mdf formulation common way posing mdo problems terminology multidisciplinary feasible mdf formulation 
formulation vector design variables xd provided optimizer coupled system analysis disciplines complete mda performed value xd obtain system output variable xd evaluating xd xd cd xd xd 
mdf formulation minimize xd xd respect xd subject cd xd xd xd xd xd xd 
reader may recognize mdf reduced basis formulation xd nonbasic vector basic vector 
avoid possible conflicts normal usage terms basic nonbasic say xd explicit variable variables arise mda part problem implicit 
reader see derivative method solve complete mda necessary just iteration point cd derivatives evaluated 
expensive finite differences especially expensive tricky loss accuracy computing general formulation sake completeness state general formulation mdo problem 
formulation motivation useful mdo 
state residual forms 
kitchen sink formulation optimization variables xd xm xu conditions full mda included auxiliary constraints minimize xd xu respect xd xm xu subject cd xd xu xm gamma xd gamma xd xu xd xm xu xu gamma xd xm aao formulation consider interesting formulations extremes preceding mdo formulations 
call aao approach 
aao seek obtain feasibility analysis problem sense individual discipline multidisciplinary single equations discipline optimization convergence reached 
way optimizer waste time trying achieve feasibility far optimum 
take explicit variables xd xu write formulation terms implicit variable interdisciplinary mapping defining relation 
minimize respect xd xu subject cd aux xd xu 
drawback practical problems generally involve large number constraints discrete equations analysis disciplines larger number nd nu optimization variables 
additionally constraints may smooth 
aao analysis code performs particularly simple function evaluates residuals analysis equations solving set equations 
ultimately course optimization method aao solve analysis discipline equations attain feasibility 
generally means solution method contain special techniques single discipline analysis solver contains 
equality constraint satisfaction schemes newton method existing general purpose optimization codes equal task case constraints represent extremely nonlinear pde aerodynamics 
individual discipline feasible idf formulation way avoid complete mda function value idf formulation 
idf occupies position spectrum aao mdf formulations represent extremes aao feasibility enforced optimization iteration mdf complete multidisciplinary feasibility required 
extremes lie possibilities amount specific decompositions analysis codes optimizer 
possibility idf approach maintains individual discipline feasibility allowing optimizer drive individual disciplines multidisciplinary feasibility optimality controlling interdisciplinary data 
note approach analysis variables promoted optimization variables fact indistinguishable design variables point view individual analysis discipline solver 
idf specific analysis variables promoted represent communication coupling analysis disciplines interdisciplinary mappings 
rest section describes idf methods 
formulation instance idf approach 
relation defines implicit variable just form 
individual discipline feasible optimization iteration 
method replaced explicit surrogate xm interdisciplinary mapping auxiliary constraint 
explicit variables xd xm 
minimize xd respect xd xm subject cd xd aux xm gamma xd 
nd nm optimization variables uncompressed idf approach 
notice evaluation involves executing single discipline analysis codes simultaneously available multidisciplinary data expensive computations done independently communication costs negligible comparison 
furthermore analysis codes vary widely types computations done generally suitable different hardware environments 
heterogeneous network computers may particularly suited formulation 
drawback particular idf method large number optimization variables 
mentioned earlier take advantage data compression ij ij xd elevate explicit variables minimize xd respect xd subject cd xd aux gamma xd xd 
advantage compressed low bandwidth idf formulation optimizer controls possibly fewest explicit variables idf formulation nd possible write permutations introduce possibility sequencing individual disciplines 
sequenced idf formulations idf formulations interdisciplinary mapping coupling variables sent discipline disciplines optimization variables associated auxiliary constraints imposed 
create idf formulations coupling variables optimization variables remainder actual computed analysis values 
example consider discipline problem example 
computations idf method sequenced analyses completed prior starting 
inputs second analysis available need optimization variables constraints associated interdisciplinary mapping variables second discipline 
usefulness sequenced idf formulation depends factors difficulty satisfying coupling constraints cost computing derivatives coupling constraints relative behavior optimization objective constraint functions formulations lost opportunity parallelism imposing specified sequence analyses 
different idf formulations developed option sequence individual codes 
interpret formulation represented equation sequenced idf formulation unique 
feasible point formulations vs feasible point algorithms think worthwhile discuss briefly distinction generalized reduced gradient grg approach corresponds mdf gradient restoration approach applied full space problem aao 
order prevent misunderstanding formulations really different just different implementations algorithms applied single formulation 
nonlinear programming algorithms gradient restoration methods approach optimality feasible path optimization step step restore feasibility 
different generalized reduced gradient approach maintains feasibility just iterate pair xd appears context algorithm 
words grg approach eliminates optimization calculations implicitly defined function xd stead 
apply gradient restoration method aao formulation optimization iteration optimization algorithm take step full space obtain complete new followed called restoration step consist mda replace xu part aao optimization iterate xd xu xd 
optimization iteration started multidisciplinary feasible point xd xd satisfying 
approach aao formulation mdf xu treated independent xd purpose setting new iterate xd mdf grg approach xd variable optimization iteration 
means derivatives sensitivities required mdf formulation computed arguments xd values system variables correspond mda solution value xd formulations specialized mdo problem elucidate formulation ideas show general formulations apply specific case mdo 
standard mdf formulation minimize xd ua xd xd respect xd subject cd xd ua xd xd ua xd aa xd gas xd xd xd xd sa xd ua xd illustrates mdf formulation 
notice provides detail computations ua analysis black box perspective optimization code 
analysis residuals available try avoid costly mda computations aao formulation ua explicit 
illustrates aao formulation 
aao optimization problem minimize respect xd xu subject cd wa xd mas xd sa xu mas gas xd xu sa sa xd 
aao formulations design optimization problems mentioned literature aerodynamic optimization structural optimization chemical process control control inverse problems 
approach called shot method called simultaneous analysis design 
authors discuss aao remarkably efficient aerodynamic optimization provided computational difficulties overcome 
rest section describes idf methods 
reiterate essence idf optimization iteration correct aerodynamic analysis correct structural analysis optimization convergence pressures predicted aerodynamic analysis correspond loads sent structures displacements predicted structural analysis correspond geometry sent aerodynamics code 
remind reader follow optimization step performing feasibility restoring mda optimization problem solved idf mdf formulation 
optimizer controls calculation cd xd ua analysis solver da oe eas ma aa ua fsa sa xi xi xi xi xi xi xi xi xi xi xi xi xi xi xi xi xi xi xi xi xi xi xi xi xi xi xi esa fas oe multidisciplinary feasible mdf method optimizer controls calculation cd xd xu xd xu aerodynamics residual computation wa structures residual computation oe aao method uncompressed idf formulation minimize xd ua respect xd xm sa subject cd xd ua cas gamma gas xd sa xm sa gamma sa xd ua ua aa xd xd xm sa 
low bandwidth idf formulation minimize xd ua respect xd sa subject cd xd ua cas gamma fas xd sa sa gamma sa xd ua ua aa xd eas xd xd sa xd sa 
shows flow information low bandwidth idf formulation 
derivative requirements mdo anticipate mdo efforts involve derivative optimization algorithms 
reason discuss derivatives required mdf idf aao optimizer controls calculation cd cas sa xd xd sa aerodynamics analysis sa xd ua including ua structures analysis oe fas xd including individual discipline feasible method formulations 
looks previous section formulations analysis residuals constraint analysis code solution mapping define implicit variable 
derivative algorithm require derivative analysis residuals solution operator 
mentioned aao disadvantage optimization code assume difficult task simultaneously satisfying analysis discipline equations 
mdf idf formulations advantage specialized software developed solving individual discipline equations 
price paid existing software mdf idf formulations differentiate solution operators implemented single discipline solvers 
daunting task obtain solution sensitivities 
attempts mdo finite difference approximations derivatives 
certainly issue problems accuracy expense believe practical alternative finite differences mdo everyday engineering tool 
alternatives analytic approaches implicit differentiation sensitivity equations adjoint equation solution automatic differentiation 
considerable research interest analytic methods sensitivity gradient calculations analysis codes engineering today provide required derivatives 
hope automatic differentiation provide alternative approach retrofit existing codes produce derivatives 
automatic differentiation confused symbolic differentiation 
adifor automatic differentiation tool familiar def function standard fortran program 
output adifor program duplicates computation original program addition includes code compute sensitivities indicated outputs respect indicated outputs 
sensitivities computed accuracy quantities partial derivatives represent 
finish discussion problems finding derivatives brief discussion derivatives needed various formulations 
little point general case restrict example problem 
subsections follow give derivatives constraints 
objective function design constraints cd depend parameters 
gradient objective function just transpose block row constraint jacobian corresponding cd cd replaced derivatives required mdf formulation mdf optimization sobieski gives complete presentation alternative approaches mdo model includes fit evaluate routines form slightly different 
mdf formulation linearized constraint residual noting xd cd xd cd ua ua xd cd xd deltax value constraints current approximation solution mdo problem 
remember mdf formulation full mda solution point 
coefficient matrix represents jacobian cd respect design variables xd computing partial derivatives xd ff cd xd cd ff ff generally easy computing solution sensitivities ff xd generally hard 
way obtain sensitivities form solve linear system follows 
notice need derivatives point holds apply implicit differentiation appropriate residual equations obtain wa xd mas xd wa xd mas mas gas xd gas xd wa xd mas ua ua xd xd sa xd xd sa sa sa xd sa ua ua xd xd sa xd fact xd 
derivative assumed available derivatives gather terms obtain linear system solved obtain sought derivatives wa ua wa mas gas sa sa ua ua xd xd gamma wa xd wa mas gas xd xd sa sa xd residuals available similar way differentiate rearrange terms obtain gamma ua mas gas gamma sa sa ua ua xd xd ua xd ua mas gas xd xd sa sa xd replace partial derivatives aa partial derivatives ua respectively 
important remember partials evaluated multidisciplinary feasible point 
derivatives required aao formulation aao formulation easier derivative requirements derivatives evaluated mda solutions 
fact formulation feasibility required arbitrary evaluation points 
linearized constraint residual noting xd xu xu xu cd xd cd xu cd xu wa xd wa xu wa xu xd xu xu deltax deltax ua deltax residual constraints current point 
blocks wa xu jacobians appear newton solvers disciplines respectively 
derivatives wa xd wa xu xd represent sensitivities analysis discipline equation residuals inputs disciplines 
assume derivatives available 
derivatives required idf formulations linearized constraint residual idf formulation sa deltax deltax mas deltax sa dcd cd ua ua xm cd xm sa gamma gas xd gamma gas xd gamma gas xm sa gamma sa xd gamma sa ua ua xd gamma sa ua ua xm dcd cd xd cd ua ua xd cd xd sa value constraints current point 
derivatives similar derived low bandwidth idf formulation 
expensive derivatives idf method form xd xm ij ij sensitivities individual discipline analysis solutions respect uncompressed compressed analysis inputs 
note derivatives required idf formulation required sobieski approach computing mdf problem derivatives 
contrast mdf method need evaluated individual discipline feasible point 
considerations choosing formulation section discuss briefly important issues related choosing mdo formulation specific problem multipoint design opportunities exploit parallel computing 
mdo problems come sizes shapes discrete optimization variables impossible say choose optimization algorithm general mdo problem 
problem nlp code offer section advice choosing formulation 
generally mdo choose different optimization techniques problem size smoothness derivative availability sparsity 
frank investigated applicability derivative methods nonlinear programming techniques response surfaces expert systems genetic algorithms simulated annealing neural networks mdo problems 
suspect concluded problems derivative methods applied methods effective techniques 
recommended possible mdo problems posed smooth differentiable problems derivative methods applied 
recognized done 
discuss global optimization mdo problems 
case methods recommended solve local optimization subproblems 
parallelism previously mentioned idf formulation suited implementation heterogeneous computing environment comprised computers suitable particular disciplinary analysis 
computing environment enable take advantage effort disciplines optimize performance analysis codes particular machines 
computational expense expect inside individual disciplinary analyses loosely coupled parallelism natural 
time environment possibly practical mdo problems single computer may large run entire large mdo problem 
attractive logistical reason exploiting parallelism 
mdo design group single discipline design groups conducting single discipline designs implement idf method parallel network machines run individual disciplines analysis codes 
mdf idf methods leave intact disciplinary analysis codes lose parallelism developed disciplinary specialists 
contrast aao method forced provide approach solving analysis equations 
aao implementation provide ways exploit parallelism 
algorithm probably huge sparse quadratic program computational kernel quite problematic 
similar issue arises idf approach 
shows interdisciplinary connectivity model problem optimization 
connections reveal degree patterns communication parallel implementation optimization solution 
instance diagram shows independence bulk computation needed compute function constraint values 
important level detail omitted diagram 
indicated patterns communication inside computational kernel optimizer 
depending size problem nature optimization algorithm may significant efficient parallel implementation 
optimization algorithm primary computational subtask solution relatively small model problem model gradient hessian assembled need worry patterns communication inside optimizer 
hand large mdo problems pattern computation communication inside optimization algorithm reflect problem 
computations inside optimization parallelism coupled disciplines may odds limiting boon expect parallelism idf approach 
particular means optimization block viewed monolithic block residing single computational unit 
may distributed computational units individual disciplines 
enable optimization algorithm take advantage block structure mdo problem execution optimization subtasks respecting distribution flow information inherent mdo problem 
multipoint design mdo problems involve design cases design points 
problem example may stress constraints flight conditions pull dive maneuvers 
may minimum performance requirements values velocity altitude fact different analysis codes may different design points 
example low fidelity aerodynamics analysis code may acceptable computing pressures dive maneuver high fidelity aerodynamics analysis code may required computing drag lift cruise 
mdo multiple design points readily couched formulations considering analyses point separate discipline 
table compare features main approaches mdo formulation 
table speculate performance achieved approaches 
hypotheses supported experimental results shown 
multidisciplinary feasible mdf individual discipline feasible idf approaches advantage moderate modification existing single discipline analysis codes 
additional advantage idf avoids cost achieving full compressed individual discipline aao feasible feasible idf mdf existing full direct full analysis codes coupling couple analysis codes analysis codes discipline individual optimal discipline ary feasibility disciplines feasibility feasible optimization ation iteration iteration variables design variables design variables design optimizer controls 
analysis variables discipline mapping independent variables unknowns coupling sensitivities 
parameters number optimization variables 
number nd nu nd nd sensitivities required 
optimization large moderate size small problem sparse sparsity dense size sparsity dependent coupling bandwidth table comparison formulation features individual discipline aao feasible feasible idf mdf probable compute low evaluate moderate high time objective residuals separately full constraints disciplines analyze discipline analysis expected speed optim fast medium slow ization process probability low medium high intermediate designs probable robustness unknown high medium table comparison predicted performance multidisciplinary feasibility optimization iteration procedure probably wasteful mdf far optimization convergence 
furthermore idf method easy replace analysis code additional modeling fidelity required add new disciplines 
hand idf approach requires explicit imposition optimization nonlinear constraints involving interdisciplinary maps calculation additional sensitivities corresponding variables communicated disciplines 
number variables constraints kept small project cost idf optimization significantly mdf optimization 
matter approach chosen efficient calculation sensitivities critical success 
opinion increasing complexity analysis codes increasing number design variables probably mdo applications finite difference sensitivities affordable 
area role automatic differentiation remains conclusively determined 
guess large problems kind analytic implicit sensitivities 
alternative course simplified analyses optimization correct iterative refinement 
example approach multidisciplinary design helicopter 
observe approach idf approach existing multidisciplinary analysis procedure viewed discipline information higher fidelity single analysis code second discipline 
iterative refinement outer loop build response surface model higher fidelity code 
iterative refinement optimization loop idf method multidisciplinary analysis discipline response surface model second discipline 
feel aao approach remains theoretically attractive probability expensive computationally 
unfortunately requires higher degree software integration achieved near realistic applications 

aerodynamic design sensitivity analysis computational fluid dynamics 
technical report aiaa aiaa january 
th aerospace sciences meeting january reno nevada 
burns cliff 
sensitivity calculations inviscid supersonic problem 
technical report icase march 
cramer frank dennis jr lewis 
alternative problem formulations multidisciplinary design optimization 
aiaa th symposium multidisciplinary analysis optimization september cleveland oh 
frank booker healy 
optimization search methods multidisciplinary design 
aiaa th symposium multidisciplinary analysis optimization september cleveland oh 
frank 
comparison optimization approaches model computational aerodynamics design problem 
journal computational physics 
haftka 
elements structural optimization 
kluwer academic publishers 
jameson aerodynamic design control theory 
technical report icase november 
taylor iii newman hou jones 
approximately factored incremental strategy calculating consistent discrete cfd sensitivity derivatives 
aiaa th symposium multidisciplinary analysis optimization september cleveland oh 
aerodynamic optimization simultaneously updating flow variables design parameters 
may 
obtaining cheap optimization gradients computational aerodynamics codes 
technical report ams tr boeing computer services june 
frank 
comparison closely related approaches aerodynamic design optimization 
editor proceedings third international conference inverse design concepts optimization engineering sciences iii october 
sobieski sensitivity complex internally coupled systems 
aiaa journal 
ta 
aerodynamic design optimization shot 
aiaa th aerospace sciences meeting reno nv january 
young jr structural optimization mach scale test validation low vibration rotor 
th annual forum american helicopter society phoenix arizona 
aiaa technical committee multidisciplinary design optimization mdo 
white current state art 
american institute aeronautics astronautics 
banks 
estimation techniques distributed parameter systems 
birkhauser 
bischof carle corliss griewank 
adifor generating derivative codes fortran programs 
technical report tr center research parallel computation december 
dennis li karen williamson 
optimization algorithms parameter identification 
technical report tr center research parallel computation january 
grose private communication 

kupfer sachs 
prospective look sqp methods semilinear parabolic control problems 
optimal control partial differential equations proceedings ifip wg international conference pages 

massively parallel aerodynamic shape optimization 
preprint 
haftka sobieski 
options interdisciplinary analysis design optimization 
structural optimization 
application alternative multidisciplinary optimization formulations new model problem static 
technical report boeing computer services august 
