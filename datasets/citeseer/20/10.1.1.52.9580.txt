efficient continuous time dynamic network flow algorithms fleischer tardos september extend discrete time dynamic flow algorithms literature solve analogous continuous time dynamic flow problems 
problems include finding maximum dynamic flows quickest flows universally maximum dynamic flows lexicographically maximum dynamic flows dynamic quickest networks capacities transit times edges 
keywords network flows dynamic network flows continuous time flows 
cornell university school operations research industrial engineering technical report tr email lisa columbia edu 
department industrial engineering operations research columbia university 
supported part onr fellowship american association university women educational foundation selected professions fellowship nsf pyi award eva tardos nsf dms 
computer science department school operations research industrial engineering cornell university 
research supported part nsf pyi award nsf dms onr 
ford fulkerson introduced maximal dynamic flow problem :10.1.1.11.1164
problem defined dynamic network fs tg set nodes set directed edges non negative integral capacity function transit times subset nodes called terminals source sink time horizon objective find dynamic flow sends flow possible source sink time time ford fulkerson model measured discrete steps unit flow leaves node time arc unit flow arrives node time ij ij transit time arc 
model allows storage node network 
research dynamic flow problems taken approaches 
approach models time discrete time steps 
approach models time continuously 
research type typically uses time expanded network explicitly algorithms implicitly proofs produce theoretically practically efficient algorithms 
research second approach considered networks time varying capacities costs focussed proving existence optimal solutions generalizing model 
try relate approaches extending polynomial time algorithms discrete time model produce optimal continuous dynamic flows 
time expanded network directed graph contains copy node dynamic network time step vertex set fj arc dynamic network contains arcs jk gamma jk time expanded network useful transit times implicit network problems solve traditional networks solve 
example maximum dynamic flow problem time graph maximum flow problem source sink 
unfortunately graph may large practical large discretizations 
algorithms problems discrete time model dynamic network directly 
ford fulkerson describe algorithm solve maximum dynamic flow problem minimum cost circulation computation :10.1.1.11.1164
wilkinson minieka describe simple exponential time algorithm solve universally maximum flow problem 
surveys aronson powell summarize progress 
hoppe tardos described polynomial time algorithms discrete dynamic network problems including approximate universally maximum dynamic flows lexicographically maximum flows dynamic transshipment :10.1.1.11.1164
research continuous network flows general networks 
anderson nash consider problem finding maximum flow network zero transit times capacities node storage vary time develop duality theory continuous network flows 
book anderson nash result continuous linear programs 
continuous dynamic flow problems networks time varying edge capacities storage capacities costs 
example see 
focus research extend class time varying functions optimal solutions exist 
general continuous flow problems appear hard solve implementations able handle problems nodes 
example largest problem addressed contains nodes arcs 
hajek provide polynomial time algorithm solve continuous dynamic network flow problem 
consider network zero transit times constant upper bounds flow rates infinite node storage construct provably polynomial time algorithm empty network excess supply minimum time 
generalizes result solve problem edge storage capacities piecewise constant functions time 
fleischer describes faster algorithm solve hajek problem presents algorithms related dynamic flow problems 
fleischer describes faster algorithm solve problem 
extend polynomial algorithms developed discrete time model continuous time model general zero transit time model specialized models discussed continuous flow literature 
assume transit times integral constant time 
edge capacities denoted upper bounds rates flow constant integral unit time 
ford fulkerson allow storage nodes 
optimal solutions algorithms storage 
solutions unaffected upper bounds storage capacities assume simplicity storage capacities infinite 
artifact discrete time model edge zero transit time positive capacity transmit positive quantity flow zero time 
counterintuitive corrected continuous time model 
section introduce notation vocabulary discussing dynamic flows 
sections prove continuous versions mentioned algorithms maximum dynamic flow quickest flow universally maximum flow lexicographically maximum flow dynamic transshipment quickest transshipment 
definitions notation static flow function arcs graph obeys capacity constraints flow conservation constraints ij ns 
static circulation static flow satisfy conservation constraints terminals 
residual network static flow subject capacities network capacities redefined residual capacities gamma discrete dynamic flow function assigns flow arc time step 
obey capacity constraints time steps 
allow storage nodes flow conservation constraints summed time prohibit deficit node ji gamma ji gamma ij tg nfs tg 
continuous dynamic flow function defines rate flow unit time entering arc moment time 
capacity constraints flow rate constraints flow conservation constraints discrete dynamic flow sum time replaced integral 
discrete time algorithms concept chain flows 
chain flow fl static flow value jflj path starts ends terminal set dynamic network 
length chain flow fl equals length sum transit times edges time horizon chain flow fl fl induces dynamic flow fl sending units flow time time gamma fl 
discrete setting flow value gamma fl continuous setting value gamma fl 
difference reflects deficiency discrete model continuous model captures expect flow time 
chain decomposition static flow set chain flows gamma ffl fl fl satisfies fl call gamma standard chain decomposition chain flows gamma edges direction 
gamma called non standard chain decomposition 
gamma standard chain decomposition feasible flow chain flows gamma length equal gamma induces feasible dynamic flow obtained summing dynamic flows induced chain flows 
called standard chain decomposable flow denoted gamma non standard chain decomposable flow 
non standard chain decomposition feasible flow network unit capacities 
transit times arc 
dynamic flow induced non standard chain decomposition time expanded graph edges carrying flow drawn 
dynamic flow snapshot sequence depicting flow network moment time 
notes feasibility continuity gamma non standard chain decomposition feasible flow care taken show dynamic flow induced chain flows gamma feasible 
flow conservation constraints easily checked 
problem capacity constraints 
suppose fl chain flow sends flow edge direction send flow 
order edge capacity constraints met chain flow fl uses edge sends flow opposite direction fl cancel fl chain flow fl arrives time chain flow fl arrive time 
similarly chain flow fl stops edge time fl continue sending flow time 
hoppe tardos introduce non standard chain decompositions show dynamic flows induced ones algorithms feasible :10.1.1.11.1164
feasible chain flow induced dynamic flows called chain decomposable flows 
feasible discrete dynamic flow transform feasible continuous dynamic flow defining flow rate arc time interval equal jf ij transformation nice property amount flow arriving arc unit interval time continuous flow equal amount flow arrives arc time step discrete flow 
transformations discrete dynamic flows continuous dynamic flows mentioned natural form 
prove natural transformations produce optimal continuous dynamic flows 
time horizon integral natural transformation chain decomposable flows feasible 
time horizon integral create continuous horizon flow naturally transforming discrete dt horizon chain decomposable flow continuous chain decomposable flow sending flow chain flow fl time gamma fl time dt gamma fl 
call change natural extension original discrete chain decomposable flow 
discrete chain decomposable flow feasible continuous chain decomposable flow results natural transformation flow feasible 
transit times integral chain flows integral length chain flows time bound dt time bound reducing time bound affect time chain flow starts edge 
reduce time chain flow uses edge 
dynamic flow induced chain flow shortened amount chain flow gap created flow cancelling flow 
new flow feasible 
dynamic flows discussed chain decomposable flows extensions discrete algorithms natural extensions flows 
just seen resulting flows feasible proofs restricted establishing optimality 
maximum dynamic flow problem ford fulkerson introduced maximal dynamic flow problem :10.1.1.11.1164
object send flow source sink time bound 
showed solve discrete time problem computing minimum cost flow problem related network 
continuous time version looking find flow rate maximize amount flow entering formulate maximum continuous dynamic flow problem 
maximize kt gamma kt gamma tk dt subject kj gamma kj gamma jk dt jk jk section show natural transformation gamma horizon maximum discrete dynamic flow yields horizon maximum continuous dynamic flow integral 
fact ford fulkerson algorithm find maximum dynamic flow real 
anderson nash introduce notion generalized cut show capacity generalized cut upper bound value feasible continuous dynamic flow transit times zero 
observed definition proof easily extended dynamic flows non zero transit times 
represent node time generalized cut network set valued function defined set cut points fff jv ff ff ff definition restrictive cut defined show continuous dynamic flow saturates cut 
capacity generalized cut sum edges amount flow cross edge points different sides cut 
formally jk ff gamma jk ff jk jk maxf ff gamma jk gamma ff gu jk theorem feasible continuous dynamic flow generalized cut value flow bounded capacity compute maximum discrete time dynamic flow time gamma ford fulkerson add infinite capacity arc sink source transit time gammat static minimum cost circulation computed network transit times costs 
jf source sink path transit time gamma maximum dynamic flow 
assume remainder section jf 
resulting flow original network decomposed chain flows fl fl static flow transformed dynamic flow value jf gamma jk jk jk sending flow possible path time step 
ford fulkerson show maximum discrete time dynamic flow exhibiting saturated cut time expanded graph 
ff distance source node residual graph saturated cut time expanded graph fj ff cut capacity jk maxf ff gamma jk gamma ff gu jk complementary slackness minimum cost flows states maxf ff gamma jk gamma ff jk gamma jk edge rewrite jk ff gamma ff jk gamma jk jk jk ff ff recall jf see cut capacity equal jf gamma jk jk jk theorem anderson continuous maximum dynamic flow time dynamic network value jf gamma jk jk jk minimum cost circulation network additional sink source arc cost gammat infinite capacity :10.1.1.11.1164
proof compute minimum cost circulation extended network described theorem decompose flow paths send flow possible path fl time time gamma fl 
value flow gamma fl jfl jd jf jfl equals jf gamma jk jk jk capacity generalized cut defined ff time argument holds real theorem proved 
quickest flow problem converse problem maximum dynamic flow problem quickest flow problem asks flow integral value completes minimal time 
discrete setting solved easily binary search time bound note model may possible send flow optimal time necessary supply 
theorem implies binary search may solve quickest continuous flow problem 
theorem dynamic network integral supply minimum time necessary solve may expressed rational number denominator bounded size minimum cut network 
proof note maximum continuous dynamic flow continuous function quickest discrete time flow value maximum continuous dynamic flow optimal time quickest continuous flow exactly equal supply 
fix maximum continuous flow value jxj jf gamma jk jk jk static flow supply quantity find jk jk jk jf assumption transit times integral known facts min cost flows integral 
optimal quickest continuous flow rational denominator bounded jf bounded minimum cut network 
universally maximum dynamic flows maximum dynamic flow time earliest arrival flow maximum dynamic flow time latest departure flow flow time horizon maximizes amount flow leaving source interval universally maximum dynamic flow earliest arrival latest departure flow 
flows exist discrete continuous time models 
wilkinson minieka give algorithms compute universally maximum discrete dynamic flow ford fulkerson shortest augmenting path algorithm 
section show maximum dynamic flow problem discrete time algorithm produce universally maximum continuous dynamic flow 
discussion wilkinson minieka algorithm follows presentation hoppe 
gamma set chain flows induced paths shortest augmenting paths algorithm gamma ffl gamma fl theorem gamma universally maximum continuous dynamic flow 
proof sum chain flows gamma minimum cost flow transformed minimum cost circulation adding arc sink source length gamma 
theorem value flow entering sink interval maximum flow earliest arrival flow 
gamma latest departure flow universally maximum flow consider dynamic flow induced chain flow fl gamma 
chain flow fl sends jfl units flow time unit time gamma fl 
time flow fl reaching sink fl 
implies time gamma flow fl sent source 
jfl units flow entering sink time jfl units flow leaving source time gamma 
summing chain flows gamma see departure schedule symmetric arrival schedule dynamic flow latest departure flow 
snapshot algorithm unfortunately algorithm wilkinson minieka polynomial time algorithm shortest augmenting paths algorithm exponential number paths 
hoppe tardos give polynomial time algorithms related problem 
snapshot algorithm computes value horizon universally maximum discrete dynamic flow specified edge specified time step denoted yz 
extend algorithm compute rate flow entering specified edge specified time interval gamma hoppe tardos observe discrete time model yz described subset set chain flows horizon universally maximum discrete dynamic flow algorithm sum flows subset describes minimum cost flow yz depends minimum cost flow specific chain decomposition 
give polynomial time algorithm compute minimum cost flow 
extend algorithm continuous setting note arcs original network integral lengths minimum cost circulation network return arc length gamma minimum cost circulation network return arc length gamma gamma ffl ffl 
rate flow determined universally maximum continuous dynamic flow algorithm discussed 
consider case integral 
integral transit times imply changes integral time intervals 
yz computed hoppe tardos algorithm interpreted continuous time model rate flow entering edge time interval form gamma 
integral change times form fr fr fractional part flow entering arc changes dynamic flow induced chain flow starts passing stops passing integral transit times imply happens times times fr 
flow rate constant interval form fr fr 
chain flows send flow arc interval fr interval fr flows distance bt gamma travel compute flow rate interval fr computing yz dt 
flows enter arc time fr distance bt gamma travel compute flow rate interval fr computing yz bt 
proves extension hoppe result 
theorem universally maximum continuous dynamic flow computed shortest augmenting paths algorithm 
rate flow entering edge yz time interval fr time interval fr constant computed log nu mcf time largest flow rate dynamic network 
approximate universally maximum dynamic flow hoppe tardos describe approximation algorithm returns discrete time flow value gamma ffl universally maximum discrete dynamic flow time interval tg 
algorithm combines capacity scaling shortest augmenting paths algorithm 
initial phase uses dynamic network capacities evenly divisible delta mimics shortest augmenting paths algorithm static flow value exceeds jej ffl point residual capacities rounded nearest number delta delta 
augmentation flow path added set chain flows gamma induce final dynamic flow 
successive phase uses residual network passed previous phase capacities evenly divisible delta multiple augments flow shortest paths static flow value new augmentations exceeds ffl adds augmenting chain flows gamma rounds residual capacities evenly divisible delta 
continues augmenting path length equal algorithm special property proof theorem 
consider change gamma increase 
notice chain flows leave gamma enter gamma length equal 
property shortest augmenting paths algorithm maintained 
theorem continuous transformation hoppe tardos gamma ffl approximate universally maximum discrete dynamic flow gamma ffl approximate universally maximum continuous dynamic flow 
proof natural transformation universally maximum discrete dynamic flow universally maximum continuous dynamic flow natural transformation approximate discrete dynamic flow yields continuous dynamic flow value gamma ffl universally maximum continuous dynamic flow time interval bt cg 
see flow gamma ffl universally maximum dynamic flow time interval consider cases integral real 
integral observed section flow rate constant interval respective values approximate optimal dynamic flows time note gamma ffl time values gamma ffl 
approximate optimal flows constant rates flow interval weighted average inequalities shows value approximate flow time ffi ffi gamma ffl optimal 
argue validity algorithm integral implies validity previous implies set chain flows optimal approximate flows time set chain flows corresponding dt horizon flows 
amount flow reaching sink time horizon flows amount flow reaching sink time dt horizon flows value approximate horizon flow time gamma ffl optimal 
lexicographically maximum dynamic flows lexicographically maximum dynamic flow feasible dynamic flow ordering terminals fs gamma time bound maximizes amount flow leaving terminal order 
set terminals may contain sources sinks maximizing amount flow leaving terminal equivalent minimizing amount flow entering terminal 
minieka megiddo noted objective equivalent simultaneously maximizing amount flow leaving high priority subset fs gamma integral natural transformation lexicographically maximum discrete dynamic flow time gamma lexicographically maximum continuous dynamic flow flow leaving high priority subset maximum continuous dynamic flow observation minieka megiddo theorem 
hoppe tardos describe algorithm computes lexicographically maximum dynamic flow discrete time setting minimum cost flows :10.1.1.11.1164
iteratively compute discrete dynamic flow maximizing amount flow leaving high priority subset terminals computing minimum cost circulation extended network 
circulation decomposed chain flows added set chain flows induce final dynamic flow 
extend algorithm produce continuous dynamic flow natural extension discrete flows induced chain flows 
argue resulting flow maximizes amount leaving high priority subset integral 
note algorithm return chain flows time horizons dt note rational number denominator bounded algorithm return chain flows time horizon network modified multiplying transit times dividing capacities dynamic flow modified network transformed dynamic flow original network reversing transformation vice versa value corresponding dynamic flows models 
dynamic flow induced case lexicographically maximum continuous dynamic flow true 
limits lexicographically maximum continuous dynamic flows rational time horizons see algorithm return lexicographically maximum continuous dynamic flow real 
dynamic transshipment problem dynamic transshipment problem dynamic network integral vector supplies terminals time bound objective find feasible dynamic flow zeroes supplies time hoppe tardos solve discrete time version problem reducing polynomial time lexicographically maximum dynamic flow problem :10.1.1.11.1164
reduction somewhat complicated relies oracle test feasibility 
goal section show valid continuous dynamic flows 
hajek describe algorithm computes quickest continuous dynamic transshipment special case transit times zero sink 
algorithm appear extend handle non zero transit times sink restricting number sources simpler general algorithms mentioned running time jv 
dynamic transshipment feasibility static transshipment problems ford fulkerson provide criterion feasibility supply vector feasible subset terminals maximum flow 
discrete dynamic transshipment problem observed corresponding relation 
fixed time subset terminals define value maximum discrete dynamic flow sent sources sinks gamma time compute maximum dynamic flow adding super source connected sources infinite capacity zero transit time arcs super sink similarly connected sinks gamma feasibility dynamic transshipment problem noted considering ford fulkerson criterion time expanded graph condition sufficient feasibility 
continuous model time expanded graph consider theorem shows analogous condition sufficient feasibility continuous dynamic transshipment problem 
maximum continuous dynamic flow function fixed theorem continuous dynamic transshipment problem feasible subset proof consider integral 
discussion section implies discrete time gamma 
second condition implies discrete time problem feasible time gamma transforming feasible discrete flow continuous flow implies continuous problem feasible time theorem rational number denominator bounded maximum size static flow network jf number consider network transit times time bound multiplied constant jf capacities divided argument applies 
number continuous nondecreasing function reduce closest number maintaining new problem feasible original problem 
theorem implies simple exhaustive search testing subsets prove feasibility find violated set 
hoppe tardos describe strongly polynomial time algorithm test feasibility relies submodular function minimization :10.1.1.11.1164
dynamic transshipment algorithm subset satisfying called tight subset 
terminals ordered fs gamma subset fs tight lexicographically maximum flow dynamic transshipment 
hoppe tardos noted fact motivate algorithm find dynamic transshipment :10.1.1.11.1164
successively add terminals network parameterized capacities transit times create chain nested tight subsets length equal number terminals find lexicographically maximum flow 
lexicographically maximum dynamic flow algorithm criteria feasibility hold continuous dynamic flows natural transformation discrete dynamic transshipment provide continuous dynamic transshipment integral 
rational number denominator solve dynamic transshipment problem network obtained multiplying transit times dividing capacities new capacities may integral integer multiples property sufficient ensure polynomial time run time hoppe tardos algorithm integrality capacities needed long maximum denominator capacities bounded 
feasible transshipment network transformed feasible transshipment original network multiplying dividing time interval flow sent bound size denominator irrational large denominator problem feasible time theorem implies reduce problem remains feasible 
quickest transshipment dynamic network supply vector quickest transshipment feasible dynamic transshipment satisfies supplies minimum time dynamic transshipment problem feasible long fixed continuous nondecreasing function minimum time tight 
theorem implies rational number bounded denominator dynamic transshipment algorithm solve quickest transshipment problem binary search minimal acknowledgments bruce hoppe sharing insights enthusiasm dynamic flows 
anonymous referee pointing 
anderson nash 
linear programming infinite dimensional spaces 
john wiley sons 
anderson nash 
class continuous network flow problems 
mathematics operations research 
anderson 
continuous time network simplex algorithm 
networks 
anderson 
optimisation flows networks time 
kelly editor probability statistics optimisation chapter pages 
john wiley sons 
aronson 
survey dynamic network flows 
annals operations research 
fleischer 
faster algorithms quickest transshipment problem zero transit times 
proceedings ninth annual acm siam symposium discrete algorithms pages 
submitted siam journal optimization 
fleischer 
universally maximum flow piecewise constant capacities 
technical report tr cornell university computational optimization research center 
ford fulkerson :10.1.1.11.1164
flows networks 
princeton university press 
gale 
transient flows networks 
michigan mathematical journal 
hajek 
optimal dynamic routing communication networks continuous traffic 
networks 
hoppe 
efficient dynamic network flow algorithms 
phd thesis cornell university june 
department computer science technical report tr 
hoppe tardos 
polynomial time algorithms evacuation problems 
proc 
th annual acm siam symp 
discrete algorithms pages 
hoppe tardos 
quickest transshipment problem 
proc 
th annual symp 
discrete algorithms pages 

personal communication 
megiddo 
optimal flows networks multiple sources sinks 
mathematical programming 
minieka 
maximal lexicographic dynamic network flows 
operations research 

minimum delay routing continuous time dynamic networks capacities 
networks 
orda rom 
continuous network flows 
operations research letters 

continuous time flows networks 
mathematics operations research november 

adaptive discretization method class continuous network programs 
networks 
powell 
stochastic dynamic networks routing 
ball magnanti monma nemhauser editors handbooks operations research management science networks 
elsevier science publishers 

algorithm class continuous linear programs 
siam control optimization november 

study general dynamic network programs arc time delays 
siam journal optimization 
wilkinson 
algorithm universal maximal dynamic flows network 
operations research 
zadeh 
bad network problem simplex method minimum cost flow algorithms 
mathematical programming 
