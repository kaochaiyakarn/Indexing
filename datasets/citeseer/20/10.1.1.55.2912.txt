optimal algorithm determining visibility polygon edge david avis toussaint computer applications areas graphics automated cartography image processing robotics notion visibility objects modeled polygons recurring theme 
concerned visibility simple polygon edges 
natural definitions visibility polygon edge 
computational problem considered 
sided simple polygon polygon visible specified edge 
optimal algorithm exhibited determining edge visibility definitions 
closes interesting characterization visibility open problems area 
index terms algorithms computational complexity computational geometry computer graphics hidden line problems image processing robotics simple polygon visibility 

notion visibility geometric objects appears applications hidden line problem graphics image processing surveillance control robots 
papers appeared concerning problem visibility polygonal region fixed point 
discussed termed jail house problem problem polygonal visibility edge 
convenient imagine guard robot portion boundary polygonal region 
natural ask circumstances entire region observed 
introduce natural definitions visibility edge polygon 
main result linear algorithm determining polygon visible definitions edge 
manuscript received march revised january 
supported 
authors school computer science mcgill university montreal canada 
ieee fig 

complete visibility 
strong visibility 
weak visibility 
fig 

definitions preliminary results denote simple planar polygon represented set points euclidean plane 
assume points clockwise order interior polygon lies right boundary polygon traversed 
say line segment lies inside interior line segment lies interior similarly simple polygon lies inside interior lies interior points said visible line segment joining lies inside discuss visibility fixed edge uv giving natural definitions visibility edge 
said completely visible edge uv uv visible 
said strongly visible edge uv exists uv visible 
said weakly visible edge uv exists uv depending visible 
definition appeared previously mathematics literature 
terminology edge uv set visibility characterizes minimal sets visibility 
additional types external visibility sets higher dimensions see 
definitions illustrated fig 
motivation definition consider placement guard edge uv job observe entire polygon completely visible uv guard positioned location uv 
strongly visible uv exists fixed location uv guard observe weak visibility necessary guard patrol section uv order observe entire polygon 
lee preparata linear algorithm determining kernel polygon 
algorithm testing strong complete visibility 
find kernel determine intersection edge uv 
algorithm appear useful determining weak visibility 
making simplification intuitively satisfying 
show polygon visible senses boundary visible corresponding sense 
fact follows easily definition cases complete strong visibility 
proposition weakly visible uv boundary weakly visible uv 
proof suppose boundary weakly visible uv 
point interior show visible point uv 
extend uy nearest point boundary similarly extend vy nearest point boundary assumption visible point uv visible point uv 
cases depending intersects illustrated fig 

case consider simple polygon 
may assume lie line segment line segment proposition immediate 
clear boundary intersect visibility lines 
similarly construction boundary intersect yv yu 
lies inside pentagon reflex vertex follows visible boundary point 
case suppose intersects inside follows possibly degenerate triangle lies inside done 
construction quadrilateral lies inside extend point edge uv 
yy lies inside visible uv 
point part proposition follows 
part follows trivially fact boundary contained assume convenience origin coordinate system edge uv lies positive axis 
shamos denote visibility polygon set points visible vertices exists chains vertices left chain lc right chain rc 
lc interior lies right vertices traversed rc interior polygon lies left 
vertex visible point say segment uv 
define right intercept point uv farthest right visible equivalently visible 
define left intercept point uv farthest left visible definitions illustrated fig 

note possibly degenerate triangle xr lies inside possible fact condition satisfied vertices completely visible uv demonstrate 
avoid boundary conditions define lemma st edge point visible entire edge st proof consider triangle 
hypothesis lemma boundary intersect open segments xs xt 
st edge follows lies inside lemma follows 
lemma completely visible uv vertices proof completely visible uv vertex visible proving part lemma 
hand suppose vertices point uv st edge visible lemma implies entire edge st visible boundary completely visible uv proving part lemma 
left right intercepts characterizing strong visibility 
lemma suppose vertices visible uv 
strongly visible uv proof strongly visible uv exists uv vertex visible pi pi intersection non empty 
hand suppose true point intersection 
remarks preceding proposition need show boundary point visible st edge visible lemma implies entire edge st visible entire boundary visible proving part lemma 
lemma completes characterization edge visibility 
lemma weakly visible uv vertex weakly visible uv 
proof necessity condition implied definitions 
sufficiency proposition need consider point boundary show visible point uv 
suppose lies edge st visible point uv visible point uv 
cases depending ss tt intersect inside cases illustrated fig 

ss intersect tt argument quadrilateral st lie inside visible uv 
case suppose ss intersects tt inside follows edges tq qs st qt lie triangles qt lie inside extend point uv 
follows yy lies inside visible uv 
pn pn uv lc rc fig 

fig 

fig 

propositions suggest algorithmic approach determining polygonal visibility 
vertex try compute right left intercepts 
vertex visible intercepts test strong complete visibility 
ideas formulated section 

algorithm edge polygon visibility seen section determine visibility edge uv knowledge right left intercepts visible vertex 
section show compute intercepts time 
step preprocessing step put polygon standard form 
step simplifies main algorithm yielding easier proof correctness 
consider polygon fig 
clear vertices region visible edge uv visible vertex furthermore right left intercepts vertices vertex observe visible uv sense boundary cross line uv right left case easily seen vertices region visible sorted angular order applies region vertex replacing vertex intersection left extension uv boundary similarly intersection right extension uv boundary define new polygon lc 
referring fig 

property vertices lie side line uv 
polygon property said standard form main algorithm designed polygons 
easy construct linear routine preprocess puts standard form vertex regions computes determines visible uv 
details routine omitted 
main algorithm consists scans vertices standard form 
scan traverse polygon clockwise orientation successfully computing right intercepts 
find vertex right intercept lie segment uv terminate visibility 
scan procedure uses stack keep track may considered internal convex hull vertices current vertex convex path may readily find right intercept finding vertex adjacent convex path extending line xx intersect line uv 
lies segment uv proceed vertex terminate visibility 
second scan counterclockwise orientation compute left intercepts simplifying assumption vertices numbered clockwise order edge uv question edge joining vertex vertex 
data structure required stack called stack hold elements 
points say rst right turn negative rst left turn positive 
points collinear zero 
algorithm 
procedure initialize stack stack top see contained convex path determined far rst left turn right turn terminate visibility rst right turn backtrack stack path convex top rst right turn top top stack top top stack top compute right intercept test lies uv compute intercept half line line uv uv terminate visibility store move vertex top top stack top go 
procedure similar 
correctness algorithm follows lemmas 
rc lc internal convex path fig 

fig 

lemma iteration terminates step visible uv 
proof terminates step rst left turn right turn 
situation illustrated fig 

suppose visible uv consider visibility line sw uv 
line enters closed polygonal region bounded rs rc 
immediate contradiction 
visibility line sw lies st sx lie uv 
uv jordan curve theorem sw leave region sw intersects rc contradicting fact visibility line 
visible uv proving lemma 
lemma iteration terminated step visible uv 
proof suppose terminates step uv suppose visible point uv 
line segment tw intersects internal convex path see fig 

left turn follows vertex lies inside polygon tw lc 
jordan curve theorem implies chain rc intersects line segment tw contradicting fact visible visible uv 
lemma terminate normally vertex right respectively right left intercepts proof consider vertex assume conditions lemma hold 
point interval show wt lies inside suppose chain rc crosses wt 
internal convex chain cross tw 
construction tr lies right tw convex chain cross tr contradiction rc cross tw 
similarly left chain lc cross tw tw lies inside hand consider point argument lemma tw crosses convex chain rc 
visible similarly ul tw intersects lc visible lemma terminate normally vertex left visible uv 
proof consider point uv 
lies right argument lemma tw intersects chain rc 
hand left tw intersects chain lc 
lie right left conditions lemma 
tw intersects arbitrary visible uv 
state algorithm determining edge polygon visibility 
procedure visibility call preprocess call call left terminate visibility left right terminate complete visibility left terminate strong visibility terminate weak visibility easily verified visibility runs time 
may state main result 
theorem procedure visibility determines time weakly strongly completely visible edge 
final point interest give characterization visibility edge 
recall lemma weakly visible uv vertex weakly visible uv 
theorem strongly visible uv pair vertices point uv visible 
proof vertices visible uv 
define 
visible point uv follows 
pair vertices visible point uv follows pair segments non empty intersection 
helly theorem theorem follows lemma 
uv 
optimal algorithm determining visibility polygon edge 
case polygon visible edge uv natural define weak visibility polygon uv set points visible point uv 
open problem natural extension develop linear algorithm find uv 
interesting open question determine minimal set edges visible 
known worst case guard may visit locations order observe sided polygon chv tal 
final general problem considered polygon exist edge polygon weakly visible 
corresponding problem strong complete visibility solved linear time kernel finding algorithm lee preparata 
motivations relates notion external visibility polygons toussaint 
algorithm may determine linear time polygon externally visible 

acknowledgment authors careful reading manuscript programming algorithm fortran 
indebted referees helpful suggestions including simplification proofs lemmas 
freeman algorithm dimensional hidden line problem ieee trans 
electron 
comput vol 
ec pp 

davis benedikt computational models space fields comput 
graphics image proc vol 
pp 

nilsson mobile automaton application artificial intelligence techniques proc 
ijcai pp 

shamos problems computational geometry carnegie mellon univ pittsburg pa revised 
lee preparata optimal algorithm finding kernel polygon ass 
comput 
mach vol 
pp 

minimal sets visibility proc 
amer 
math 
soc vol 
pp 

external visibility pac 
math vol 
pp 

convex sets 
new york mcgraw hill 
chv tal combinatorial theorem plane geometry combinatorial th 
vol 
pp 

toussaint hierarchy simple polygons published 
el avis linear algorithm determining visibility polygon point algorithms 
toussaint pattern recognition geometrical complexity proc 
th int conf 
pattern recog miami beach fl dec 

