lifestreams storage model personal data eric freeman david gelernter department computer science yale university new haven ct conventional software systems desktop metaphor ill equipped manage electronic information events typical computer user 
introduce new metaphor lifestreams dynamically organizing user personal workspace 
lifestreams uses simple organizational metaphor time ordered stream documents underlying storage system 
stream filters organize monitor summarize information user 
combined provide system subsumes separate desktop applications 
describes lifestreams model prototype system 
users right confused today operating systems aren suited users needs require separate applications file format translations invention pointless names construction organizational hierarchies quickly obsolete 
built ideas named files invention hierarchical directories brilliant new long obsolete 
consider example desktop metaphor attempts simplify common file operations presenting familiar language world documents files folders directories deletion 
metaphor successful point usually explain new user computer desktop real desktop unfortunate consequences model poor basis organizing information constrains choices creating new information systems 
developed lifestreams attempt better 
lifestreams proposed described new model system managing personal electronic information 
lifestreams uses time ordered stream storage model stream filters organize locate summarize monitor incoming information 
streams filters provide unified framework subsumes separate desktop applications accomplish handle personal communication scheduling search retrieval tasks 
prototype exists today realizes system defining features allowed experiment model key ideas 
developed system machine independent clientserver architecture open users continue partially supported assert 
state art messy desktop 
document types viewers editors accustomed 
article describe model current implementation context direction system headed 
ii 
idea lifestreams observations 
storage transparent 
naming file created choosing location unneeded overhead 
names required users feel inventing storage handled automatically system 
grab piece start writing demands name sheet find storage location 
online filenames pointless useless retrieval purposes 
storage locations effective long user remembers 

directories inadequate organizing device 
software faithful world place electronic documents appear 
conventional systems force users store new information fixed categories directories 
information organized needed created 
directories created demand documents belong reasonable 

archiving automatic 
data archiving area electronic systems fail miserably compared systems 
systems foremost archiving systems data archiving difficult conventional desktop systems 
users throw old data undertaking task archiving remembering get back 
software systems archiving retrieval convenient old information reused 

system provide sophisticated logic summarizing compressing appropriate animating large group related documents user wants concise overview 
matter documents fall category system capable summarizing lot single screen 
types documents pictures animations vehicles summaries 

computers reminding convenient 
reminding critical function computer systems current systems supply little support 
users forced location graphical desktops reminding cues add applications calendar managers 
argued mere coping strategy lack better method clearly improved operating systems helped 

personal data accessible compatibility automatic 
computers eventually independent data storage devices data stored maintained net 
users able access personal information worlds available platform unix machine mac pc home pda road set top box cable 
data accessible regardless viewing device 
observations point areas software systems don match flexibility systems 
suggest areas software systems better 
return observations goals describing lifestreams realizes 
current realizes fair bit goals 
goals central project 
iii 
model time ordered stream documents functions diary electronic life document create document people send stored 
tail stream contains documents past starting electronic birth certificate 
moving away tail stream contains documents papers progress new electronic mail documents pictures correspondence bills movies voice mail software stored 
moving stream contains documents need reminders calendar items lists 
section describe lifestreams terms basic operations new clone transfer find summarize 
process show lifestreams provides transparent storage organization directories demand ability create overviews 
examine underlying time storage model process show lifestreams accomplishes archiving reminding natural way 
document creation storage users create documents means new clone 
new creates new empty document adds stream 
clone takes existing document creates duplicate adds stream 
documents created indirectly transfers copy document streams 
creation transparent documents default added stream don names users want 
directories demand lifestreams organized fly find operation 
find prompts search query email haven responded faxes sent schwartz creates substream 
substreams virtual directories user view document collection 
view contains documents relevant search query 
substreams differ conventional directory systems placing documents fixed rigid directory structures create virtual groups documents stream 
documents aren stored substream temporary collection documents exist main stream 
substreams may overlap created destroyed fly affecting main stream substreams 
substreams dynamic 
allow persist collect new documents match search criteria arrive outside create 
result natural way monitoring information substream acts organizational device filter incoming information 
example substream created query find documents created people subsume mailbox automatically collect mail arrives 
overviews operation summarize takes substream compresses overview document 
content overview document depends type documents substream 
instance substream contains daily closing prices stocks mutual funds investment portfolio overview document may contain chart displaying historical performance securities net worth 
substream contains list tasks need complete overview document display prioritized list 
chronology storage model substreams organize documents bother underlying time ordering 
reasons time natural guide experience attribute comes closest universal skeleton key stored experience malone example suggests utility time organization early studies 
stream adds historical context document collection documents eventually read past set stone history stream preserves order method creation 
diary stream documents correspondence transactions 
historical context crucial organizational setting current systems little track documents created deleted 
portions stream past mirror information categorization user studies 
portion stream holds working documents typically new documents created incoming documents placed 
documents age newer documents added older documents user view archived process mean archiving conceptual sense users don worry old information cluttering desktops getting way point need archived information located find 
portion stream allows documents created 
creation natural method posting reminders scheduling information 
system allows users dial deposit document say meeting reminder 
date arrives reminder appears 
iv 
lifestreams interface research prototype consists client server architecture runs internet 
server workhorse lifestreams system handles streams storing stream documents substreams 
viewport client server provides user interface document collection 
believe look feel viewport interface differ radically range computing platforms set top boxes high workstations viewport support basic operations 
currently implemented client windows ascii newton pda 
windows viewport provides graphical interface implements full range functionalities ascii interface implements full range lifestreams mail interface newton version implements minimal method lack internal memory communications 
concentrate windows viewport information newton version 
windows viewport shown 
interface visual representation stream metaphor 
users slide mouse pointer document representations glance document scroll bar lower left hand corner roll back past 
color animation indicate important document features 
red border means unseen bold means writable open documents offset side indicate edited 
incoming documents slide left side newly created documents pop top push stream backwards document past 
user view edit document clicking fig 

unix viewport 
graphical representation 
rely external helper applications view edit documents speeds learning process significantly lifestreams users continue applications familiar emacs xv create view documents lifestreams organize communicate 
interface prominently displays primary system operations new clone xfer transfer find summarize useful secondary operations print freeze buttons menus 
new button creates new document adds stream 
clone button duplicates existing document places copy stream 
freeze button writable document read 
xfer prompts user mail addresses forwards document 
print copies selected document printer 
find supported text entry box allows user enter boolean search query results new substream created displayed 
menus select streams existing substreams create summaries initiate personal agents change clock 
streams menu allows user select list locally available streams 
shows substreams menu menu divided sections 
contains list operations performed substreams remove 
contains menu entry labeled focuses display entire documents 
section lists substreams 
note substreams created incremental fashion results nested set menus 
example nested menus created creating substream lifestreams david main stream creating substreams substream scenarios ben 
substream scott created easily implemented transferring documents printer stream stream agent forwards new document appropriate printer 
implementation uses conventional methods transferring documents printer 
fig 

selecting substream 
scenarios substream 
semantically incremental amounts boolean new query previous substream query 
shows list possible summary types substream 
choosing menu options creates substream summary new document containing summary placed stream 
personal agents menu lists number available agent types 
discuss personal agents passing section 
added user interface order automate common tasks see information 
fig 

summarize menu item 
lifestreams displays time upper right hand corner interface 
time display acts menu allows user set viewport time past calendar dialog box 
imagine cursor pointing position stream documents point head timestamp documents tail past timestamp 
time progresses cursor moves forward head slips past documents added visible part stream just new mail arrived 
fig 

altering time lifestreams 
effect setting time past reset time cursor temporarily fixed position designated user 
normally user interface displays documents past time cursor 
setting time cursor allows user see documents part stream 
creating document mode results document timestamp 
user finished reset selecting set time menu option time menu 
fig 

setting time 
lifestreams practice look examples lifestreams accommodate common computer tasks communication creating reminders managing scheduling tracking contacts managing personal name 
detailed description lifestreams fill attempt convey sense system handful examples 
sending receiving email automatic reminders email lifestreams different users accustomed 
send message user creates new document clicking new button composes message favorite editor 
message sent push xfer button 
similarly existing documents easily forwarded users documents cloned replied 
mail messages incoming outgoing intermixed documents stream user easily create mailbox documents created users users take step create substreams contain subset mailbox substream mail bob mail haven responded 
mentioned users dial depositing documents act reminders 
user send mail arrive 
dials writing message message transferred won appear recipients streams time arrives happen dial set creation date 
document stream data structure viewport won show 
ability send mail post reminders important meetings department talks appearing just intime requiring user switch application reminders effective included separate calendar scheduling utility program 
tracking contacts making phone call number contact managers market store electronic business cards date time contacts time spent tasks billing purposes 
research prototype currently supports electronic business card document type phone call record document noting date time phone contacts 
addition automated task creating phone call record personal agent 
personal agent automatically attached personal agent menu anytime want call choose personal agent menu 
agent spawned dialog box appears 
fig 

phone call agent 
fig 

phone record automatically filled agent 
user types name callee agent searches current stream business card name creates fills appropriate entries phone call record seen functionality similar personal assistant newton platform 
user lifestreams summarize operation summarize phone calls 
results report shown scott fertig tue aug edt port ppc ward tue aug edt tcl java discussion beth freeman tue aug edt insurance extended subsume functionality time manager process doing 
time managers generally track hours professional spends projects 
lifestreams easily accomplished creating marks starting time task just thrown stream 
billing period stream summarized resulting detailed billing statement contract 
personal online commerce quickly commonplace large number users track checking accounts savings investments budgets applications 
types records documents applications electronic checks deposits securities transactions reports conveniently stored generated lifestreams 
just begun explore lifestreams manage personal having implemented fictional stock quote service forwards daily closing prices fictional portfolio lifestreams business day 
documents simple ascii documents shown 
quote matic stock service tsa document lists stock mutual fund closing price giving user method calculating assets specific day 
user wants higher level view portfolio time 
summarize 
user selects substream containing stock quote documents selects summarize portfolio menu item 
compresses data single chart historical data having summarized portfolio documents substream 
result 
fig 

portfolio summary 
similar stock quote services exist internet 
just 
user easily migrate checking account lifestreams check written creates record stream 
checks electronic checks sent companies online presence transcribed written checks just people 
user employ personal agent help balance 
year runs tax summary financial information stream form shipped electronically irs 
lifestreams help budgeting tracking expenditures course capabilities available products worth pointing lifestreams contains person deals electronic life convenient searchable location 
interacting world web bookmarks previous examples information stored lifestreams 
lifestreams quite useful managing information outside system 
example research group difficult keep track web bookmarks inconvenient pass interesting bookmarks 
usually accomplished copying url web browser email message recipient copy email back browser add bookmark 
able solve problems lifestreams 
developed system similar warm lists daemon watches user bookmark file time new bookmark added bookmark added lifestreams new url document 
effect opening url document lifestreams web browser comes foreground attempts connect url 
way lifestreams create bookmark substream time making data bookmarks readily available searches stream 
passing urls trivial 
merely copy url document user stream step process url automatically included bookmarks substream 
vi 
status directions lifestreams running local computing environment collection sunos solaris aix workstations supporting local users 
plan expand number software matures 
initial implementation efforts focused providing proof concept lifestreams model 
feedback initial users judge experiment success users find system valuable don want give 
nature system proceeded fronts including user interface design system integration indexing retrieval agent technologies network access security performance issues 
goals system modest server support simultaneous users stream sizes order documents year documents average user 
writing making architecture changes allow lifestreams documents may limit current architecture 
considering design changes system scalable previous information retrieval database communities encouraging 
lifestreams incorporates ideas disciplines focuses personal storage centralized data collections 
lifestreams incorporates current information retrieval techniques 
efficiently implemented inverse index document collection maintained server 
seen real performance problems respect retrieval large indices internet believe retrieval scheme scale large document collections 
lifestreams common database systems 
substreams related views relational databases 
triggers related documents lifestreams lifestreams trigger occurs creation date document slides past 
connections lifestreams temporal databases temporal logic sequence database systems time logical sequences play crucial role system 
immediate gain potential database efficient handling large document collections 
currently client server keep core records entire document collection user views 
need borrow database technology large collections 
hci problems solve 
user look documents discern usable information doesn sense give users entire document collection 
reasonable approach cursors allow user view segments document collection load segments needed 
problem area involves multi user access 
current implementation provides single threaded server single point access 
server performance reasonable small number users clearly multi server multithreaded approach scalable architecture 
previous parallel computing explored areas done integration techniques basic information retrieval database functionality 
vii 
acknowledgments authors wish scott fertig michael franklin elisabeth freeman susanne comments suggestions drafts 
shneiderman suggests principle 
techniques need scale small databases information 
james allen 
maintaining knowledge temporal intervals 
communications acm 
deborah barreau bonnie nardi 
finding reminding file organization desktop 
sigchi bulletin 
sigchi july 
nicholas carriero david gelernter 
linda context 
communications acm april 
terry cook 
know data 
technology review 
mit january 
date 
database systems 
addison wesley 
scott fertig eric freeman david gelernter 
finding reminding reconsidered 
sigchi bulletin volume january 
eric freeman 
lifestreams newton 
pda developer july august 
eric freeman scott fertig 
lifestreams organizing electronic life 
aaai fall symposium ai applications knowledge navigation retrieval november 
cambridge ma 
david gelernter 
cyber road taken 
washington post april 
david gifford pierre jouvelot mark sheldon james toole 
semantic file systems 
th acm symposium operating systems principles october 
paul udi manber 
developing personal internet assistant 
ed media world conference educational multimedia hypermedia june 

psychology personal information management 
applied ergonomics march 
thomas malone 
people organize desks 
implications design office information systems 
acm transactions office systems january 
udi manber sun wu 
glimpse tool search entire file systems 
technical report department computer science arizona october 
nelson 
right way think software design 
art human computer interface design ed 
brenda laurel 
praveen miron livny raghu ramakrishnan 
sequence query processing 
acm sigmod conference data management 
ben shneiderman 
dynamic queries visual information seeking 
ieee software pages november 
richard snodgrass 
temporal databases status research directions 
sigmod record 
