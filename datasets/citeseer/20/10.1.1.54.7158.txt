proceedings eighteenth international conference distributed computing systems icdcs amsterdam netherlands may economics market distributed scheduling william walsh michael wellman peter wurman jeffrey mackie mason university michigan ann arbor mi usa wellman umich edu market mechanisms solve distributed scheduling problems allocating scheduled resources market prices 
model distributed scheduling discrete resource allocation problem demonstrate applicability economic analysis framework 
drawing results literature discuss existence equilibrium prices general classes scheduling problems quality equilibrium solutions 
auction protocols implementing solutions analyze computational economic properties 
solving scheduling problems distributed computing systems presents particular challenges attributable distributed nature computation 
consider instance problem scheduling network access programs representing various users internet 
environment system modules user programs represent independent entities users conflicting competing scheduling requirements may possess localized information relevant tasks 
recognize independence treat modules agents ascribing autonomy decide deploy resources control service interests 
model distributed scheduling method analyzed exhibits properties ffl self interested agents effective decisions local private information knowing private information strategies agents 
ffl method requires minimal communication overhead 
ffl solutions waste resources 
way agent better harming done 
solution improved way called pareto optimal 
settings appropriate adopt stronger optimality criteria judgment social value various agents 
straightforward distributed scheduling policies come served shortest job priority combinations thereof generally possess properties 
example schemes insensitive relative value substance task performed 
hand priority schemes beg question set priorities desirable results follow 
self interested agents free set priorities incentive contrary specify maximum priority interested 
citing limitations proposed distributed resource allocation problems solved market mechanisms approach called market oriented programming mop :10.1.1.31.779
mop define agent activities terms resources required produced reducing agent decision problem evaluating tradeoffs acquiring different resources 
tradeoffs represented terms market prices define common scale value various resources 
problem designers computational markets specify configuration resources traded formally designated goods market mechanism agent interactions determine prices 
assuming scheduling problem decentralized markets provide advantages ffl markets naturally distributed 
agents decisions bid prices relative valuations goods 
ffl communication limited exchange bids prices agents market mech anism 
particular settings shown price systems minimize dimensionality messages required determine pareto optimal allocations 
ffl agents back representations exchange offers mechanisms elicit information necessary achieve pareto system optima come tolerance optimal characterized situations 
course benefits automatically accrue result setting market environment 
prior applying market inspired mechanisms scheduling distributed computing problems produced promising empirical results 
understanding scope methods developing general design methodology computational markets requires analytical characterization properties 
mop adopted framework general equilibrium theory computational markets behave predictably conditions theory met 
applied approach discrete optimization problems conditions guaranteeing desirable outcomes satisfied surprisingly methods times break 
scheduling problems involve discrete indivisible resource units undertaken analyze directly behavior computational market mechanisms problems 
start defining general class discrete allocation problems characterizing distinctions particularly meaningful scheduling domain 
show results economic theory apply scheduling problem report extensions analysis 
section motivate concrete example simple factory scheduling problem 
section provide formal economic model general version problem section relate equilibrium optimality properties associated problem 
section briefly describe general framework auction protocols describe analyze protocols sections 
consider section 
factory scheduling economy consider factory unscheduled day shift 
hour time slots labeled respective times 
slots allocated production customer orders 
factory reserve price time time span day reserve price hr agent value length hr deadline agent value length hr deadline agent value length hr deadline agent value length hr deadline factory factory scheduling economy 
lines connecting agents time slots represent feasible allocation 
slot representing minimum price factory willing accept exchange time slot 
assume customer agent job wants completed 
agent job defined duration length deadline value expressed dollars agent places job 
agent willing spend value complete job 
agent acquire number slots length necessarily contiguous deadline 
agent gets value job completed deadline 
value solution sum values agents holding goods sum reserve price time slot sold plus value associated customer agent meets job deadline 
example agents shown 
sum lengths exceeds available factory time possible agents produce orders 
allocation depicted represents system optimum 
assignment prices goods define agent optimal choice set slots complete job minimum cost empty set job completed value 
reader verify prices shown agent locally optimal choice globally optimal allocation 
formal model scheduling economy define general discrete resource allocation problem terms elements interactive online demonstration ascending auction section applied example auction eecs umich edu demos factory html 
ffl set discrete goods ffl set agents representing seller null agent ffl prices hp pn assume agents quasilinear utility functions meaning valuations measured terms common convenience taken money 
directly compare utility different agents meaningfully treat sum measure global value 
agent gets utility holding set goods units money 
denote maximum surplus value achievable agent prices max gamma note prices agent may maximize surplus empty set 
solution mapping indicating agent gets 
jg denote set goods allocated agent 
denote set unallocated goods seller utility equal reserve value unallocated money receives allocated 
intuitively reserve value denotes value owner system allocating agent 
different time slots potentially different reserve values instance factory may higher reserve price evening hours cover overtime expenses 
global system value solution sum agent values achieved reserve value goods agents 
measure system value solution ex post conditional knowing agents valuations 
solution optimal solution higher value 
agents utility linear money total value obtained money constant ignored 
useful measure value solution ex ante respect expectation agent valuations 
sections auction protocols general resource allocation problem 
theoretical results examples focus particular subclasses scheduling problems agent job complete 
problems associate agent job length deadlines value set goods determined earliest deadline includes time slots convenience represent time slots integers starting 
call scheduling problem single unit 
problems violating constraint multiple unit 
agent single deadline call problem fixed deadline 
accrues greater value finishing job sooner call problem variable deadline 
equilibrium optimality scheduling economy definition solution equilibrium prices iff 
agents gamma 




intuitively definition states equilibrium agent gets allocation maximizes utility current prices 
equilibria exist generally unique 
consider example 
solution shown agent receiving goods equilibrium set prices suggested slots having price slots having price 
solution equilibrium respective prices combinations 
equilibrium solution value optimal 
demonstrated result 
theorem general discrete resource allocation problem exists equilibrium optimal solution 
proof 
provide proof exchange economy reserve prices 
extension account reserve values straightforward 
result confirms usual consequence competitive equilibrium gains trade name job length deadline value agent agent table problem equilibrium 
adapted demonstration price equilibria may exist fcc market radio spectrum 
possible result pareto optimal 
assume agent values expressible price units pareto optimality corresponds global optimality 
example agents described table reserve price zero 
optimal solution equilibrium prices equilibrium exists case 
equilibrium agent demand goods 
inequalities hold agent demand time slots requires 
example nonexistence equilibrium prices due complementarities agent preferences 
agent considers time slots complementary values iff 
complementarities arise single unit scheduling problem 
lemma single unit scheduling problem unique minimum equilibrium price vector 
proof 
exchange economy characterized quasilinear utilities single goods unique minimum equilibrium price vector 
scheduling problem subclass type economy 
theorem optimal solution single unit scheduling problem fixed variable deadline supported price equilibrium 
proof 
lemma single unit scheduling problem price equilibrium theorem supports optimal solution 
supports optimal solution shown optimal solutions supported 
theorems establish solution single unit scheduling problem optimal iff supported price equilibrium 
example demonstrates relaxing single unit restriction immediately leads possibility equilibrium exist 
addition single unit restriction theorem identify conditions guarantee existence equilibrium 
agents additive preferences goods equilibrium exists 
additive preferences sufficient condition gross substitutability price goes demand go turn guarantees existence equilibrium 
technical conditions existence equilibrium immediately expressible scheduling terms 
auction protocols term protocol refer mechanism agent bidding policies 
mechanisms consider generically called auctions 
mcafee mcmillan provide definition auction market institution explicit set rules determining resource allocation prices basis bids market participants 
definition includes known english price sealed bid auctions commonly sell art award procurement contracts respectively broad range mechanisms including fixed pricing dutch auction vickrey auction commodities markets ascending generalized vickrey auctions described sections respectively 
order place greater structure space mechanisms provide common interface agents define somewhat restricted general auction protocol 

agents send bids mechanism indicate willingness exchange goods 

auction may post price quotes provide summarized information system wide value goods 
steps may iterated particularly price quotes posted 

auction determines allocation notifies agents purchases price 
note preferences additive scheduling problem 
equilibrium exist agents additive preferences completing multiple jobs 
sequence may performed iterated number times 
auctions differentiated parameterized values including limited matching algorithm price determination algorithm event timing bid restrictions intermediate price revelation 
implemented michigan internet auctionbot online parameterized auction server operates research development platform creating experimenting economies 
auctionbot provides interfaces human software agents easily create bid auctions 
currently auctionbot supports classical auction types including mechanism ascending auction protocol described section 
order predict auction outcomes consider agents presumed bidding policies turn model beliefs preferences 
auctions able determine analytically particular bidding policy part bayesian nash equilibrium dominant strategy 
auctions rely experimentation rules thumb economic principles determine reasonable bidding policies 
analysis standard noncooperative perspective assumes agents directly coordinate bidding 
collusion issue fcc spectrum auctions anti collusion measures considered milgrom 
auction mechanisms discuss distributed sense agent calculates bid strategy local information 
ascending auction distributed allocations computed separately 
ascending auction define ascending auction protocol general discrete resource allocation problem 
separate auctions determine prices goods 
agents submit successively higher bids auctions auctions immediately report price quotes interested agents receiving bid 
bidding stops auction allocates respective highest bidder price agent bid retained seller bids 
bidding rules point time bid price auction denoted fi highest bid auction far 
auction received bids fi undefined 
auction ask price denoted ff fi ffl fixed ffl fi defined 
ask price ascending auction rejects bid ask price 
agents allowed withdraw bids 
agent may replace bid new bid current ask price 
rules guarantee prices decrease bidding process terminates 
agent bidding policies agent enters market bids ask prices set goods maximizes surplus current ask prices breaking ties arbitrarily 
agents continue bid agent may lose bids 
occurs bids ask price set goods maximizes surplus assuming pay goods currently winning 
single unit scheduling problem agent winning bid simply bids ask price single maximizes surplus ask prices 
provide positive surplus agent drops auction 
bidding strategy quite simple involving anticipation agents strategies 
problem anticipation unnecessary agent wish change bid observing agents 
called regret property means agent perspective bidding policy better response agents bids 
regret property hold ascending auction multi unit scheduling problem regardless bidding strategy 
general agent perform better example accurate prediction agents behavior 
absence basis prediction simple strategy proposed may reasonable 
analysis ascending auction denote price paid ascending auction rules auction closes fi defined possible ascending auction determine prices differ equilibrium multiple unit scheduling economy arbitrarily large amounts 
example bid increment ffl reserve prices zero 
agents described table 
equilibrium price sets ascending auction may find equilibrium 
agent bid ff agent bid prices 
reader name job length deadline value agent agent agent table multiple unit problem example 
name job length deadline value agent agent table multiple unit problem example 
verify equilibrium agent winning price greater 
multiple unit scheduling problem ascending auction produce allocations arbitrarily far optimal 
example agents shown table 
reserve prices bid increment ffl 
agent places bids bid 
agent bid 
bidding allocated agent allocated agent 
solution value optimal solution unallocated value 
easy see increasing amount ascending auction produce solution arbitrarily far optimal 
restrict agent requirement single time slice theorem equilibrium exists 
ascending auction protocol guaranteed reach equilibrium restriction 
consider economy 
example bid increment ffl 
reserve prices 
agents described table 
possible agent may bid 
ff 
agent bid 
bids bidding agent win agent win 
agent maximize surplus demanding final prices 
bidding rules prohibit equilibrium 
auction allow agent withdraw bid final allocation violates condition definition equilibrium 
name job length deadline value agent agent table single unit problem example 
hard see potential failure reach equilibrium demonstrated positive value ffl matter small 
multiple unit problem bound distance equilibrium price vector ffl min 
theorem variable deadline single unit scheduling problem final price determined ascending auction protocol differ unique minimum equilibrium prices ffl 
proof 
prove result ascending auction protocol exchange economy buyers want single item set available goods 
single unit scheduling problem agent wishes obtain single item result holds problem 
consider example 
solution shown value 
agent received agent received value solution optimal 
solution suboptimal bounded amount 
theorem ascending auction protocol ffl produces solution variable deadline single unit scheduling problem suboptimal ffl 
proof 
allocation reached ascending auction optimal allocation 
price ascending auction unique minimum equilibrium price recall lemma theorem established unique minimum price vector exists supports 
gamma theorem know ffl 
set goods allocated respectively 
get error subtract value final allocation optimal allocation 
gamma gamma 
nf 
gamma nf gamma single unit problem agent bids maximizes surplus 
solution allocation surplus surplus get ask price agent bid 
ascending auction stops gamma gamma ff gamma ffl rearranging facts nf nf 

gamma ffl gamma nf gamma ffl nf gamma nf 
ffl goods unallocated prices equal reserve prices 
nf gamma nf goods unallocated minimum equilibrium prices equal reserve prices nf 
nf 
nf 
rearranging nf 
gamma nf 
nf 
substituting gives gamma nf 
gamma nf nf gamma nf 
ffl nf 
ffl total error maximized ffl 
goods 
gives upper bound total error gamma ffl 
computation clearing price quotes trivial ascending auction 
communications costs dominate run time measured terms bids required 
bids increase fixed increment number iterations inversely proportional ffl 
choosing value ffl trade solution value communication efficiency 
shown simple bidding policy reasonable individual agents produces allocations desirable system properties problem 
results provide strong support simple policy multiple unit problem 
strategies jump bidding agent bids large increments sets goods signal willingness aggressively pursue set may provide potential advantages individuals system 
open question exists policy ascending auction complete protocol finds tolerance equilibrium exists 
generalized vickrey auction ascending auction performs single unit allocation problems 
section note single unit restriction sufficient condition existence price equilibrium 
equilibria exist multiple unit problem ascending auction may find shown example 
example demonstrates scheduling problems optimal value maximizing allocations price equilibrium 
generalized vickrey auction gva implement optimal allocations broad class scheduling problems multiple goods multiple units requirements contingencies externalities values agent depend allocations obtained agents 
gva price system 
computes payments agents allocations translate meaningful prices individual goods 
gva obtain optimality problems price equilibrium exist 
bidding rules gva gva direct revelation mechanism 
agents report utility functions bids points 
recall agent actual utility function 
agent announces alleged utility function 
indicate agent constrained truthful may auction knows reserve values receiving bids gva returns allocation vector positive negative payments agents 
allocation rules gva recall solution mapping value solution 
auction mechanism 
computes solution arg max 

computes payments agents gammaj gamma gammaj gammaj gammaj max 
gammaj component represents total reported value agents solution residual payment function agents reported valuations 
restrict attention function described 
bidding policy gva auction incentive compatible truthful revelation utility functions dominant bidding policy 
theorem gammaj independent agent reported preferences gva incentive compatible 
intuition proof generalizes vickrey original result 
agent receives gammaj gamma value allocation payment auction 
auction mechanism chooses solution maximize gammaj 
agent bids truthfully receives auction mechanism constant recall unaffected agent bid 
clearly agent better get auction maximize true value 
rational agent truthful bidding dominates strategies 
optimality analysis gva agents behave rationally gva incentive compatible bid truthfully 
gva computes optimal allocation bids bids truthful allocation system optimal 
gva solves problems multiple units problems price equilibrium 
example features example example agents truthfully report value functions auction mechanism finds optimal solution 
calculates gamma gamma 
agent receives total value gamma agent receives gamma 
bid increase payoffs agents bid truthfully 
condition requires rational agents choose participate auction 
agent pays agent pays mechanism net revenue 
limitations gva mechanism individually rational agent worse participating auction declined participate 
mechanism budget balanced net payment agents nonnegative 
generally optimality properties desire agents play equilibrium strategies mechanism 
scheduling problem obtain 
payment function transfers agent net value increment agents results participation auction 
agent effect may get time slices desire participation agents weakly worse 
nonpositive auction mechanism runs surplus 
theorem gva uses payment function gammaj gamma individual rationality constraint satisfied net monetary payments auction mechanism nonnegative 
problem statement assumes auction mechanism knows reserve values private information seller agents mechanism obtain desired properties 
myerson satterthwaite proved impossibility theorem bilateral exchange problems scheduling problems seller agents 
example bilateral exchange suppose buyer single unit job deadline value seller agent reserve value suppose gva induce truthful reporting give buyer require buyer pay pay seller 
mechanism individually rational produce optimal allocation auction run deficit gamma gva obtain individual rationality optimality auction deficit setting example 
alternatively gva obtain optimality budget balance setting sufficiently high irrational agents participate 
gva computation baseline computational efficiency note neapolitan show simple centralized greedy algorithm solves single unit fixed deadline scheduling problem optimally time theta lg 
gva mechanism solve multiple optimization problems process bids determine optimal allocation agent bid removed determine fixed deadline problem centralized algorithm optimization total runtime theta lg 
inducing preference revelation obtaining full optimality raises auction cost factor computational cost distributing problem straightforward implementation gva 
remove single unit restriction centralized algorithm solve scheduling problem optimally solve integer knapsack problem 
multiple unit scheduling problem np complete 
preceding argument distributing multiple unit problem gva contributes factor computation 
discussion auction mechanisms compute optimal near optimal solutions single unit distributed scheduling problem computationally efficient manner 
multiple unit problem significantly difficult entails sharper tradeoff solution quality computational efficiency degree mechanism distributed 
computation performed ascending auction trivial distributed goods 
problem viewed pseudo polynomial dynamic programming solves time polynomial sum agent values 
guarantee quality solutions produced mechanism problem 
gva solving multiple combinatorial problems finds optimal solution problem price equilibrium exist 
view important step developing broad framework markets solve distributed scheduling problems 
order move forward identify broader classes scheduling problems develop associated mechanisms effectively predict analyze behavior economy 
expect find single mechanism reaches equilibrium situations equilibria exist 
wish develop suite mechanisms collectively cover broad range problems 
want able choose mechanism problem know reach come close equilibrium exists perform acceptably respect equilibrium exist 
addition auctions described exploring complex mechanisms multiple stages activity rules 
exploring theoretical aspects market mechanisms support experimental complex real time network scheduling domains 
domains require elaborate models including multiple stage scheduling necessary instance data pass different network nodes 
process joining top economic approach bottom analysis network scheduling requirements 
acknowledgments fredrik ygge david pennock terence kelly anonymous reviewers constructive comments 
supported darpa information survivability program 
michigan internet auctionbot web site auction eecs umich edu 
albert baker 
metaphor reality case study agents bid actual costs schedule factory 
clearwater 
sushil john 
competitive equilibrium exchange economy 
journal economic theory 
scott clearwater editor 
market control paradigm distributed resource allocation 
world scientific 
david gale 
multi item auctions 
journal political economy 

allocation scarce resources 
experimental economics problem allocating airport slots 
press 
gul 
walrasian equilibrium complementarities 
technical report princeton university university michigan 
jordan 
competitive allocation process informationally efficient uniquely 
journal economic theory 
kelso crawford 
job matching coalition formation gross substitutes 
econometrica 
mas colell michael whinston jerry green 
microeconomic theory 
oxford university press new york 
mcafee john mcmillan 
auctions bidding 
journal economic literature 
mcafee john mcmillan 
analyzing auction 
journal economic perspectives 
paul milgrom 
auction theory practice simultaneous ascending auction 
technical report department economics stanford university 
tracy mullen michael wellman 
simple computational market network information services 
international conference multiagent systems pages san francisco ca 
roger myerson mark satterthwaite 
efficient mechanisms bilateral trading 
journal economic theory 
neapolitan 
foundations algorithms 
heath lexington ma 
shapley 
assignment game core 
international journal game theory 
michael stonebraker robert devine marcel witold litwin avi pfeffer adam sah carl staelin 
economic paradigm query processing data migration mariposa 
third international conference parallel distributed information systems las vegas nv 
hal varian jeffrey mackie mason 
generalized vickrey auctions 
technical report dept economics univ michigan june 
william vickrey 
counterspeculation auctions competitive sealed tenders 
journal finance 
carl waldspurger tad hogg bernardo huberman jeffrey kephart scott stornetta 
spawn distributed computational economy 
ieee transactions software engineering 
carl waldspurger william weihl 
lottery scheduling flexible proportional share resource management 
proceedings symposium operating system design implementation osdi pages 
william walsh michael wellman peter wurman jeffrey 
economics market distributed scheduling extended version 
www personal engin umich edu papers mb scheduling extended ps 
michael wellman :10.1.1.31.779
market oriented programming environment application distributed multicommodity flow problems 
journal artificial intelligence research 
michael wellman 
computational market model distributed configuration design 
ai 
peter wurman michael wellman william walsh 
michigan internet auctionbot configurable auction server human software agents 
second international conference autonomous agents 
