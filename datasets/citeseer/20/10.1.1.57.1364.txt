discrete geometric shapes matching interpolation approximation survey helmut alt institut fur informatik freie universitat berlin berlin germany leonidas guibas computer science department stanford university stanford ca usa december survey consider geometric techniques measure similarity distance shapes approximate shapes interpolate shapes 
shape modality plays key role disciplines ranging computer vision molecular biology 
focus algorithmic techniques computational geometry developed shape matching simplification morphing 
matching analysis geometric patterns shapes importance various application areas particular computer vision pattern recognition disciplines concerned form objects cartography molecular biology computer animation 
general situation objects want know resemble 
usually objects may undergo certain transformations translations rotations scalings order matched possible 
variants problem include partial matching resembles part data structures version object similar fixed preprocessed set objects character traffic sign recognition 
related problem simplification objects 
object find simple object resembling tolerance 
example smooth curve polygonal line edges possible 
discuss shape interpolation morphing problem interesting especially computer animation 
objective find shapes continuous transformation transforms natural intermediate shapes 
necessary formally define notions objects resemblance matching transformations 
objects usually finite sets points point patterns shapes dimensions polygons 
generalizations example polyhedral surfaces higher dimensions possible concentrated dimensions 
order measure resemblance various distance functions particular called hausdorff distance 
compact subsets dimensional space ir define sided hausdorff distance ffi max min jja gamma jj delta jj euclidean distance ir explicitly stated 
bidirectional hausdorff distance defined ffi max ffi ffi hausdorff distance simply assigns point set distance closest point takes maximum values 
performs reasonably practice may fail noise images 
variant intended robust section 
kind geometric transformations allowed match objects depends application 
simple kind certainly translations 
matching problem usually difficult allow rotations translations transformations called rigid motions euclidean transformations 
cases reflections included difficulty 
scaling means linear transformation stretches object certain factor origin represented matrix gamma delta dimensions 
call combinations translations scalings combinations euclidean transformations scalings similarities 
general kind transformations consider arbitrary affine transformations occur orthographic dimensional projections dimensional objects 
considerable research topics done computational geometry years 
chapter give survey results 
point pattern matching section variety geometric techniques matching points sets exactly approximately allowed transformation group 
discuss methods theoretical practical interest 
exact point pattern matching seemingly natural question finite sets ae ir points matched exactly say rigid motions congruent 
course assume input consists points grid problem numerically unstable 
studying assuming real ram model computation gives insight nature matching problems may help designing algorithms realistic cases 
dimensions exact point pattern matching easily reduced string matching shown algorithm invented independently authors example atkinson atk 

determine centroids arithmetic means sets respectively 

determine polar coordinates points origin 
sort lexicographically respect polar coordinates angle length second obtaining sequence oe oe 
sequence oe gamma oe mod compute way corresponding sequence set 
determine cyclic shift substring uu fast algorithm 
easy see congruent exactly algorithm gives positive answer 
running time log sorting step operations take linear time 
exact point pattern matching dimensions algorithm alt 
determine centroid project points unit sphere obtaining set points sphere 
label point sorted list distances points mapped 
compute convex hull ca 
addition labeling step attach point adjacency list vertices connected edge ca sorted clockwise order seen outside 
list contain distances adjacent points angles neighboring edges 

execute steps set 

hulls ca cb considered labelled planar graphs 
point sets congruent exactly graphs isomorphic 
isomorphism decided variant partition algorithm hopcroft see ahu section 
detailed analysis shows running time algorithm log 
similar techniques shown matching problem arbitrary dimension reduced problems dimension gamma 
consequently exact point pattern matching problem solved patterns points time log dimensions time gamma log arbitrary dimension 
alternative approach yielding bound dimension developed atkinson atk 
concerning transformations rigid motions cases obvious optimal algorithms exact point pattern matching arbitrary dimensions 
translations example suffices match points lexicographically smallest coordinate vectors check points match 
scaling pattern matched allowed determine diameters da db sets 
ratio da gives correct scaling factor easy reduction translations similarities rigid motions 
reflections easily incorporated trying match set set reflected arbitrary hyperplane example 
exact point pattern matching arbitrary affine transformations considered werman sw 
sets brought canonical form transforming second moment matrices unit matrices 
shown matched affine transformations exactly canonical forms matched rotations 
canonical forms computed linear time asymptotic time bounds matching linear transformations ones rigid motions described 
approximate point pattern matching realistic exact point pattern matching approximate point pattern matching 
finite sets points problem find transformation matching point neighborhood point hand point lie neighborhood transformed point clearly variants problem 
distinction number points matching mapping points set may matched point 
obviously case consider matching respect hausdorff distance 
matching alt give polynomial time algorithms variants finite point sets 
variants obtained characteristics ffl different types transformations allowed ffl solving decision problem matching 
optimization problem find minimal allowing matching 
ffl fixed mapping 
ffl different metrics concept generalized arkin arbitrary noise regions points 
demonstrate techniques example solving decision problem euclidean tolerance matching arbitrary rigid motions predetermined mapping point sets fa fb shown easy geometric argument exists valid matching points matched exactly boundaries neighborhoods points consider configuration tuples points mapping boundaries respectively general leaves degree freedom parametrized angle oe vector gamma horizontal line 
considering point possible values oe point trace algebraic curve cm degree fact see 
algebraic curve constant degree cm intersects boundary constant number times fact times 
intervals parameter oe image lies inside 
interval boundaries kind collected 
partition parameter space intervals oe interval points mapped neighborhoods points relationships represented edges bipartite graph sides nodes clearly decision problem positive solution exactly oe corresponding graph perfect matching 
checked finding graph subinterval constructing maximum matching 
traversing subintervals left right maximum matching updated perfect matching turns exists 
observe procedure carried times tuples detailed analysis shows total running time algorithm 
addition determining intersection points curves degree circles cause cm oe curve point moved boundaries 
nontrivial numerical problems 
simpler faster algorithms easier variants matching problem 
case translation efrat itai ei improve bounds geometric arguments speed bipartite graph matching involved fixed sets compute call optimum bottleneck matching time log 
arkin give numerous efficient algorithms assuming neighborhoods noise regions points disjoint 
example problem considered shown solvable log time assumption 
generalization rigid motions similarity transformations article 
schirra hs take alternative approach reduce complexity decision problem point pattern matching call approximate decision algorithms 
require algorithm give correct answer tolerance close optimal solution precisely lie outside interval opt gamma ff opt fi fixed ff fi 
way network flow algorithms reduce running time solving problem described 
beh considers approximate decision algorithms 
assuming addition neighborhoods disjoint obtains running time log 
best results case mapping predetermined due imai imai isi analyze lower envelope multivariate functions order find optimal solution 
point pattern matching respect hausdorff distance may different cardinalities fa fb hausdorff distance computed straightforwardly time nm 
efficient construct voronoi diagrams locate point vice versa order determine nearest neighbor set 
way running time reduced log see abb 
algorithms optimally matching translations arbitrary metrics dimensions voronoi diagrams huttenlocher kedem sharir 
idea algorithms follows voronoi surface set graph function min kx gamma ak assigns point distance nearest point clearly lower envelope kx gamma ak example dimension graph infinite cone dimensional space apex lies see 
voronoi surface graph piecewise composed cones projection boundaries pieces voronoi diagram translated vector distance nearest neighbor ffi min ka gamma min gamma gamma tk gammab graph ffi voronoi surface translated vector gammab 
directed hausdorff distance ffi function max ffi consequently upper envelope voronoi surfaces gamma gamma gamma hand consider ffi ffi gammat define upper envelopes interchanging roles replacing gammat 
hausdorff distance max graph composed piecewise conic segments 
searching min 
minimum determining local minima 
bounds number minima derived algorithms obtained matching dimensional finite point sets translations minimizing hausdorff distance 
dimensions running times nm log nm metric nm ff nm log metrics 
dimensions time nm obtained metric 
glance clear technique described earlier generalized translations arbitrary rigid motions 
done huttenlocher considering called dynamic voronoi diagrams 
assumed point set consisting rigid subsets points 
subsets may move continuous function time 
dynamic voronoi diagram subdivision dimensional space time cross section obtained fixing time equals voronoi diagram time authors investigate topological changes voronoi diagram undergo time passes gives upper bounds complexity dynamic voronoi diagram 
results applied matching rigid motion representing optimal solution min theta ffi theta ir translation vector theta rotation origin angle theta 
fixed theta situation described case translations 
directed optimal hausdorff distance determined finding minimum upper envelope voronoi surfaces ones theta gamma theta gamma minimum algorithm keeps track changing values theta considering dynamic voronoi diagram sets theta identified time parameter 
consequence optimal match point sets arbitrary rigid motions time log mn 
matching point patterns translations higher dimensions investigated chew 
decision problem case metric space feasible translations intersection unions unit boxes 
space maintained modification data structure orthogonal partition trees overmars yap oy 
gives algorithms decision problem solve optimization problem parametric search meg col 
particular metric algorithm running time gamma log obtained number points patterns 
dimensional point patterns metric matching takes time log 
methods described probably quite difficult implement numerically unstable due necessary computation intersection points algebraic surfaces 
simpler practically promising method goodrich gmo 
pattern background points respectively approximates optimal directed hausdorff distance min ffi constant factor 
ranges possible transformations translations arbitrary dimensions rigid motions dimensions 
approximation factors translations ir rigid motions ir running times considerably faster ones algorithms computing optimum exactly 
algorithm rigid motions ir essentially works follows 
fix pair diametrically opposing points 
match pair rigid motion possible pair points 
rigid motion determine distance image point nearest neighbor 
choose match maximum distances minimized 
higher dimensions nearest neighbor search done approximately data structure arya amn 
practical variations percentile hausdorff distance mentioned hausdorff distance probably natural function measuring distance sets points 
furthermore easily applied partial matching problems 
fact suppose sets large image model want know matches part case exactly allowable transformation way hausdorff distance ffi small 
fact matching algorithms respect hausdorff distance previously applied partial matching 
application property matching binary images huttenlocher discrete variant voronoi diagram approach matching translation respect hausdorff distance 
article modification hausdorff distance suggested case necessary match completely part points fact distance measure min min jja gamma min denotes th smallest largest value 
percentile definition allows overcome sensitivity hausdorff distance outliers important practice 
interesting authors show adapt conceptual geometric ideas earlier rasterized context obtain optimizations invented efficient practical algorithms partial hausdorff matching described 
alignment geometric hashing number techniques point pattern matching developed computer vision computational molecular biology 
computer vision point pattern matching problem arises context model recognition bai case interested knowing known object call model appears image scene denote 
model scene subjected feature extraction process details need concern 
outcome process represent collection geometric objects commonly points 
principle applies molecular biology applications typically molecular docking 
context trying decide pattern usually small molecule ligand fit cavity usually active site protein 
feature extraction process ligand active site modeled point sets 
dimensionalities point sets transformation group allowed matching application dependent 
computer vision biology context 
illustrate methods alignment geometric hashing example planar point sets cardinalities respectively 
example assume allowed transformation group matching group similarities euclidean transformations scalings 
interested way matches sense way percentile hausdorff distance looking transformations place points near points extension ideas case dimensions transformation groups general straightforward exception allowed transformations include dimension reducing projection 
alignment method hu points chosen define coordinate frame model 
think point origin second point unit axis 
choice fixes axis orthogonal coordinate system points represented real values 
note representation points invariant translations rotations scalings 
align points chosen points respectively 
reflection fixes proposed similarity mapping ignore reflection case follows 
order test goodness proposed transformation express points coordinates frame 
common coordinate system sets just check point see point nearby preselected error tolerance 
number points match verification step score particular transformation considering 
alignment method consists trying way align pairs points pairs points process discover transformations highest matching score 
assume points principle get matching verifying specific pair counterparts occlusions assumption practice usually need try pairs points correct match 
alignment exhaustive method worst case combinatorial complexity bad assuming linear verification cost log theoretically correct bound 
things get worse size frames need consider increases higher dimensions larger transformation groups 
vision context lot attention feature extraction process critical significant features alignment 
may want match model scenes conversely may looking presence set models scene sense try speed matching computation preprocessing 
leads idea geometric hashing lw lsw lsw 
describe geometric hashing context alignment problem models model frame points model calculate coordinates points frame 
novel aspect geometric hashing coordinates key hash global hash table 
record hash table entry model index frame pair entry came 
computation hash table completes preprocessing phase algorithm 
note hash table entry triplet model frame model point model multiple triplets may hash table entry case linked standard fashion 
recognition time choose frame pair scene compute coordinates points frame 
coordinates key hash global hash table vote model frame pair stored hash table entry 
lucky choose scene points correspond points instance model expect pair get votes process signaling presence scene indicating matching transformation involved 
general course expect lucky choosing time repeat voting experiment times 
worst case preprocessing model size costs recognition voting costs assume cost accessing hash table constant 
note appropriately rounding coordinates key hash table allow certain error tolerance matching points promising model frame pairs identified votes winner give proposed correspondence model scene points 
matching transformation calculated accurately squares fit lsw 
mentioned alignment problem ideas extend matching point sets transformation groups group affine maps 
noteworthy aspect vision case dimension reducing projection maps allowed matching 
problem harder projection map invertible point inverse image line 
handled geometric hashing having point frame chosen generate samples line possible matching points vote separately lw 
geometric hashing successfully identifying cad cam models scenes molecular docking problem lw lsw lsw 
performance practice tends better combinatorial worst case bounds indicate 
theoretical studies suggest randomization improve bounds alignment geometric hashing especially cases model scene point sets involved limited self similarity ir 
matching curves areas apart point patterns research done years resemblance complex patterns shapes dimensions 
objects usually assumed polygonal chains simple polygons representing boundary 
measure resemblance usually hausdorff distance articles concerned variants described section 
optimal matching line segment patterns section assume explicitly stated input algorithms consists sets line segments dimensions respectively 
aim find optimal match transformation minimizing hausdorff distance ffi 
identified sets points lying line segments metric underlying hausdorff distance notice straightforward nm algorithm computing hausdorff distance fixed finite point sets longer case sets line segments 
case convex polygons atallah ata gave linear time algorithm 
arbitrary sets line segments asymptotically optimal log algorithm alt abb 
algorithm fact hausdorff distance occur endpoints line segments intersection points line segments voronoi diagram vice versa 
furthermore voronoi edge happen extreme intersection points line segments set 
points determined line sweep algorithm 
abb observed matching problem translations rigid motions solved polynomial time 
results fact transformation degrees freedom rigid motions optimal position hausdorff distance essentially occur different places 
sophisticated techniques leading asymptotically faster probably practically quite complicated algorithms agarwal ast translations chew cgh arbitrary rigid motions 
articles start essentially idea 
solve decision problem exists transformation ffi 
consider way detail just technical details extended way hausdorff distance 
disk radius origin minkowski sum phi clearly union called ast rectangles width radius attached ends see 
set transformation way hausdorff distance ffi exactly ae consider case translations 
suppose translation vector satisfying inclusion 
ae particular ae line segment equivalent phi gammab denotes complement ir conversely translation moves exactly phi gammab set denote see way match exactly set nonempty 
shows construction sets circular arcs line segments bounding additionally curves translated vector altogether nm circular arcs line segments 
union cells arrangement defined curves 
decision problem translations solved sweep line algorithm 
sweeping arrangement algorithm computes depth cells number different cover cell 
clearly nonempty exactly cell depth gammab set shaded 
complexity arrangement mn sweep line algorithm solves decision problem translations mn log mn time see ast 
case rigid motions see cgh assume set rotated origin translated order match set orientation consider sets defined rotated angle origin 
likewise arrangement depends orientation 
depth cells determined described 
increasing algorithm keeps track changes occur arrangement depth newly appearing cells 
arrangement changes topologically orientations sets form phi phi gammab touch called double event see boundaries intersect point triple event see 
altogether events 
algorithm determines sorts preprocessing phase 
suitable data structure local changes arrangement due event processed constant time 
manner starting arrangements inspected cell depth positive answer decision problem 
altogether algorithm requires log mn time 
cases algorithms decision problem turned ones optimization problem parametric search see meg col parameter 
matching translation agarwal ast describe parallel algorithm computes arrangement determines depth cells considering dual graph finding eulerian path traverse cells systematically 
parallel algorithm direct parametric search 
altogether mn log mn algorithm finding optimal matching translations obtained 
optimal matching rigid motions chew cgh erew pram sorting algorithm events direct parametric search 
algorithm attempts compare events set critical parameters determined orientations arrangement changes double event triple event 
sorted 
binary search done critical parameters step involving decision algorithm described determine interval containing optimal 
altogether mn log mn algorithm obtained optimal matching rigid motions 
essentially ideas usage dynamic voronoi diagrams efficient algorithms point pattern matching obtained cgh mentioned section 
huttenlocher extend voronoi diagram approach described section sets line segments 
method leads complicated surfaces hausdorff distance respect metric considered 
underlying metric situation simpler mn ff mn algorithm obtained 
approximate matching seen previous sections algorithms finding optimal solution matching problem quite sophisticated techniques computational geometry probably complicated implement 
asymptotic running times polynomial high 
approach overcome problems approximation algorithms optimization problem 
algorithms necessarily find optimal solution distance constant factor optimum 
explicitly stated consider matching sets line segments respect hausdorff distance metric 
approximation algorithms context considered alt abb abb called points 
points assigned sets property transformed match optimally distance transformed bounded constant factor times hausdorff distance matching 
called quality point 
point easily case translations allowable transformations 
fact set assign point min min min min lowest coordinate coordinate point lower left corner smallest axes parallel rectangle enclosing observe optimal match translated image hausdorff distance ffi fi fi fix min gamma min fi fi fi ffi fi fi fiy min gamma min fi fi fi ffi see 
consequently distance image translation ffi 
point quality 
ffi ffi optimal match translations 
suppose finding optimal translation match just matches obtaining image obtained translation vector gamma ffi ffi 
consequently ffi ffi ffi ffi hausdorff distance match points factor worse optimal 
general matching respect point quality translations yields match factor worse optimal 
observe approximation algorithm linear running time points need determined 
faster simpler best known algorithm finding optimal match running time mn log mn ast 
points rigid motions easy find 
obviously translations 
seemingly obvious choices center gravity convex hull set center smallest enclosing circle 
shown alt abb arbitrary bounded set center gravity boundary convex hull point respect rigid motions 
upper bound quality point large fact 
aar better point 
fact imagine axes parallel wedge determining point translations circled set apex describes closed curve 
average point curve particular direction preferred candidate point rigid motions 
formalizing slightly simplifying idea obtain definition arbitrary bounded sets ha oe cos oe sin oe doe ha oe called support function assigns oe largest extent direction oe 
point called steiner point steiner point investigated field convex geometry gru functional analysis py 
results shown aar steiner point point translations rigid motions similarities arbitrary dimensions 
quality dimensions 
usually steiner point defined convex bodies extended arbitrary bounded sets steiner point convex hull 
case sets line segments obtain convex polygons steiner point easily computed 
fact weighted average vertices vertex weighted exterior angle divided 
furthermore yost py showed translations point quality better steiner point 
case translations usage point approximate matching obvious 
case rigid motions points matched translation optimal matching sought rotations common point 
easier general optimization problem matching points reduces number degrees freedom dimensions 
case similarities stretched factor da da db diameters respectively 
algorithm rigid motions applied 
aar shown points quality approximation algorithms obtained yielding solution factor optimal case rigid motions factor optimal case similarities 
running times approximate matching algorithms nm log nm log nm 
mentioned idea due schirra sch possible get approximation constant point matching respect translations rigid motions arbitrarily close 
fact suppose quality point means optimal match distance point mapped affi neighborhood order achieve approximation constant place sufficiently small grid point distance greater ffi nearest grid point 
placing place grid point proceed described 
point placed distance ffi optimal position approximation constant 
notice constant constantly grid points considered running time changes constant factor 
distance functions non point objects applications simplicity hausdorff distance disadvantage 
fact distance curves measured hausdorff distance may give wrong picture 
shows example curves small hausdorff distance resemblance 
curves small hausdorff distance ffi 
reason problem hausdorff distance concerned point sets course curves 
distance considering curves courses informally illustrated follows suppose man walking dog walking curve dog 
allowed control speed go backward 
shortest length leash possible 
formally distance measure curves dimensional space described follows ffi inf ff fi max jjf ff gamma fi jj ir parameterizations curves ff fi range continuous monotone increasing functions 
distance measure known name fr echet distance 
fr echet distance considerably difficult handle 
matching algorithms developed algorithm measuring fr echet distance polygonal chains alt ag ag 
polygonal chains consisting line segments respectively 
consider decision problem addition want decide ffi 
consider theta diagram shown indicates white area points jjp gamma 
horizontal direction diagram corresponds natural parameterization vertical square cell diagram corresponds pair edges easily computed intersection bounding square ellipse 
diagram 
follows definition ffi exactly monotone increasing curve lower left upper right corner diagram 
considerations lead algorithm running time mn decision problem 
cole variant parametric search col obtain algorithm running time mn log mn compute fr echet distance practice reasonable determine ffi bit bit binary search step algorithm decision problem applied 
arkin ach consider distance function shapes dimensions slope bounding curves 
fact shape starting point bounding curve chosen curve parametrized natural parameterization na parameterization arc length normalized parameter interval 
parameter angle theta counterclockwise tangent point na horizontal line assigned 
theta called turning function theta piecewise constant simple polygons see invariant translations normalization parameterization scaling 
rotation corresponds simply shift theta direction change origin shift direction 
pi theta turning function simple polygon 
distance measure shapes metric theta theta define ffi theta gamma theta ds distance measure invariant translations choice starting point min theta ir theta gamma theta thetaj ds shown metric algorithm computing simple polygons edges respectively 
shown minimum definition occur mn critical values considering partial derivatives respect theta shown fixed optimal theta easily computed 
altogether mn log mn algorithm obtained 
extension algorithm deal scaling cohen guibas cg 
drawback distance measure sensitivity noise especially non uniformly distributed noise works properly curves sufficiently smooth 
generalization distance distance measure invariant affine transformations huttenlocher kedem hk 
respect distance matching polygons vertices affine transformations possible time mn log mn 
different idea represent shapes areas boundaries 
context probably natural distance measure shapes area symmetric difference 
measure difficult handle hausdorff distance 
computational geometry considered alt connection special problem optimally approximating convex polygon axes parallel rectangle 
results symmetric difference obtained 
fact de berg consider matching algorithms maximizing area overlap convex polygons minimizing symmetric difference 
obtain algorithm running time log translations numbers vertices polygons 
addition shown just centers gravity matched translation yields position convex figures area overlap constant factor maximal 
lower bound upper bound obtained constant center gravity point respect maximizing overlap translations 
easily seen imply directly point respect area symmetric difference 
shown 
fact alt show centers gravity convex figures matched area symmetric difference times minimal 
demonstrated example bound tight 
center gravity point sets transformations rigid motions similarities arbitrary affine mappings 
shape simplification approximation manipulating shape representations advantageous reduce complexity representation possible staying geometrically close original data 
vast literature shape simplification approximation computational geometry various applied disciplines shape representation manipulation issues arise 
section possibly attempt survey approaches taken results obtained 
focus small subset results giving efficient algorithms shape simplification precise measures approximation involved 
dimensional results focus attention consider problem simplifying shape represented polygonal chain plane 
goal find polygonal chain smaller number links stays close original 
original chain defined vertices assume discussion open desired approximating chain defined vertices wm number variations problem possible depending exactly error distance measured need subset arbitrary points plane 
general solve problems finding min problem find minimizes combinatorial complexity priori bound ffl maximum allowed distance min ffl problem find minimizes distance ffl order illustrate ideas involved solving problems assume monotone chains words piecewise linear continuous functions 
chains natural measure distance called uniform chebychev metric defined max ja gamma max taken support axis consider case vertices arbitrary points need vertices imai iri ii ii hs gave optimal algorithms min problem context 
methods viewed extension linear time algorithm suri sur computing minimum link path points inside simple polygon polygon chain appropriately vertically allowed error ffl crucial concept weak visibility edge inside simple polygon 
similar ideas aggarwal booth rourke suri yap abo give log algorithm finding convex polygon smallest number sides nested convex polygons total complexity min ffl variant chain simplification problem gave log algorithm cleverly limiting critical values ffl set size certain kind binary search 
goodrich goo number new geometric insights reduce set critical ffl values obtained log algorithm applications pipelined parametric searching techniques 
survey results constrained monotone see eu toussaint related hershberger snoeyink hs guibas hershberger mitchell snoeyink 
general algorithms min problem linear complexity min ffl quadratic complexity 
consider problem variant vertices subset vertices require monotone revert hausdorff distance function 
oldest popular algorithms problem heuristic douglas peucker dp line simplification algorithm geographical information systems community hershberger snoeyink showed implement algorithm run log time hs 
formal approach problem initiated papers imai iri cited 
min variant imai iri reduce problem graph theoretic problem follows 
line segment joining vertices called shortcut subchain shortcut allowed error induces prescribed error ffl error shortcut defined maximum distance point easy see hausdorff distance subchain goal replace chain consisting allowed shortcuts 
consider directed acyclic graph nodes vertices edges pairs shortcut allowed 
shortest terms number edges path corresponds minimum vertex simplification path time linear size topological sorting clr 
size computed obvious method time 
constructing bottleneck computation 
rourke mo showed reduce construction time log chan chin cc reduced optimal 
chan chin algorithm starts observation error shortcut maximum errors half lines starting going call ij starting going call ji 
compute graph intersect graphs contains edge error ij ffl contains edge error ji ffl 
show compute time computation entirely symmetric reversing number vertices examine vertices sequence process vertex calculate turn errors determined half lines ij takes values denote closed disk radius ffl centered error ij ffl ij intersects disks algorithm works maintaining cone half lines intersect disks intersection corresponding cones disks separately 
process suffices update cone constant time computation 
cone stays non empty done half lines error large 
computation desired shortest path done time 
illustrates situation disks cone intermediate point 
methods imai iri graph construction inherently quadratic ffl large graph omega gamma allowed shortcuts 
varadarajan var able graph clique compression techniques proposed feder motwani fm obtain ffi algorithm min problem case monotone chains 
varadarajan gave randomized complex deterministic algorithm min ffl version problem time bound 
general non monotone case chain simplification problems quite possible may self intersecting simple 
clearly undesirable application contexts 
worse simplifying chains case boundaries regions say geographical map 
case important topological structure regions maintained simplification simplifications disjoint chains allowed crossing computation allowed shortcuts starting 
guibas hershberger mitchell snoeyink showed min problem np hard case positions approximating vertices arbitrary 
vertices approximating chain subset original chain monotone setting de berg van kreveld schirra gave log algorithm min problem chain vertices resulting approximating chain guaranteed simple side points algorithm local subroutine give method polygonal subdivision simplification guaranteed avoid topological inconsistencies need globally optimal 
dimensions unfortunately situation equally happy dimensions 
nearly natural extensions problems np hard extant date focussed approximation algorithms 
analog monotone chain polyhedral terrain just continuous bivariate possibly non total function happens piecewise linear 
complexity terrain measured total number vertices edges faces 
numbers linearly related euler relation number faces measure complexity terrain 
plethora techniques literature simplifying polyhedral terrains effectively deleting vertices lie relatively flat neighborhoods hole created 
unfortunately proved methods 
fact agarwal suri shown simpler problem deciding approximability vertical tolerance ffl collection isolated points polyhedral terrain faces np hard 
similarly surprisingly das joseph dj showed finding convex polytope facets nested convex polytopes total facets np hard settling old question posed klee 
results sight researchers turned effort approximation algorithms 
mitchell suri ms formalized nested convex polytope problem set cover problem considering regions defined outer polytope tangent planes inner polytope 
showed greedy method set covering computes nested polytope log facets complexity optimal nested polytope 
approach works approximation convex surface points sampled convex surface 
algorithms run time 
results extended clarkson cla gave randomized algorithm expected time complexity ffi computing nested polytope size log 
goodrich bg improved set cover algorithm ideas obtain deterministic algorithm computes nested polytope constant factor optimal 
set cover formulation unfortunately terrain approximation problem independently select faces approximating surface 
agarwal suri cited formulate terrain fitting problem geometric partitioning problem project points approximated xy plane seek disjoint collection triangles xy plane cover points triangle satisfies certain legality constraint points covers 
constraint formulated linear program triangle lifted ffl approximates points contains 
agarwal suri gave approximation algorithm solves problem produces covering set legitimate triangles size log minimum number triangles possible 
unfortunately algorithm high complexity 
shape interpolation shape interpolation commonly known morphing topic active research interest computer graphics computer animation entertainment solid reconstruction image compression 
general problem continuously transforming geometric shape way apparent salient similarities shapes smoothes dissimilarities 
relevant graphics papers kr sg 
morphing transformation may thought place time domain animation space domain surface reconstruction planar sections 
area extensive literature computational geometric techniques results ww bs problem solvable gos 
general numerous ways interpolate shapes little said criteria comparing quality different morphs notions optimality 
class allowable desirable morphing transforms vaguely specified result problem ends constrained 
section survey small amount area relates computational geometry 
shapes wish morph 
specify shapes described ambient space 
morphing algorithms operate paradigm firstly relevant features identified matched pairwise secondly smooth motions planned bring alignment pairs corresponding features thirdly morphing transformation generated respecting global constraints shapes interpolants satisfy 
paradigm works class shapes morphed consists fairly similar objects 
cases want able morph great variety different shapes process commonly subdivided series stages 
shapes canonicalized mapping canonical forms respectively canonical forms standardized easier morph 
transformation done going description clear numerous connections problems shape matching shape interpolation matching techniques discussed applicable morphing problem especially feature matching stage 
obvious equally true morphing techniques shape comparison problems 
certain sense optimum morph transformation distorts little possible order look morphing algorithm assign notion cost distortions algorithm needs perform 
minimum required morph serve measure distance shape shape note distance function morphing clearly satisfies triangle inequality 
matters concrete discuss simple examples open simple polygonal chain vertices open simple polygonal chain vertices problem considered sederberg greenwood sg 
paradigm need establish correspondence features polygonal chains natural notion vertices choices sense applications 
different general mapping 
duplicate vertices added 
represent possible ways pair vertices vertices sequence considering monotone paths theta grid 
example shown shows particular matching chain vertices chain vertices 
diagonal move monotone path corresponds advancing horizontal move corresponds advancing duplicating corresponding vertex choose optimum correspondence selecting path minimal cost appropriate sense 
example may want minimize sum distances corresponding pairs vertices 
sederberg greenwood developed physics measure energy required stretch bend correspondence 
optimal measures computed classical dynamic programming techniques clr time mn 
similar ideas example matching polygonal chain vertices fit polyhedral polygonal slices parallel planes bs 
correspondence move corresponding vertices linear interpolation 
implicitly time defines interpolating polygonal chain construction morph polygonal chains complete 
note order extend method closed polygonal chains decide appropriate origin chain trivial matter 
shows successful unsuccessful examples method depending origin chosen 
note particular interpolating chain self intersect 
sederberg proposed simple method polygon interpolation interpolating side lengths angles vertex correspondence established challenge get polygons close 
preserving structural properties morph simplicity chain example difficult problem 
guibas hershberger gh consider morph parallel polygons maintaining simplicity 
setting simple polygons plane sides correspondence sides corresponding sides parallel 
goal continuously deform times interpolating polygon corresponding sides parallel stays simple 
case examples polygonal chain morphs case bad case statement problem provides correspondence features polygons 
polygons look quite different existence morph remains parallel simple obvious see morph polygons happen simulating way recording tape move reel 
parallel polygons morphable guibas hershberger showed possible gave algorithm uses ffl primitive operations called parallel moves improved log hershberger suri hs 
parallel move translation side polygon parallel appropriate modifications polygon endpoints edge 
guibas hershberger showed parallel moves take polygon fractal canonical reduced form portions polygon boundary shrunk micro structures widely different scales 
polygon canonical form corresponds roughly speaking binary tree leaf weights angles original polygon 
canonical form corresponding trees morphed series standard tree rotation transformations certain validity conditions hold process 
tree rotations realized geometrically parallel moves polygons 
fractal structure canonical form helps arguing translations required implement particular rotations interfere parts polygon 
clearly guibas hershberger morph solves limited problem canonical form introduces unnecessarily large distortions interpolating shapes 
different polygon morphing techniques developed sr star skeleton representation polygon decomposition polygon star shaped pieces 
methods better preserving metric properties polygons unfortunately preserve global constraints simplicity plus expensive requiring time 
idea morphing polygons compatible triangulations result aronov seidel ass 
showed compatibly triangulated adding steiner points compatibility means triangulations combinatorially equivalent 
conformal mappings suggested 
look dimensions 
case extensively studied morphing convex polytopes 
convex polyhedra natural way construct matching surfaces match points polyhedra admit outwards normal 
general match points face vertex vice versa matching points certain pairs edges place origin arbitrary point space compute vector sums corresponding pairs points resulting set points form boundary convex polytope called minkowski sum denoted phi lat lyu 
armed concept morph constructing mixed volume gamma phi tq varies range 
type morph exploited rossignac kr rk 
technique works course dimensions higher 
nice way visualize morph think convex polygons placed parallel planes 
constructs convex hull union adding sleeve wrapping sections sleeve plane moving parallel containing containing gives morph 
kinetic framework grs allows extension type morph general polygons plane 
regular subdivisions plane alpha shapes em viewed projections convex polytopes dimension higher method gives possibilities morphing subdivisions alpha shapes 
approaches morphing shapes gla ede 
aar alt rote 
matching shapes point 
proc 
th annu 
acm sympos 
comput 
geom pages 
abb alt 
approximate matching polygonal shapes 
proc 
th annu 
acm sympos 
comput 
geom pages 
abb alt 
approximate matching polygonal shapes 
ann 
math 
artif 
intell 
alt 
approximation convex polygons 
proc 
th internat 
colloq 
automata lang 
program volume lecture notes computer science pages 
springer verlag 
abo aggarwal booth rourke suri yap 
finding minimal convex nested polygons 
inform 
comput october 
ach arkin chew huttenlocher kedem mitchell 
efficiently computable metric comparing polygonal shapes 
ieee trans 
pattern anal 
mach 
intell 
alt fuchs rote weber 
matching convex shapes respect symmetric difference 
proc 
th annual european symp 
algorithms esa springer lecture notes computer science volume pages 
ag alt 
measuring resemblance polygonal curves 
proc 
th annu 
acm sympos 
comput 
geom pages 
ag alt 
computing fr echet distance polygonal curves 
international journal computational geometry applications 
ahu aho hopcroft ullman 
design analysis computer algorithms 
addison wesley reading ma 
arkin kedem mitchell werman 
matching points pairwise disjoint noise regions combinatorial bounds algorithms 
orsa comput 
amn arya mount netanyahu silverman wu 
optimal algorithm approximate nearest neighbor searching 
proc 
th acm siam sympos 
discrete algorithms pages 
alt mehlhorn welzl 
congruence similarity symmetries geometric objects 
discrete comput 
geom 
pankaj agarwal subhash suri 
surface approximation geometric partitions 
proc 
th acm siam sympos 
discrete algorithms pages 
ass aronov seidel 
compatible triangulations simple polygons 
comput 
geom 
theory appl 
ast pankaj agarwal sharir toledo 
applications parametric searching geometric optimization 
algorithms 
avis toussaint 
optimal algorithm determining visibility polygon edge 
ieee trans 
comput 
ata atallah 
linear time algorithm hausdorff distance convex polygons 
inform 
process 
lett 
atk atkinson 
optimal algorithm geometrical congruence 
algorithms 
bai baird 
model image matching location 
distinguished dissertation series 
mit press 
beh 
algorithmen zur der von und 
thesis freie univ berlin institute computer science 
bg goodrich 
optimal set covers finite vc dimension 
proc 
th annu 
acm sympos 
comput 
geom pages 
bs barequet sharir 
piecewise linear interpolation polygonal slices 
proc 
th annu 
acm sympos 
comput 
geom pages 
cc chan chin 
approximation polygonal curves minimum number line segments 
proc 
rd annu 
internat 
sympos 
algorithms comput 
isaac volume lecture notes computer science pages 
springerverlag 
chew dor efrat kedem 
geometric pattern matching dimensional space 
proc 
nd annu 
european sympos 
algorithms volume 
lecture notes computer science page appear 
springer verlag 
cg cohen guibas 
partial matching planar polylines similarity transformations 
proc 
th acm siam sympos 
discrete algorithms page appear 
cgh chew goodrich huttenlocher kedem kleinberg kravets 
geometric pattern matching euclidean motion 
proc 
th canad 
conf 
comput 
geom pages waterloo canada 
cla kenneth clarkson 
algorithms polytope covering approximation 
proc 
rd workshop algorithms data struct volume lecture notes computer science pages 
clr cormen leiserson rivest 
algorithms 
mit press cambridge mass 
col cole 
slowing sorting networks obtain faster sorting algorithms 
proc 
th annu 
ieee sympos 

comput 
sci pages 
col cole 
slowing sorting networks obtain faster sorting algorithms 
acm 
de berg devillers van kreveld schwarzkopf 
computing maximum overlap convex polygons translations 
technical report dept comp 
science univ utrecht 
de berg van kreveld schirra 
new approach subdivision simplification 
proc 
auto pages 
dj das joseph 
complexity minimum convex nested polyhedra 
proc 
nd canad 
conf 
comput 
geom pages 
dp david douglas thomas peucker 
algorithms reduction number points required represent digitized line caricature 
canadian december 
ede edelsbrunner 
combinatorial approach 
proc 
th annu 
acm sympos 
comput 
geom pages 
eric grimson 
object recognition computer role geometric constraints 
mit press 
ei alon efrat alon itai 
improvements bottleneck matching related problems geometry 
proc 
th annu 
acm sympos 
comput 
geom pages 
em edelsbrunner 
dimensional alpha shapes 
acm trans 
graph january 
eu toussaint 
approximating polygonal curves dimensions 
comput 
vision graphics image processing 
fuchs kedem 
optimal surface reconstruction planar contours 
commun 
acm 
fm feder motwani 
clique partitions graph compression speeding algorithms 
proc 
rd acm symp 
theory computing pages 
gh guibas hershberger 
morphing simple polygons 
proc 
th annu 
acm sympos 
comput 
geom pages 
guibas hershberger mitchell snoeyink 
approximating polygons subdivisions minimum link paths 
internat 
comput 
geom 
appl december 
gla glassner 
metamorphosis polyhedra 
manuscript 

gmo goodrich mitchell 
practical methods approximate geometric pattern matching rigid motion 
proc 
th annu 
acm sympos 
comput 
geom pages 
goo goodrich 
efficient piecewise linear function approximation uniform metric 
proc 
th annu 
acm sympos 
comput 
geom pages 
gos rourke subramanian 
reconstructing polyhedra parallel slices 
internat 
comput 
geom 
appl 
grs guibas ramshaw stolfi 
kinetic framework computational geometry 
proc 
th annu 
ieee sympos 

comput 
sci pages 
gru 
convex polytopes 
wiley new york ny 
hk huttenlocher kedem 
computing minimum hausdorff distance point sets translation 
proc 
th annu 
acm sympos 
comput 
geom pages 
huttenlocher kedem kleinberg 
dynamic voronoi diagrams minimum hausdorff distance point sets euclidean motion plane 
proc 
th annu 
acm sympos 
comput 
geom pages 
huttenlocher rucklidge 
comparing images hausdorff distance 
ieee trans 
pattern analysis machine intelligence 
huttenlocher kedem sharir 
upper envelope voronoi surfaces applications 
discrete comput 
geom 
hs 
fitting polygonal functions set points plane 
cvgip graph 
models image process 
hs schirra 
approximate decision algorithms point set congruence 
proc 
th annu 
acm sympos 
comput 
geom pages 
hs hershberger snoeyink 
speeding douglas peucker line simplification algorithm 
proc 
th intl 
symp 
spatial data handling 
commission gis pages 
hs hershberger snoeyink 
computing minimum length paths homotopy class 
comput 
geom 
theory appl 
hs john hershberger subhash suri 
morphing binary trees 
proc 
th acm siam sympos 
discrete algorithms pages 
hu huttenlocher ullman 
recognizing solid objects alignment image 
intern 
computer vision 
ii imai iri 
computational geometric methods polygonal approximations curve 
comput 
vision graph 
image process 
ii imai iri 
polygonal approximations curve formulations algorithms 
toussaint editor computational morphology pages 
north holland amsterdam netherlands 
ir irani raghavan 
combinatorial experimental results randomized point matching algorithms 
appear 
isi imai imai 
minimax geometric fitting corresponding sets points 
proc 
th annu 
acm sympos 
comput 
geom pages 
kent carlson parent 
shape transformation polyhedral objects 
computer graphics siggraph proceedings volume pages 
kr rossignac 
solid interpolating deformations construction animation pips 
proc 
eurographics pages 
lat 
latombe 
robot motion planning 
kluwer academic publishers boston 
lsw lamdan schwartz wolfson 
object recognition affine invariant matching 
proceedings computer vision pattern recognition pages 
lsw lamdan schwartz wolfson 
recognition objects images 
proceedings ieee international conference robotics automation pages 
lw lamdan wolfson 
geometric hashing general efficient model recognition scheme 
second international conference computer vision pages 
lyu 
convex figures polyhedra 
heath boston ma 
meg megiddo 
applying parallel computation algorithms design serial algorithms 
acm 
mo rourke 
polygonal chain approximation 
toussaint editor computational morphology pages 
north holland amsterdam netherlands 
ms mitchell suri 
separation approximation polyhedral surfaces 
proc 
rd acm siam sympos 
discrete algorithms pages 
fischer wolfson 
molecular surface recognition computer vision technique 
protein engineering 
lin wolfson 
shape protein protein interfaces 
biopolymers 
oy overmars 
yap 
new upper bounds klee measure problem 
siam comput 
py yost 
continuity properties selectors michael theorem 
michigan math 

rk rossignac 
metamorphosis curve space polyhedra 
eurographics proceedings volume pages 
sch schirra 
uber die der 
thesis univ des saarlandes computer science department 
sg sederberg greenwood 
physically approach shape blending 
computer graphics siggraph proceedings volume pages 
sederberg gao wang mu 
shape blending intrinsic solution vertex path problem 
computer graphics siggraph proceedings volume pages 
shephard 
steiner point convex polytope 
canadian math 
sr 
shape blending skeleton representation 
ieee computer graphics appl 
sur suri 
linear time algorithm minimum link paths inside simple polygon 
comput 
vision graph 
image process 
sw werman 
affine point matching 
pattern recogn 
lett 
var varadarajan 
approximating monotone polygonal curves metric 
proc 
th acm symp 
computational geometry page appear 
ww emo welzl barbara 
surface reconstruction simple polygons angle criteria 
st annual european symposium algorithms esa volume lecture notes computer science pages 
springer verlag 
