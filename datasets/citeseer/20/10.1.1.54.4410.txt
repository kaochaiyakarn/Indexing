interpretation type theory locally cartesian closed categories martin hofmann department computer science university edinburgh kb mayfield rd edinburgh eh jz scotland 
show construct model dependent type theory category attributes locally cartesian closed category 
allows define semantic function interpreting syntax type theory 
sketch application gives rise interpretation extensional type theory intensional type theory 
motivation interpreting dependent type theory locally cartesian closed categories generally non split models ones described intricate problem 
reason order interpret terms associated substitution pairing sigma types application pi types needs semantical equivalent syntactic substitution 
clarify issue look naive approach described seely seminal contains subtle inaccuracy 
assume dependently typed calculus defined category finite limits right adjoints pullback functor order interpret dependent product types 
idea interpret contexts objects types context gamma morphisms codomain interpretation gamma terms sections right inverses interpretation types 
empty context gets interpreted terminal object context gamma oe gets interpreted domain interpretation gamma oe type 
sigma type sigma oe context gamma gets interpreted composition ffi interpretation oe interpretation context gamma oe 
typechecks codomain interpretation gamma oe domain interpretation oe 
problem appears try interpret pairing 
assume gamma oe term type oe gamma term type replaced want interpret pairing gamma sigma oe interpretations 
morphism section section interpretation priori interpretation seely argues substitution author supported european union hcm fellowship contract number interpreted pullback interpretation pullback interpret pair composition ffi upper arrow pullback 
subtle flaw idea interpretation fixed clauses interpretation reason equal chosen pullback curien addresses problem making substitution syntactic operator may interpreted chosen pullback 
changes calculus results quite complicated interpretation function explained type equality modelled isomorphism actual semantic equality 
hand interpretation type theory relatively straightforward model equipped semantic substitution operation commutes composition semantic type term formers 
case show syntactic semantic substitution agree 
technique interpreting type theory model worked streicher great detail 
see pitts forthcoming survey article 
unfortunately impossible endow arbitrary pullback operation satisfy coherence requirements 
example natural choice pullbacks category sets 
set theoretic functions canonical choice pullback ffi set iterated pullback gives set equal 
open exists choice pullbacks category sets commute composition type formers 
propose solution type merely interpreted morphism family morphisms indexed possible substitutions 
abstractly describe construction turns arbitrary equivalent category attributes cwa split notion model introduced cartmell see interpretation function readily available 
method general procedure due see prop 
turns arbitrary fibration equivalent split fibration 
contribution consists observation cwa obtained merely split substitution operation closed type formers original supported 
particular resulting cwa pi types sigma types extensional identity types 
phoa considered open problem 
locally cartesian closed categories play role running example arguments immediately carry general notions model studied jacobs authors 
elementary level method computes additional information inductive definition interpretation allows identify interpretation substituted type pullback interpretation albeit previously chosen 
section define categories attributes sketch standard interpretation function 
section contains main result construction cwa 
section give extension universes handle general case 
arising semantics type theory particular sets sets toposes known natural equivalent cwa 
case toposes see ex 

section give example case provide application main result 
section offers concluding remarks sketches alternative construction equivalent split fibration due power extend pi sigma types 
familiarity basic category theory dependent type theory assumed 
introductory material may categories dependent type theory 
subjects described 
categories attributes category attributes cwa data category terminal object 
unique morphism object gamma written gamma functor fam op sets morphism part written fam oe abbr oe 
elementarily means fam gamma set gamma ob oe fam gamma gamma oe fam gamma coherence conditions oe id gamma oe oe ffi oe satisfied 
operation gamma oe fam gamma associates morphism oe codomain gamma canonical projection oe 
domain oe written gamma delta oe 
operation gamma gamma morphism gamma oe fam gamma associates morphism oe delta oe gamma delta oe delta oe oe gamma delta oe oe gamma oe diagrams typeset paul taylor diagram macros 
pullback coherence conditions id gamma oe id gamma deltaoe ffi oe oe ffi oe satisfied 
example 
important example cwa gives intuition meaning various ingredients term model dependent type theory constructed follows 
category objects formed contexts variable declarations equivalence classes parallel substitutions tuples terms appropriate types morphisms 
gamma context fam gamma set types formed gamma gamma substitution oe parallel substitution terms oe 
morphism oe consists gamma variables gamma oe oe substitution variable oe 
examples arise families sets sets 
provided suitable interpretations base types type constructors partial interpretation function defined structural induction way context interpreted object type interpreted element fam interpretation context terms interpreted sections right inverses canonical projections associated types 
right inverse oe slight abuse language say section oe 
pullback requirement oe allows define semantic equivalent substitution terms section oe fam gamma gamma unique section oe written satisfies oe ffi ffi interpretation sound sense interpretation derivable judgements defined equality judgements validated actual equality model 
auxiliary property interpretation syntactic substitution interpreted semantic counterpart gamma 
means cwa closed type directly read syntactic rules 
example closure sigma types means families oe fam gamma fam gamma delta oe family sigma oe fam gamma sections oe section sigma oe pairing section sigma oe section oe section projections optionally gamma sigma oe sigma oe oe similar coherence laws pairing projections 
see details 
categories attributes aim section construct category attributes supporting pi sigma types extensional identity types locally cartesian closed category 
preliminaries 
category finite limits terminal object pullbacks gamma ob 
slice category gamma objects morphisms codomain gamma gamma morphism dom gamma dom gamma morphism ff dom dom ffi ff notice important triviality morphism ff codomain dom gamma morphism codomain domain ffi ff 
morphism gamma functor gamma sending dom gamma left vertical arrow pullback action morphisms defined universal property pullback 
functor right adjoint sigma sends dom composition ffi arrow category objects morphisms commuting squares morphisms 
equivalently morphism dom dom gamma morphism gamma morphism ff domain morphism extends functor dom categories finite limits loosely correspond dependent type theories views morphisms families types morphisms denoting projection disjoint union fibres indexing type 
example sets type matrices indexed set theta modelled function format mat theta maps matrix format pair natural numbers indicating numbers rows columns 
substitution corresponds isomorphism pullback composition disjoint union 
example obtain set square matrices indexed pullback format diagonal function theta similarly set matrices variable number columns indexed number rows composition format projection theta model extensional identity types 
order dependent product types needs right adjoints pullback functors leads definition 
definition 
locally cartesian closed category category finite limits right adjoints pi pullback functor gamma gamma examples categories sets sets toposes term model extensional martin lof type theory constructed 
rest section assume fixed order derive interpretation dependent type theory construct cwa base category follows 
gamma ob set fam gamma defined set functors oe slice category gamma arrow category map morphism pullback square cod ffi oe dom precisely oe fam gamma associates morphism gamma morphism oe codomain ff morphism oe ff dom oe ffi ff oe ff dom oe oe ffi ff ff oe pullback 
assignment morphism oe ff functorial sense oe id id dom oe oe ff ffi fi oe ff ffi oe ffi ff fi fi element defined set fam gamma called functorial family gamma example 
intuition families making substitution viz 
pullback arbitrarily chosen structure family comes equipped behaviour substitution 
oe view requested substitution oe result performing substitution 
necessarily split choice pullbacks see morphism oe codomain gamma induces family oe gamma gamma put oe oe pullback functor defined 
addition ff define oe ff unique mediating morphism gamma gamma gamma gamma gamma sff oe ff oe gamma oe lower right outer square pullbacks 
follows simple diagram chase resulting lower left pullback required 
oe ff defined universal property functorial 
continue definition cwa functorial families 
oe fam gamma canonical projection oe defined oe id gamma 
gamma deltaoe dom oe id gamma 
addition gamma define substitution oe oe oe ffi oe ff oe ffi ff ff substitution defined composition functor laws fam immediate 
morphism oe oe id gamma yields required pullback square 
coherence law gamma gamma follows functoriality oe 
notice definition canonical projection section family oe merely right inverse oe id 
terms carry intensional information respect substitution 
see section 
constructed cwa shown equivalent suitable categorical sense 
shall content noticing hat construction canonical projection establish equivalence category fam gamma morphism oe map ffi oe slice category gamma gamma ob 
theorem 
category attributes constructed admits sigma types pi types extensional identity types 
proof 
give full proof sigma types conveys idea sketch interpretation pi types identity types 
oe fam gamma fam gamma delta oe 
family sigma oe defined sigma oe oe ffi oe sigma oe ff oe oe ff 
obtain value sigma oe substitution gamma perform substitution inside oe yielding oe yielding oe calculate sum resulting morphisms usual composition 
dom sigma oe sff oe oe ff dom sigma oe oe ff oe oe gamma delta oe oe ff oe gamma oe fact sigma oe ff oe oe ff forms pullback ff vertical arrows follows vertical composition pullback squares pullback 
functoriality follows functoriality oe coherence laws gamma gamma 
check defined sigma type stable substitution 
gamma sigma oe sigma oe fs oe fs ffi fs oe oe ffi oe ffi oe oe ffi oe oe sigma oe oe required 
morphism part calculate similarly 
pairing projection combinators defined usual section oe right inverse oe id gamma section right inverse id gamma define pairing ffi section sigma oe simple equality reasoning 
hand section sigma oe ffi section unique section ffi determined universal property pullback 
definition equational reasoning uniqueness second projection 
remains show operations stable substitution 
calculation pairing cases may verified similarly deduced case pairing equations 
definition pairing gamma aim show participating sections defined uniquely equations sigma oe ffi ffi oe ffi ffi ffi ffi view unique characterisation stability follows show sigma oe ffi ffi left hand side equals oe ffi oe ffi expanding definitions sigma pairing 
turn equals oe ffi ffi coherence law gamma gamma 
defining equation applying coherence law direction arrive ffi ffi defining equation definition arrive right hand side 
type constructors pi identity type defined similar fashion 
families oe value family pi oe substitution gamma pi oe oe 
leave messy essentially forced definitions morphism part associated combinators reader 
oe fam gamma sections oe define identity type eq oe chosen equaliser unique section oe oe ffi ffi compatibility substitution associated combinators requires lengthy calculation case pi basically amount beck chevalley condition 
worth pointing certain choice pullbacks albeit split required interpret identity types basic source type dependency 
similar way show cwa families supports lists natural numbers category supports coherent way 
carrying laborious examples attempt clarify ideas bit elaborating conditions necessary order associated category attributes interpret admittedly contrived type governed rules gamma oe type gamma oe type form gamma oe gamma intro oe intro associated congruence rules 
general interpreted operation morphism oe codomain gamma associates morphism oe codomain gamma pullback square pullback square oe gamma oe 
hf oe gamma oe functorial sense hid id hf ffi hf ffi hg action pullback squares way stating compatible chosen pullback isomorphism admits functorial action isomorphisms course necessarily arbitrary morphisms 
section oe need section intro oe way pullback situation hf ffi intro intro ffi unique section oe ffi ffi coherence condition reasonably expect 
define operator families putting oe oe oe ff hoe ff oe fam gamma gamma ff functoriality follows functoriality oe gammai 
operation intro defined stability substitution follows directly coherence condition instantiating pullback square delta oe dom oe oe oe id gamma gamma delta oe dom oe id gamma oe oe gamma oe oe id gamma example shows described method carries type constructors lists natural numbers provided coherent way 
see type need necessarily universal construction case pi sigma types 
lesson learned type admits functorial action pullback squares compatible associated structure may lifted cwa families 
interpretation family model general interpretation function categories attributes gives rise semantic function mapping contexts objects types families context gamma oe type gamma oe id gamma object slice category gamma may view intended interpretation oe intended semantics compositional example interpretation pairing substitutions identity 
reader familiar theory functional programming may notice similarity continuation passing style translation semantics inductively defined respect arbitrary continuation interested instance identity continuation 
universes construction described types get interpreted functions associating substitutions morphisms 
terms get interpreted simply sections carry intensional information behaviour substitution forced universal property pullbacks associated families 
implies construction carry universes mix terms types universe split place 
means exemplified definition specialising notion model calculus constructions 
definition 
split morphism gen omega operation morphisms gamma omega associates morphism gamma omega gen pi gen isomorphic gamma pullback square gamma morphism omega ffi ffi 
requirement weakened isomorphism gamma morphisms associated gamma gen stricter condition imposed means operator stable substitution equality 
prominent examples category sets omega category sets omega equal set partial equivalence relations split 
split interpret calculus constructions theorem 
split exists equivalent cwa structure interpret calculus constructions 
proof 
define means cwa pi types model calculus constructions 
need family prop family prf delta prop way morphisms gamma delta prop equal prf prf 
oe family gamma gamma delta oe delta prop morphism oe gamma delta prop prf oe pi oe prf 
stay closer syntax expense clarity 
split 
construct cwa base follows 
set families gamma defined disjoint union set functorial families defined section homset gamma omega 
call elements gamma omega propositional families gamma 
operations substitution canonical projection extended propositional families defining oe gamma omega gamma oe oe ffi oe oe gen oe defined universal property ex 
follows straightforward calculation cwa 
propositional family oe gamma omega induces functorial family oe defined applying ex 
oe gen may extend sigma types possible type formers pi types propositional families 
functorial family prop defined prop omega may identify delta prop omega propositional family prf delta prop defined identity omega notice gamma delta prop prf equals prf gamma injective required 
definition pi type pi oe replace oe oe oe propositional 
assume oe functorial 
proceed case distinction functorial propositional 
case pi type functorial families defined section 
propositional gamma delta oe delta prop define pi oe propositional family oe 
abstraction application defined suitably isomorphism gen pi gen assumed definition split 
lengthy straightforward calculation follows satisfies properties dependent products 
particular see pi stable substitution instantiate coherence property pullback square formed oe oe oe gamma operator defined exactly way fact propositional families morphisms delta prop coincide 
ex 
hat construction canonical projection define equivalence constructed cwa 
deserves attention coherence requirement imposed operation crucial definition pi types case distinction methods described generalize arbitrary generally support universes non split way 
application category setoids mentioned equivalent cwa known 
interesting example motivated construction construction described viable way 
consider syntax intensional martin lof type theory natural numbers described 
write gamma oe true mean exists term gamma oe 
write theta special cases sigma pi resp 
category setoids types equivalence relations formed follows 
object quintuple set rel hold 
set closed type 
ii set rel type 
iii set rel 
iv set rel rel 
set rel rel rel 
proofs rel equivalence relation set confusion arise subscripts set rel may omitted 
morphism term set set set gamma rel rel true morphisms identified set rel true easy check equality morphisms equivalence relation morphisms closed composition contain identity category defined 
essentially construction described category defined categorically syntactically starts place 
mimicking argument obtain proposition 
proposition 
category setoids locally cartesian closed contains natural numbers object 
proof 
give required objects leaving verifications reader 
pullback defined object set sigma sigma rel gamma gamma theta 
pullback projections send gamma respectively 
define pi set sigma sigmau piy sigma resp rel gamma gamma theta piy pip pip resp piy pip pip morphism pi projection natural numbers object underlying type type natural numbers intensional identity type id relation 
unfortunately proof shows existence pullbacks pi canonical choice arises constructions proof independent particular representatives chosen involved morphisms 
order endow category setoids chosen structure axiom choice unavoidable 
choice method described obtain interpretation extensional type theory category setoids certain sense intensional type theory 
category setoids worthwhile object study 
particular appears equivalence relations provides model extensional quotient types studied mendler 
believe full subcategory category setoids consisting objects taken interpretation function equivalent types terms extensional type theory defined initial 
incidentally precise proof initiality natural isomorphism syntactic field application methods 
summary concluding remarks described method obtaining equivalent category attributes locally cartesian closed category 
solves problem interpreting order dependent type theory 
method consists applying construction split fibration arbitrary particular case codomain fibration associated 
observation obtained cwa closed various type operators knowledge original 
incidentally somewhat dual construction split fibrations due power case 
fam gamma set pairs oe oe morphisms common codomain dom gamma associated canonical projection family morphism oe codomain gamma gamma define oe ffi oe 
gives rise cwa closed sigma types natural way 
intuitively reason oe viewed type oe delayed substitution meant carried canonical projection 
types different associated substitutions compute sum product performing substitutions destroys split property 
power elegant result applies general coherence problems considered fact requires effort extract concrete description general construction 
aim previous paragraph means beautiful pinpoint particular properties construction result go 
view lack generality respect universes pointed section want endow meaning terms behaviour substitution 
framework longer sufficient generally model substitution terms modelled universal property 
know notion model case research semantics dependent types called 
may certain gap literature filled practical usefulness result remains unclear examples section investigated 
go thomas streicher explaining construction 
michael barr charles wells 
category theory computing science 
international series computer science 
prentice hall 


fibred categories foundations naive category theory 
journal symbolic logic 

carboni 
free constructions realizability proof theory 
journal pure applied algebra appear 

cartmell 
generalized algebraic theories contextual categories 
phd thesis univ oxford 

pierre louis curien 
substitution isomorphism 
fundamenta informaticae 

thomas ehrhard 

proc 
conf 
category theory computer science manchester uk pages 
springer lncs vol 


bart jacobs 
categorical type theory 
phd thesis university nijmegen 

bart jacobs 
comprehension categories semantics type theory 
theoretical computer science 

mendler 
quotient types martin lof type theory 
informal proceedings workshop logical frameworks antibes may 

nordstrom petersson smith 
programming martin lof type theory 
clarendon press oxford 

wesley phoa 
fibrations topos theory effective topos modest sets 
technical report ecs lfcs lfcs edinburgh 

andrew pitts 
categorical logic 
handbook logic computer science vol 
vi 
oxford university press 
appear 

power 
general coherence result 
journal pure applied algebra 

robert seely 
locally cartesian closed categories type theory 
mathematical proceedings cambridge philosophical society 

thomas streicher 
semantics type theory 
birkhauser 
article processed macro package llncs style 
