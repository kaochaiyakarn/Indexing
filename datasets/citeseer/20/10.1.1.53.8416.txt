transforming uml models formal specifications jean michel laboratoire universit de pau des pays de pau universit cedex france jean michel univ pau fr robert france computer science department colorado state university fort collins usa france cs colostate edu unified modeling language uml considered significant step development object oriented oo notations best oo modeling experiences 
considering specifically context high quality modeling complex systems 
believe lack firm semantics modeling notations identification requirements problems difficult 
approach making uml precise amenable rigorous analysis integrate suitable formal notations 
benefits similar approach result integrating fusion modeling techniques formal specification notation 
result technique produces highly structured graphical rigorously analyzable models facilitates early detection errors 
believe uml gain experience 
research motivation area software specification distinguish classes techniques informal structured techniques omt fusion emphasize ease understandability cost rigor formal specification techniques fsts emphasize formality cost ease understandability 
lack precise semantics popular lead problems ffl understanding models apparent real 
ffl developers waste considerable time resolving disputes usage interpretation notation 
ffl rigorous semantic analysis difficult 
need rigorous basis oo modeling suggests traditional fsts fst consists notation directly utilizes mathematical concepts provides mechanisms formally analyzing models expressed notation 
oo extensions traditional fsts attempt provide richer set structuring mechanisms extensions result semantics complex 
integration fsts provides avenue transforming imprecise model precise model 
propose attempting extend traditional fsts oo concepts workable approach provide formal basis oo modeling notations concepts shown effective practice 
words approach advocate precise notations concepts currently perceived reflecting best practical experiences oo modeling 
formalizing concepts notation deepen understanding oo modeling result oo techniques rigorous 
position give overview attempt direction 
approach requirements modeling analysis called integrates informal oo analysis technique fusion formal specification notation 
section detail approach main benefits 
section discuss ideas making uml rigorous experience conclude section 
rigorous object oriented analysis modeling technique development requirements model technique involves developing fusion analysis models transforming specifications analyzed analysis tools animators theorem checker prover 
experiences applying indicates defects requirements uncovered analysis specifications transformation fusion models specifications formalization activity 
formalizing object oriented analysis integration means providing bridge informal oo modeling notations formal notation 
objective integration produce modeling techniques allow obtain precise rigorously analyzable models formal understandable oo models 
developing focused producing formalizations directly support verification validation activities computer support available 
fusion incorporates best oo modeling concepts mature oo techniques coherent modeling framework 
reflects desire stable mathematically precise structured notation express object oriented analysis ooa modeling concepts straightforward manner supported computer analysis tools 
hall shown express oo modeling concepts supported animators theorem proving checking environments 
process modeling phase involves mature ooa modeling technique 
case fusion ooa techniques modeling phase 
analysis models accomplished generating validation models informal ooa models 
validation models allow developer rigorously validate behavior structure captured informal ooa models 
technique validation models expressed notation 
validation model precise analyzable representation system view captured ooa model 
allows developers check view consistency 
furthermore single formalism validation models allows developers check consistency views 
differs works integrated techniques focus precisely defining compositional semantics fusion models 
approach mappings basic modeling constructs precisely defined composed obtain meaning complex structures 
possible express mappings compositions formal declarative functional notation chose express transformation rules algorithmic manner 
algorithmic style operational aspects transformation clearer provides path development computer tools 
implemented early version transformation rules tool called see section 
fusion analysis models specifications detail rules guidelines developed transforming fusion object models specifications see details outline major ideas approach 
transformation referred formalization informal model 
invariably informal model information needed generate formal expression desired properties information expressed language open multiple interpretations 
human intervention needed provide additional information provide formal expressions informal statements 
intervention forces analyst examine informal models closely helps formulate appropriate questions content 
essentially intervention provides analyst opportunities uncovering problems models 
reason view inability completely automate formalization process weakness desired feature requirements analysis process 
technique class diagram cd characterization family structures consisting linked instances depicted classes 
instance object structures referred instance object models literature 
refer instance structures characterized cd configurations 
intuitively configuration valid stable state system modeled cd 
system valid stable state operations executing state components satisfy specified invariant 
denotationally semantic domain cd collection sets configurations 
meaning cd set configurations instance structures conform constraints expressed cd 
specification generated cd characterization valid stable system states 
cd constructs transformed characterizations configuration components 
construct characterizations composed form characterizations cd configurations 
meaning cd cd construct set configurations configuration elements satisfy characterizations produced technique 
general takes property oriented approach formalizing fusion models 
denotationally fusion operation schema os collection configuration pairs pair denotes effect operation system state 
operation schema corresponding fusion os precise characterization set configuration pairs defining desired effects 
operation schemas composed form specifications complex behaviors 
fusion life cycle model constrain specifications system operations composed determine complex behaviors built specified operations 
cds generation specifications completely automated cases informal annotations 
informal annotations re expressed formally human analyst formalization process 
transformation cds specifications set transformation rules map basic cd constructs constructs 
fusion oss expressed largely natural language human effort required transform specifications 
guidelines rules transforming fusion oss specifications 
subset guidelines automated 
result automation tool automatically produces skeletons specifications oss 
human effort required complete generated specification shells 
fusion environment built prototype tool uses early version set transformation rules automatically generate specifications fusion class models 
analysis tools called tool analyze generated specifications 
tool applied graduate students florida atlantic university non trivial projects case studies see 
general experiences indicate formalization analysis informal models uncover problems informal models lead deeper understanding problem 
applications integrated methods case studies uncovered limitations previous rules 
technique transforming fusion cds oms specifications improves previous technique 
new technique supports automated transformation wider range oms 
making uml precise oo modeling community unified modeling language uml attracting industrial attention 
difficult dispute uml reflects best modeling experiences incorporates notations proven useful practice 
uml go far addressing problems related lack precision 
architects uml stated precision syntax semantics major goal 
currently uml semantics expressed terms semantic meta model supported natural language descriptions 
meta models capture semantic relationships uml modeling constructs little way answering questions related interpretation non trivial uml structures 
help semantic meta model expressed notation trying interpret 
natural language text supporting models mimic metamodels describes semantic relationships provides little additional insights semantics uml structures 
seriously clear uml semantics described uml documents supports rigorous analysis refinement uml models 
precise uml project collaborative effort objectives development precise semantics uml development mechanisms support rigorous analysis refinement uml models 
primary objective collaborative research develop formal foundation core subset uml insights gained result formalization activity fix deficiencies uncovered result formalizing uml concepts notations develop techniques mechanisms facilitate rigorous application uml 
focus developing rigorous techniques uml notation widely perceived reflecting best industrial software development experiences stems desire see widespread direct indirect fsts 
approach propose uses traditional fsts better understand concepts underlying oo modeling refinement 
insights gained develop precise semantics uml develop mechanisms allow developers rigorously analyze refine models need directly manipulate mathematical reformulations oo models 
specific goals proposed research identify formalize core uml modeling concepts compositions develop formal basis refinement uml models develop integrated set rigorous uml modeling techniques develop computer aided uml modeling environment incorporates rigorous modeling refinement techniques develop 
anticipate results produced proposed research impact improved understanding oo modeling concepts help provide firm foundation standardization efforts provide firm base development rigorous oo development methods enhance investment oo technologies encourage widespread rigorous development techniques 
mature object oriented analysis modeling techniques widely software specification expressiveness rich set intuitive constructs modeling complex systems 
mainly due lack support rigorous analysis due loosely defined semantic 
formal specification techniques provide precision tools needed support rigorous analysis modeled properties 
despite strengths existing fsts difficult effort needed 
believe fsts mature structured oo techniques play complementary roles 
overview approach integration called 
experience suggests better approach move uml notation formal language giving semantics developing calculus utilizes uml notation support reasoning 
motivation collaborative effort engaged precise uml group 
jean michel robert france bharat gopal raghavan 
tool rigorous analysis object models 
proceedings th international conference technology objectoriented languages systems tools santa barbara california july august 
derek coleman patrick arnold stephanie chris helena hayes paul 
object oriented development fusion method 
prentice hall englewood cliffs nj object oriented series edition 
robert france jean michel 
role integrated specification techniques complex system modeling analysis 
janusz editor proceedings workshop real time systems education beach florida pages 
ieee computer society press april 
robert france jean michel maria petrie 
integrated object oriented formal modeling environment 
journal object oriented programming nov dec 
uml group 
unified modelling language 
version rational software santa clara ca usa september 
anthony hall 
specification calculus object oriented systems 
bj rner hoare langmaack editors vdm formal methods software development volume lecture notes computer science pages 
vdm europe springer verlag new york 
james rumbaugh michael blaha william premerlani frederik eddy william lorensen 
objectoriented modeling design 
prentice hall englewood cliffs nj 

invitation formal methods 
computer april 
michael spivey 
notation manual 
prentice hall englewood cliffs nj second edition 
