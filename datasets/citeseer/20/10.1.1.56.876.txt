complex event processing distributed systems david luckham brian program analysis verification group computer systems lab stanford university august complex event processing new technology extracting information distributed message systems 
technology allows users system specify information interest 
low level network processing data high level enterprise management intelligence depending role viewpoint individual users 
changed moment moment target system operation 
presents overview complex event processing applied particular example distributed message system fabrication process management system 
concepts causal event histories event patterns event filtering event aggregation introduced application process management system illustrated simple examples 
gives reader overview complex event processing concepts illustrates applied rapide toolset specific kind system 
hierarchical viewing computer systems operation today distributed systems 
typical examples systems supporting commercial applications distributed financial transac project funded darpa onr contract air force rome labs afosr indebted members rapide project built rapide tools study helping study marc abramowitz john kenny walter mann park louis alex santoro james vera 
tion processing systems warehousing systems fabrication process control systems 
generally speaking business operations global supported widely distributed message computer system 
military command control systems distributed systems 
types component objects commercial military systems different underlying paradigm widely dispersed set hundreds thousands application programs objects communicating means messages transmitted various kinds media 
distributed message systems component objects communicating distance means sending messages remote method invocation 
communication objects uses communication layer 
medium vary primitive ethernet higher level layers internet specialized kind middleware 
middleware distributed applications includes corba orbs information busses 
middleware provides layer communication protocols apis objects system communicate 
contains hides lower level networks databases demons stuff 
widely commercial middleware products form communication layer largescale business enterprises see gro tib 
communication layer usually viewed lowest levels distributed system 
newspaper articles refer hood part say popular multimedia product hosted internet 
generally looked common man know certainly tinker source evil system problems 
collapses known known ways system halt 
hear network 
network crashes critical concern higher level distributed enterprise 
communication layer domain powerful new kind gnome specialist network management exclusion system 
today diagnostics low level distributed systems built diagnostics try solve network management problems 
communications layer record log particular kinds messages called events indicate performance basic operations network functions 
event logs fed various commercial viewing tools 
system administrators view logs perform different kinds measurements 
gives primitive way keeping track communication layer behaving detecting overloading failures various pathways 
providing event log exactly happening communication layer action taken keep system communications operating smoothly 
number event viewing analysis tools expanding rapidly meet growing commercial needs 
event diagnostics primitive embryonic stage 
kinds events logged low level events 
intended deal network communications layer management 
event logs large 
events indicate related activities communication layer may appear widely separated events time 
may lot events mixed ones interest 
techniques pick events interest needed 
event logs lack causal information events caused event happen 
means view large event log event indicates error turns server going immediately focus events log led failure 
lot knowledge network try 
communication level event logs hard analyse interpret usefully 
getting information application level activities worse shape 
low level event logs help problems layers system say component objects communication layer 
help identify problems objects need able relate sets communication events higher level operations objects perform 
far technology available 
problems inflexibility 
situations need objects generate meaningful events activities just network 
types events generated day diagnostics designed system built 
lack flexibility generate new types events deal new unexpected problems turn system operation 
need able vary set events generated system fit interested time 
need flexible multilevel viewing look current state event diagnostics see need powerful monitoring viewing tools 
basis need ability aggregate sets low level events higher level events give information component objects system trying application level 
example ability ffl easily specify interesting events large event logs filter rest events ffl aggregate sets low level events corresponding higher level events signify ffl detect causal relationships events level abstraction happen different times various subsystems ffl monitor event logs abstraction level system operation automatically detect violations critical requirements security violations 
rapide complex event processing lets add capabilities distributed system 
apply technology communication layer existing low level network event logging facilities 
improve monitoring diagnostics network level provide system viewing management level system 
communications layer source information just source 
technology flexible 
add new kinds event viewing system needed fly system operation 
illustrate concepts rapide complex event processing apply particular system fabrication process management system 
abstraction hierarchies flexible viewing powerful technique help understanding complex system separate system activities operations layers 
called abstraction hierarchy 
allows view system activities layer time 
example dont think low level packets bits headers timeouts time think higher level operations sending receiving email 
sets operations separated different levels 
translate high level activities lower level want 
abstraction hierarchies international standards iso osi inter connection model network systems int shown 
case iso standard protocols defined specify activity level terms operations level 
relations operations different levels defined precisely 
rapide complex event processing lets apply system idea organizing activities operations abstraction hierarchy 
case message systems organize activities events layers 
events include messages generated system addition events denote activities change state component start completion task high level tasks 
events messages form contain data addition denote activities 
typical low level example heartbeat event message alive denotes lets components know source component active 
fact event denotes activity 
shows layer hierarchy 
higher level events related fabrication line flow activities moving lots equipment processing lots inside equipment measuring lot yields 
lower level events denote communication computers manage robots equipment layers activities operations application layer presentation layer session layer transport layer data link layer physical layer semantic data interoperability job control email file transfers virtual terminal virtual file syntactic data description representation transfer syntax appl appl data exchange transmission control checkpoint synch establish terminate session detect duplicate lost data control data flow network layer switching routing internetworking transfer data links quality service error detection activate maintain deactivate physical circuits service elements commitment concurrency recovery ccr association control msg handling syntax notations encoding rules registration hierarchies tokens sync points activity rules exception mgmt kernel functions unique identifiers seq nrs way handshake tcp network service user network service provider connections ip data identity flow control errors recovery physical circuits data terminal equipment signal digitization open systems interconnection osi architecture layers messages sent listened computers middleware control events 
event hierarchies give way view describe activity system different levels detail 
lowest level actual events denoting operations level 
generated system 
events higher levels virtual sense composed sets lower level events 
compositions maps sets events different levels defined order specify hierarchy completely 
example shows mapping events middleware communication layer event workflow layer 
events drawn nodes causal relations arrows 
pattern events left side consist abstraction layer activity event types flow movement lots setup machine machine status changes repair machine testing yield measurement 
maintain machine create lot load lot process lot unload lot middleware communication broadcast messages broadcast events listen messages 
distribute events protocol interactions receive events accept events control events event hierarchy fabrication line control system receive receive cj receive cn load lot cj 
broadcast tib oper load distribute tib cn load accept controller mapping events different hierarchy levels broadcast say operator goes middleware example model tibco rendezvous causes distribute event turn causes multiple receive events middleware clients control system computers 
control computer accepts message 
result flow level virtual load lot event 
denotes workflow activity loading lot equipment 
causal relationships important communications involving similar messages going concurrently 
allows quickly detect communication layer events playing workflow activity 
set events relationships causality called poset partially ordered set events 
define abstraction rapide complex event processing allows construct higher level events process exactly events 
done kinds objects ffl filters 
filters take posets events input output input events 
filters defined event patterns 
output pass input posets match patterns 
effect reduce number events hopefully interest importance 
ffl maps 
maps take posets events input generate new events 
defined pairs input output event patterns 
subset events input matches input pattern map reacts generating events corresponding output pattern 
maps called aggregators 
purpose construct higher level events 
basis defining maps filters event patterns say 
filters maps hosted communications layer system 
basic events system input network filters maps configured hierarchy corresponding abstraction hierarchy shown 
filters maps output events set filters maps network accept 
events hidden target system processed event processing network 
events level processed viewed various analysis tools 
hood part distributed system harnessed enable view system behavior level detail 
view system behavior contains events relationships events corresponding level event hierarchy 
view may contain subset events level 
defining abstraction hierarchy define different levels wish view system 
flexible viewing allows change view target system operating 
example operator may happy viewing workflow events event layering pattern filter pattern map event layer event layer event processors basic event layer distributed system event processors analysis tools analysis tools analysis tools hierarchical organization event processing objects fails 
operator may want view events communication layer determine problem control computer database communication layer 
example requires change related views higher level view lower level detailed contains events related part higher level view 
change related views need maps illustrate 
flexible viewing allows change event abstraction hierarchy 
system possible event abstraction hierarchies 
lowest level activities events common hierarchies 
operation system users may want define new views system new abstraction hierarchy 
hierarchy needs changed 
simple example equipment substitutions production line 
new types events appear layer 
viewing halted change hierarchy view 
rapide tools kinds changes dynamically system operation 
new maps filters dynamically specified network maps filters dynamically reconfigured provide required change hierarchy view system operation 
causal event histories complex event processing operates sets events relationships events 
relationships events specified event patterns maps filters 
events distributed system various relationships 
time respect system clock relation event happened event usually timing represented timestamps events 
cause relation event caused event happen 
conversely independent causally related 
causal relations encoded genetic data events means see rapide lv 
different ways causal relation defined 
example activities threads synchronizing means locks writing reading object may imply causal relation events threads 
examples computational cause called causal relation directly implied semantics operations performed computation generating events 
infer causal relations events semantics programming language say java system semantics operations communication layer say tibco rendezvous 
models causal relations events defined statistics probabilities 
causal models complex event processing see 
probabilistic models causality supersets computational causality sense events causally related computation related probabilistic model cause probabilistic model may related events 
computational causality minimal causal relationship events imposed target system 
include effects external system social economic forces effects nature 
network management tools today provide explicit causal event viewing traces events 
event traces sets events possibly ordered timestamps containing explicit representation causality events 
causality deduced data events probabilistic models defined system builders unreliable 
complex event processing works explicit representations event causality works model cause 
examples computational causality 
snapshot part causal event history rapide poset viewer 
poset showing view workflow level 
nodes represent events directed arcs represent causality 
topmost create lot event causes events create lot process lot event 
insert windows show parameters highlighted events 
see second create lot events generated thread causally related 
denote creation lot lot parameter create lot event 
dag representation causal event history fact create lot events generated thread linear causal chain 
highlighted process lot event denotes activity lot processed equip see corresponding cut window showing thread generated process lot event parameters equip lot 
creation processing lot causally related 
similarly highlighted process lot events causally related denote activities equip 
equipment lot time critical region 
see independent process lot events denoting activities different lots different equipment 
causal relation example computational causality 
results semantics language model control computers middleware case rapide 
recipe management system test analyzer operator statistical process control spc spc database yield evaluator material handling system equipment controller equip equipment controller equip progress wip mes wip database low level architectural model control system fabrication process management system illustrate complex event processing scaled model management system silicon chip fabrication line 
kinds systems consist computers communicating middleware layer 
shows small subset typical configuration eleven computers 
contains interesting types computer described cs progress wip material handling system mhs statistical process control spc equipment control 
system lot pieces control computers 
model contains communication layer case tibco rendezvous information bus called tib 
control system computers communicate broadcasting listening messages tib 
typical events level tib send subject data tib listen subject data 
events correct sequence meaningful communication pair computers 
views event traffic tib gets send listen events corresponding different transactions different system components 
shows architecture corresponding lowest abstraction level middleware communication level 
particular computer listens messages interest deaf messages broadcast tib 
quite natural define higher level abstraction event hierarchy level abstracts tib level message sequences point point direct communication pairs computers 
point point communication happens computers broadcast listen messages protocol 
level tib hidden point point take place middleware 
recipe management system test analyzer operator statistical process control spc spc database yield evaluator material handling system equipment controller equip equipment controller equip progress wip mes wip database second level architectural model point point communication shows subset point point communication topology 
blue lines show direct way communication operator wip controllers material handling 
red lines show direct way communication components 
direct communication components operator test analyzer fact obvious level 
event pattern mappings define posets events middleware level aggregate single events point point level 
discuss maps section 
layer event hierarchy model show 
events higher level related sets events lower level 
example load lot implemented subject addressing scheme tib listens subjects interest 
abstraction layer activity event types 
events 
product disposition disposition lots 
create lot processed lot 

flow life cycle machine movement processing lots 
setup machine repair machine maintain machine create lot load lot process lot unload lot 
point point communication communication pairs machines create lot create lot ack setup machine setup machine ack load lot load loading load process processing process lot processed unload lot unload unloading unload repair repairing repair pm maintaining pm idling 

middleware communication publish subjects subscribe subjects tib broadcast client tib distribute tib clients listen client accepts msg controller equipment msgs 
level event hierarchy level corresponds number point point communication events operator controller level particular causal relationship data parameters 
section illustrate relationships events different levels defined event pattern maps 
note column shows number events level simple scenario 
different levels events interest different people 
lower levels tib level point point level interest control systems engineer 
person typically view activity point point level contains fewer events gives precise picture attempted communications control computers 
goes wrong communication times due lost message slow response engineer point point view separate tib level events error 
requires point point events actual tib events mappings 
shall illustrate 
workflow level interest production engineer interested material processing throughput equipment maintenance utilization 
events level abstracted away communication control computers 
denote activities dealing processing movement lots various statuses equipment 
shall see systems engineer may want view workflow level 
product disposition level deals manufacturing status chip lots 
workflow activities abstracted away 
level interest upper management production sales organizations 
important emphasize abstraction hierarchies usually quite subjective 
industry standards 
day day operation system various viewers may want change portions 
rapide allows change event abstraction hierarchy simply changing event definitions various levels event pattern maps 
changes fly system operation middleware events monitored 
defining event hierarchy specified event aggregation maps 
map object containing set mapping rules 
rule pair event patterns left right pattern 
map listens events level tries match left patterns incoming events 
match happens variables left pattern bound objects matching event set pattern event set identical 
result successful match binding pattern variables objects 
left pattern matches binding variables objects applied corresponding right pattern 
result event general case causally related set events 
right hand events generated map 
events higher level incoming event level 
virtual events put middleware maps observe 
construct hierarchy event processing maps shown corresponding abstraction hierarchy 
figures illustrate mapping rules defining hierarchy left right pictures event patterns corresponding virtual events 
left picture highlights pink poset events matching left pattern map right picture shows corresponding virtual events generated map highlighted yellow 
tear windows show parameters highlighted event side 
shows mapping rule level level 
left pattern matches highlighted set middleware level events 
consists causal chain broadcast event operator seen parameters tear window middleware api generates broadcast followed middleware distribute event results fan events middleware 
listens passes event control computer 
shown data variables pattern parameters events shown separate window 
result matching pattern binding pattern variables parameters 
resulting point point level event shown righthand picture 
setup machine event highlighted map level level map level level map level level yellow communicated operator controller 
righthand events generated lefthand poset map rules 
figures shows mapping rule level events setting equipment single level setup event 
left pattern pink matches causal chain setup events level 
events way seen level poset illustrate previous rule mapping level 
rule processing level output previous rule 
shows second mapping rule level 
left pattern results generating causally related events yellow create lot followed load lot level 
shows mapping rule processes level events previous maps 
abstracts away lot load unload movements level 
simply specifies level events creation lot events processing lot particular equipment completed 
machine statuses abstracted level 
map level level level view creation completed processing lots 
rough heuristic guide number maps defining event hierarchy consecutive levels mapping rule type event higher level 
causal event log operations level viewing event history hierarchically defined event aggregation maps levels event hierarchy view activity system abstraction levels 
event viewing tools driven level events illustrate run small scenario involving creation processing lots pieces equipment 
scenario best explained workflow level abstraction level 
operator begins scenario sending messages mhs wip concurrently new lots created 
causal event log middleware level 
operator initializes sets equip equip communication controllers 

operator causes lots loaded processed unloaded equip lots loaded processed unloaded equip 
activities take place independently 
load process lot time loading processing concurrently 

step repeated 
lots processed equip processed equip conversely 

steps may randomly undergo maintenance repair 
shows poset generated scenario level 
highlighted events show independent threads loading second batches lots 
batch loaded processed equipment second batch processed reverse order 
independence events threads shows separate batches processed concurrently possible 
information lost event causality represented 
poset shows maintenance events interspersed processing events 
level events fed various event viewing tools shown 
tools summarize information contained level events 
viewer shows status lots operation 
viewers give different depictions status availability formulas defined cs 
information aggregated maps data events level events level 
time number events greatly reduced see table irrelevant tib communication events eliminated 
viewing level efficient trying view level events directly 
poset basic low level events scenario shown 
see thread structure result depicting causality see details events 
viewer allow magnify areas poset zoom operations line navigate poset view details 
picture shows main threads control action various times 
roughly correspond active objects level architecture shown 
recognize repeating patterns events corresponding say communication involved processing lot 
viewer dag layout algorithm sensitive repetitions pattern events may displayed different topologically equivalent layouts 
important automated way specifying detecting patterns events rely human recognition 
rapide causal event pattern language gives powerful technology doing 
pattern directed viewing supported rapide viewer 
low level trouble shooting high level view networked systems experience low level faults bring system grinding halt 
faults costly 
typically information bus lose events communication control computers robust timing delays 
middleware protocols software control computers fault 
faults happen maintenance engineer faced large level event log 
reported authors faults taken top class engineer weeks 
problem try understand terms level concepts going fault happened 
scenario illustrate process hierarchical viewing starting highest level view working hierarchy maps locate low level source fault 
powerful tool detecting low level faults quickly 
start viewing level picture scenario 
shows creation processing lots lot processed equip gamma equip gamma conversely lot processed equip gamma 
see parameter data count number process lot events 
know gone wrong 
level lot seen going process creation followed processing pieces 
pattern specifying process causal chain events shown pattern window 
notice variables pattern lot machines 
matches causal chain starting create followed process lot events lot different machines 
see guard pattern window short 
matches pattern highlighted 
events left creation lot processing equip gamma 
processed equip gamma 
know high level operation failed viewed middleware events idea 
didn lot get processed equip gamma 
need details 
go level 
look just level events led incomplete chain events lot level 
hierarchy maps level 
highlights pink level events triggered aggregation maps generated incomplete chain events level shown yellow 
feature rapide toolset records lower level events trigger aggregation mapping result higher level event 
allows find lower level events aggregated set higher level events 
shows causal chain pink events involving lot continues load lot event signifying lot loaded equip gamma 
equipment level view showing incomplete processing lot tracking fate lot level taken maintenance 
came back line processing step level happen 

level 
maps level level view level events aggregated final load lot event level signifying loading lot equipment 
level events highlighted pink 
causal chain see preventive maintenance ended processing lot fact take place equipment 
see operator notified lot finished processing 
going find operator failed respond message 
tracking fate lot level outlined method specifying abstraction hierarchies define levelwise views distributed message system 
methodology utilizes event pattern mappings 
illustrated process employing hierarchical views quickly zero low level causes errors systems 
event pattern languages fundamental technology extracting information fate lot level distributed message systems 
underlying basis specifying abstraction hierarchies means event aggregation maps automated monitoring aggregation data communication layers 
actual expressive power required event pattern language depends nature information required abstraction hierarchy needed specify 
rapide event pattern language includes causal timing relationships events usual set theoretic relations probably powerful event pattern language re quired complex event processing 
cs chang sze technology 
electrical computer engineering 
mcgraw hill 
gro object management group 
common object request broker architecture specification 
object management group revision edition december 
int international organization standardization 
information processing systems open systems interconnection specification basic encoding rules notation asn december 
international standard 
david luckham john larry augustin james vera doug bryan walter mann 
specification analysis system architecture rapide 
ieee transactions software engineering april 
lv david luckham james vera 
event architecture definition language 
ieee transactions software engineering september 
tib tibco 
www tibco com 
