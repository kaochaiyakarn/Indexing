evolutionary computation overview thomas back informatik centrum dortmund center applied systems analysis casa joseph von fraunhofer str 
dortmund germany hans paul schwefel universitat dortmund fachbereich informatik lehrstuhl fur dortmund germany overview important representatives algorithms gleaned natural evolution called evolutionary algorithms 
evolution strategies evolutionary programming genetic algorithms summarized special emphasis principle strategy parameter self adaptation utilized algorithms learn strategy parameters mutation variances covariances 
experimental results demonstrate working principle robustness self adaptation methods evolution strategies evolutionary programming 
general principles evolutionary algorithms discussed identify certain properties natural evolution help improve problem solving capabilities evolutionary algorithms 
evolutionary computation optimization years ago number innovative researchers different places europe independently came idea mimicking mechanisms biological evolution order develop powerful algorithms problems adaptation optimization 
optimal structures shape birds wings branching structure blood vessels emerged biological evolution idea utilize underlying mechanism solution optimization problems motivated considerable amount research resulting approaches proven effectiveness robustness variety applications see bibliography evolutionary algorithms collected 
typically optimization application requires finding setting xn free parameters system consideration certain quality criterion ir typically called objective function maximized equivalently minimized max objective function real world systems arbitrary complexity reactor biochemical processes phase nozzle simulation models implemented computer nuclear reactor simulation analytical expression 
typically solution global optimization problem requires finding vector characteristics multimodality existence local maxima gamma case ir constraints restrictions set ae theta thetam functions theta thetam ir set feasible solutions subset domain variables theta theta mn jg large dimensionality problem strong nonlinearities non differentiability noisy timevarying objective function values require search robust global optimization methods applicable yield useful results traditional methods fail 
general global optimization problem unsolvable see identification improvement actual best solution optimization big success practical problems cases evolutionary algorithms provide efficient effective method achieve 
mainstream methods evolutionary computation established past years genetic algorithms developed holland ann arbor mi evolutionary programming developed fogel san diego ca evolution strategies developed rechenberg schwefel berlin germany 
state art overviews field evolutionary computation fogel back 
algorithms developed applications analytical information derivatives available problem certain minimal complexity 
associated binary search spaces case genetic algorithms real valued search spaces ir case evolution strategies genetic algorithms real valued permutation spaces evolution strategies evolutionary programming originally applied discrete optimization problems 
search spaces corresponding algorithmic variants discussed detail sections ii iii article 
algorithms rely concept population individuals representing potential solutions optimization problem undergo probabilistic operators mutation selection recombination evolve increasingly better fitness values individuals 
fitness individual reflects objective function value respect particular objective function optimized 
mutation operator introduces innovation population generating variations individuals recombination operator typically performs information exchange different individuals population 
selection operator imposes driving force process evolution preferring better individuals survive reproduce members generation selected 
main loop algorithm consisting recombination mutation fitness selection iterated number generations computing time exhausted sufficiently performing solution termination criterion fulfilled 
pseudocode algorithm summarizes major components evolutionary algorithm algorithm initialize evaluate terminate recombine mutate evaluate select od algorithm denotes population individuals generation special set individuals considered selection 
offspring population size generated means recombination mutation population offspring individuals evaluated calculating objective function values solutions represented individuals selection fitness values performed drive process better solutions 
sections article give overview instantiations general outline evolutionary algorithm yield evolution strategy evolutionary programming algorithm section ii genetic algorithm section iii 
section iv mention representatives evolutionary algorithms characterized broader sense underlying search spaces section presents concluding remarks 
ii 
ess ep continuous spaces originally defined problems evolution strategies evolutionary programming presently widely continuous parameter optimization problems general form ir ir introduce evolution strategies section ii explaining relationships algorithm evolutionary programming section ii 
evolution strategies evolution strategies development rechenberg schwefel started working field technical university berlin germany applications experimental optimization applied problems shape optimization pipe drag minimization joint plate structure optimization phase flashing nozzle 
mid sixties schwefel implemented version evolution strategy computer continuous representation mutation operator normally distributed modifications expectation zero variance 
strategy works creating dimensional vector object variables parent applying mutation identical standard deviation object variable better ancestor descendant selected survive generation discarded 
simple selection mechanism typically characterized term selection 
obviously simple strategy population individuals similarity simulated annealing 
population evolution strategy strategy designed rechenberg introduce recombination operator allowing parent individuals form offspring recombination mutation 
offspring eventually replaces worst parent individual performs better 
selection extinction worst comparable steady state selection scheme introduced genetic algorithms whitley 
strategy widely provide reasonable way control standard deviation mutations success rule case strategy 
problem solved elegant way strategy introduced schwefel represents state art uses parent offspring population sizes 
notation indicates parents create offspring means recombination mutation best offspring individuals deterministically selected replace parents 
notice mechanism allows best member population generation perform worse best individual generation method elitist facilitating strategy accept temporary help leave region attraction local optimum reach better optimum 
contrast strategy selects survivors union parents offspring monotonous course evolution guaranteed 
due recommendations schwefel strategy preferred strategy experimental findings indicate performs strategy practical cases 
individuals population strategy consist object variables ir called strategy parameters variances covariances generalized dimensional normal distribution mutation 
schwefel incorporated parameters representation individuals order facilitate evolutionary self adaptation parameters applying evolutionary operators object variables strategy parameters mutation time searching space solutions strategy parameters 
way suitable adjustment diversity mutation parameters provided arbitrary circumstances 
formally individual oe ff consists components ir oe ir oe ff gamma ff oe ng ff gamma oe delta oe gamma 
mutation operator works adding normally distributed random vector expectation vector covariance matrix gamma covariance matrix described mutated strategy parameters individual 
depending amount strategy parameters incorporated representation individual main variants self adaptation distinguished ffl oe ff standard deviation object variables identical oe object variables mutated adding normally distributed random numbers oe oe delta exp delta oe delta gamma ffl oe ff object variables individual standard deviation oe determines corresponding modification oe oe delta exp delta delta oe delta gamma gamma ffl oe ff delta gamma vectors oe ff represent complete covariance matrix dimensional normal distribution covariances rotation angles describing coordinate rotations necessary transform uncorrelated mutation vector correlated 
details mechanism pp 

mutation performed oe oe delta exp delta delta ff ff fi delta oe ff oe ff denotes correlated mutation vector fi 
ffl oe general case having just full number different degrees freedom available permitted implemented agreement oe oe mutating oe settings learning rates recommended schwefel reasonable heuristic settings see pp 
mind depending particular topological characteristics objective function optimal setting parameters differ values proposed 
oe beyer theoretically shown sphere model setting optimal choice maximizing convergence velocity evolution strategy 
amount information included individuals means self adaptation principle increases simple case standard deviation order additional parameters reflects enormous degree freedom internal models individuals 
growing degree freedom enhances global search capabilities algorithm cost expense computation time reflects shift precise adaptation strategy parameters case oe exploitation large diversity strategy parameters 
case correlated mutations rudolph shown approximation hessian computed upper bound population size typical population sizes independently certainly sufficient achieve 
choice logarithmic normal distribution modification standard deviations oe motivated heuristic arguments see 
multiplicative process preserves positive values 

median equal guarantee average multiplication certain value occurs probability multiplication reciprocal value process neutral absence selection 

small modifications occur large ones 
effectiveness multiplicative logarithmic normal modification presently acknowledged evolutionary programming extensive empirical investigations indicate advantage scheme original additive self adaptation mechanism evolutionary programming oe oe delta ff delta setting ff 
investigations indicate reversed noisy objective functions considered additive mechanism outperform multiplicative modifications 
study fogel indicates order modifications oe strong impact effectiveness self adaptation important mutate standard deviations mutated standard deviations modification object variables 
authors point study reversed mechanism suffer generating offspring useful object variable vectors bad strategy parameter vectors determine position offspring 
illustrate working principle self adaptation perform trivially simple interesting experiment strategy oe comparing logarithmic normally distributed modification equation additive modification equation 
purpose time varying version sphere model gamma optimum location changed generations 
independent experiments generations experiment performed average best objective function value average standard deviation population reported 
learning rate ff experiments 
fig 

best objective function value plotted generation time varying sphere model 
results obtained strategy multiplicative dashed line additive step size modification solid line 
shows behavior best objective function value time 
solid curve reflecting modification equation dashed curve reflecting modification equation illustrate linear convergence algorithms search interval generations 
shift optimum location generation search bad new position linear convergence observed 
shows corresponding average standard deviations population reflecting steady process self adaptation standard deviations decreasing periods linear convergence increasing periods stagnation explained necessity increase standard deviations back level impact objective function value 
process standard deviation increase observed interval needs time yield progress respect objective function value 
time identical additive modification multiplicative processes behave similar experiments 
needs performed achieve clear understanding general advantages disadvantages self adaptation scheme compared 
fig 

average standard deviation population multiplicative dashed line additive step size modification solid line 
theoretical study beyer presents step goal 
author shows self adaptation principle works variety different probability density functions modification step sizes extremely robust mechanism 
indicates equation obtained taylor expansion breaking linear term behave equal small settings learning rates ff ff 
prediction perfectly confirmed experiment reported 
far evolution strategies introduced concerning representation individuals strategy parameters mutation operator 
just additional component recombination operator remains discussed 
typically recombination incorporated main loop evolution strategies operator see algorithm generates new intermediate population individuals fold application parent population creating individual application individuals 
typically called global recombination chosen 
recombination types object variables strategy parameters different evolution strategies typical examples discrete recombination random exchanges variables parents comparable uniform crossover genetic algorithms intermediary recombination arithmetic averaging 
details operators see 
advantages disadvantages recombination particular objective function hardly assessed advance certainly generally useful setting recombination operators discrete recombination object variables global intermediary strategy parameters claimed pp 
exists 
kursawe impressively demonstrated inappropriate setting recombination operator evolution strategy oe diverge sphere model 
convergence velocity achieved settings recombination operator intermediary recombination object variables yields non divergent behavior optimal performance achieved combination setting global intermediary recombination strategy parameters oe findings demonstrate appropriate choice recombination operator depends objective function topology dimension objective function amount strategy parameters incorporated individuals assuming population size scale number strategy parameters certainly worthwhile test case oe larger population just offspring individuals 
evolutionary programming origins early goal evolutionary programming achieve intelligent behavior simulated evolution 
fogel defines intelligence capability system adapt behavior meet goals range environments clarifying simulated evolution basis achieve 
original form evolutionary programming proposed operate finite state machines corresponding discrete representations variants evolutionary programming utilized continuous parameter optimization problems 
fig 

example finite state machine states 
presents simple example finite state machine different states fa cg input alphabet output alphabet fa cg 
edge states indicates state transition transition function ffi theta theta specified edge labels form states meaning ffi machine state receives input machine attains state produces output symbol initially finite state machine certain start state example 
mechanism finite state machine transforms stream input symbols interpreted environment machine stream output symbols 
performance finite state machine respect environment measured basis machine prediction capability comparing output symbol input symbol measuring worth prediction payoff function 
evolutionary programming paradigm implemented fogel worked population parent individuals generated offspring mutating parent 
mutation implemented random change description finite state machines different modifications change output symbol change state transition addition state deletion state change initial state 
mutations typically performed uniform probability number mutations single offspring fixed chosen probability distribution 
evaluating offspring individuals selection best parents offspring selection performed 
general principle mutation selection algorithm recombination received considerable criticism researchers working field genetic algorithms see concludes insufficiently powerful method 
clear variety empirical theoretical results role mutation genetic algorithms underestimated years importance recombination overestimated 
current variants evolutionary programming continuous parameter optimization problems common evolution strategies especially concerning representation individuals mutation operator self adaptation strategy parameters see section ii independently fogel phd thesis 
pointed section ii additive modification standard deviations originally proposed fogel presently substituted multiplicative logarithmic normally distributed modification 
minor difference evolutionary programming evolution strategies consists choice probabilistic variant selection evolutionary programming solution offspring parent individuals evaluated typically randomly chosen solutions union parent offspring individuals 
comparison win assigned individual score better equal opponent individuals greatest number wins retained parents generation 
shown pp 
selection method probabilistic version selection deterministic number competitors increased 
open question evolutionary algorithm research probabilistic selection scheme preferable deterministic 
iii 
gas discrete problems canonical genetic algorithms originally defined holland binary representation individuals fixed length strings alphabet typically handle optimization prob lems form ir sticking binary representation genetic algorithms enforce utilization encoding decoding functions gamma facilitate map solutions binary strings vice versa requires complex mappings gamma case continuous parameter optimization problems instance genetic algorithms typically encode real valued vector ir dividing binary string segments equal length decoding segment yield corresponding integer value mapping integer value linearly interval ae ir real values 
strong preference binary representations solutions genetic algorithms typically derived schema theory genetic algorithm tries analyze gas terms expected schema sampling behavior 
term schema denotes similarity template represents subset schema theorem genetic algorithms claims canonical genetic algorithm provides near optimal sampling strategy schemata exponentially increasing number performing short small distance leftmost rightmost defined position low order specified bits schemata called building blocks subsequent generations see detailed schema theorem 
fundamental argument justify strong emphasis binary alphabets derived schema processing point view fact number schemata maximized finite number search points binary alphabet see pp 

consequently schema theory presently favor binary representations solutions 
practical experience theoretical hints regarding binary encoding continuous object variables indicate strongly binary representation serious disadvantages introduce additional multimodality objective function making combined objective function ffi gamma ir complex original problem 
fact schema theory genetic algorithms relies approximations assume infinite populations see pp 
optimization criterion minimize expected loss corresponding sum fitness values individuals sampled evolution appropriate criterion minimize best fitness value point view emphasizes optimization capabilities algorithm schema theory turns helpful 
variation operators canonical genetic algorithms mutation recombination typically applied strong emphasis recombination 
standard algorithm performs called point crossover individuals chosen randomly population position bitstrings randomly determined crossover point offspring generated concatenating left substring parent right substring parent 
numerous extensions operator increasing number crossover points uniform crossover bit chosen randomly corresponding parental bits proposed similar evolution strategies generally useful recipe choice recombination operator theoretical analysis recombination large extent open problem 
evolution strategies recombination operator genetic algorithms typically applied certain probability commonly proposed settings crossover probability 
mutation genetic algorithms introduced dedicated background operator small importance see pp 

mutation works inverting bits small probability pm pm pm 
studies impressively clarified larger mutation rates decreasing course evolution helpful respect convergence reliability velocity genetic algorithm self adaptive mutation rates effective problems 
selection typically probabilistic operator relative fitness determine selection probability individual proportional selection method requires positive fitness values maximization task scaling functions utilized transform fitness values accordingly see pp 

iv 
evolutionary algorithm variants depending representational requirements problem domains handled variety variants evolutionary algorithms proposed constant development 
due space restrictions possible mention order genetic algorithms real coded genetic algorithms classifier systems genetic programming give brief statement domain application refer basic literature detailed see excellent overview 
order genetic algorithms searching space permutations ng ng binary representation canonical gas suited difficult map binary strings permutation integer values preserve permutations mutation crossover done see 
order gas directly permutation applying specialized recombination order crossover partially matched crossover mutation operators random exchanges elements permutation preserve permutations see pp 
overview 
real coded genetic algorithms evolutionary algorithms floating point representation search spaces ir called real coded gas 
evolution strategies genetic algorithms real coded gas typically techniques self adaptation utilize time decreasing step sizes change operator probabilities observed performance 
classifier systems classifier systems evolutionary algorithm search space production rules encoded strings ternary alphabet learning system capable induction generalization see chapter 
typically michigan approach pittsburgh approach distinguished individual corresponds rule rule system michigan approach complete rule base pittsburgh approach 
genetic programming genetic programming transfers paradigm evolutionary search space computer programs language suitable modification operators mutation recombination 
dominant approach genetic programming uses subset lisp programs search space programming languages including machine code see 
preceding section fairly brief overview current algorithmic instantiations general idea simulate processes natural evolution computer order solve search optimization problems variety application fields 
large success various different realizations evolutionary algorithms indicates underlying principles extremely general robust allowing search arbitrary search spaces nucleotide base sequences binary sequences real vectors permutations 
simultaneous search space object variables strategy parameters possible means evolutionary processes corresponding principle turns robust respect probability density function chosen mutation 
robustness observations straightforward ask general underlying principles evolutionary algorithms problems try derive corresponding design principles variation operators evolutionary algorithm 
concerning natural evolution neo darwinian paradigm asserts basic processes evolution reproduction mutation competition selection 
mutation guaranteed reproducing system positively entropic environment competition selection just consequences population expanding finite environment see chapter 
concerning mutation observed nature small changes phenotypes individuals behavior physical embodiment occur large changes property characterizes mutation process occurs level genotypes genetic information organisms means impact fitness individual 
consequently requirement strong causality fitness functions formulated rechenberg pp 
states small changes object variables cause small changes objective function value reflects principle natural evolution 
gives argument utilization normally distributed variations expectation zero evolution strategies evolutionary programming 
contrary mutation operator genetic algorithms continuous parameter optimization follow principle slight modification binary string cause large modification corresponding decoded object variable 
concerning selection dominant property consists favoring species survival evolution best adapted environment property certainly modeled evolutionary algorithms 
directed variant selection stabilizing selection individuals medium value certain biological trait preferred disruptive selection individuals covering extreme values biological trait preferred nature pp 
schemes transferred evolutionary algorithms far 
theoretical point view important goal formulate general design principles evolutionary algorithms variation operators order allow systematic development algorithms 
attempt formulate principles radcliffe surry generalize definition schemata binary strings arbitrary search spaces introducing called formae 
introduce recombination operators features claimed helpful evolutionary search 
basic properties introduced respect child contains alleles common parents transmission allele child parents assortment possible operator produce solution contains alleles parents 
concerning mutations emphasize property smaller mutations preferred larger ones 
basic properties variation operators classify existing operators different representations identify operators best suited search space 
results reported focused traveling salesman problem certainly interesting approach step general representation independent theory evolutionary algorithms 
looking back natural model ize clearly far potentially helpful features evolution evolutionary algorithms 
comparing natural evolution algorithms discussed immediately identify list important differences exploited obtain powerful search algorithms better understanding natural evolution ffl natural evolution works dynamically changing environmental conditions optima changing optimization criteria individuals changing structure adaptive landscape adaptation 
evolutionary algorithms environmental conditions static non elitist variants able deal changing environments 
certainly worthwhile consider flexible life span concept individuals evolutionary algorithms just extremes maximum life span generation strategy unlimited life span elitist strategy introducing aging parameter 
ffl long term goal evolution consists maintainance evolvability population guaranteed mutation diversity population term describes appropriately optimization adaptation 
contrast evolutionary algorithms aim finding precise solution converging solution 
ffl natural evolution criteria need met time evolutionary algorithms designed single fitness criteria see overview existing attempts apply evolutionary algorithms multiobjective optimization 
concepts combined dominance idea introducing different selection criteria helpful problems 
ffl natural evolution assumes global knowledge fitness values individuals generational synchronization evolutionary algorithms identify algorithm complete generation update 
fine grained asynchronously parallel variants evolutionary algorithms introducing local neighborhoods recombination selection time space organization cellular automata represent attempt overcome restrictions 
ffl recombination operator evolutionary algorithms implementations far realized real distinction different kinds helpful meeting different criteria different constraints 
ffl genotype phenotype mapping nature realized genetic code epigenetic apparatus evolved time mapping usually fixed evolutionary algorithms 
evolutionary genotype phenotype mapping powerful way search flexible starting coarse grained volume oriented search focusing promising regions search space evolution proceeds 
ffl topics multi ontogeny individuals development brains individual learning accounted baldwin effect evolution usually modeled evolutionary algorithms 
self adaptation strategy parameters just step direction realizing idea individual internal strategy deal environment 
strategy complex simple mutation parameters presently taken account evolution strategies evolutionary programming 
evolutionary techniques provide robust widely applicable technique problem solving inevitable necessity special tasks depending knowledge problem possible develop tailored solution technique actual problem cost certain development time 
certain rest problems specific method available domain evolutionary algorithms 
hand evolutionary phenomena exist nice understand evolution bit better currently 
consequently need models evolutionary processes evolutionary algorithms approximation models 
claim aspects evolutionary algorithms problem solving aspect aspect modeling natural evolution important considered worthwhile research leading powerful better characterized search algorithms better evolution 
author gratefully acknowledges financial support project ib german bmbf ministry 

indexed bibliography genetic algorithms years 
art cad espoo finland 
anderson 
genetic mechanisms underlying baldwin effect evident natural antibodies 
mcdonnell reynolds fogel editors proceedings fourth annual conference evolutionary programming pages 
mit press cambridge ma 
angeline 
effects noise self adaptive evolutionary optimization 
fogel angeline back editors proceedings fifth annual conference evolutionary programming 
mit press cambridge ma 
th 
back 
optimal mutation rates genetic search 
forrest editor proceedings fifth interna tional conference genetic algorithms pages 
morgan kaufmann san mateo ca 
th 
back 
evolutionary algorithms theory practice 
oxford university press new york 
th 
back 
evolutionary algorithms support water reactors 
proceedings third ieee conference evolutionary computation 
ieee press piscataway nj 
th 
back schutz 
intelligent mutation rate control canonical genetic algorithms 
ras editor proceedings ninth international symposium methodologies intelligent systems lecture notes computer science 
springer berlin 
th 
back 
schwefel 
evolution strategies variants computational implementation 
winter gal editors genetic algorithms engineering computer science chapter pages 
wiley chichester 
bean 
genetics random keys sequences optimization 
technical report department industrial operations engineering university michigan ann arbor mi 

beyer 
theory evolution strategies self adaptation 
evolutionary computation 
davis 
adapting operator probabilities genetic algorithms 
schaffer editor proceedings third international conference genetic algorithms pages 
morgan kaufmann publishers san mateo ca 
eshelman schaffer 
biases crossover landscape 
schaffer editor proceedings third international conference genetic algorithms pages 
morgan kaufmann publishers san mateo ca 
eshelman schaffer 
crossover niche 
forrest editor proceedings fifth international conference genetic algorithms pages 
morgan kaufmann publishers san mateo ca 
fogarty 
varying probability mutation genetic algorithm 
schaffer editor proceedings third international conference genetic algorithms pages 
morgan kaufmann publishers san mateo ca 
fogel 
evolving artificial intelligence 
phd thesis university california san diego ca 
fogel 
evolutionary computation new philosophy machine intelligence 
ieee press piscataway nj 
fogel 
autonomous automata 
industrial research 
fogel 
inductive inference automata 
proceedings international federation information processing congress pages munich 
fogel owens walsh 
artificial intelligence simulated evolution 
wiley new york 
fonseca fleming 
overview evolutionary algorithms multiobjective optimization 
evolutionary computation 

mit algorithmen 



birkhauser verlag basel 
fogel 
tuning evolutionary programming flexible molecular docking 
fogel angeline back editors proceedings fifth annual conference evolutionary programming 
mit press cambridge ma 
goldberg 
genetic algorithms search optimization machine learning 
addison wesley reading ma 
goldberg 
theory virtual alphabets 

schwefel manner editors parallel problem solving nature proceedings st workshop ppsn volume lecture notes computer science pages 
springer berlin 
holland 
outline logical theory adaptive systems 
journal association computing machinery 
holland 
adaptation natural artificial systems 
university michigan press ann arbor mi 
holland holyoak nisbett thagard 
induction processes inference learning discovery 
mit press cambridge ma 
de jong 
analysis behaviour class genetic adaptive systems 
phd thesis university michigan 
diss 
abstr 
int 
university microfilms 
de jong sarma 
generation gaps revisited 
whitley editor foundations genetic algorithms pages 
morgan kaufmann publishers san mateo ca 
kinnear editor 
advances genetic programming 
mit press cambridge ma 

schwefel 
phase nozzle hollow core jet experiments 
elliott editor proc 
th symp 
engineering aspects pages california institute technology pasadena ca march 
koza 
genetic programming programming computers means natural selection 
complex adaptive systems 
mit press cambridge ma 
kursawe 
variant evolution strategies vector optimization 

schwefel manner editors parallel problem solving nature proceedings st workshop ppsn volume lecture notes computer science pages 
springer berlin 
kursawe 
self adapting evolution strategies 
proceedings second ieee conference evolutionary computation pages 
ieee press piscataway nj 

evolution eines 
diplomarbeit technische universitat berlin 
mayr 
new philosophy biology observations 
press harvard university press cambridge ma london gb 
michalewicz 
genetic algorithms data structures evolution programs 
springer berlin 
muhlenbein 
genetic algorithms really mutation hillclimbing 
manner manderick editors parallel problem solving nature pages 
elsevier amsterdam 
radcliffe surry 
fitness variance formae performance prediction 
vose whitley editor foundations genetic algorithms pages 
morgan kaufmann publishers san francisco ca 
rechenberg 
cybernetic solution path experimental problem 
royal aircraft establishment library translation uk august 
rechenberg 
evolutionsstrategie optimierung technischer systeme nach prinzipien der biologischen evolution 
frommann holzboog stuttgart 
rechenberg 
evolutionsstrategie volume und 
frommann holzboog stuttgart 
rudolph 
correlated mutations evolution strategies 
manner manderick editors parallel problem solving nature pages 
elsevier amsterdam 
rudolph 
massively parallel simulated annealing relation evolutionary algorithms 
evolutionary computation 
rudolph 
cellular genetic algorithm self adjusting acceptance threshold 
proceedings iee ieee international conference genetic algorithms engineering systems innovations applications pages 
iee london 
saravanan 
learning strategy parameters evolutionary programming empirical study 
fogel editors proceedings third annual conference evolutionary programming 
world scientific singapore 
saravanan fogel 
evolving evolutionary programming 
proceedings ieee conference evolutionary computation volume pages 
ieee press piscataway nj 
saravanan fogel nelson 
comparison methods self adaptation evolutionary algorithms 
biosystems 
schaffer caruana eshelman das 
study control parameters affecting online performance genetic algorithms function optimization 
schaffer editor proceedings third international conference genetic algorithms pages 
morgan kaufmann publishers san mateo ca 

view adaptive landscape 

schwefel manner editors parallel problem solving nature proceedings st workshop ppsn volume lecture notes computer science pages 
springer berlin 

schwefel 
evolution als der forschung der 
diplomarbeit technische universitat berlin 

schwefel 
optimierung einer teil technischer bericht aeg berlin october 

schwefel 
numerische optimierung von computer modellen mittels der evolutionsstrategie volume interdisciplinary systems research 
birkhauser basel 

schwefel 
numerical optimization computer models 
wiley chichester 

schwefel 
evolution optimum seeking 
sixth generation computer technology series 
wiley new york 

schwefel rudolph 
contemporary evolution strategies 
mor moreno merelo editors advances artificial life 
third international conference artificial life volume lecture notes artificial intelligence pages 
springer berlin 
syswerda 
uniform crossover genetic algorithms 
schaffer editor proceedings third international conference genetic algorithms pages 
morgan kaufmann publishers san mateo ca 
torn 
global optimization volume lecture notes computer science 
springer berlin 
whitley 
genitor algorithm selection pressure rank allocation reproductive trials best 
schaffer editor proceedings third international conference genetic algorithms pages 
morgan kaufmann publishers san mateo ca 
wright 
genetic algorithms real parameter optimization 
rawlins editor foundations genetic algorithms pages 
morgan kaufmann publishers san mateo ca 

simple mutation dependent genetic algorithm 
forrest editor proceedings fifth international conference genetic algorithms page 
morgan kaufmann publishers san mateo ca 
