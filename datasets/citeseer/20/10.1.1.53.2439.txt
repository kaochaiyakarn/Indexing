copyright fl ieee 
see full copyright notice table contents 
skeme versatile secure key exchange mechanism internet hugo krawczyk ibm watson research center yorktown heights ny hugo watson ibm com secure versatile key exchange protocol key management internet 
skeme constitutes compact protocol supports variety realistic scenarios security models internet 
provides clear tradeoffs security performance required different scenarios incurring unnecessary system complexity 
protocol supports key exchange public key key distribution centers manual installation provides fast secure key refreshment 
addition skeme selectively provides perfect forward secrecy allows negotiation underlying cryptographic primitives addresses privacy issues anonymity 
need secure internet clear 
consequently mechanisms provide security different layers different applications developed 
common security mechanisms need key management 
crucial component key management exchange secret keys parties 
basic enabler conventional cryptography shared secret keys efficient security solutions rely 
presents design skeme key exchange mechanism provides scalability flexibility required growing internet diversity scenarios part 
accommodating variety scenarios requirements terms performance security simple compact protocol main challenge accomplishment skeme 
design skeme mainly motivated carried ipsec working group ietf internet engineering task force charge developing standard interoperable key management protocol internet 
protocol intended provide key management security protocols developed working group see provide key management solution security applications internet 
currently proposed mechanism key exchange working group protocol designed phil karn similar sts key exchange protocol diffie van oorschot wiener :10.1.1.59.6682
designed exchange key parties public key diffie hellman key exchange addresses issues anonymity denial service attacks :10.1.1.37.9720
skeme provides basic functionality accommodates trust models key distribution centers manual installation provides flexible tradeoffs security performance allows selective execution diffie hellman fast frequent key refreshment importantly added features require significant increase protocol complexity incur performance penalty 
aspects common skeme proposed replace merged order broaden strengthen functionality protocol 
protocol overview design rationale design skeme follows set requirements goals detail section 
briefly overview issues basic features skeme 
central approach skeme provide scalable flexible protocol capable accommodating realistic scenarios internet provide clear tradeoffs security performance 
basic model needs addressed public key model scalable minimal trust requirements 
basic mode skeme provides key exchange public keys parties strong security diffie hellman mechanism 
great advantage minimizing negative effects eventual exposure long lived keying material exposure private keys parties long lived master key 
property diffie hellman protocol referred perfect forward secrecy pfs :10.1.1.59.6682
skeme limit combination public key diffie hellman 
addresses additional needs key exchange previously shared key parties 
supports important realistic scenarios include manual key installation forms shared master keys 
furthermore accommodates key exchange key distribution center model known kerberos model parties share key commonly trusted center 
key authenticate diffie hellman exchange directly session key skeme achieves significant security improvement reducing trust required kdc 
skeme provides efficient key exchange mechanisms cases perfect forward secrecy property diffie hellman exchange relaxed saving significant computational cost associated mechanism 
cases include applications authenticity information confidentiality stake level secrecy required relatively low see section 
important goal skeme provide mode perform fast frequent key 
effect shortening lives cryptographic keys limiting damage potential key exposure 
results modes skeme 
basic mode provides public key key exchange pfs diffie hellman 

key exchange public keys performing diffie hellman algorithm 

key exchange previously shared key provision pfs 

fast re key mechanism efficient symmetric key techniques md 
modes folded single simple protocol small set messages defined set options compact representation 
skeme attractive system implementation point view 
basic technical observation design skeme rsa performance cost public key signatures similar public key encryption 
skeme deviates approach performing diffie hellman exchange authenticated digital signatures :10.1.1.59.6682
protocol goes share phase parties share key mutually encrypting half keys public key uses key authenticate diffie hellman exchange man middle attacks 
authentication utilizes efficient operations md 
way functionality diffie hellman obtained gets free computational cost share phase key shared parties 
allows option skipping diffie hellman phase providing mode skipping share phase omitting public keys exchange previously shared key parties mode 
skipping share phase diffie hellman phase fast re key mechanism obtained mode 
details see protocol description section 
addition skeme provides anonymity sense prevents unnecessary disclosure communicating identities strictly necessary ip addresses addresses privacy issues avoiding digital signatures allowing repudiation communication see section provides certain defenses denial service attacks adopting cookies technique 
related works cited literature contains protocols standards key management general key exchange mechanisms particular 
refer reader survey van oorschot key exchange mechanisms forthcoming book menezes van oorschot vanstone chapter 
mainly motivated activities carried ipsec working group ietf note suitability approach framework defined ieee 
skeme evolved extension modular key management protocol modular approach key management suggested specific module key refreshment shared key parties 
general skeme builds possible public key modes existing solid design analysis developed key exchange shared key model cf 

security analysis detailed formal security analysis skeme scope intended describe protocol design rationale 
completeness include informal outline proof security modes protocol 
base outline previous formal developed proving security key exchange mechanisms shared key model 
see section 
believe fact security skeme related protocols key model advantage skeme 
shared key model extensively studied consider simpler better understood analysis general public key case 
organization section describes main goals requirements standing design skeme 
section describes protocol 
section highlights main features skeme 
section argues security protocol 
section provides concluding remarks comparison 
note implementation presents basic design rationale protocol 
implementation protocol underway completed details implementation experience reported separate document 
goals requirements section list basic goals requirements design skeme 
intended exhaustive enumeration requirements key management emphasize basic properties required key exchange mechanism internet highlight main features protocol proposed 
requirements result numerous discussions carried ipsec working group ietf 
basic functionality key exchange mechanism provide communicating parties common shared secret key known parties 
think key master key session key depending life span key semantics application 
sake concreteness refer exchanged key session key 
variety scenarios security models demanding aspects security protocol intended global internet variety heterogeneity scenarios security models existing medium 
single model trust insufficient address needs key management internet 
protocol designed support variety models keeping system aspects protocol simple possible 
public key model 
case parties possess public keys protocol required establish shared secret key parties prior shared secret existed 
security protocol depend authenticity public keys 
trust authenticity general existence form certification mechanism range global certification authority local distributed trust pgp model manual distribution public keys possible 
advantage public key model minimal third party trust requirements fundamentally scalable model internet 
key distribution centers 
established extensively trust model key distribution center kdc 
model popularized kerberos protocol 
scalability capability public key model high level trust required communicating parties line kdc model ignored key management protocol internet due usefulness scenarios corporate world efficiency symmetric cryptography techniques existing extensive deployment 
designed key exchange protocol strongly improve security provided kdc model reducing level trust required kdc 
issue discussed section 
manual key installation 
primitive way install shared key parties manual installation common way install initial keys systems 
useful new scenarios created internet mobile user shares manually installed key office workstation firewall 
case key exchange protocol able periodic refreshment keys minimize security risk attached long lived master keys essential 
note basic difference public key case cases fact key exchange protocol starts shared secret key established parties 
periodic key exchange previously shared keys useful public key case allows efficient frequent key refreshment 
minimizes compromise keys cryptanalysis key information adversary breaking limits harm exposed key shortening useful life 
addition key refreshment minimize dependency past keys learned compromised key past keys 
basic requirements addition support different models briefly list properties skeme required support 
secrecy authenticity 
protocol needs guarantee executing parties intended party learns key exchanged key fresh unique 
secrecy authenticity exchanged key need protected passive eavesdroppers active man middle attackers properties guaranteed long underlying cryptographic functions encryption authentication secure adversaries 
value exchanged key protected partial information key hidden known public information key length additional security goal minimize negative effects compromised key 
keys may exposed regardless security key exchange protocol generates break ins system poor secure storage management 
mechanisms independence different keys system frequent refreshment perfect forward secrecy discussed address goal 
key refreshment 
key exchange protocol provide automatic mechanisms periodically refresh keys 
needs include low cost mechanisms frequent key updates say minutes costly secure ones frequent say hours 
different mechanisms differ performance cost degree independence refreshed key past keys 
periodic refreshment keys required limit damage caused exposed session keys reduce amount information giving away limited information key may severe security implications 
example consider case exchanged key time pad hide possible strings zeros string ones string may represent confidential information case single known bit key reveal encrypted message 
available cryptanalysis especially significant weak algorithms due performance crypto regulations restrictions 
perfect forward secrecy 
perfect forward secrecy denoted pfs central notion pertaining key exchange protocols 
refers property disclosure long term secret keying material compromise secrecy exchanged keys earlier runs 
:10.1.1.59.6682
property central role protocol extensively discussed section 
key separation 
different cryptographic functions different cryptographically independent keys exposure key compromise 
applies different functions key exchange protocol cryptographic functions applied data subsequent session 
particular careful re session key produced protocol key different functions 
example session key protocol key hash function say md key data encryption algorithm say des 
recommended way session key derive keys different cryptographic algorithms session key seed keys derived pseudorandom hash function keyed session key applied unique identifier algorithm 
privacy anonymity 
communication public open network internet requires hiding information exchanged communicating parties cases hiding identity communicating parties 
possible message carries delivery ip address intended internet host originator host identified information 
cases communicating parties typically initiator key exchange hidden temporary ip address traveling individual provided temporary address remote system 
case sole information origin ip address sufficient identify communicating party 
goal skeme protect identity attackers net 
forms privacy concerns exist protocol provide proofs party talking party real concern digital signatures authentication protocol 
see discussion issue section 
attacks 
complete elimination denial service attacks flooding host virtually impossible 
preventive measures alleviate problem 
case protocols involving public key operations opportunity attacks increased due high performance cost operations 
protocol adopt simple cookies technique introduced phil karn protocol order difficult adversary accomplish attack 
performance 
key exchange operations may strongly vary computation requirements depending trust model level security required compare md operation vs rsa signature protocol requires careful design provide flexible tradeoffs security performance 
different variants key refreshment mentioned example tradeoffs 
amount communication protocol performance parameter consider 
multiple security models 
protocol support variety existing widely security models manual key installation key distribution centers 
addition support public key key distribution model scale dimensions internet 
supported way manually installed certificates web trust la pgp global certification authorities 
issues discussed detail section 
algorithm independence 
protocol needs define underlying cryptographic primitives functional level encryption signature depend particular implementations des rsa 
specific realizations cryptographic primitives replaceable 
accommodate different choices different parties implement primitives importantly allow replacement algorithms case cryptanalysis finding new secure efficient algorithms 
preclude definition default algorithms may required interoperability 
related issue need include complete key management protocol negotiation mechanism parties agree particular security transforms options protocol 

reality existence regulations concerning import export cryptographic technology different countries needs taken consideration 
goal weaken protocol order case regulations design contain elements unreasonably weakened regulations 
example avoidance possible mandatory symmetric encryption protocol 
minimize protocol complexity 
set requirements especially need support different security models different tradeoffs security performance may easily lead complex protocol options message formats 
order acceptable widely deployed protocol needs keep low system complexity 
main challenge accomplishment skeme accommodates stated requirements small set defined options uniform message format different options compact representation 
discussion requirements requirements clear necessitate explanation understood controversial 
elaborate 
perfect forward secrecy pfs important goal security design especially key management limit harm caused exposure keys 
especially important long lived keys 
compromise single key exposes attacker traffic exchanged party say years key attractive target adversary major bottleneck system security 
far better design limit advantage attacker breaks key active impersonation attacks potential detected high 
key exchange mechanism protects short lived keys compromise case exposure long lived keys said provide perfect forward secrecy pfs :10.1.1.59.6682
example session keys exchanged party encrypted public key attacker breaks private key learn past session keys contrast diffie hellman algorithm key exchange private key sign exchange better level security achieved 
case attacker compromises private key able actively impersonate communications learn past communications ones attacker actively involved 
pfs general desirable property key exchange protocol 
computational cost achieve 
practically speaking currently solution provide property diffie hellman exchange different realizations finite fields elliptic curves requires long modular exponentiations party exchange done line 
due cost worthwhile asking pfs necessary cases scenarios 
answer 
pfs relates secrecy information 
applications authenticity secrecy goal 
example authentication header standard developed ietf intended provide authentication ip packets headers confidentiality 
server provides non confidential authenticated information authentication mechanism dispense secrecy pfs 
case unjustified overload server unnecessary effort performing diffie hellman key exchange may required information request 
services requiring authentication principle public key system achieve exchange including rsa 
require generation time rsa keys unacceptably expensive process 
confidentiality common file server authenticates files especially executables integrity web server providing non confidential information 
scenarios pfs may requirement include cases exchanged information encrypted confidentiality limited short period time timely financial information cases encryption weak performance level secrecy required low dns server encrypts responses sake anonymity 
skeme designed selectively provide pfs 
provides pfs part basic skeme protocol public key cases parties perform key exchange long term shared keys manually installed master key skip key derived long lived public keys 
furthermore skeme provide pfs case parties share common key key distribution center kdc 
case skeme derive session key parties diffie hellman exchange kdc provided key authentication 
compromise key provided kdc breaking kdc malicious insiders effect security information exchanged parties diffie hellman key may allow attacker mount limited active impersonation attacks 
contrast kdc provided key directly session key compromise expose attacker traffic session 
providing pfs case strongly enhances security reducing trust required parties kdc 
hand cases discussed expense diffie hellman exchange justified skeme provides option omitting mechanism providing parties secret shared key 
learn key protocol attacker need compromise private keys parties 
consider provision selective pfs important differentiating properties skeme relative proposed key exchange mechanisms 
privacy signatures natural approach design key exchange protocol public keys digital signatures authentication key exchange 
protocols :10.1.1.59.6682
point conflict signatures privacy requirements 
basic property digital signatures provide non repudiation signed information private key possession public key verify signer 
digital signatures useful scenarios raises fol term non repudiation necessarily imply legal liability just ability give third party strong evidence signed data originated signer 
lowing privacy concern 
key exchange parties required sign identity signature party having signature convince third party communicating provision proofs communication raise privacy concern serious disclosing identities network 
identities network eavesdropper provide convincing evidence third party saw identities 
provide evidence identities signed communicating parties 
signatures encrypted network recipient show communicating 
digital signatures key exchange protocol privacy protection requirement signatures sign identities 
prevent malicious party encoding name piece information signed party protocol 
encoding done seemingly random nonces case protocol signing diffie hellman exponents encoding done exponents 
addition signatures imposes need encrypt signatures transmission prevent adversary learning identity sender just checking signature consistent public key party 
better way deal issues completely avoid digital signatures protocol 
approach skeme 
protocol public key operations limited encryption decryption authentication information parties done symmetric key techniques provide complete authenticated information avoids need encrypt authentication 
alternative public key exchange protocols signatures see 
skeme protocol section skeme protocol basic phases messages 
description high level omits details order concentrate basic security structure protocol functionality provides 
introduce notation basic cryptographic functions underlying protocol 
basic protocol represents strongest mode provides full security strength 
additional modes skeme described basic protocol accommodated provide flexible security performance tradeoffs support diverse security scenarios 
full protocol modes combined single compact representation 
cryptographic primitives notation list basic cryptographic functions skeme 
assume familiarity reader basic functions concepts 
public key encryption specific algorithm specified assumed 
rsa el gamal encryption examples suitable algorithms 
rsa economic sense operation decryption involves long modular exponentiation encryption done modular multiplications 
assumption security encryption hides partial information encrypted data formally assume semantic security encryption function 
particular assumed encryption randomized sense message encrypted twice lead different encryptions 
rsa may achieved padding information random salt encryption securely encoding scheme proposed 
info denote public key encryption info public key party skeme uses diffie hellman key exchange algorithm :10.1.1.37.9720
simplicity notation denote diffie hellman exponents mod mod corresponds standard modulo prime number generator assumption protocol related special form 
general different primes generators different users diffie hellman structures elliptic curves 
simplicity omit mod notation 
skeme requires pseudorandom functions collections keyed functions des keyed md property output including individual bits predicted adversary possess key function 
functions formalized extend notion pseudorandom generators seen providing random access long pseudorandom string 
practice pseudorandom functions realizations des block cipher cryptosystems particular applied variable length input cbc mac modes keyed way hash functions keyed md 
important properties pseudorandom functions revealing result function set inputs reveal information value function different point serve secure mac message authentication codes 
functions skeme provide data authentication integrity generators keys 
denote pseudorandom function key fk practical terms think fk keyed md des cbc mac efficient compute 
need notation stands exchange algorithm provides perfect forward secrecy diffie hellman practical algorithm known see 
strong way hash function md sha 
parties protocol referred acts initiator identities protocol denoted id id respectively 
output protocol exchanged secret session key key denoted sk 
basic protocol phases basic phases protocol share exch auth 
basic phases way provides full security capability protocol 
includes sharing secret key public keys provision perfect forward secrecy 
call basic protocol 
show phases different parameters provide additional functionality tradeoffs protocol 
actual protocol messages different phases combined provide compact communication efficient scheme 
details omitted sake clarity presentation 
phase share intended establish key parties having public key 
phase authenticate parties shared key provides basic security level follows protocol assured shared key known anybody assurance knows key 
analogously really meaningful phase needs combined phases protocol 
share parties exchange half keys encrypted public key combine half keys hash function produce 
exclusive half keys hashing hashing provides opportunity arbitrarily influence key 
basic message structure share follows share ka kb ka kb anonymity initiator desired flow encrypt identity 
id ka id long particular includes public key certificate second key included encryption id transmitted encrypted second key symmetric encryption algorithm 
notice require symmetric encryption protocol 
done optionally security function hiding identity certificate 
stress values ka kb need chosen pseudo random values fresh run protocol 
phase exch exchange exponents 
notice phase independent share 
exch mod mod exponents computed offline party prior execution protocol 
authentication diffie hellman exchange accomplished phase auth uses shared key share authenticate diffie hellman exponents 
combination exch auth phases provides protocol strong perfect forward secrecy pfs requirement 
auth fk id id fk id id remember section fk represents pseudorandom function key function keyed md cbc mac provides functionality mac message authentication 
messages phase intended authenticate origin freshness values diffie hellman exponents 
phase completed parties assurance values chosen partner communication 
notice key shared share phase known assuming private keys compromised parties generated authenticated messages 
inclusion message serves authenticate came value message prove freshness message assuming freshly chosen included identities serve parties correct binding exchanged key identities 
second message security functionality relative computation session key session key sk key shared result protocol computed parties sk xy mod 
notice computation involves expensive line diffie alternative public key share phase long term diffie hellman public keys described 
case public key party form mod secret key 
key parties computed mod private keys respectively 
main drawback key remains unchanged long parties change public keys 
details public keys establish shared key see 
recommend hashing value xy mod purpose extracting randomness bits xy hellman computation completed protocol avoiding consequent delay protocol 
value sk key exchange protocol 
saves delay protocol caused computation 
authentication individual exponents guarantees authenticity uniqueness sk 
combining phases messages phases level flexibility ordering combination 
example ordering messages phase exch inverted case messages auth 
phase share assumed initiator message comes 
cases discussed order phases share exch reverted 
sake communication efficiency phases combined message described 
notice protocol represents opportunity adversary mount service attacks needs perform expensive operation public key decryption knows speaking authenticates 
order force decrypt adversary need perform expensive operation 
problem addressed protocol technique called cookies 
technique case requires performance cookies phase share phase 
incorporation protocol straightforward details omitted 
refer motivation description technique 
modes protocol said earlier distinguishing feature skeme capability provide different tradeoffs performance security required different security scenarios internet 
basic protocol described section provides general solution sense accommodates public key model general scalable model achieves perfect forward secrecy providing strongest level secrecy case key compromise 
section show natural variations modes basic protocol provide suitable level security scenarios secret key shared communicating parties scenarios requirement perfect forward secrecy relaxed high computational cost saved 
see figures combined pictorial representation modes 
methods possible including directly bits xy notice bits significant bit predictable possible method compute sk sk fk xy mod 
skeme pfs section different scenarios perfect forward secrecy pfs may requirement discussed 
mode skeme section intended provide key exchange functionality public keys parties paying high performance cost required achieve pfs 
mode takes advantage key shared share phase produce shared session key 
mode skeme derived basic protocol section modifying exch phase 
mode exch phase simply exchange nonces parties 
unstructured random numbers freshly generated parties sent diffie hellman exponents 
nonces typically implemented pseudorandom bit strings length 
resultant phases exch auth follow known techniques shared key model originated developed analyzed subsequent works especially 
exch auth phase modified accordingly replace respectively fk arguments 
auth fk id id fk id id way combination exch auth provides parties assurance key shared share phase known party talked correct party private key required decrypt corresponding ka kb 
nonces act challenges prove possession computation session key imagine output protocol session key sk shared parties protocol key function output session key giving away information sk outputting sk define sk fk arg arg value sent example assume key different protocol parties proves possession key sk just showing pair sk value key sk constitute time proof possession key doing sk insecure key exchange protocol provides pair 
ida ka ka kb kb fk idb ida delta ka kb fk ida idb sk xy mod skeme public keys pfs message phase auth arg fk id id 
properties pseudorandom functions value fk arg computationally independent value output fk protocol provides information adversary value sk 
notice order find sk mode skeme adversary needs actively impersonate parties may succeed attacker possesses private key party able learn watching communication protocol 
requires knowing private keys parties order decrypt ka kb notice passive attacker eavesdropper knowing private keys sufficient 
provide pfs mode protocol provides significant level security incurring expense diffie hellman exchange 
pre shared key pfs mode protocol assumes parties share secret key key order derive new fresh key discussed section previously shared key come key distribution center manually installed key long lived shared master key 
mode provides perfect forward secrecy pfs ensuring parties compromise pre shared key expose traffic encrypted keys derived exchanged session keys 
mode skeme share phase skipped pre shared key modification basic protocol section required 
computation session key computation identical basic protocol sk xy mod 
fast re key fastest mode skeme 
intended provide frequent key refreshment going expensive operations public key diffie hellman computations 
involves fast operations md 
assumes parties share key previous round protocol key exchange new 
newly exchanged session key sk property exposure expose prior keys eventual exposure compromise session keys exchanged mode due lack pfs 
mode share phase omitted exch auth phases run section exchanging nonces diffie hellman exponents 
resultant fast re key protocol follows authentication key exchange techniques symmetric key cryptography 
computation session key computation sk identical section sk fk arg arg fk id id value sent message phase auth 
combined protocol having described modes skeme complete protocol modes combined uniform compact format 
combined protocol shown derivation different modes skeme summarized table 
inclusion square brackets public key encryption pieces done stress elements omitted modes protocol 
shows information mode name public key encryption performed particular mode assumes existence public keys parties diffie hellman performed providing pfs mode dependent values value value sk 
notice modes protocol depend selection perform expensive operations required public keys encryption provide pfs diffie hellman 
illustrates different modes implemented uniform set messages 
notice message field carry nonce diffie hellman exponent depending mode 
fields need case length variable diffie hellman exponents may different lengths required cryptographic strength 
fields carrying public key encryption included omitted mode omitted considered zero length field 
agreement mode protocol part negotiation parties includes negotiation specific security transforms 
implementation details omitted including system issues exact formats acks retransmission security association identifiers cryptographic issues line line computation pseudorandom generation format public key encryption derivation multiple keys 
details negotiation modes options specific cryptographic primitives omitted 
scope focuses basic design issues rationale 
stress security design complete sound treatment fault tolerance error handling issues 
address aspects reporting implementation 
implementation details common similar protocol dealt 
summary main features skeme designed achieve requirements listed discussed section 
particular provide support different security scenarios allow flexible tradeoffs security performance maintaining system complexity simple possible 
section briefly summarize features combination differentiates skeme proposed protocols notably sts protocols 
see sections details features 
public key key exchange 
provides key exchange public keys pfs 
case eavesdropper learn exchanged key knows private keys parties 
requires compromise private keys order learn exchanged session key 
active impersonation party protocol possible adversary possesses private key party 
support manual installation long lived master keys 
supports key exchange previously shared key parties 
provides pfs exchange order protect information disclosure case exposure long lived key 
key exchange kdc model 
keys exchanged common key distributed parties kdc 
security kdc model enhanced provision pfs key exchange see section 
security 
skeme designed provide protection passive active adversaries including manin middle replay attacks authentication fresh randomness key exchange limit damage exposed keys 
session keys leak information session keys virtue pseudorandom functions derivation keys effect compromised private key limited 
compromise allow attacker actively impersonate compromised party allow attacker learn past keys 
parties perform public key exchange pfs adversary needs know parties private keys learn keys 
exchange includes pfs way attacker learn key actively impersonating compromised party exchange 
security features anonymity privacy key separation discussed sequel 
see section security analysis skeme 
selective pfs 
perfect forward secrecy exchange provided part basic protocol 
optionally omitted scenarios cost functionality justified see section 
fast re key 
fast re key mechanism symmetric cryptography provided intended frequent refreshment session keys order shorten key lives 
performance 
basic mode skeme provides best security functionality expensive mode protocol 
rsa public key encryption involves party long exponentiation decryption exponentiations line diffie hellman 
pre shared key modes public key decryption operations saved share mode pfs exponentiations party diffie hellman saved 
fastest mode fast re key involves symmetric key operation md 
stress cost diffie hellman exchange reduced short exponents 
mod implementations recommend bare minimum bits exponents values description preferably bits notice skeme computation xy performed completed protocol value protocol computation sk 
avoids delays protocol messages due long computation preventive measure partners communication short exponents fact hard detect skeme key derived share phase encrypt diffie hellman exchange cf 

stress contrast protocols ida ka kb fk idb ida delta arg fk ida idb combined skeme protocol mode pk dh value value sk comments basic protocol ka kb xy pk pfs full strength see fig 
share ka kb fk arg dh pfs pfs pre shared pre shared xy omit pk key input protocol kerberos pfs fast re key pre shared fk arg md input protocol pk dh skeme modes key separation 
skeme carefully designed key separation principle see section 
sk protocol 
protocol key function cases produced share phase know won protocol 
modes input protocol pre shared mode fast re key implementation careful key outside protocol keying function 
satisfied freshly distributed kdc key solely consecutive runs fast re key protocol 
key sk recommend directly key cryptographic algorithm applied data session sk derive independent keys different algorithms session 
example key des cbc required key derived des cbc id des cbc id stands unique identifier algorithm 
note ways derive variable number security functional reason skeme prove possession session key parties protocol 
possession implicitly guaranteed successful completion protocol 
key bits pseudorandom keyed hash functions 
details scope 
anonymity 
initiator protocol may hide identity mandatory plain information ip address insufficient identify 
feature achieved natural way encrypting identity message half key exchange 
property provided key exchange previously shared keys cases sending parties identities unnecessary parties identify ip addresses previously exchanged security association identifiers 
identification receiver disclosed protocol necessarily transmitted plain information ip address 
signature property 
protocol digital signatures 
avoids privacy issues need encrypt signatures anonymity importantly avoids providing forced proofs communication parties see section 
notice authentication carried skeme mac pseudorandom functions provides useful proof communication third parties 
denial service attacks 
potential attacks alleviated cookies technique 
symmetric encryption 
requirement symmetric encryption inside protocol 
may optionally provide anonymity case transmits public key certificate message protocol security implications 
public key encryption 
protocol uses public key encryption allow key exchange recurring diffie hellman costly algorithm 
replacement signatures running diffie hellman case key exchanged encryption purpose authentication 
note public key encryption regulated countries 
generally allowed purpose key distribution subject similar restrictions diffie hellman exchange 
note security enhanced periodically public key encryption keys self certifying long term certified signature key 
algorithm independence 
protocol requires cryptographic primitives depend specific implementation primitives basic requirements functions specified section 
protocol complexity 
spite broad functionality provides protocol simple compact form 
different modes supported small uniform set messages 
security analysis concentrates description protocol requirements detailed security analysis brief arguments supporting security skeme 
line analysis generic security requirements underlying cryptographic functions specific implementations functions 
way achieve true algorithm independence 
need argue security modes skeme 
fast re key mode section follows understood analyzed protocols 
particular bellare rogaway see protocol contains rigorous proof security directly applicable mode skeme 
follows mode secure secrecy authenticity long underlying cryptographic primitives secure sense defined section 
argue analysis adapted prove mode skeme section parties share key prior protocol key authenticate diffie hellman exchange 
protocol mapped protocols analyzed considering diffie hellman exponents nonces protocol 
generating session key sk xy applying pseudorandom function fk xy extension analysis straightforward 
suggestion lines 
problem modify description protocol fk 
hand proof extended case sk xy assume conjecture unpredictability xy conjecture required anyway claim perfect forward secrecy basic diffie hellman exchange 
modes skeme related 
difference assuming pre shared secret key parties skeme generates key share phase 
phase guarantee parties know key ka kb execution share parties 
implied security encryption function pke 
premise known anybody basis proof case pre shared key holds 
stress successful run auth phase serves confirmation learned key share phase 
clearly informal argument 
formalizing ideas requires extending definitions security shared key model public key 
definitions formal proof show adversary break security protocol impersonation learning information key transformed adversary able break underlying cryptographic functions public key encryption pseudorandom function 
security skeme follow security cryptographic primitives 
note assumed part analysis public diffie hellman exponents exchanged parties seen nonces 
assumes public exponents unique exchange 
desirable perfect forward secrecy property diffie hellman exchange calls destruction secret exponent say immediately diffie hellman key computed 
suggested party reuse secret public exponent different exchanges relatively short period time say minutes 
reason reuse amortize cost computing exponentiation mod exchanges 
suggest strategy implementation wants achieve savings 
periodically generate mod new say minutes mod public exponent exchange period mod second mod third 
new public exponent sequence costs single modular multiplication results fresh value nonce sake authentication 
parties perform successive exchanges short period time guaranteed way compute different diffie hellman keys completely different session keys computed hash value different diffie hellman keys 
concluding remarks secure versatile protocol key exchange suitable support wide variety scenarios security models security performance tradeoffs detailed discussion security requirements protocol 
main motivation ongoing effort internet community key management mechanisms support secure ip internet protocol applicability environments framework ieee security protocols 
protocol similarities important differences developed ipsec working group ietf purpose 
protocols provide basis authenticated diffie hellman exchange public key 
performing diffie hellman exchange authenticating digital signatures similarly sts protocol :10.1.1.59.6682
skeme uses public key encryption exchange time key uses shared key techniques authenticate diffie hellman exchange 
important advantage skeme approach allows selective performance expensive diffie hellman operations 
skeme skip diffie hellman phase key exchanged parties possible 
originally designed functionality mind skeme 
main motivations developing skeme basic ideas author ipsec working group promote addition protocol elements 
elements include support models mainly manual installation key distribution centers performance cheap frequent re key operations fast symmetric key techniques 
support aspects added 
benefited adoption specific mechanisms provided skeme key modes including fast re key mechanisms follow known analyzed techniques previous works 
addition support selective diffie hellman performance strongly recommended 
advantages skeme include provision anonymity mechanism require encryption secure active attackers uses encryption hide signatures relies non authenticated diffie hellman derive key encryption dispensing digital signatures resolving privacy issues raised signatures freeing protocol delays introduced costly computation key skeme complete computation protocol execution uses key protocol 
addition believe skeme better suited security analysis current analysis techniques especially analysis skeme strongly related analysis developed key protocols see section 
stress skeme readily conjunction skip protocol proposed context ipsec working group 
uses long term diffie hellman public keys derive long term shared keys parties 
shared keys skeme key cached re computed diffie hellman public keys 
provide skip security functionality lacks especially perfect forward secrecy frequent interactive key refreshment 
acknowledgment pau chen cheng juan garay amir herzberg fruitful discussions ip security key management 
follow joint protocol 
am particularly indebted pau chen ongoing implementation skeme 
shai halevi paul van oorschot david wagner excellent comments earlier versions course carry full responsibility faults 
program committee isoc thorough review 
atkinson security architecture internet protocol rfc august 
atkinson ip authentication header rfc august 
aziz simple key management internet protocols skip internet draft draft aziz skip txt september progress 
bellare rogaway entity authentication key distribution advances cryptology crypto lecture notes computer science vol 
stinson ed springer verlag pp 

full version available authors www cse ucsd edu users mihir 
bellare rogaway distributing keys perfect forward secrecy manuscript jan 
bellare rogaway optimal asymmetric encryption encrypt rsa advances cryptology eurocrypt proceedings lecture notes computer science vol 
de santis ed springer verlag 
bellovin merritt encrypted key exchange password protocols secure dictionary attacks proc 
ieee computer society symposium research security privacy oakland may pp 

bird gopal herzberg janson kutten molva yung 
systematic design family attack resistant authentication protocols ieee journal selected areas communications special issue secure communications june 
cheng garay herzberg krawczyk design implementation modular key management protocol ip secure tunnel aix proc 
th usenix unix security salt lake city available ftp site software watson ibm com pub security usenix ps 
diffie hellman new directions cryptography ieee trans :10.1.1.37.9720
info 
theory pp 

diffie van wiener authentication authenticated key exchanges designs codes cryptography kluwer academic publishers pp :10.1.1.59.6682

goldreich goldwasser micali construct random functions journal acm vol 

goldwasser micali probabilistic encryption jcss vol 
pp 

gunther identity key exchange protocol advances cryptology eurocrypt lecture notes computer science vol 
springer verlag pp 

ieee interoperable lan man security clause key management protocol draft march 
iso iec entity authentication mechanisms part entity authentication asymmetric techniques 
karn simpson session key management protocol internet draft draft ietf ipsec txt september 
menezes van oorschot vanstone handbook applied cryptography crc press boca raton florida appear 
needham schroeder encryption authentication large networks computers comm 
acm pp 

neuman ts 
kerberos authentication service computer networks ieee communications 
sept 
nii isi edu publications kerberos neuman tso html 
van oorschot modern key agreement techniques computer communications pp 

zimmermann pgp user guide 
boulder 
