web coordinate distributed applications ciancarini dept computer science univ bologna zamboni bologna italy ciancarini cs unibo www cs unibo tolksdorf technische universitat fachbereich informatik 
fr 
berlin germany tolksdorf cs tu berlin de www cs tu berlin de original web middleware provide support multiuser applications groupware workflow basic nature passive information system 
fact activity tied server machines able execute code cgi mechanism 
enhanced web browsers supporting applet scripting languages java allow activity user interface 
integrated middleware coordinate activities tied multiple distributed clients 
coordination centralized server users participating application connect 
activity located browser really application distributed applets browser connect applets providing services directly 
instance think service play chess poker www remote players 
java enabled browsers easily build user interfaces including interactive chessboard services text messaging system 
coordinate game internet java programmer sockets transmit data synchronizing events 
low level approach subject variety design implementation errors 
order solve class problems simplify design implementation distributed applications web architecture pagespace software platform extending java coordination technology 
pagespace introduces notion active objects agents able provide services agents requiring centralized coordination servers 
distributed applications involve heterogeneous machine network operating system architectures 
coordinating agents environments means heterogeneities transparent programmer 
pagespace transparency network heterogeneity achieved internet middleware underlying communication platform 
transparency different hardware architecture operating systems provided java 
pagespace built set existing technologies coordination technology provides conceptual platform coordination activities asynchronously working collaborating agents 
coordination technology initiated language linda 
linda minimalistic language includes small number constructs need integrated conventional language get complete language distributed programming 
basic conception uncoupled coordination implicit linda studied large variety research projects focusing parallel distributed open distributed systems theoretical foundations giving semantics coordination languages number implementation oriented research concerning embedding coordination languages efficient implementation 
sample current researches see 
web technology provides wide spread communication presentation platform pagespace 
browsers allow access pagespace html uniform graphical interface applications defined 
java technology provides uniform processing platform 
java popularized integration standard web browsers available major hardware platforms 
pagespace integrates basic building blocks adds value 
pagespace uses java implementation language platform application programming language enhanced high level coordination support distributed concurrent agents java 
pagespace adds value underlying building blocks integrating manner extensive reuse combination existing wide spread complementary technologies leads platform aims supporting real life applications 
guideline add coordinating glue bind technologies extending individually 
pagespace architecture identified centralized nature current web major drawback actual processing application tied server machine 
conversely java applications 
scarce integration activities client applications server 
advanced distributed applications internet www static access mechanism existing external environment 
dce components corba objects dbms applications 
important forget designing especially distributed applications difficult 
users sophisticated difficulties understanding intricacies distributed applications 
necessary explore new approaches design applications 
believe technology coordination languages models help simplifying task 
pagespace architecture developing distributes activities incorporating coordination technology applications 
conceptually pagespace message repository environment agents activities 
agents pagespace pagespace populated agents 
concerned application specific tasks 
fig shows architecture pagespace 
distinguish entities pagespace denoted different greek letter ff alpha agent interface users connect pagespace 
located inside browser client connects pagespace 
instance alpha java enabled browser applets running connect pagespace 
pagespace corba machine machine inter machine communication external communication coordination primitive pagespace architecture fi beta agent broker user representative pagespace 
requests services behalf user independent user alpha 
persistent 
fl gamma coordination environment provides glue enables agents coordinate linda communication synchronization primitives complex coordination protocols 
instance experiments different coordination models shade paradise laura 
ffi delta agent implements application part distributed application 
instance coordination typical chess game moves time management implemented specialized deltas 
delta agents offer ask services agents 
active processes distributed pagespace 
ffl epsilon agent process implementing gamma environment workstation 
exactly epsilon agent resides machine pagespace 
offers services deltas requiring knowledge location privileges ability create delta 
instance jvm augmented linda primitives seen specific epsilon implementing gamma environment 
zeta interoperability broker gateway 
zeta gateways integrate services provided coordination services distributed objects platforms corba dce 
way wrap legacy application pagespace 
chosen way presenting pagespace architecture needed neutral names identify components partially thought organized stack services 
neutral intend instance java independent fact number alternative internet languages coming 
inferno bell labs intend pagespace concept independent 
alpha interface connects associated beta broker agent 
carries interactions gamma coordination space application specific delta agents behalf user 
provide special services deltas mainly location dependent 
agents coordination primitives provided gamma environment 
zeta provides gateway worlds corba world 
agents possibly alphas programmed java special classes executed byte code java virtual machines 
beta broker expect user access pagespace www browser 
way www browser called www environment protocol directional subject initiative client 
considered positive allows human users maintain control interaction leave autonomous free coming going doing things time 
role beta broker software agent acts behalf human user pagespace single access point shared environment 
delta agents supposing independent applications run pagespace 
instance players playing poker part distributed auction 
pagespace agents interact user interface transported alpha 
autonomously interacting agents part applications called delta agents reside constantly pagespace provide application specific services 
instance exist poker agent player indirectly connected human user beta alpha coordinating agents order play game 
software agent assumed reliably accessible agents length game user come go leisure 
deltas exhibit varying degree autonomy responding agents requests absence human master 
response range simple master respond complex autonomous behavior 
instance user instruct auction agent wait object interested offered perform offers dollars higher current level maximum price dollars reached leave 
communication delta agents betas uses coordination technology pagespace 
messages exchanged mechanism shared information space 
protocol application specific poker agent speak poker game protocol chess delta speaks chess protocol requesting providing poker chess services 
addition application specific messages basic set common services defined deltas telling location 
epsilon agents gamma coordination space agents administrative tasks 
able privileged things prohibited delta betas 
machine belonging pagespace exactly epsilon agent constantly running 
epsilon faces 
hand offers set common privileged services deltas betas start delta state delta brute force keep log started deltas store checkpoints delta states tell deltas location initiate move delta machine 
addition epsilon implements stages coordination structure call gamma environment 
concepts linda 
role epsilon central architecture 
implementation goes far just providing common services 
epsilon responsible manage beta user brokers just web server manages homepages 
order provide access mechanism betas epsilon includes server 
epsilon includes mechanisms concerning coordination platform 
mobility pagespace agents delta delta protocol pagespace location independent agents addressed associatively name 
delta epsilon protocol implicitly location dependent addresses single epsilon agent located delta agent 
order move agent way express destination location agent 
agent able ask current location 
achieved simple service epsilon agents allowing delta communicate location agents 
situations may trigger move agent different machine 
agent reason move 
agent able perform reflection effectiveness current location respect anticipated communication computation demands 
agent observation state current location example leave heavily loaded machine 

agent reason ask agent move 
example agent enters game sequence interactions participating agents anticipated 
agents decide ask new agent join specific machine 

agent appropriate authority force agent move 
due critical situation heavy workload policy applied machine mainly intended weather forecasting 
poker agents please leave immediately 
agent knows move initiate move 
move comprises issues removing agent old location transferring agent starting agent new location 
architecture move transfer state handled epsilon agents 
delta agent uses service epsilon 
epsilon turn invokes remote epsilon restarts moved delta agent initializes state 
protocol emphasizes role epsilon agent able address agent specific location 
epsilon agent hold byte code delta agent 
combining existing technologies www java coordination technology possible build flexible platform support open distributed applications 
necessary mechanisms turn simple require extensions building blocks 
protocols needed simple scalable 
pagespace adds value building blocks providing highly coordination mechanism development open distributed applications 
theme building distributed applications www gaining momentum 
www conference paris papers discussed variety approaches accomplish goal 
point view interesting approaches enhance web coordination technology instance 
web accessible interface local linda tuple space uses local linda coordination browser helper applications 
pagespace approach different coordination technology build distributed applications 
pagespace currently development information www cs tu berlin de 
pagespace supported eu esprit open ltr project 
arnold gosling 
java programming language 
addison wesley 
brown najork 
distributed active objects 
computer isdn systems 
carriero gelernter 
coordination languages significance 
communications acm february 
castellani ciancarini rossi 
shape shade coordination system 
technical report ublcs dipartimento di scienze dell informazione universit di bologna italy march 
ciancarini hankin editors 
st int 
conf 
coordination languages models coordination volume lecture notes computer science italy april 
springerverlag berlin 
ciancarini rossi 
jada coordination toolkit java 
technical report ublcs dipartimento di scienze dell informazione universit di bologna italy may 
kaiser 
www access legacy client server applications 
computer isdn systems 
duan 
distributed database access corporate environment java 
computer isdn systems 
nicol 
orchestration service www browsers accessories 
proc 
nd int 
world wide web conference chicago il december 

www meets linda 
proc 
th int 
world wide web conference pages boston ma december 
scientific computing associates new haven ct paradise 
manual 
tolksdorf 
coordinating services open distributed systems laura 
ciancarini hankin editors proc 
st int 
conf 
coordination models languages volume lecture notes computer science pages italy april 
springer verlag berlin 
trevor bentley 
daemons modular approach deploying applications web 
computer isdn systems 
