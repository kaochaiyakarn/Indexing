interval analysis computer graphics john snyder california institute technology pasadena ca discusses interval analysis solve wide variety problems computer graphics 
problems include ray tracing interference detection polygonal decomposition parametric surfaces csg solids bounded parametric surfaces 
basic algorithms required solve computes solutions system constraints minimize computes global minimum function subject system constraints 
algorithms solve minimize interval analysis conceptual framework 
crucial technique creation inclusion functions constraint function minimized 
inclusion functions compute bound range function similar bound domain allowing branch bound approach constraint solution constrained minimization 
inclusion functions allow minimize algorithm compute global local minima numerical algorithms 
theoretical results regarding existence uniqueness roots nonlinear equations global implicitly described manifolds 
illustrate power approach basic algorithms developed new algorithm approximation implicit curves 
cr categories computer graphics computational geometry object modeling mathematical software reliability robustness additional key words constraint solution constrained minimization interval analysis inclusion function approximation implicit curve interval analysis new promising branch applied mathematics 
general treatment moor moor moore originator field 
main benefit interval analysis solve problems results guaranteed correct computed finitely precise floating point operations 
accomplished inclusion functions compute bounds functions relevant problem controlling approximation errors 
application interval methods computer graphics new applied limited class computer graphics problems 
algorithm parametric surfaces interval arithmetic 
suggest utility methods operations geometric modeling 
toth toth demonstrated usefulness interval methods direct ray tracing general parametric surfaces 
interval methods error bounding computing topological properties polyhedra contouring functions rendering implicit surfaces suff ray tracing implicit surfaces 
researchers lipschitz bounds special case interval method algorithms approximate parametric surfaces compute collisions time dependent parametric surfaces ray trace implicit surfaces 
extends researchers showing general set problems computer graphics solved algorithms employ interval analysis constraint solution solve constrained minimization minimize 
ideas borrowed area interval analysis rats new computer graphics 
ideas include actual algorithms solve section minimize section robust test solution nonlinear systems equations section 
section presents background information necessary understanding ideas 
techniques described section presents new robust algorithm approximation implicit curves important algorithm shape modeling operations csg 
problem definition solve minimize solve computes solutions constraint problem seeks points domain ae satisfy logical combination equalities inequalities 
seeks set solve fx represents constraint solved 
example may simultaneous satisfaction constraints 

scalar functions called constraint functionals assumed continuous 
related constraint problem call constrained partitioning problem seeks partition domain collection hyper rectangles fr partition satisfies set constraint 
set constraint mapping hyper rectangle 
example parametric surface ae define distance function surface maximum distance surface points mapped rg useful set constraint surface approximation problem ffl requires points farther apart ffl 
constrained partitioning problem combined constraint problem order partition constraint problem solution set 
show solve applied constrained partitioning problem 
assume domain problems hyper rectangle called vector valued interval section 
sup denotes supremum upper bound set 
minimize computes solutions constrained minimization problem seeks global minima scalar function called objective function points domain satisfy system constraints 
possible solutions may required minimum value objective function minimum inf ff set global minimizers minimizers fx minimum note minimum operator defined feasible set constraint system nonempty 
assume continuity objective function constraint functionals involved definition 
compactness guarantees minimizers operator defined feasible set nonempty 
term global problem constraint problem constrained partitioning problem constrained minimization problem 
solve minimize computer graphics solve minimize applied wide variety problems rendering geometric modeling 
shall describe important means exhaustive set examples paragraphs 
applications algorithms computer graphics include scan conversion parametric surfaces parametric implicit representation conversion selection feasible optimal parameters parameterized shapes computation geometric queries point enclosure 
ray tracing ray tracing parametric surface involves minimization problem space 
origin direction respectively ray 
toth find intersection ray may solve minimum objective function minf constraint function ray tracing implicit surfaces accomplished similar minimization problem 
polygonal decomposition approximating shape curve surface collection simple pieces fundamental operation computer graphics 
example may wish produce collection triangles approximate parametric surface error tolerance 
approximation accomplished constrained partitioning set constraint formula 
resultant partition set triangles formed joining partition corner vertices vertices highly subdivided neighbor partitions 
collection triangles approximates surface deviating distance ffl 
set constraints defined bound partition surface area maximum variation surface normal function surface 
compares polygonal decomposition set constraints simple uniform sampling 
interference detection parametric surfaces respective domains 
compute surfaces intersect constraint problem appropriate solve inf denotes infimum greatest lower bound set 
ray direction components equal corresponding quotient taken ignored min 
approximating surface triangular mesh surface parameter space broken rectangles satisfies set constraint controlling approximation quality 
collection triangles generated connecting points corners rectangle neighbors 
case evaluation points intersection unnecessary need compute feasible set empty 
similar constraint problems solved determine moving surfaces intersect solving constraint problem time dependent surfaces 
related problem determine minimum distance parametric surfaces may expressed unconstrained minimization problem minimum ks shows results unconstrained minimization problem compute minimum distance parametric surfaces 
csg computing csg operations solids represented parametric surface boundaries involves computing curve intersection pairs parametric surfaces 
resulting curve projected respective parameter spaces surfaces perform trimming operations 
curve intersection implicit curve solving system equations variables form solve intersecting parametric surfaces 
problem similar interference detection approximation solution desired mere indication solution existence 
approximation computed algorithm section built solve algorithm 
shows results csg operations computed way 
inclusion functions interval analysis approach solving global problems works recursively subdividing initial hyper rectangle parameter space global problem 
inclusion functions test particular region satisfies constraints constraint minimization problems contains points small value objective function minimization problem satisfies set constraint partitioning problem computing bound function region 
example test region includes solution equation inclusion function evaluated region resulting bound contain may rejected 
section defines inclusion functions precisely discusses properties explains may implemented 
terminology definitions interval subset defined fx rg numbers called bounds interval called lower bound written lb upper bound written ub 
symbol denotes set intervals 
vector valued interval dimension 
subset defined fx 
ng example vector valued interval dimension represents rectangle plane vector valued interval dimension represents brick space 
interval component vector valued interval called coordinate interval symbol denotes set vector valued intervals dimension term interval refer intervals vector valued intervals distinction clear context 
width interval written defined similarly width vector valued interval defined max subset defined set intervals subsets fy dg function 
inclusion function written function words vector valued interval bound range vector valued interval bound domain 
possible inclusion functions may defined function having different properties 
example inclusion function called convergent note continuous inclusion function convergent 
inclusion functions arithmetic operators see inclusion functions evaluated computer consider functions defined arithmetic operations 
functions inclusion functions evaluated interval interval bounds bound arithmetic combination represents addition subtraction multiplication division 
bound may computed bounding set defined 
fx 
bounded interval known technique interval arithmetic defines operators rules min ac ad bc bd max ac ad bc bd min max provided inclusion functions defined rely infinitely precise representation real numbers arithmetic operations 
perform interval analysis computer interval approximated machine interval am containing members machine set floating point numbers 
assume inclusion function constructed producing interval denotes hardware addition operator 
addition rounding errors may lower bound problem solved machines conform ieee floating point standard round mode computation interval lower bounds round mode interval upper bounds 
natural interval extensions clear interval bounds previous section recursively applied yield inclusion function arbitrary nested combination arithmetic operators set functions known inclusion functions 
example inclusion function furthermore notion extended non arithmetic operators 
operator 
produces function simpler functions define method evaluates inclusion function depending interval results inclusion functions functions defined domain 
inclusion function 


generalization equation set operators 
inclusion function evaluated function formed composition 
inclusion functions constructed way called natural interval extensions 
construction operator inclusion function method may difficult operator monotonicity intervals known 
example inclusion function evaluation method defined cosine operator observation cosine function monotonically decreasing interval monotonically increasing interval integer function inclusion functions evaluated interval yielding interval 
inclusion function cos evaluated rules cos max cos cos mod min cos cos mod min cos cos max cos cos numerical cosine evaluations implied min cos cos example computed lower bound theoretical result 
similar inclusion functions constructed operators sine square root exponential logarithm 
inclusion functions vector matrix operations easy construct 
example inclusion function method dot product operator defined 
similarly interval arithmetic define inclusion function methods matrix multiply inverse determinant operators vector operators addition subtraction length scaling cross product 
inclusion functions relational logical operators inclusion functions defined relational logical operators allowing natural interval extensions functions constraints 
relational operator produces result set false true 
operators equal equal greater equal binary relational operators 
inclusion functions relational operator easily defined 
functions inclusion functions 
logical operators combine results relational operators boolean expressions 
inclusion functions easily defined 
example relational functions corresponding inclusion functions inclusion function logical relations mean value forms differentiable function parameters 
xm inclusion function called mean value form constructed follows inclusion function jacobian matrix formula represents valid inclusion function immediate consequence taylor theorem 
mean value form useful property certain conditions resulting bound quadratically converges ideally tight bound width shrinks krawczyk nickel formal statement proof see 
note addition subtraction matrix vector multiplication operations implied definition computed interval arithmetic 
ensuing treatment interval analysis drop subscripts interval arithmetic operations clear context standard operations interval analogs meant 
idea mean value form generalized produce inclusion functions incorporate terms function taylor expansion called taylor forms 
related inclusion function called defined inclusion functions partial derivatives moor 
testing derivatives exclude function monotonic respect parameter tight bounds produced 
mean value forms defined functions piecewise differentiable see rats 
solving global problems constraint solution algorithm system constraints represented function returns constraints satisfied 
function incorporate equality inequality constraints represented relational logical operators inclusion functions examined section 
discussed section inclusion function region ae take possible values infeasible region noted implement mean value form computer interval replace 
computer exactly compute bound result 
indeterminate region feasible region infeasible region region point solves constraint system 
feasible region region point solves constraint system 
indeterminate region region constraint system may may solutions 
algorithm find solutions constraint system 
algorithm solve constraint inclusion function initial region find solutions constraint problem solution acceptance set constraint specifying indeterminate region accepted solution 
place list nonempty remove region evaluate add solution discard add solution subdivide regions insert endwhile subdivision algorithm achieved dividing candidate interval half midpoint single dimension 
storing index subdivided dimension region algorithm cyclically subdivide dimensions initial region ensuring width candidate regions tends number iterations increases 
hand knowing properties constraint system solutions sought deduce smaller regions bound solutions especially interval newton methods toth rats 
hansen greenberg algorithm efficient method finding zeroes function rats uses exhaustive subdivision interval newton methods local newton methods 
problem indeterminacy algorithm finds set intervals bounding solutions constraint system 
particular property inclusion functions algorithm finds solutions constraint system solutions region rejected shows infeasible 
proved constraint solution algorithm converges actual solution set inclusion functions equality inequality constraints convergent see example 
unfortunately computer implementation constraint solution algorithm iterate forever terminate iteration accept remaining regions solutions 
especially equality constraints algorithm may accept indeterminate regions may contain zero solutions regions satisfy solution acceptance set constraint 
problem mitigated factors 
may distinguish case constraint problem possibly solutions tolerance case solutions 
example compute interference detection parametric surfaces constraint system equations variables solved form solve relaxed constraint problem ks ffl algorithm hope produce feasible solution regions constraints satisfied point region 
relaxed con initial region infinite technique infinite interval arithmetic see rats 
note solution system typically curve intersection parametric surfaces 
neighborhood point curve contain points surfaces intersect solve system equations 
relaxed problem hand solutions neighborhood small size completely contained solution space 
straint problems called ffl collisions 
feasible regions surfaces interfere tolerance 
regions eventually infeasible surfaces interfere tolerance fact come closer ffl 
possible indeterminate regions accepted solutions 
case may consider surfaces interfere extent limited floating point precision able ascertain 
second may know priori system single solution 
solution acceptance set constraint simple form ffl inclusion functions bounding constraint equality inequality functions convergent solution approximation produced algorithm achieves degree accuracy ffl goes 
third may able compute information solutions constraint system algorithm progresses 
section presents theorem specifying conditions computable interval techniques region contains exactly zero system equations 
relax constraints constraint system accept indeterminate results algorithm 
practice guarantee validity results useful 
termination acceptance criteria constraint solution solve applied specific problems 
find bound set solutions 
determine solution exists 
find solution 
find solutions 
solve constrained partitioning problem discussion analyzes application algorithm specific problems making distinction heuristic approaches results guaranteed correct robust approaches results guaranteed correct 
algorithm rejects region contains solutions constraint problem 
unmodified algorithm robustly find set regions bounding solutions constraint system 
solution superset useful higher level algorithms implicit curve approximation algorithm section 
solution superset visualized obtain rough idea nature solutions solutions form multidimensional manifold finite set points 
determine solution exists algorithm terminates empty list solutions algorithm return answer 
point algorithm finds feasible region algorithm immediately terminate answer 
algorithm finds indeterminate regions concluded certainty 
heuristic solution return anyway 
heuristic approach robust choice appropriate solution acceptance set constraint 
example solving system continuous function reasonable region accepted solution satisfy ffi small ffi 
algorithm report error indeterminate regions satisfy acceptance criteria machine precision limit reached subdivision 
robust solution problem achieved testing indeterminate regions existence solutions test section 
find single solution constraint system algorithm may conclude entire starting region infeasible find feasible region 
case point feasible region chosen representative solution algorithm halted 
indeterminate regions heuristically accepted satisfy solution acceptance set constraint 
may tested existence solutions test section 
algorithm applied problem finding solutions constraint system finite set solutions expected 
solution aggregation solution regions returned algorithm collection squares 
actual solutions marked dots 
adequate level subdivision achieved sets contiguous regions encompass solutions contiguous region may bounded interval dashed boxes disjoint regions 
algorithm terminates empty solution list solutions 
feasible region infinite number solutions exist 
indeterminate regions useful heuristic approach union contiguous solution regions set mutually disjoint aggregate regions shown 
point inside aggregate region picked solution 
number solutions known algorithm terminated error condition machine precision reached subdivision number aggregated regions unequal number solutions 
course note approach works correctly heuristic example region may contain solutions contains 
robust approach test solution existence aggregated region 
case reaching machine precision limit subdivision able verify solution existence result error termination 
solve constrained partitioning problem algorithm slightly modified adds region solution true regardless value 
alternatively constraint inclusion set returns true constant regions 
solution acceptance set constraint set constraint constrained partitioning problem 
interval tests solution existence uniqueness interesting useful result proved guarantees existence unique zero function interval domain theorem bao continuously differentiable interval domain interval jacobian matrix ij solution set linear interval equation fx unique zero proof theorem 
hypothesis theorem verified practical computations ways 
interval determinant ae interval matrix inverse 
compute interval inverse jacobian matrix compute verify ae order show existence unique solution methods involve gauss iteration linear equation rats linear optimization 
note theorem useful case zero determinant jacobian verify solution uniqueness theorem 
note interval test solution existence necessarily uniqueness moor 
appendix discusses test indicates region zero 
minimization algorithm constrained minimization problem involves finding global minimum global minimizers function points satisfy constraint function 
constraint function defined exactly section 
algorithm minimize constraint inclusion function solution acceptance set constraint inclusion function objective function initial region variable progressively refined upper bound value objective function evaluated feasible point 
regions inserted priority queue regions smaller lower bound objective function priority 
place priority queue initialize upper bound nonempty get region add solution subdivide regions evaluate discard evaluate lb discard insert lb contains identified feasible point min contains unidentified feasible point min ub endif endif endwhile region th region priority queue loop iterations algorithm 
value iteration lb interval called leading candidate interval smallest lower bound value minimum value objective function subject constraints 
note region contains feasible points constraint function exists 
existence feasible point important property algorithm algorithm suffers problems algorithm indeterminate region region may may include feasible points system constraints 
implies algorithm may accept indeterminate regions solutions fact infeasible 
constraints satisfied exactly represented equality constraints candidate regions indeterminate updated 
case algorithm unable reject candidate regions basis objective function bound accepts indeterminate regions solutions 
robust solution problem existence test section verify region contains feasible point 
heuristic approach consider indeterminate regions small width contained feasible point 
indeterminate regions may subjected appropriate acceptance test provides confidence region contains feasible point 
algorithm enhanced techniques find feasible points feasible points smaller value objective function feasible regions objective function monotonic respect input variable rats 
termination acceptance criteria minimization constrained minimization problem solved ways 
find minimum value objective function 
find feasible point minimizes objective function 
find feasible points minimize objective function slight modifications algorithm regarding algorithm halted indeterminate regions accepted solutions applicable specific subproblems 
find minimum value objective function algorithm terminated leading candidate interval encountered sufficiently small contains feasible point 
case value returned approach justified contains feasible point lb ub approach presumes verify presence feasible point indeterminate region machine precision reached subdivision 
lack verification result form error termination 
heuristic approach accept indeterminate regions small width possibly satisfying criteria contained feasible point 
finding minimizers objective function difficult problem currently amenable completely robust solution 
certain conditions algorithm converges theoretical sense set global minimizers minimization problem 
practice obtain bound set global minimizers finite number iterations 
techniques exist verify interval bound contains local minimizer minimization problem know general local minimizers global minimizers 
know priori single global minimizer exists technique solution aggregation section collect candidate solutions single interval 
verify width interval tends zero algorithm iterates 
expect finite set global minimizers reasonable heuristic approach aggregate solutions pick point aggregated region global minimizer 
aggregated region small width satisfy acceptance criteria increase confidence contains global minimizer 
example approximating implicit curves implicit curve solution constraint system ae solution forms manifold 
implicit curves extremely useful geometric modeling especially csg trimming operations parametrically described shapes 
represent example intersection parametric surfaces silhouette edges parametric surface respect view 
robustness algorithm superior local methods timm 
method example separates implicit curve approximation hunting phase intersections implicit curve preselected grid computed tracing phase curve inside grid cell traced determine connect intersections 
new algorithm computes points implicit curve algorithm guaranteeing bound result 
method superior candidate intervals rejected feasible points exist original region exist 
sufficient condition points interior feasible domain converges global minimizer rats 
implicit curve approximation left shows implicit curve satisfying algorithm assumptions 
consists segments closed segments segment intersecting boundary interval consideration 
right shows approximation implicit curve 
case algorithm produces linked lists points output segment implicit curve 
local methods newton iteration guaranteed converge 
method fails find disjoint segment curve lies completely grid cell proposed algorithm uses global criterion subdivides parameter space curve segment lost 
algorithm similar described suff differs respects uses global criterion handles multivariate implicit curves incorporates approximation quality metric 
implicit curve approximation algorithm inputs approximation algorithm 
interval called interval consideration approximate implicit curve 

inclusion function constraint system defining implicit curve 

inclusion function called approximation acceptance inclusion function 
inclusion function tells interval small segment implicit curve contains approximated single interpolation segment pair solution points 
algorithm works subdividing region subregions called proximate intervals contain implicit curve satisfy approximation acceptance inclusion function allow simple computation local topology curve 
algorithm assumptions 
solution constraint system continuous manifold 
implies solution contains self intersections isolated singularities solution regions dimensionality greater 
implies disjoint curve segment solution closed endpoints boundary region 
intersection solution curve proximate interval boundaries empty finite collection points manifold 
assumption unimportant implicit curves segments entirely parametric axes 
implicit curve segments constraint system simply linear transformation parametric coordinates discussed 
assumptions point implicit curve linked neighbors possibly single neighbor point boundary output approximation algorithm list curves curve linked list points single disjoint segment implicit curve shown 
algorithm implicit curve approximation 
subdivide collection proximate intervals bounding implicit curve satisfying approximation acceptance inclusion function 
accomplished algorithm 
shows example collection proximate intervals 

check proximate interval global 
implicit curve contained proximate interval called globally parameterizable parameter point curve value th parameter see 
implicit curve globally parameterizable parameter recursively subdivided tested 

find intersections implicit curve boundaries proximate interval algorithm 
assumption implies intersection empty finite collection points 

ensure boundary intersections disjoint global parameter 
global parameter proximate interval computed step 
step checks intersections implicit curve boundary non overlapping coordinate shown unambiguously sorted increasing order coordinate boundary intersections disjoint parameter recursively subdivided retested 

compute connection boundary intersections proximate interval 
interval contains boundary intersections discarded global condition implies solution closed curve entirely contained solution curve segment intersect boundary assumption 
contains single boundary intersection solution tangent boundary passes corner intersect interior contains boundary intersection boundary intersections sorted order global parameter pair boundary intersections adjacent parameter algorithm see solution curve intersects th parameter hyperplane midway boundary intersections shown 
boundary intersections connected local curve topology linked list 

find set disjoint curve segments comprising implicit curve 
implicit curve traced inside proximate interval list connected boundary intersections traversed algorithm set boundary intersections nonempty remove intersection point find remove points indirectly connected associate set new curve endwhile note accumulating set points particular curve algorithm point eventually curve closed 
curve endpoints boundary assumption 
step algorithm combines constraint inclusion approximation acceptance inclusion create initial collection proximate intervals bounding implicit curve subproblem section 
step ensures proximate interval satisfy global criterion 
appendix presents theorem identifying conditions global computable interval techniques discussed 
theorem pertains special case system continuously differentiable equality constraints parameters 
developed general heuristic test global discussed 
step algorithm computes intersections implicit curve boundary proximate interval 
algorithm original constraint inclusion initial region formed dimensional hyperplanes bounding proximate interval 
boundary hyperplane algorithm searches constraint system solutions producing set intervals bounding solutions called boundary intersection intervals 
boundary intersection intervals shared edges corners contiguous proximate intervals merged discussed 
collection proximate intervals bounding implicit curve examples constraint system equation cos sin sin cos interval consideration 
approximation acceptance inclusion function left example simply requires width parameter space interval right guarantees global solution interval 
examples globally parameterizable ii 
examples globally parameterizable iii 
examples allowed assumptions global illustrates possible behaviors implicit curve interval 
steps link boundary intersection intervals connected segment implicit curve 
boundary intersection intervals sorted global parameter pair adjacent intersections tested 
test uses algorithm discover implicit curve intersects hyperplane midway pair intersections 
application constraint algorithm need ascertain solution exists location intersection point required 
hand intersection point better approximate implicit curve behavior boundary intersections little extra computational cost 
proximate intervals examined step associates boundary intersection intervals disjoint segment implicit curve 
point inside boundary intersection intervals chosen represent actual point intersection proximate interval boundary implicit curve 
point chosen arbitrarily midpoint interval computed local iterative technique newton method 
note algorithm similar algorithm generate approximations implicit surfaces 
algorithm uses global criterion described appendix case boundary intersection illustrates interval containing boundary intersections disjoint parameter horizontal axis 
sorted yielding ordering boundary intersections disjoint dashed line shows common coordinate 
boundary intersections implicit curve ii 
cases implicit curve behavior iii 
allowed global global linking boundary intersections assume implicit curve defined globally parameterizable interval 
implicit curve intersections interval boundary shown global curve approximation algorithm assumptions possible ways implicit curve connect boundary intersections shown ii 
possibilities shown iii globally parameterizable excluded 
disambiguate cases need see implicit curve intersects hyperplane dashed vertical line pair adjacent boundary intersections 
manifold manifold 
results figures illustrate results interval analysis algorithms 
running times examples ranged seconds computation minimum distance parametric surfaces minutes csg example hp series workstation 
shown variety important problems computer graphics solved technique interval analysis 
problems include ray tracing computation polygonal decompositions detection collisions computation csg operations approximation silhouette curves 
described general algorithms constraint solution constrained minimization solve problems directly higher level algorithm implicit curve approximation algorithm section 
advantage approach advocated twofold 
robust solution computer graphics problems achieved interval analysis controls numerical error 
simple implementation achieved basic algorithms necessary require inclusion functions functions relevant problem 
definition inclusion functions difficult natural interval extensions particular type inclusion function defined implementing inclusion function method operator relevant functions arithmetic operators cosine operator section 
mean value forms type inclusion function defined natural interval extensions derivative operator 
entire powerful geometric modeling system built set operators having inclusion method system described 
acknowledgments barr support encouragement publication research 
barr ronen barzel provided helpful comments suggestions 
funded part ibm hewlett packard national science foundation 
interval computations academic press new york 
bajaj hoffman hopcroft lynch tracing surface intersections computer aided geometric design pp 

alan barr guaranteed ray intersections implicit surfaces computer graphics july pp 

mitchell don robust ray intersections interval arithmetic proceedings graphics interface may pp 

mitchell don applications interval analysis computer graphics course notes frontiers rendering siggraph 
moor moore interval analysis prentice hall englewood cliffs new jersey 
moor moore methods applications interval analysis siam philadelphia 
moor moore new results nonlinear systems interval mathematics karl nickel ed academic press new york pp 

interval methods processing geometric objects ieee computer graphics applications feb pp 

rats new computer methods global optimization ellis horwood limited chichester england 
segal mark tolerances guarantee valid polyhedral modeling results computer graphics august pp 

snyder john generative modeling approach high level shape design computer graphics cad ph thesis california institute technology 
snyder john generative modeling symbolic system geometric modeling published siggraph 
snyder john generative modeling computer graphics cad symbolic interval analysis published academic press summer 
suff kevin edward interval methods computer graphics proceedings melbourne australia pp 

timm analytic surface intersections douglas aircraft technical memorandum ci cat april 
toth toth daniel ray tracing parametric surfaces computer graphics july pp 

von herzen brian alan barr accurate sampling deformed intersecting surfaces quadtrees computer graphics july pp 

von herzen brian applications surface networks sampling problems computer graphics ph thesis california institute technology 
von herzen barr geometric collisions time dependent parametric surfaces computer graphics august pp 

appendix robust test global consider dimensional manifold defined solution system equations parameters 



set parameter indices 
interval define subinterval set parameters 
defined subinterval interval subset coordinates specified constant rest coordinates solution system equations parameters called globally parameterizable parameters indexed interval solution system subinterval put simply system equations globally parameterizable parameters solution system particular value parameters interval 
define fk called interval jacobian submatrix interval matrix fk fk interval matrix write det exists matrix det 
theorem guarantees global solution interval proof see 
theorem interval implicit function theorem constraint functions 
continuously differentiable 
region exist det fk solution system equations globally parameterizable parameters indexed 
case approximation solution manifold system equations variables solved 
theorem guarantees interval find parameters det fk det solution manifold globally parameterizable parameter satisfies constraint step 
verify det fk forming inclusion function determinant interval jacobian submatrices interval arithmetic section 
csg example algorithm find curve intersection bumpy sphere surface cylinder surface 
output algorithm parametric trimming operation resulting subtraction cylinder bumpy sphere left subtraction bumpy sphere cylinder right 
silhouette edge detection example figures show results implicit curve approximation algorithm approximate silhouette curve parametric surface respect case orthographic view 
implicit curve solution variables equation parametric surface viewing direction 
polygonal decomposition example left shows polygonal decomposition uniform sampling parameter space 
right surface decomposed slightly smaller number triangles constrained partitioning algorithm subdivides parameter space shown surfaces maximum variation surface normal threshold 
polygonal artifacts highly curved projection reduced 
minimum distance computation example results minimization algorithm find minimum distance parametric surfaces displayed 
yellow line connects points surfaces closest 
case single global minimizer unconstrained minimization problem formula section 
