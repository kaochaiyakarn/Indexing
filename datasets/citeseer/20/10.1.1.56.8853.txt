overview dai viewing distributed ai distributed search victor lesser computer information science university massachusetts amherst approach understanding distributed ai view distributed state space search 
distributed search involves partitioning state space associated operators control regime multiple processing elements simultaneously perform local searches different parts state space intermediate results local searches shared form desired answer produced timely manner 
requirements effective distributed search may necessitate reorganization state space search ways optimal sequential search 
research dai emphasizes development approaches partitioning search space set local searches coordinating simultaneous searches terms information sharing control 
turn granularity form partitioning state space search hardware characteristics processor organization implements distributed search independence complexity processing elements connectivity patterns elements relationships communication processor bandwidths distribution expertise information processor organization engender different sets issues dai researchers 
extreme researchers study fine grain decompositions 
state space search partitioned local searches involve small collections states simple computations sufficient implement operators control 
example type partitioning waltz constraint satisfaction network relaxation algorithm 
case classic state search reorganized 
repre supported office naval research number university research initiative number 
senting state search space list distinct attribute value pairs define complete partial path search acceptable goal state distinct state called node attribute 
node contains current set allowable values attribute local search process associated node 
fine grain distributed search matched fine grain processor organization local search process associated processing element processors simple large number lockstep manner processors communicate fixed patterns nearby processing elements processor speeds 
researchers studying form dai call connectionists separated dai researchers concerns different 
extreme researchers study large grain decompositions 
case state space search partitioned relatively small set dependent independent subproblems tens hundreds form somewhat analogous state space search alternatively represented terms problem reduction graph 
case problem reduction graph partially expanded level terminal subproblem requires significant problem solving 
large grain distribution problem solving activity matched large grain processor organization processors complex lisp processor operate asynchronously 
groups subproblems partitioned processing elements 
processors sophisticated strategies coordinate problem solving activities communications processing elements 
alternatively hybrid situations granularity decomposition search space match granularity processor organization 
example actor framework hewitt involves small granularity activity agents simple asynchronous processes rudimentary message passing capabilities 
implementation large grain loosely coupled processor organization large numbers agents assigned complex element 
majority research dai involves large grain search space decompositions large grain processor organizations 
particular model distribution dai come called distributed problem solving cooperative distributed problem solving focus overview article 
cooperative distributed problem solving cooperative distributed problem solving cdps networks broadly defined loosely coupled distributed networks semi autonomous problemsolving nodes perform sophisticated problem solving cooperatively interact nodes solve single problem 
nodes cooperatively solve problem individually solving subproblems possibly interdependent overlapping integrating subproblem solutions solution 
solution integration require solution completely represented node situations components solution distributed network integrated mutual consistency 
due distribution expertise information network node completely solve subproblem assistance nodes 
face limited communication bandwidth leads local problem solving strategy nodes best available knowledge 
nodes cooperate generating exchanging tentative partial results sufficient information exchanged construct mutually consistent complete solutions local subproblems 
cdps network node modify behavior circumstances change plan communication cooperation strategies nodes 
nodes operate asynchronously parallel nodes limited internode communication 
internode communication constrained inherent bandwidth limitations communication medium high computational costs packaging assimilating information sent received nodes 
cdps differs significantly distributed processing 
network typically multiple disparate tasks executing concurrently network 
case shared access physical informational resources main reason interaction tasks 
goal preserve illusion task executing dedicated system having network operating system hide resource sharing interactions conflicts tasks network 
contrast problem solving procedures cdps networks solve single problem 
procedures explicitly aware distribution network components informed interaction decisions information 
cdps networks cooperation nodes crucial developing solution nodes traditional distributed processing applications rarely need assistance node carrying problem solving functions 
cdps important research focus dai reasons 
advances hardware technology processor construction processor communication possible connect large numbers sophisticated inexpensive processing units execute asynchronously 
interconnected processors cost effective means providing computational cycles required ai applications 
range connection structures possible tight coupling processors shared distributed memory loose coupling processors local area communication network loose coupling geographically distributed processors long haul communication network 
second ai applications inherently distributed 
applications may spatially distributed interpreting integrating data spatially distributed sensors controlling set robots factory floor 
applications may functionally distributed bringing number specialized systems particularly difficult case developing sophisticated architectural expert system composed individual experts structural engineering electrical wiring room layout applications may temporally distributed pipelined factory application production line consisting number areas expert system responsible scheduling orders 
problem solving architecture matches distribution data expertise processing power significant advantages single monolithic centralized process terms processing communication efficiency reliability real time responsiveness 
third ability structure complex problem relatively selfcontained processing modules leads systems easier build debug maintain single monolithic module resilient software hardware errors 
understanding process cdps important goal right 
possible development cdps networks may serve validating role theories sociology management organizational theory development ai systems served theories problem solving intelligence linguistics psychology philosophy 
issues cooperative distributed problem solving major intellectual issues cdps generally dai arise possible decompose problem solving set subproblems perfect fit information expertise processing communication capabilities lie processor network computational needs effectively solving subproblem 
additional issue arise structuring cdps architectures requirement high reliability 
best possible worlds problem solving decomposed fixed set independent subproblems requiring approximately amount computation associated processor organization exactly numbers processors subproblems subproblem assigned unique processor processor requisite processing capabilities information expertise subproblem solved completely local problem solving 
type optimal decomposition keep processors busy doing effective problem solving 
unfortunately difficult find real world applications exhibit optimal mapping problem solving decomposition processor organization 
applications mapping leads situations true subproblems processors subproblems require different amounts computation solve new subproblems may created problem solving subproblems different nodes interdependent requiring nodes coordinate local problem solving consistent solutions constructed information expertise distributed network processor nodes insufficient information expertise completely solve subproblem locally cost transferring necessary expertise information appropriate node prohibitively expensive terms time delay due limited communication bandwidth significant amounts computation communication required synthesize individual subproblem solutions distribute answers appropriate nodes 
illustrate issues specifically consider simple distributed search 
example problem planning task initial state wo goal state defined terms predicates constraint constant 
suppose node network initialized copy wo sufficient expertise node solve subgoals 
solve subgoals separate nodes network sure separately derived solution node solution node compatible solutions incompatible simultaneous achievement leads world states merged consistent world state recognition incompatible solutions subgoals difficult limited communication bandwidth may impossible transmit changes world state required achieving subgoals node nodes interacting subgoals 
cooperative strategy employing limited communication nodes exchange abstracted view changes world states incompatible world state recognized significant communication type exchange high level partial results nodes problem solving developed incompatibilities recognized early communication 
problem guaranteeing constraint met difficult solve subgoals independently similar reasons recognition constraint violations may require communication involve lot state information 
sequential search constraints reduce search constraint propagation 
example result partial problem solving node working bound bound transmitted node working speed processing gamma gamma 
major issue involves effectively searching goal tree parallel development distributed schedule ordering achievement subgoals individual nodes complicated limited communication 
order perform distributed search efficiently distributed schedule take factors account potential parallelism current tasks performed nodes interdependencies solution subgoals 
example suppose node subgoals achieve node subgoals achieve interacting constraints 
instance solution subgoal constraining faster compute appropriate scheduling strategy node subgoal node subgoal node starts subgoal able solve constraints defined solution subgoal strategy advantages avoids unnecessary achieving subgoals ways eventually incompatible search solution constrained subgoals case subgoal efficient 
distributed scheduler recognize potential interactions subgoals freedom order subgoals achieved efficient search conducted 
issue distributed scheduling exemplified previous example avoidance redundant computation nodes subgoal achieve 
avoiding redundant computation poses problem opportunities 
opportunities involve effective load balancing node perform computation higher reliability node fails possibility solution subgoals derived node increased parallelism nodes having subgoals pursue different approaches solving subgoal 
example subgoal nodes solve decomposed achieved solving subgoal subgoal disjunctive parallelism speedup achieved node attempts solve solving node solves solving 
requirement determining consistent optimal set solutions top level subgoals constructed presents problems distributed setting 
far considered optimality discussions additional parameters associated goals confidence answer amount resources 
concerns optimality require termination criterion closely look alternative solutions goals explored options explored potential quality alternatives 
difficulty making decisions distributively access details current state network search 
problem effectively dealing subgoal interactions complex operators different nodes generate conflicting solutions interacting subgoals differences underlying world view 
differences arise nodes long term knowledge problem solving strategies access different input data 
example nodes get input data result sensors different data due sensor error due sensors sensitive phenomena environment geographical placement sensor observe vehicle moving blocked mountain different sensor types acoustic versus radar 
differences arise nodes may different sets operators inconsistent long term knowledge different problem solving strategies lead alternative parts search space examined 
example multi criteria problem building design criteria successful design involves structural safety cost considerations node long term knowledge emphasizes criteria generate solutions building safe node long term knowledge may emphasize criteria lead buildings cheap construct 
example node control strategy emphasizes getting acceptable solution quickly node emphasizes getting optimal answer 
final example combines issues inconsistency long term short term knowledge cooperative medical diagnosis expert try diagnose illness terms area specialized medical knowledge long term knowledge terms cases seen short term knowledge 
simple example get insight issues arise mapping problem decomposition processor organization optimal 
importance placed cdps research development capabilities ffl distributed network control protocols involves dynamically assigning newly generated subproblems appropriate agents reorganizing assignments subproblems agents face changing workloads processor communication configurations scheduling local subproblems agent concerns efficient network problem solving integrated efficient local problem solving ffl protocols cooperative problem solving agents sharing information expertise requires techniques exploiting interdependencies agents subproblems assist local problem solving incomplete inconsistent information expertise speed processing involves techniques resolving inconsistencies agents short term long term knowledge beliefs ffl local problem solving architectures effectively operate cdps context agents able accomplish reasonable problem solving face possibly incomplete inconsistent information expertise informed communication decisions requesting information helpful communicating information important agents 
additionally agents may required high level model current past problem solving predictions activity provide information necessary effective network control 
effective network control may require agents reorganize schedule perform local problem solving tasks 
techniques depend having highly detailed consistent date view state local problem solving network due lack adequate communication bandwidth time delays introduced communication desire techniques robust face hardware failures potential significant decreases exploitable parallelism network activities agents tightly synchronized 
techniques developed trade lowered network communication increased amounts local computation 
computation occurs information required informed control decisions available todate information lead correct complete inferences creates local problem solving inefficiency search required reach acceptable answer partial result 
extra search local network wide 
sufficient constraints local acceptability answers inferences faulty incomplete information lead generation incorrect answer 
case insufficient local criteria eliminate incorrect answers incorrect results need eliminated result network problem solving local problem solving may revised result information received agents 
method trade communication local computation sophisticated local problem solving techniques enable agents transmit informed higher level view consequences local problem give agents ability exploit information received agents fully local problem solving 
general approaches discussed shift emphasis optimizing efficiency individual problem solving activities achieving acceptable performance level terms quality answer robustness system requirements communication processor resources network 
implicit satisficing approach network problem solving recognition difficult create optimal mapping lifetime problem solving problem solving decomposition processor organization 
state art research dai infancy 
years certain level understanding important conceptual issues structuring dai systems developed collection interesting disparate sets approaches frameworks specific techniques partially evaluated 
date deep conceptual theoretical framework comparing alternative approaches developed 
alternative approaches different highly specific assumptions underlying problem solving structure processor organization difficult compare reproduce results slightly different problems 
positive viewpoint dai research developed important concepts design dai systems 

organizational structuring predefined roles communication patterns agents way organizing problem solving 
organizational structuring reduces complexity agents control problem solving constraining range dynamic control decisions 
balance achieved coordination requires overhead leads acceptable necessarily optimal network problem solving performance 

negotiation cooperative dialogue agents resolve uncertainty incompleteness agent knowledge base 
highly directed dialogues attempt minimize communication necessary arrive consistent solutions interdependent subproblems implement network control 

tolerance inconsistency agent problem solving structured operate local knowledge bases incomplete inconsistent date 
error resolution integral part network problem solving agents best current information 

sophisticated local control sophisticated agent problem solving plans status beliefs implications actions agents plans beliefs easier achieve coordinated behavior agents 
corollary viewpoint importance interplay local network control order achieve effective network problem solving 

reasoning agents informed problem solving control decisions agent needs able acquire represent beliefs intentions agents 
concepts interrelated aspects appear dai architectures 
lay groundwork systems research dai 
dai appropriate generation applications computing organizations planning stages 
applications structured complex distributed problem solving systems man machine participants 
generation systems provide challenges dai researchers heterogeneous required operate soft hard deadlines need robust may large 
issue raised requirements barely touched dai research 
exciting research implementation challenges facing dai researchers creating real world systems exploit existing ideas developing conceptual frameworks integrate experiences gained expanding research focus include problems faced generation applications 
acknowledgments want acknowledge importance collaborative research colleagues shaping views expressed 
colleagues contributed important insights published article dai lee erman long term joint research efforts daniel corkill edmund durfee continuing susan robert meyer kuwabara keith decker susan lander brigitte hassan 
stephanie cammarata david mcarthur randall 
strategies cooperation distributed problem solving 
proceedings eighth international joint conference artificial intelligence pages karlsruhe federal republic germany august 
published readings distributed artificial intelligence alan bond les gasser editors pages morgan kaufmann 
philip cohen hector levesque 
intention choice commitment 
proceedings national conference artificial intelligence pages seattle washington july 
susan robert meyer victor lesser 
multistage negotiation distributed planning 
alan bond les gasser editors readings distributed artificial intelligence pages 
morgan kaufmann 
daniel corkill 
hierarchical planning distributed environment 
proceedings sixth international joint conference artificial intelligence pages cambridge massachusetts august 
daniel corkill victor lesser 
meta level control coordination distributed problem solving network 
proceedings eighth international joint conference artificial intelligence pages karlsruhe federal republic germany august 
published computer architectures artificial intelligence applications benjamin wah 
li editors ieee computer society press pages 
randall davis reid smith 
negotiation metaphor distributed problem solving 
artificial intelligence pages 
keith decker edmund durfee victor lesser 
evaluating research cooperative distributed problem solving 
distributed artificial intelligence volume pages 
pitman publishing london england 
edmund durfee victor lesser 
partial global plans coordinate distributed problem solvers 
proceedings tenth international joint conference artificial intelligence pages milan italy august 
published readings distributed artificial intelligence bond gasser editors pages morgan kaufmann 
edmund durfee victor lesser 
predictability versus responsiveness coordinating problem solvers dynamic domains 
proceedings national conference artificial intelligence pages st paul minnesota august 
edmund durfee victor lesser 
negotiating task decomposition allocation partial global planning 
distributed artificial intelligence volume pages 
pitman publishing london england 
edmund durfee victor lesser daniel corkill 
coherent cooperation communicating problem solvers 
ieee transactions computers november 
published readings distributed artificial intelligence bond gasser editors pages morgan kaufmann 
edmund durfee victor lesser daniel corkill 
trends cooperative distributed problem solving 
ieee transactions knowledge data engineering march 
invited 
mark fox 
organizational view distributed systems 
ieee transactions systems man cybernetics smc january 
published readings distributed artificial intelligence alan bond les gasser editors pages morgan kaufmann 
les gasser nicolas randall hill john lieb 
representing organizational knowledge distributed ai systems 
distributed artificial intelligence volume 
pitman london england 
barbara grosz candace sidner 
discourse structure proper treatment interruptions 
proceedings ninth international joint conference artificial intelligence pages los angeles california august 
halpern yoram moses 
knowledge common knowledge distributed environment 
ibm research report ibm rj ibm 
carl hewitt 
viewing control structures patterns passing messages 
artificial intelligence fall 
carl hewitt 
offices open systems 
communications acm july 
published readings distributed artificial intelligence alan bond les gasser editors pages morgan kaufmann 
kurt konolige 
deductive model belief 
proceedings eighth international joint conference artificial intelligence pages karlsruhe federal republic germany august 
william carl hewitt 
scientific community metaphor 
ieee transactions systems man cybernetics smc january 
published readings distributed artificial intelligence alan bond les gasser editors pages morgan kaufmann 
kuwabara victor lesser 
extended protocol multistage negotiation 
proceedings th distributed artificial intelligence workshop pages 
susan lander victor lesser 
negotiation cooperating experts 
proceedings distributed ai workshop may 
victor lesser daniel corkill 
functionally accurate cooperative distributed systems 
ieee transactions systems man cybernetics smc january 
victor lesser lee erman 
distributed interpretation model experiment 
ieee transactions computers december 
published readings distributed artificial intelligence bond gasser editors pages morgan kaufmann 
james march herbert simon 
organizations 
john wiley sons 
stan rosenschein 
reasoning distributed action 
ai magazine 
arvind mark fox 
constraint directed negotiation resource 
distributed artificial intelligence volume pages 
morgan kaufmann california 
reid smith 
contract net protocol high level communication control distributed problem solver 
ieee transactions computers december 
katia sycara 
resolving goal conflicts negotiation 
proceedings national conference artificial intelligence pages st paul minnesota august 
david waltz 
understanding line drawings scenes shadows 
patrick winston editor psychology computer vision pages 
mcgraw hill 
zucker hummel rosenfeld 
application relaxation labeling line curve enhancement 
ieee transactions computers 
