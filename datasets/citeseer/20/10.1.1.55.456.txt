crossover operators evolving team thomas haynes sandip sen department mathematical computer sciences south college ave university tulsa tulsa ok mail haynes sandip euler mcs edu cooperative evolutionary systems facilitate development teams heterogeneous agents 
believe different behavioral strategies controlling actions group agents combine form cooperation strategy efficiently achieves global goals 
examine line adaption behavioral strategies utilizing genetic programming 
specifically deal credit assignment problem fairly split fitness team participants 
crossover mechanisms genetic programming system facilitate evolution member team crossover operation 
goal reduce time needed evolve team 
utilized genetic programming gp koza evolve behavioral strategies enabled team loosely coupled agents cooperatively achieve common goal haynes sen haynes shared behavioral strategy agents homogeneous chromosome population implicitly represented program agents 
simple algorithm model actions believe behave situation 
homogeneous agents agents employ algorithm models agents matches actions 
key issue distributed artificial intelligence dai research heterogeneous agents interact form team 
extend research evolution homogeneous agents evolution heterogeneous agents team 
chromosome population explicitly represents programs corresponding agent 
expect degradation performance agents models agents wrong agents heterogeneous models homogeneous expect see rise effectiveness cooperation team members 
system allow agent change models members believe team members evolve near homogeneity facilitate efficient group behavior 
test heterogeneous team predator prey game testbed domain dai field 
predator agents try capture prey agent surrounding orthogonally 
agents exhibit symmetry predators interchangeable 
animal hunters adopt roles hunt scouts quarry flushes quarry kills quarry 
roles dynamically allocated fit state current hunt hunter able perform role 
coordination strategies new approach developing coordination strategies multiagent problem solving situations haynes different existing techniques constructing coordination strategies ways strategies coordination incrementally constructed repeatedly solving problems domain line rely automated method strategy formulation modification depends little domain details human expertise problem solving performance randomly generated problems domain 
approach uses strongly typed genetic programming stgp montana evolve coordination strategies 
strategies encoded symbolic expressions expressions evaluation criterion chosen evaluating arbitrary expressions 
mapping various strategies expressions vice versa accomplished set functions terminals representing primitive actions domain application 
evaluations strategies represented structures accomplished allowing agents execute particular strategies application domain 
measure efficiency effectiveness criteria relevant domain 
populations structures evolved produce increasingly efficient coordination strategies 
predator prey pursuit game benda test useful coordination strategies evolved stgp paradigm non trivial problems 
domain involves multiple predator agents trying capture mobile prey agent grid world surrounding 
predator prey problem widely test new coordination schemes korf stephens merx problem easy describe extremely difficult solve performances best manually generated coordination strategies satisfactory 
stgp evolved coordination strategies performed competitively best available manually generated strategies 
examine rise cooperation strategies implicit communication 
previous research developed strategies implicit communication program control predator agents 
removal implicit communication achieved having predator agent controlled program 
system solves cooperative evolution problem opposed competitive evolution problem described angeline pollack haynes sen reynolds believe cooperative evolution provides opportunities produce solutions problems solved implicit communication 
pursuit domain experiments initial configuration consists prey center grid predators placed random non overlapping positions 
agents choose action simultaneously 
training cases team allowed moves case 
environment updated agents select moves agents choose action updated state 
conflict resolution necessary allow agents occupy position 
agents try move location simultaneously bumped back prior positions 
predator push predator prey decided move 
prey movements controlled strategy moves away nearest predator ties non deterministically broken 
prey move time effectively predators travel faster prey 
grid toroidal nature diagonal moves allowed 
capture defined predator agents occupying cells directly adjacent orthogonal prey predators block legal moves prey 
predator see prey prey see predators 
predators communicate resolve conflicts negotiate capture strategy 
eliminates explicit communication agents 
evolve coordination strategies predators stgp need rate effectiveness strategies represented programs expressions 
chose evaluate strategies putting task randomly generated pursuit scenarios 
scenario program run time steps 
percentage capture measure fitness comparing strategies scenario 
initial population strategies randomly generated strategies produce capture 
need additional terms fitness function differentially evaluate non capture strategies 
key aspect gps including stgp gas particular structure effective may contain useful substructures combined useful substructures produce highly effective structure 
evaluation fitness function designed useful sub structures assigned due credit 
analysis mind designed evaluation function programs controlling predators contain terms ffl move strategy fitness program representing strategy incremented grid width distance predator prey predator 
higher fitness values result strategies bring predators closer prey keep near prey 
term favors programs produce capture number moves 
ffl simulation ends predator occupying location adjacent prey number equal number moves allowed grid width added fitness program 
term favors situations predators surround prey 
ffl simulation ends capture position additional reward number moves allowed grid width added fitness program 
term strongly biases evolutionary search programs enable predators maintain positions succeed capturing prey 
experiments distance agents measured manhattan distance sum offsets locations 
limited simulation time steps 
increased capture rate increase 
order generate general solutions solutions dependent initial predator prey configuration training cases run member population generation 
fitness measure average training cases 
training cases generations randomly generated generation 
experiments random training cases generation 
environment teamwork earlier program represented chromosome population individuals 
method compose team different chromosomes randomly selected members population chromosomes member awarded certain percentage total fitness 
ensure member population participates teams 
member get points definitely contributed team fitness score 
divide team score participating members chromosomes 
fair evenly divide score 
assuming members team actions individual accounted large share team score get th score 
problem credit assignment problem grefenstette partitioning strategy deterministically split population sized teams 
individuals form team 
problem imposes artificial ordering population 
team generation formed generation due re ordering caused reproductive cycle 
method employ ensure consistency membership team evolve team individual 
chromosome consists programs 
subject effects crossover mutation ensured members form team 
effectively removes credit assignment problem 
team member participates team 
points awarded individual contribution teams contribution correctly entire team 
approach similar pitt approach evolving genetic machine learning systems dejong ga production systems camps maintain ruleset pitt approach maintain entire ruleset individual string entire population collection rulesets michigan approach maintain entire population ruleset 
michigan approach credit assignment problem correctly award individual rules contributions global solution 
pitt approach bypasses credit assignment problem rules evaluated context ruleset 
method maintaining consistency team introduce problem crossover 
allow crossover shown take place usual sense 
programs participates crossover 
shown allow programs participate crossover 
crossover mechanism allows relatively small changes parent structures produce offspring slows learning 
different mechanisms allow multiple programs participate crossover process comparison purposes method agents share program 
method simply pick crossover point chromosome see 
traditional gp crossover mechanism 
program program program program crossover point program program program program crossover point example crossover crossover point chromosome 
crossover mechanism speed emergence cooperation strategies allowing program parent structure participate crossover process see 
research issue crossover method determining constrain crossover corresponding programs parents 
program parent crosses program second parent program specialist 
need specialists dessert maker team applying constraint restrict part solution space global optimum 
program program program program crossover points program program program program crossover points example crossover programs tree 
crossover point selected subtree program 
crossovers place program chromosomes 
possible solutions concern chromosomes randomly determine program crossover program program chromosome participates exactly crossover process new mutation operator defined swaps subtrees programs chromosome 
different recombination parent resultant child 
random crossover mechanism randomly select program crossover program method 
rest crossover mechanisms adopt random selection parents context desired methodology 
crossover mechanism adapt uniform crossover function ga research see 
basically develop uniform crossover mask programs inside chromosome 
indicate programs copied respective child indicate programs undergo crossover 
able uniform crossover function number programs team fixed 
programs atomic sense alleles gas randomly determine interactions programs 
example decided order interaction parent chromosomes bit mask produce children 
represented visually 
programs re ordered paired crossover mechanism allow crossover points inside chromosome see 
restriction crossover point ancestor node crossover point difference method previous methods crossovers happen program seen 
crossover point tied program 
related angeline investigated adaptive crossover operators single branched chromosomes angeline self adaptive multi crossover adaptively determines number position crossover points chromosome 
operators report differ number crossover points function number branches chromosome positions chromosome random 
results series experiments evaluated different crossover mechanisms evolving teams comprised heterogeneous agents 
basic setup ex crossover points program program program program parent program program program program crossover points parent program program child program program program program child program program example uniform crossover mask 
parent ordering 
parent ordering 
child children created crossover 
child children created crossover 
periment population size maximum generations maximum fitness 
generation chromosome evaluated random initial placements 
ran approach different initial seeds random number generator 
averaged results best average fitnesses generation different crossover methods shown figures 
rank methods random program program program program crossover points program program program program crossover points example crossover points chromosome 
generation best average average best fitness 
generation best average average best fitness 
figures see learns faster 
due implicit communication form homogeneity agents employ 
mentioned facilitates simple modeling 
find surprising crossover methods learns cooperate better 
examining movements agents realized benefits heterogeneous predator agents able move different directions quadrant respect prey orthogonal axis 
observed behaviors evolved homogeneous hand crafted behavioral strategies predators quadrant select action 
behavior lead deadlock situations example predators lined horizontal axis respect prey predators get capture position 
heterogeneous behavioral strategies deadlock situations potential avoided 
fitness generation best average average best fitness 
fitness generation best average average best fitness 
analysis best teams crossover system determined behavioral strategies allow prey escape capture 
happen strategy control agents stgp previous research 
best strategy find predator agents evolve similar movement strategies suggesting predator agents learning behavioral strategy homogeneous turn implies implicit communication starting take place 
similar occurrence duplication strategies observed best chromosomes 
note graphical representations capture dynamic interactions caused moving prey 
introduced different crossover mechanisms chromosomes containing result producing branch 
crossover mechanisms speed evolutionary process attain higher fitness traditional generation best average average best fitness 
generation best average average best fitness 
gp crossover mechanism 
believe uniform crossover method benefit domains executable branch chromosome 
particular benefit genetic programming system employing adfs 
heterogeneous agents able excel symmetrical domain 
thought heterogeneous agents suffer lack simple models capability employed homogeneous agent systems 
heterogeneous agents essentially input similar state induced symmetry perform different actions 
asymmetry behavioral strategies allows agents avoid potential deadlock situations 
angeline pollack peter angeline jordan pollack 
competitive environments evolve better solutions complex tasks 
proceedings fifth international conference genetic algorithms pages 
morgan kaufmann publishers 
angeline peter angeline 
self adaptive crossover operators genetic programming 
peter angeline kinnear jr editors advances genetic programming chapter pages 
mit press cambridge ma 
benda benda jagannathan 
optimal cooperation knowledge sources empirical investigation 
technical report bcs boeing advanced technology center boeing computing services seattle wa july 
dejong kenneth dejong 
genetic learning 
kodratoff michalski editors machine learning volume iii 
morgan kaufmann los alamos ca 
grefenstette john grefenstette 
credit assignment rule discovery systems 
machine learning 
haynes sen thomas haynes sandip sen evolving behavioral strategies predators prey 
gerhard wei sandip sen editors adaptation learning multi agent systems lecture notes artificial intelligence pages 
springer verlag berlin 
haynes thomas haynes roger wainwright sandip sen dale 
strongly typed genetic programming evolving cooperation strategies 
larry eshelman editor proceedings sixth international conference genetic algorithms pages san francisco ca 
morgan kaufmann publishers korf richard korf 
simple solution pursuit games 
working papers th international workshop distributed artificial intelligence pages february 
koza john koza 
genetic programming programming computers natural selection 
mit press cambridge ma 
montana david montana 
strongly typed genetic programming 
evolutionary computation 
reynolds craig reynolds 
evolution obstacle avoidance behavior noise promote robust solutions 
kenneth kinnear jr editor advances genetic programming pages 
mit press cambridge ma 
stephens merx larry stephens matthias merx 
effect agent control strategy performance dai pursuit problem 
proceedings distributed ai workshop october 
