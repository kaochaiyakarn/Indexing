comparative study shortest path algorithms sinclair dept electronic systems engineering university essex park colchester essex sq 
tel fax email mcs essex ac uk efficient management networks requires shortest route point node known termed shortest path 
necessary able determine alternative routes network case part shortest path damaged busy 
shortest paths represent ordered list alternative routes available 
algorithms selected detailed study papers written subject 
implemented programming language basis results assessment relative performance 
background shortest path network cost route node node path usually preferred route nodes 
shortest path nodes available reason necessary determine second shortest path 
available third path may needed 
series paths derived known collectively shortest paths ksp represent second third 
kth paths typically length node 
obtaining normally necessary determine independently shortest path nodes computation remaining gamma shortest paths carried 
computation shortest paths subject research 
important realise term shortest just apply distance nodes involve single component factors including cost safety time put weighting route 
ksp algorithms widely fields telecommunications operations research computer science transportation science 
problem driven desire find faster algorithm calculate nodes network yen date second author 
realised lawler investigated problem improved yen raised question faster methods 
definitions order follow solutions ksp problem necessary understand basic ideas associated areas modern mathematics particular graph theory 
definitions explain terms 
network represented graph finite set nodes vertices finite set edges links arcs connect nodes 
edge represented certain weight nodes endpoints edge simple graph representation network shown nodes shown numbered discs edges lines linking nodes 
graph said connected path pair nodes network 
link tree node shortest path node second shortest path node node self loop parallel edges node degree node degree node unconnected node connected graph lengths lengths network drawn graph terms path route may defined sequence nodes edges need alternately followed order move start node node 
undirected network edges network bi directional travel possible edge directions generally 
possible may edges pairs nodes edges referred parallel multiple edges 
self loop edge connects node 
hop count count number edges hops path 
elementary path simple path path containing loops node visited maximum path hop count possible total number nodes minus gamma 
weight associated edge may positive negative general loops negative length may exist tendency algorithms go round loop indefinitely minimise total length path 
order calculate necessary force algorithms choose different routes network 
conveniently done marking nodes edges allowed path calculations specified nodes 
operation referred removal node removal edge respectively 
removal edge graph simply operation results subgraph consisting nodes edges removed edge removal node graph operation results subgraph consisting nodes edges node edges incident node edge marking implemented setting edges infinite length algorithms 
means selected form path valid paths path infinite length useless 
algorithms necessary split path sections order calculate paths known root spur respectively 
root path taken section previously shortest path new spur calculation 
depending weights assigned edges network possible graph network obey rules euclidean space 
euclidean space requires side triangle smaller extreme equal sum sides 
means shortest route direct route 
weights applied edges necessarily just concerned distance may obey rules 
important point mentally visualising expected operation ksp algorithm 
binary minimum heap convenient method storing data entered random order output ordered fashion store record paths awaiting selection shortest 
heap binary children element top element smallest minimum value shortest path 
known fibonacci heaps provide efficient means data storage simplicity binary minimum heap retained 
assumptions order limit search appropriate ksp algorithms proved necessary assumptions networks algorithms applied 
interest primarily telecommunications networks assumptions networks undirected parallel edges self loops negative edges permitted algorithms 
assumed interested finding elementary paths network 
algorithms may calculate node node node nodes vice versa nodes nodes 
telecommunications interested primary interest single node node calculation shall concentrate 
literature survey literature survey conducted find previous revealing papers different branches modern mathematics 
algorithms chosen implementation speed comparison 
algorithm selection criteria algorithm selection purely expected speed operation algorithm network meeting assumptions 
strong indicator literature survey provide insight algorithm speed algorithm computational complexity 
rough guide interest average worst case performance real networks actual implementation way determine best algorithm 
original algorithms yen lawler implemented provide expected speed improvement available 
katoh included represented comparatively update modification yen 
fourth algorithm hoffman implemented study felt potential outperform algorithms 
yen known computational complexity kn due shortest path calculation 
lawler improves constant factor computational complexity remains 
katoh approximately hoffman computational complexity kn widely different means derive katoh claims kc min log implementation algorithms coded department unix workstations 
steps taken ensure coding algorithms done efficiently possible algorithms particularly respect 
simplicity network represented adjacency matrix arrays pointers extensively particular care taken management dynamic memory 
yen shortest path containing nodes standard shortestpath algorithm dijkstra placed results list yen list 
yen takes node shortest path terminating node calculates shortest path spur selected node terminating node 
node path start node current node root path 
restrictions placed spur path pass node root path branch current node edge previously shortest path root 
node edge marking prevent spur paths looping simply route previous shortest path 
new spur path appended root path node form complete path start node candidate ksp 
paths stored yen list shortest remaining unselected path selected ksp transferred results list yen list 
process repeated calculating spur path node new ksp required number ksp 
various improvements yen original algorithm commented papers years 
significant improvement heap store yen list giving improved performance computational complexity change 
improvement checking non existent spur paths root path exists spur paths root previously 
list contains shortest paths minimum length produce required paths necessary extract path turn perform calculations extract required number paths place directly list shorter paths 
lawler lawler presents modification yen algorithm calculating discarding duplicate paths simply calculated 
extra paths occur due calculation spur paths nodes root 
lawler points necessary calculate new paths nodes spur previous ksp 
consider node root path yen calculates spur path node time new ksp required 
path calculated time provided extra edge marking taken place node 
extra edge marking take place ksp chosen branches node node spur 
paths ksp paths root ksp calculated stored heap prospective yen list 
necessary keep record node path branched parent 
node marks point calculation spur paths starts 
increased efficiency lawler explained finding ksp average branch middle path approximately improvement speed achieved yen 
katoh algorithm claimed faster yen due way previous shortest path broken calculation ksp 
path broken sections gamma gamma sections yen 
shortest path trees calculated section start node node 
sections algorithm derived previous ksp recording exactly lawler algorithm point path branches parent 
sections nodes branch branch node nodes branch defined respectively 
algorithm calculates path sections 
restrictions placed path deviate parent point follow previous 
path calculated generating shortest path trees specially calculated start node section node 
possible shortest paths represented paths trees path goes trees common node single edge 
hoffman hoffman algorithm requires shortest path nodes shortest path tree nodes terminal node known 
yen lawler spur paths calculated node previous shortest path turn shortest path algorithm node marking making total time 
contrast hoffman calculates shortest path tree nodes node start execution 
find shortest path necessary search node previous ksp spur node making total time 
path sections start node selected branching node edge selected node new node branch shortest path tree new node terminating node 
edge marking need edges ignored searching selected node 
shortest path selected node placed heap 
ksp path shortest total length start node root edge tree node 
shortest path tree known matter searching theta edges determine ksp 
important point note path generation paths evolve addition exactly edge existing root spur tree paths 
gives rise complication automatically excluded yen lawler algorithms possible quite looping paths generated 
paths essential operation algorithm kept previous prospective ksp 
looping path obtained follow previous ksp addition loop making path slightly longer 
importance elementary paths may evolve looping section addition edge 
way looping paths generated determined geometry network obeys rules euclidean geometry 
generation looping paths adds extra overhead algorithm easily quantifiable depend network features 
speed improvement available algorithm necessary calculate full path details creating route path selected ksp removed heap 
additionally shortest path tree terminal node ksp calculations 
results determining performance algorithms useful summarise main characteristics 
majority time taken calculate occurs call shortest path algorithm 
algorithm find ksp shortest path times calculate ksp hoffman 
katoh generates maximum prospective previous shortest path yen generates number paths path length number hops 
lawler generates smaller number approximately yen depending path branched parent 
realistically sized network katoh normally generate significantly fewer paths yen lawler 
comparison hoffman generates shortest path tree ksp 
number paths calculated concern method calculation speed important 
yen lawler calculate shortest path katoh calculates shortest path trees 
shown average shortest path tree takes twice long calculate single shortest path 
order katoh faster algorithm algorithm twelve theta theta calls shortest path algorithm ksp calculated katoh may calculate 
means yen algorithm path lengths average nodes long hops lawler algorithm spur section paths nodes long average path nodes long 
networks average path lengths long necessary network large low connectivity 
path hops long exist general telecommunications networks katoh viable algorithm 
typical comparison path tree calculations shown 
number ksp required calls shortest path function katoh law ler yen number ksp shortest path function calls better indication performance computational complexity demonstrate required proof best speed 
achieved comparing run times algorithms tests real networks 
results series runs cost european optical network shown 
demonstrates staggering improvement performance algorithms katoh hoffman katoh complicated algorithm 
improvement yen lawler clearly indicated 
number ksp time sec katoh yen lawler hoffman times european optical network london nodes lawler algorithm shown provide expected speed improvement yen algorithm 
best speed network tested achieved hoffman algorithm 
results indicate performance advantage hoffman algorithm may decay problem size require investigation 
ksp algorithms studied dependent efficient implementation shortest path tree algorithm improvements may alter performance balance 
general telecommunications networks interest connected 
algorithms unconnected networks efficiency improved subnetworks analysed separately 
algorithms available different branches mathematics difficult compare implementing papers alternative techniques fields may perform faster hoffman algorithm 
meet restrictions paths extra precautions taken 
research described undertaken author supervised second part sc 
telecommunications information systems department electronics systems engineering university essex 
author supported epsrc advanced studentship 
yen jy 
finding shortest paths network 
management science lawler el 
procedure computing best solutions discrete optimisation problems application shortest path problem 
management science theory series ahuja rk magnanti tl orlin jb 
network flows theory algorithms applications 
prentice hall new jersey katoh ibaraki mine efficient algorithm shortest simple paths 
networks hoffman method solution nth best path problem 
journal association computing machinery acm dijkstra ew 
note problems connexion graphs 
numerische mathematik mj sinclair mc ultra high capacity optical transmission network european research project cost 
information telecommunications automata journal dr iterative methods determining shortest paths network 
networks 
binary enumeration tree find shortest paths 
methods operations research germany th symposium operations research st switzerland alternative route problem 
operation research rairo recherche 
