line analytical mining association rules hua zhu university science technology china thesis submitted partial fulfillment requirements degree master science school computing science fl hua zhu simon fraser university december rights reserved 
may reproduced part photocopy means permission author 
approval name hua zhu degree master science title thesis line analytical mining association rules examining committee dr james delgrande chair dr jiawei han senior supervisor dr qiang yang supervisor dr william external examiner date approved wide applications computers automated data collection tools massive amounts data continuously collected stored databases creates imminent need great opportunities mining interesting knowledge data 
association rule mining kind data mining techniques discovers strong association correlation relationships data 
discovered rules may help market basket cross sales analysis decision making business management 
thesis propose develop interesting association rule mining approach called line analytical mining association rules integrates developed olap line analytical processing technology efficient association mining methods 
leads flexible multi dimensional multi level association rule mining high performance 
algorithms developed approach mining various kinds associations multi dimensional databases including intra dimensional association inter dimensional association hybrid association constraints association 
algorithms implemented dbminer system 
study shows approach presents great advantages existing algorithms terms flexibility efficiency 
keywords olap line analytical processing data mining association rule mining data warehouse 
senior supervisor dr jiawei han inspiring data warehousing date mining interesting exciting 
gratitude goes invaluable support guidance research development writing thesis 
supervisor dr qiang yang external examiner dr william reading thesis giving suggestions 
take opportunity express intelligent database laboratory school computing science simon fraser university invaluable suggestions help years study 
go friends simon fraser university making enjoyable time 
love family especially parents zhu lei sister rong zhu brother lin zhu continuous love encouraging 
gratitude go husband luo supporting understanding love 
thesis written 
dedication parents 
contents 

dedication 

line analytical processing 
association rule discovery 
association rule 
area application 
motivation 
problem lack general association rules mining algorithm 
problem users may overwhelmed number rules identified 
problem strong association rules necessarily interesting 
thesis organization 
related 
data warehousing olap technology 
data warehousing data cube 
line analytical processing 
concept hierarchy 
association rules discovery 
market basket analysis 
multi level association rules mining 
multi dimensional association rules mining 
constraint association mining 
interestingness association rules 
current projects dbminer system 
general framework 
overview 
data warehouse 
working data cube olap engine 
working data cube 
olap engine 
association mining engine 
basic concepts 
framework association mining engine 
visualization graphical user interface 
olap association mining 
generating working cube 
generating frequent itemsets 
apriori algorithm 
intra dimensional association mining 
inter dimensional association mining 
hybrid association mining 
generating strong association rules frequent itemsets mining multi level association rules 
interestingness association rules 
constraint association mining 
apriori 
anti monotone constraints 
pre constraints 
performance analysis 
system implementation 
interface 
association rules visualization 

summary research 
discussion 
bibliography 
list figures architecture line analytical association mining 
base cube dimensions location product profit 
dimensional data cube generated sales 
data cube mining intra dimensional association rules 
generating frequent itemsets minimum support 
generating frequent itemsets minimum support 
generating frequent inter itemsets apriori property minimum support 
performance comparison sparse cube 
performance comparison dense cube 
hierarchy location dimension 
cube generated rolling 
frequent itemset example number bracket price associated product 
frequent itemset example 
frequent itemsets example 
performance analysis different threshold algorithm apriori 
performance analysis different threshold algorithm apriori 
gui page various association rules mining 
gui page intra dimensional association rules mining 
gui page hybrid association rules mining 
mining country level location dimension 
mining region level location dimension 
interface specifying constraints dimensions 
interface specifying constraints dimension values 
interface specifying constraints dimension body head interface specifying constraints dimension body head values 
tabular association rules 
ball graphical association rules 
bar graphical association rules 
list tables cube table cube 
sales example data attributes 
generalized relation sales count attributes 
transaction table generated sales 
dimensions cube experiment 
size candidate itemsets inter dimensional association mining algorithms min supp 
cubes information experiment 
size candidate itemsets inter dimensional association mining algorithms min supp 
size candidate itemset inter dimensional association mining algorithms min supp 
price product 
anti monotone constraint categories 
pre prune constraints 
chapter wide applications computers automated data collection tools massive amounts data continuously collected databases creates great demands analyzing data turning useful knowledge 
knowledge discovery data mining kdd important field years address need analyzing data contained large database 
discovering kinds knowledge large databases association rule mining attracted great attention database research communities years :10.1.1.33.4036:10.1.1.103.5437:10.1.1.40.6984:10.1.1.50.1686:10.1.1.144.4956:10.1.1.40.6757:10.1.1.41.407:10.1.1.40.8600
association rule mining form data mining discover interesting relationships attributes data 
discovered rules may help marketing decision making business management 
example rule customers purchase tires auto accessories get automotive services done 
rules simple easy understand explain catch important relationships data large databases wonder mining association rules large data sets focused topic research data mining 
similar mining tasks mining association rules involves major issues including efficiency scalability usability understandability 
real world applications data mining tasks applied data consisting millions tuples 
consequently concern efficiency scalability mining associations large databases order substantially reduce computational complexity data intensive process 
essential research issue surrounding association rule mining find fast effective association rule mining algorithms 
thesis propose develop interesting method called line analytical mining association rules integrates developed olap technology efficient association mining methods 
developed method achieves flexible multi dimensional multi level association rule mining high performance 
developed method presents great advantages existing algorithms terms flexibility efficiency 
line analytical processing due increasing importance data warehousing techniques developed analyze data large databases efficiently effectively 
available tools line analytical processing olap technique proven popular tools line fast effective multidimensional data analysis 
olap technology uses multidimensional view aggregated data provide quick access strategic information analysis 
facilitates queries large amounts data quickly traditional relational database techniques :10.1.1.120.4505
olap techniques raw data large databases organized multiple dimensions dimension contains multiple levels abstraction 
organization provides users flexibility view data different perspectives 
data generalization achieved approaches data cube attribute oriented induction 
basically olap includes stages selecting data data warehouses building data cube line analysis cube 
data cube computation algorithms exist materialize data cubes efficiently olap algorithm exist manipulate data cubes roll drill slice dice pivot thesis take advantage widely techniques combine association rule mining techniques olap association rule mining :10.1.1.50.6608
association rule discovery association rule mentioned mining association rules find interesting association correlation relationships large set data identify sets predicate item frequently occur formulate rules characterize relationships 
formal definition 
definition association rule rule form am predicates items 
rules usually interpreted items 
am occur case items 
occur transaction 
exactly constitutes item transaction depends application 
give association rules different concepts item transaction 
example rule transaction database branch 
roduct ibm home computer roduct sony printer variable representing transaction 
case items things customer buys transaction set items purchased 
rule says customers purchase ibm home computers tend buy sony printers time 
example rule data warehouse dimensions age occupation product 
age gamma occupation student roduct laptop items distinct attribute values dimensions transaction tuple data warehouse 
rule says customs students age possibly buy laptops 
area application association rules mining originated problem market basket analysis applied problem domains including business engineering medicine finance 
basis tasks data mining association rules achieve goal data mining tasks modeling data prediction outcomes support decision 
ffl market basket analysis 
understanding customers buying habits preferences essential retailers decisions including put sale design coupons place merchandise shelves order maximize profit association rules mining provide information 
effective mining application retail environment market basket analysis shopping basket analysis 
analyzes attributes customers shopping basket electronic point sale data applies findings launch effective promotions advertising 
example rules diet coke consequent may help plan store boost sales diet coke 
ffl cross sale strong competitive environment service industries retaining customers making better customer base important important attracting new customers 
companies involved providing service product 
know existing customers data collected targeting customers products seen way quick profits 
cross sales term problem attempting sell product existing customers customers particular product 
customer databases large large organizations manually sifting difficult 
automatic association rules discovery techniques incorporate domain expertise discover useful knowledge domain expert help solve cross sales problems 
ffl partial classification real life problems require partial classification data describe discovery models show characteristics data classes may cover classes examples class 
conventional classifiers ineffective large number attributes values attribute missing 
problem solved association analysis 
examples data consisted medical tests patients 
usual hundreds medical tests single patient 
doctors rules models discovered association analysis see medical test results predicted combinations test results 
tests avoid giving patients redundant tests complex tests replaced simple tests 
ffl financial services association rules mining extensively financial service industries 
security analysts analyze massive financial data order build trading risk models developing investment strategies 
number companies financial sector testing technique produced positive results 
products may utilized currency trading data tidying claims processing automated stock selection credit scoring identifying fraud patterns mortgage screening near 
motivation association rule technology reached level maturity association rule techniques included commercial mining products area remains area active research 
serious limitation current association rules related issues motivate continued studies knowledge line association analysis 
problem lack general association rules mining algorithm association rules classified categories different criteria 
instance ffl dimensions data involved rule cases multi dimensional rules 
ffl levels abstractions involved rule single level multi level rules 
various algorithms proposed different cases general applicable situations 
especially multi dimensional rules mining current research confined simple case multi dimensional association repetitive predicates city cost gamma roduct natural ask discover multi dimensional association rules repetitive predicates case hasn attracted attention 
instance city roduct ents roduct contribution thesis propose general algorithm current algorithms 
algorithm combination algorithm single dimensional rules mining cube algorithm multidimensional rules mining 
experiments show algorithm resolves limitation discussed efficiently losing scalability speed applied previous cases 
problem users may overwhelmed number rules identified support confidence thresholds limit number rules generated danger rules genuine interest user may lost thresholds set low 
motivation allowing user specify desired form partial contents rules returned constraintbased mining 
specifically users allowed provide hypotheses form constraints pattern templates 
system attempts confirm hypotheses searching rules satisfy constraints 
example example constraint item roduct ents head rule rule satisfies constraint cost gamma location belgium roduct ents currently method constraint mining add step rule filtering mining 
obviously far efficient especially applied large database 
contribution thesis propose cube approach problem 
try push constraints procedure association rules mining efficient reducing rule search space 
problem strong association rules necessarily interesting cases association analysis sufficient find interesting rules 
example example consider sales database shows transactions vancouver include sleeping bag involve vancouver sleeping bag 
suppose minimum support minimum confidence 
association rule discovered 
location roduct support confidence rule misleading percentage transactions including sleeping bag larger 
fact location vancouver product sleeping bag negatively associated involved decreases likelihood involved 
fully understanding phenomenon unwise business decisions rule 
contribution help filter misleading strong associations form necessary perform correlation analysis thesis propose method get strong interesting rules calculating interestingness thesis organization remaining thesis organized follows 
chapter outlines existing related thesis 
general description association mining system chapter 
discussion address problems 
general multidimensional association rules mining second correlation analysis constraints mining 
approaches algorithms solving problems experimental results chapters 
brief discussion system implementation chapter 
chapter 
chapter related basic concept association rules introduced chapter 
chapter review current research olap technology association rules mining 
overview related topics focuses major themes efficient olap operations large data warehouses fast effective association mining algorithms 
data warehousing olap technology data warehousing data cube data warehouse subject oriented integrated time variant non volatile collection data decision support applications 
construction data warehouse data cleaning data integration viewed important preprocessing step knowledge discovery tasks 
proposal construction large data warehouse multi dimensional analysis credited codd coined term olap line analytical processing 
portions data warehouses precomputed materialized efficient processing materialized multidimensional database popularly called data cube :10.1.1.120.4505
data structure point view data cube viewed large multi dimensional array consists set dimensions respect analyzed data set values cell called measures 
operational point view data cube referred relational operator computes group aggregations possible subsets specified dimensions :10.1.1.120.4505
treats aggregated attributes dimensional subcube cuboids 
aggregation particular set attribute values point space 
rapid acceptance operator led variant cube proposed sql standard 
data embedded data cube primitive concept level raw data database 
knowledge extracted expressed base cube meaningful useful 
usually desirable data low concept level reasonable higher 
important functionality called data generalization 
line analytical processing olap line analytical processing set operations provided data warehouses manipulate data multiple dimensions multiple levels abstraction 
basic olap operations include roll increasing level aggregation drill decreasing level aggregation slice dice selection projection pivot re orienting multidimensional view data 
olap engine demands fast processing large volume data contained data warehouse 
requires highly efficient cube computation query processing techniques 
common powerful query optimization technique materialize subcubes compute raw data time 
harinarayan gave detailed discussion technique proposed greedy algorithm selective materialization certain expensive views studied indexing technique task :10.1.1.41.1205
research speed computation multi dimensional aggregates done 
consists influential techniques represented agarwal extends sort hash grouping methods efficient optimizations combining common operations multiple group bys caching represented zhao multi way array algorithm molap systems :10.1.1.50.6608
facilitate efficient data accessing current data warehouse systems support index structures including bitmap indexing join indexing bitmapped join index 
concept hierarchy essential background knowledge applied data generalization concept hierarchy associated dimension 
concept hierarchy tree lattice structure organizes concepts dimension partial order levels closer root general closer leaf nodes 
generally concept hierarchy directly derived database schema referred schema specification 
defined user domain experts knowledge attribute called instance specification 
cases automatic generation concept hierarchies dynamic adjustment existing hierarchies desirable 
methods automatic generation concept hierarchy numerical attribute data distributions dynamic refinement generated concept hierarchy learning request introduced 
association rules discovery concept association rules introduced 
efficient association mining mechanism large databases extensions different domains subject studies 
studies cover broad spectrum topics including fast algorithms level wise apriori framework variations including partitioning sampling incremental updating parallel algorithms mining generalized multi level rules mining quantitative multi dimensional rules mining long patterns dense data sets mining correlations causal structures mining ratio rules query constraint mining associations mining cyclic association rules mining partial periodicities rule mining query languages :10.1.1.103.5437:10.1.1.50.1686:10.1.1.40.6757
limited space limited scope study going survey aspects studies extensions 
overview field association rule mining confined scope methods going extend thesis 
motivated huge amounts sales data referred basket data interest information driven marketing processes problem association rules mining introduced 
lot research done various aspects topic 
lot exciting results technique go far originally applicable 
association mining useful important tool data mining 
market basket analysis initial association rules mining mainly market analysis sales basket data 
record data typically consists transaction identification items bought transaction 
interesting influential algorithm mining frequent itemsets called apriori proposed rakesh agrawal ramakrishnan srikant 
apriori employs iterative approach set frequent itemsets 
find frequent itemsets find frequent itemsets 
iteration important property called apriori property reduce scan times database improve efficiency generation frequent items 
details apriori algorithm discussed chapter 
apriori algorithm variations studied aimed improvements performance algorithm 
example technique reduce size candidate itemsets scan reduction technique reduce number database scan transaction reduction technique reduce number transactions scanned iteration 
strategy partitioning data shows stronger effect scan reduction methods studied reducing number scans required 
multi level association rules mining researchers applications difficult find strong interesting associations data items primitive levels abstraction due sparsity data 
strong associations discovered high concept levels common sense knowledge 
mining system capabilities mine association rules multiple levels abstraction traverse easily different abstraction spaces desirable 
concept hierarchy existing algorithms mining association rules group efficient algorithms mining multilevel association rules proposed 
method proposed han fu uses concept hierarchy information encoded transaction table original transaction table iterative data mining 
top progressive deepening technique developed extends existing single level association rules mining algorithms finds large data items top level mining progress large descendants lower concept levels 
reduced support recommended progressively lower minimum support threshold mining touches deeper levels abstraction 
example location dimension may minimum support threshold mining items high level abstraction region smaller threshold mining level lower country smaller threshold mining level lower city 
better uniform support different levels generate sufficient meaningful association low levels keep rules generated high levels sufficiently interesting 
multi dimensional association rules mining terminology multi dimensional databases rules commonly mined transactional data referred single dimensional association rules contain single predicate repetitive occurrence 
progress data warehousing olap technology transactional databases want find associations multi dimensional data warehouses referred multi dimensional association rules 
data cube model mining multi dimensional association rules proposed kamber combines cube data structure olap techniques multi dimensional slicing layered cube search 
efficient algorithms developed existing data cube constructing data cube fly 
idea find frequent itemsets dimension frequent itemsets grow frequent itemsets multi dimensional slicing data cube 
performance analysis shows method outperforms direct extension table apriori algorithm 
furthermore method easily extended mine multi level multi dimensional association rules 
constraint association mining interesting important problem constraint association mining attracts attention 
user provide additional constraints rule pattern mined generated rules interests user specific useful 
effective influential research constraint mining transaction database conducted ng 
introduce analyze properties constraints critical pruning anti monotonicity succinctness 
efficient algorithm called cap proposed achieves significant degree constraints pruning optimization pushing constraints deeply mining process 
type constraint mining meta rule guided multi dimensional mining constraint expressed meta rule 
method extends cube method multi dimensional association rules mining solve problem 
algorithms proposed availability data cubes 
basic idea appropriate cube meta rule containing predicates cube search applied layer summary cells directly find frequent predicates sets interestingness association rules discussed strong association rules discovered interesting users 
objective interestingness measures statistics data step goal uninteresting rules 
research papers discussing problem 
craig test measuring independence classical statistics 
topics association rules mining studied 
example parallel distributed mining association rule goal increasing mining speed extension applicability association rules data types multi media data sequential data formulation mining operations sql queries integration association rule mining database management systems 
current projects dbminer system large number projects association rules way 
association rules applications commercial nature great deal interest commercial software vendors 
universities government agencies significant projects area 
large commercial software vendors pronounced research projects initiated ibm silicon graphics sas 
contributions ibm almaden research center especially notable development association rule technology 
investigated efficient methods finding associations formulating association rules mining queries 
continuing projects including quest data mining project 
silicon graphics developed sophisticated data mining visualization package called public domain machine learning package mlc 
includes ability mine association rules mining capabilities 
sas institute focused data mining statistical analysis techniques 
microsoft funds basic research data mining decision theory adaptive systems group 
microsoft put forward ole db olap set objects interfaces extend ole db provide access multidimensional data sources 
specification supported large majority companies doing data mining applications 
addition major corporations numerous smaller companies developed products support association rules 
government agencies notable supporter data mining research nasa supported research directly collaboration universities 
universities data mining projects including sfu stanford univ university helsinki 
projects dbminer developed intelligent database research laboratory sfu intelligent data mining data warehousing system 
consists modules including cube computation data viewer cube viewer summarization tool classification tool association tool prediction tool 
association module discovers various association relationships large datasets 
chapter general framework problem association mining viewed pattern search problem 
try find respect requirement exist strong associations interesting dimensions patterns 
chapter introduce general architecture association mining system framework association rule mining implemented successfully dbminer system 
explain basic concepts frequently discussion 
overview mentioned researches association mining flat relational table structure :10.1.1.33.4036:10.1.1.103.5437:10.1.1.40.6984:10.1.1.50.1686:10.1.1.144.4956:10.1.1.40.6757:10.1.1.41.407:10.1.1.40.8600
association mining method data cube structure integrates association mining olap techniques 
method referred line analytical association mining 
observations motivate explore method 

minimum support threshold association rule satisfy implies value examined appear nontrivial number times corresponding attribute initial relation 
observation serve constraint prevent examining meaningless candidate attributes combinations key candidate key attributes 
example mine association rules student relation university database attributes student name student id removed rule referring attributes rule accumulate nontrivial supports pass minimum support threshold 
student student name home phone similarly data numerical attributes generalized certain level abstraction order accumulate sufficient support pass minimum support threshold 
example values attribute gpa student relation generalized range values high level concepts excellent retaining primitive level 

usually large database large number attributes user interested small subset attributes 
data relation may large number attributes data relations may attributes 
cases want extract interesting relationships small number attributes 
facility friendly interface provided specify set attributes mined exclude set irrelevant attributes examination 
see automatic user controlled removal generalization attributes original table reduce number dimensions raise level abstraction attributes examined mining cubes constructed relatively small compared huge amount raw data 

enriched functions olap date cube facilitate association mining 
data cube constructed contains information raw data summarized data 
methods efficient construction working data cube association rules mining engine olap engine users data warehouse user interface architecture line analytical association mining generalization accessing data cubes extensively researched olap systems successfully constructed exploration data cube structures realistic reasonable efforts 
facilitate efficient effective mining associations 
lay architecture association mining system 
shown general architecture consists parts data warehouse working data cube olap engine association mining engine part discussed sections 
data warehouse data warehouse semantically consistent data store serving physical implementation decision support data model storing information enterprise needs strategic decisions 
includes ffl integrated historical data allows miner easily quickly look historical data 
data cleansing data integration performed dedicated system components 
keys may reconstructed encoded values reconciled structures data standardized 
great efforts data cleansing data integration miner integrated data warehouse concentrate task association mining 
ffl materialized data cube substantial cost fly computation data cube calls precomputation materialization cubes 
materialization possible view may require huge amount disk space 
partial materialization selected cuboids suggested alternative solution :10.1.1.41.1205
selectively materialized cuboids saved data warehouse may save amount mining association miner 
ffl metadata metadata serves road map miner 
describe content data context information 
important kinds metadata concept hierarchy 
mentioned hierarchy basic knowledge data warehouse olap embedded dimension specification 
data warehouse sets stage successful efficient exploration world data 
working data cube olap engine working data cube association mining task involved dimensions 
precompute materialize task relevant data data warehouse dimensional west south location carry bag tents product profit poor base cube dimensions location product profit data cube 
dimension cube contains ja values ja number distinct values dimension ja rows represent distinct values cell rows stores count value generated initial relation raw data count 
row special value cell stores aggregation value previous rows 
aggregation values represent essential features data cube structure 
explore chapters 
generally map data cube attribute table referred cube table attribute representing dimension th attribute representing count cube cell matched tuple table 
example example shows tiny cube consists dimensions location product profit 
dimension values 
cube table corresponding cube table 
conceptually data cube viewed partitioned multiple dimension spaces different kinds cells 
space consists data cells value 
gamma space consists cells single value 
space consists cells gamma values 
space consists cell values 
location product profit count south carry bags poor south carry bags south carry bags south tent poor south tent south tent south poor south south delta delta delta delta delta delta delta delta delta delta delta delta north table cube table cube example cube example get cube spaces definition 
space consists rows value 
second forth row shown table space 
space consists rows value 
third sixth seventh eighth row shown table examples 

space consists rows containing values 
ninth tenth row shown table cases 

cell composes space shown row table 
olap engine working cube constructed complete information needed task preserved cube cells including aggregated ones refer original relation 
cube serves data source interface data mining task 
data mining works large database essential enriched efficient functions create play data cube olap engine major task compute user olap instructions creating data cube drilling dicing pivoting return results user interface layer shows important role entire data mining architecture 
details olap techniques major part thesis papers efficient computation data cube performing olap operations 
association mining engine association mining engine major component association mining system 
major part discussed thesis 
introduce general framework association mining engine 
detailed algorithm discussed chapters 
introduce important terms frequently thesis 
basic concepts set items referred itemset itemset contains items itemset left hand side rule part 
am definition known body rule right hand side head rule 
frequency itemset total number transactions contain itemset 
support confidence major measures rule interestingness 
respectively reflect usefulness certainty discovered rule 
rule support probability transaction contain confidence probability transaction contains contain concept itemset frequency computation support confidence defined equations support frequency confidence frequency frequency itemset frequent support minimum support threshold 
association rule considered strong satisfies minimum support threshold minimum confidence threshold concrete example 
example rule generated sales relational database 
roduct location north confidence support rule means carry bags bought north profit confidence certainty customers represent customers study 
minimum support threshold minimum confidence threshold rule interesting 
thesis types association analysis discussed 
ffl inter dimensional association 
association set dimensions 
example location south bad roduct ents see items rule different dimension 
call multi dimensional association repetition 
ffl intra dimensional association 
association dimension 
example roduct roduct ents items rule dimension call association 
ffl hybrid association association set dimensions items rule dimension 
called multi dimensional association repetition previous inter dimensional association mining referred multi dimensional association mining repetition 
example location north roduct roduct ents ffl constraint association preferable user specified constraints guide association rule mining process 
constraints applied rule items rule forms 
example user want find rules item product carry bags rule head desired rule satisfying constraint location south roduct framework association mining engine generally generating working cube problem discovering association rules decomposed subproblems 
find frequent itemsets support minimum support 

frequent itemsets generate desired rules 
correspondingly data cube structure phase framework system ffl phase generate frequent itemsets satisfying thresholds specified constraints 
input 

task relevant working data cube 
minimum support threshold min supp 
set constraints rule items output 
list frequent itemsets satisfying constraints output 
type association want generate frequent itemset inter dimensional itemset intra dimensional itemset hybrid itemset 
ffl phase generate desired association rules 
input 

frequent itemsets output phase 
minimum confidence threshold min conf 
set constrain rule forms 
output 
getting satisfied frequent itemsets phase proceeded generate desired rules 
confidence significance metric constraints imposed body head specified 
association rules satisfy confidence threshold constraints output 
furthermore examining rules user option perform correlation analysis association analysis sufficient find interesting rules 
association rules satisfy confidence threshold output 
visualization graphical user interface allowing visualization discovered association rules various forms help users different backgrounds identify rules interest guide system discovery 
user interface enriched query constraints mining tool serve high level user interface implement forms visualizations table view graphical view 
discussion topic chapter 
chapter olap association mining discussed previous chapters task olap association mining explore data cube structure mining association rules study efficient mining methods structure 
type rules mined problem decomposed sub categories inter dimensional association intra dimensional association hybrid association 
subclasses mining problems consequently referred inter dimensional intra dimensional hybrid association mining respectively 
basically steps olap association mining algorithms divided parts 

generating task relevant working cube desired dimensions 
generating frequent itemsets itemsets support greater minimum support threshold 

generating association rules frequent itemsets 
chapter give algorithms subclass association mining 
multi level association mining discussed 
start discussion introduce data source sales examples chapter 
sales sales database includes sales information 
part data shown table 
see attributes location product profit categorical third profit numerical 
specification examples data source raw data 
location product profit seattle alert devices seattle alert devices seattle alert devices delta delta delta delta delta delta delta delta delta seattle alert devices seattle carry bags seattle carry bags seattle carry bags delta delta delta delta delta delta delta delta delta tokyo tents tokyo tents table sales example data attributes generating working cube mining task need generate working data cube extracting relevant date data warehouse 
take example show working cube generated 
example suppose want perform association mining involving dimensions location product profit dimensional cube generated olap engine shown 
numerical dimension profit generalized 
suppose generalized level contains values poor mediocre average location product profit count hongkong sport wear hongkong sport wear excellent hongkong water purifier mexico alert devices poor mexico carry bags poor mexico carry bags average mexico tents mediocre mexico tents excellent seattle carry bags seattle sport wear poor seattle sport wear seattle water purifier average tokyo carry bags mediocre tokyo sport wear average tokyo tents mediocre table generalized relation sales count attributes excellent map real profit values raw data values aggregate new relation attribute count 
new relation shown table 
new relation cube construction algorithm generate dimension cube 
dimensions location product profit 
dimension values including distinct attribute values table plus special value 

count value table saved cube cell 
example count cell location seattle roduct 
product alert devices sport wear water tents poor excellent average mediocre location profit tokyo seattle mexico hongkong carry bags dimensional data cube generated sales furthermore definition cube space get cube spaces cube depicted different colors 
example space comprised white cells space cube 
generating frequent itemsets learned generate working data cube mining task 
sections study algorithms generating frequent itemsets purpose mining association rules 
different categories associations intra dimensional hybrid association rules different algorithms 
importance apriori algorithm fully discuss section 
apriori algorithm apriori algorithm proposed agrawal srikant interesting influential algorithm generating intra dimensional frequent itemsets transaction table 
typical transaction table consists fields transaction id items associated transaction id grouping transaction id transaction table transformed set table items sharing transaction id merged tuple 
example table follows 
example sales data take location transaction id attribute product item attribute 
grouping totally transactions 
assume items transaction stored lexicographic order shown table 
trans id location product hongkong water sport wear mexico alert devices carry bags tents seattle carry bags water sport wear tokyo alert devices carry bags water sport wear table transaction table generated sales detailed algorithm depicted 
step apriori find frequent itemsets step divided sub steps generates frequent itemset 
candidate itemsets generated gen procedure joins frequent gamma itemset eliminates having gamma subset frequent 
second frequent itemsets generated procedure gen frequent described candidates generated database scanned transaction subset function find subsets transaction candidate count candidates accumulated candidates satisfying minimum support comprise algorithm apriori generating frequent itemsets iterative approach 
input transaction minimum support threshold min supp 
output set frequent itemsets method 
oe 
candidate itemsets fall distinct values item 

compute frequent itemsets gen frequent 
repeat generate candidate itemsets gen candidate gamma compute frequent itemsets gen frequent oe function gen frequent generate frequent itemsets candidates itemset frequency transaction scan counts subset get subsets candidate frequency return fc jc support min function gen candidate gamma generate candidate itemsets gamma oe itemset gamma itemset gamma gamma items item different gamma subset gamma delete add return rationale 
apriori algorithm employs iterative approach 
frequent itemsets denoted find frequent itemsets turn find frequent itemsets 
improve efficiency level wise level level generation frequent itemsets important property called apriori property explored reduce search space 
theorem apriori property non empty subsets frequent itemset frequent 
property proposed proved agrawal srikant 
observation 
itemsets adopt minimum support threshold min supp itemset frequent min supp adding item itemset combined set occur frequent min supp 
property belongs special category properties called anti monotonicity sense set pass test superset fail test 
called anti monotone property monotonic context failing test 
see property important constraint optimization 
discussed details chapter 
apriori property frequent itemsets obtained joining frequent gamma itemsets gamma itemset gamma subsets frequent 
subset gamma removed candidate list 
observation facilitates generation candidate itemset gamma superset members may may frequent frequent itemsets final check support candidate results determination candidates having support minimum support threshold frequent definition belong 
generate small apriori property generated steps 
candidate generated joining members gamma members joinable share gamma common items gamma gamma fa bja ae gamma ja bj gamma second remove members contains gamma subset frequent 
basic understanding apriori algorithm works transaction database 
efficient construction generalization accessing data cubes extensively researched successfully constructed olap systems exploration data cube structures realistic reasonable efforts 
data cube structure facilitates mining associations multiple levels abstraction 
section examine efficient methods mining association rules large database data cube structure 
start simplest case mining intra dimensional associations 
intra dimensional association mining intra dimensional association association dimension call item dimension grouping dimension call transaction dimension 
generally dimensions involved intra dimensional association mining 
dimensional cube created olap engine served working data cube mining 
give example cube follows 
mexico water tents sport wear carry bags alert devices location products tokyo hongkong seattle data cube mining intra dimensional association rules example sales data table take location transaction dimension product item dimension 
corresponding twodimensional cube created shown 
cube definition cell saves count value generated original relation 
want intra dimensional association mining cube 
algorithm shows detailed algorithm 
procedure similar apriori algorithm support candidate itemset computed scanning part data cube transaction table 
algorithm generating intra dimensional frequent itemsets 
input ffl dimensional data cube cube transaction item 
ffl minimum support threshold min supp 
output frequent intra dimensional itemsets method 
oe 
candidate itemsets fall distinct values item 
generate frequent itemsets gen frequent 
repeat generate candidate itemsets gen candidate gamma generate frequent itemsets gen frequent oe function gen frequent generate frequent itemsets candidates oe candidate itemset fi frequency transaction true item get count saved cube cell count item transaction false break true items itemset transaction frequency support frequency support min supp frequent itemset return function gen candidate gamma generate candidate itemsets frequent gamma itemsets gamma function works algorithm 
rationale apriori property algorithm starts finding frequent itemsets 
candidate item take slicing cube corresponding item slicing cube cells number transactions cell transaction cube cell count value saved 
value decide item contained transaction larger means item transaction sense see number cells slicing account larger number containing item frequency computing support comparing min supp threshold judge frequent 
discover frequent itemsets algorithm uses gamma gamma generate candidate itemsets join procedure exactly apriori algorithm 
candidate itemset items dimension different positions data cube search corresponding slicing covering items transactions find items occur 
transaction look cells slicing transaction count values saved cells larger means items occur transaction 
number transactions exactly frequency itemset frequency computation procedure candidate itemset 
example try example cube 
want mine intra dimensional association rules taken location transaction dimension product item dimension min supp 
ffl iteration algorithm total items products comprise candidate itemsets product water purifier slicing cube get plane cells product water purifier 
comparing count values slicing values greater 
frequency water purifier 
algorithm simply repeats procedure candidates frequency results shown 
ffl compared threshold frequent itemsets determined 
consists candidate itemset frequency 
ffl discover candidate itemsets algorithm uses generate itemsets comprising ffl itemset carry bags water purifier slicing cube get plane cells corresponding product carry bags product water purifier 
check count values pair cells transaction location 
find pairs cells values larger ff seattle water purifier seattle carry bags gg ff tokyo water purifier tokyo carry bags gg 
frequency itemset 
repeat procedure itemset results shown 
ffl frequent itemsets determined consisting candidate itemsets frequency 
ffl generation candidate itemsets divided steps 
ff alert devices carry bags sport wear alert itemset alert carry bags sport wear water purifier tents get dicing cube compute support water purifier mexico seattle tokyo location product support water purifier get support candidate item tents itemset carry bags sport wear water purifier supp compare candidates support minimum support supp alert carry bags water purifier sport wear itemset generate alert sport wear water purifier alert carry bags alert devices sport wear alert devices water purifier carry bags sport wear carry bags water purifier itemset candidate water purifier get dicing compute support candidate carry bags water purifier hongkong hongkong seattle tokyo mexico water purifier carry bags location get support candidate item itemset supp sport wear water purifier alert carry bags alert devices sport wear alert devices water purifier carry bags sport wear carry bags water purifier compare candidates support minimum support carry bags sport wear carry bags water purifier sport wear water purifier itemset generate get dicing computer support itemset carry bags sport wear water purifier supp candidate frequent support carry bag water purifier generating frequent itemsets minimum support 
devices carry bags water purifier carry bags sport wear water purifier apriori property subsets frequent itemset frequent determine candidates alert devices carry bags sport wear alert devices carry bags water purifier possibly frequent 
remove saving effort unnecessary support computation 
ffl order determine cube sliced scanned way generating frequent itemset final result shown 
ffl frequent itemsets null algorithm terminates frequent itemsets 
discussion subsection problem finding intra dimensional association rules olap technologies discussed 
cube algorithm 
basically algorithm works follows generates candidate itemsets candidate itemset scans necessary cube cells compute support decides itemset frequent 
part takes advantage apriori property frequent gamma itemset items overlapping join get itemset decide candidate tracking back subset itemset 
subsets frequent itemset candidate 
analyzing algorithm total number tracking back computed equation size longest possible candidate itemset jl gamma gamma number possible itemset generated joining frequent itemsets gamma gamma number subsets itemset joined itemsets need check subset jl gamma gamma theta gamma second part mainly cube scanning 
number scanning total number cells frequency computation candidate itemsets computed equation jc number itemsets candidate number transactions data cube 
jc theta theta equations time spent association mining roughly divided parts tracking back time cube scanning time 
totally fixed minimum support threshold variables equations jl gamma gamma jc major factors affecting values data cube density number distinct values item dimension 
denser cube bigger number distinct values item dimension time spent mining 
inter dimensional association mining inter dimensional association association set dimensions 
procedure apriori algorithm different support computation method 
case items itemset come different dimensions available summary layers data cube frequency itemset directly obtained cube cell making mining procedure efficient 
detailed algorithm shown follows 
algorithm generating inter dimensional frequent itemsets dimensions apriori pruning 
input ffl dimensional data cube cb 
ffl minimum support threshold min sup 
output set frequent inter dimensional itemsets dimensions 
method 
oe 
generate candidate itemset dimension fall distinct values dimension 
generate frequent itemset gen frequent 
repeat generate candidate itemsets gen candidate gamma generate frequent itemsets gen frequent oe function gen frequent generate frequent itemset candidates oe candidate fi frequency count cell cube space support frequency support min supp frequent itemset fig function gen candidate gamma generate candidate itemsets frequent gamma itemsets gamma oe item gamma item gamma gamma items different dimensions infrequent gamma subset delete add return rationale apriori property algorithm starts finding frequent itemsets discover set frequent itemsets algorithm uses gamma gamma generate candidate itemsets candidate itemset supp generate generate itemset carry bags get count mexico seattle location sport wear product supp itemset candidate count support cell get support candidate item compared minimum support get carry bags profit poor supp seattle carry bags mexico poor seattle carry bags poor carry bags candidate support cell get support candidate item compared minimum support get mexico sport wear seattle sport wear itemset mexico carry bags seattle carry bags mexico poor mexico seattle sport wear poor carry bags poor carry bags sport wear get support get location hongkong mexico tokyo alert carry bags sport wear water purifier tents poor mediocre average excellent product profit itemset carry bags seattle seattle poor itemset seattle carry bags poor seattle carry bags itemset seattle carry bags seattle carry bags get supp generating frequent itemsets minimum support 
check corresponding cell cube space 
definition cube count value saved cell aggregation initial data base exactly frequency itemset represented cell 
compare threshold collect support min sup 
example example show algorithm works 
example cube shown section 
want inter dimensional association mining dimensions location production profit 
algorithm mining performed follows 
ffl get distinct values dimensions candidate itemsets item example carry bags product dimension get cell carry bags cube space count value saved cell frequency itemset carry bags iterate item way compute frequency 
ffl threshold min sup frequent itemset determined 
consists candidate itemsets having frequency 
results shown 
ffl intersection frequent itemsets different dimensions generate candidate itemsets comprising referred 
ffl itemset seattle sport wear get cell seattle sport wear cube space count value saved cell means frequency itemset 
way get frequency itemset resulting counts shown 
ffl frequent itemsets determined consisting candidate itemsets having frequency 
ffl join prune step get candidate itemset 
example joining seattle carry bags seattle poor get seattle carry bags poor need track back carry bags poor frequent itemset 
fact seattle carry bags poor added ffl compute frequency itemset searching cube space checking count value saved corresponding cell 
far described cube algorithm inter dimensional association mining 
method mainly apriori property candidate itemsets generated joining frequent gamma itemsets gamma pruning containing subsets gamma join prune procedure reduces size reduces frequency computation way need spend time joining gamma joined itemset gamma subset checked see frequent gamma itemset 
data cube sparse size frequent itemset big join check procedure worthy compared optimization gained pruning candidate itemsets 
data cube dense frequent itemsets huge 
possible spend time joining checking prune candidate itemsets 
furthermore implementing apriori property requires complex data structure 
usually tree advanced tree structure 
case apriori algorithm show advantage 
give cube algorithm solve problem 
method apriori property pruning 
get frequent itemsets generate candidate itemsets obtaining possible combination items algorithm generating inter dimensional frequent itemsets dimensions apriori pruning input ffl dimensional data cube 
ffl minimum support threshold min sup 
output frequent inter dimensional itemsets method 
oe 
generate candidate itemset dimension fall distinct values dimension 
generate frequent itemsets gen frequent supp generate get support candidate item compared minimum support get generate mexico seattle location sport wear product supp itemset carry bags profit poor supp itemset mexico poor seattle carry bags poor carry bags itemset mexico carry bags poor mexico carry bags mexico sport wear poor mexico sport wear seattle sport wear poor seattle sport wear get support mexico sport wear seattle sport wear itemset mexico carry bags seattle carry bags mexico poor mexico sport wear poor carry bags poor carry bags sport wear itemset seattle carry bags seattle poor seattle seattle carry bags seattle carry bags poor seattle carry bags generating frequent inter itemsets apriori property minimum support 

repeat generate candidate itemsets gen candidate generate frequent itemsets gen frequent oe function gen frequent generate frequent itemsets candidates itemsets candidate fi frequency count corresponding cell cube space support frequency support min supp frequent itemset fig function gen candidate generate candidate itemsets frequent itemsets oe items different dimension add return example example example show method works algorithms differ 
ffl iterate dimension generate candidate itemsets itemset obtain frequency cube space compare min supp 
frequent itemsets decided 
step example 
result shown 
ffl generation frequent itemsets exactly example 
candidate itemsets formed joining frequency itemset count value saved corresponding cell cube space 
results shown 
ffl get candidate itemsets 
join frequent itemsets different dimensions 
example join item seattle location dimension sport wear product dimension profit dimension form candidate itemset seattle sport wear way compared example totally itemsets generated shown 
ffl get frequency itemset generate frequent itemsets scanning cube space way example result shown 
discussion subsection problem finding inter dimensional association rules olap technologies discussed 
cube algorithms 
apriori property 
generates candidate itemsets join prune procedure joining frequent gamma itemsets gamma pruning containing gamma subsets frequent 
second method apriori property generated joining frequent itemset 
give comparison algorithms number tracking back pruning number scanned cube cells computing frequency see discussion algorithm 
algorithm completely follows apriori property discussion algorithm total number tracking back jl gamma gamma theta gamma candidate inter dimensional itemset cell checked obtain frequency 
number scanned cube cells jc algorithm apriori property 
candidate itemsets generated frequent itemsets directly 
tracking back procedure 
method cell scanned candidate itemset number scanned cube cell computed equation number dimensions jl number frequent items th dimension 
jc jc jl chosen dimensions discussion see data cube sparse small number itemsets pass frequency threshold especially size itemset grows 
case algorithm apriori property gains benefit pruning candidate itemsets reducing frequency computation pruned itemsets 
furthermore number dimensions itemsets generated joining frequent itemset needs done frequency computation algorithm 
hand cube dense prune candidate itemsets apriori property tracking back subsets itemset 
case algorithm apriori property better tracking back experiment analysis real data show difference algorithms 
performance analysis subsection results experiments conducted analyze performance algorithms respect various factors cube size density data number dimensions experiments done pentium pro mb memory running windows nt 
testing data real databases attributes tuples attributes tuples 
experiment pick attributes dimensions databases construct data cube algorithms generating frequent inter dimensional itemsets run cube 
experiment sparse cube scale effects sparse date cube algorithms examined 
select dimensions respectively construct data cubes 
suppose algorithm apriori algorithm apriori cube cube cube cube cube minimum support threshold performance comparison sparse cube 
number dimensions cube th dimension jd size dimension number distinct value dimension cube size cube density computed equations cube size jd cube density number non gamma cube size equation information cubes listed table cube number dimensions cube size cube density cube theta gamma cube theta gamma cube theta gamma table dimensions cube experiment information see cubes sparse 
run algorithms sparse cube different minimum support 
shows resulting execution time 
analysis indicated graph performance dimensional cube cube algorithms different thresholds 
reason dimensional cube frequent itemset needed generated need generate candidate itemset algorithms steps generating frequent itemsets generating candidate itemsets joining frequent itemset performing frequency computation 
curves cube overlapped 
dimensional cube cube dimensional cube cube distinct differences algorithms 
pairs curves see algorithm apriori property better algorithm apriori property 
exactly concluded previous discussion 
data cube sparse apriori property prune candidate itemsets reducing support computation 
hand lots combinations frequent itemset generating candidate itemsets apriori property frequency computation 
experiment gathered information number candidate itemsets list part cube cube min supp table 
see size candidate itemset apriori property times size apriori optimization 
cube algorithm candidate candidate candidate itemset itemsets itemsets time sec cube apriori cube apriori table size candidate itemsets inter dimensional association mining algorithms min supp phenomenon seen curves difference algorithms cube bigger difference cube sparse cube apriori property larger number frequent gamma itemsets smaller reducing size candidate itemsets 
algorithm apriori property number candidate itemsets depends combination frequent itemsets larger bigger number candidate itemsets 
result dimensions involved association mining algorithm apriori property gains 
see difference algorithms depends min supp threshold 
threshold smaller difference greater 
easily understood itemsets frequent threshold smaller 
possible combinations increase tremendously apriori optimization making number candidate itemsets huge 
experiment dense cube scale experiment performance analysis algorithms sparse cubes 
examine effects dense date cube algorithms 
similarly data cubes constructed dimensions respectively 
table information cubes experiment cube number dimensions cube size cube density cube cube cube table cubes information experiment information see cubes dense cubes 
run algorithms dense cubes different minimum support 
shows resulting execution time 
cube cube cube algorithm apriori algorithm apriori cube cube minimum support threshold logarithm execution time log milliseconds performance comparison dense cube 
analysis indicated graph performance dimensional cube cube different thresholds algorithms 
reason discussed experiment steps generating frequent itemsets generating candidate itemsets joining frequent itemsets 
dimensional cube cube dimensional cube cube notice threshold relatively high algorithm apriori property better apriori property 
gathered information number candidate itemsets list part cube cube min supp table table see generating frequent itemset cube dense subsets candidate itemsets generated step frequent 
case apriori property prune candidate itemsets support computation saved spend time tracking back procedure 
cube algorithm candidate candidate candidate candidate itemset itemsets itemsets itemsets time sec cube apriori cube apriori table size candidate itemsets inter dimensional association mining algorithms min supp hand threshold relatively small algorithm apriori property better performance 
look information candidate itemsets cube min supp table 
cube algorithm candidate candidate candidate candidate itemset itemsets itemsets itemsets time sec cube apriori cube apriori table size candidate itemset inter dimensional association mining algorithms min supp table find threshold smaller frequent itemsets combination frequent itemsets size candidate itemset larger 
number candidate itemset times difference algorithms number candidate itemsets times 
case tracking back time trivial compared reduced frequency computation apriori property 
curves notice difference algorithms cube bigger cube discussed experiment 
hybrid association mining discuss simple cases association rules intra dimensional associations inter dimensional associations 
view dimension called single dimensional association mining see predicates rule dimension called multi dimensional association mining 
discussed covers part multi dimensional association mining multi dimensional see predicates rule repetitive 
general multi dimensional association mining desired rule includes multiple dimensions repetitive predicates dimension 
answer 
subsection discussions problem give simple algorithm 
take dimension repetitive predicates intra dimension dimensions inter dimension case multi dimension repetition combination intra dimension inter dimension 
case candidate itemset written fl inter intra inter items inter dimensions intra intra dimension 
easily see inter intra frequent itemset fl inter intra frequent itemset 
observation find natural easier separate procedure sub procedures finding frequent itemsets dimensions find frequent itemsets inter dimensions respectively merge parts frequent hybrid itemsets 
detailed algorithm depicted algorithm 
part step generates frequent intra itemsets intra part iterative procedure generates frequent inter itemsets inter merges inter intra generate candidate hybrid itemsets candidate itemsets satisfying minimum support added set frequent itemsets algorithm generating hybrid frequent itemsets dimensions data cube input ffl dimensional data cube ffl transaction dimension item dimension item intra dimension ffl associated inter dimensions ffl minimum support threshold min sup 
output set frequent itemsets method 
oe 
generate frequent intra itemsets intra apriori property 
intra empty exit 

intra 
iteration size inter itemset generate frequent inter itemsets inter inter oe exit merging size intra itemset repeat merge intra inter generate candidate hybrid itemsets generate frequent itemsets prune itemset intra extensions prune itemset inter appear oe intra oe generating strong association rules frequent itemsets generating frequent itemsets reach final step association mining generating strong association rules frequent itemsets 
step quite easy different association mining including inter dimensional hybrid association mining 
definitions chapter strong association rules rules confidence minimum confidence threshold 
confidence computed equation confidence support support equation simple straightforward algorithm step described follows 
algorithm generating strong association rules frequent itemsets 
input 
frequent itemsets 
minimum confidence threshold min conf output strong association rules method oe frequent itemset non empty subset conf gamma support support conf min conf generate interesting rule rule 
gamma frg rule generated automatically satisfies minimum support requirement rules generated frequent itemsets 
frequent itemsets stored frequency accessed quickly 
example algorithm just applying procedure frequent itemset need take itemset example demonstrate algorithm works step step 
example itemset carry bags sport wear water purifier generated frequent itemset 
association rules generated 
non empty subsets carry bags water purifier sport wear water purifier carry bags sport wear water purifier resulting association rules shown listed confidence location conf conf conf conf conf conf minimum confidence threshold say second rules strong ones confidence greater 
way strong rules generated frequent itemsets generated example conf conf conf mining multi level association rules previous sections algorithms studied mining association rules single level abstraction dimension data cube examined fixed level abstraction 
applications difficult find strong associations data primitive levels abstraction due sparsity data multi dimensional space 
hand strong associations discovered high concept levels common sense knowledge 
desirable mine associations multiple levels abstraction 
discussion previous chapters data warehouse systems implemented efficiently interactive drilling slicing dicing pivoting operations data cubes taken primitive olap operations 
data cube structure associated olap operations provide convenient base interactively mining associations multiple levels abstraction 
basic method process drill roll chosen dimension concept hierarchy desire level find association rules new levels abstraction mining algorithms 
example olap operation shown example 
example cube 
suppose hierarchy dimension location 
want perform inter dimensional association mining dimension location level region level city 
mining task generate corresponding working cube shown rolling base cube dimension location 
algorithm inter dimensional association mining run working cube 
north america seattle mexico hongkong tokyo asia level region level city location hierarchy location dimension 
asia north america location alert devices carry bags sport wear tents water poor mediocre average excellent profit product cube generated rolling 
discussion different strategies setting minimum support thresholds different levels abstraction depending threshold changed different levels 
independent min support levels relationship min support different levels abstraction 
min support levels min support different levels abstraction 
reduced min support levels lower level abstraction uses smaller min support mining 
compare approaches 
simple users experts provide single uniform minimum support threshold association rules mining 
simple execute mining algorithm fixed minimum support threshold 
itemsets lower level abstraction occur frequent higher level abstraction fixed threshold may cause problems 
set high may lot meaningful associations occurring low levels set low may generate uninteresting associations occurring high levels 
comparison approaches recommend reduced support threshold progressively lower minimum support threshold mining touches deeper levels abstraction generate sufficient meaningful associations low levels keeps rules generated high levels sufficiently interesting 
interestingness association rules far discussed algorithms generating frequent itemsets discovering rules 
experiments real data rules small size data 
rules discovered interesting user 
necessarily 
rule interesting judged subjectively objectively 
ultimately user judge rule interesting judgement subjective may differ user 
objective interestingness criterion statistics data step goal uninteresting rules presentation user 
tell rules really interesting 
example take rule derived example support rule confidence 
say rule strong association rule support confidence framework 
rule incomplete misleading support carry bags greater 
words customer buys carry bags buy sport wear customer information 
truth negative dependence buying carry bags buying sport wear 
help filter misleading strong association rules need study events correlated 
want find dependence rule order give precise characterization rule 
definition define interestingness events possibility event fact interestingness events indicates correlation nominator events happen denominator case activities independent 
example see interestingness carry bags sport wear theta theta means buying carry bags negative associated buying sport wear rule interesting reported 
combining computation association mining returning rules having positive dependence reduce size results generated rules precise 
notice support item term association rules 
definition definition define interestingness rule support support support algorithm generate interesting strong rules algorithm 
basically step step added generate strong association rules method discussed previous sections 
step compute interestingness rule filter rules interestingness 
algorithm generate interesting strong association rules input ffl mining task related working data cube ffl minimum support confidence threshold min sup min conf output interesting strong association rules method 
generate frequent itemsets 
generate strong association rules satisfying min conf threshold algorithm 
oe 
rule interestingness support support support interestingness rule interesting frg example continue example 
want generate interesting rules generated strong rules 
interestingness computation rule equation 
rules interesting users 
interestingness interestingness interestingness chapter constraint association mining chapter problem mining association rules discussed cases 
view interface process association mining summarized steps 
user specifies part database mined 
user specifies minimum thresholds support confidence 
system executes mining algorithms 
highly intensive data processing large number associations returned hopefully user looking 
practice times users may interested subset associations instance containing user defined item paris desirable association mining system ability users specify various constraints mining 
chapter focus topic referred constraint association mining 
main task set constraints seek find algorithms sound complete 
algorithm sound means finds frequent itemsets satisfy constraints complete means frequent itemsets satisfying constraints 
apriori simple way put forward right away apply algorithms discussed chapter generating rules satisfying min sup min confidence thresholds add step select rules generated 
take rules candidates check constraints 
simple extension apriori algorithm call algorithm apriori 
details described algorithm algorithm apriori simple apriori algorithm constraint association mining input ffl task relevant data cube ffl thresholds min sup min conf ffl set constraints rules output association rules satisfying thresholds constraints 
method 
generate frequent itemsets satisfying min sup threshold 
rule type mined algorithms selected perform step 

generate association rules satisfying min conf threshold applying algorithm 
generate desired rules satisfying constraints rules pruning 
function rules pruning return rules satisfying constraints rule satisfy cf prune return example continue examining example 
suppose local store seattle interested rules related seattle confidence threshold 
mining procedure basically steps 
generate frequent itemsets exact method example result 
performing algorithm strong association rules generated follows poor location mexico location seattle location seattle roduct location seattle roduct roduct location seattle association rule check item seattle find rules interested 
apriori simple inefficient 
example suppose change constraint hongkong example 
notice getting frequent itemsets location dimension shown item satisfying constraint 
obviously rules derived violate constraint 
conclude association rule generated 
apriori algorithm constraint checking generate rules satisfying thresholds 
obviously involves lot unnecessary processing 
key technical challenge guarantee level performance commensurate selectivity constraints 
common sense test candidate itemsets constraint satisfaction generating association rules efficient way 
approach guaranteed sound 
consider intra dimensional mining constraint item carry bags rule apply constraint getting frequent itemsets get frequent item carry bag 
frequent itemsets rules 
easily see way right 
chapter perform analysis properties constraints try push deeply possible inside frequent itemsets computation 
chapter kinds constraints discussed anti monotone constraint pre constraint anti monotone constraints property constraints analyze anti monotonicity 
simple description set violates constraint superset violates constraint 
formal definition follows definition constraint anti monotone iff set satisfy satisfy examples 
example constraint rice intra dimensional itemset antimonotone 
proof intra dimensional itemset satisfy constraint means price 
superset obviously price price price 
similarly proof lot anti monotone constraints 
look anti monotone constraint example kinds associations constraint support itemset min sup anti monotone constraint 
easily see constraint minimum support constraint called frequency constraint 
itemset violates minimum support threshold supersets 
discussion chapter see property enables apriori algorithm prune away significant number candidate itemsets require support computation 
motivated fact minimum support constraint anti monotone propose question pruning anti monotone constraints similar algorithm 
answer 
give lemma 
jsj frequent js gamma frequent jsj satisfies cam js gamma satisfies cam lemma conclude similar way antimonotone constraints incorporated mining algorithm efficiency frequency constraint apriori algorithm 
specifically gamma consists frequent gamma itemsets satisfy cam candidate itemsets generated exactly way done apriori algorithm 
furthermore pruned checking itemset satisfies constraint cam frequency constraint 
element violates constraint cam needed support computation 
lay new algorithm association mining anti monotone constraints 
algorithm divided parts 
part generate frequent itemsets satisfy constraints second part generate association rules satisfying min conf threshold 
basically sub steps generating frequent itemsets candidate itemsets generated gamma apriori property data directly 
procedure generating gamma method discussed chapter discuss details 
generating prune checking constraints procedure pruning simply checks itemset see complies constraints 
frequent itemsets generated support computation 
sub step algorithms chapter 
algorithm improved mining method anti monotone constraints 
input ffl task relevant data cube ffl thresholds min sup min conf ffl set anti monotone constraints cam output association rules satisfying thresholds constraints cam method 
oe 
collect candidate itemsets 
prune constraints cam pruning cam 
generate frequent itemsets gen frequent 
repeat generate candidate itemsets gamma prune constraints cam pruning cam generate frequent itemset gen frequent empty 
generating association rules frequent itemsets function pruning cam prune away itemsets satisfy constraints cam itemset satisfy prune function gen frequent generate frequent itemset candidate oe itemset compute support support min supp fig return rationale algorithms discussed chapter algorithm basically adds steps perform constraints checking 
see checking constraints generate frequent itemsets algorithm apriori algorithm conducts constraints checking candidate itemsets support computation 
anti monotone property guarantees itemsets satisfying constraint derived pruned candidate gamma itemsets 
prune away significant number candidate sets require support counting 
example show improvement gained anti monotone property 
product price alert devices carry bags sport wear tents water purifier table price product example continue example 
suppose price information product table 
want generate association rules minimum support threshold minimum confidence threshold satisfying constraint sum price items itemset example know constraint price antimonotone 
association mining algorithm follows 
item product member set candidate itemsets 
table get price product check constraint drop sport wear price greater 
results candidate constraints checking shown 
form consists itemsets alert devices carry bags alert devices water purifier carry bags water purifier computing total price itemset drop set alert devices carry bags total price greater 
minimum support checking get set procedure generating frequent itemsets finishes 

generate association rules frequent itemsets exactly way discussed chapter 
details shown 
compute support candidate generate frequent itemset itemset alert carry bags alert devices water purifier carry bags water purifier constraint sum price equal sport wear pruned itemset alert itemset alert carry bags sport wear tents water purifier carry bags candidate carry bags water purifier tents water purifier itemset alert devices water purifier carry bags water purifier itemset water purifier alert carry bags generate constraint alert devices carry bags pruned compute support candidate generate frequent itemset itemset carry bags water purifier frequent itemset example number bracket price associated product far address problem anti monotone property constraintbased association mining 
question left recognize constraints belonging anti monotone class pruning optimization 
analyze categories constraints summarize table attribute itemset itemset single constant dimensions set constants 
simple proofs table 
proof 
anti monotone 
itemset satisfy constraint means superset obviously true satisfy constraint 
way prove anti monotone 

anti monotone 
itemset satisfy constraint means superset obviously true constraint anti monotone count count count min min min max max max sum sum sum minimum support constraint table anti monotone constraint categories satisfy constraint 
anti monotone 
itemset satisfy constraint word means suppose 
superset fi fi obviously satisfies constraint 

count anti monotone 
itemset satisfy constraint means count superset obviously true count count satisfy constraint 
count anti monotone 
itemset satisfy constraint word means count get superset adding number items true count satisfies constraint 
way prove count anti monotone 

prove procedure easily demonstrate left groups constraints 
give details sake space 

final constraint min support threshold constraint 
apriori property discussed know constraint anti monotone 
pre constraints algorithm see optimization achievable antimonotone property restricted iterative pruning 
iteration level apriori algorithm prune candidates require support counting satisfaction anti monotone constraints 
hand means iteration need generate test candidates 
discuss example 
compute support candidate generate frequent itemset constraint min price greater equal water purifier pruned itemset alert itemset alert carry bags sport wear tents water purifier carry bags sport wear tents frequent itemset example example take example 
change constraint minimum price items itemset 
table know constraint min price antimonotone 
optimization similar example 
time get candidate itemset check item price prune 
look example see constraints checking candidate itemsets shown frequent itemsets derived absolutely satisfying constraints 
checking necessary 
observation poses question classes constraints constraints checking done iteration takes place constraints generate itemsets satisfy constraints avoiding generate test paradigm completely 
answer 
formalize notion constraint property self closed property 
definition self closed constraint self closed iff itemset equation satisfied 
gamma gamma itemset gamma ae gamma satisfies satisfies give example self closed constraint 
example constraint example min price self closed constraint 
reasoned follows 
itemset gamma gamma items gamma conclude minimum price items 
true means price 
item form subset minimum price price 
word satisfy constraint 
contradicts premise 
notice self closed constraint min price anti monotone table self closed constraints anti monotone 
give example 
example constraint min price self closed antimonotone 
proof table know constraint min price antimonotone 
need prove self closed 

itemset gamma gamma minimum price items gamma fact minimum price items conclude minimum price 
definition self closed property pruning self closed constraint computation satisfaction constraint affected way result iterative candidate itemsets generation support computation 
pruning candidate itemsets self closed constraint support computation itemset derived pruned itemsets absolutely satisfy constraint 
question take full advantage self closed property 
approach directly applying self closed property sound discussed chapter explore way combining self closed property anti monotone property 
define definition pre constraint pre iff antimonotone self closed 
easily fact constraint pre itemset satisfies gamma gamma itemset ae satisfies left direction equation anti monotone property right direction self closed property 
optimization point view fact means constraints pre prune candidate itemsets support computation itemsets derived satisfy constraints 
means need pruning checking pre constraints 
algorithm lay association mining pre constraints 
candidate itemsets generated selecting values data directly 
prune itemsets satisfy pre constraints generate frequent itemsets support computation 
iteration generating candidate itemsets frequent itemsets gamma apriori property generating frequent itemsets support computation 
procedure method discussed chapter 
discuss details 
association rules generated frequent itemsets 
algorithm improved association algorithm pre constraints 
input 
ffl working data cube ffl min sup min conf thresholds ffl set pre constraints pp output 
set association rules satisfying thresholds constraints pp method 
oe 
collect candidate itemsets 
prune pp pruning pp 
generate frequent itemsets gen frequent 
repeat generate candidate itemsets gamma generate frequent itemsets gen frequent empty 
generate association rules frequent itemsets function pruning pp prune away itemsets satisfy constraints pp itemset satisfy pp prune function gen frequent generate frequent itemset candidate itemsets oe itemset compute support support min supp fig rationale 
basic structure algorithm similar algorithm anti monotone constraints optimization 
difference constraints checking procedure 
compared iterative pruning anti monotone compute support candidate generate frequent itemset constraint water purifier pruned itemset alert itemset alert carry bags sport wear tents water purifier carry bags itemset sport wear alert carry bags generate min price greater equal tents sport wear itemset alert carry bags carry bags sports wear compute support candidate generate frequent itemset itemset carry bags sport wear frequent itemsets example algorithm performs pruning candidate itemset constraints checking 
pre property itemsets derived pruned candidate itemsets definitely satisfy pre constraints 
hand possible itemsets satisfying constraints derived pruned candidate itemsets 
example finish example want generate association rules condition items rule satisfy constraint min price 
know constraint proven anti monotone self closed 
pre 
algorithm 
association mining follows results shown 
item product member candidate itemsets 
item price checked constraint 
result water purifier dropped price 
constraint pre min max table pre prune constraints 
frequent itemsets generated support computation 

candidate itemsets generated 
compute support itemset get itemsets shown 
candidate itemset generated 
association rules generated frequent itemsets 
section analyze categories anti monotone constraints summarize table analyze constraints pre property 
result table 
proof just anti monotone constraints give simple proof table 

table anti monotone 
need prove 
itemset gamma itemset satisfies constraint satisfy constraint means item form subset say satisfy constraint contradicts premise 
constraint pre 
way prove anti monotone 

table anti monotone 
prove constraint self closure 
word need demonstrate itemset gamma subset satisfies constraint satisfies constraint 
satisfy constraint means item form subset say satisfy constraint contradicts premise 
constraint pre 
entries table table simply self closure pre 
prove refer example 
give details 
performance analysis section results experiments conducted analyze performance algorithms respect anti monotone pre optimization 
experiments performed pentium pro mb memory running windows nt 
databases experiment 
optimization techniques affecting step generating frequent itemsets running time referred execution time step 
experiment anti monotone optimization experiment optimization gained applying anti monotone constraints optimization examined 
experiment run intra dimensional data cube dimensions location production 
associated table price information product 
association mining task follows production item dimension location transaction dimension want mine intra dimensional association rules minimum support threshold constraint total price items rule min sum 
algorithm anti monotone pruning algorithm anti monotone pruning number pruned itemset conflicting constraint sum price threshold experiment number pruned itemset conflicting constraint performance analysis different threshold algorithm apriori 
table know constraint mining task antimonotone 
algorithms algorithm anti monotone optimization algorithm apriori anti monotone optimization executed task 
fourteen different values min sum applied 
intuition tells smaller threshold min sum candidates pruned performing anti monotone optimization better algorithm 
shows performance results 
numbers curve represent numbers itemset pruned algorithm different thresholds 
analysis see curve complies expectation quite 
generally algorithm outperforms apriori 
min sun larger difference algorithms 
min sum itemset pruned procedure curves approach close 
min sum large part itemsets pruned frequency computation algorithm better 
price threshold experiment time seconds algorithm pre pruning algorithm pre pruning number pruned itemset conflicting constraint number pruned itemset conflicting constraint performance analysis different threshold algorithm apriori 
experiment pre optimization experiment conducted experiment optimization gained pre constraints optimization 
experiment run cube experiment 
association mining task experiment production item dimension location transaction dimension want mine intra dimensional association rules minimum support threshold constraints minimum price items rule min price 
table know constraint mining task 
algorithms algorithm pre optimization apriori executed task 
different values min price applied 

easily conclude bigger min price candidates pruned performing pre optimization better algorithm 
shows performance results 
analysis see algorithm really better apriori 
min price threshold small item prices higher threshold algorithms show performance algorithm pre pruned optimization size candidate itemset reduced pruning pre constraints computation saved 
chapter system implementation previous chapters mainly focused association rules mining techniques discussing problems topic described algorithms 
system implementation point view lots issues interesting topics design user friendly interface mine level association rules specify various constraints represent mining result visualization way chapter implementation introduce user interface visualization association rules mining 
interface association mining system line analytical mining system integrate line analytical processing association mining algorithms 
integration powerful functionality flexibility usability performance 
ffl mining various association rules cases users want generate various rules mining system 
design gui shown conveniently guide users various association mining 
dimensions involved mining task listed left side example interested association rules dimensions location product 
parts right side 
upper part specify type rules mined lower part specify transaction group dimension intra dimensional hybrid association mining 
want inter dimensional association rules mining just click button go ahead 
page perform intra dimensional hybrid association mining shown examples 
gui page various association rules mining example mining intra dimensional association rules want generate intra dimensional association rules product dimension taken location transaction dimension 
pick location dimension group list box gui put product dimension upper list box check associated check box 
check mark means dimension item dimension intra dimensional association mining repetitive resulting rules 
example mining hybrid association rules gui page intra dimensional association rules mining suppose want generate hybrid association rules dimensions location product quantity taken product dimension item dimension location transaction dimension 
originally dimensions left side list box gui 
pick location dimension group list box put product quantity dimensions upper list box check check box associated product dimension 
ffl mining multi level association rules applications difficult find strong associations data primitive abstraction levels due sparsity data multidimensional space hand strong associations discovered high concept levels common sense knowledge 
users may want mine associations multiple levels abstraction 
system provides convenient way association mining multiple levels 
shown top main window toolbar 
tool user select desired dimension specify desired level dimension 
example 
gui page hybrid association rules mining example mining multi level association rules suppose performing inter dimensional association mining dimensions location product 
choose location country level rule output shown 
want look higher level location selecting region level current level location dimension get rules output shown 
mining country level location dimension mining region level location dimension ffl constraint association mining line analytical association mining requires fast response data mining requests mining requests constraint 
requires mining performed limited scope data confined queries constraints adopt efficient constraint data mining algorithms 
constraint pushing technology system optimize procedure system fast efficient 
lack time implemented part constraints discussed chapter careful design data structure easy hook constraints system 
interface part provide gui pages specifying constraints dimensions number items required rule values limited dimension desirable detail constraints rule body head 
give examples 
example constraints dimensions suppose want inter dimensional association mining dimensions location product quantity cost 
interested rules related location dimension 
gui page shown put location upper list box right side means location shown rule 
limit size rule time 
example want get rules equal items 
put string edit box upper left side gui shown interested rules related location united states specify constraint page obtained clicking constraint button current gui page shown 
example constrains rule body head interface specifying constraints dimensions continuing example want location dimension appeared head rule value united states want quantity dimension shown body rule value 
limit size rule body equal 
gui pages perform constraints specification shown 
association rules visualization visualization tools allow users interactive environment ease understanding rules 
system implemented kinds visualization tools view mining results tabular view ball graphical view bar graphical view 
tabular view association rules strong rules represented tabular table rule table tuple corresponding rule 
columns rule table body rule implication symbol head rule rule support confidence 
rules displayed different order order head interface specifying constraints dimension values body support confidence 
helps users clearer view rules locates rule easily 
tabular view suitable representing large number rules varied length easily understood 
gives example kind visualization 
tabular view scalable users may view rules different aspects 
example want comprehensive view relationship rules items 
case tabular view convenient item repetitively appeared rule table long contained rule 
requirement system provides kinds rules visualization tools 
ball graphical display bar graphical display 
shown components ball visualization ball line connecting balls arrow 
basically ball represents frequent item line represents rule 
arrow line points head rule 
furthermore width arrow corresponds support rule width arrow head corresponds confidence 
correspondingly bar visualization tool shown rule represented interface specifying constraints dimension body head bar conjunction head body item 
rule support height bar rule confidence represented color bar 
figures see graphical visualization gives clear vivid view rules items 
limited graphical software implement visualization method small size rules 
interface specifying constraints dimension body head values tabular association rules ball graphical association rules bar graphical association rules chapter thesis performed comprehensive study association rules mining proposed algorithms detailed discussion experimental results 
chapter conclude summary study propose research directions field 
summary research goal thesis propose solution problem generating association rules large data warehouse 
research reported thesis proposes develops interesting approach called line analytical mining association rules integrates developed olap line analytical processing technology efficient association mining algorithms 
covers interesting studies issues including discovering different categories association rules measuring rule interestingness optimizing mining different constraints 
ffl architecture association mining proposed chapter 
different architectures flat relational table structure olap architecture integrates data warehouse olap technologies association mining algorithms 
data warehouse serves data store integrated historical data materialized data cube meta data olap technologies act interface data mining task 
essential part efficiently dealing large data sets providing data cube structure enriched efficient functions play data cube 
association mining algorithms generate desired rules complying requirement 
ffl sub problems mining association rules covered chapter mining intra dimensional inter dimensional hybrid rules 
layer method adopted 
generate frequent itemset itemset 
frequent itemsets 
important property apriori property reduce size candidate itemsets 
detailed algorithms provided category discussions efficiency issue 
furthermore inter dimensional association mining algorithm apriori property 
discussion performance analysis show case sparse data set large number dimensions algorithm apriori property efficient case dense data set better 
ffl thesis designed method olap technologies perform multi level association mining different levels concept hierarchy 
approaches setting minimum support threshold compared 
discussion recommend reduced support threshold method threshold progressively lowered mining touches deeper levels abstraction 
help user generate sufficient meaningful associations low levels keep rules generated high levels sufficiently interesting 
ffl study rule interestingness measure conducted chapter 
simple efficient method chi square property proposed 
ffl chapter constraint association rules mining discussed 
analyzed important constraint properties anti monotone pre pruning 
anti monotone constraints prune candidate itemsets iteration pre pruning constraints prune candidate itemset itemset derived pruned itemset automatically satisfies constraints 
performance showed improved algorithms integrating properties efficient 
notice algorithms thesis rely manipulation data cube active research topic years 
advantages data cube structure listed chapter 
general multidimensional data warehouse olap technologies facilitate selection dimensions abstraction levels conveniently efficiently 
ability mine realistic 
implementation dbminer system shows olap approach presents great advantages existing algorithms terms flexibility efficiency 
discussion previous discussion line analytical association mining assume fully materialized cube built mining task 
real application cases cube stored disk number dimensions large cube size big 
case subcubes materialized 
data mining method take advantage materialized subcubes speed mining process 
situation researches needed done including build cube index get support candidate itemset materialized generate frequent itemsets materialized thesis interestingness measure association rules proposed method simple chi square property 
study methods explored predictive power generated association rules 
done part integrate methods olap technologies get better results 
interface part feel implementation limited algorithm view power association rules module current interface 
hand different visualization tools help user understand rules various respects 
better interface integration visualization tools important 
issue concern constraint association mining 
thesis discussed simple categories constraints anti monotone pre pruning 
reality constraints fall categories complex 
perform optimization constraints big research issue 
extended defining unifying template association mining general language design templates extraction arbitrary association types 
bibliography agarwal agrawal deshpande gupta naughton ramakrishnan sarawagi 
computation multidimensional aggregates 
proc 
int 
conf 
large data bases pages bombay india sept 
agrawal imielinski swami 
mining association rules sets items large databases 
proc 
acm sigmod int 
conf 
management data pages washington may 
agrawal mehta shafer srikant 
quest data mining system 
proc 
int 
conf 
data mining knowledge discovery kdd pages portland oregon august 
agrawal srikant 
fast algorithms mining association rules 
proc 
int 
conf 
large data bases pages santiago chile september 
agrawal srikant 
mining sequential patterns 
proc 
int 
conf 
data engineering pages taipei taiwan march 
bayardo 
efficiently mining long patterns databases 
proc 
acm sigmod int 
conf 
management data pages seattle washington june 
bayardo agrawal gunopulos 
constraint rule mining large dense data sets 
proc 
int 
conf 
data engineering icde sydney australia april 
brin motwani silverstein 
market basket generalizing association rules correlations 
proc 
acm sigmod int 
conf 
management data pages tucson arizona may 
brunk kelly kohavi 
integrated system data mining 
proc 
rd int 
conf 
knowledge discovery data mining kdd pages newport beach california august 
chaudhuri dayal 
overview data warehousing olap technology 
acm sigmod record 
cheung han ng wong 
maintenance discovered association rules large databases incremental updating technique 
proc 
int 
conf 
data engineering pages new orleans louisiana feb 
codd codd 
decision support 
computer world july 
fayyad piatetsky shapiro smyth uthurusamy eds 
advances knowledge discovery data mining 
aaai mit press 
fukuda morimoto morishita 
data mining dimensional optimized association rules scheme algorithms visualization 
proc 
acm sigmod int 
conf 
management data pages montreal canada june 
gray chaudhuri bosworth layman pirahesh :10.1.1.120.4505
data cube relational aggregation operator generalizing group cross tab sub totals 
data mining knowledge discovery 

han karypis kumar 
scalable parallel data mining association rules 
proc 
acm sigmod int 
conf 
management data pages tucson arizona may 
han chiang chee chen chen cheng gong kamber liu koperski lu xia zaiane zhang zhu 
dbminer system data mining relational databases data warehouses 
proc 
cascon meeting minds pages toronto canada november 
han dong yin 
efficient mining partial periodic patterns time series database 
proc 
int 
conf 
data engineering icde sydney australia april 
han fu 
dynamic generation refinement concept hierarchies knowledge discovery databases 
proc 
aaai workshop knowledge discovery databases kdd pages seattle wa july 
han fu 
discovery multiple level association rules large databases 
proc 
int 
conf 
large data bases pages zurich switzerland sept 
harinarayan rajaraman ullman :10.1.1.41.1205
implementing data cubes efficiently 
proc 
acm sigmod int 
conf 
management data pages montreal canada june 
ibm 
ibm intelligent miner user guide version release 
ibm 
kamber han chiang 
metarule guided mining multidimensional association rules data cubes 
proc 
rd int 
conf 
knowledge discovery data mining kdd pages newport beach california august 
kimball 
data warehouse toolkit 
john wiley sons new york 
klemettinen mannila ronkainen toivonen verkamo 
finding interesting rules large sets discovered association rules 
proc 
rd int 
conf 
information knowledge management pages gaithersburg maryland nov 
korn kotidis faloutsos 
ratio rules new paradigm fast quantifiable data mining 
proc 
int 
conf 
large data bases pages new york ny august 
lent swami widom 
clustering association rules 
proc 
int 
conf 
data engineering icde pages birmingham england april 
meo psaila ceri 
new sql operator mining association rules 
proc 
int 
conf 
large data bases pages bombay india sept 
microsoft 
olap programmer version 
www microsoft com data olap 
miller yang 
association rules interval data 
proc 
int 
conf 
management data pages tucson arizona may 
ng lakshmanan han pang 
exploratory mining pruning optimizations constrained associations rules 
proc 
int 
conf 
management data pages seattle washington june 
ramaswamy silberschatz 
cyclic association rules 
proc 
int 
conf 
data engineering icde pages orlando fl feb 
park chen yu 
effective hash algorithm mining association rules 
proc 
acm sigmod int 
conf 
management data pages san jose ca may 
park chen yu 
efficient parallel mining association rules 
proc 
th int 
conf 
information knowledge management pages baltimore maryland nov 
ramaswamy mahajan silberschatz 
discovery interesting patterns association rules 
proc 
int 
conf 
large data bases pages new york ny august 
savasere omiecinski navathe 
efficient algorithm mining association rules large databases 
proc 
int 
conf 
large data bases pages zurich switzerland sept 
shen ong zaniolo 
integrate inductive learning deductive database technology 
proc 
aaai workshop knowledge discovery databases kdd pages seattle wa july 
silverstein brin motwani ullman 
scalable techniques mining causal structures 
proc 
int 
conf 
large data bases pages new york ny august 
srikant agrawal 
mining generalized association rules 
proc 
int 
conf 
large data bases pages zurich switzerland sept 
srikant agrawal 
mining quantitative association rules large relational tables 
proc 
acm sigmod int 
conf 
management data pages montreal canada june 
srikant vu agrawal 
mining association rules item constraints 
proc 
rd int 
conf 
knowledge discovery data mining kdd pages newport beach california august 
toivonen 
sampling large databases association rules 
proc 
int 
conf 
large data bases pages bombay india sept 
zhao deshpande naughton :10.1.1.50.6608
array algorithm simultaneous multidimensional aggregates 
proc 
acm sigmod int 
conf 
management data pages tucson arizona may 
