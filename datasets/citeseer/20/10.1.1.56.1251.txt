achieving convergence causality preservation intention preservation real time cooperative editing systems sun griffith university jia city university hong kong zhang university southern queensland yun yang deakin university david chen griffith university real time cooperative editing systems allow multiple users view edit text graphic image multimedia document time multiple sites connected communication networks 
consistency maintenance significant challenges designing implementing real time cooperative editing systems 
consistency model properties convergence causality preservation intention preservation proposed framework consistency maintenance real time cooperative editing systems 
integrated set schemes algorithms support proposed consistency model devised discussed detail 
particular contributed novel generic operation transformation control algorithm achieving intention preservation combination schemes achieving convergence causality preservation pair reversible inclusion exclusion transformation algorithms string wise operations text editing 
internet prototype system built test feasibility proposed schemes algorithms 
categories subject descriptors computer distributed systems distributed applications software engineering tools techniques user interfaces models principles user machine systems human factors formation interfaces presentation group organization interfaces synchronous interaction theory models general terms algorithms design human factors additional key words phrases convergence causality preservation intention preservation consistency maintenance operational transformation distributed computing cooperative editing reduce groupware systems computer supported cooperative supported part griffith university australia strategic research city university hong kong 
address sun chen school computing griffith university qld australia email fc sun cheng cit gu edu au jia dept computer science city university hong kong hong kong email jia cs edu hk zhang dept mathematics computing university southern qld qld australia email yan edu au yang school computing mathematics deakin university vic australia email yun deakin edu au 
permission digital hard copies part personal classroom granted fee provided copies distributed profit direct commercial advantage copies show notice page initial screen display full citation 
copyrights components owned acm honored 
abstracting credit permitted 
copy republish post servers redistribute lists component works requires prior specific permission fee 
permissions may requested publications dept acm broadway new york ny usa fax permissions acm org 
acm transactions computer human interactions vol march pages 
delta sun 
cooperative editing systems useful groupware tools rapidly expanding areas cscw computer supported cooperative ellis allow physically dispersed people edit shared textual document ellis gibbs olson prakash sun draw shared graph structure beaudouin lafon greenberg moran record ideas brainstorming meeting olson hold design meeting olson :10.1.1.31.1352
goal research investigate design implement cooperative editing systems characteristics real time response local user actions quick ideally quick editor latency reflecting remote user actions low determined external communication latency 
distributed cooperating users may reside different machines connected different communication networks nondeterministic latency 
unconstrained multiple users allowed concurrently freely edit part document time order facilitate free natural information flow multiple users advocated ellis gibbs olson dourish sun :10.1.1.31.1352
requirements responsiveness supporting unconstrained collaboration led adopt replicated architecture storage shared documents shared documents replicated local storage participating site 
significant challenges designing implementing real time cooperative editing systems replicated architecture consistency maintenance replicated documents 
illustrate challenging problems facing consider scenario cooperative editing system cooperating sites shown fig 

suppose update operation executed local replica shared document immediately generation broadcast remote sites executed original form arrival 
inconsistency problems manifest scenario 
divergence operations may arrive executed different sites different orders resulting different final results 
shown fig 
operations scenario executed orders site site site 
operations commutative generally case final editing results identical cooperating sites 
apparently divergent final results prohibited applications consistency final results required real time cooperative software design documentation systems 
divergence problem solved serialization protocol lamport bernstein birman ensures final result operations executed total order sites 
causality violation due nondeterministic communication latency operations may arrive executed natural cause effect order 
real time cooperative editing systems delta site site site time fig 

scenario real time cooperative editing session 
shown fig 
operation generated arrival site editing effect shared document seen user site time generated 
may dependent see section precise definition dependence 
arrives executed site confusing may occur system user site 
example insert string shared text document delete characters string inserted execution site result referring nonexistent context 
example suppose user site issues pose question inserting public holiday held victoria australia tuesday november shared text document user site issues answer question inserting melbourne cup shared document user site puzzled seeing answer question 
apparently causal order execution prohibited sake system correctness meeting requirement synchronized interactions multiple users applications 
causality violation problem solved selectively delaying execution operations enforce causally ordered execution state vector timestamps birman raynal singhal 
intention violation due concurrent generation operations actual effect operation time execution may different intended effect operation time generation 
shown fig 
operation generated site knowledge generated site independent vice versa see section definition independence site executed document state changed preceding execution subsequent execution may refer incorrect position new document state resulting editing text editing systems operations illustration illustrated concepts schemes generally applicable editing systems 
delta sun effect different intention see section definition intention 
example assume shared document initially contains sequence characters abcde 
suppose insert intends insert string position bcde delete intends delete characters starting position cd 
execution operations intention preserved result sites 
actual result site obtained executing followed executing cde apparently violates intention character intended inserted missing final text violates intention characters cd intended deleted final text 
serialization protocol ensure sites execute order get identical result cde identical result inconsistent intentions pointed identified inconsistency problems independent sense occurrence result 
particularly intention violation inconsistency problem different nature divergence problem essential difference divergence intention violation resolved serialization protocol fixed serialization protocol operations executed original forms sun 
issue consistency maintenance attracted great deal attention areas cscw distributed computing ellis gibbs beaudouin lafon greenberg dourish non serializable intention violation problem properly distinguished divergence problem nature complications intention violation problem combination problems divergence causality violation understood believe major reasons existing real time cooperative editing systems unable correctly solve inconsistency problems constraints short response time support unconstrained cooperative editing distributed environment see discussion related section 
novel integrated approach solving problems real time cooperative editing systems proposed discussed detail 
apart syntactic inconsistency problems identified semantic inconsistency problems pointed zhang yang dourish sun :10.1.1.31.1352
example suppose shared document contains text student 
text english grammar error text student students 
assume user site issues operation insert starting position student user example previous discussion identical final results may intention preserved 
example section illustrates results may identical 
real time cooperative editing systems delta site issues operation insert position student 
suppose system preserves intentions independent operations means intention preserving scheme 
execution operations sites text students 
result syntactically correct sites document contents intended syntactic effects operations achieved semantically incorrect grammar error 
words system able ensure plain strings inserted deleted proper positions unable ensure strings correct english sentence 
kind semantic inconsistency problem resolved underlying consistency maintenance mechanisms intervention people collaboration additional supporting mechanisms 
best knowledge existing cooperative editing systems attempted maintain semantical consistency automatically 
consistency maintenance approach supposed address semantic consistency maintenance problem 
rest organized follows 
section novel consistency model properties convergence causality preservation defined 
schemes achieving causality preservation convergence section section respectively 
basic issues complications involved achieving intention preservation discussed section generic transformation intention preserving scheme section 
intention preserving scheme integrated convergence scheme provide solution intention violation divergence section 
addition garbage collection scheme history buffer management discussed section 
design application dependent intention preserving transformation algorithms text editing discussed section 
integrated example section illustrate system works generic components application dependent components integrated 
internet prototype system developed test feasibility approach preliminary experiences prototype system discussed section 
section alternative related approaches examined compared approach special regard capability achieving convergence causality preservation intention preservation 
major contributions research summarized section 

consistency model section consistency model sun proposed provide conceptual framework devising schemes algorithms solve inconsistency problems identified previous section :10.1.1.31.1352
lamport define causal partial ordering relation operations terms generation execution sequences follows 
definition 
causal ordering relation operations generated sites iff generation happened generation delta sun execution site happened generation exists operation definition 
dependent independent operations operations 
said dependent iff 
said independent concurrent iff expressed example dependency relationship operations fig 
expressed definition 
intention operation intention operation execution effect achieved applying document state generated 
worth explicitly pointing effect operation refers syntactic effect applying operation document state 
example syntactic effect text editing operation simply inserting deleting plain characters specific positions text document regarded sequence plain characters 
words term operation effect cover semantic meaning operation inserting deleting english sentence document poem novel 
consequently intention operation defined refers syntactic effect applying operation particular document state operation originally generated 
definition 
consistency model cooperative editing system said consistent maintains properties convergence set operations executed sites copies shared document identical 
causality preservation pair operations executed sites 
intention preservation operation effects executing sites intention effect executing change effects independent operations 
essence convergence property ensures consistency final results cooperative editing session causality preservation property ensures consistency execution orders dependent operations cooperative editing session intention preservation property ensures effect executing operation remote sites achieve effect executing operation local site time generation execution effects independent operations 
consistency model imposes execution order constraint dependent operations leaves open execution order independent operations long convergence intention preservation properties maintained 
consistency model effectively specifies hand assurance cooperative editing system promises users properties underlying consistency maintenance mechanisms support 
real time cooperative editing systems delta 
achieving causality preservation capture causal relationship operations system timestamping scheme data structure state vector sv ellis gibbs sun :10.1.1.31.1352
number cooperating sites system 
assume sites identified integers gamma 
site maintains sv components 
initially sv gamma 
executing operation generated site sv sv 
operation executed local site immediately generation multicast remote sites timestamp current value local sv 
definition 
conditions executing remote operations operation generated site timestamped svo execution site state vector sv conditions satisfied svo sv svo sv gamma condition ensures operation sequence site operations originated site missed site second condition ensures operations originated sites executed site generation executed site altogether conditions ensure operations causally precede executed site shown remote operation executed satisfies conditions operations executed causal orders achieving causality preservation property consistency model sun :10.1.1.31.1352

achieving convergence causality preserving scheme imposes causally ordered execution dependent operations allows operation executed local site immediately generation achieving responsiveness 
implies execution order independent operations may different different sites 
question arises ensure convergence property presence different execution order independent operations solve problem define total ordering relation operations follows 
definition 
total ordering relation operations generated sites timestamped svo respectively iff sum sum svo sum sum svo sum sv gamma sv shown total ordering relation consistent causal ordering relation sense sun :10.1.1.31.1352
addition site maintains history buffer hb saving executed operations site 
total ordering relation history buffer undo redo scheme defined 
algorithm 
undo redo scheme delta sun new operation onew causally ready steps executed undo operations hb totally follow onew restore document state execution 
onew 
redo operations undone hb 
assumption scheme operations cooperative editing system reversible 
required buffered operations contain information order undone redone 
noted undo operation involved undo redo scheme internal operation external operation initiated user interface prakash 
implementation undo redo scheme flush user interface final result intermediate results produced undo redo process 
shown undo redo scheme sites executed set operations editing effect operations executed total order sites ensuring convergence property sun :10.1.1.31.1352

complications achieving intention preservation achieving intention preservation harder achieving convergence causality preservation 
intention violation problem related execution order operations resolved just re scheduling operations case achieving convergence 
achieve intention preservation causally ready operation transformed execution compensate changes document state executed operations sun 
transform operation operation inclusion transformation strategy see section may applied transforms operation independent operation way impact effectively included illustrate consider independent operations fig 

arrives site needs transformed execution 
suppose shared document initially contains abcde insert delete 
comparison position parameters length string inserted underlying inclusion transformation algorithm site able correctly derive transformed delete 
execution site result document state apparently preserves intentions correctness inclusion transformation relies fact generated document state position parameters comparable derive proper adjustment inclusion transformation directly applicable independent operations generated document state fig 

unfortunately possible independent operations generated different document states unconstrained cooperative editing environment 
illustrate consider relationship pair real time cooperative editing systems delta independent operations fig 

generated execution site document state site time generation different document state site time generation 
independent operations generated different document states longer possible correctly reason relative positions simply comparing position parameters 
example suppose initial document state abcde insert insert execution site document state abcde 
suppose insert insert abcde 
arrives site inclusion transformation directly applied transformed comparison position parameter position parameter incorrectly transformed insert 
execution site document state bcde site bcde document state intentions preserved 
trouble position parameter position parameter refer different document states comparable 
independent operations generated different document states effectively share document state inclusion transformation applied approach apply exclusion transformation see section transform causally preceding operation produce way impact excluded 
consequently effectively shares document state applied inclusion transformation things easier dependency relationship operations simple relationship expressed single dependency expression 
consider pair independent incomparable operations fig 

dependency relationship irregular expressed dependency expressions circumstance obvious apply proper transformations effectively share document state applying inclusion transformation site 
diverse irregular dependency relationship operations necessitates sophisticated control algorithm determine apply inclusion exclusion transformation operations 
cope complexities involved design discussion intention preserving scheme divide scheme parts generic part applied different cooperative editing systems determines operations need transformed order solely causal total ordering relationships operations application dependent part relies semantics operations involved real operation transformation 
generic intention preserving scheme discussed section treatment concrete inclusion exclusion transformation algorithms text editing system delayed section 
delta sun 
generic intention preserving scheme operations may transformed execution execution form hb may different original form time generation 
stress fact list operations hb denoted hb eo eo eon eo execution form operations hb sorted total ordering relation eo eo apparently document state instance time determined sequentially executing operations hb total order initial document state empty 
facilitate discussion special notations introduced 
lists executed operations 
jlj denotes length gamma denotes reverse denotes sublist containing operations eo eo jlj denotes ith operation ail denotes operations denotes list operations obtained concatenating operations example eo eo eo jlj gamma eo eo eo eo eo eo ail eo eo 
eo eo eo eo eo eo 
pre post conditions transformation functions conceptually operation associated context denoted cto list operations need executed bring document initial state state defined 
significance context effect operation correctly interpreted context 
operation generated associated original context list operations hb site time generation 
operations original context iff context operation changed explicitly applying primitive transformation functions specified section 
specifying pre post conditions transformation functions context relations operations defined 
definition 
context equivalent relation operations associated contexts cto respectively context equivalent iff cto apparently context equivalent relation transitive operations contrast independence relation transitive operations guaranteed example definition 
context preceding relation operations associated contexts cto respectively context preceding 
iff cto 
definition know operations 

derive noted context preceding relation different dependence causal ordering relation dependence relation transitive context preceding relation transitive definition 
real time cooperative editing systems delta current list operations hb site determine current document state site define context executing new operations 
obviously execution context site keeps changing new operations executed site 
causally ready operation original context current execution context destination site executed document state determined current execution context document state determined operation original context operation intention automatically guaranteed 
operation original context different current execution context due preceding executions independent operations operation needs transformed execution current execution context order preserve intention 
intention preserving scheme uses primitive transformation functions include exclude operation context operation produce new operation 
include operation context inclusion transformation function called produce specified 
specification 
precondition input parameters 
postcondition output 
execution effect context cto execution effect context exclude operation context exclusion transformation function called produce specified 
specification 
precondition input parameters 

postcondition output execution effect context cto execution effect context addition postconditions primitive transformation functions meet reversibility requirement defined 
definition 
reversibility requirement operations 

simplify expression applying primitive transformation functions repeatedly list operations additional utility functions lit defined 
include list operations ol context operation function lit ol called 
function 
lit ol ol lit ol ail ol delta sun return preconditions input parameters lit ol ol consecutive operations ol ol ol ol 
ol 
exclude list operations ol context operation function ol called 
function 
ol ol ol ail ol return preconditions input parameters ol ol 
consecutive operations ol ol ol ol 
ol 
preconditions required transformation functions facilitate correct derivation adjustment operation parameters impact operation 
ensure preconditions input operations main tasks higher level control algorithm discussed section 
input operations satisfying preconditions produce output operation satisfies postconditions meets reversibility requirement responsibility lower level inclusion exclusion transformation functions 
concrete definitions depend semantics input operations application dependent 
inclusion exclusion transformation functions text editing system primitive operations insert delete discussed section 
generic operation transformation control algorithm concept context specifications inclusion exclusion transformation functions generic operation transformation got control algorithm devised discussed section 
onew new causally ready operation associated original context hb eo eo eom 
assume eo eo eom onew eo 
eo 

eom objective got control algorithm determine execution form onew denoted eom 
effect executing context hb achieves effect executing onew context exhaustive case analysis conducted derive components got control algorithm 
consider simplest case operations hb causally preceding onew case occur onew newly generated local operation onew remote operation original context contains list operations local hb time onew real time cooperative editing systems delta causally ready execution 
case hb 
eom 
onew onew executed original form transformation onew exists operation eo hb eo onew operation eo context onew hb 
onew needs transformed order include impact eo independent operations hb 
suppose hb eo eo eom eo oldest operation hb independent onew eo identified scanning operations hb left right operation independent onew met obviously hb gamma prefix original context onew technical challenge ensure preconditions required primitive transformation functions met process including independent operations range hb context onew case operations range hb independent onew hb gamma 
special circumstance onew eo eo 
eo 

eom directly apply list inclusion transformation function produce lit onew hb 
complication comes mixture independent dependent operations range hb 
eol eo eo cr list operations range hb causally preceding onew circumstance hb gamma eol eol eo eo cr eo corresponding form eo time onew generation 
apparently exists operation eo dilemma facing hand directly apply list inclusion transformation function include operations hb contains list dependent operations eol onew context equivalent eo hand directly apply list exclusion transformation function exclude dependent operations eol reverse order onew context equivalent eo case eo cr 
onew guarantee eo 
eo due mixture independent dependent operations range hb 
onew context equivalent eo apply exclusion transformation function exclude operations eol eol context onew eo cr 
assured eo 
eo eol eol available hb 
problem obtain operation eo eol corresponding operation eo eol operation eol eo observed hb gamma hb gamma hb gamma 
eo obtained excluding operations range hb gamma reverse order context eo eo eo hb gamma gamma second operation eol eo observed eo hb situation simplest case discussed 
delta sun hb gamma hb gamma hb gamma eo 
eo obtained excluding operations range hb gamma reverse order context eo including eo intermediate result 
steps need executed eo hb gamma gamma eo eo 
generally ith operation eol eo steps need executed eo hb gamma gamma eo lit eo eo gamma 
eol obtained eol apply list exclusion transformation function exclude operations eol reverse order produce new context equivalent eo apply list inclusion transformation function include operations hb new onew eol gamma lit new hb 
analysis reasoning got control algorithm specified 
algorithm 
got control algorithm new causally ready operation onew hb eo eo eom execution form onew denoted obtained follows scan hb left right find operation eo eo onew operation eo return onew 
scan hb find operations causally preceding onew single operation return lit onew hb 
eol eo eo cr list operations hb causally preceding onew steps executed get eol eo eo cr follows eo eo hb gamma gamma eo hb gamma gamma eo lit eo eo gamma 
new onew eol gamma 
return lit new hb 
stands temporary operation notation represent intermediate result transformation 
real time cooperative editing systems delta analysis specification got control algorithm know preconditions required transformation functions guaranteed got control algorithm 
postconditions ensured transformation functions obtained got control algorithm property execution context hb achieve effect execution onew context original context onew execution context hb preserve intention onew worth pointing got control algorithm works solely linear data structure hb additional data structures need maintained deriving checking context relationship operations 
fact context relationship operations required transformation functions implicitly enforced explicitly checked got control algorithm 
dependence relationship operations need explicitly checked got control algorithm 
check operation dependent independent operation known property state vector timestamping raynal singhal operations generated sites timestamped svo respectively iff svo 

integrating got control algorithm undo redo scheme section discuss achieve intention preservation convergence integrating got control algorithm undo redo scheme 
onew new causally ready operation hb eo eom eon eo oldest operation hb eom youngest operation totally preceding onew eon youngest operation hb 
integrated scheme starts undoing executed operations range hb restore document state execution 
onew transformed got control algorithm executed 
undone operations transformed redone take account impact strategy transforming redoing undone operations discussed 
operation range hb eom observed hb hb eom new execution form eom denoted eo obtained follows eo eom 
second operation hb eom observed hb eom hb eom context equivalent need exclude eom context eom include eo context intermediate result 
steps needed eom eom eo lit eo 
generally ith operation hb eom gamma steps executed delta sun 
eom hb gamma gamma eo lit eo eo gamma 
shown eo obtained way property execution eo context hb achieve effect execution eom context analysis integrated scheme defined 
algorithm 
undo transform transform redo scheme new causally ready operation onew hb eo eom eon steps executed undo operations hb right left operation eom eom onew 
transform onew applying got control algorithm 

transform operation eom hb new execution form eo follows eo eom 
gamma eom hb gamma gamma eo lit eo eo gamma 
redo eo eo eo sequentially 
execution steps contents history buffer hb eo eom eo eo shown sites executed set operations list executed operations order format convergence ensured 
executed operation hb obtained got control algorithm step undo transform transform redo scheme intention preservation ensured 
example 
illustrate undo transform transform redo scheme works consider scenario shown fig 
site augmented causality preserving scheme undo transform transform redo scheme 
values state vectors executing operation site indicated explicitly 
sequence events happening site explained 
site generated executed local eo hb eo 
arrives needs applied inclusion transformation eo execution eo eo eo eo execution eo hb eo eo 
arrives needs transformed execution eo context equivalent eo context real time cooperative editing systems delta site site site time delayed fig 

scenario real time cooperative editing session augmented scheme undo transform transform redo scheme 
contains context eo 
needs applied exclusion transformation obtained applying exclusion transformation eo eo eo lit eo eo eo eo 
execution eo hb eo eo eo 
arrives needs applied inclusion transformation eo eo eo eo teo hb eo eo eo eo 
site generated executed eo hb eo 
arrives eo needs undone eo secondly executed eo thirdly new execution form eo eo eo hb eo eo 
generated executed eo hb eo eo eo 
arrives eo needs undone eo secondly needs transformed get eo way step site 
thirdly new execution form eo eo eo eo eo due fact eo 
eo 
eo hb eo eo eo eo 
site arrives executed eo hb eo 
generated executed eo hb eo eo 
eo equals eo site equals eo 
delta sun 
arrives suspended executed site detected comparing values state vector associated local state vector causality preserving scheme 
arrives eo eo need undone secondly executed eo thirdly new execution form eo eo eo obtain new execution form needs applied exclusion transformation context equivalent eo applied inclusion transformation eo eo sequence eo lit eo eo 
hb eo eo eo 
execution suspended executed execution form eo eo eo due fact eo 
eo 
eo hb eo eo eo eo 
example see convergence intention preservation ensured fact sites effectively executed sequence properly transformed operations eo eo eo eo eo eo eo eo lit eo eo eo eo causality preserved suspending execution site 
garbage collection scheme preceding discussions implicit assumption site maintains hb infinite storage capacity 
practice memory buffers limited sizes 
done prevent hb soon fill executed operations 
purpose saving executed operations hb support undo transform transform redo scheme operation needs kept hb longer involved undo transform transform redo scheme 
section discuss concept garbage devise techniques garbage collection 
design undo transform transform redo scheme observed new operation onew identify operation hb oldest operation independent onew executed operations range hb gamma surely involved undo transform transform redo scheme respect onew operations range hb gamma causally preceding onew included context onew follows directly observation operations range hb surely causally preceding forthcoming new operations definitely involved undo transform transform redo scheme collected garbage 
analysis envisage garbage collection scheme scans hb left right check current operation inspection surely causally preceding forthcoming new operations 
delete hb scanning 
envisaged scheme relies assessment executed operation hb surely causally preceding forthcoming new operations 
discover information assessment site maintains state vector real time cooperative editing systems delta table svt state vectors site 
sv state vector table site initially sv gamma 
executing operation remote site timestamped svo rth vector sv updated follows sv svo gamma 
obviously sv site represents view knowledge site state site gamma 
particular sv sv kth vector sv local state vector 
site happens silent unusually long period time sites know state required site broadcast short state message containing state vector generated operation certain period time executing certain number remote operations 
receiving state message remote site site simply updates rth state vector sv piggybacked state vector 
addition site maintains minimum state vector msv elements site 
msv minimum state vector site initially msv gamma 
executing operation updating sv processing state message remote site msv updated follows msv min sv sv gamma gamma 
shown value ith element msv msv operations generated site executed sites 
assumption messages sent site received order sent operations generated remote site execution mth operation site executed site operations site certainly precede forthcoming operations site 
executed operation eo hb generated site timestamped msv eo operations generated site certainly causally precede forthcoming operations site discussion garbage collection procedure defined follows algorithm 
garbage collection procedure scan hb left right 
eo current operation inspection 
suppose eo generated site timestamped 
msv eo removed hb continue scanning 
scanning return 
garbage collection procedure invoked periodically processing remote operation message number buffered operations hb goes preset threshold value 
example 
illustrate garbage collection scheme consider scenario fig 
obtained adding extra state message sm site scenario fig 

timestamp piggybacked message contents hb site processing operation contents sv msv site processing messages scenario illustrated 
site processing operations local msv 
executed operation hb eo greater msv delta sun site site site eo eo eo svt msv eo eo eo sv sv sv eo eo eo eo sv eo eo eo eo eo eo eo eo eo eo eo eo eo eo eo eo eo eo eo eo eo eo sm sv fig 

scenario garbage collection real time cooperative editing system garbage collection procedure terminates removing operation hb 
noted second operation hb eo equal msv eo collected garbage eo may involved undo transform redo scheme respect forthcoming operations may independent eo site processing operations sm local msv equals operation hb removed reason site 
site processing delayed sm local msv equals 
executed operation hb eo equal msv eo removed garbage hb 
second executed operation hb eo msv eo removed hb garbage 
example see site collects garbage local hb knowledge states sites completely distributed fashion 

application dependent transformation algorithms section pair reversible inclusion exclusion transformation algorithms string wise operations sun demonstrate application dependent part intention preserving scheme designed 
operations independent eo arrived scenario site sufficient knowledge state sites stage collect eo garbage 
real time cooperative editing systems delta application environment text document data model 
text document formatting modeled sequence characters referred addressed document 
primitive editing operation document state position parameter determines absolute position document operation performed 
pointed text document data model just conceptual view text document user dictate actual data structure implement document state 
conceptual data model implemented various different internal data structures single array characters linked list structures structure virtual memory blocks valdes 
primitive editing operations 
assumed document state changed executing primitive editing operations insert insert string position 
delete delete characters started position means new character cn added document state iff cn string executed insert operation old character deleted document state iff deleting range executed delete operation 
shown practical text editing systems vi emacs implemented top primitives prakash valdes 
criteria verifying intention preserved effects 
postconditions reversibility requirement inclusion exclusion transformation functions execution transformed operation new context achieve editing effect execution corresponding operation transformation old context 
concrete criteria verifying postcondition insert delete 
specification 
verification criteria operation associated context cto operation obtained applying inclusion exclusion transformation operation cto context associated execution context cto achieves effect execution context cto criteria satisfied case insert insert 
means string entirety appears document execution context cto insert included cto independent appear middle character exists document state determined cto document state determined cto left right side position document state determined cto left right side position document state determined cto delta sun 
case delete delete 
ro cp cp cp gamma list characters deleting range document state determined cto ro cp cp cp gamma list characters deleting range document state determined cto characters ro disappear document execution context cto insert included cto independent ro include character criteria satisfied execution effects independent insert delete operations interfere sense insert operation may insert string middle string inserted independent operation delete operation may delete characters inserted independent operations 
multiple independent delete operations overlapping deleting ranges combined deleting effect union individual deleting ranges overlapped ranges merged effect achieved serializing independent operations order 
multiple independent insert operations insert strings position strings appear document state inserted total order enforced high level control scheme undo redo scheme 
case strings ab prefix string abcd exist possible combined inserting effects merged effect abcd non merged effect provided abcd inserted ab inserted 
merged non merged effects satisfy verification criteria non merged effect chosen transformation functions see section simplicity 
notations 
facilitate description transformation functions notations introduced position parameter operation 
length operation insert length string inserted 
delete number characters deleted 
string insert operation 
seen sections number exceptional cases information parameters input operations may get lost transformation information contained parameters output operation may adequate ensure reversibility inclusion exclusion transformation functions 
cope exceptional cases operation assumed addition explicit parameters internal data structure maintains information necessary ensuring reversibility 
hide away details internal data structure description transformation algorithms number utility routines introduced access utilize information internal data structure giving implementation details clarity 
inclusion transformation apply inclusion transformation invoked turn operation types insert delete calls real time cooperative editing systems delta sub functions real transformation 
sub functions defined fig 

basic transformation strategy 
precondition required ensure relation operation ranges correctly determined simply comparing parameters basic inclusion transformation strategy applied compare parameters determine relation operation ranges assume executed find operation range new document state adjust parameters comparison result impact assumed execution verification criteria 
function 
ii oa oa oa insert oa oa return function 
id oa oa oa oa 
insert oa oa gamma insert oa save li oa return function 
di oa oa oa oa oa delete oa oa delete gamma oa oa phi delete oa gamma gamma oa return function 
dd oa oa oa oa oa delete oa oa gamma oa oa oa delete oa oa oa oa 
delete oa oa gamma oa oa oa delete gamma oa oa delete oa gamma oa save li oa return fig 

inclusion transformation functions 
delta sun example apply inclusion transformation insert operation delete operation id refer position left position referred assumed execution impact intended position adjustment needs 
means position goes right position deleting range intended position shifted characters left impact executing taken account 
position parameter decremented 
intended position falls deleting range case delete characters inserted new inserting position verification criteria 
operation splitting split segments 
normally inclusion transformation produces single transformed operation 
apply inclusion transformation delete operation insert operation di inserting position falls deleting range delete characters inserted verification criteria 
deleting range split segments assumption executed outcome transformation operation split sub operations expressed phi context relationship 

lost information saving reversibility 
reversibility requirement produces applied get back 
normally adequate information available parameters recover delete operation inserts string deletes characters deleting range information may get lost transformed recovered information parameters example apply inclusion transformation insert operation delete operation id inserting position falls deleting range including boundary case position parameter verification criteria 
case information offset lost way recover original exclusion transformations 
example apply inclusion transformation delete operation delete operation dd delete operations deleting ranges overlap transformed operation deleting range shorter position parameter may position parameter falls deleting range verification criteria 
case information original length position lost way recover just parameters ensure reversibility utility routine save li save lost information parameters transformation real time cooperative editing systems delta internal data structure associated exclusion transformation function recover see section 
example 
consider context equivalent operations insert aa delete independently generated document state abcde applying inclusion transformation insert aa executed original document state new document state ae execution new document state produce apparently execution new document state achieves effect execution original document state string aa exists document execution character left right position original document state remains left right position new document state 
generally verified context equivalent operations produce postconditions specification satisfied verification criteria 
exclusion transformation apply exclusion transformation invoked turn operation types calls sub functions real transformation 
definitions subfunctions fig 

basic transformation strategy 
precondition 
required ensure relation operation ranges correctly determined simply comparing parameters basic exclusion transformation strategy applied compare parameters determine relation operation ranges assume undone find operation range new document state adjust parameters comparison result impact assumed undone verification criteria 
example apply exclusion transformation insert operation insert operation ii refer position left position referred assumed undoing impact intended position adjustment needs means position goes right position inserting range intended position shifted characters left impact undoing taken account 
position parameter decremented 
intended position falls middle string inserted case basic strategy exclusion transformation applicable undoing result operation range undefined 
relative addressing undefined ranges 
generally insert operation inserts string delete characters delta sun function 
ii oa oa oa oa insert oa oa gamma insert oa oa gamma save ra return function 
id oa check li oa recover li oa oa oa insert oa oa return function 
di oa oa oa oa oa delete oa oa gamma oa oa oa delete oa oa gamma oa oa oa 
delete gamma oa oa gamma phi delete oa oa gamma oa oa oa delete phi delete oa gamma oa delete oa oa gamma phi delete gamma oa oa save ra return function 
dd oa check li oa recover li oa oa oa oa oa delete oa oa delete gamma oa oa phi delete oa gamma gamma oa return fig 

exclusion transformation functions 
string inserted undoing result operation range undefined 
technique deal undefined range problem called relative addressing outcome relatively addressed sense position parameter relative position parameter base operation relative document absolutely addressed 
di ii utility routine save ra save internal data structure associated fact relatively addressed respect base operation real time cooperative editing systems delta relatively addressed operations converted absolutely addressed operations giving input parameter subsequent inclusion transformation function higher level list transformation functions see section 
strategy works outcome exclusion transformation just intermediate result top level got control algorithm subsequent inclusion transformations updating document state 
lost information recovery 
reverse effect inclusion transformation id dd utility routine check li check involved information losing inclusion transformation resulted utility routine recover li recover information saved basic exclusion transformation strategy applied construct information parameters operation splitting split segments 
operation splitting may occur exclusion transformation circumstances 
firstly dd position parameter falls deleting range deleting range split segments undone outcome transformation delete operations corresponding split deleting segments 
context relationship secondly di deleting range covers characters inserted characters outside string inserted outcome consists delete operations relative address deleting characters inserted absolute address deleting characters outside string inserted relationship base operation higher level list transformation functions handle delete operations differently see section 
example 
suppose initial document state abcde operations generated follows 
operation insert aa generated document state 
execution document state operation delete generated document state 
apparently 
applied exclusion transformation transformed operation delete executed context cto initial document state editing result abe achieves editing effect executed context cto document state execution characters cd deleting range disappear document execution characters inserted independent operation deleted generally verified operations 
produce satisfies postconditions specification verification criteria 
delta sun revised list transformation section list transformation functions defined specification inclusion exclusion functions 
list transformation functions served interface low level application dependent transformation functions high level generic got control algorithm 
section list transformation functions revised order cope split operations relatively addressed operations produced primitive inclusion exclusion transformation functions 
revised lit 
cope split operations input parameters revised list inclusion transformation function shown functions lists operations ol ol outcome list transformed operations 
function 
lit ol ol ol rl tl lit ol ol tl lit ail ol ol tl rl tl tl return rl function 
lit ol ol rl check ra check bo ol rl lit ail ol check ra check bo ol convert aa ol rl lit ail ol rl lit ol ail ol return rl preconditions input parameters lit ol ol operation ol relatively addressed base operation ol consecutive operations ol ol ol ol 
ol 
postconditions output function denoted ol ol 
ol 
ol 

ol sequential execution operations ol context preserves intentions operations ol 
apply inclusion transformation list operations ol list operations ol ol applied inclusion transformation operations ol calling lit ol ol produce tl 
real time cooperative editing systems delta ail ol ol tl input parameters recursively calling lit produce tl 
list transformed operations obtained concatenating tl tl tl tl returned 
noted outcome lit ol ol tl appended ol ol tl recursive calling lit postcondition lit satisfied 
main functionality lit ol handle special cases input operation relatively addressed 
basic strategy relatively addressed operation converted absolutely addressed operation information available base operation ol absolutely addressed operation applied inclusion transformation operations base operation ol 
shown function utility routine check ra check relatively addressed 
utility routine check bo ol check ol base operation 
ol base operation ol skipped lit ail ol recursively invoked 
ol base operation utility routine convert aa ol convert absolutely addressed operation lit ail ol recursively invoked 
case relatively addressed operation lit ol ail ol recursively invoked 
revised 
cope split operations input parameters revised list exclusion transformation function shown functions lists operations ol ol outcome list transformed operations 
function 
ol ol ol rl tl ol ol tl ail ol ol rl tl tl return rl function 
ol check ra ol rl rl ol ail ol return rl preconditions input parameters ol ol operation ol ol 
relatively addressed consecutive operations ol ol ol ol 
ol 
postcondition output function denoted ol operation ol ol len delta sun len relatively addressed 
apply exclusion transformation list operations ol list operations ol ol applied exclusion transformation operations ol calling ol ol produce tl 
ail ol ol input parameters recursively calling produce tl 
list transformed operations obtained concatenating tl tl tl tl returned 
contrast lit outcome ol ol tl appended ol recursive calling postcondition satisfied 
lit ol main functionality ol handle special cases input operation relatively addressed 
strategy relatively simple operation relatively addressed operations ol skipped function returns ol ail ol recursively invoked 
noted strategy ol skip exclusion transformation operations ol case relatively addressed corresponding strategy lit ol apply inclusion transformation relatively addressed operation operations ol base operation 
list transformation functions revised top level control structure got control algorithm undo transform transform redo scheme remain unchanged 

integrated example section example illustrate system works generic part application dependent part integrated 
scenario fig 
initial document state contents abcdefgh editing operations scenario instantiated follows delete intention delete cde insert abcd intention insert abcd abcd delete intention delete df gh delete intention delete cd ds denote document state site executing operations ds eo denote application operations eo eo sequence ds execution form operation document state execution different sites illustrated 
example section referred order understand execution form operation obtained way illustrated 
site ds abcdefgh real time cooperative editing systems delta execute eo ds ds eo execute eo eo insert abcd li ds ds eo execute eo eo insert abcd delete ra eo lit eo eo delete ds ds eo execute eo eo delete li ds ds eo abab site ds abcdefgh execute eo ds ds eo execute undo eo eo delete ds eo abcdefgh eo ds eo transform redo eo eo eo eo insert abcd li ds ds eo execute eo ds ds eo execute undo eo eo insert df gh ds eo inserting position falls deleting range eo eo eo 
information losing transformation 
eo outcome information losing transformation recover li eo eo called obtain exclusion transformation 
deleting range string inserted relatively addressed base operation 
list transformation eo skipped eo relatively addressed eo base operation eo eo 
position parameter falls deleting ranges eo eo deleting range shorter deleting range position parameter equal eo information losing transformation 
delta sun transform stage site eo delete ds eo transform redo eo eo eo eo delete li ds ds eo abab site ds abcdefgh execute eo ds ds eo execute eo ds ds eo execute suspended undo eo eo eo insert cd eo delete ds eo abcdefgh eo ds eo transform redo eo eo eo eo eo insert abcd li eo eo delete ra eo lit eo eo delete ds ds eo execute eo eo delete ds ds eo abab illustration observed document states different sites stages executing number operations relationship stage 
ds ds ds stage 
ds ds ds stage 
ds ds ds stage 
ds ds ds document states relationship highlights aspects convergence property consistency model different sites allowed execute different independent operations divergent document states intermediate stages session 
example stage ds ds due executing independent operations site respectively 
sites executed set operations document states ds ds 
particular sites executed set operations session document states sites ensured identical ds ds ds 
real time cooperative editing systems delta addition example demonstrates properties scheme characters inserted insert operation may deleted independent delete operation may deleted dependent delete operations 
deleting ranges independent delete operations partially completely overlap effective deleting range transformed independent delete operations union separate deleting ranges 
interface related issue worth brief mentioning editing operations example expressed atomic string wise operations generated user interface keyboard character character 
achieve responsiveness local operations single character immediately executed reflected local user interface 
character wise local operations need immediately propagated remote sites 
accumulated converted string wise operations communication transformation remote execution 

internet prototype implementation algorithms previous sections implemented prototype reduce real time distributed unconstrained cooperative editing system sun programming language java 
prototype reduce system consists multiple cooperating reduce sites typically pc machine workstation connected internet 
reduce process running site called site server ss 
addition centralized reduce session manager sm manages cooperating membership sessions involved handling cooperative editing operations 
sm may run special server machine reduce sites 
ss relevant issues discussed 
central component ss process reduce engine re implements algorithms achieving convergence causality preservation intention preservation 
multiple concurrent threads inside ss process dedicated thread handling requests propagated remote site special thread handling operations generated input part local user interface keyboard mouse 
re implemented java monitor object provide multiple threads synchronized point access output part local graphical user interface screen 
thread repeatedly executes steps waiting requests carrying timestamped operations corresponding remote local site invoking re handle incoming request 
thread invokes re thread may blocked outside re active thread inside re 
re checks see incoming operation causally ready execution invoking causality preserving algorithm 
thread blocked inside re thread leaving re 
operation causally ready re invokes undo transform transform redo scheme job 
garbage collection algorithm invoked delete useless operations history buffer 
leaving re threads blocked inside re notified continue check causally ready conditions 
local requests handling higher priority remote requests handling may delta sun blocked inside re 
correctness causality preserving scheme garbage collection scheme relies reliable order preserving communication channel pair cooperative sites 
communication channel naturally implemented java socket internet tcp ip protocol 
complications caused operations splitting string wise inclusion exclusion transformations implementation consistency maintenance algorithms straightforward 
experience prototype system shown overhead involved undo transform transform redo scheme small rarely visible impact responsiveness user interface 
mainly number operations involved invocation undo transform transform redo scheme small due facts number cooperating sites involved testing session small sites operations normally arriving correct causal total orders garbage collection scheme effective reducing number operations history buffer 
worst case theoretical complexity algorithm analyzed precisely improved circumstances large number cooperating sites large number operations history buffer concerned practice 
current prototype system developed mainly test feasibility approach explore system design implementation issues 
efforts directed building robust useful system external users real application contexts evaluate research results users perspective 

discussion alternative related section alternative related approaches consistency maintenance real time cooperative editing systems examined special regard capability achieving convergence causality preservation constraints short response time support unconstrained collaboration distributed environments 
alternative approaches turn 
user time token floor edit shared document ellis 
access token may controlled internal technical protocols implemented software external social protocols followed cooperating users mediate actions greenberg 
single active user instant time inconsistency problems occurs systems 
convergence causality preservation intention preservation ensured price supporting concurrent editing 
consequently approach limited just situations single active user fits need collaborative working ill suited application environments nature collaboration characterized concurrent streams activities multiple users dourish 
real time cooperative editing systems delta locking 
object word line section locked updated user time able update object olson prakash greenberg 
concurrent editing allowed condition multiple users locking editing different objects 
locking prevent multiple users generating conflicting editing operations object user edit object instant time 
granularity locking document resorting turn protocol inconsistency problems resolved locking occurrence inconsistency problems independent editing operations refer object domain text editing 
concurrent locking mixed concurrent editing inconsistency problems resolved locking operations normal editing operations 
locking increases response time due overhead requesting releasing locks distributed environments 
serialization 
operations may generated concurrently execution effects operations executed total order sites 
achieved pessimistically delaying execution operation totally preceding operations executed lamport sun maheshwari optimistically executing operations arrival generation regard ordering undo redo repair order execution effect beaudouin lafon greenberg 
apparently serialization solve problem divergence 
serialization protocols problems intention violation problem solved serializing concurrent operations order text editing domain 
second causality violation problem remains unsolved operations executed arrival optimistic case total ordering inconsistent causal ordering operations pessimistic case 
lastly responsiveness may lost operations executed immediately generation delay pessimistic case 
causal ordering 
operations may generated executed concurrently execution order constrained natural causal order 
achieved known vector logical clock state vector technique raynal singhal 
approach local operations executed immediately generation responsiveness remote operations may delayed causally preceding operations executed ellis gibbs sun :10.1.1.31.1352
approach achieve causality preservation address problems divergence intention violation 
worth pointing state vectors enforce causal ordering group operations messages classic technique exploited distributed computing systems isis distributed group communication tools birman amoeba distributed operating system mullender 
generic group communication services provided systems real time groupware applications reliable connection oriented point point communica delta sun tion service needed reduce system 
consistency maintenance algorithms real time groupware systems need explicit knowledge causal relationship messages operations order properly general purpose distributed systems try knowledge transparent applications 
real time groupware systems pass general purpose distributed systems handle causality state vectors explicitly 
transformation 
operations generated executed concurrently may transformed execution execution set properly transformed operations different orders produce identical document states ellis gibbs 
transformation combined casual ordering approach achieve convergence 
approach local operations executed immediately generation responsiveness 
transformation especially suitable achieve intention preservation discussed 
transformation promising approach maintaining document consistency supporting user initiated undo collaborative systems prakash 
comparison related operational transformation maintain consistency real time cooperative editing systems pioneered ellis gibbs grove system closely related 
detailed comparison approach existing transformation approaches order 
grove system distributed operational transformation algorithm transforming independent operations 
essentially algorithm adopted inclusion transformation strategy 
basic idea perform inclusion transformation causally ready operation executed independent operations log history buffer order oldest 
grove operational transformation approach major inspiration area 
initial stage research tried incorporate algorithm early experimental prototype system algorithm produce identical desired intention preserved results sites 
fact took long time find root problem relationship independent operations diverse unconstrained cooperative environment inclusion transformation algorithm works correctly pair input operations generated originally transformation document state 
recognizing problem introduced additional exclusion transformation specified pre postconditions inclusion exclusion transformations devised got control algorithm determines inclusion exclusion transformation applied operations ensures preconditions met 
long application dependent transformation functions satisfy specified postconditions got control algorithm able preserve intentions independent operations matter generated different document states 
real time cooperative editing systems delta parallel research group discovered algorithm user issues executes operation concurrently operation user proposed different approach called adopted algorithm solve problem 
adopted algorithm added original algorithm multi dimensional interaction graph keeps track valid paths transforming operations double recursive function similar functionality got control algorithm determine operations applied transformation similar inclusion transformation 
transformation functions satisfy properties specified adopted approach equivalent approach sense execution set operations initial document algorithms produce outcome document 
proof equivalence approaches interesting topic scope 
discuss important differences approach adopted approach 
firstly algorithm works linear history buffer containing operations executed forms adopted algorithm works dimensional number cooperating sites interaction graph containing operations various possible forms original intermediate executed addition linear log history buffer operations original forms 
interaction graph provides useful model visualizing transformation relationship original transformed operations maintaining searching dynamically growing potentially large dimensional graph run time inefficient unnecessary proved approach 
secondly way ensuring convergence different approaches 
approach distinguishes convergence issue intention preservation issue ensures convergence higher level undo transform scheme 
essence undo redo kind transformation performed directly document states operations generic application dependent 
correctness convergence scheme established fact final document states sites operations executed total order 
contrast adopted approach achieves convergence intention preservation application dependent transformation algorithm level 
correctness adopted approach ensured requiring transformation functions guarantee uniqueness labeling vertices document states edges original transformed operations interaction graph 
due mixed complications convergence intention preservation application dependent nature transformation functions difficult verify transformation function satisfies properties required 
fact fairly easy propose seemingly correct transformation functions really guarantee uniqueness labeling vertices edges interaction graph 
illustrate consider operations insert insert delete generated initial document state abc delta sun site respectively 
adopted algorithm transformation functions text editing constructed interaction graph operations shown fig 

illustrated del ins del ins del abc ins ins ins ins del ins ab ac ins ins ins bc fig 

interaction graph ambiguously labeled edges vertices 
graph contains ambiguously labeled edges denoted dashed arrows labeled insert insert labeled insert insert ambiguously labeled vertices labeled means transforming executing operations different paths may result different final states may tempted fix problem reversing rule insert operations position parameter position operation larger site identifier shifted 
unfortunately quick fix works case fails similar scenario obtained simply reversing site identifiers root problem deeper requires sophisticated solution just site identifier 
experience distinction convergence greatly helped understand nature issues verify correctness solutions issues 
contrast character wise text editing transformation algorithms proposed ellis gibbs inclusion exclusion transformation functions string wise 
extension character wise transformation string wise transformation important worthwhile string wise transformation general greatly reduce number transformations communications 
extension nontrivial transformation involves quite complications occurring transformation shown section 
best knowledge noted divergent final results intention preserved results general definition intention operations definition concrete criteria section 
example divergent final results necessarily lead intention violation 
real time cooperative editing systems delta published string wise transformation algorithms purpose 
strongly believe depth detailed investigation transformation algorithms deserve serious attention level investigation enables better understand intrinsic interactions form pre postconditions transformation algorithms higher level control algorithms devise correct solutions lower higher levels 

started identifying kinds inconsistency problems divergence causality violation intention violation real time cooperative editing systems replicated architecture 
particularly non serializable intention violation problem distinguished serializable divergence problem 
consistency model properties convergence intention preservation proposed framework resolving identified inconsistency problems 
convergence property ensures replicated copies shared document sites session 
causality preservation property ensures execution order dependent operations natural cause effect order process session 
intention preservation property ensures effect executing operation document states effect executing operation document state generated effects independent operations interfere 
consistency model imposes execution order constraint dependent operations independent operations long convergence intention preservation properties maintained 
furthermore integrated set schemes supporting consistency model devised discussed detail 
causality preservation achieved state vector timestamping scheme 
convergence achieved optimistic serialization strategy undo redo 
achieving major technical challenge approach 
recognition independent operations may generated different document states unconstrained cooperative environment introduced notion operation context capture required relationship operations correct transformation 
context pre post conditions specified pair generic inclusion exclusion transformation functions 
cope complexities involved divided intention preserving scheme parts generic part solely dependency context relationships operations application dependent part relies semantics operations involved 
novel generic operational transformation got control algorithm devised determine inclusion exclusion transformation applied operations ensure preconditions met 
long application dependent transformation functions satisfy specified postconditions got control algorithm able preserve intentions independent operations matter generated different document states 
furthermore got control algorithm integrated undo redo scheme form undo transform transform redo scheme achieving convergence delta sun intention preservation 
addition distributed garbage collection scheme devised managing history buffer 
apart generic operational transformation control algorithm pair concrete inclusion exclusion transformation algorithms devised string wise insert delete operations cooperative text editing systems 
main issues addressed part include criteria verifying intention preserved editing effects basic strategies normal transformation operations parameters strategies handling exceptions lost information saving recovery ensuring reversibility relatively addressing undefined ranges operation splitting split segments 
transformation algorithms designed context text editing quite general potentially applicable real time groupware systems allow concurrent insertion deletion sequence objects linearly ordered relationship sequence pages document book moran sequence slides seminar lecture sequence frames movie video experimental effort construct working prototype cooperative editing systems learned real challenges involved motivated devise new models techniques address challenging problems 
hand theoretical effort partially formalizing identified problems proposed solutions played crucial role enabling understand nature complexity inconsistency problems design correct algorithms efficiently implement algorithms 
combined experimental theoretical approach continue applied research various aspects real time cooperative editing systems 
currently applying technical components consistency maintenance including state vector timestamping history buffer got control algorithm inclusion exclusion transformation functions support user initiated collaborative undo way similar prakash locks 
applying consistency model generic supporting schemes cooperative graphics editors validate model gain insight design types systems 
research real time cooperative editing systems special class distributed computing systems supporting human computer human interactions drawn inspiration traditional distributed computing techniques causal total ordering events state vector timestamping serialization lamport bernstein birman mullender raynal singhal sun maheshwari invented non traditional techniques address special issues intention preservation operational transformation ellis gibbs sun sun sun :10.1.1.31.1352
believe novel models concepts techniques invented real time cooperative editing systems research fundamental general potentially applicable areas distributed computing 
hope inspiration researchers looking innovative solutions challenging problems areas cscw distributed computing general 
real time cooperative editing systems delta acknowledgments wish anonymous referees associated editor john carroll valuable comments suggestions helped improve final presentation 
bernstein goodman hadzilacos 
concurrency control recovery database systems 
addison wesley publishing reading massachusetts 
birman schiper stephenson 
lightweight causal atomic group multicast 
acm trans 
comp 
sys 
august 
dourish 
ways divergence data management collaborative 
proceedings fourth european conference computer supported cooperative september pp 

dourish 
consistency guarantees exploiting application semantics consistency management collaboration toolkit 
proceedings acm conference computer supported cooperative november pp 

ellis gibbs 
concurrency control groupware systems 
proceedings acm sigmod conference management data may pp 

ellis gibbs rein 
groupware issues experiences 
cacm january 

timestamps message passing systems preserve partial ordering 
proceedings th australian computer science conference pp 

greenberg 
real time groupware distributed system concurrency control effect interface 
proceedings acm conference computer supported cooperative november pp 

olson 
unblocking brainstorming simple group editor 
proceedings acm conference computer supported cooperative november pp 

beaudouin lafon 
algorithm distributed groupware applications 
proceedings th international conference distributed computing systems may pp 

prakash 
issues design toolkit group editors 
journal usenix association 
lamport 
time clocks ordering events distributed system 
cacm 
olson 
shredit shared electronic workspace 
technical report university michigan 
moran mccall van pedersen halasz 
design principles sharing tivoli whiteboard meeting support tool 
greenberg ed groupware real time drawings designer guide pp 

mcgraw hill international uk 
mullender van rossum tanenbaum van renesse van staveren 
amoeba distributed operating system 
ieee computer magazine may 
olson olson carter 
group editor changes character design meeting outcome 
proceedings acm conference computer supported cooperative november pp 

prakash 
framework undoing actions collaborative systems 
acm trans 
computer human interaction december 
raynal singhal 
logical time capturing causality distributed systems 
ieee computer magazine 

integrating transformation oriented approach concurrency control undo group editors 
delta sun proceedings acm conference computer supported cooperative november pp 

sun yang zhang chen 
consistency model supporting schemes real time cooperative editing systems 
proceedings th australian computer science conference melbourne january pp 

sun yang zhang chen 
distributed concurrency control real time cooperative editing systems 
proceedings asian computing science conference singapore december pp 

lecture notes computer science springer verlag 
sun maheshwari 
efficient distributed single phase protocol total causal ordering group operations 
proceedings ieee rd international conference high performance computing december pp 

ieee computer society 
sun jia yang zhang 
reduce prototypical cooperative editing system 
proceedings th international conference human computer interaction san francisco august pp 

sun jia zhang yang 
generic operation transformation scheme consistency maintenance real time cooperative editing systems 
proceedings acm international conference supporting group phoenix november pp 

sun chen jia 
reversible inclusion exclusion transformation string wise operations cooperative editing systems 
proceedings st australasian computer science conference perth february pp 

valdes 
text editors algorithms architectures theory lot practice 
dr dobb journal april 
zhang yang 
operation synchronization cooperative editing environments 
ifip trans 
business process reengineering pp 

