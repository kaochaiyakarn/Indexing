landmark robot navigation anthony stanford edu jean claude latombe latombe cs stanford edu robotics laboratory department computer science stanford university stanford ca usa achieving goals despite uncertainty control sensing may require robots perform complicated motion planning execution monitoring 
describes reduced version general planning problem presence uncertainty complete polynomial algorithm solving 
planner computes guaranteed plan uncertainty bounds backchaining omnidirectional backprojections goal fully contains set possible initial positions robot 
algorithm assumes landmarks scattered workspace robot control position sensing perfect fields influence landmarks regions landmarks sensed robot control imperfect sensing null outside fields 
polynomiality completeness algorithm derive simplifying assumptions satisfaction may require robot workspace specifically engineered 
leads view robot workspace engineering means planning problems tractable 
computer program embedding planner implemented navigation techniques robot simulator 
examples run program 
non implemented extensions planner discussed 
acknowledgments research partially funded darpa contract onr contract 
authors leo guibas comments 

operate real world robots deal errors control sensing 
motion planners proposed address issue 
embed tacit unclear assumptions causing unreliable practice 
represent uncertainty bounded regions describing ranges errors 
correct plan execution guaranteed achieve goal actual errors execution time uncertainty bounds 
sound planner generates correct plans 
complete planner generates correct plan exists returns failure 
complete planners proposed far 
take exponential time measure size input problem virtually inapplicable 
fact shown planners attack problems inherently intractable 
achieve polynomiality making assumptions problem formulation eliminate source intractability algorithmic techniques take advantage assumptions 
key underlying notion landmark area island perfection robot configuration space consider position sensing motion control fully accurate 
outside area assume control imperfect position sensing null 
notion landmark area approximately corresponds field influence physical feature robot field sense identify feature information determine position high accuracy assume full accuracy 
feature may pre existing corner walls specifically provided help robot navigation radio beacon magnetic device buried ground 
set landmark areas scattered configuration space set obstacles robot collide initial region robot known prior execution goal region robot go planning problem generate set motion commands execution guarantees robot move goal 
planning algorithm solves problem iteratively constructing growing set landmark areas robot reliably attain goal 
set initially contains landmark areas intersecting goal region 
new landmark areas added robot reliably attain landmark areas set executing single move 
algorithm terminates successfully soon possible robot attain landmark area set single move initial region 
terminates failure new landmark areas added set condition success unsatisfied 
algorithm constructs set landmark areas robot reliably attain goal computing omnidirectional backprojections 
directional backprojection set landmark areas direction motion largest region configuration space robot guaranteed attain areas moving despite control uncertainty 
omnidirectional backprojection disjoint union directional backprojections possible directions motion indexed direction motion 
robot represented point plane show omnidirectional backprojection sufficiently represented far planning concerned finite number directional backprojections 
planner derived result complete 
time complexity polynomial number complexity landmark areas obstacles 
plans generates minimize number motions executed worst case 
landmarks require workspace include appropriate features robot equipped sensors able detect 
planning algorithm illustrates interplay engineering algorithmic complexity robotics 
software critical modern robots importance interplay increase 
tractability robot programming major consideration robot design workspace engineering 
question avoid engineering reduce cost 
interestingly motion plan generated planner assumption control sensing perfect landmark areas relaxed extent keeping plan correct 
furthermore show simple variations planner handle sorts landmark areas require perfect sensing control losing completeness polynomiality 
section related relate previous research 
section planning problem precisely state class problems solved planner illustrate statement example 
section directional backchaining cut planning method concept directional backprojection 
method provide efficient way select directions motion 
section omnidirectional backchaining address issue actual planning algorithm 
section experimental results show series examples run implemented planner 
simplification sections assume obstacles robot workspace 
section dealing obstacles extend planning method deal obstacles additional experimental results 
section discussion extensions discuss assumptions describe non implemented extensions planner aimed eliminating restrictive ones 

related motion planning uncertainty research topic robotics decades 
various approaches proposed including skeleton refinement inductive learning experiments iterative removal contacts preimage backchaining 
approaches operate phases motion plan generated assuming uncertainty transformed deal uncertainty 
preimage backchaining takes uncertainty account planning process 
tackle problems uncertainty shapes structure plan extent generated transforming initial produced uncertainty assumption 
direct continuation series preimage backchaining 
focus discussion series 
preimage backchaining considers class motion planning problems plan sequence generally algorithm motion commands defined commanded direction motion termination condition tc 
robot executes command free space moves direction contained instant cone half angle stops soon tc true 
contact obstacle robot may slide depending particular control law 
simply forbid contacts obstacles algorithm easily adapted handle compliant motions 
angle largest expected control error models directional uncertainty robot 
termination condition tc boolean function sensory data time data measure physical parameters robot position error 
actual parameter vector lies region modeling robot sensory uncertainty 
planning problem specified workspace model initial region goal region directional uncertainty sensing uncertainty problem formulation admits variants 
example may introduce time consider uncertainty robot velocity allowing construction sophisticated termination conditions 
workspace model location shape obstacles may subject errors yielding third type uncertainty 
sake simplicity discuss variants see 
preimage goal region motion command tc set points robot configuration space robot starts executing command points guaranteed reach goal 
preimage backchaining consists constructing sequence motion commands preimage goal gamma preimage gamma contains initial region 
source difficulty computing preimages possible interaction goal reachability goal recognizability 
robot reach goal despite directional uncertainty goal despite sensing uncertainty 
goal recognition termination condition command may depend region command executed 
region precisely preimage goal command depends termination condition 
recursive dependence noted 
canny described complete planner restrictive assumptions 
planner generates step plan reducing input problem deciding satisfiability semi algebraic formula alternating existential universal quantifiers 
decision takes double exponential time smallest plan may exist grows complexity environment 
various forms motion planning problem proven intrinsically hard 
expense completeness erdmann suggested goal reachability recognizability treated separately identifying subset goal called kernel subset attained goal achievement recognized tc independently way achieved 
defined backprojection region direction motion set points robot moves directional uncertainty starting points guaranteed reach proposed log algorithm compute backprojections plane obstacles polygons bounded edges 
preimage goal computed backprojection kernel 
implemented planner technique described 
kernel goal identified remaining issue selection commanded direction motion attain kernel backprojection kernel varies direction changes 
planner described considers finite number regularly spaced directions incomplete usually efficient 
donald considered disjoint union backprojections region possible directions motion 
point robot moving plane showed set sufficiently described polynomial number backprojections 
result propose log algorithm generate step single motion command plans 
briggs reduced time complexity algorithm log 
hutchinson fox extended algorithm exploit visual constraints allow visual compliant motions 
remaining difficulty construct multi step planner backchaining 
difficulty comes fact backchaining introduces twofold variation commanded direction motion varies backprojection current kernel kernel backprojection backchaining iteration vary 
deal difficulty introducing landmark areas 
show backchaining reduced iteratively computing relatively small set backprojections growing set landmark regions 
result directly yields polynomial planning algorithm 
planner complete relative defined class problems 
previously friedman proposed polynomial multi step planner compliant point robot polygonal workspace assuming sensing exactly detects robot traverses line segments joining vertices workspace 
notion landmark corresponds recognizable feature workspace induces field influence landmark area 
robot lies field senses landmark uses information determine location 
related notions previously introduced literature different names landmarks atomic regions signature neighborhoods perceptual equivalent classes 
past decade substantial amount reducing position sensing errors robot moving 
example mobile robots techniques proposed combine estimates provided dead reckoning environmental sensing see 
techniques address problem tracking selected motion plan possible problem generating plan 
goal planning presence uncertainty considered sure executing plan reveal information guarantee reliable execution 

planning problem section precisely state class problems solved planning algorithm 
illustrate statement specific example 

statement robot point moving plane workspace containing stationary forbidden circular regions obstacle disks 
robot move control modes perfect imperfect modes 
perfect control mode stationary circular areas workspace called landmark disks robot perfect position sensing 
disks may intersect creating larger areas called landmark areas robot move perfect control mode 
motion command perfect control mode called command described sequence points points landmark area consecutive points landmark disk non consecutive points different landmark disks 
robot start executing command landmark disk containing point 
executes command moving successive points stops reaches 
motion command imperfect control mode called command described pair direction plane called commanded direction motion set landmark disks called termination set command 
command executed plane outside obstacle disks 
robot follows path tangent point angle direction greater prespecified angle called directional uncertainty 
robot stops soon enters landmark disk robot sense time means modulus velocity irrelevant planning problem 
initial position robot known specified initial region consists disks 
initial region disk may may disjoint landmark areas 
robot move goal region subset connected workspace intersection landmark disks easily computable 
problem generate correct motion plan achieve robot allowed collide obstacles 
number landmark disks finite equal 
number obstacle disks finite 
number initial region disks small considered constant 
goal region intersection landmark disks computed time 
measure size input problem 
problem simplification real mobile robot navigation problem oversimplified captures fundamental aspects 
section see restricting assumptions eliminated alleviated methods described provide solid foundation real mobile robot navigation 

example robot workspace configuration space coincide 
example planning problem fig 
illustrates previous description example run implemented planner 
workspace contains landmark disks shown white grey forming landmark areas obstacle disks shown black 
directional uncertainty set radian 
initial goal regions small disks designated respectively 
white landmark disks planner associated motion commands 
arrow attached white disk commanded direction motion command planned attain set disks 
arrow white landmark area intersecting goal 
plan execution begins performing command attached initial region 
robot reaches disk termination set command guaranteed command attached disk white disk 
executing command allows robot attain point current landmark area goal goal region intersects landmark area command associated arrows shown drawn points 
case plan execution terminates second case command executed 
shows path produced sample execution plan 
path takes robot initial region landmark area designated successively attains traverses landmark areas marked command associated takes robot stops 
directional backprojection path shown produced execution commands commands 
generated plan required commands 
command guaranteed attain union landmark areas form termination set command 
execution different control errors caused robot reach motion command attached allowed robot reach 
directional backchaining section assume simplification workspace contains obstacle disks 
obstacles introduced section 

directional backprojection goal consider goal region define extension largest set landmark disks robot attain goal executing single command 
extension denoted set landmark areas having non zero intersection disks called extension disks 
landmark disks called intermediate goal disks 
directional backprojection region defined largest subset workspace robot executes command position guaranteed reach 
entry point extension robot attain executing 
note ae 
robot command immediately terminates 
larger region robot guaranteed attain executing command followed command 
robot executes command position outside region guaranteed reach 
positions may guaranteed reach may enter landmark disk intersecting may recognize goal achievement may traverse goal stopping 
left ray right ray right left rays landmark disk 
description directional backprojection directional backprojection goal extension direction consists connected subsets 
fig 
shows directional backprojection disk extension contains connected subsets 
connected subset hole union extension disks 
boundary consists circular segments called arcs straight segments called edges 
arc subset boundary extension disk 
right ray resp left ray extension disk half line tangent tangency point direction pointed resp gamma left hand side resp right hand side shown fig 

edge contained right left ray extension disk called right left edge accordingly 
extremity edge called origin tangency point ray 
extremity called edge endpoint intersection point ray extension disk ray 
right left ray extension disk supports edge total backprojection boundary 
edges share endpoint endpoint called spike 
connected subset single spike 
assign distinct integer landmark disk 
numbers give distinct name disk ray intersection rays 
isolated commanded directions motion edge tangent extension disks spike contact extension disk connected subset directional backprojection bounded simple curve 
label edge directional backprojection boundary name ray supporting arc name disk belongs spike name corresponding intersection 
distinct arcs may receive label 
describe connected subset directional backprojection circular list labels met boundary traced 
set lists called description directional backprojection 
singular directions divide connected subsets non simple boundaries smaller subsets simple boundaries touch isolated points describe subset 
extension contains disks 
size boundary union disks linear number disks 
boundary contains arcs 
furthermore boundary contains edges 
ray extension disk supports edge 
size description 
number spikes number landmark areas 
lemma description directional backprojection size 

computation directional backprojection assume set landmark areas precomputed 
computing landmark area includes identifying landmark disks constructing boundary identifying initial region disks fully contained area 
total size landmark areas boundaries 
simple divide conquer precomputation time log space 
compute erect rays tangent precomputed boundary pointing directions sigma 
construct boundary connected subset sweeping line perpendicular direction 
ray interrupted intersects extension disk ray 
sweep algorithm requires order guarantee robot motion projects positively direction lemma description directional backprojection computed time log space 

backchaining assume select directional backprojection problem goal contains initial region motion plan achieve goal initial position robot attain extension executing command switching perfect control mode reach goal leaving 
general step motion plan exist 
empty case ae planner safely return failure 
extension empty backprojection selected direction contain treat intermediate goal try produce motion plan achieve means compute extension proper superset backprojection direction select contains step motion plan achieve consider new intermediate goal 
process called directional backchaining 
backchaining process requires newly computed backprojection checked containment initial region contain new backprojection checked intersection landmark disks current goal extension 
computations incorporated sweep line algorithm constructs directional backprojection 
sweep remove intermediate goal disk consideration soon detect intersected edge directional backprojection computed 
simplification time complexity sweep line algorithm remains log 
la landmark area arbitrary point selected la called goal point 
construct tree called command tree la nodes disks la root tree disk containing disks related link tree overlap 
tree verifying properties adequate 
select point intersection disk root immediate parent tree 
command tree la execution time select command executed robot enters disk la command simply sequence points collected tracing path tree entered disk root goal point added sequence 
command tree constructed landmark area 
consider extension intermediate goal 
landmark area la ne gamma pick disk non zero intersection point intersection 
point called exit point la way construct command tree la disk containing exit point root 
execution time robot attains exit point generated plan prescribes immediately switch executing command gamma gamma 
straightforward computation command trees takes time total 

omnidirectional backchaining order transform directional backchaining effective planning algorithm need method choosing direction motion iteration backchaining process 
issue leads notion omnidirectional backprojection 

omnidirectional backprojection goal call omnidirectional backprojection goal disjoint union directional backprojections dimensional set theta ae theta denote set ob 
terminology erdmann defines backprojection goal union directional backprojections goal backprojection dimensional set 
region robot reach single move direction 
donald employs name disjoint union directional backprojections terminology counter intuitive 
name omnidirectional backprojection iteration planning process wish compute omnidirectional backprojection current goal order answer questions left touch right exit events ffl exists initial region contained directional backprojection 
ffl intermediate goal disks intersected directional backprojection ob 
answer question planning problem solved 
second question tells landmark disks inserted new extension backchaining iteration 
disks planner returns failure 
show answering questions requires computing finite number directional backprojections ob 
infinitely possible values answers questions change finite number directions called critical directions 
cp cyclic list critical directions counterclockwise order intervals mod 
interval nc direction answer questions computing directional backprojections fd nc nc cp call set backprojections discrete omnidirectional backprojection 
denote dob 

critical directions assume varies 
critical direction corresponds event caused motion edge spike current directional backprojection relative stationary landmark disks initial region disks 
assume disks general position events occur simultaneously 
kinds events considered events directional backprojection changes discontinuously possibly causing answer questions change 
events involve extension disks 
events answer question may change 
involve extension left exit right touch right vertex left vertex events initial region disks 
events answer second question may change 
involve extension intermediate goal landmark disks 
types events see fig 
disks extension disks left touch event occurs left edge reaches extension disk tangent 
right exit event occurs right edge leaves extension disk containing endpoint tangent 
types events see fig 
grey disk initial region disk left exit event occurs left edge leaves initial region disk tangent 
right touch event occurs right edge reaches initial region disk tangent 
left vertex event occurs endpoint left edge coincides entry intersection point initial position disk extension disk 
right vertex event occurs endpoint right edge coincides exit intersection point initial position disk extension disk 
types events see fig 
dark grey disk disk left touch event occurs left edge reaches intermediate goal disk tangent 
right exit event occurs right edge leaves intermediate goal disk tangent 
spike event occurs spike lies boundary intermediate goal disk 
lemma left touch right exit events left exit right touch events left vertex right vertex left touch right exit events spike events 
disk ffi intersects ffi define entry intersection point ffi ffi point enter ffi move boundary ffi point exit ffi exit intersection point 
spike right exit left touch events curve traced intersection right left ray circle rays tangent disk 
fourth degree curve 
algebraic expression intersection curve circle established 

planning method ae robot goal planner 
general planner computes extension 
extension empty planner returns failure 
associates command reach goal point landmark disk extension 
ae planner returns success 
assume ae 
planner computes discrete omnidirectional backprojection dob 
dob contains directional backprojection includes planner attaches command returns success 
landmark area la ae non zero intersection directional backprojection dob exit point arbitrarily selected la command attached point 
area la intersects directional backprojections intersection produce command 
union directional backprojections ob considered intermediate goal extension product computation 
construction 
directional backprojection possibly intersect landmark disk planner terminates failure 
landmark area ne contains disk exit point command attached 
disk landmark area planner associates command reach exit point ae planner returns success computes discrete omnidirectional backprojection 
backchaining process set landmark areas extensions successive goals increases monotonically 
iteration new landmark area extension planner proceeds new area planner terminates failure 
planner terminates success constructed extension containing discrete omnidirectional backprojection dob includes directional backprojection containing number iterations bounded number landmark areas 
iteration backchaining process requires computing directional backprojections 
computation directional backprojection takes time log see subsection 
planning algorithm time complexity log 

plan execution assume planner returns success computing omnidirectional backprojection ob contains generated plan regarded non ordered collection reaction rules 
rule motion command execution conditional entry robot region workspace initial region landmark disk exit point rule associated command ae 
rule associated landmark disk command attain exit point goal point landmark area disk belongs 
rule attached exit point landmark area la contained ne gamma command la non empty region containing exit point 
plan executed follows robot executes command associated initial region 
command guarantees robot landmark disk command attached 
robot executes command attains goal point exit point 
attains goal point execution plan terminated 
attains exit point command attached point executed 
command leads robot new landmark disk 
exit point selected planner landmark area area intersected directional backprojection time 
planner changed command attached point 
robot executes command exit point landmark area la landmark disk la possibly termination set command 
ae ae ae robot terminate motion landmark area twice executing plan 
guaranteed reach executing alternate sequence commands length smaller equal 
planner returns success contains generated plan essentially include rule associated robot landmark area having command attached 
planner returns failure delivers plan set reaction rules associated landmark areas goal achieved reliably 
plan incomplete command attached initial region 
plan useful 
example robot controller may decide execute random motion robot enters landmark area command attached see 

completeness optimality construction command plan guaranteed reach landmark disk termination set 
robot terminate landmark area twice see previous subsection execution plan leads robot eventually goal 
plans generated planner correct 
planner sound 
say plan steps contains exactly commands 
extension goal maximal subset workspace robot reliably achieve zero steps 
set dob union extensions directional backprojections dob maximal subset landmark disks robot reliably achieve step 
maximal set landmark disks robot reliably achieve steps 
largest set landmark disks planner reliably achieve computed backchaining iterations 
definition events directional backprojection set contains initial region planner find iteration 
reliably achieved planner guaranteed terminate success 
reliably achieved backchaining terminates failure iterations 
planner complete 
motion plan optimal maximal number steps required execution minimal correct motion plans 
maximal number steps plan produced algorithm equal number backchaining iterations extension backprojection contains initial region 
definition omnidirectional backprojections number iterations equal minimal number steps required achieve goal worst case 
algorithm generates optimal plans 
furthermore execution sequence steps subset motion plan may attain problem goal optimal 
theorem planning algorithm complete generates optimal plans 

computation improvements iteration backchaining process algorithm identifies critical directions motion computes directional backprojection current goal direction 
noticing description directional backprojection undergoes limited changes consecutive directions avoid full recomputation backprojection 
turn idea algorithm necessary track variations directional backprojection description direction varies turns description changes finite number directions caused events events discussed 
event left touch right exit events seen directional backprojection left touch right exit catastrophic left touch right exit events description undergoes constant change computed constant logarithmic time see 
left touch right exit events call catastrophic events yield changes illustrated fig 

planner sweep algorithm compute discrete omnidirectional backprojection 
algorithm scans potential critical directions counterclockwise order starting non critical directions computes directional backprojection scratch 
sweep stops critical direction 
non catastrophic events simply updates description directional backprojection constant logarithmic time 
left touch right exit recomputes directional backprojection scratch 
event uses current backprojection description determine backprojection contains done straightforward way time log 
event intersected intermediate goal disk identified constant time 
additional events description directional backprojection changes see fig 
left exit event occurs left edge leaves extension disk containing endpoint tangent 
right touch event occurs right edge reaches extension disk tangent 
left birth event occurs new left edge emerges intersection extension disks 
right death event occurs right edge disappears intersection extension disks 
left vertex event occurs endpoint left edge crosses intersection extension disks 
left exit right touch left birth right death left vertex spike spike right vertex additional events right vertex event occurs right edge crosses intersection extension disks 
spike event occurs spike reaches extension disk 
spike event occurs spike leaves extension disk 
lemma left birth right death events right touch right exit left vertex right vertex events spike spike events 
easily verify directional backprojection undergoes constant change events 
consider example right touch event see fig 

right ray extension disk collinear right ray extension disk description directional backprojection modified inserting names sequence immediately name scanned 
change takes constant time compute non catastrophic events spike ones 
spike event requires label arc touched spike identified 
processing takes log time 
time complexity sweep algorithm sum time required schedule events identify sort potential critical directions time process 
events total 
scheduling takes time log 
processing non catastrophic events takes time log spike events dominating cost 
processing catastrophic events events involve recomputing directional backprojection description events takes gamma 
updating directional backprojection right touch event time log 
processing events takes time 
iteration backchaining process takes time log 
theorem planning algorithm takes time log space 
simple improvements possible change asymptotic bound 
example shown considering additional events process event constant time reducing time processing events log 
show simple modification description directional backprojection allows spike spike events eliminated reducing cost sorting processing non catastrophic events log 
concerning spike events compute directions may occur advance sort reuse result backchaining iteration 
reduce total time sorting processing spike events 
log time complexity planner dominated processing catastrophic events 

experimental results implemented planning algorithm navigation techniques robot simulator decstation 
implemented planner incorporates significant improvements computation omnidirectional backprojection discard intermediate goal disk soon disk intersects directional backprojection 
determines intervals directions directional backprojection intersects computes intersection directional backprojection midpoint interval keeps intersection having biggest area 
intersection called exit region example radian exit regions unique disk may generated landmark area 
disk landmark area planner associates command leading exit region constructed area 
exit regions available selects region allows generation command containing smallest number points 
purpose modification allow errors control sensing landmark areas see subsection 
second modification avoids planning commands long sequences disks landmark area necessary 
heuristic take radii landmark disks account 
examples plans generated implemented planner simulated execution 
figures instance see fig 
white disks landmark disks intersect omnidirectional backprojections computed planner includes initial region backprojection exists 
grey disks landmark disks command attached 
examples single initial region disk designated single goal region disk designated robot enters new landmark area part termination set command currently executed disks necessarily white shifts executing command leading point exit point selected exit region example radian soon enters exit region containing exit point abandons command shifts executing corresponding command attached exit point 
exit region constructed white disk region shown figures covers disk direction command attached selected exit point 
termination sets commands shown inferred drawings 
fig 
display examples workspace containing landmark disks various size initial goal regions increasing directional uncertainty 
examples show uncertainty grows planner returns sophisticated plans attempts reduce uncertainty leading robot additional landmark disks 
fig 
set radian 
planner returned success iterations seconds computation time 
directional uncertainty small plan directly aimed goal 
simulated execution produces path traversing single landmark disk designated entering goal extension 
disk marked path termination set command executed exit point robot traverses shifting motion command 
fig 
set radian 
took iterations planner seconds example radian computation initial region included backprojection 
process planner attached motion commands landmark disks 
simulated execution plan produced path uses successive landmark areas designated entering goal extension 
area traversed path part termination set command executed fig 
set radian 
plan generated iterations seconds computation 
quick comparison commanded directions motion attached white landmark disks shows plan quite different plan fig 

executed path traverses landmark areas designated notice navigation system longer reliable directly achieve way reduce uncertainty 

dealing obstacles introduce forbidden circular regions obstacle disks workspace 
assume simplicity disks null intersection landmark initial region disks touch 
retracting assumption presents particular difficulty increases number event types considered 
right ray left ray right left rays obstacle disk directional backprojection presence obstacle disks 
directional backprojection description consider obstacle disk commanded direction motion define right ray resp left ray half line tangent drawn tangency point direction resp gamma obstacle right hand side resp left hand side shown fig 

directional backprojection goal presence obstacle disks region bounded arcs edges 
arc subset boundary extension obstacle disk 
edge line segment supported right left ray extension obstacle disk 
edge intersects extension disk edge terminated included backprojection 
edge intersects obstacle disk ray interrupted excluded backprojection 
fig 
shows example directional backprojection 
extension disks shown white obstacle disks shown black 
notice backprojection may contain holes may contain components backprojection 
connected subsets may zero spikes 
total number edges arcs backprojection boundary 
reach right birth exclude left vertex spike birth left death spike death right vertex spike spike events caused obstacle disks construct description directional backprojection way obstacles 
simply give name obstacle disk label various edges arcs backprojection boundary arise presence obstacles 
types labels handle computation description takes time log 
lemma description directional backprojection presence obstacles computed time log space 

critical directions due obstacles commanded direction motion varies obstacle disks cause description directional backprojection set landmark disks change critical directions corresponding events see fig 
extension disks shown white obstacle disks shown black left touch event occurs left edge reaches obstacle disk tangent 
right exit event occurs right edge leaves obstacle disk tangent 
spike birth event occurs spike emerges left edge terminating obstacle disk reaches point right edge arises disk 
spike death event occurs spike vanishes left edge pushed right edge shortens zero length obstacle disk 
spike event occurs spike enters obstacle disk 
spike event occurs spike exits obstacle disk 
left vertex event occurs endpoint left edge reaches intersection obstacle disks 
right vertex event occurs endpoint right edge reaches intersection obstacle disks 
right birth event occurs right edge emerges intersection obstacle disks 
left death event occurs left edge disappears intersection obstacle disks 
lemma events types right birth left death events types left touch right touch spike birth spike death right vertex events types spike spike 

computation directional backprojection undergoes small change events 
change computed constant time events 
discrete omnidirectional backprojection presence obstacle disks requires log compute time complexity planning algorithm remains log 
space complexity remains 
theorem planning algorithm presence obstacle disks takes time log space 

experimental results fig 
displays example plan generated planner sample run plan 
obstacle disks black 
landmark disks white grey depending reaction rule attached 
initial region disk goal region disk example set radian 
generation plan took iterations planner minutes computation 
fig 
shows example landmark obstacle disks obstacles disks removed set radian 
example solved iterations displayed path steps requiring seconds computation 
fig 
shows third example different workspace containing landmark disks forming landmark areas obstacle disks 
solved iterations displayed path steps minutes computation 
example obstacles radian 
discussion extensions section discuss non implemented extensions planner 

landmark obstacle geometry algorithm described landmark obstacle areas unions circular disks 
initially chose model fields influence landmarks disks mind sorts beacons radio infra red beacons guide robot 
uniformity choice obstacles 
natural landmarks entail circular fields influence 
approximate landmark obstacle area collection overlapping disks number disks grows quickly precision approximation yielding longer computation 
algorithm easily adapted deal landmark obstacle areas described generalized polygonal regions bounded straight circular edges 
extension commanded direction motion define right left rays landmark obstacle area 
area convex may right left rays 
origin right left ray circular contour varies continuously commanded direction motion rotates origin right left ray polygonal contour remains example obstacles radian anchored fixed vertex critical directions jumps vertex contour 
directions parallel straight edges generalized polygonal contours landmark obstacle areas additional critical directions treated planner 
extension landmark area obstacle area touch may erect ray origin intersection point contours 
origin ray remains stationary subrange orientations curves traced spikes complicated pure circular case degrees remain greater 
small adaptations carefully planning method extends case landmark obstacle areas bounded straight edges circular arcs may touch 
workspace contains landmark areas bounded edges arcs obstacle areas bounded edges arcs time complexity planner remains log 
representing landmark obstacle areas generalized polygons realistic model applications 
particular robot omnidirectional circular robot moving polygonal obstacles shrinking robot centerpoint growing obstacles robot radius yields generalized polygonal regions 
similar way algorithm extended allow compliant motions obstacle edges 
additional critical directions considered planner complexity bounds remain unchanged 
allowing compliance significantly enlarges set problems admit correct plans 

uncertainty landmark areas realistic assumption problem definition section control position sensing perfect landmark areas sensing null outside area 
argue assumption reasonable 
show relaxed extent 
typical mobile robot uses techniques continuously estimate position environmental sensing 
environmental sensing provides pertinent information characteristic features workspace landmarks visible sensors 
robot knows position accuracy 
features visible robot relies dead reckoning yields cumulative errors model directional uncertainty 
assumption sensing outside landmark areas null conservative prevent robot navigation system available sensing information execution time better determine robot current position 
worst case may lead planner return failure reliable paths exist practice 
contrary assumption control perfect landmark areas choose safe features create landmark disks reasonable 
extent workspaces engineered include features 
landmark areas sharp boundaries obtained introducing artificial landmarks thresholding estimate sensing uncertainty 
example notion sensory uncertainty field suf introduced 
possible point configuration space suf estimates range possible errors sensed configuration navigation system compute matching sensory data prior model workspace robot suf computed planning time model robot sensing system 
interestingly notice perfect control sensing landmark areas strictly needed 
robot enters landmark area sufficient reaches exit region non zero measure prior executing command 
landmark area intersects goal exit region intersection goal 
example maximal sensing error allowed landmark area half radius largest disk fully contained exit region 
planner assumed perfect sensing landmark areas create areas engineering workspace way sensors just provide information needed plan see similar idea 
maximal errors landmark areas depend plan computed plan generated assuming errors 

types landmarks define realistic types landmarks require simple adaptations planning algorithm 
example type landmark area region containing subregion robot enters knows reliably navigate enters recognizes achievement definition require perfect control perfect position sensing 
example consider wall corner wall 
wall induces area robot proximity sensor sense wall assume confused object 
robot moves parallel proximity sensing corner eventually reach small region sense corner 
landmark area treated algorithm follows order directional backprojection intersect landmark area fully contain yielding events similar events containment initial region 
case region inserted goal extension backchaining iteration 
particular case landmark example characteristic feature defines area sensed 
feature sufficient allow robot determine location navigate subregion simply set information planner robot enters know 

described complete polynomial planning algorithm mobile robot navigation presence uncertainty 
algorithm addresses class problems landmarks create regions configuration space control position sensing perfect 
outside regions sensing null control relies dead reckoning imperfect directional errors bounded 
class problems simplification real mobile robot planning problems means oversimplified 
computer program embedding planning algorithm implemented navigation techniques robot simulator 
program run different examples 
planner reasonably fast 
form assumes landmark obstacle areas described unions disks 
extending planner accept general geometry generalized polygonal areas straightforward 
interesting extensions uncertainty landmark areas new types landmark areas possible 
relative time efficiency planner suggests complexity bounds tight 
far algorithms plan motion strategies uncertainty exponential size input problem unsound incomplete 
algorithms may interesting theoretical point view computational complexity lack reliability prevent applied real world problems 
shows possible identify restricted realistic subclass planning problems solved polynomial time 
subclass obtained assumptions satisfaction may require prior engineering robot workspace 
case implies creation adequate landmarks advantage natural features workspace introducing artificial beacons specific sensors 
call type simplification engineering planning tractability 
engineering robot workspace cost minimize 
research aim finding general classes problems solved current planner requiring engineering solvable polynomial time 
investigate inverse problem planning method description family tasks set possible initial goal regions minimally engineer workspace 
instance minimal number landmarks place workspace place possible problem admits correct plan 
ayache artificial vision mobile robots stereo vision multisensory perception mit press cambridge ma 
briggs efficient algorithm step planar compliant motion planning uncertainty proc 
th annual acm symp 
computational geometry germany pp 

buckley planning teaching compliant motion strategies ph dissertation department electrical engineering computer science mit cambridge ma 
canny reif new lower bound techniques robot motion planning problems th ieee symposium foundations computer science los angeles ca pp 

canny computability fine motion plans proc 
ieee int 
conf 
robotics automation scottsdale az pp 

christiansen mason mitchell learning reliable manipulation strategies initial physical models proc 
ieee int 
conf 
robotics automation cincinnati oh pp 

crowley world modeling position estimation mobile robot ultrasonic ranging proc 
ieee int 
conf 
robotics automation scottsdale az pp 

donald geometric approach error detection recovery robot motion planning uncertainty artificial intelligence pp 

donald complexity planar compliant motion planning uncertainty algorithmica pp 

donald jennings sensor interpretation task directed planning perceptual equivalence classes proc 
ieee int 
conf 
robotics automation sacramento ca pp 

latombe approach automatic robot programming inductive learning int 
robotics research pp 

erdmann motion planning uncertainty tech 
rep ai lab mit cambridge ma 
erdmann task level planning action sensor design tech 
rep cmu cs dept computer science carnegie mellon univ pittsburgh pa february 
fox hutchinson exploiting visual constraints synthesis motion plans tech 
rep uiuc bi ai rcv university illinois urbana champaign october 
friedman computational aspects compliant motion planning ph dissertation tech 
rep 
stan cs dept computer science stanford university stanford ca 
kak dealing uncertainty cad assembly motion planning proc 
th nat 
conf 
artificial intelligence anaheim ca july pp 

hutchinson exploiting visual constraints robot motion planning proc 
ieee int 
conf 
robotics automation sacramento ca pp 

latombe robot motion planning kluwer academic publishers boston ma 
latombe shekhar robot motion planning uncertainty control sensing artificial intelligence pp 

th planning sensor motions part mating geometric reasoning techniques proc 
european conf 
artificial intelligence brighton uk 
latombe landmark robot navigation tech 
rep dept computer science stanford ca 
leonard durrant whyte mobile robot localization tracking geometric beacons ieee tr 
robotics automation pp 

levitt lawton nelson qualitative navigation image understanding workshop los angeles ca pp 

lozano erez design mechanical assembly system tech 
rep ai tr artificial intelligence laboratory mit 
lozano erez mason taylor automatic synthesis fine motion strategies robots int 
robotics research pp 

mahadevan connell automatic programming behavior robots reinforcement learning research rep ibm watson research center yorktown heights ny 
mason automatic planning fine motions correctness completeness proc 
ieee int 
conf 
robotics automation atlanta ga pp 

natarajan complexity fine motion planning int 
robotics research pp 

preparata shamos computational geometry springer verlag new york 
schoppers representation automatic synthesis reaction plans ph dissertation dept computer science university illinois urbana champaign urbana il 
takeda latombe sensory uncertainty field mobile robot navigation proc 
ieee int 
conf 
robotics automation nice france pp 

taylor synthesis manipulator control programs task level specifications ph dissertation department computer science stanford university 
zhang faugeras world model builder mobile robot int 
robotics research pp 

