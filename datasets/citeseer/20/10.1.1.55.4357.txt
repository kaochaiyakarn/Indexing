probabilistic logic programming bayesian networks ngo peter haddawy department electrical engineering computer science university wisconsin milwaukee milwaukee wi cs edu probabilistic logic programming framework allows representation conditional probabilities 
conditional probabilities commonly method representing uncertainty probabilistic expert systems largely neglected quantitative logic programming 
define fixpoint theory declarative semantics proof procedure new class probabilistic logic programs 
compared approaches quantitative logic programming provide true probabilistic framework potential applications probabilistic expert systems decision support systems 
discuss relationship programs bayesian networks moving unification major approaches automated reasoning 
appear proceedings asian computing science conference thailand december 
partially supported nsf iri 
reasoning uncertainty topic great importance areas computer science 
approaches reasoning uncertainty probability theory strongest theoretical foundations 
quest extend logic programming represent reason uncertain knowledge attempts add numeric representations uncertainty logic programming languages 
attempts probability ng subrahmanian 
framework probabilistic logic program annotated horn program 
typical example clause probabilistic logic program taken path says probability type connection lies interval reliability path 
example illustrates framework employ conditional probability common way quantify degrees influence probabilistic reasoning probabilistic expert systems 
authors allow clauses interpreted conditional probability statements consider consistency programs provide query answering procedure 
bayesian networks popular method representing reasoning probabilistic information 
extended form bayesian networks influence diagrams widely decision analysis 
strengths causal relationships bayesian networks influence diagrams specified conditional probabilities 
prominent feature bayesian networks allow computation posterior probabilities performance systematic sensitivity analysis important exact probability values hard obtain 
bayesian networks main representation reasoning device probabilistic diagnostic systems expert systems 
bayesian networks originally static graphical models problem domain relevant random variables identified bayesian network representing relationships random variables sketched probability values assessed 
inference performed entire domain model portion relevant inference problem 
approach known knowledge model construction attempted address limitation representing probabilistic information knowledge base schematic variables indexing schemes constructing network model tailored specific problem 
constructed network subset domain model represented collection sentences knowledge base 
approaches area research focused practical model construction algorithms neglecting formal aspects problem focused formal aspects knowledge base representation language presenting practical algorithms constructing networks :10.1.1.50.603
propose theoretical framework procedure constructing bayesian networks set conditional probabilistic sentences 
purpose fold 
propose extension logic programming allows representation conditional probabilities write probabilistic expert systems 
second investigate relationship probabilistic logic programs bayesian networks 
poole shows represent discrete bayesian network probabilistic horn abduction framework address sides relationship :10.1.1.50.603
show bayesian networks represented easily intuitively probabilistic logic programs 
second method answering queries probabilistic logic programs constructing bayesian networks probabilities networks 
provide declarative semantics probabilistic logic programs prove constructed bayesian networks faithfully reflect declarative semantics 
syntax denote probability distribution possible subscripts denote atoms names leading capital characters denote domain variables names leading small characters denote constants possible subscripts denote predicates 
order language containing infinitely variable symbols finitely constant function predicate symbols 
hb denote herbrand base language infinite 
convenience comma logical semicolons seperate sentences list sentences 
predicate represents class similar random variables 
probability models consider random variable take values finite set possible realization world variable value 
example variable neighborhood person value bad average possible realization world values true false 
capture property requiring predicate attribute representing value corresponding random variable 
convention take attribute 
example variable neighborhood person represented position predicate neighborhood position indicates person second indicates type person neighborhood bad average 
associate predicate value integrity constraint statement 
definition value integrity constraint statement associated ary predicate consists order sentences xm gamma xm gamma xm gamma integers different constants called value constants denoting possible values random variables corresponding xm gamma different variable names sentence universally quantified entire sentence 
convenience denote set sentences 
identity relation hb assume theories include clark equality theory 
denote set fv atom predicate equivalent 
ground atom gamma val denotes value obj denotes random variable corresponding gamma 
require value integrity constraint predicate 
set integrity constraints denoted ic 
example value integrity constraint predicate neighborhood exclusive neighborhood bad average neighborhood bad neighborhood average neighborhood bad neighborhood neighborhood average neighborhood neighborhood bad average person say named john neighborhood john means random variable neighborhood john indicated language obj neighborhood john indicated language val neighborhood john 
possible world atoms true neighborhood john bad neighborhood john average neighborhood john 
neighborhood neighborhood john bad set average 
kinds constants 
value constants declared exclusive clauses arguments predicates 
non value constants predicate arguments 
definition ground atom 
define ext extension set fp gamma jv example burglary example ext neighborhood john bad john bad neighborhood john average neighborhood john atom 
define ground set ground instances set ground atoms fa ng called coherent exist obj obj val val 
definition probabilistic sentence form ja ff ff atoms 
sentence free variables free variable universally quantified entire scope 
meaning sentence jb ff ground instance conditional probability obj achieving value val obj having value val ff 
sentence ja ff 
ante antecedent denote conjunction cons consequent denote ante set conjuncts 
alternative representation probability sentence ja ff ff ff value associated entire sentence 
stick form definition mention alternative representation highlight resemblance quantitative logic program clauses 
notice predicates value attribute integrity constraints explicitly represent negative facts 
ic neighborhood bad average burglary alarm tornado pb neighborhood john average neighborhood john bad neighborhood john burglary average burglary burglary bad alarm alarm alarm alarm basic probabilistic logic program 
basic probabilistic logic programs definition basic probabilistic logic program consists parts probabilistic base pb finite set probabilistic sentences set ic value integrity constraints predicates language 
consider motivating example referred remainder 
burglary alarm triggered burglary tornado 
likelihood burglary influenced type neighborhood resides 
shows possible basic probabilistic logic program representing example 
predicates neighborhood burglary alarm tornado 
interpretation statements ic similar neighborhood bad average shown previous example 
acyclic probabilistic bases major results achieved class programs characterized acyclicity 
probabilistic base pb called acyclic mapping ord pb set ground instances atoms set natural numbers ground instance ja ff sentence pb ord pb ord pb 
ground atoms ext ord pb ord pb expressiveness acyclic logic programs demonstrated 
expect probabilistic logic programs acyclic probabilistic bases prove equal importance 
best knowledge knowledge bases conditional containing loops considered problematic considered literature acyclic 
fixpoint semantics relevant atom set section consider implications structure basic probabilistic logic programs ignoring probability values associated sentences 
view probabilistic sentence ja ff horn clause purpose determine set relevant atoms implied program 
normal logic programs fixpoint theory characterizes semantics program minimal set literals fixpoint transformation constructed syntactic structure 
set consists ground atoms considered true negations false ground atoms considered false negations true 
usually atoms truth values undefined 
similarly basic probabilistic logic program obtain partial probabilistic information ground atoms 
example consider basic program ic true false bad average true false true false pb true jp true jp false true js true true jr true bayes rule derive true false jp true true jp false false 
know partial information bad average bad average gamma 
know probabilistic information true false true false independently 
definition basic program fixpoint operator defined mapping hb hb hb smallest set hb satisfying properties ground instance sentence ante subset cons ext 
transformation produces reflexive subsets hb 
subsets important know partial probabilistic information atom know partial probabilistic information atom ext 
subset hb reflexive subset ext consider space reflexive subsets hb denoted 
proposition complete lattice normal relation 
monotonic 
define simple iterative process applying definition range set countable ordinals 
upward sequences fi defined recursively fg 
limit ordinal 


example continuing example upward sequence fi fg fp true false fq bad average set ground atoms partial probability information obtained program 
upward sequence fi monotonic sequence elements 
follows classical results tarski upward sequence converges fixpoint 
theorem upward sequence fi converges lfp fixpoint 
furthermore function symbols language convergence occurs finite number steps 
call lfp relevant set atoms ras 
ras plays similar role founded partial models 
ras formalize concept possible worlds implied program 
countable ordinal 
macro world logic program maximal coherent subset possible world maximal coherent subset ras 
pw denote set possible worlds 
see exist possible worlds program example continuing previous example macro worlds fp true fp false possible worlds macro worlds fp true fp true average fp true bad fp false fp false average fp false bad possible world ic derives ext ic represent coherent assignment values relevant random variables 
combining rules probabilistic logic programs basic probabilistic logic program typically complete specification probability distribution random variables represented atoms 
type information may lacking specification probability variable combinations values variables influence 
real world applications type information difficult obtain 
example diseases symptom may know sjd sjd sjd 
combining rules generalized noisy commonly construct combined influences 
define combining rule algorithm takes input possibly infinite set ground probabilistic sentences consequent fp ja ff may infinite fa coherent produces output ja ff different finite integer 
addition standard purpose combining rules kind default rule augment missing causes cause atom antecedent 
case antecedents output contain atoms input sentences 
set output causes proper subset set input causes case combining rule performing filtering summarizing task 
example assume diseases symptom represented predicates respectively 
assume values normal abnormal 
program contain sentences abnormal jd abnormal abnormal jd normal abnormal jd normal 
provide combining rules construct third sentences new sentence form abnormal jd abnormal normal ff second third new sentence form abnormal jd normal normal fi ff fi numbers determined combining rule 
combining rules may act default rules augmenting second sentences achieve abnormal jd abnormal abnormal ff abnormal jd normal abnormal fi values ff fi definition probabilistic logic program triple hic pb cri hic basic logic program cr set combining rules 
assume predicate exists corresponding combining rule cr 
combining rules usually depend meaning program 
discuss combining rules interaction effects actions persistence rules planning problems 
combined relevant probabilistic base addition combining rules real structure program changes 
section consider effect combining rules relationships prescribed program 
definition program countable ordinal 
set relevant probabilistic sentences rpb defined set ground instances probabilistic sentence pb atoms rpb contains basic relationships atoms case multiple influences represented multiple sentences need combining rules construct combined probabilistic influence 
definition program countable ordinal 
combined rpb crpb constructed applying appropriate combining rules maximal set sentences fs ji ig infinite index set rpb consequent ante coherent 
combined rpb play similar role completed logic programs 
assume sentence crpb describes random variables directly influence random variable consequent 
define syntactic property crpb characterizes completeness probability specification 
definition crpb completely quantified ground atoms exists sentence crpb consequent ground sentences crpb property form ja ff val exists ground sentence crpb constructed replacing val ff ff definition says ground atom complete specification probability possible values val possible combinations values atoms directly influence think obj representing random variable bayesian network model definition implies construct link matrix random variable model 
call rpb relevant probabilistic base rpb call crpb combined relevant probabilistic base crpb 
example consider burglary example assume language contains non value constant john 
ras neighborhood john bad neighborhood john average neighborhood john burglary john burglary john alarm john true alarm john false tornado john tornado john rpb fpr neighborhood john average pr neighborhood john bad pr neighborhood john pr burglary john john average pr burglary john john pr burglary john john bad pr alarm john john pr alarm john john pr alarm john john pr alarm john john 
crpb sentences rpb alarm consequent transformed sentences specifying probability alarm conditioned burglary tornado 
sentences rpb remain crpb 
conjunction acyclicity property probabilistic bases interested class combining rules capable transferring acyclicity property pb crpb 
program say combining rule cr self contained generated sentence aja ff input set fp aja ff may infinite satisfies additional property fa ext ffb gj jb ff self reasonable assumption combining rule allow generation new atoms antecedent related atom extension consequent 
order generate sentence consequent self contained combining rule may need collect sentences atom ext consequent 
example combining rule example self contained sentence abnormal jd abnormal abnormal ff constructed set sentences contain atom abnormal 
kind diagnosis problem generalized noisy rule assume disease abnormal state probability symptom abnormal means abnormal jd abnormal 
order self contained combining rules need write explicitly sentences 
model theory semantics probabilistic program characterized probability weights assigned ground atoms 
annotated approach widely related 
space limitation show assign weights ground atoms 
details annotated models full 
probabilistic independence assumption addition quantities program assume probabilistic independence relationships specified structure probabilistic sentences 
probabilistic independence assumptions probability model construction main device construct probability distribution local conditional probabilities :10.1.1.50.603
poole assumes independence set consistent atoms formulate independence assumption framework structure sentences crpb :10.1.1.50.603
find approach natural structure crpb tends reflect causal structure domain independencies naturally thought causally 
definition set ground probabilistic sentences ground atoms 
say influenced exists sentence atom ext atom ext cons ante exists ground atom influenced influenced assumption assume aja ff crpb ground atoms ext influenced crpb probabilistically independent example continuing burglary example alarm john probabilistically independent neighborhood john neighborhood john bad burglary john tornado john 
definition consistent crpb completely quantified crpb consistent atom influenced crpb ja ff crpb fff jp ja ff crpb obj obj 
possible world semantics section allow language contain function symbols 
general infinitely possible worlds infinitely macro worlds 
approach similar poole assigning weights certain subsets worlds :10.1.1.50.603
definition rank atom ground atom ras 
define rank rank recursively influenced crpb atom rank rank jp aj 
example burglary example rank tornado rank neighborhood rank burglary rank alarm 
program crpb atom assigned finite rank crpb fp true jp true true jp true 
assign finite rank true rank true rank true see crpb cycles rank defined mapping 
lemma useful working acyclic probabilistic bases 
lemma program acyclic probabilistic base 
combining rules self contained rank function defined 
defining sample space consider individual possible world sets possible worlds characterized formulae specific forms 
definition program determine set possible worlds pw 
assume rank function defined 
ground atom ras 
denote set possible worlds containing 
define sample space smallest set consisting pw ras rank finite pw gamma consider probability functions sample space pr probability function sample space define atoms ras finite ranks 
take sentence form ja ff shorthand ff theta 
say pr satisfies sentence ja ff ff thetap satisfies crpb satisfies sentence crpb 
definition probability distribution induced program probability distribution satisfying crpb independence assumption implied crpb 
example consider program ic true false bad average pb true false jp true jp false true jp true false jp true true jp false false jp false cr generalized gamma noisy gamma org imagine timed predicate attribute indicating time 
sentences represent persistence rules 
true false true theta theta theorem program crpb completely quantified consistent exists induced probability distribution 
theorem allows handle probability conjunctions disjunctions framework 
theorem program probability function satisfying crpb assigns weight formula form ij finite integers rank ij finite fixpoint theory revisited extend fixpoint theory include information program 
constructed previous section transformation upward sequence fi associate sample space probability distribution 
definition program determine set possible worlds pw 
assume rank function defined finite ordinal 
define sample space smallest set consisting pw rank pw gamma proposition finite ordinals define probability functions sample space induced program replacing ras crpb crpb definitions previous section 
call corresponding induced probability function theorem finite ordinals probability distribution induced ras 
upward sequence fi converges lfp 
converges converges 
loose definition convergence finite order formula ground finite rank atoms exists integer set possible worlds satisfying element 
proof theory section define proof theory derive probability ground atom program 
possible subscripts denote goal atom 
process similar sld proof procedure real difference handling combining rules 
call proof procedure probabilistic sld sld 
query sentence form atoms 
query request find ground instances determined program return probability values 
definition suppose 
query called sentence ja ff program variables standardized apart 
selected atom assume general unifier resolvent mgu sentence gamma 
sld derivation initial query program sequence hq hq renamed version sentence resolvent selected atom sld refutation query step sld derivation initial query resolvent empty query 
combined substitution called computed answer substitution 
sld refutation tree query set sld refutations initial query need concept sld refutation tree combining rules construct sentences atom consequent crpb sentences consequent matching need collected 
furthermore need instantiate sentences ground applying combining rules 
example sentence true jr true combining rule needs consider ground sentences true jr true true jr true constants language 
definition ground sld refutation tree query set ground sld refutations initial query ground sld refutation obtained refutation applying associated computed answer substitution formula derivation instantiating possible ground instance 
query 
ground sld refutation tree contains necessary ground probabilistic sentences construct combined sentences crpb consequents ground instances selected atoms original refutation trees 
apply combining rules 
definition query 
combined supporting set set ground probabilistic sentences constructed ground sld refutation tree procedure ground selected atom ground instance appearing tree collect ground sentences consequent apply appropriate combining rule construct combined sentence 
combining rules may generate new atoms occur ground refutation tree example 
need apply process new atoms 
definition query 
augmented combined supporting set constructed augmenting combined supporting set recursive way starting combined supporting set atom appearing set sentence set consequent augment augmented combined supporting set query 
example continuing example query true 
sld refutation tree set sld refutations hp true true jp true true gi hp true true jp true true gi hp true true true fgi hp true true jp true true gi hp true true jp false true gi hp false false false fgi hp true true jp false true gi hp false false jp false false gi hp false false false fgi hp true true jp false true gi hp false false jp true false gi hp true true true fgi gg ground sld refutation tree combined supporting set augmented supporting set equal set 
proposition program atom construct augmented combined supporting set ps query 
rank function defined rank atom ps determined simple recursive procedure ff ps rank rank gj ff psg 
probability ground atom computed program calculated augmented combined supporting set ps query 
recursively ff ps return ff fg coherent atom highest rank fff theta gamma am ja am ff psg 
example continuing example query true 
true true true jp true thetap true true jp false theta false theta theta theorem program defined rank ground atom rank finite crpb completely quantified consistent probability computed program equal probability function induced logic program 
sld procedure return value equal 
condition rank finite assured acyclicity property probabilistic logic programs 
soundness completeness sld acyclic programs 
theorem program acyclic probabilistic base self contained combining rules 
crpb completely quantified consistent sld procedure sound complete wrt finite rank ground atoms 
seen recursive definition sld easily extended evaluate probability finite conjunction atoms 
fact evaluate finite formula form ij ij ij atoms finite rank simple extension sld 
local maximum entropy negation failure probabilistic logic programs negation failure default rule sldnf proof procedure 
allows conclude ground atom truth value false attempts prove fail 
probabilistic logic programs default rules desirable shorten programs facilitate reasoning incompletely specified programs 
reasons define probabilistic analogue negation failure 
example consider example 
obvious able infer false 
furthermore know average jp true bad jp true want default rule temporarily assign probability value bad jp true average jp true 
popular principle assigning missing probability values maximum entropy principle 
propose local maximum entropy rule form negation failure probabilistic logic programs 
definition program corresponding crpb 
atom ras fv local maximum entropy rule lme applied situation aja ff sentence crpb set fval jp ja ff crpb obj obj elements fi sum ff sentences augment crpb set sentences fp ja gamma fi gamma ja ext val example continuing previous example lme rule assign false average jp true bad jp true incorporate lme sld proof procedure call new procedure generalizing concept derivation dependent concepts 
details full 
bayesian networks construction baysian networks bayesian networks finite directed acyclic graphs 
node bayesian network represents random variable assigned values fixed finite set 
link represents relationship causal relevance random variables ends 
usually link random variable random variable says causes associated node link matrix contains conditional probabilities random variable receiving specific values combination values parents 
bayesian network formalism efficient approach representing probabilistic structures calculating posterior probabilities random variables set evidence 
query procedure find probability value say random variable posterior probability observing set evidence 
definition set evidence set atoms ground coherent 
constructing program portion bayesian network related query 
constructed network available propogation procedures update probabilities account set evidence 
notice framework atom represents fact random variable denoted obj receiving value val set possible values random variable 
definition program set evidence complete ground query query form atom argument variable variable meaning query find posterior probability distribution obj 
fv answer query vector ff ff ff ff ff ff posterior probability obj receiving value complete query query form argument variable arguments may contain variables 
meaning query find ground instances complete ground query 
answer return answers 
procedure build network supports evidence net fg number elements temp build net th element net extend network support ground instances query build net net update net output posterior probabilities output probability values node obj 
query processing procedure 
bayesian network construction procedure space limitation drop details full 
section query answering algorithm procedure answering complete queries 
consider self contained combining rules 
assumption allows omit augmentation step sld proof procedure 
assume program set evidence complete query 
procedure main steps build supporting bayesian network fag ground ras backward chaining process similar prolog engine calculate posterior probability set evidence available procedure 
procedure complex sldnf needs collect relevant sentences combining rules 
pseudo code procedure shown 
simply calls function builds supporting network atom atoms successive arguments 
loop constructs supporting network set evidence final build net call augments constructed network supporting network ground instances query 
update probability propogation algorithm bayesian networks 
build net receives input atom supporting network needs explored 
updates net partially built 
returning value function set substitutions input atom get corresponding ground instances resulting network 
soundness completeness procedure procedure address problem termination 
expect techniques assuring termination prolog programs applied procedure 
theorem soundness program crpb completely quantified procedure sound wrt complete queries 
theorem soundness completeness program allowed acyclic pb 
crpb completely quantified procedure sound complete wrt complete ground queries ground finite set evidence 
related related temporal variant logic 
describe application framework representing probabilistic temporal processes projecting probabilistic plans 
poole expresses intention similar mapping logical specifications knowledge bayesian network representations :10.1.1.50.603
provides mapping probabilistic horn abduction theory knowledge represented horn clauses independence assumption bayesian networks explicitly stated 
developed different track concentrating theory abduction 
approach advantages poole 
impose constraints representation language 
probabilistic dependencies directly represented language poole language indirectly specified special predicates rules 
probabilistic independence assumption intuitively appealing reflects causality domain 
apt bezem 
acyclic programs 
new generation computing pages sept 
bacchus 
order probability logic construction bayesian networks 
proceedings ninth conference uncertainty artificial intelligence pages july 
blair subrahmanian 
paraconsistent logic programming 
theoretical computer science pages 

breese 
construction belief decision networks 
computational intelligence 

parameter adjustment bayes networks 
generalized noisy gate 
proceedings ninth conference uncertainty artificial intelligence pages washington july 
fitting 
bilattices semantics logic programming 
journal logic programming 
gelder ross schlipf 
founded semantics general logic programs 
jacm pages july 
goldman charniak 
language construction belief networks 
ieee transactions pattern analysis machine intelligence march 
haddawy 
generating bayesian networks probability logic knowledge bases 
proceedings tenth conference uncertainty artificial intelligence pages seattle july 
heckerman wellman 
bayesian networks 
communications acm march 
kifer 
theory generalized annotated logic programs applications 
journal logic programming pages 
lloyd 
foundation logic programming 
second edition 
springer verlag 
raymond ng 
semantics consistency empirical databases 
proceedings international conference logic programming pages 
raymond ng subrahmanian 
semantical framework supporting subjective conditional probability deductive databases 
proceedings international conference logic programming pages 
raymond ng subrahmanian 
probabilistic logic programming 
information computation 
ngo haddawy 
theoretical framework context sensitive temporal probability model construction application plan projection 
proceedings eleventh conference uncertainty artificial intelligence pages august 
ngo peter haddawy 
plan projection deduction plan generation abduction context sensitive temporal probability logic 
submitted aips 
pearl 
probabilistic reasoning intelligent systems networks plausible inference 
morgan kaufmann san mateo ca 
poole :10.1.1.50.603
probabilistic horn abduction bayesian networks 
artificial intelligence november 
srinivas 
generalization noisy model 
uai pages july 
van emden quantitative deduction fixpoint theory 
journal logic programming pages 
wellman breese goldman 
knowledge bases decision models 
knowledge engineering review 
